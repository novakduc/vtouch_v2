

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb  7 03:38:49 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=2
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=2
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=2
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1,inline
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1,inline
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=2
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=2
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=2,class=CODE,delta=1
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=4,class=CODE,delta=1
   169                           	psect	text147,global,reloc=2,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1
   172                           	psect	text150,global,reloc=4,class=CODE,delta=1
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=2,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=4,class=CODE,delta=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1
   184                           	psect	text162,global,reloc=2,class=CODE,delta=1
   185                           	psect	text163,global,reloc=2,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1,group=1
   187                           	psect	text165,global,reloc=4,class=CODE,delta=1
   188                           	psect	text166,global,reloc=2,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1
   190                           	psect	text168,global,reloc=4,class=CODE,delta=1
   191                           	psect	text169,global,reloc=4,class=CODE,delta=1
   192                           	psect	text170,global,reloc=2,class=CODE,delta=1
   193                           	psect	text171,global,reloc=2,class=CODE,delta=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1
   195                           	psect	text173,global,reloc=4,class=CODE,delta=1
   196                           	psect	text174,global,reloc=4,class=CODE,delta=1
   197                           	psect	text175,global,reloc=2,class=CODE,delta=1
   198                           	psect	text176,global,reloc=4,class=CODE,delta=1
   199                           	psect	text177,global,reloc=2,class=CODE,delta=1
   200                           	psect	text178,global,reloc=4,class=CODE,delta=1
   201                           	psect	text179,global,reloc=2,class=CODE,delta=1
   202                           	psect	text180,global,reloc=4,class=CODE,delta=1
   203                           	psect	text181,global,reloc=2,class=CODE,delta=1
   204                           	psect	text182,global,reloc=2,class=CODE,delta=1
   205                           	psect	text183,global,reloc=4,class=CODE,delta=1
   206                           	psect	text184,global,reloc=4,class=CODE,delta=1
   207                           	psect	text185,global,reloc=4,class=CODE,delta=1
   208                           	psect	text186,global,reloc=4,class=CODE,delta=1
   209                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   210                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   211                           	psect	text187,global,reloc=4,class=CODE,delta=1
   212                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   213                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   214  0000                     
   215                           ; Version 2.10
   216                           ; Generated 31/07/2019 GMT
   217                           ; 
   218                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   219                           ; All rights reserved.
   220                           ; 
   221                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   222                           ; 
   223                           ; Redistribution and use in source and binary forms, with or without modification, are
   224                           ; permitted provided that the following conditions are met:
   225                           ; 
   226                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   227                           ;        conditions and the following disclaimer.
   228                           ; 
   229                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   230                           ;        of conditions and the following disclaimer in the documentation and/or other
   231                           ;        materials provided with the distribution.
   232                           ; 
   233                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   234                           ;        software without specific prior written permission.
   235                           ; 
   236                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   237                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   238                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   239                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   240                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   241                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   242                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   243                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   244                           ; 
   245                           ; 
   246                           ; Code-generator required, PIC18F57K42 Definitions
   247                           ; 
   248                           ; SFR Addresses
   249  0000                     
   250 ;;_main$3790	offset	0
   251 ;;_main$3786	offset	2
   252 ;;_esr_temp	offset	4
   253 ;;_i_esr	offset	8
   254 ;;_shape	offset	10
   255 ;;_inp_index	offset	11
   256 ;;_k	offset	12
   257 ;;_j	offset	13
   258 ;;_i	offset	14
   259 ;;_mode	offset	15
   260 ;;_i_ror	offset	16
   261 ;;_s	offset=-2 (param)
   262 ;;_voltage	offset=-4 (param)
   263 ;;_voltage	offset=-4 (param)
   264 ;;_voltage	offset=-4 (param)
   265 ;;_set	offset=-1 (param)
   266 ;;_data	offset=-1 (param)
   267 ;;_cmd	offset=-1 (param)
   268 ;;_cmd	offset=-1 (param)
   269 ;;_data	offset=-1 (param)
   270 ;;__this	offset=-2 (param)
   271 ;;_soc	offset	0
   272 ;;_slot	offset	2
   273 ;;_cvoltage	offset=-4 (param)
   274 ;;_h	offset=-2 (param)
   275 ;;_h	offset=-2 (param)
   276 ;;_fsm	offset=-1 (param)
   277 ;;_mode	offset=-1 (param)
   278 ;;_mode	offset=-1 (param)
   279 ;;_cmd	offset=-1 (param)
   280 ;;_x	offset	0
   281 ;;_channel	offset=-1 (param)
   282 ;;_c	offset	0
   283 ;;_shape	offset=-1 (param)
   284 ;;_reset	offset=-2 (param)
   285 ;;_i	offset=-1 (param)
   286 ;;_a200	offset	0
   287 ;;_a100	offset	2
   288 ;;_mode	offset=-1 (param)
   289 ;;_value	offset=-2 (param)
   290 ;;_window	offset=-4 (param)
   291 ;;_standard	offset=-6 (param)
   292 ;;_i	offset	0
   293 ;;_h	offset=-2 (param)
   294 ;;_flipper	offset=-1 (param)
   295 ;;_f	offset	0
   296 ;;_ap	offset	6
   297 ;;_s	offset=-3 (param)
   298 ;;_fmt	offset=-5 (param)
   299 ;;_line	offset=-1 (param)
   300 ;;_vterm	offset=-2 (param)
   301 ;;_numMilliseconds	offset=-2 (param)
   302 ;;_vterm	offset=-1 (param)
   303 ;;_row	offset	0
   304 ;;_r	offset=-1 (param)
   305 ;;_c	offset=-2 (param)
   306 ;;_strPtr	offset=-4 (param)
   307 ;;_strPtr	offset=-1 (param)
   308 ;;_delay	offset=-4 (param)
   309 ;;_strPtr	offset=-1 (param)
   310 ;;_strPtr	offset=-2 (param)
   311 ;;__this	offset=-2 (param)
   312 ;;_clearBuffer	offset=-3 (param)
   313 ;;_s	offset	0
   314 ;;_k	offset	2
   315 ;;_dest	offset=-2 (param)
   316 ;;_c	offset=-4 (param)
   317 ;;_n	offset=-6 (param)
   318 ;;_ap	offset	0
   319 ;;_fmt	offset=-3 (param)
   320 ;;_cfmt	offset	0
   321 ;;_fp	offset=-2 (param)
   322 ;;_fmt	offset=-4 (param)
   323 ;;_ap	offset=-6 (param)
   324 ;;_vfpfcnvrt$5911	offset	0
   325 ;;_vfpfcnvrt$5922	offset	2
   326 ;;_vfpfcnvrt$5910	offset	4
   327 ;;_llu	offset	6
   328 ;;_ll	offset	14
   329 ;;_f	offset	22
   330 ;;_ct	offset	26
   331 ;;_cp	offset	29
   332 ;;_c	offset	31
   333 ;;_fp	offset=-2 (param)
   334 ;;_fmt	offset=-4 (param)
   335 ;;_ap	offset=-6 (param)
   336 ;;_xtoa$5896	offset	0
   337 ;;_xtoa$5895	offset	2
   338 ;;_n	offset	4
   339 ;;_c	offset	12
   340 ;;_i	offset	14
   341 ;;_w	offset	16
   342 ;;_p	offset	18
   343 ;;_fp	offset=-2 (param)
   344 ;;_d	offset=-10 (param)
   345 ;;_x	offset=-11 (param)
   346 ;;_toupper$6702	offset	0
   347 ;;_c	offset=-2 (param)
   348 ;;_c	offset=-2 (param)
   349 ;;_c	offset=-2 (param)
   350 ;;_n	offset	0
   351 ;;_i	offset	8
   352 ;;_w	offset	10
   353 ;;_p	offset	12
   354 ;;_fp	offset=-2 (param)
   355 ;;_d	offset=-10 (param)
   356 ;;_counter	offset	0
   357 ;;_dividend	offset=-8 (param)
   358 ;;_divisor	offset=-16 (param)
   359 ;;_quotient	offset	0
   360 ;;_counter	offset	8
   361 ;;_dividend	offset=-8 (param)
   362 ;;_divisor	offset=-16 (param)
   363 ;;_r	offset	0
   364 ;;_l	offset	2
   365 ;;__l	offset=-2 (param)
   366 ;;__r	offset=-4 (param)
   367 ;;_n	offset=-6 (param)
   368 ;;_nuls	offset	0
   369 ;;_l	offset	7
   370 ;;_p	offset	9
   371 ;;_cp	offset	11
   372 ;;_w	offset	13
   373 ;;_i	offset	15
   374 ;;_fp	offset=-2 (param)
   375 ;;_s	offset=-4 (param)
   376 ;;_efgtoa$5868	offset	0
   377 ;;_efgtoa$5867	offset	2
   378 ;;_efgtoa$5866	offset	4
   379 ;;_efgtoa$5862	offset	6
   380 ;;_efgtoa$5858	offset	8
   381 ;;_efgtoa$5857	offset	10
   382 ;;_u	offset	12
   383 ;;_g	offset	16
   384 ;;_l	offset	20
   385 ;;_h	offset	24
   386 ;;_ou	offset	28
   387 ;;_n	offset	32
   388 ;;_e	offset	34
   389 ;;_i	offset	36
   390 ;;_w	offset	38
   391 ;;_p	offset	40
   392 ;;_sign	offset	42
   393 ;;_d	offset	44
   394 ;;_ne	offset	46
   395 ;;_m	offset	48
   396 ;;_pp	offset	50
   397 ;;_t	offset	52
   398 ;;_mode	offset	54
   399 ;;_nmode	offset	55
   400 ;;_fp	offset=-2 (param)
   401 ;;_f	offset=-6 (param)
   402 ;;_c	offset=-7 (param)
   403 ;;_tolower$6687	offset	0
   404 ;;_c	offset=-2 (param)
   405 ;;_c	offset=-2 (param)
   406 ;;_d	offset	0
   407 ;;_s	offset	2
   408 ;;_dest	offset=-2 (param)
   409 ;;_src	offset=-4 (param)
   410 ;;_u	offset	0
   411 ;;_m	offset	4
   412 ;;_e	offset	8
   413 ;;_x	offset=-4 (param)
   414 ;;_u	offset	0
   415 ;;_e	offset	4
   416 ;;_x	offset=-4 (param)
   417 ;;_exp1	offset	0
   418 ;;_sign1	offset	1
   419 ;;_f1	offset=-4 (param)
   420 ;;_f1	offset=-4 (param)
   421 ;;_ff1	offset=-4 (param)
   422 ;;_ff2	offset=-8 (param)
   423 ;;_sign	offset	0
   424 ;;_counter	offset	1
   425 ;;_dividend	offset=-2 (param)
   426 ;;_divisor	offset=-4 (param)
   427 ;;_quotient	offset	0
   428 ;;_sign	offset	2
   429 ;;_counter	offset	3
   430 ;;_dividend	offset=-2 (param)
   431 ;;_divisor	offset=-4 (param)
   432 ;;_dtoa$5834	offset	0
   433 ;;_n	offset	2
   434 ;;_i	offset	10
   435 ;;_s	offset	12
   436 ;;_w	offset	14
   437 ;;_p	offset	16
   438 ;;_fp	offset=-2 (param)
   439 ;;_d	offset=-10 (param)
   440 ;;_a	offset=-2 (param)
   441 ;;_sign	offset	0
   442 ;;_counter	offset	1
   443 ;;_dividend	offset=-8 (param)
   444 ;;_divisor	offset=-16 (param)
   445 ;;_quotient	offset	0
   446 ;;_sign	offset	8
   447 ;;_counter	offset	9
   448 ;;_dividend	offset=-8 (param)
   449 ;;_divisor	offset=-16 (param)
   450 ;;_w	offset	0
   451 ;;_fp	offset=-2 (param)
   452 ;;_c	offset=-3 (param)
   453 ;;_w	offset	0
   454 ;;_i	offset	2
   455 ;;_fp	offset=-2 (param)
   456 ;;_buf	offset=-4 (param)
   457 ;;_p	offset=-6 (param)
   458 ;;_a	offset	0
   459 ;;_s	offset=-2 (param)
   460 ;;_i	offset	0
   461 ;;_c	offset	2
   462 ;;_s	offset=-2 (param)
   463 ;;_fp	offset=-4 (param)
   464 ;;_c	offset=-2 (param)
   465 ;;_fp	offset=-4 (param)
   466 ;;_c	offset=-1 (param)
   467 ;;__this	offset=-2 (param)
   468 ;;_c	offset=-3 (param)
   469 ;;_atoi$6418	offset	0
   470 ;;_atoi$6416	offset	2
   471 ;;_atoi$6417	offset	4
   472 ;;_n	offset	5
   473 ;;_neg	offset	7
   474 ;;_s	offset=-2 (param)
   475 ;;_isspace$6467	offset	0
   476 ;;_c	offset=-2 (param)
   477 ;;_c	offset=-2 (param)
   478 ;;_vterm	offset=-1 (param)
   479 ;;_new_response_info	offset=-1 (param)
   480 ;;_new_response_info	offset=-1 (param)
   481 ;;_level	offset=-2 (param)
   482 ;;_dutyValue	offset=-2 (param)
   483 ;;_timer	offset=-1 (param)
   484 ;;_timer	offset=-1 (param)
   485 ;;_count	offset=-3 (param)
   486 ;;_h	offset=-2 (param)
   487 ;;_u	offset	0
   488 ;;_x	offset=-4 (param)
   489 ;;_chan	offset=-1 (param)
   490 ;;_to_what	offset=-2 (param)
   491 ;;_u	offset	0
   492 ;;_s	offset=-2 (param)
   493 ;;_index	offset=-1 (param)
   494 ;;_arg	offset	0
   495 ;;_exp	offset	4
   496 ;;_sign	offset=-1 (param)
   497 ;;_val	offset=-5 (param)
   498 ;;_grs	offset	0
   499 ;;_rem	offset	4
   500 ;;_new_exp	offset	8
   501 ;;_aexp	offset	10
   502 ;;_bexp	offset	11
   503 ;;_sign	offset	12
   504 ;;_b	offset=-4 (param)
   505 ;;_a	offset=-8 (param)
   506 ;;_ff1	offset=-4 (param)
   507 ;;_ff2	offset=-8 (param)
   508 ;;_lp_speed	offset	0
   509 ;;_new	offset=-4 (param)
   510 ;;_bn	offset=-5 (param)
   511 ;;_slow	offset=-6 (param)
   512 ;;_b	offset=-4 (param)
   513 ;;_a	offset=-8 (param)
   514 ;;_grs	offset	0
   515 ;;_bexp	offset	1
   516 ;;_aexp	offset	2
   517 ;;_signs	offset	3
   518 ;;_b	offset=-4 (param)
   519 ;;_a	offset=-8 (param)
   520 ;;_prod	offset	0
   521 ;;_grs	offset	4
   522 ;;_temp	offset	8
   523 ;;_bexp	offset	10
   524 ;;_aexp	offset	11
   525 ;;_sign	offset	12
   526 ;;_b	offset=-4 (param)
   527 ;;_a	offset=-8 (param)
   528 ;;_InterruptHandler	offset=-3 (param)
   529 ;;_InterruptHandler	offset=-3 (param)
   530 ;;_InterruptHandler	offset=-3 (param)
   531 ;;_InterruptHandler	offset=-3 (param)
   532 ;;_InterruptHandler	offset=-3 (param)
   533 ;;_InterruptHandler	offset=-3 (param)
   534 ;;_state	offset	0
   535 ;;_InterruptHandler	offset=-3 (param)
   536 ;;_InterruptHandler	offset=-3 (param)
   537 ;;_InterruptHandler	offset=-3 (param)
   538 ;;_InterruptHandler	offset=-3 (param)
   539 ;;_i	offset	0
   540 ;;_sw_value	offset	1
   541 ;;_timerVal	offset=-2 (param)
   542 ;;_light	offset	0
   543 ;;_mode	offset=-1 (param)
   544 ;;_chan	offset=-1 (param)
   545 ;;_to_what	offset=-2 (param)
   546 ;;_u	offset	0
   547 ;;_s	offset=-2 (param)
   548 ;;_index	offset=-1 (param)
   549 ;;_arg	offset	0
   550 ;;_exp	offset	4
   551 ;;_sign	offset=-1 (param)
   552 ;;_val	offset=-5 (param)
   553 ;;_b	offset=-4 (param)
   554 ;;_a	offset=-8 (param)
   555 ;;_grs	offset	0
   556 ;;_bexp	offset	1
   557 ;;_aexp	offset	2
   558 ;;_signs	offset	3
   559 ;;_b	offset=-4 (param)
   560 ;;_a	offset=-8 (param)
   561 ;;_prod	offset	0
   562 ;;_grs	offset	4
   563 ;;_temp	offset	8
   564 ;;_bexp	offset	10
   565 ;;_aexp	offset	11
   566 ;;_sign	offset	12
   567 ;;_b	offset=-4 (param)
   568 ;;_a	offset=-8 (param)
   569 ;;_grs	offset	0
   570 ;;_rem	offset	4
   571 ;;_new_exp	offset	8
   572 ;;_aexp	offset	10
   573 ;;_bexp	offset	11
   574 ;;_sign	offset	12
   575 ;;_b	offset=-4 (param)
   576 ;;_a	offset=-8 (param)
   577 ;;_ff1	offset=-4 (param)
   578 ;;_ff2	offset=-8 (param)
   579 ;;_timerVal	offset=-2 (param)
   580 ;;_adj	offset	0
   581 ;;_log_ptr	offset	4
   582 ;;_f	offset	0
   583 ;;_ap	offset	6
   584 ;;_s	offset=-3 (param)
   585 ;;_fmt	offset=-5 (param)
   586 ;;_cfmt	offset	0
   587 ;;_fp	offset=-2 (param)
   588 ;;_fmt	offset=-4 (param)
   589 ;;_ap	offset=-6 (param)
   590 ;;_vfpfcnvrt$5911	offset	0
   591 ;;_vfpfcnvrt$5922	offset	2
   592 ;;_vfpfcnvrt$5910	offset	4
   593 ;;_llu	offset	6
   594 ;;_ll	offset	14
   595 ;;_f	offset	22
   596 ;;_ct	offset	26
   597 ;;_cp	offset	29
   598 ;;_c	offset	31
   599 ;;_fp	offset=-2 (param)
   600 ;;_fmt	offset=-4 (param)
   601 ;;_ap	offset=-6 (param)
   602 ;;_xtoa$5896	offset	0
   603 ;;_xtoa$5895	offset	2
   604 ;;_n	offset	4
   605 ;;_c	offset	12
   606 ;;_i	offset	14
   607 ;;_w	offset	16
   608 ;;_p	offset	18
   609 ;;_fp	offset=-2 (param)
   610 ;;_d	offset=-10 (param)
   611 ;;_x	offset=-11 (param)
   612 ;;_toupper$6702	offset	0
   613 ;;_c	offset=-2 (param)
   614 ;;_c	offset=-2 (param)
   615 ;;_c	offset=-2 (param)
   616 ;;_n	offset	0
   617 ;;_i	offset	8
   618 ;;_w	offset	10
   619 ;;_p	offset	12
   620 ;;_fp	offset=-2 (param)
   621 ;;_d	offset=-10 (param)
   622 ;;_counter	offset	0
   623 ;;_dividend	offset=-8 (param)
   624 ;;_divisor	offset=-16 (param)
   625 ;;_quotient	offset	0
   626 ;;_counter	offset	8
   627 ;;_dividend	offset=-8 (param)
   628 ;;_divisor	offset=-16 (param)
   629 ;;_r	offset	0
   630 ;;_l	offset	2
   631 ;;__l	offset=-2 (param)
   632 ;;__r	offset=-4 (param)
   633 ;;_n	offset=-6 (param)
   634 ;;_nuls	offset	0
   635 ;;_l	offset	7
   636 ;;_p	offset	9
   637 ;;_cp	offset	11
   638 ;;_w	offset	13
   639 ;;_i	offset	15
   640 ;;_fp	offset=-2 (param)
   641 ;;_s	offset=-4 (param)
   642 ;;_efgtoa$5868	offset	0
   643 ;;_efgtoa$5867	offset	2
   644 ;;_efgtoa$5866	offset	4
   645 ;;_efgtoa$5862	offset	6
   646 ;;_efgtoa$5858	offset	8
   647 ;;_efgtoa$5857	offset	10
   648 ;;_u	offset	12
   649 ;;_g	offset	16
   650 ;;_l	offset	20
   651 ;;_h	offset	24
   652 ;;_ou	offset	28
   653 ;;_n	offset	32
   654 ;;_e	offset	34
   655 ;;_i	offset	36
   656 ;;_w	offset	38
   657 ;;_p	offset	40
   658 ;;_sign	offset	42
   659 ;;_d	offset	44
   660 ;;_ne	offset	46
   661 ;;_m	offset	48
   662 ;;_pp	offset	50
   663 ;;_t	offset	52
   664 ;;_mode	offset	54
   665 ;;_nmode	offset	55
   666 ;;_fp	offset=-2 (param)
   667 ;;_f	offset=-6 (param)
   668 ;;_c	offset=-7 (param)
   669 ;;_tolower$6687	offset	0
   670 ;;_c	offset=-2 (param)
   671 ;;_c	offset=-2 (param)
   672 ;;_d	offset	0
   673 ;;_s	offset	2
   674 ;;_dest	offset=-2 (param)
   675 ;;_src	offset=-4 (param)
   676 ;;_u	offset	0
   677 ;;_m	offset	4
   678 ;;_e	offset	8
   679 ;;_x	offset=-4 (param)
   680 ;;_u	offset	0
   681 ;;_e	offset	4
   682 ;;_x	offset=-4 (param)
   683 ;;_exp1	offset	0
   684 ;;_sign1	offset	1
   685 ;;_f1	offset=-4 (param)
   686 ;;_f1	offset=-4 (param)
   687 ;;_ff1	offset=-4 (param)
   688 ;;_ff2	offset=-8 (param)
   689 ;;_sign	offset	0
   690 ;;_counter	offset	1
   691 ;;_dividend	offset=-2 (param)
   692 ;;_divisor	offset=-4 (param)
   693 ;;_quotient	offset	0
   694 ;;_sign	offset	2
   695 ;;_counter	offset	3
   696 ;;_dividend	offset=-2 (param)
   697 ;;_divisor	offset=-4 (param)
   698 ;;_dtoa$5834	offset	0
   699 ;;_n	offset	2
   700 ;;_i	offset	10
   701 ;;_s	offset	12
   702 ;;_w	offset	14
   703 ;;_p	offset	16
   704 ;;_fp	offset=-2 (param)
   705 ;;_d	offset=-10 (param)
   706 ;;_a	offset=-2 (param)
   707 ;;_sign	offset	0
   708 ;;_counter	offset	1
   709 ;;_dividend	offset=-8 (param)
   710 ;;_divisor	offset=-16 (param)
   711 ;;_quotient	offset	0
   712 ;;_sign	offset	8
   713 ;;_counter	offset	9
   714 ;;_dividend	offset=-8 (param)
   715 ;;_divisor	offset=-16 (param)
   716 ;;_w	offset	0
   717 ;;_fp	offset=-2 (param)
   718 ;;_c	offset=-3 (param)
   719 ;;_w	offset	0
   720 ;;_i	offset	2
   721 ;;_fp	offset=-2 (param)
   722 ;;_buf	offset=-4 (param)
   723 ;;_p	offset=-6 (param)
   724 ;;_a	offset	0
   725 ;;_s	offset=-2 (param)
   726 ;;_i	offset	0
   727 ;;_c	offset	2
   728 ;;_s	offset=-2 (param)
   729 ;;_fp	offset=-4 (param)
   730 ;;_c	offset=-2 (param)
   731 ;;_fp	offset=-4 (param)
   732 ;;_c	offset=-1 (param)
   733 ;;__this	offset=-2 (param)
   734 ;;_c	offset=-3 (param)
   735 ;;_atoi$6418	offset	0
   736 ;;_atoi$6416	offset	2
   737 ;;_atoi$6417	offset	4
   738 ;;_n	offset	5
   739 ;;_neg	offset	7
   740 ;;_s	offset=-2 (param)
   741 ;;_isspace$6467	offset	0
   742 ;;_c	offset=-2 (param)
   743 ;;_c	offset=-2 (param)
   744 ;;_dsize	offset=-2 (param)
   745 ;;_u	offset	0
   746 ;;_x	offset=-4 (param)
   747 ;;_f1p	offset=-2 (param)
   748 ;;_f2	offset=-6 (param)
   749 ;;_timer	offset=-1 (param)
   750 ;;_count	offset=-3 (param)
   751 ;;_channel	offset=-1 (param)
   752 ;;_i	offset	0
   753                           
   754                           	psect	idataBIGRAM
   755  016F04                     __pidataBIGRAM:
   756                           	opt callstack 0
   757                           
   758                           ;initializer for _port_data
   759  016F04  FF                 	db	255
   760  016F05  00                 	db	0
   761  016F06  FF                 	db	255
   762  016F07  00                 	db	0
   763  016F08  FF                 	db	255
   764  016F09  00                 	db	0
   765  016F0A  FF                 	db	255
   766  016F0B  00                 	db	0
   767  016F0C  FF                 	db	255
   768  016F0D  00                 	db	0
   769  016F0E  FF                 	db	255
   770  016F0F  00                 	db	0
   771  016F10  FF                 	db	255
   772  016F11  00                 	db	0
   773  016F12  FF                 	db	255
   774  016F13  00                 	db	0
   775  016F14  00                 	db	0
   776  016F15  00                 	db	0
   777  016F16  00                 	db	0
   778  016F17  00                 	db	0
   779  016F18  00                 	db	0
   780  016F19  00                 	db	0
   781  016F1A  00                 	db	0
   782  016F1B  00                 	db	0
   783  016F1C  00                 	db	0
   784  016F1D  00                 	db	0
   785  016F1E  00                 	db	0
   786  016F1F  00                 	db	0
   787  016F20  00                 	db	0
   788  016F21  00                 	db	0
   789  016F22  00                 	db	0
   790  016F23  00                 	db	0
   791  016F24  00                 	db	0
   792  016F25  00                 	db	0
   793  016F26  00                 	db	0
   794  016F27  00                 	db	0
   795  016F28  00                 	db	0
   796  016F29  00                 	db	0
   797  016F2A  00                 	db	0
   798  016F2B  00                 	db	0
   799  016F2C  00                 	db	0
   800  016F2D  00                 	db	0
   801  016F2E  00                 	db	0
   802  016F2F  00                 	db	0
   803  016F30  00                 	db	0
   804  016F31  00                 	db	0
   805  016F32  00                 	db	0
   806  016F33  00                 	db	0
   807  016F34  00                 	db	0
   808  016F35  00                 	db	0
   809  016F36  00                 	db	0
   810  016F37  00                 	db	0
   811  016F38  00                 	db	0
   812  016F39  00                 	db	0
   813  016F3A  00                 	db	0
   814  016F3B  00                 	db	0
   815  016F3C  00                 	db	0
   816  016F3D  00                 	db	0
   817  016F3E  00                 	db	0
   818  016F3F  00                 	db	0
   819  016F40  00                 	db	0
   820  016F41  00                 	db	0
   821  016F42  00                 	db	0
   822  016F43  00                 	db	0
   823  016F44  00                 	db	0
   824  016F45  00                 	db	0
   825  016F46  00                 	db	0
   826  016F47  00                 	db	0
   827  016F48  00                 	db	0
   828  016F49  00                 	db	0
   829  016F4A  00                 	db	0
   830  016F4B  00                 	db	0
   831  016F4C  00                 	db	0
   832  016F4D  00                 	db	0
   833  016F4E  00                 	db	0
   834  016F4F  00                 	db	0
   835  016F50  00                 	db	0
   836  016F51  00                 	db	0
   837  016F52  00                 	db	0
   838  016F53  00                 	db	0
   839  016F54  00                 	db	0
   840  016F55  00                 	db	0
   841  016F56  00                 	db	0
   842  016F57  00                 	db	0
   843  016F58  00                 	db	0
   844  016F59  00                 	db	0
   845  016F5A  00                 	db	0
   846  016F5B  00                 	db	0
   847  016F5C  00                 	db	0
   848  016F5D  00                 	db	0
   849  016F5E  00                 	db	0
   850  016F5F  00                 	db	0
   851  016F60  00                 	db	0
   852  016F61  00                 	db	0
   853  016F62  00                 	db	0
   854  016F63  00                 	db	0
   855  016F64  00                 	db	0
   856  016F65  00                 	db	0
   857  016F66  00                 	db	0
   858  016F67  00                 	db	0
   859  016F68  00                 	db	0
   860  016F69  00                 	db	0
   861  016F6A  00                 	db	0
   862  016F6B  00                 	db	0
   863  016F6C  00                 	db	0
   864  016F6D  00                 	db	0
   865  016F6E  00                 	db	0
   866  016F6F  00                 	db	0
   867  016F70  00                 	db	0
   868  016F71  00                 	db	0
   869  016F72  00                 	db	0
   870  016F73  00                 	db	0
   871  016F74  00                 	db	0
   872  016F75  00                 	db	0
   873  016F76  00                 	db	0
   874  016F77  00                 	db	0
   875  016F78  00                 	db	0
   876  016F79  00                 	db	0
   877  016F7A  00                 	db	0
   878  016F7B  00                 	db	0
   879  016F7C  00                 	db	0
   880  016F7D  00                 	db	0
   881  016F7E  00                 	db	0
   882  016F7F  00                 	db	0
   883  016F80  00                 	db	0
   884  016F81  00                 	db	0
   885  016F82  00                 	db	0
   886  016F83  00                 	db	0
   887  016F84  00                 	db	0
   888  016F85  00                 	db	0
   889  016F86  00                 	db	0
   890  016F87  00                 	db	0
   891  016F88  00                 	db	0
   892  016F89  00                 	db	0
   893  016F8A  00                 	db	0
   894  016F8B  00                 	db	0
   895  016F8C  00                 	db	0
   896  016F8D  00                 	db	0
   897  016F8E  00                 	db	0
   898  016F8F  00                 	db	0
   899  016F90  00                 	db	0
   900  016F91  00                 	db	0
   901  016F92  00                 	db	0
   902  016F93  00                 	db	0
   903  016F94  00                 	db	0
   904  016F95  00                 	db	0
   905  016F96  00                 	db	0
   906  016F97  00                 	db	0
   907  016F98  00                 	db	0
   908  016F99  00                 	db	0
   909  016F9A  00                 	db	0
   910  016F9B  00                 	db	0
   911  016F9C  00                 	db	0
   912  016F9D  00                 	db	0
   913  016F9E  00                 	db	0
   914  016F9F  00                 	db	0
   915  016FA0  00                 	db	0
   916  016FA1  00                 	db	0
   917  016FA2  00                 	db	0
   918  016FA3  00                 	db	0
   919  016FA4  00                 	db	0
   920  016FA5  00                 	db	0
   921  016FA6  00                 	db	0
   922  016FA7  00                 	db	0
   923  016FA8  00                 	db	0
   924  016FA9  00                 	db	0
   925  016FAA  00                 	db	0
   926  016FAB  00                 	db	0
   927  016FAC  00                 	db	0
   928  016FAD  00                 	db	0
   929  016FAE  00                 	db	0
   930  016FAF  00                 	db	0
   931  016FB0  00                 	db	0
   932  016FB1  00                 	db	0
   933  016FB2  00                 	db	0
   934  016FB3  00                 	db	0
   935  016FB4  00                 	db	0
   936  016FB5  00                 	db	0
   937  016FB6  00                 	db	0
   938  016FB7  00                 	db	0
   939  016FB8  00                 	db	0
   940  016FB9  00                 	db	0
   941  016FBA  00                 	db	0
   942  016FBB  00                 	db	0
   943  016FBC  00                 	db	0
   944  016FBD  00                 	db	0
   945  016FBE  00                 	db	0
   946  016FBF  00                 	db	0
   947  016FC0  00                 	db	0
   948  016FC1  00                 	db	0
   949  016FC2  00                 	db	0
   950  016FC3  00                 	db	0
   951  016FC4  00                 	db	0
   952  016FC5  00                 	db	0
   953  016FC6  00                 	db	0
   954  016FC7  00                 	db	0
   955  016FC8  00                 	db	0
   956  016FC9  00                 	db	0
   957  016FCA  00                 	db	0
   958  016FCB  00                 	db	0
   959  016FCC  00                 	db	0
   960  016FCD  00                 	db	0
   961  016FCE  00                 	db	0
   962  016FCF  00                 	db	0
   963  016FD0  00                 	db	0
   964  016FD1  00                 	db	0
   965  016FD2  00                 	db	0
   966  016FD3  00                 	db	0
   967  016FD4  00                 	db	0
   968  016FD5  00                 	db	0
   969  016FD6  00                 	db	0
   970  016FD7  00                 	db	0
   971  016FD8  00                 	db	0
   972  016FD9  00                 	db	0
   973  016FDA  00                 	db	0
   974  016FDB  00                 	db	0
   975  016FDC  00                 	db	0
   976  016FDD  00                 	db	0
   977  016FDE  00                 	db	0
   978  016FDF  00                 	db	0
   979  016FE0  00                 	db	0
   980  016FE1  00                 	db	0
   981  016FE2  00                 	db	0
   982  016FE3  00                 	db	0
   983  016FE4  00                 	db	0
   984  016FE5  00                 	db	0
   985  016FE6  00                 	db	0
   986  016FE7  00                 	db	0
   987  016FE8  00                 	db	0
   988  016FE9  00                 	db	0
   989  016FEA  00                 	db	0
   990  016FEB  00                 	db	0
   991  016FEC  00                 	db	0
   992  016FED  00                 	db	0
   993  016FEE  00                 	db	0
   994  016FEF  00                 	db	0
   995  016FF0  00                 	db	0
   996  016FF1  00                 	db	0
   997  016FF2  00                 	db	0
   998  016FF3  00                 	db	0
   999  016FF4  00                 	db	0
  1000  016FF5  00                 	db	0
  1001  016FF6  00                 	db	0
  1002  016FF7  00                 	db	0
  1003  016FF8  00                 	db	0
  1004  016FF9  00                 	db	0
  1005  016FFA  00                 	db	0
  1006  016FFB  00                 	db	0
  1007  016FFC  00                 	db	0
  1008  016FFD  00                 	db	0
  1009  016FFE  00                 	db	0
  1010  016FFF  00                 	db	0
  1011  017000  00                 	db	0
  1012  017001  00                 	db	0
  1013  017002  00                 	db	0
  1014  017003  00                 	db	0
  1015  017004  00                 	db	0
  1016  017005  00                 	db	0
  1017  017006  00                 	db	0
  1018  017007  00                 	db	0
  1019  017008  00                 	db	0
  1020  017009  00                 	db	0
  1021  01700A  00                 	db	0
  1022  01700B  00                 	db	0
  1023  01700C  00                 	db	0
  1024  01700D  00                 	db	0
  1025  01700E  00                 	db	0
  1026  01700F  00                 	db	0
  1027  017010  00                 	db	0
  1028  017011  00                 	db	0
  1029  017012  00                 	db	0
  1030  017013  00                 	db	0
  1031  017014  00                 	db	0
  1032  017015  00                 	db	0
  1033  017016  00                 	db	0
  1034  017017  00                 	db	0
  1035  017018  00                 	db	0
  1036  017019  00                 	db	0
  1037  01701A  00                 	db	0
  1038  01701B  00                 	db	0
  1039  01701C  00                 	db	0
  1040  01701D  00                 	db	0
  1041  01701E  00                 	db	0
  1042  01701F  00                 	db	0
  1043  017020  00                 	db	0
  1044  017021  00                 	db	0
  1045  017022  00                 	db	0
  1046  017023  00                 	db	0
  1047  017024  00                 	db	0
  1048  017025  00                 	db	0
  1049  017026  00                 	db	0
  1050  017027  00                 	db	0
  1051  017028  00                 	db	0
  1052  017029  00                 	db	0
  1053  01702A  00                 	db	0
  1054  01702B  00                 	db	0
  1055  01702C  00                 	db	0
  1056  01702D  00                 	db	0
  1057  01702E  00                 	db	0
  1058  01702F  00                 	db	0
  1059  017030  00                 	db	0
  1060  017031  00                 	db	0
  1061  017032  00                 	db	0
  1062  017033  00                 	db	0
  1063  017034  00                 	db	0
  1064  017035  00                 	db	0
  1065  017036  00                 	db	0
  1066  017037  00                 	db	0
  1067  017038  00                 	db	0
  1068  017039  00                 	db	0
  1069  01703A  00                 	db	0
  1070  01703B  00                 	db	0
  1071  01703C  00                 	db	0
  1072  01703D  00                 	db	0
  1073  01703E  00                 	db	0
  1074  01703F  00                 	db	0
  1075  017040  00                 	db	0
  1076  017041  00                 	db	0
  1077  017042  00                 	db	0
  1078  017043  00                 	db	0
  1079  017044  00                 	db	0
  1080  017045  00                 	db	0
  1081  017046  00                 	db	0
  1082  017047  00                 	db	0
  1083  017048  00                 	db	0
  1084  017049  00                 	db	0
  1085  01704A  00                 	db	0
  1086  01704B  00                 	db	0
  1087  01704C  00                 	db	0
  1088  01704D  00                 	db	0
  1089  01704E  00                 	db	0
  1090  01704F  00                 	db	0
  1091  017050  00                 	db	0
  1092  017051  00                 	db	0
  1093  017052  00                 	db	0
  1094  017053  00                 	db	0
  1095  017054  00                 	db	0
  1096  017055  00                 	db	0
  1097  017056  00                 	db	0
  1098  017057  00                 	db	0
  1099  017058  00                 	db	0
  1100  017059  00                 	db	0
  1101  01705A  00                 	db	0
  1102  01705B  00                 	db	0
  1103  01705C  00                 	db	0
  1104  01705D  00                 	db	0
  1105  01705E  00                 	db	0
  1106  01705F  00                 	db	0
  1107  017060  00                 	db	0
  1108  017061  00                 	db	0
  1109  017062  00                 	db	0
  1110  017063  00                 	db	0
  1111  017064  00                 	db	0
  1112  017065  00                 	db	0
  1113  017066  00                 	db	0
  1114  017067  00                 	db	0
  1115  017068  00                 	db	0
  1116  017069  00                 	db	0
  1117  01706A  00                 	db	0
  1118  01706B  00                 	db	0
  1119  01706C  00                 	db	0
  1120  01706D  00                 	db	0
  1121  01706E  00                 	db	0
  1122  01706F  00                 	db	0
  1123  017070  00                 	db	0
  1124  017071  00                 	db	0
  1125  017072  00                 	db	0
  1126  017073  00                 	db	0
  1127  017074  00                 	db	0
  1128  017075  00                 	db	0
  1129  017076  00                 	db	0
  1130  017077  00                 	db	0
  1131  017078  00                 	db	0
  1132  017079  00                 	db	0
  1133  01707A  00                 	db	0
  1134  01707B  00                 	db	0
  1135  01707C  00                 	db	0
  1136  01707D  00                 	db	0
  1137  01707E  00                 	db	0
  1138  01707F  00                 	db	0
  1139  017080  00                 	db	0
  1140  017081  00                 	db	0
  1141  017082  00                 	db	0
  1142  017083  00                 	db	0
  1143  017084  00                 	db	0
  1144  017085  00                 	db	0
  1145  017086  00                 	db	0
  1146  017087  00                 	db	0
  1147  017088  00                 	db	0
  1148  017089  00                 	db	0
  1149  01708A  00                 	db	0
  1150  01708B  00                 	db	0
  1151  01708C  00                 	db	0
  1152  01708D  00                 	db	0
  1153  01708E  00                 	db	0
  1154  01708F  00                 	db	0
  1155  017090  00                 	db	0
  1156  017091  00                 	db	0
  1157  017092  00                 	db	0
  1158  017093  00                 	db	0
  1159  017094  00                 	db	0
  1160  017095  00                 	db	0
  1161  017096  00                 	db	0
  1162  017097  00                 	db	0
  1163  017098  00                 	db	0
  1164  017099  00                 	db	0
  1165  01709A  00                 	db	0
  1166  01709B  00                 	db	0
  1167  01709C  00                 	db	0
  1168  01709D  00                 	db	0
  1169  01709E  00                 	db	0
  1170  01709F  00                 	db	0
  1171  0170A0  00                 	db	0
  1172  0170A1  00                 	db	0
  1173  0170A2  00                 	db	0
  1174  0170A3  00                 	db	0
  1175  0170A4  00                 	db	0
  1176  0170A5  00                 	db	0
  1177  0170A6  00                 	db	0
  1178  0170A7  00                 	db	0
  1179  0170A8  00                 	db	0
  1180  0170A9  00                 	db	0
  1181  0170AA  00                 	db	0
  1182  0170AB  00                 	db	0
  1183  0170AC  00                 	db	0
  1184  0170AD  00                 	db	0
  1185  0170AE  00                 	db	0
  1186  0170AF  00                 	db	0
  1187  0170B0  00                 	db	0
  1188  0170B1  00                 	db	0
  1189  0170B2  00                 	db	0
  1190  0170B3  00                 	db	0
  1191  0170B4  00                 	db	0
  1192  0170B5  00                 	db	0
  1193  0170B6  00                 	db	0
  1194  0170B7  00                 	db	0
  1195  0170B8  00                 	db	0
  1196  0170B9  00                 	db	0
  1197  0170BA  00                 	db	0
  1198  0170BB  00                 	db	0
  1199  0170BC  00                 	db	0
  1200  0170BD  00                 	db	0
  1201  0170BE  00                 	db	0
  1202  0170BF  00                 	db	0
  1203  0170C0  00                 	db	0
  1204  0170C1  00                 	db	0
  1205  0170C2  00                 	db	0
  1206  0170C3  00                 	db	0
  1207  0170C4  00                 	db	0
  1208  0170C5  00                 	db	0
  1209  0170C6  00                 	db	0
  1210  0170C7  00                 	db	0
  1211  0170C8  00                 	db	0
  1212  0170C9  00                 	db	0
  1213  0170CA  00                 	db	0
  1214  0170CB  00                 	db	0
  1215  0170CC  00                 	db	0
  1216  0170CD  00                 	db	0
  1217  0170CE  00                 	db	0
  1218  0170CF  00                 	db	0
  1219  0170D0  00                 	db	0
  1220  0170D1  00                 	db	0
  1221  0170D2  00                 	db	0
  1222  0170D3  00                 	db	0
  1223  0170D4  00                 	db	0
  1224  0170D5  00                 	db	0
  1225  0170D6  00                 	db	0
  1226  0170D7  00                 	db	0
  1227  0170D8  00                 	db	0
  1228  0170D9  00                 	db	0
  1229  0170DA  00                 	db	0
  1230  0170DB  00                 	db	0
  1231  0170DC  00                 	db	0
  1232  0170DD  00                 	db	0
  1233  0170DE  00                 	db	0
  1234  0170DF  00                 	db	0
  1235  0170E0  00                 	db	0
  1236  0170E1  00                 	db	0
  1237  0170E2  00                 	db	0
  1238  0170E3  00                 	db	0
  1239  0170E4  00                 	db	0
  1240  0170E5  00                 	db	0
  1241  0170E6  00                 	db	0
  1242  0170E7  00                 	db	0
  1243  0170E8  00                 	db	0
  1244  0170E9  00                 	db	0
  1245  0170EA  00                 	db	0
  1246  0170EB  00                 	db	0
  1247  0170EC  00                 	db	0
  1248  0170ED  00                 	db	0
  1249  0170EE  00                 	db	0
  1250  0170EF  00                 	db	0
  1251  0170F0  00                 	db	0
  1252  0170F1  00                 	db	0
  1253  0170F2  00                 	db	0
  1254  0170F3  00                 	db	0
  1255  0170F4  00                 	db	0
  1256  0170F5  00                 	db	0
  1257  0170F6  00                 	db	0
  1258  0170F7  00                 	db	0
  1259  0170F8  00                 	db	0
  1260  0170F9  00                 	db	0
  1261  0170FA  00                 	db	0
  1262  0170FB  00                 	db	0
  1263  0170FC  00                 	db	0
  1264  0170FD  00                 	db	0
  1265  0170FE  00                 	db	0
  1266  0170FF  00                 	db	0
  1267  017100  00                 	db	0
  1268  017101  00                 	db	0
  1269  017102  00                 	db	0
  1270  017103  00                 	db	0
  1271                           
  1272                           ;initializer for _C
  1273  017104  0000               	dw	0
  1274  017106  0000               	dw	0
  1275  017108  0000               	dw	0
  1276  01710A  0000               	dw	0
  1277  01710C  0000               	dw	0
  1278  01710E  0000               	dw	0
  1279  017110  0000               	dw	0
  1280  017112  0000               	dw	0
  1281  017114  0000               	dw	0
  1282  017116  0000               	dw	0
  1283  017118  0000               	dw	0
  1284  01711A  0000               	dw	0
  1285  01711C  0000               	dw	0
  1286  01711E  0000               	dw	0
  1287  017120  0000               	dw	0
  1288  017122  0000               	dw	0
  1289  017124  0000               	dw	0
  1290  017126  0000               	dw	0
  1291  017128  0000               	dw	0
  1292  01712A  0000               	dw	0
  1293  01712C  0000               	dw	0
  1294  01712E  0000               	dw	0
  1295  017130  0000               	dw	0
  1296  017132  0000               	dw	0
  1297  017134  0000               	dw	0
  1298  017136  0000               	dw	0
  1299  017138  0000               	dw	0
  1300  01713A  0000               	dw	0
  1301  01713C  0000               	dw	0
  1302  01713E  0000               	dw	0
  1303  017140  0000               	dw	0
  1304  017142  0000               	dw	0
  1305  017144  0000               	dw	0
  1306  017146  0000               	dw	0
  1307  017148  0000               	dw	0
  1308  01714A  0000               	dw	0
  1309  01714C  0000               	dw	0
  1310  01714E  0000               	dw	0
  1311  017150  0000               	dw	0
  1312  017152  0000               	dw	0
  1313  017154  0000               	dw	0
  1314  017156  0000               	dw	0
  1315  017158  0000               	dw	0
  1316  01715A  0000               	dw	0
  1317  01715C  0000               	dw	0
  1318  01715E  0000               	dw	0
  1319  017160  0000               	dw	0
  1320  017162  0000               	dw	0
  1321  017164  0000               	dw	0
  1322  017166  0000               	dw	0
  1323  017168  0000               	dw	0
  1324  01716A  0000               	dw	0
  1325  01716C  0000               	dw	0
  1326  01716E  0000               	dw	0
  1327  017170  0000               	dw	0
  1328  017172  0000               	dw	0
  1329  017174  0000               	dw	0
  1330  017176  0000               	dw	0
  1331  017178  0000               	dw	0
  1332  01717A  0000               	dw	0
  1333  01717C  0000               	dw	0
  1334  01717E  0000               	dw	0
  1335  017180  0000               	dw	0
  1336  017182  0000               	dw	0
  1337  017184  0000               	dw	0
  1338  017186  0000               	dw	0
  1339  017188  0000               	dw	0
  1340  01718A  0000               	dw	0
  1341  01718C  0000               	dw	0
  1342  01718E  0000               	dw	0
  1343  017190  0000               	dw	0
  1344  017192  42FA               	dw	17146
  1345  017194  0000               	dw	0
  1346  017196  0000               	dw	0
  1347  017198  0000               	dw	0
  1348  01719A  0000               	dw	0
  1349  01719C  0000               	dw	0
  1350  01719E  0000               	dw	0
  1351  0171A0  0000               	dw	0
  1352  0171A2  0000               	dw	0
  1353  0171A4  0000               	dw	0
  1354  0171A6  0000               	dw	0
  1355  0171A8  0000               	dw	0
  1356  0171AA  0000               	dw	0
  1357  0171AC  0000               	dw	0
  1358  0171AE  0000               	dw	0
  1359  0171B0  0000               	dw	0
  1360  0171B2  0000               	dw	0
  1361  0171B4  0000               	dw	0
  1362  0171B6  0000               	dw	0
  1363  0171B8  0000               	dw	0
  1364  0171BA  0000               	dw	0
  1365  0171BC  00                 	db	0
  1366  0171BD  01                 	db	1
  1367  0171BE  0000               	dw	0
  1368  0171C0  3F80               	dw	16256
  1369  0171C2  0000               	dw	0
  1370  0171C4  3F80               	dw	16256
  1371  0171C6  00                 	db	0
  1372  0171C7  00                 	db	0
  1373  0171C8  00                 	db	0
  1374  0171C9  00                 	db	0
  1375  0171CA  00                 	db	0
  1376  0171CB  00                 	db	0
  1377  0171CC  00                 	db	0
  1378  0171CD  00                 	db	0
  1379  0171CE  00                 	db	0
  1380  0171CF  00                 	db	0
  1381  0171D0  00                 	db	0
  1382  0171D1  00                 	db	0
  1383  0171D2  00                 	db	0
  1384  0171D3  00                 	db	0
  1385  0171D4  00                 	db	0
  1386  0171D5  00                 	db	0
  1387  0171D6  00                 	db	0
  1388  0171D7  00                 	db	0
  1389  0171D8  00                 	db	0
  1390  0171D9  00                 	db	0
  1391  0171DA  00                 	db	0
  1392  0171DB  00                 	db	0
  1393  0171DC  00                 	db	0
  1394  0171DD  00                 	db	0
  1395  0171DE  00                 	db	0
  1396  0171DF  00                 	db	0
  1397  0171E0  00                 	db	0
  1398  0171E1  00                 	db	0
  1399  0171E2  00                 	db	0
  1400  0171E3  00                 	db	0
  1401  0171E4  00                 	db	0
  1402  0171E5  00                 	db	0
  1403  0171E6  00                 	db	0
  1404  0171E7  00                 	db	0
  1405  0171E8  00                 	db	0
  1406  0171E9  00                 	db	0
  1407  0171EA  00                 	db	0
  1408  0171EB  00                 	db	0
  1409  0171EC  00                 	db	0
  1410  0171ED  00                 	db	0
  1411  0171EE  00                 	db	0
  1412  0171EF  00                 	db	0
  1413  0171F0  00                 	db	0
  1414  0171F1  00                 	db	0
  1415  0171F2  00                 	db	0
  1416  0171F3  00                 	db	0
  1417  0171F4  00                 	db	0
  1418  0171F5  00                 	db	0
  1419  0171F6  00                 	db	0
  1420  0171F7  00                 	db	0
  1421  0171F8  00                 	db	0
  1422  0171F9  00                 	db	0
  1423  0171FA  00                 	db	0
  1424  0171FB  00                 	db	0
  1425  0171FC  00                 	db	0
  1426  0171FD  00                 	db	0
  1427  0171FE  00                 	db	0
  1428  0171FF  00                 	db	0
  1429  017200  00                 	db	0
  1430  017201  00                 	db	0
  1431  017202  00                 	db	0
  1432  017203  00                 	db	0
  1433  017204  00                 	db	0
  1434  017205  00                 	db	0
  1435  017206  00                 	db	0
  1436  017207  00                 	db	0
  1437  017208  00                 	db	0
  1438  017209  00                 	db	0
  1439  01720A  00                 	db	0
  1440  01720B  00                 	db	0
  1441  01720C  00                 	db	0
  1442  01720D  00                 	db	0
  1443  01720E  00                 	db	0
  1444  01720F  00                 	db	0
  1445  017210  00                 	db	0
  1446  017211  00                 	db	0
  1447  017212  0000               	dw	0
  1448  017214  0000               	dw	0
  1449  017216  0000               	dw	0
  1450  017218  0000               	dw	0
  1451  01721A  0000               	dw	0
  1452  01721C  0000               	dw	0
  1453  01721E  0000               	dw	0
  1454  017220  0000               	dw	0
  1455  017222  0000               	dw	0
  1456  017224  0000               	dw	0
  1457  017226  01                 	db	1
  1458  017227  00                 	db	0
  1459  017228  00                 	db	0
  1460  017229  00                 	db	0
  1461  01722A  00                 	db	0
  1462  01722B  00                 	db	0
  1463  01722C  00                 	db	0
  1464  01722D  00                 	db	0
  1465  01722E  00                 	db	0
  1466                           
  1467                           	psect	idataBANK0
  1468  01C284                     __pidataBANK0:
  1469                           	opt callstack 0
  1470                           
  1471                           ;initializer for _R
  1472  01C284  0000               	dw	0
  1473  01C286  0000               	dw	0
  1474  01C288  0000               	dw	0
  1475  01C28A  0000               	dw	0
  1476  01C28C  0000               	dw	0
  1477  01C28E  0000               	dw	0
  1478  01C290  0000               	dw	0
  1479  01C292  0000               	dw	0
  1480  01C294  0000               	dw	0
  1481  01C296  0000               	dw	0
  1482  01C298  0000               	dw	0
  1483  01C29A  0000               	dw	0
  1484  01C29C  0000               	dw	0
  1485  01C29E  0000               	dw	0
  1486  01C2A0  0000               	dw	0
  1487  01C2A2  0000               	dw	0
  1488  01C2A4  0000               	dw	0
  1489  01C2A6  0000               	dw	0
  1490  01C2A8  0000               	dw	0
  1491  01C2AA  0F62               	dw	3938
  1492  01C2AC  0FA4               	dw	4004
  1493  01C2AE  2D0E               	dw	11534
  1494  01C2B0  3DB2               	dw	15794
  1495  01C2B2  DD98               	dw	56728
  1496  01C2B4  3D13               	dw	15635
  1497  01C2B6  00                 	db	0
  1498  01C2B7  0000               	dw	0
  1499  01C2B9  00                 	db	0
  1500                           
  1501                           	psect	idataBANK1
  1502  01A9DE                     __pidataBANK1:
  1503                           	opt callstack 0
  1504                           
  1505                           ;initializer for stoa@F1166
  1506  01A9DE  28                 	db	40
  1507  01A9DF  6E                 	db	110
  1508  01A9E0  75                 	db	117
  1509  01A9E1  6C                 	db	108
  1510  01A9E2  6C                 	db	108
  1511  01A9E3  29                 	db	41
  1512  01A9E4  00                 	db	0
  1513                           
  1514                           ;initializer for _V
  1515  01A9E5  00                 	db	0
  1516  01A9E6  00                 	db	0
  1517  01A9E7  00                 	db	0
  1518  01A9E8  00                 	db	0
  1519  01A9E9  00                 	db	0
  1520  01A9EA  00                 	db	0
  1521  01A9EB  00                 	db	0
  1522  01A9EC  00                 	db	0
  1523  01A9ED  00                 	db	0
  1524  01A9EE  00                 	db	0
  1525  01A9EF  00                 	db	0
  1526  01A9F0  00                 	db	0
  1527  01A9F1  00                 	db	0
  1528  01A9F2  00                 	db	0
  1529  01A9F3  00                 	db	0
  1530  01A9F4  00                 	db	0
  1531  01A9F5  00                 	db	0
  1532  01A9F6  00                 	db	0
  1533  01A9F7  00                 	db	0
  1534  01A9F8  00                 	db	0
  1535  01A9F9  00                 	db	0
  1536  01A9FA  00                 	db	0
  1537  01A9FB  00                 	db	0
  1538  01A9FC  00                 	db	0
  1539  01A9FD  00                 	db	0
  1540  01A9FE  00                 	db	0
  1541  01A9FF  00                 	db	0
  1542  01AA00  00                 	db	0
  1543  01AA01  00                 	db	0
  1544  01AA02  00                 	db	0
  1545  01AA03  00                 	db	0
  1546  01AA04  00                 	db	0
  1547  01AA05  00                 	db	0
  1548  01AA06  00                 	db	0
  1549  01AA07  00                 	db	0
  1550  01AA08  00                 	db	0
  1551  01AA09  00                 	db	0
  1552  01AA0A  00                 	db	0
  1553  01AA0B  00                 	db	0
  1554  01AA0C  00                 	db	0
  1555  01AA0D  00                 	db	0
  1556  01AA0E  00                 	db	0
  1557  01AA0F  00                 	db	0
  1558  01AA10  00                 	db	0
  1559  01AA11  00                 	db	0
  1560  01AA12  00                 	db	0
  1561  01AA13  00                 	db	0
  1562  01AA14  00                 	db	0
  1563  01AA15  00                 	db	0
  1564  01AA16  00                 	db	0
  1565  01AA17  00                 	db	0
  1566  01AA18  00                 	db	0
  1567  01AA19  00                 	db	0
  1568  01AA1A  00                 	db	0
  1569  01AA1B  00                 	db	0
  1570  01AA1C  00                 	db	0
  1571  01AA1D  00                 	db	0
  1572  01AA1E  00                 	db	0
  1573  01AA1F  00                 	db	0
  1574  01AA20  00                 	db	0
  1575  01AA21  00                 	db	0
  1576  01AA22  00                 	db	0
  1577  01AA23  00                 	db	0
  1578  01AA24  00                 	db	0
  1579  01AA25  00                 	db	0
  1580  01AA26  00                 	db	0
  1581  01AA27  00                 	db	0
  1582  01AA28  00                 	db	0
  1583  01AA29  00                 	db	0
  1584  01AA2A  00                 	db	0
  1585  01AA2B  00                 	db	0
  1586  01AA2C  00                 	db	0
  1587  01AA2D  00                 	db	0
  1588  01AA2E  00                 	db	0
  1589  01AA2F  00                 	db	0
  1590  01AA30  00                 	db	0
  1591  01AA31  00                 	db	0
  1592  01AA32  00                 	db	0
  1593  01AA33  00                 	db	0
  1594  01AA34  00                 	db	0
  1595  01AA35  00                 	db	0
  1596  01AA36  00                 	db	0
  1597  01AA37  00                 	db	0
  1598  01AA38  00                 	db	0
  1599  01AA39  00                 	db	0
  1600  01AA3A  00                 	db	0
  1601  01AA3B  00                 	db	0
  1602  01AA3C  00                 	db	0
  1603  01AA3D  00                 	db	0
  1604  01AA3E  00                 	db	0
  1605  01AA3F  00                 	db	0
  1606  01AA40  00                 	db	0
  1607  01AA41  00                 	db	0
  1608  01AA42  00                 	db	0
  1609  01AA43  00                 	db	0
  1610  01AA44  00                 	db	0
  1611  01AA45  00                 	db	0
  1612  01AA46  00                 	db	0
  1613  01AA47  00                 	db	0
  1614  01AA48  00                 	db	0
  1615  01AA49  00                 	db	0
  1616  01AA4A  00                 	db	0
  1617  01AA4B  00                 	db	0
  1618  01AA4C  00                 	db	0
  1619  01AA4D  00                 	db	0
  1620  01AA4E  00                 	db	0
  1621  01AA4F  00                 	db	0
  1622  01AA50  00                 	db	0
  1623  01AA51  00                 	db	0
  1624  01AA52  00                 	db	0
  1625  01AA53  00                 	db	0
  1626  01AA54  00                 	db	0
  1627  01AA55  00                 	db	0
  1628  01AA56  00                 	db	0
  1629  01AA57  00                 	db	0
  1630  01AA58  00                 	db	0
  1631  01AA59  00                 	db	0
  1632  01AA5A  00                 	db	0
  1633  01AA5B  00                 	db	0
  1634  01AA5C  00                 	db	0
  1635  01AA5D  00                 	db	0
  1636  01AA5E  00                 	db	0
  1637  01AA5F  00                 	db	0
  1638  01AA60  00                 	db	0
  1639  01AA61  00                 	db	0
  1640  01AA62  00                 	db	0
  1641  01AA63  00                 	db	0
  1642  01AA64  00                 	db	0
  1643  01AA65  00                 	db	0
  1644  01AA66  0000               	dw	0
  1645  01AA68  0000               	dw	0
  1646  01AA6A  0000               	dw	0
  1647  01AA6C  0000               	dw	0
  1648  01AA6E  00                 	db	0
  1649  01AA6F  00                 	db	0
  1650  01AA70  00                 	db	0
  1651  01AA71  00                 	db	0
  1652  01AA72  00                 	db	0
  1653  01AA73  00                 	db	0
  1654  01AA74  0000               	dw	0
  1655  01AA76  0000               	dw	0
  1656  01AA78  0000               	dw	0
  1657  01AA7A  0000               	dw	0
  1658  01AA7C  0000               	dw	0
  1659  01AA7E  0000               	dw	0
  1660  01AA80  00                 	db	0
  1661  01AA81  00                 	db	0
  1662  01AA82  00                 	db	0
  1663  01AA83  00                 	db	0
  1664  01AA84  00                 	db	0
  1665  01AA85  00                 	db	0
  1666  01AA86  00                 	db	0
  1667  01AA87  00                 	db	0
  1668  01AA88  00                 	db	0
  1669  01AA89  00                 	db	0
  1670  01AA8A  00                 	db	0
  1671  01AA8B  0000               	dw	0
  1672  01AA8D  0000               	dw	0
  1673  01AA8F  2D                 	db	45
  1674  01AA90  00                 	db	0
  1675  01AA91  00                 	db	0
  1676  01AA92  00                 	db	0
  1677  01AA93  00                 	db	0
  1678  01AA94  00                 	db	0
  1679  01AA95  0000               	dw	0
  1680  01AA97  0000               	dw	0
  1681  01AA99  0000               	dw	0
  1682  01AA9B  0000               	dw	0
  1683  01AA9D  0000               	dw	0
  1684  01AA9F  0000               	dw	0
  1685  01AAA1  0000               	dw	0
  1686  01AAA3  0000               	dw	0
  1687                           
  1688                           ;initializer for _H
  1689  01AAA5  00                 	db	0
  1690  01AAA6  00                 	db	0
  1691  01AAA7  01                 	db	1
  1692  01AAA8  00                 	db	0
  1693  01AAA9  01                 	db	1
  1694  01AAAA  00                 	db	0
  1695  01AAAB  01                 	db	1
  1696  01AAAC  00                 	db	0
  1697  01AAAD  00                 	db	0
  1698                           
  1699                           	psect	mediumconst
  1700  00F90C                     __pmediumconst:
  1701                           	opt callstack 0
  1702  00F90C  00                 	db	0
  1703  00F90D                     _BVSOC_TABLE:
  1704                           	opt callstack 0
  1705  00F90D  59D8               	dw	23000
  1706  00F90F  0000               	dw	0
  1707  00F911  0005               	dw	5
  1708  00F913  0000               	dw	0
  1709  00F915  5B68               	dw	23400
  1710  00F917  0000               	dw	0
  1711  00F919  000A               	dw	10
  1712  00F91B  0000               	dw	0
  1713  00F91D  5C30               	dw	23600
  1714  00F91F  0000               	dw	0
  1715  00F921  0014               	dw	20
  1716  00F923  0000               	dw	0
  1717  00F925  5E38               	dw	24120
  1718  00F927  0000               	dw	0
  1719  00F929  0019               	dw	25
  1720  00F92B  0000               	dw	0
  1721  00F92D  5E88               	dw	24200
  1722  00F92F  0000               	dw	0
  1723  00F931  001E               	dw	30
  1724  00F933  0000               	dw	0
  1725  00F935  5F78               	dw	24440
  1726  00F937  0000               	dw	0
  1727  00F939  0028               	dw	40
  1728  00F93B  0000               	dw	0
  1729  00F93D  5FDC               	dw	24540
  1730  00F93F  0000               	dw	0
  1731  00F941  002D               	dw	45
  1732  00F943  0000               	dw	0
  1733  00F945  6018               	dw	24600
  1734  00F947  0000               	dw	0
  1735  00F949  0032               	dw	50
  1736  00F94B  0000               	dw	0
  1737  00F94D  6046               	dw	24646
  1738  00F94F  0000               	dw	0
  1739  00F951  0035               	dw	53
  1740  00F953  0000               	dw	0
  1741  00F955  607C               	dw	24700
  1742  00F957  0000               	dw	0
  1743  00F959  0037               	dw	55
  1744  00F95B  0000               	dw	0
  1745  00F95D  60AE               	dw	24750
  1746  00F95F  0000               	dw	0
  1747  00F961  0039               	dw	57
  1748  00F963  0000               	dw	0
  1749  00F965  60E0               	dw	24800
  1750  00F967  0000               	dw	0
  1751  00F969  003C               	dw	60
  1752  00F96B  0000               	dw	0
  1753  00F96D  6112               	dw	24850
  1754  00F96F  0000               	dw	0
  1755  00F971  003F               	dw	63
  1756  00F973  0000               	dw	0
  1757  00F975  615D               	dw	24925
  1758  00F977  0000               	dw	0
  1759  00F979  0043               	dw	67
  1760  00F97B  0000               	dw	0
  1761  00F97D  61A8               	dw	25000
  1762  00F97F  0000               	dw	0
  1763  00F981  0046               	dw	70
  1764  00F983  0000               	dw	0
  1765  00F985  61BC               	dw	25020
  1766  00F987  0000               	dw	0
  1767  00F989  0048               	dw	72
  1768  00F98B  0000               	dw	0
  1769  00F98D  61D0               	dw	25040
  1770  00F98F  0000               	dw	0
  1771  00F991  004B               	dw	75
  1772  00F993  0000               	dw	0
  1773  00F995  61DA               	dw	25050
  1774  00F997  0000               	dw	0
  1775  00F999  0050               	dw	80
  1776  00F99B  0000               	dw	0
  1777  00F99D  61E4               	dw	25060
  1778  00F99F  0000               	dw	0
  1779  00F9A1  0055               	dw	85
  1780  00F9A3  0000               	dw	0
  1781  00F9A5  61F8               	dw	25080
  1782  00F9A7  0000               	dw	0
  1783  00F9A9  005A               	dw	90
  1784  00F9AB  0000               	dw	0
  1785  00F9AD  6208               	dw	25096
  1786  00F9AF  0000               	dw	0
  1787  00F9B1  005C               	dw	92
  1788  00F9B3  0000               	dw	0
  1789  00F9B5  6222               	dw	25122
  1790  00F9B7  0000               	dw	0
  1791  00F9B9  005D               	dw	93
  1792  00F9BB  0000               	dw	0
  1793  00F9BD  6234               	dw	25140
  1794  00F9BF  0000               	dw	0
  1795  00F9C1  005F               	dw	95
  1796  00F9C3  0000               	dw	0
  1797  00F9C5  6248               	dw	25160
  1798  00F9C7  0000               	dw	0
  1799  00F9C9  0061               	dw	97
  1800  00F9CB  0000               	dw	0
  1801  00F9CD  625C               	dw	25180
  1802  00F9CF  0000               	dw	0
  1803  00F9D1  0064               	dw	100
  1804  00F9D3  0000               	dw	0
  1805  00F9D5  6784               	dw	26500
  1806  00F9D7  0000               	dw	0
  1807  00F9D9  0062               	dw	98
  1808  00F9DB  0000               	dw	0
  1809  00F9DD                     __end_of_BVSOC_TABLE:
  1810                           	opt callstack 0
  1811  00F9DD                     _T:
  1812                           	opt callstack 0
  1813  00F9DD  63                 	db	99
  1814  00F9DE  6F                 	db	111
  1815  00F9DF  6D                 	db	109
  1816  00F9E0  6D                 	db	109
  1817  00F9E1  61                 	db	97
  1818  00F9E2  6E                 	db	110
  1819  00F9E3  64                 	db	100
  1820  00F9E4  73                 	db	115
  1821  00F9E5  20                 	db	32
  1822  00F9E6  31                 	db	49
  1823  00F9E7  00                 	db	0
  1824  00F9E8  00                 	db	0
  1825  00F9E9  00                 	db	0
  1826  00F9EA  00                 	db	0
  1827  00F9EB  00                 	db	0
  1828  00F9EC  00                 	db	0
  1829  00F9ED  00                 	db	0
  1830  00F9EE  00                 	db	0
  1831  00F9EF  64                 	db	100
  1832  00F9F0  69                 	db	105
  1833  00F9F1  73                 	db	115
  1834  00F9F2  70                 	db	112
  1835  00F9F3  6C                 	db	108
  1836  00F9F4  61                 	db	97
  1837  00F9F5  79                 	db	121
  1838  00F9F6  73                 	db	115
  1839  00F9F7  20                 	db	32
  1840  00F9F8  31                 	db	49
  1841  00F9F9  00                 	db	0
  1842  00F9FA  00                 	db	0
  1843  00F9FB  00                 	db	0
  1844  00F9FC  00                 	db	0
  1845  00F9FD  00                 	db	0
  1846  00F9FE  00                 	db	0
  1847  00F9FF  00                 	db	0
  1848  00FA00  00                 	db	0
  1849  00FA01  63                 	db	99
  1850  00FA02  6F                 	db	111
  1851  00FA03  6D                 	db	109
  1852  00FA04  6D                 	db	109
  1853  00FA05  61                 	db	97
  1854  00FA06  6E                 	db	110
  1855  00FA07  64                 	db	100
  1856  00FA08  73                 	db	115
  1857  00FA09  20                 	db	32
  1858  00FA0A  32                 	db	50
  1859  00FA0B  00                 	db	0
  1860  00FA0C  00                 	db	0
  1861  00FA0D  00                 	db	0
  1862  00FA0E  00                 	db	0
  1863  00FA0F  00                 	db	0
  1864  00FA10  00                 	db	0
  1865  00FA11  00                 	db	0
  1866  00FA12  00                 	db	0
  1867  00FA13  64                 	db	100
  1868  00FA14  69                 	db	105
  1869  00FA15  73                 	db	115
  1870  00FA16  70                 	db	112
  1871  00FA17  6C                 	db	108
  1872  00FA18  61                 	db	97
  1873  00FA19  79                 	db	121
  1874  00FA1A  73                 	db	115
  1875  00FA1B  20                 	db	32
  1876  00FA1C  32                 	db	50
  1877  00FA1D  00                 	db	0
  1878  00FA1E  00                 	db	0
  1879  00FA1F  00                 	db	0
  1880  00FA20  00                 	db	0
  1881  00FA21  00                 	db	0
  1882  00FA22  00                 	db	0
  1883  00FA23  00                 	db	0
  1884  00FA24  00                 	db	0
  1885  00FA25  63                 	db	99
  1886  00FA26  6F                 	db	111
  1887  00FA27  6D                 	db	109
  1888  00FA28  6D                 	db	109
  1889  00FA29  61                 	db	97
  1890  00FA2A  6E                 	db	110
  1891  00FA2B  64                 	db	100
  1892  00FA2C  73                 	db	115
  1893  00FA2D  20                 	db	32
  1894  00FA2E  33                 	db	51
  1895  00FA2F  00                 	db	0
  1896  00FA30  00                 	db	0
  1897  00FA31  00                 	db	0
  1898  00FA32  00                 	db	0
  1899  00FA33  00                 	db	0
  1900  00FA34  00                 	db	0
  1901  00FA35  00                 	db	0
  1902  00FA36  00                 	db	0
  1903  00FA37  64                 	db	100
  1904  00FA38  69                 	db	105
  1905  00FA39  73                 	db	115
  1906  00FA3A  70                 	db	112
  1907  00FA3B  6C                 	db	108
  1908  00FA3C  61                 	db	97
  1909  00FA3D  79                 	db	121
  1910  00FA3E  73                 	db	115
  1911  00FA3F  20                 	db	32
  1912  00FA40  33                 	db	51
  1913  00FA41  00                 	db	0
  1914  00FA42  00                 	db	0
  1915  00FA43  00                 	db	0
  1916  00FA44  00                 	db	0
  1917  00FA45  00                 	db	0
  1918  00FA46  00                 	db	0
  1919  00FA47  00                 	db	0
  1920  00FA48  00                 	db	0
  1921  00FA49  63                 	db	99
  1922  00FA4A  6F                 	db	111
  1923  00FA4B  6D                 	db	109
  1924  00FA4C  6D                 	db	109
  1925  00FA4D  61                 	db	97
  1926  00FA4E  6E                 	db	110
  1927  00FA4F  64                 	db	100
  1928  00FA50  73                 	db	115
  1929  00FA51  20                 	db	32
  1930  00FA52  34                 	db	52
  1931  00FA53  00                 	db	0
  1932  00FA54  00                 	db	0
  1933  00FA55  00                 	db	0
  1934  00FA56  00                 	db	0
  1935  00FA57  00                 	db	0
  1936  00FA58  00                 	db	0
  1937  00FA59  00                 	db	0
  1938  00FA5A  00                 	db	0
  1939  00FA5B  64                 	db	100
  1940  00FA5C  69                 	db	105
  1941  00FA5D  73                 	db	115
  1942  00FA5E  70                 	db	112
  1943  00FA5F  6C                 	db	108
  1944  00FA60  61                 	db	97
  1945  00FA61  79                 	db	121
  1946  00FA62  73                 	db	115
  1947  00FA63  20                 	db	32
  1948  00FA64  34                 	db	52
  1949  00FA65  00                 	db	0
  1950  00FA66  00                 	db	0
  1951  00FA67  00                 	db	0
  1952  00FA68  00                 	db	0
  1953  00FA69  00                 	db	0
  1954  00FA6A  00                 	db	0
  1955  00FA6B  00                 	db	0
  1956  00FA6C  00                 	db	0
  1957  00FA6D                     __end_of_T:
  1958                           	opt callstack 0
  1959  00FA6D                     _spin:
  1960                           	opt callstack 0
  1961  00FA6D  7C                 	db	124
  1962  00FA6E  7C                 	db	124
  1963  00FA6F  2F                 	db	47
  1964  00FA70  2F                 	db	47
  1965  00FA71  2D                 	db	45
  1966  00FA72  2D                 	db	45
  1967  00FA73  00                 	db	0
  1968  00FA74  00                 	db	0
  1969  00FA75  00                 	db	0
  1970  00FA76  00                 	db	0
  1971  00FA77  00                 	db	0
  1972  00FA78  00                 	db	0
  1973  00FA79  00                 	db	0
  1974  00FA7A  00                 	db	0
  1975  00FA7B  00                 	db	0
  1976  00FA7C  00                 	db	0
  1977  00FA7D  00                 	db	0
  1978  00FA7E  00                 	db	0
  1979  00FA7F  00                 	db	0
  1980  00FA80  00                 	db	0
  1981  00FA81  7C                 	db	124
  1982  00FA82  7C                 	db	124
  1983  00FA83  2F                 	db	47
  1984  00FA84  2F                 	db	47
  1985  00FA85  2D                 	db	45
  1986  00FA86  2D                 	db	45
  1987  00FA87  5C                 	db	92
  1988  00FA88  5C                 	db	92
  1989  00FA89  00                 	db	0
  1990  00FA8A  00                 	db	0
  1991  00FA8B  00                 	db	0
  1992  00FA8C  00                 	db	0
  1993  00FA8D  00                 	db	0
  1994  00FA8E  00                 	db	0
  1995  00FA8F  00                 	db	0
  1996  00FA90  00                 	db	0
  1997  00FA91  00                 	db	0
  1998  00FA92  00                 	db	0
  1999  00FA93  00                 	db	0
  2000  00FA94  00                 	db	0
  2001  00FA95  4F                 	db	79
  2002  00FA96  4F                 	db	79
  2003  00FA97  4F                 	db	79
  2004  00FA98  4F                 	db	79
  2005  00FA99  4F                 	db	79
  2006  00FA9A  4F                 	db	79
  2007  00FA9B  2D                 	db	45
  2008  00FA9C  2D                 	db	45
  2009  00FA9D  5F                 	db	95
  2010  00FA9E  5F                 	db	95
  2011  00FA9F  2D                 	db	45
  2012  00FAA0  00                 	db	0
  2013  00FAA1  00                 	db	0
  2014  00FAA2  00                 	db	0
  2015  00FAA3  00                 	db	0
  2016  00FAA4  00                 	db	0
  2017  00FAA5  00                 	db	0
  2018  00FAA6  00                 	db	0
  2019  00FAA7  00                 	db	0
  2020  00FAA8  00                 	db	0
  2021  00FAA9  76                 	db	118
  2022  00FAAA  76                 	db	118
  2023  00FAAB  3C                 	db	60
  2024  00FAAC  3C                 	db	60
  2025  00FAAD  5E                 	db	94
  2026  00FAAE  5E                 	db	94
  2027  00FAAF  3E                 	db	62
  2028  00FAB0  3E                 	db	62
  2029  00FAB1  00                 	db	0
  2030  00FAB2  00                 	db	0
  2031  00FAB3  00                 	db	0
  2032  00FAB4  00                 	db	0
  2033  00FAB5  00                 	db	0
  2034  00FAB6  00                 	db	0
  2035  00FAB7  00                 	db	0
  2036  00FAB8  00                 	db	0
  2037  00FAB9  00                 	db	0
  2038  00FABA  00                 	db	0
  2039  00FABB  00                 	db	0
  2040  00FABC  00                 	db	0
  2041  00FABD  2E                 	db	46
  2042  00FABE  2E                 	db	46
  2043  00FABF  2A                 	db	42
  2044  00FAC0  2A                 	db	42
  2045  00FAC1  78                 	db	120
  2046  00FAC2  23                 	db	35
  2047  00FAC3  78                 	db	120
  2048  00FAC4  23                 	db	35
  2049  00FAC5  58                 	db	88
  2050  00FAC6  58                 	db	88
  2051  00FAC7  7C                 	db	124
  2052  00FAC8  7C                 	db	124
  2053  00FAC9  2D                 	db	45
  2054  00FACA  2D                 	db	45
  2055  00FACB  00                 	db	0
  2056  00FACC  00                 	db	0
  2057  00FACD  00                 	db	0
  2058  00FACE  00                 	db	0
  2059  00FACF  00                 	db	0
  2060  00FAD0  00                 	db	0
  2061  00FAD1  2E                 	db	46
  2062  00FAD2  2E                 	db	46
  2063  00FAD3  6F                 	db	111
  2064  00FAD4  6F                 	db	111
  2065  00FAD5  4F                 	db	79
  2066  00FAD6  4F                 	db	79
  2067  00FAD7  6F                 	db	111
  2068  00FAD8  6F                 	db	111
  2069  00FAD9  00                 	db	0
  2070  00FADA  00                 	db	0
  2071  00FADB  00                 	db	0
  2072  00FADC  00                 	db	0
  2073  00FADD  00                 	db	0
  2074  00FADE  00                 	db	0
  2075  00FADF  00                 	db	0
  2076  00FAE0  00                 	db	0
  2077  00FAE1  00                 	db	0
  2078  00FAE2  00                 	db	0
  2079  00FAE3  00                 	db	0
  2080  00FAE4  00                 	db	0
  2081  00FAE5                     __end_of_spin:
  2082                           	opt callstack 0
  2083  00FAE5  0000               	dw	0
  2084  00FAE7  3F80               	dw	16256
  2085  00FAE9  0000               	dw	0
  2086  00FAEB  3FC0               	dw	16320
  2087  00FAED                     __end_of_bp:
  2088                           	opt callstack 0
  2089  00FAED  AA00               	dw	43520
  2090  00FAEF  3FB8               	dw	16312
  2091  00FAF1                     __end_of_ivln2_h:
  2092                           	opt callstack 0
  2093  00FAF1  23C6               	dw	9158
  2094  00FAF3  B8F6               	dw	47350
  2095  00FAF5                     __end_of_cp_l:
  2096                           	opt callstack 0
  2097  00FAF5  4000               	dw	16384
  2098  00FAF7  3F76               	dw	16246
  2099  00FAF9                     __end_of_cp_h:
  2100                           	opt callstack 0
  2101  0000                     _IVTADL	set	14493
  2102  0000                     _IVTADH	set	14494
  2103  0000                     _IVTADU	set	14495
  2104  0000                     _PIR6bits	set	14758
  2105  0000                     _PIR4bits	set	14756
  2106  0000                     _PIE8bits	set	14744
  2107  0000                     _PIR8bits	set	14760
  2108  0000                     _SCANPR	set	14839
  2109  0000                     _DMA2PR	set	14836
  2110  0000                     _DMA1PR	set	14835
  2111  0000                     _MAINPR	set	14834
  2112  0000                     _ISRPR	set	14833
  2113  0000                     _PIE2bits	set	14738
  2114  0000                     _PIR2bits	set	14754
  2115  0000                     _PIE9bits	set	14745
  2116  0000                     _PIR9bits	set	14761
  2117  0000                     _PIE6bits	set	14742
  2118  0000                     _PIE3bits	set	14739
  2119  0000                     _PMD7	set	14791
  2120  0000                     _PMD6	set	14790
  2121  0000                     _PMD5	set	14789
  2122  0000                     _PMD4	set	14788
  2123  0000                     _PMD3	set	14787
  2124  0000                     _PMD2	set	14786
  2125  0000                     _PMD1	set	14785
  2126  0000                     _PMD0	set	14784
  2127  0000                     _OSCTUNE	set	14814
  2128  0000                     _OSCFRQ	set	14815
  2129  0000                     _OSCEN	set	14813
  2130  0000                     _OSCCON3	set	14811
  2131  0000                     _OSCCON1	set	14809
  2132  0000                     _IPR8bits	set	14728
  2133  0000                     _IPR9bits	set	14729
  2134  0000                     _IPR5bits	set	14725
  2135  0000                     _IPR1bits	set	14721
  2136  0000                     _IPR3bits	set	14723
  2137  0000                     _IPR6bits	set	14726
  2138  0000                     _IPR2bits	set	14722
  2139  0000                     _PIE5bits	set	14741
  2140  0000                     _PIE1bits	set	14737
  2141  0000                     _PIR5bits	set	14757
  2142  0000                     _PIR1bits	set	14753
  2143  0000                     _PLLR	set	118496
  2144  0000                     _SPI1SDIPPS	set	15071
  2145  0000                     _U1RXPPS	set	15077
  2146  0000                     _RC6PPS	set	14870
  2147  0000                     _RC5PPS	set	14869
  2148  0000                     _INT1PPS	set	15041
  2149  0000                     _RD1PPS	set	14873
  2150  0000                     _INT0PPS	set	15040
  2151  0000                     _RC3PPS	set	14867
  2152  0000                     _RB6PPS	set	14862
  2153  0000                     _SPI1SCKPPS	set	15070
  2154  0000                     _U2RXPPS	set	15080
  2155  0000                     _SLRCONF	set	14995
  2156  0000                     _SLRCONE	set	14979
  2157  0000                     _SLRCOND	set	14963
  2158  0000                     _SLRCONC	set	14947
  2159  0000                     _SLRCONB	set	14931
  2160  0000                     _SLRCONA	set	14915
  2161  0000                     _ODCOND	set	14962
  2162  0000                     _ODCONC	set	14946
  2163  0000                     _ODCONB	set	14930
  2164  0000                     _ODCONA	set	14914
  2165  0000                     _ODCONF	set	14994
  2166  0000                     _ODCONE	set	14978
  2167  0000                     _WPUC	set	14945
  2168  0000                     _WPUA	set	14913
  2169  0000                     _WPUB	set	14929
  2170  0000                     _WPUE	set	14977
  2171  0000                     _WPUF	set	14993
  2172  0000                     _WPUD	set	14961
  2173  0000                     _ANSELA	set	14912
  2174  0000                     _ANSELF	set	14992
  2175  0000                     _ANSELE	set	14976
  2176  0000                     _ANSELB	set	14928
  2177  0000                     _ANSELC	set	14944
  2178  0000                     _ANSELD	set	14960
  2179  0000                     _DMA2SSA	set	15321
  2180  0000                     _DMA1SSA	set	15353
  2181  0000                     _DMA2DSZ	set	15310
  2182  0000                     _DMA2SSZ	set	15319
  2183  0000                     _DMA2DSA	set	15312
  2184  0000                     _DMA1DSZ	set	15342
  2185  0000                     _DMA1SSZ	set	15351
  2186  0000                     _DMA1DSA	set	15344
  2187  0000                     _DMA2CON0bits	set	15324
  2188  0000                     _DMA2CON1bits	set	15325
  2189  0000                     _DMA1CON0bits	set	15356
  2190  0000                     _DMA1CON1bits	set	15357
  2191  0000                     _DMA2CON0	set	15324
  2192  0000                     _DMA2AIRQ	set	15326
  2193  0000                     _DMA2SIRQ	set	15327
  2194  0000                     _DMA2CON1	set	15325
  2195  0000                     _DMA1CON0	set	15356
  2196  0000                     _DMA1AIRQ	set	15358
  2197  0000                     _DMA1SIRQ	set	15359
  2198  0000                     _DMA1CON1	set	15357
  2199  0000                     _CLKRCON	set	15589
  2200  0000                     _CLKRCLK	set	15590
  2201  0000                     _SPI1CON1bits	set	15637
  2202  0000                     _SPI1STATUSbits	set	15639
  2203  0000                     _SPI1INTFbits	set	15642
  2204  0000                     _SPI1CON0bits	set	15636
  2205  0000                     _SPI1RXB	set	15632
  2206  0000                     _SPI1TXB	set	15633
  2207  0000                     _SPI1TCNTL	set	15634
  2208  0000                     _SPI1CON0	set	15636
  2209  0000                     _SPI1CLK	set	15644
  2210  0000                     _SPI1BAUD	set	15641
  2211  0000                     _SPI1CON2	set	15638
  2212  0000                     _SPI1CON1	set	15637
  2213  0000                     _U2RXB	set	15824
  2214  0000                     _U2TXB	set	15826
  2215  0000                     _U2ERRIE	set	15842
  2216  0000                     _U2ERRIR	set	15841
  2217  0000                     _U2UIR	set	15840
  2218  0000                     _U2FIFO	set	15839
  2219  0000                     _U2BRGH	set	15838
  2220  0000                     _U2BRGL	set	15837
  2221  0000                     _U2CON2	set	15836
  2222  0000                     _U2CON1	set	15835
  2223  0000                     _U2CON0	set	15834
  2224  0000                     _U2P3L	set	15832
  2225  0000                     _U2P2L	set	15830
  2226  0000                     _U2P1L	set	15828
  2227  0000                     _U1RXB	set	15848
  2228  0000                     _U1ERRIE	set	15866
  2229  0000                     _U1ERRIR	set	15865
  2230  0000                     _U1UIR	set	15864
  2231  0000                     _U1FIFO	set	15863
  2232  0000                     _U1BRGH	set	15862
  2233  0000                     _U1BRGL	set	15861
  2234  0000                     _U1CON2	set	15860
  2235  0000                     _U1CON1	set	15859
  2236  0000                     _U1CON0	set	15858
  2237  0000                     _U1P3H	set	15857
  2238  0000                     _U1P3L	set	15856
  2239  0000                     _U1P2H	set	15855
  2240  0000                     _U1P2L	set	15854
  2241  0000                     _U1P1H	set	15853
  2242  0000                     _U1P1L	set	15852
  2243  0000                     _FVRCON	set	16065
  2244  0000                     _ADFLTRL	set	16102
  2245  0000                     _ADFLTRH	set	16103
  2246  0000                     _ADCON0bits	set	16120
  2247  0000                     _ADCON0	set	16120
  2248  0000                     _ADCLK	set	16127
  2249  0000                     _ADACT	set	16126
  2250  0000                     _ADREF	set	16125
  2251  0000                     _ADSTAT	set	16124
  2252  0000                     _ADCON3	set	16123
  2253  0000                     _ADCON2	set	16122
  2254  0000                     _ADCON1	set	16121
  2255  0000                     _ADPREH	set	16119
  2256  0000                     _ADPREL	set	16118
  2257  0000                     _ADCAP	set	16117
  2258  0000                     _ADACQH	set	16116
  2259  0000                     _ADACQL	set	16115
  2260  0000                     _ADPCH	set	16113
  2261  0000                     _ADRPT	set	16108
  2262  0000                     _ADACCU	set	16106
  2263  0000                     _ADSTPTH	set	16101
  2264  0000                     _ADSTPTL	set	16100
  2265  0000                     _ADUTHH	set	16097
  2266  0000                     _ADUTHL	set	16096
  2267  0000                     _ADLTHH	set	16095
  2268  0000                     _ADLTHL	set	16094
  2269  0000                     _CCPTMRS1bits	set	16223
  2270  0000                     _PORTDbits	set	16333
  2271  0000                     _PORTFbits	set	16335
  2272  0000                     _LATFbits	set	16319
  2273  0000                     _LATCbits	set	16316
  2274  0000                     _LATDbits	set	16317
  2275  0000                     _PORTBbits	set	16331
  2276  0000                     _T3CONbits	set	16294
  2277  0000                     _T3CON	set	16294
  2278  0000                     _TMR3L	set	16292
  2279  0000                     _TMR3H	set	16293
  2280  0000                     _T3CLK	set	16297
  2281  0000                     _T3GATE	set	16296
  2282  0000                     _T3GCON	set	16295
  2283  0000                     _T2CON	set	16300
  2284  0000                     _T2TMR	set	16298
  2285  0000                     _T2PR	set	16299
  2286  0000                     _T2RST	set	16303
  2287  0000                     _T2HLT	set	16301
  2288  0000                     _T2CLKCON	set	16302
  2289  0000                     _PWM8DCL	set	16224
  2290  0000                     _PWM8DCH	set	16225
  2291  0000                     _PWM8CON	set	16226
  2292  0000                     _LATEbits	set	16318
  2293  0000                     _T5CONbits	set	16282
  2294  0000                     _T5CON	set	16282
  2295  0000                     _TMR5L	set	16280
  2296  0000                     _TMR5H	set	16281
  2297  0000                     _T5CLK	set	16285
  2298  0000                     _T5GATE	set	16284
  2299  0000                     _T5GCON	set	16283
  2300  0000                     _T6CON	set	16276
  2301  0000                     _T6TMR	set	16274
  2302  0000                     _T6PR	set	16275
  2303  0000                     _T6RST	set	16279
  2304  0000                     _T6HLT	set	16277
  2305  0000                     _T6CLKCON	set	16278
  2306  0000                     _TRISD	set	16325
  2307  0000                     _TRISC	set	16324
  2308  0000                     _TRISB	set	16323
  2309  0000                     _TRISA	set	16322
  2310  0000                     _TRISF	set	16327
  2311  0000                     _TRISE	set	16326
  2312  0000                     _LATC	set	16316
  2313  0000                     _LATB	set	16315
  2314  0000                     _LATF	set	16319
  2315  0000                     _LATA	set	16314
  2316  0000                     _LATD	set	16317
  2317  0000                     _LATE	set	16318
  2318  0000                     _IVTLOCKbits	set	16340
  2319  0000                     _IVTLOCK	set	16340
  2320  0000                     _INTCON0bits	set	16338
  2321  0000                     _GIE	set	130711
  2322  00FAF9                     STR_78:
  2323                           
  2324                           ; BSR set to: 57
  2325  00FAF9  20                 	db	32
  2326  00FAFA  25                 	db	37
  2327  00FAFB  63                 	db	99	;'c'
  2328  00FAFC  20                 	db	32
  2329  00FAFD  2C                 	db	44
  2330  00FAFE  25                 	db	37
  2331  00FAFF  6C                 	db	108	;'l'
  2332  00FB00  75                 	db	117	;'u'
  2333  00FB01  2C                 	db	44
  2334  00FB02  25                 	db	37
  2335  00FB03  34                 	db	52	;'4'
  2336  00FB04  2E                 	db	46
  2337  00FB05  34                 	db	52	;'4'
  2338  00FB06  66                 	db	102	;'f'
  2339  00FB07  2C                 	db	44
  2340  00FB08  25                 	db	37
  2341  00FB09  34                 	db	52	;'4'
  2342  00FB0A  2E                 	db	46
  2343  00FB0B  34                 	db	52	;'4'
  2344  00FB0C  66                 	db	102	;'f'
  2345  00FB0D  2C                 	db	44
  2346  00FB0E  25                 	db	37
  2347  00FB0F  34                 	db	52	;'4'
  2348  00FB10  2E                 	db	46
  2349  00FB11  34                 	db	52	;'4'
  2350  00FB12  66                 	db	102	;'f'
  2351  00FB13  2C                 	db	44
  2352  00FB14  25                 	db	37
  2353  00FB15  34                 	db	52	;'4'
  2354  00FB16  2E                 	db	46
  2355  00FB17  34                 	db	52	;'4'
  2356  00FB18  66                 	db	102	;'f'
  2357  00FB19  2C                 	db	44
  2358  00FB1A  25                 	db	37
  2359  00FB1B  34                 	db	52	;'4'
  2360  00FB1C  2E                 	db	46
  2361  00FB1D  34                 	db	52	;'4'
  2362  00FB1E  66                 	db	102	;'f'
  2363  00FB1F  2C                 	db	44
  2364  00FB20  25                 	db	37
  2365  00FB21  34                 	db	52	;'4'
  2366  00FB22  2E                 	db	46
  2367  00FB23  33                 	db	51	;'3'
  2368  00FB24  66                 	db	102	;'f'
  2369  00FB25  2C                 	db	44
  2370  00FB26  25                 	db	37
  2371  00FB27  34                 	db	52	;'4'
  2372  00FB28  2E                 	db	46
  2373  00FB29  33                 	db	51	;'3'
  2374  00FB2A  66                 	db	102	;'f'
  2375  00FB2B  2C                 	db	44
  2376  00FB2C  25                 	db	37
  2377  00FB2D  34                 	db	52	;'4'
  2378  00FB2E  2E                 	db	46
  2379  00FB2F  33                 	db	51	;'3'
  2380  00FB30  66                 	db	102	;'f'
  2381  00FB31  2C                 	db	44
  2382  00FB32  25                 	db	37
  2383  00FB33  34                 	db	52	;'4'
  2384  00FB34  2E                 	db	46
  2385  00FB35  33                 	db	51	;'3'
  2386  00FB36  66                 	db	102	;'f'
  2387  00FB37  2C                 	db	44
  2388  00FB38  25                 	db	37
  2389  00FB39  34                 	db	52	;'4'
  2390  00FB3A  2E                 	db	46
  2391  00FB3B  33                 	db	51	;'3'
  2392  00FB3C  66                 	db	102	;'f'
  2393  00FB3D  2C                 	db	44
  2394  00FB3E  25                 	db	37
  2395  00FB3F  34                 	db	52	;'4'
  2396  00FB40  2E                 	db	46
  2397  00FB41  33                 	db	51	;'3'
  2398  00FB42  66                 	db	102	;'f'
  2399  00FB43  2C                 	db	44
  2400  00FB44  25                 	db	37
  2401  00FB45  64                 	db	100	;'d'
  2402  00FB46  2C                 	db	44
  2403  00FB47  25                 	db	37
  2404  00FB48  64                 	db	100	;'d'
  2405  00FB49  2C                 	db	44
  2406  00FB4A  25                 	db	37
  2407  00FB4B  32                 	db	50	;'2'
  2408  00FB4C  2E                 	db	46
  2409  00FB4D  36                 	db	54	;'6'
  2410  00FB4E  66                 	db	102	;'f'
  2411  00FB4F  2C                 	db	44
  2412  00FB50  25                 	db	37
  2413  00FB51  34                 	db	52	;'4'
  2414  00FB52  2E                 	db	46
  2415  00FB53  33                 	db	51	;'3'
  2416  00FB54  66                 	db	102	;'f'
  2417  00FB55  2C                 	db	44
  2418  00FB56  25                 	db	37
  2419  00FB57  64                 	db	100	;'d'
  2420  00FB58  2C                 	db	44
  2421  00FB59  25                 	db	37
  2422  00FB5A  64                 	db	100	;'d'
  2423  00FB5B  2C                 	db	44
  2424  00FB5C  25                 	db	37
  2425  00FB5D  6C                 	db	108	;'l'
  2426  00FB5E  75                 	db	117	;'u'
  2427  00FB5F  2C                 	db	44
  2428  00FB60  25                 	db	37
  2429  00FB61  6C                 	db	108	;'l'
  2430  00FB62  75                 	db	117	;'u'
  2431  00FB63  2C                 	db	44
  2432  00FB64  25                 	db	37
  2433  00FB65  34                 	db	52	;'4'
  2434  00FB66  2E                 	db	46
  2435  00FB67  33                 	db	51	;'3'
  2436  00FB68  66                 	db	102	;'f'
  2437  00FB69  2C                 	db	44
  2438  00FB6A  25                 	db	37
  2439  00FB6B  34                 	db	52	;'4'
  2440  00FB6C  2E                 	db	46
  2441  00FB6D  33                 	db	51	;'3'
  2442  00FB6E  66                 	db	102	;'f'
  2443  00FB6F  2C                 	db	44
  2444  00FB70  25                 	db	37
  2445  00FB71  34                 	db	52	;'4'
  2446  00FB72  2E                 	db	46
  2447  00FB73  33                 	db	51	;'3'
  2448  00FB74  66                 	db	102	;'f'
  2449  00FB75  0D                 	db	13
  2450  00FB76  0A                 	db	10
  2451  00FB77  00                 	db	0
  2452  00FB78                     STR_36:
  2453                           
  2454                           ; BSR set to: 57
  2455  00FB78  53                 	db	83	;'S'
  2456  00FB79  25                 	db	37
  2457  00FB7A  63                 	db	99	;'c'
  2458  00FB7B  43                 	db	67	;'C'
  2459  00FB7C  20                 	db	32
  2460  00FB7D  25                 	db	37
  2461  00FB7E  64                 	db	100	;'d'
  2462  00FB7F  20                 	db	32
  2463  00FB80  52                 	db	82	;'R'
  2464  00FB81  55                 	db	85	;'U'
  2465  00FB82  4E                 	db	78	;'N'
  2466  00FB83  20                 	db	32
  2467  00FB84  25                 	db	37
  2468  00FB85  64                 	db	100	;'d'
  2469  00FB86  20                 	db	32
  2470  00FB87  56                 	db	86	;'V'
  2471  00FB88  25                 	db	37
  2472  00FB89  32                 	db	50	;'2'
  2473  00FB8A  2E                 	db	46
  2474  00FB8B  32                 	db	50	;'2'
  2475  00FB8C  66                 	db	102	;'f'
  2476  00FB8D  20                 	db	32
  2477  00FB8E  20                 	db	32
  2478  00FB8F  20                 	db	32
  2479  00FB90  20                 	db	32
  2480  00FB91  20                 	db	32
  2481  00FB92  20                 	db	32
  2482  00FB93  20                 	db	32
  2483  00FB94  00                 	db	0
  2484  00FB95                     STR_17:
  2485                           
  2486                           ; BSR set to: 57
  2487  00FB95  52                 	db	82	;'R'
  2488  00FB96  31                 	db	49	;'1'
  2489  00FB97  20                 	db	32
  2490  00FB98  25                 	db	37
  2491  00FB99  32                 	db	50	;'2'
  2492  00FB9A  2E                 	db	46
  2493  00FB9B  33                 	db	51	;'3'
  2494  00FB9C  66                 	db	102	;'f'
  2495  00FB9D  20                 	db	32
  2496  00FB9E  25                 	db	37
  2497  00FB9F  33                 	db	51	;'3'
  2498  00FBA0  2E                 	db	46
  2499  00FBA1  34                 	db	52	;'4'
  2500  00FBA2  66                 	db	102	;'f'
  2501  00FBA3  20                 	db	32
  2502  00FBA4  20                 	db	32
  2503  00FBA5  20                 	db	32
  2504  00FBA6  20                 	db	32
  2505  00FBA7  20                 	db	32
  2506  00FBA8  20                 	db	32
  2507  00FBA9  20                 	db	32
  2508  00FBAA  20                 	db	32
  2509  00FBAB  20                 	db	32
  2510  00FBAC  20                 	db	32
  2511  00FBAD  20                 	db	32
  2512  00FBAE  00                 	db	0
  2513  00FBAF                     STR_18:
  2514                           
  2515                           ; BSR set to: 57
  2516  00FBAF  52                 	db	82	;'R'
  2517  00FBB0  32                 	db	50	;'2'
  2518  00FBB1  20                 	db	32
  2519  00FBB2  25                 	db	37
  2520  00FBB3  32                 	db	50	;'2'
  2521  00FBB4  2E                 	db	46
  2522  00FBB5  33                 	db	51	;'3'
  2523  00FBB6  66                 	db	102	;'f'
  2524  00FBB7  20                 	db	32
  2525  00FBB8  25                 	db	37
  2526  00FBB9  33                 	db	51	;'3'
  2527  00FBBA  2E                 	db	46
  2528  00FBBB  34                 	db	52	;'4'
  2529  00FBBC  66                 	db	102	;'f'
  2530  00FBBD  20                 	db	32
  2531  00FBBE  20                 	db	32
  2532  00FBBF  20                 	db	32
  2533  00FBC0  20                 	db	32
  2534  00FBC1  20                 	db	32
  2535  00FBC2  20                 	db	32
  2536  00FBC3  20                 	db	32
  2537  00FBC4  20                 	db	32
  2538  00FBC5  20                 	db	32
  2539  00FBC6  20                 	db	32
  2540  00FBC7  20                 	db	32
  2541  00FBC8  00                 	db	0
  2542  00FBC9                     STR_9:
  2543                           
  2544                           ; BSR set to: 57
  2545  00FBC9  53                 	db	83	;'S'
  2546  00FBCA  20                 	db	32
  2547  00FBCB  53                 	db	83	;'S'
  2548  00FBCC  25                 	db	37
  2549  00FBCD  63                 	db	99	;'c'
  2550  00FBCE  43                 	db	67	;'C'
  2551  00FBCF  20                 	db	32
  2552  00FBD0  25                 	db	37
  2553  00FBD1  64                 	db	100	;'d'
  2554  00FBD2  20                 	db	32
  2555  00FBD3  25                 	db	37
  2556  00FBD4  32                 	db	50	;'2'
  2557  00FBD5  2E                 	db	46
  2558  00FBD6  34                 	db	52	;'4'
  2559  00FBD7  66                 	db	102	;'f'
  2560  00FBD8  20                 	db	32
  2561  00FBD9  20                 	db	32
  2562  00FBDA  20                 	db	32
  2563  00FBDB  20                 	db	32
  2564  00FBDC  20                 	db	32
  2565  00FBDD  20                 	db	32
  2566  00FBDE  20                 	db	32
  2567  00FBDF  20                 	db	32
  2568  00FBE0  20                 	db	32
  2569  00FBE1  20                 	db	32
  2570  00FBE2  00                 	db	0
  2571  00FBE3                     
  2572                           ; BSR set to: 57
  2573  00FBE3  20                 	db	32
  2574  00FBE4  4D                 	db	77	;'M'
  2575  00FBE5  65                 	db	101	;'e'
  2576  00FBE6  73                 	db	115	;'s'
  2577  00FBE7  67                 	db	103	;'g'
  2578  00FBE8  20                 	db	32
  2579  00FBE9  25                 	db	37
  2580  00FBEA  64                 	db	100	;'d'
  2581  00FBEB  20                 	db	32
  2582  00FBEC  53                 	db	83	;'S'
  2583  00FBED  74                 	db	116	;'t'
  2584  00FBEE  61                 	db	97	;'a'
  2585  00FBEF  63                 	db	99	;'c'
  2586  00FBF0  6B                 	db	107	;'k'
  2587  00FBF1  20                 	db	32
  2588  00FBF2  25                 	db	37
  2589  00FBF3  64                 	db	100	;'d'
  2590  00FBF4  20                 	db	32
  2591  00FBF5  20                 	db	32
  2592  00FBF6  20                 	db	32
  2593  00FBF7  20                 	db	32
  2594  00FBF8  20                 	db	32
  2595  00FBF9  20                 	db	32
  2596  00FBFA  00                 	db	0
  2597  00FBFB                     STR_37:
  2598                           
  2599                           ; BSR set to: 57
  2600  00FBFB  45                 	db	69	;'E'
  2601  00FBFC  53                 	db	83	;'S'
  2602  00FBFD  52                 	db	82	;'R'
  2603  00FBFE  20                 	db	32
  2604  00FBFF  20                 	db	32
  2605  00FC00  25                 	db	37
  2606  00FC01  32                 	db	50	;'2'
  2607  00FC02  2E                 	db	46
  2608  00FC03  36                 	db	54	;'6'
  2609  00FC04  66                 	db	102	;'f'
  2610  00FC05  20                 	db	32
  2611  00FC06  20                 	db	32
  2612  00FC07  20                 	db	32
  2613  00FC08  20                 	db	32
  2614  00FC09  20                 	db	32
  2615  00FC0A  20                 	db	32
  2616  00FC0B  20                 	db	32
  2617  00FC0C  20                 	db	32
  2618  00FC0D  20                 	db	32
  2619  00FC0E  20                 	db	32
  2620  00FC0F  20                 	db	32
  2621  00FC10  20                 	db	32
  2622  00FC11  00                 	db	0
  2623  00FC12                     STR_34:
  2624                           
  2625                           ; BSR set to: 57
  2626  00FC12  42                 	db	66	;'B'
  2627  00FC13  41                 	db	65	;'A'
  2628  00FC14  54                 	db	84	;'T'
  2629  00FC15  54                 	db	84	;'T'
  2630  00FC16  20                 	db	32
  2631  00FC17  50                 	db	80	;'P'
  2632  00FC18  57                 	db	87	;'W'
  2633  00FC19  52                 	db	82	;'R'
  2634  00FC1A  20                 	db	32
  2635  00FC1B  25                 	db	37
  2636  00FC1C  33                 	db	51	;'3'
  2637  00FC1D  2E                 	db	46
  2638  00FC1E  32                 	db	50	;'2'
  2639  00FC1F  66                 	db	102	;'f'
  2640  00FC20  20                 	db	32
  2641  00FC21  20                 	db	32
  2642  00FC22  20                 	db	32
  2643  00FC23  20                 	db	32
  2644  00FC24  20                 	db	32
  2645  00FC25  20                 	db	32
  2646  00FC26  20                 	db	32
  2647  00FC27  20                 	db	32
  2648  00FC28  00                 	db	0
  2649  00FC29                     STR_38:
  2650                           
  2651                           ; BSR set to: 57
  2652  00FC29  52                 	db	82	;'R'
  2653  00FC2A  31                 	db	49	;'1'
  2654  00FC2B  20                 	db	32
  2655  00FC2C  25                 	db	37
  2656  00FC2D  32                 	db	50	;'2'
  2657  00FC2E  2E                 	db	46
  2658  00FC2F  33                 	db	51	;'3'
  2659  00FC30  66                 	db	102	;'f'
  2660  00FC31  20                 	db	32
  2661  00FC32  25                 	db	37
  2662  00FC33  33                 	db	51	;'3'
  2663  00FC34  2E                 	db	46
  2664  00FC35  34                 	db	52	;'4'
  2665  00FC36  66                 	db	102	;'f'
  2666  00FC37  20                 	db	32
  2667  00FC38  20                 	db	32
  2668  00FC39  20                 	db	32
  2669  00FC3A  20                 	db	32
  2670  00FC3B  20                 	db	32
  2671  00FC3C  20                 	db	32
  2672  00FC3D  20                 	db	32
  2673  00FC3E  20                 	db	32
  2674  00FC3F  00                 	db	0
  2675  00FC40                     STR_39:
  2676                           
  2677                           ; BSR set to: 57
  2678  00FC40  52                 	db	82	;'R'
  2679  00FC41  32                 	db	50	;'2'
  2680  00FC42  20                 	db	32
  2681  00FC43  25                 	db	37
  2682  00FC44  32                 	db	50	;'2'
  2683  00FC45  2E                 	db	46
  2684  00FC46  33                 	db	51	;'3'
  2685  00FC47  66                 	db	102	;'f'
  2686  00FC48  20                 	db	32
  2687  00FC49  25                 	db	37
  2688  00FC4A  33                 	db	51	;'3'
  2689  00FC4B  2E                 	db	46
  2690  00FC4C  34                 	db	52	;'4'
  2691  00FC4D  66                 	db	102	;'f'
  2692  00FC4E  20                 	db	32
  2693  00FC4F  20                 	db	32
  2694  00FC50  20                 	db	32
  2695  00FC51  20                 	db	32
  2696  00FC52  20                 	db	32
  2697  00FC53  20                 	db	32
  2698  00FC54  20                 	db	32
  2699  00FC55  20                 	db	32
  2700  00FC56  00                 	db	0
  2701  00FC57                     STR_35:
  2702                           
  2703                           ; BSR set to: 57
  2704  00FC57  42                 	db	66	;'B'
  2705  00FC58  41                 	db	65	;'A'
  2706  00FC59  48                 	db	72	;'H'
  2707  00FC5A  20                 	db	32
  2708  00FC5B  25                 	db	37
  2709  00FC5C  33                 	db	51	;'3'
  2710  00FC5D  2E                 	db	46
  2711  00FC5E  32                 	db	50	;'2'
  2712  00FC5F  66                 	db	102	;'f'
  2713  00FC60  20                 	db	32
  2714  00FC61  50                 	db	80	;'P'
  2715  00FC62  25                 	db	37
  2716  00FC63  33                 	db	51	;'3'
  2717  00FC64  2E                 	db	46
  2718  00FC65  32                 	db	50	;'2'
  2719  00FC66  66                 	db	102	;'f'
  2720  00FC67  20                 	db	32
  2721  00FC68  20                 	db	32
  2722  00FC69  20                 	db	32
  2723  00FC6A  20                 	db	32
  2724  00FC6B  20                 	db	32
  2725  00FC6C  20                 	db	32
  2726  00FC6D  00                 	db	0
  2727  00FC6E                     STR_16:
  2728                           
  2729                           ; BSR set to: 57
  2730  00FC6E  45                 	db	69	;'E'
  2731  00FC6F  53                 	db	83	;'S'
  2732  00FC70  52                 	db	82	;'R'
  2733  00FC71  20                 	db	32
  2734  00FC72  20                 	db	32
  2735  00FC73  25                 	db	37
  2736  00FC74  32                 	db	50	;'2'
  2737  00FC75  2E                 	db	46
  2738  00FC76  36                 	db	54	;'6'
  2739  00FC77  66                 	db	102	;'f'
  2740  00FC78  20                 	db	32
  2741  00FC79  20                 	db	32
  2742  00FC7A  20                 	db	32
  2743  00FC7B  20                 	db	32
  2744  00FC7C  20                 	db	32
  2745  00FC7D  20                 	db	32
  2746  00FC7E  20                 	db	32
  2747  00FC7F  20                 	db	32
  2748  00FC80  20                 	db	32
  2749  00FC81  20                 	db	32
  2750  00FC82  20                 	db	32
  2751  00FC83  00                 	db	0
  2752  00FC84                     STR_10:
  2753                           
  2754                           ; BSR set to: 57
  2755  00FC84  53                 	db	83	;'S'
  2756  00FC85  74                 	db	116	;'t'
  2757  00FC86  61                 	db	97	;'a'
  2758  00FC87  74                 	db	116	;'t'
  2759  00FC88  69                 	db	105	;'i'
  2760  00FC89  63                 	db	99	;'c'
  2761  00FC8A  20                 	db	32
  2762  00FC8B  53                 	db	83	;'S'
  2763  00FC8C  4F                 	db	79	;'O'
  2764  00FC8D  43                 	db	67	;'C'
  2765  00FC8E  20                 	db	32
  2766  00FC8F  25                 	db	37
  2767  00FC90  64                 	db	100	;'d'
  2768  00FC91  20                 	db	32
  2769  00FC92  20                 	db	32
  2770  00FC93  20                 	db	32
  2771  00FC94  20                 	db	32
  2772  00FC95  20                 	db	32
  2773  00FC96  20                 	db	32
  2774  00FC97  20                 	db	32
  2775  00FC98  20                 	db	32
  2776  00FC99  00                 	db	0
  2777  00FC9A                     STR_31:
  2778                           
  2779                           ; BSR set to: 57
  2780  00FC9A  42                 	db	66	;'B'
  2781  00FC9B  41                 	db	65	;'A'
  2782  00FC9C  54                 	db	84	;'T'
  2783  00FC9D  20                 	db	32
  2784  00FC9E  49                 	db	73	;'I'
  2785  00FC9F  57                 	db	87	;'W'
  2786  00FCA0  48                 	db	72	;'H'
  2787  00FCA1  20                 	db	32
  2788  00FCA2  25                 	db	37
  2789  00FCA3  34                 	db	52	;'4'
  2790  00FCA4  2E                 	db	46
  2791  00FCA5  31                 	db	49	;'1'
  2792  00FCA6  66                 	db	102	;'f'
  2793  00FCA7  20                 	db	32
  2794  00FCA8  20                 	db	32
  2795  00FCA9  20                 	db	32
  2796  00FCAA  20                 	db	32
  2797  00FCAB  20                 	db	32
  2798  00FCAC  20                 	db	32
  2799  00FCAD  20                 	db	32
  2800  00FCAE  20                 	db	32
  2801  00FCAF  00                 	db	0
  2802  00FCB0                     STR_32:
  2803                           
  2804                           ; BSR set to: 57
  2805  00FCB0  42                 	db	66	;'B'
  2806  00FCB1  41                 	db	65	;'A'
  2807  00FCB2  54                 	db	84	;'T'
  2808  00FCB3  20                 	db	32
  2809  00FCB4  4F                 	db	79	;'O'
  2810  00FCB5  57                 	db	87	;'W'
  2811  00FCB6  48                 	db	72	;'H'
  2812  00FCB7  20                 	db	32
  2813  00FCB8  25                 	db	37
  2814  00FCB9  34                 	db	52	;'4'
  2815  00FCBA  2E                 	db	46
  2816  00FCBB  31                 	db	49	;'1'
  2817  00FCBC  66                 	db	102	;'f'
  2818  00FCBD  20                 	db	32
  2819  00FCBE  20                 	db	32
  2820  00FCBF  20                 	db	32
  2821  00FCC0  20                 	db	32
  2822  00FCC1  20                 	db	32
  2823  00FCC2  20                 	db	32
  2824  00FCC3  20                 	db	32
  2825  00FCC4  20                 	db	32
  2826  00FCC5  00                 	db	0
  2827  00FCC6                     STR_33:
  2828                           
  2829                           ; BSR set to: 57
  2830  00FCC6  42                 	db	66	;'B'
  2831  00FCC7  41                 	db	65	;'A'
  2832  00FCC8  54                 	db	84	;'T'
  2833  00FCC9  20                 	db	32
  2834  00FCCA  54                 	db	84	;'T'
  2835  00FCCB  57                 	db	87	;'W'
  2836  00FCCC  48                 	db	72	;'H'
  2837  00FCCD  20                 	db	32
  2838  00FCCE  25                 	db	37
  2839  00FCCF  34                 	db	52	;'4'
  2840  00FCD0  2E                 	db	46
  2841  00FCD1  31                 	db	49	;'1'
  2842  00FCD2  66                 	db	102	;'f'
  2843  00FCD3  20                 	db	32
  2844  00FCD4  20                 	db	32
  2845  00FCD5  20                 	db	32
  2846  00FCD6  20                 	db	32
  2847  00FCD7  20                 	db	32
  2848  00FCD8  20                 	db	32
  2849  00FCD9  20                 	db	32
  2850  00FCDA  20                 	db	32
  2851  00FCDB  00                 	db	0
  2852  00FCDC                     STR_27:
  2853                           
  2854                           ; BSR set to: 57
  2855  00FCDC  49                 	db	73	;'I'
  2856  00FCDD  4E                 	db	78	;'N'
  2857  00FCDE  56                 	db	86	;'V'
  2858  00FCDF  20                 	db	32
  2859  00FCE0  20                 	db	32
  2860  00FCE1  57                 	db	87	;'W'
  2861  00FCE2  48                 	db	72	;'H'
  2862  00FCE3  20                 	db	32
  2863  00FCE4  25                 	db	37
  2864  00FCE5  33                 	db	51	;'3'
  2865  00FCE6  2E                 	db	46
  2866  00FCE7  32                 	db	50	;'2'
  2867  00FCE8  66                 	db	102	;'f'
  2868  00FCE9  20                 	db	32
  2869  00FCEA  20                 	db	32
  2870  00FCEB  20                 	db	32
  2871  00FCEC  20                 	db	32
  2872  00FCED  20                 	db	32
  2873  00FCEE  20                 	db	32
  2874  00FCEF  20                 	db	32
  2875  00FCF0  20                 	db	32
  2876  00FCF1  00                 	db	0
  2877  00FCF2                     STR_26:
  2878                           
  2879                           ; BSR set to: 57
  2880  00FCF2  4C                 	db	76	;'L'
  2881  00FCF3  4F                 	db	79	;'O'
  2882  00FCF4  41                 	db	65	;'A'
  2883  00FCF5  44                 	db	68	;'D'
  2884  00FCF6  20                 	db	32
  2885  00FCF7  57                 	db	87	;'W'
  2886  00FCF8  48                 	db	72	;'H'
  2887  00FCF9  20                 	db	32
  2888  00FCFA  25                 	db	37
  2889  00FCFB  33                 	db	51	;'3'
  2890  00FCFC  2E                 	db	46
  2891  00FCFD  32                 	db	50	;'2'
  2892  00FCFE  66                 	db	102	;'f'
  2893  00FCFF  20                 	db	32
  2894  00FD00  20                 	db	32
  2895  00FD01  20                 	db	32
  2896  00FD02  20                 	db	32
  2897  00FD03  20                 	db	32
  2898  00FD04  20                 	db	32
  2899  00FD05  20                 	db	32
  2900  00FD06  20                 	db	32
  2901  00FD07  00                 	db	0
  2902  00FD08                     STR_25:
  2903                           
  2904                           ; BSR set to: 57
  2905  00FD08  50                 	db	80	;'P'
  2906  00FD09  56                 	db	86	;'V'
  2907  00FD0A  20                 	db	32
  2908  00FD0B  25                 	db	37
  2909  00FD0C  63                 	db	99	;'c'
  2910  00FD0D  20                 	db	32
  2911  00FD0E  57                 	db	87	;'W'
  2912  00FD0F  48                 	db	72	;'H'
  2913  00FD10  20                 	db	32
  2914  00FD11  25                 	db	37
  2915  00FD12  33                 	db	51	;'3'
  2916  00FD13  2E                 	db	46
  2917  00FD14  32                 	db	50	;'2'
  2918  00FD15  66                 	db	102	;'f'
  2919  00FD16  20                 	db	32
  2920  00FD17  20                 	db	32
  2921  00FD18  20                 	db	32
  2922  00FD19  20                 	db	32
  2923  00FD1A  20                 	db	32
  2924  00FD1B  20                 	db	32
  2925  00FD1C  20                 	db	32
  2926  00FD1D  00                 	db	0
  2927  00FD1E                     STR_24:
  2928                           
  2929                           ; BSR set to: 57
  2930  00FD1E  49                 	db	73	;'I'
  2931  00FD1F  4E                 	db	78	;'N'
  2932  00FD20  56                 	db	86	;'V'
  2933  00FD21  20                 	db	32
  2934  00FD22  20                 	db	32
  2935  00FD23  50                 	db	80	;'P'
  2936  00FD24  57                 	db	87	;'W'
  2937  00FD25  52                 	db	82	;'R'
  2938  00FD26  20                 	db	32
  2939  00FD27  25                 	db	37
  2940  00FD28  33                 	db	51	;'3'
  2941  00FD29  2E                 	db	46
  2942  00FD2A  32                 	db	50	;'2'
  2943  00FD2B  66                 	db	102	;'f'
  2944  00FD2C  20                 	db	32
  2945  00FD2D  20                 	db	32
  2946  00FD2E  20                 	db	32
  2947  00FD2F  20                 	db	32
  2948  00FD30  20                 	db	32
  2949  00FD31  20                 	db	32
  2950  00FD32  20                 	db	32
  2951  00FD33  00                 	db	0
  2952  00FD34                     STR_23:
  2953                           
  2954                           ; BSR set to: 57
  2955  00FD34  4C                 	db	76	;'L'
  2956  00FD35  4F                 	db	79	;'O'
  2957  00FD36  41                 	db	65	;'A'
  2958  00FD37  44                 	db	68	;'D'
  2959  00FD38  20                 	db	32
  2960  00FD39  50                 	db	80	;'P'
  2961  00FD3A  57                 	db	87	;'W'
  2962  00FD3B  52                 	db	82	;'R'
  2963  00FD3C  20                 	db	32
  2964  00FD3D  25                 	db	37
  2965  00FD3E  33                 	db	51	;'3'
  2966  00FD3F  2E                 	db	46
  2967  00FD40  32                 	db	50	;'2'
  2968  00FD41  66                 	db	102	;'f'
  2969  00FD42  20                 	db	32
  2970  00FD43  20                 	db	32
  2971  00FD44  20                 	db	32
  2972  00FD45  20                 	db	32
  2973  00FD46  20                 	db	32
  2974  00FD47  20                 	db	32
  2975  00FD48  20                 	db	32
  2976  00FD49  00                 	db	0
  2977  00FD4A                     STR_22:
  2978                           
  2979                           ; BSR set to: 57
  2980  00FD4A  50                 	db	80	;'P'
  2981  00FD4B  56                 	db	86	;'V'
  2982  00FD4C  20                 	db	32
  2983  00FD4D  25                 	db	37
  2984  00FD4E  63                 	db	99	;'c'
  2985  00FD4F  20                 	db	32
  2986  00FD50  50                 	db	80	;'P'
  2987  00FD51  57                 	db	87	;'W'
  2988  00FD52  52                 	db	82	;'R'
  2989  00FD53  20                 	db	32
  2990  00FD54  25                 	db	37
  2991  00FD55  33                 	db	51	;'3'
  2992  00FD56  2E                 	db	46
  2993  00FD57  32                 	db	50	;'2'
  2994  00FD58  66                 	db	102	;'f'
  2995  00FD59  20                 	db	32
  2996  00FD5A  20                 	db	32
  2997  00FD5B  20                 	db	32
  2998  00FD5C  20                 	db	32
  2999  00FD5D  20                 	db	32
  3000  00FD5E  20                 	db	32
  3001  00FD5F  00                 	db	0
  3002  00FD60                     STR_11:
  3003                           
  3004                           ; BSR set to: 57
  3005  00FD60  42                 	db	66	;'B'
  3006  00FD61  61                 	db	97	;'a'
  3007  00FD62  74                 	db	116	;'t'
  3008  00FD63  74                 	db	116	;'t'
  3009  00FD64  65                 	db	101	;'e'
  3010  00FD65  72                 	db	114	;'r'
  3011  00FD66  79                 	db	121	;'y'
  3012  00FD67  20                 	db	32
  3013  00FD68  41                 	db	65	;'A'
  3014  00FD69  68                 	db	104	;'h'
  3015  00FD6A  20                 	db	32
  3016  00FD6B  25                 	db	37
  3017  00FD6C  33                 	db	51	;'3'
  3018  00FD6D  2E                 	db	46
  3019  00FD6E  32                 	db	50	;'2'
  3020  00FD6F  66                 	db	102	;'f'
  3021  00FD70  20                 	db	32
  3022  00FD71  20                 	db	32
  3023  00FD72  20                 	db	32
  3024  00FD73  20                 	db	32
  3025  00FD74  20                 	db	32
  3026  00FD75  00                 	db	0
  3027  00FD76                     STR_29:
  3028                           
  3029                           ; BSR set to: 57
  3030  00FD76  42                 	db	66	;'B'
  3031  00FD77  56                 	db	86	;'V'
  3032  00FD78  20                 	db	32
  3033  00FD79  25                 	db	37
  3034  00FD7A  32                 	db	50	;'2'
  3035  00FD7B  2E                 	db	46
  3036  00FD7C  32                 	db	50	;'2'
  3037  00FD7D  66                 	db	102	;'f'
  3038  00FD7E  20                 	db	32
  3039  00FD7F  42                 	db	66	;'B'
  3040  00FD80  41                 	db	65	;'A'
  3041  00FD81  20                 	db	32
  3042  00FD82  25                 	db	37
  3043  00FD83  32                 	db	50	;'2'
  3044  00FD84  2E                 	db	46
  3045  00FD85  32                 	db	50	;'2'
  3046  00FD86  66                 	db	102	;'f'
  3047  00FD87  20                 	db	32
  3048  00FD88  20                 	db	32
  3049  00FD89  20                 	db	32
  3050  00FD8A  20                 	db	32
  3051  00FD8B  00                 	db	0
  3052  00FD8C                     STR_30:
  3053                           
  3054                           ; BSR set to: 57
  3055  00FD8C  43                 	db	67	;'C'
  3056  00FD8D  56                 	db	86	;'V'
  3057  00FD8E  20                 	db	32
  3058  00FD8F  25                 	db	37
  3059  00FD90  32                 	db	50	;'2'
  3060  00FD91  2E                 	db	46
  3061  00FD92  32                 	db	50	;'2'
  3062  00FD93  66                 	db	102	;'f'
  3063  00FD94  20                 	db	32
  3064  00FD95  4C                 	db	76	;'L'
  3065  00FD96  41                 	db	65	;'A'
  3066  00FD97  20                 	db	32
  3067  00FD98  25                 	db	37
  3068  00FD99  32                 	db	50	;'2'
  3069  00FD9A  2E                 	db	46
  3070  00FD9B  32                 	db	50	;'2'
  3071  00FD9C  66                 	db	102	;'f'
  3072  00FD9D  20                 	db	32
  3073  00FD9E  20                 	db	32
  3074  00FD9F  20                 	db	32
  3075  00FDA0  20                 	db	32
  3076  00FDA1  00                 	db	0
  3077  00FDA2                     STR_28:
  3078                           
  3079                           ; BSR set to: 57
  3080  00FDA2  50                 	db	80	;'P'
  3081  00FDA3  56                 	db	86	;'V'
  3082  00FDA4  20                 	db	32
  3083  00FDA5  25                 	db	37
  3084  00FDA6  32                 	db	50	;'2'
  3085  00FDA7  2E                 	db	46
  3086  00FDA8  32                 	db	50	;'2'
  3087  00FDA9  66                 	db	102	;'f'
  3088  00FDAA  20                 	db	32
  3089  00FDAB  50                 	db	80	;'P'
  3090  00FDAC  41                 	db	65	;'A'
  3091  00FDAD  20                 	db	32
  3092  00FDAE  25                 	db	37
  3093  00FDAF  32                 	db	50	;'2'
  3094  00FDB0  2E                 	db	46
  3095  00FDB1  32                 	db	50	;'2'
  3096  00FDB2  66                 	db	102	;'f'
  3097  00FDB3  20                 	db	32
  3098  00FDB4  20                 	db	32
  3099  00FDB5  20                 	db	32
  3100  00FDB6  20                 	db	32
  3101  00FDB7  00                 	db	0
  3102  00FDB8                     STR_40:
  3103                           
  3104                           ; BSR set to: 57
  3105  00FDB8  25                 	db	37
  3106  00FDB9  64                 	db	100	;'d'
  3107  00FDBA  20                 	db	32
  3108  00FDBB  25                 	db	37
  3109  00FDBC  32                 	db	50	;'2'
  3110  00FDBD  2E                 	db	46
  3111  00FDBE  34                 	db	52	;'4'
  3112  00FDBF  66                 	db	102	;'f'
  3113  00FDC0  2C                 	db	44
  3114  00FDC1  20                 	db	32
  3115  00FDC2  25                 	db	37
  3116  00FDC3  64                 	db	100	;'d'
  3117  00FDC4  20                 	db	32
  3118  00FDC5  20                 	db	32
  3119  00FDC6  54                 	db	84	;'T'
  3120  00FDC7  52                 	db	82	;'R'
  3121  00FDC8  49                 	db	73	;'I'
  3122  00FDC9  4D                 	db	77	;'M'
  3123  00FDCA  20                 	db	32
  3124  00FDCB  20                 	db	32
  3125  00FDCC  20                 	db	32
  3126  00FDCD  00                 	db	0
  3127  00FDCE                     STR_5:
  3128                           
  3129                           ; BSR set to: 57
  3130  00FDCE  20                 	db	32
  3131  00FDCF  20                 	db	32
  3132  00FDD0  20                 	db	32
  3133  00FDD1  20                 	db	32
  3134  00FDD2  20                 	db	32
  3135  00FDD3  20                 	db	32
  3136  00FDD4  20                 	db	32
  3137  00FDD5  20                 	db	32
  3138  00FDD6  20                 	db	32
  3139  00FDD7  20                 	db	32
  3140  00FDD8  20                 	db	32
  3141  00FDD9  20                 	db	32
  3142  00FDDA  20                 	db	32
  3143  00FDDB  20                 	db	32
  3144  00FDDC  20                 	db	32
  3145  00FDDD  20                 	db	32
  3146  00FDDE  20                 	db	32
  3147  00FDDF  20                 	db	32
  3148  00FDE0  20                 	db	32
  3149  00FDE1  20                 	db	32
  3150  00FDE2  00                 	db	0
  3151  00FDE3                     STR_49:
  3152                           
  3153                           ; BSR set to: 57
  3154  00FDE3  20                 	db	32
  3155  00FDE4  25                 	db	37
  3156  00FDE5  64                 	db	100	;'d'
  3157  00FDE6  20                 	db	32
  3158  00FDE7  25                 	db	37
  3159  00FDE8  64                 	db	100	;'d'
  3160  00FDE9  20                 	db	32
  3161  00FDEA  20                 	db	32
  3162  00FDEB  20                 	db	32
  3163  00FDEC  20                 	db	32
  3164  00FDED  20                 	db	32
  3165  00FDEE  20                 	db	32
  3166  00FDEF  20                 	db	32
  3167  00FDF0  20                 	db	32
  3168  00FDF1  20                 	db	32
  3169  00FDF2  20                 	db	32
  3170  00FDF3  20                 	db	32
  3171  00FDF4  20                 	db	32
  3172  00FDF5  20                 	db	32
  3173  00FDF6  20                 	db	32
  3174  00FDF7  00                 	db	0
  3175  00FDF8                     STR_44:
  3176                           
  3177                           ; BSR set to: 57
  3178  00FDF8  53                 	db	83	;'S'
  3179  00FDF9  65                 	db	101	;'e'
  3180  00FDFA  6E                 	db	110	;'n'
  3181  00FDFB  73                 	db	115	;'s'
  3182  00FDFC  6F                 	db	111	;'o'
  3183  00FDFD  72                 	db	114	;'r'
  3184  00FDFE  20                 	db	32
  3185  00FDFF  20                 	db	32
  3186  00FE00  20                 	db	32
  3187  00FE01  20                 	db	32
  3188  00FE02  20                 	db	32
  3189  00FE03  20                 	db	32
  3190  00FE04  20                 	db	32
  3191  00FE05  20                 	db	32
  3192  00FE06  20                 	db	32
  3193  00FE07  20                 	db	32
  3194  00FE08  20                 	db	32
  3195  00FE09  20                 	db	32
  3196  00FE0A  20                 	db	32
  3197  00FE0B  20                 	db	32
  3198  00FE0C  00                 	db	0
  3199  00FE0D                     STR_52:
  3200                           
  3201                           ; BSR set to: 57
  3202  00FE0D  53                 	db	83	;'S'
  3203  00FE0E  65                 	db	101	;'e'
  3204  00FE0F  6E                 	db	110	;'n'
  3205  00FE10  73                 	db	115	;'s'
  3206  00FE11  6F                 	db	111	;'o'
  3207  00FE12  72                 	db	114	;'r'
  3208  00FE13  73                 	db	115	;'s'
  3209  00FE14  20                 	db	32
  3210  00FE15  20                 	db	32
  3211  00FE16  20                 	db	32
  3212  00FE17  20                 	db	32
  3213  00FE18  20                 	db	32
  3214  00FE19  20                 	db	32
  3215  00FE1A  20                 	db	32
  3216  00FE1B  20                 	db	32
  3217  00FE1C  20                 	db	32
  3218  00FE1D  20                 	db	32
  3219  00FE1E  20                 	db	32
  3220  00FE1F  20                 	db	32
  3221  00FE20  20                 	db	32
  3222  00FE21  00                 	db	0
  3223  00FE22                     STR_8:
  3224                           
  3225                           ; BSR set to: 57
  3226  00FE22  42                 	db	66	;'B'
  3227  00FE23  56                 	db	86	;'V'
  3228  00FE24  20                 	db	32
  3229  00FE25  25                 	db	37
  3230  00FE26  32                 	db	50	;'2'
  3231  00FE27  2E                 	db	46
  3232  00FE28  34                 	db	52	;'4'
  3233  00FE29  66                 	db	102	;'f'
  3234  00FE2A  20                 	db	32
  3235  00FE2B  20                 	db	32
  3236  00FE2C  20                 	db	32
  3237  00FE2D  20                 	db	32
  3238  00FE2E  20                 	db	32
  3239  00FE2F  20                 	db	32
  3240  00FE30  20                 	db	32
  3241  00FE31  20                 	db	32
  3242  00FE32  20                 	db	32
  3243  00FE33  20                 	db	32
  3244  00FE34  20                 	db	32
  3245  00FE35  20                 	db	32
  3246  00FE36  00                 	db	0
  3247  00FE37                     STR_4:
  3248                           
  3249                           ; BSR set to: 57
  3250  00FE37  20                 	db	32
  3251  00FE38  4E                 	db	78	;'N'
  3252  00FE39  53                 	db	83	;'S'
  3253  00FE3A  41                 	db	65	;'A'
  3254  00FE3B  53                 	db	83	;'S'
  3255  00FE3C  50                 	db	80	;'P'
  3256  00FE3D  4F                 	db	79	;'O'
  3257  00FE3E  4F                 	db	79	;'O'
  3258  00FE3F  4B                 	db	75	;'K'
  3259  00FE40  20                 	db	32
  3260  00FE41  20                 	db	32
  3261  00FE42  20                 	db	32
  3262  00FE43  20                 	db	32
  3263  00FE44  20                 	db	32
  3264  00FE45  20                 	db	32
  3265  00FE46  20                 	db	32
  3266  00FE47  20                 	db	32
  3267  00FE48  20                 	db	32
  3268  00FE49  20                 	db	32
  3269  00FE4A  20                 	db	32
  3270  00FE4B  00                 	db	0
  3271  00FE4C                     STR_12:
  3272                           
  3273                           ; BSR set to: 57
  3274  00FE4C  42                 	db	66	;'B'
  3275  00FE4D  61                 	db	97	;'a'
  3276  00FE4E  74                 	db	116	;'t'
  3277  00FE4F  74                 	db	116	;'t'
  3278  00FE50  65                 	db	101	;'e'
  3279  00FE51  72                 	db	114	;'r'
  3280  00FE52  79                 	db	121	;'y'
  3281  00FE53  20                 	db	32
  3282  00FE54  45                 	db	69	;'E'
  3283  00FE55  53                 	db	83	;'S'
  3284  00FE56  52                 	db	82	;'R'
  3285  00FE57  20                 	db	32
  3286  00FE58  20                 	db	32
  3287  00FE59  20                 	db	32
  3288  00FE5A  20                 	db	32
  3289  00FE5B  20                 	db	32
  3290  00FE5C  20                 	db	32
  3291  00FE5D  20                 	db	32
  3292  00FE5E  20                 	db	32
  3293  00FE5F  20                 	db	32
  3294  00FE60  00                 	db	0
  3295  00FE61                     STR_13:
  3296                           
  3297                           ; BSR set to: 57
  3298  00FE61  43                 	db	67	;'C'
  3299  00FE62  61                 	db	97	;'a'
  3300  00FE63  6C                 	db	108	;'l'
  3301  00FE64  63                 	db	99	;'c'
  3302  00FE65  75                 	db	117	;'u'
  3303  00FE66  6C                 	db	108	;'l'
  3304  00FE67  61                 	db	97	;'a'
  3305  00FE68  74                 	db	116	;'t'
  3306  00FE69  69                 	db	105	;'i'
  3307  00FE6A  6F                 	db	111	;'o'
  3308  00FE6B  6E                 	db	110	;'n'
  3309  00FE6C  20                 	db	32
  3310  00FE6D  20                 	db	32
  3311  00FE6E  20                 	db	32
  3312  00FE6F  20                 	db	32
  3313  00FE70  20                 	db	32
  3314  00FE71  20                 	db	32
  3315  00FE72  20                 	db	32
  3316  00FE73  20                 	db	32
  3317  00FE74  20                 	db	32
  3318  00FE75  00                 	db	0
  3319  00FE76                     STR_45:
  3320                           
  3321                           ; BSR set to: 57
  3322  00FE76  43                 	db	67	;'C'
  3323  00FE77  61                 	db	97	;'a'
  3324  00FE78  6C                 	db	108	;'l'
  3325  00FE79  69                 	db	105	;'i'
  3326  00FE7A  62                 	db	98	;'b'
  3327  00FE7B  72                 	db	114	;'r'
  3328  00FE7C  61                 	db	97	;'a'
  3329  00FE7D  74                 	db	116	;'t'
  3330  00FE7E  69                 	db	105	;'i'
  3331  00FE7F  6F                 	db	111	;'o'
  3332  00FE80  6E                 	db	110	;'n'
  3333  00FE81  20                 	db	32
  3334  00FE82  20                 	db	32
  3335  00FE83  20                 	db	32
  3336  00FE84  20                 	db	32
  3337  00FE85  20                 	db	32
  3338  00FE86  20                 	db	32
  3339  00FE87  20                 	db	32
  3340  00FE88  20                 	db	32
  3341  00FE89  20                 	db	32
  3342  00FE8A  00                 	db	0
  3343  00FE8B                     STR_2:
  3344                           
  3345                           ; BSR set to: 57
  3346  00FE8B  20                 	db	32
  3347  00FE8C  56                 	db	86	;'V'
  3348  00FE8D  65                 	db	101	;'e'
  3349  00FE8E  72                 	db	114	;'r'
  3350  00FE8F  73                 	db	115	;'s'
  3351  00FE90  69                 	db	105	;'i'
  3352  00FE91  6F                 	db	111	;'o'
  3353  00FE92  6E                 	db	110	;'n'
  3354  00FE93  20                 	db	32
  3355  00FE94  25                 	db	37
  3356  00FE95  73                 	db	115	;'s'
  3357  00FE96  20                 	db	32
  3358  00FE97  20                 	db	32
  3359  00FE98  20                 	db	32
  3360  00FE99  20                 	db	32
  3361  00FE9A  20                 	db	32
  3362  00FE9B  20                 	db	32
  3363  00FE9C  20                 	db	32
  3364  00FE9D  20                 	db	32
  3365  00FE9E  20                 	db	32
  3366  00FE9F  00                 	db	0
  3367  00FEA0                     STR_56:
  3368                           
  3369                           ; BSR set to: 57
  3370  00FEA0  4F                 	db	79	;'O'
  3371  00FEA1  75                 	db	117	;'u'
  3372  00FEA2  74                 	db	116	;'t'
  3373  00FEA3  20                 	db	32
  3374  00FEA4  4F                 	db	79	;'O'
  3375  00FEA5  66                 	db	102	;'f'
  3376  00FEA6  20                 	db	32
  3377  00FEA7  52                 	db	82	;'R'
  3378  00FEA8  61                 	db	97	;'a'
  3379  00FEA9  6E                 	db	110	;'n'
  3380  00FEAA  67                 	db	103	;'g'
  3381  00FEAB  65                 	db	101	;'e'
  3382  00FEAC  20                 	db	32
  3383  00FEAD  20                 	db	32
  3384  00FEAE  20                 	db	32
  3385  00FEAF  20                 	db	32
  3386  00FEB0  20                 	db	32
  3387  00FEB1  20                 	db	32
  3388  00FEB2  20                 	db	32
  3389  00FEB3  20                 	db	32
  3390  00FEB4  00                 	db	0
  3391  00FEB5                     STR_53:
  3392                           
  3393                           ; BSR set to: 57
  3394  00FEB5  5A                 	db	90	;'Z'
  3395  00FEB6  65                 	db	101	;'e'
  3396  00FEB7  72                 	db	114	;'r'
  3397  00FEB8  6F                 	db	111	;'o'
  3398  00FEB9  20                 	db	32
  3399  00FEBA  43                 	db	67	;'C'
  3400  00FEBB  61                 	db	97	;'a'
  3401  00FEBC  6C                 	db	108	;'l'
  3402  00FEBD  20                 	db	32
  3403  00FEBE  53                 	db	83	;'S'
  3404  00FEBF  65                 	db	101	;'e'
  3405  00FEC0  74                 	db	116	;'t'
  3406  00FEC1  20                 	db	32
  3407  00FEC2  20                 	db	32
  3408  00FEC3  20                 	db	32
  3409  00FEC4  20                 	db	32
  3410  00FEC5  20                 	db	32
  3411  00FEC6  20                 	db	32
  3412  00FEC7  20                 	db	32
  3413  00FEC8  20                 	db	32
  3414  00FEC9  00                 	db	0
  3415  00FECA                     STR_1:
  3416                           
  3417                           ; BSR set to: 57
  3418  00FECA  20                 	db	32
  3419  00FECB  4D                 	db	77	;'M'
  3420  00FECC  42                 	db	66	;'B'
  3421  00FECD  4D                 	db	77	;'M'
  3422  00FECE  43                 	db	67	;'C'
  3423  00FECF  20                 	db	32
  3424  00FED0  53                 	db	83	;'S'
  3425  00FED1  4F                 	db	79	;'O'
  3426  00FED2  4C                 	db	76	;'L'
  3427  00FED3  41                 	db	65	;'A'
  3428  00FED4  52                 	db	82	;'R'
  3429  00FED5  4D                 	db	77	;'M'
  3430  00FED6  4F                 	db	79	;'O'
  3431  00FED7  4E                 	db	78	;'N'
  3432  00FED8  20                 	db	32
  3433  00FED9  20                 	db	32
  3434  00FEDA  20                 	db	32
  3435  00FEDB  20                 	db	32
  3436  00FEDC  20                 	db	32
  3437  00FEDD  20                 	db	32
  3438  00FEDE  00                 	db	0
  3439  00FEDF                     STR_43:
  3440                           
  3441                           ; BSR set to: 57
  3442  00FEDF  50                 	db	80	;'P'
  3443  00FEE0  56                 	db	86	;'V'
  3444  00FEE1  20                 	db	32
  3445  00FEE2  61                 	db	97	;'a'
  3446  00FEE3  6E                 	db	110	;'n'
  3447  00FEE4  64                 	db	100	;'d'
  3448  00FEE5  20                 	db	32
  3449  00FEE6  42                 	db	66	;'B'
  3450  00FEE7  41                 	db	65	;'A'
  3451  00FEE8  54                 	db	84	;'T'
  3452  00FEE9  54                 	db	84	;'T'
  3453  00FEEA  45                 	db	69	;'E'
  3454  00FEEB  52                 	db	82	;'R'
  3455  00FEEC  59                 	db	89	;'Y'
  3456  00FEED  20                 	db	32
  3457  00FEEE  20                 	db	32
  3458  00FEEF  20                 	db	32
  3459  00FEF0  20                 	db	32
  3460  00FEF1  20                 	db	32
  3461  00FEF2  20                 	db	32
  3462  00FEF3  00                 	db	0
  3463  00FEF4                     STR_15:
  3464                           
  3465                           ; BSR set to: 57
  3466  00FEF4  43                 	db	67	;'C'
  3467  00FEF5  68                 	db	104	;'h'
  3468  00FEF6  65                 	db	101	;'e'
  3469  00FEF7  63                 	db	99	;'c'
  3470  00FEF8  6B                 	db	107	;'k'
  3471  00FEF9  69                 	db	105	;'i'
  3472  00FEFA  6E                 	db	110	;'n'
  3473  00FEFB  67                 	db	103	;'g'
  3474  00FEFC  20                 	db	32
  3475  00FEFD  25                 	db	37
  3476  00FEFE  63                 	db	99	;'c'
  3477  00FEFF  20                 	db	32
  3478  00FF00  25                 	db	37
  3479  00FF01  63                 	db	99	;'c'
  3480  00FF02  20                 	db	32
  3481  00FF03  20                 	db	32
  3482  00FF04  20                 	db	32
  3483  00FF05  20                 	db	32
  3484  00FF06  20                 	db	32
  3485  00FF07  20                 	db	32
  3486  00FF08  00                 	db	0
  3487  00FF09                     STR_48:
  3488                           
  3489                           ; BSR set to: 57
  3490  00FF09  53                 	db	83	;'S'
  3491  00FF0A  65                 	db	101	;'e'
  3492  00FF0B  6E                 	db	110	;'n'
  3493  00FF0C  73                 	db	115	;'s'
  3494  00FF0D  6F                 	db	111	;'o'
  3495  00FF0E  72                 	db	114	;'r'
  3496  00FF0F  20                 	db	32
  3497  00FF10  52                 	db	82	;'R'
  3498  00FF11  65                 	db	101	;'e'
  3499  00FF12  61                 	db	97	;'a'
  3500  00FF13  64                 	db	100	;'d'
  3501  00FF14  69                 	db	105	;'i'
  3502  00FF15  6E                 	db	110	;'n'
  3503  00FF16  67                 	db	103	;'g'
  3504  00FF17  73                 	db	115	;'s'
  3505  00FF18  20                 	db	32
  3506  00FF19  20                 	db	32
  3507  00FF1A  20                 	db	32
  3508  00FF1B  20                 	db	32
  3509  00FF1C  20                 	db	32
  3510  00FF1D  00                 	db	0
  3511  00FF1E                     STR_14:
  3512                           
  3513                           ; BSR set to: 57
  3514  00FF1E  43                 	db	67	;'C'
  3515  00FF1F  68                 	db	104	;'h'
  3516  00FF20  65                 	db	101	;'e'
  3517  00FF21  63                 	db	99	;'c'
  3518  00FF22  6B                 	db	107	;'k'
  3519  00FF23  20                 	db	32
  3520  00FF24  33                 	db	51	;'3'
  3521  00FF25  30                 	db	48	;'0'
  3522  00FF26  20                 	db	32
  3523  00FF27  73                 	db	115	;'s'
  3524  00FF28  65                 	db	101	;'e'
  3525  00FF29  63                 	db	99	;'c'
  3526  00FF2A  6F                 	db	111	;'o'
  3527  00FF2B  6E                 	db	110	;'n'
  3528  00FF2C  64                 	db	100	;'d'
  3529  00FF2D  73                 	db	115	;'s'
  3530  00FF2E  20                 	db	32
  3531  00FF2F  20                 	db	32
  3532  00FF30  20                 	db	32
  3533  00FF31  20                 	db	32
  3534  00FF32  00                 	db	0
  3535  00FF33                     STR_50:
  3536                           
  3537                           ; BSR set to: 57
  3538  00FF33  53                 	db	83	;'S'
  3539  00FF34  74                 	db	116	;'t'
  3540  00FF35  61                 	db	97	;'a'
  3541  00FF36  62                 	db	98	;'b'
  3542  00FF37  69                 	db	105	;'i'
  3543  00FF38  6C                 	db	108	;'l'
  3544  00FF39  69                 	db	105	;'i'
  3545  00FF3A  74                 	db	116	;'t'
  3546  00FF3B  79                 	db	121	;'y'
  3547  00FF3C  20                 	db	32
  3548  00FF3D  63                 	db	99	;'c'
  3549  00FF3E  6C                 	db	108	;'l'
  3550  00FF3F  6F                 	db	111	;'o'
  3551  00FF40  63                 	db	99	;'c'
  3552  00FF41  6B                 	db	107	;'k'
  3553  00FF42  20                 	db	32
  3554  00FF43  25                 	db	37
  3555  00FF44  64                 	db	100	;'d'
  3556  00FF45  20                 	db	32
  3557  00FF46  20                 	db	32
  3558  00FF47  00                 	db	0
  3559  00FF48                     STR_46:
  3560                           
  3561                           ; BSR set to: 57
  3562  00FF48  52                 	db	82	;'R'
  3563  00FF49  65                 	db	101	;'e'
  3564  00FF4A  6C                 	db	108	;'l'
  3565  00FF4B  65                 	db	101	;'e'
  3566  00FF4C  61                 	db	97	;'a'
  3567  00FF4D  73                 	db	115	;'s'
  3568  00FF4E  65                 	db	101	;'e'
  3569  00FF4F  20                 	db	32
  3570  00FF50  62                 	db	98	;'b'
  3571  00FF51  75                 	db	117	;'u'
  3572  00FF52  74                 	db	116	;'t'
  3573  00FF53  74                 	db	116	;'t'
  3574  00FF54  6F                 	db	111	;'o'
  3575  00FF55  6E                 	db	110	;'n'
  3576  00FF56  20                 	db	32
  3577  00FF57  25                 	db	37
  3578  00FF58  63                 	db	99	;'c'
  3579  00FF59  20                 	db	32
  3580  00FF5A  20                 	db	32
  3581  00FF5B  00                 	db	0
  3582  00FF5C                     STR_61:
  3583                           
  3584                           ; BSR set to: 57
  3585  00FF5C  48                 	db	72	;'H'
  3586  00FF5D  45                 	db	69	;'E'
  3587  00FF5E  4C                 	db	76	;'L'
  3588  00FF5F  50                 	db	80	;'P'
  3589  00FF60  20                 	db	32
  3590  00FF61  25                 	db	37
  3591  00FF62  73                 	db	115	;'s'
  3592  00FF63  20                 	db	32
  3593  00FF64  20                 	db	32
  3594  00FF65  20                 	db	32
  3595  00FF66  20                 	db	32
  3596  00FF67  20                 	db	32
  3597  00FF68  20                 	db	32
  3598  00FF69  20                 	db	32
  3599  00FF6A  20                 	db	32
  3600  00FF6B  20                 	db	32
  3601  00FF6C  20                 	db	32
  3602  00FF6D  20                 	db	32
  3603  00FF6E  00                 	db	0
  3604  00FF6F                     
  3605                           ; BSR set to: 57
  3606  00FF6F  44                 	db	68	;'D'
  3607  00FF70  49                 	db	73	;'I'
  3608  00FF71  53                 	db	83	;'S'
  3609  00FF72  50                 	db	80	;'P'
  3610  00FF73  4C                 	db	76	;'L'
  3611  00FF74  41                 	db	65	;'A'
  3612  00FF75  59                 	db	89	;'Y'
  3613  00FF76  20                 	db	32
  3614  00FF77  25                 	db	37
  3615  00FF78  73                 	db	115	;'s'
  3616  00FF79  20                 	db	32
  3617  00FF7A  20                 	db	32
  3618  00FF7B  20                 	db	32
  3619  00FF7C  20                 	db	32
  3620  00FF7D  20                 	db	32
  3621  00FF7E  20                 	db	32
  3622  00FF7F  20                 	db	32
  3623  00FF80  20                 	db	32
  3624  00FF81  00                 	db	0
  3625  00FF82                     
  3626                           ; BSR set to: 57
  3627  00FF82  25                 	db	37
  3628  00FF83  64                 	db	100	;'d'
  3629  00FF84  20                 	db	32
  3630  00FF85  25                 	db	37
  3631  00FF86  32                 	db	50	;'2'
  3632  00FF87  2E                 	db	46
  3633  00FF88  34                 	db	52	;'4'
  3634  00FF89  66                 	db	102	;'f'
  3635  00FF8A  2C                 	db	44
  3636  00FF8B  20                 	db	32
  3637  00FF8C  25                 	db	37
  3638  00FF8D  64                 	db	100	;'d'
  3639  00FF8E  20                 	db	32
  3640  00FF8F  20                 	db	32
  3641  00FF90  20                 	db	32
  3642  00FF91  23                 	db	35
  3643  00FF92  00                 	db	0
  3644  00FF93                     STR_19:
  3645                           
  3646                           ; BSR set to: 57
  3647  00FF93  25                 	db	37
  3648  00FF94  64                 	db	100	;'d'
  3649  00FF95  20                 	db	32
  3650  00FF96  25                 	db	37
  3651  00FF97  32                 	db	50	;'2'
  3652  00FF98  2E                 	db	46
  3653  00FF99  34                 	db	52	;'4'
  3654  00FF9A  66                 	db	102	;'f'
  3655  00FF9B  20                 	db	32
  3656  00FF9C  20                 	db	32
  3657  00FF9D  20                 	db	32
  3658  00FF9E  25                 	db	37
  3659  00FF9F  64                 	db	100	;'d'
  3660  00FFA0  20                 	db	32
  3661  00FFA1  20                 	db	32
  3662  00FFA2  00                 	db	0
  3663  00FFA3                     STR_65:
  3664                           
  3665                           ; BSR set to: 57
  3666  00FFA3  76                 	db	118	;'v'
  3667  00FFA4  74                 	db	116	;'t'
  3668  00FFA5  65                 	db	101	;'e'
  3669  00FFA6  72                 	db	114	;'r'
  3670  00FFA7  6D                 	db	109	;'m'
  3671  00FFA8  20                 	db	32
  3672  00FFA9  25                 	db	37
  3673  00FFAA  78                 	db	120	;'x'
  3674  00FFAB  3A                 	db	58	;':'
  3675  00FFAC  25                 	db	37
  3676  00FFAD  78                 	db	120	;'x'
  3677  00FFAE  20                 	db	32
  3678  00FFAF  20                 	db	32
  3679  00FFB0  20                 	db	32
  3680  00FFB1  00                 	db	0
  3681  00FFB2                     STR_59:
  3682                           
  3683                           ; BSR set to: 57
  3684  00FFB2  46                 	db	70	;'F'
  3685  00FFB3  65                 	db	101	;'e'
  3686  00FFB4  62                 	db	98	;'b'
  3687  00FFB5  20                 	db	32
  3688  00FFB6  20                 	db	32
  3689  00FFB7  36                 	db	54	;'6'
  3690  00FFB8  20                 	db	32
  3691  00FFB9  32                 	db	50	;'2'
  3692  00FFBA  30                 	db	48	;'0'
  3693  00FFBB  32                 	db	50	;'2'
  3694  00FFBC  30                 	db	48	;'0'
  3695  00FFBD  00                 	db	0
  3696  00FFBE                     STR_63:
  3697                           
  3698                           ; BSR set to: 57
  3699  00FFBE  25                 	db	37
  3700  00FFBF  73                 	db	115	;'s'
  3701  00FFC0  20                 	db	32
  3702  00FFC1  20                 	db	32
  3703  00FFC2  20                 	db	32
  3704  00FFC3  20                 	db	32
  3705  00FFC4  20                 	db	32
  3706  00FFC5  20                 	db	32
  3707  00FFC6  20                 	db	32
  3708  00FFC7  00                 	db	0
  3709  00FFC8                     STR_60:
  3710                           
  3711                           ; BSR set to: 57
  3712  00FFC8  31                 	db	49	;'1'
  3713  00FFC9  36                 	db	54	;'6'
  3714  00FFCA  3A                 	db	58	;':'
  3715  00FFCB  35                 	db	53	;'5'
  3716  00FFCC  33                 	db	51	;'3'
  3717  00FFCD  3A                 	db	58	;':'
  3718  00FFCE  31                 	db	49	;'1'
  3719  00FFCF  33                 	db	51	;'3'
  3720  00FFD0  00                 	db	0
  3721  00FFD1                     STR_3:
  3722                           
  3723                           ; BSR set to: 57
  3724  00FFD1  31                 	db	49	;'1'
  3725  00FFD2  2E                 	db	46
  3726  00FFD3  31                 	db	49	;'1'
  3727  00FFD4  37                 	db	55	;'7'
  3728  00FFD5  00                 	db	0
  3729  00FFD6                     STR_79:
  3730                           
  3731                           ; BSR set to: 57
  3732  00FFD6  49                 	db	73	;'I'
  3733  00FFD7  4E                 	db	78	;'N'
  3734  00FFD8  46                 	db	70	;'F'
  3735  00FFD9  00                 	db	0
  3736  00FFDA                     STR_83:
  3737                           
  3738                           ; BSR set to: 57
  3739  00FFDA  4E                 	db	78	;'N'
  3740  00FFDB  41                 	db	65	;'A'
  3741  00FFDC  4E                 	db	78	;'N'
  3742  00FFDD  00                 	db	0
  3743  00FFDE                     STR_80:
  3744                           
  3745                           ; BSR set to: 57
  3746  00FFDE  69                 	db	105	;'i'
  3747  00FFDF  6E                 	db	110	;'n'
  3748  00FFE0  66                 	db	102	;'f'
  3749  00FFE1  00                 	db	0
  3750  00FFE2                     STR_84:
  3751                           
  3752                           ; BSR set to: 57
  3753  00FFE2  6E                 	db	110	;'n'
  3754  00FFE3  61                 	db	97	;'a'
  3755  00FFE4  6E                 	db	110	;'n'
  3756  00FFE5  00                 	db	0
  3757  00FFE6                     STR_110:
  3758                           
  3759                           ; BSR set to: 57
  3760  00FFE6  6C                 	db	108	;'l'
  3761  00FFE7  58                 	db	88	;'X'
  3762  00FFE8  00                 	db	0
  3763  00FFE9                     STR_87:
  3764                           
  3765                           ; BSR set to: 57
  3766  00FFE9  6C                 	db	108	;'l'
  3767  00FFEA  64                 	db	100	;'d'
  3768  00FFEB  00                 	db	0
  3769  00FFEC                     STR_96:
  3770                           
  3771                           ; BSR set to: 57
  3772  00FFEC  6C                 	db	108	;'l'
  3773  00FFED  66                 	db	102	;'f'
  3774  00FFEE  00                 	db	0
  3775  00FFEF                     STR_91:
  3776                           
  3777                           ; BSR set to: 57
  3778  00FFEF  6C                 	db	108	;'l'
  3779  00FFF0  69                 	db	105	;'i'
  3780  00FFF1  00                 	db	0
  3781  00FFF2                     STR_101:
  3782                           
  3783                           ; BSR set to: 57
  3784  00FFF2  6C                 	db	108	;'l'
  3785  00FFF3  75                 	db	117	;'u'
  3786  00FFF4  00                 	db	0
  3787  00FFF5                     STR_106:
  3788                           
  3789                           ; BSR set to: 57
  3790  00FFF5  6C                 	db	108	;'l'
  3791  00FFF6  78                 	db	120	;'x'
  3792  00FFF7  00                 	db	0
  3793  00FFF8                     STR_58:
  3794                           
  3795                           ; BSR set to: 57
  3796  00FFF8  25                 	db	37
  3797  00FFF9  63                 	db	99	;'c'
  3798  00FFFA  00                 	db	0
  3799  00FFFB                     STR_57:
  3800                           
  3801                           ; BSR set to: 57
  3802  00FFFB  25                 	db	37
  3803  00FFFC  73                 	db	115	;'s'
  3804  00FFFD  00                 	db	0
  3805  0000                     
  3806                           ; #config settings
  3807  00FFFE  00                 	db	0	; dummy byte at the end
  3808  0000                     
  3809                           	psect	cinit
  3810  01A82A                     __pcinit:
  3811                           	opt callstack 0
  3812  01A82A                     start_initialization:
  3813                           	opt callstack 0
  3814  01A82A                     __initialization:
  3815                           	opt callstack 0
  3816                           
  3817                           ; Initialize objects allocated to BIGRAM (811 bytes)
  3818                           ; load TBLPTR registers with __pidataBIGRAM
  3819  01A82A  0E04               	movlw	low __pidataBIGRAM
  3820  01A82C  6EF6               	movwf	tblptrl,c
  3821  01A82E  0E6F               	movlw	high __pidataBIGRAM
  3822  01A830  6EF7               	movwf	tblptrh,c
  3823  01A832  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3824  01A834  6EF8               	movwf	tblptru,c
  3825  01A836  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3826  01A83A  EE20 F32B          	lfsr	2,811
  3827  01A83E                     copy_data0:
  3828  01A83E  0009               	tblrd		*+
  3829  01A840  006F FFD7 FFEE     	movff	tablat,postinc0
  3830  01A846  50DD               	movf	postdec2,w,c
  3831  01A848  50D9               	movf	fsr2l,w,c
  3832  01A84A  E1F9               	bnz	copy_data0
  3833  01A84C  50DA               	movf	fsr2h,w,c
  3834  01A84E  E1F7               	bnz	copy_data0
  3835                           
  3836                           ; Initialize objects allocated to BANK1 (208 bytes)
  3837                           ; load TBLPTR registers with __pidataBANK1
  3838  01A850  0EDE               	movlw	low __pidataBANK1
  3839  01A852  6EF6               	movwf	tblptrl,c
  3840  01A854  0EA9               	movlw	high __pidataBANK1
  3841  01A856  6EF7               	movwf	tblptrh,c
  3842  01A858  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3843  01A85A  6EF8               	movwf	tblptru,c
  3844  01A85C  EE00  F100         	lfsr	0,__pdataBANK1
  3845  01A860  EE20 F0D0          	lfsr	2,208
  3846  01A864                     copy_data1:
  3847  01A864  0009               	tblrd		*+
  3848  01A866  006F FFD7 FFEE     	movff	tablat,postinc0
  3849  01A86C  50DD               	movf	postdec2,w,c
  3850  01A86E  50D9               	movf	fsr2l,w,c
  3851  01A870  E1F9               	bnz	copy_data1
  3852                           
  3853                           ; Initialize objects allocated to BANK0 (54 bytes)
  3854                           ; load TBLPTR registers with __pidataBANK0
  3855  01A872  0E84               	movlw	low __pidataBANK0
  3856  01A874  6EF6               	movwf	tblptrl,c
  3857  01A876  0EC2               	movlw	high __pidataBANK0
  3858  01A878  6EF7               	movwf	tblptrh,c
  3859  01A87A  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3860  01A87C  6EF8               	movwf	tblptru,c
  3861  01A87E  EE00  F0AF         	lfsr	0,__pdataBANK0
  3862  01A882  EE20 F036          	lfsr	2,54
  3863  01A886                     copy_data2:
  3864  01A886  0009               	tblrd		*+
  3865  01A888  006F FFD7 FFEE     	movff	tablat,postinc0
  3866  01A88E  50DD               	movf	postdec2,w,c
  3867  01A890  50D9               	movf	fsr2l,w,c
  3868  01A892  E1F9               	bnz	copy_data2
  3869                           
  3870                           ; Clear objects allocated to BIGRAM (482 bytes)
  3871  01A894  EE02  F02A         	lfsr	0,__pbssBIGRAM
  3872  01A898  EE20 F1E2          	lfsr	2,482
  3873  01A89C                     clear_0:
  3874  01A89C  6AEE               	clrf	postinc0,c
  3875  01A89E  50DD               	movf	postdec2,w,c
  3876  01A8A0  50D9               	movf	fsr2l,w,c
  3877  01A8A2  E1FC               	bnz	clear_0
  3878  01A8A4  50DA               	movf	fsr2h,w,c
  3879  01A8A6  E1FA               	bnz	clear_0
  3880                           
  3881                           ; Clear objects allocated to BANK4 (255 bytes)
  3882  01A8A8  EE01  F000         	lfsr	0,__pbssBANK4
  3883  01A8AC  EE20 F0FF          	lfsr	2,255
  3884  01A8B0                     clear_1:
  3885  01A8B0  6AEE               	clrf	postinc0,c
  3886  01A8B2  50DD               	movf	postdec2,w,c
  3887  01A8B4  50D9               	movf	fsr2l,w,c
  3888  01A8B6  E1FC               	bnz	clear_1
  3889  01A8B8  50DA               	movf	fsr2h,w,c
  3890  01A8BA  E1FA               	bnz	clear_1
  3891                           
  3892                           ; Clear objects allocated to BANK3 (198 bytes)
  3893  01A8BC  EE00  F300         	lfsr	0,__pbssBANK3
  3894  01A8C0  0EC6               	movlw	198
  3895  01A8C2                     clear_2:
  3896  01A8C2  6AEE               	clrf	postinc0,c
  3897  01A8C4  06E8               	decf	wreg,f,c
  3898  01A8C6  E1FD               	bnz	clear_2
  3899                           
  3900                           ; Clear objects allocated to BANK2 (231 bytes)
  3901  01A8C8  EE00  F200         	lfsr	0,__pbssBANK2
  3902  01A8CC  0EE7               	movlw	231
  3903  01A8CE                     clear_3:
  3904  01A8CE  6AEE               	clrf	postinc0,c
  3905  01A8D0  06E8               	decf	wreg,f,c
  3906  01A8D2  E1FD               	bnz	clear_3
  3907                           
  3908                           ; Clear objects allocated to BANK1 (46 bytes)
  3909  01A8D4  EE00  F1D0         	lfsr	0,__pbssBANK1
  3910  01A8D8  0E2E               	movlw	46
  3911  01A8DA                     clear_4:
  3912  01A8DA  6AEE               	clrf	postinc0,c
  3913  01A8DC  06E8               	decf	wreg,f,c
  3914  01A8DE  E1FD               	bnz	clear_4
  3915                           
  3916                           ; Clear objects allocated to BANK0 (79 bytes)
  3917  01A8E0  EE00  F060         	lfsr	0,__pbssBANK0
  3918  01A8E4  0E4F               	movlw	79
  3919  01A8E6                     clear_5:
  3920  01A8E6  6AEE               	clrf	postinc0,c
  3921  01A8E8  06E8               	decf	wreg,f,c
  3922  01A8EA  E1FD               	bnz	clear_5
  3923                           
  3924                           ; Clear objects allocated to COMRAM (14 bytes)
  3925  01A8EC  EE00  F03A         	lfsr	0,__pbssCOMRAM
  3926  01A8F0  0E0E               	movlw	14
  3927  01A8F2                     clear_6:
  3928  01A8F2  6AEE               	clrf	postinc0,c
  3929  01A8F4  06E8               	decf	wreg,f,c
  3930  01A8F6  E1FD               	bnz	clear_6
  3931                           
  3932                           ;
  3933                           ; Setup IVTBASE
  3934                           ;
  3935  01A8F8  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3936  01A8FA  6ED5               	movwf	213,c
  3937  01A8FC  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3938  01A8FE  6ED6               	movwf	214,c
  3939  01A900  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3940  01A902  6ED7               	movwf	215,c
  3941  01A904                     end_of_initialization:
  3942                           	opt callstack 0
  3943  01A904                     __end_of__initialization:
  3944                           	opt callstack 0
  3945  01A904  0100               	movlb	0
  3946  01A906  EF22  F089         	goto	_main	;jump to C main() function
  3947                           
  3948                           	psect	bssCOMRAM
  3949  00003A                     __pbssCOMRAM:
  3950                           	opt callstack 0
  3951  00003A                     _width:
  3952                           	opt callstack 0
  3953  00003A                     	ds	2
  3954  00003C                     _prec:
  3955                           	opt callstack 0
  3956  00003C                     	ds	2
  3957  00003E                     _flags:
  3958                           	opt callstack 0
  3959  00003E                     	ds	2
  3960  000040                     calc_bsoc@log_update_wait:
  3961                           	opt callstack 0
  3962  000040                     	ds	1
  3963  000041                     check_day_time@day_delay:
  3964                           	opt callstack 0
  3965  000041                     	ds	1
  3966  000042                     dac_spi_control@S0:
  3967                           	opt callstack 0
  3968  000042                     	ds	1
  3969  000043                     dac_spi_control@init:
  3970                           	opt callstack 0
  3971  000043                     	ds	1
  3972  000044                     _uart2RxHead:
  3973                           	opt callstack 0
  3974  000044                     	ds	1
  3975  000045                     _uart2TxBufferRemaining:
  3976                           	opt callstack 0
  3977  000045                     	ds	1
  3978  000046                     _uart2TxTail:
  3979                           	opt callstack 0
  3980  000046                     	ds	1
  3981  000047                     _uart1RxHead:
  3982                           	opt callstack 0
  3983  000047                     	ds	1
  3984                           
  3985                           	psect	bssBANK0
  3986  000060                     __pbssBANK0:
  3987                           	opt callstack 0
  3988  000060                     fabsf@F463:
  3989                           	opt callstack 0
  3990  000060                     	ds	4
  3991  000064                     ___fpclassifyf@F463:
  3992                           	opt callstack 0
  3993  000064                     	ds	4
  3994  000068                     calc_ror_data@bcror:
  3995                           	opt callstack 0
  3996  000068                     	ds	4
  3997  00006C                     calc_ror_data@bvror:
  3998                           	opt callstack 0
  3999  00006C                     	ds	4
  4000  000070                     calc_model_data@bcror:
  4001                           	opt callstack 0
  4002  000070                     	ds	4
  4003  000074                     calc_model_data@bvror:
  4004                           	opt callstack 0
  4005  000074                     	ds	4
  4006  000078                     wdtdelay@dcount:
  4007                           	opt callstack 0
  4008  000078                     	ds	4
  4009  00007C                     _TMR3_InterruptHandler:
  4010                           	opt callstack 0
  4011  00007C                     	ds	3
  4012  00007F                     _TMR5_InterruptHandler:
  4013                           	opt callstack 0
  4014  00007F                     	ds	3
  4015  000082                     _TMR6_InterruptHandler:
  4016                           	opt callstack 0
  4017  000082                     	ds	3
  4018  000085                     _ADCC_ADTI_InterruptHandler:
  4019                           	opt callstack 0
  4020  000085                     	ds	3
  4021  000088                     _ADCC_ADI_InterruptHandler:
  4022                           	opt callstack 0
  4023  000088                     	ds	3
  4024  00008B                     _UART1_RxInterruptHandler:
  4025                           	opt callstack 0
  4026  00008B                     	ds	3
  4027  00008E                     _UART2_TxInterruptHandler:
  4028                           	opt callstack 0
  4029  00008E                     	ds	3
  4030  000091                     _UART2_RxInterruptHandler:
  4031                           	opt callstack 0
  4032  000091                     	ds	3
  4033  000094                     _INT1_InterruptHandler:
  4034                           	opt callstack 0
  4035  000094                     	ds	3
  4036  000097                     _INT0_InterruptHandler:
  4037                           	opt callstack 0
  4038  000097                     	ds	3
  4039  00009A                     _nout:
  4040                           	opt callstack 0
  4041  00009A                     	ds	2
  4042  00009C                     TMR3_ISR@CountCallBack:
  4043                           	opt callstack 0
  4044  00009C                     	ds	2
  4045  00009E                     _timer3ReloadVal:
  4046                           	opt callstack 0
  4047  00009E                     	ds	2
  4048  0000A0                     TMR5_ISR@CountCallBack:
  4049                           	opt callstack 0
  4050  0000A0                     	ds	2
  4051  0000A2                     _timer5ReloadVal:
  4052                           	opt callstack 0
  4053  0000A2                     	ds	2
  4054  0000A4                     esr_check@esr_state:
  4055                           	opt callstack 0
  4056  0000A4                     	ds	1
  4057  0000A5                     dac_spi_control@SB:
  4058                           	opt callstack 0
  4059  0000A5                     	ds	1
  4060  0000A6                     dac_spi_control@SC:
  4061                           	opt callstack 0
  4062  0000A6                     	ds	1
  4063  0000A7                     dac_spi_control@S2:
  4064                           	opt callstack 0
  4065  0000A7                     	ds	1
  4066  0000A8                     dac_spi_control@S1:
  4067                           	opt callstack 0
  4068  0000A8                     	ds	1
  4069  0000A9                     _mode_sw:
  4070                           	opt callstack 0
  4071  0000A9                     	ds	1
  4072  0000AA                     _uart2RxCount:
  4073                           	opt callstack 0
  4074  0000AA                     	ds	1
  4075  0000AB                     _uart2RxTail:
  4076                           	opt callstack 0
  4077  0000AB                     	ds	1
  4078  0000AC                     _uart2TxHead:
  4079                           	opt callstack 0
  4080  0000AC                     	ds	1
  4081  0000AD                     _uart1RxCount:
  4082                           	opt callstack 0
  4083  0000AD                     	ds	1
  4084  0000AE                     _uart1RxTail:
  4085                           	opt callstack 0
  4086  0000AE                     	ds	1
  4087                           
  4088                           	psect	dataBANK0
  4089  0000AF                     __pdataBANK0:
  4090                           	opt callstack 0
  4091  0000AF                     _R:
  4092                           	opt callstack 0
  4093  0000AF                     	ds	54
  4094                           
  4095                           	psect	bssBANK1
  4096  0001D0                     __pbssBANK1:
  4097                           	opt callstack 0
  4098  0001D0                     _spi_link:
  4099                           	opt callstack 0
  4100  0001D0                     	ds	12
  4101  0001DC                     _uart1RxBuffer:
  4102                           	opt callstack 0
  4103  0001DC                     	ds	8
  4104  0001E4                     spinners@s:
  4105                           	opt callstack 0
  4106  0001E4                     	ds	6
  4107  0001EA                     floorf@F524:
  4108                           	opt callstack 0
  4109  0001EA                     	ds	4
  4110  0001EE                     _utctime:
  4111                           	opt callstack 0
  4112  0001EE                     	ds	4
  4113  0001F2                     _P:
  4114                           	opt callstack 0
  4115  0001F2                     	ds	4
  4116  0001F6                     _seed:
  4117                           	opt callstack 0
  4118  0001F6                     	ds	8
  4119                           
  4120                           	psect	dataBANK1
  4121  000100                     __pdataBANK1:
  4122                           	opt callstack 0
  4123  000100                     stoa@F1166:
  4124                           	opt callstack 0
  4125  000100                     	ds	7
  4126  000107                     _V:
  4127                           	opt callstack 0
  4128  000107                     	ds	192
  4129  0001C7                     _H:
  4130                           	opt callstack 0
  4131  0001C7                     	ds	9
  4132                           
  4133                           	psect	bssBANK2
  4134  000200                     __pbssBANK2:
  4135                           	opt callstack 0
  4136  000200                     lp_filter@smooth:
  4137                           	opt callstack 0
  4138  000200                     	ds	84
  4139  000254                     _S:
  4140                           	opt callstack 0
  4141  000254                     	ds	41
  4142  00027D                     _tickCount:
  4143                           	opt callstack 0
  4144  00027D                     	ds	26
  4145  000297                     _dbuf:
  4146                           	opt callstack 0
  4147  000297                     	ds	80
  4148                           
  4149                           	psect	bssBANK3
  4150  000300                     __pbssBANK3:
  4151                           	opt callstack 0
  4152  000300                     _uart2TxBuffer:
  4153                           	opt callstack 0
  4154  000300                     	ds	64
  4155  000340                     _ring_buf2:
  4156                           	opt callstack 0
  4157  000340                     	ds	67
  4158  000383                     _ring_buf1:
  4159                           	opt callstack 0
  4160  000383                     	ds	67
  4161                           
  4162                           	psect	bssBANK4
  4163  000400                     __pbssBANK4:
  4164                           	opt callstack 0
  4165  000400                     _uart2RxBuffer:
  4166                           	opt callstack 0
  4167  000400                     	ds	255
  4168                           
  4169                           	psect	bssBIGRAM
  4170  00082A                     __pbssBIGRAM:
  4171                           	opt callstack 0
  4172  00082A                     _D:
  4173                           	opt callstack 0
  4174  00082A                     	ds	482
  4175                           
  4176                           	psect	dataBIGRAM
  4177  0004FF                     __pdataBIGRAM:
  4178                           	opt callstack 0
  4179  0004FF                     _port_data:
  4180                           	opt callstack 0
  4181  0004FF                     	ds	512
  4182  0006FF                     _C:
  4183                           	opt callstack 0
  4184  0006FF                     	ds	299
  4185                           
  4186                           	psect	cstackBANK0
  4187  0000E5                     __pcstackBANK0:
  4188                           	opt callstack 0
  4189  0000E5                     ??_TMR3_ISR:
  4190                           
  4191                           ; 1 bytes @ 0x0
  4192  0000E5                     	ds	25
  4193                           
  4194                           	psect	cstackCOMRAM
  4195  000021                     __pcstackCOMRAM:
  4196                           	opt callstack 0
  4197  000021                     ??_ADCC_ThresholdISR:
  4198  000021                     
  4199                           ; 1 bytes @ 0x0
  4200  000021                     	ds	5
  4201  000026                     ??_TMR6_ISR:
  4202                           
  4203                           ; 1 bytes @ 0x5
  4204  000026                     	ds	1
  4205  000027                     ??_INT1_ISR:
  4206  000027                     
  4207                           ; 1 bytes @ 0x6
  4208  000027                     	ds	4
  4209  00002B                     ??_TMR5_ISR:
  4210                           
  4211                           ; 1 bytes @ 0xA
  4212  00002B                     	ds	15
  4213                           
  4214 ;;
  4215 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  4216 ;;
  4217 ;; *************** function _main *****************
  4218 ;; Defined at:
  4219 ;;		line 189 in file "main.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;		None
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;  esr_temp        4  [STACK] float 
  4224 ;;  i_esr           2  [STACK] unsigned short 
  4225 ;;  shape           1  [STACK] unsigned char 
  4226 ;;  inp_index       1  [STACK] unsigned char 
  4227 ;;  k               1  [STACK] unsigned char 
  4228 ;;  j               1  [STACK] unsigned char 
  4229 ;;  i               1  [STACK] unsigned char 
  4230 ;;  mode            1  [STACK] enum E17013
  4231 ;;  i_ror           1  [STACK] unsigned char 
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1  [STACK] void 
  4234 ;; Registers used:
  4235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4245 ;;Total ram usage:        0 bytes
  4246 ;; Hardware stack levels required when called:   29
  4247 ;; This function calls:
  4248 ;;		_SYSTEM_Initialize
  4249 ;;		_StartTimer
  4250 ;;		_TimerDone
  4251 ;;		_WaitMs
  4252 ;;		___fladd
  4253 ;;		___flge
  4254 ;;		___fltol
  4255 ;;		_calc_model_data
  4256 ;;		_calc_ror_data
  4257 ;;		_check_adc_scan
  4258 ;;		_check_enter_button
  4259 ;;		_check_help
  4260 ;;		_clear_adc_scan
  4261 ;;		_clear_hid_pflags
  4262 ;;		_conv_raw_result
  4263 ;;		_convert_adc_data
  4264 ;;		_current_sensor_cal
  4265 ;;		_eaDogM_WriteCommand
  4266 ;;		_esr_check
  4267 ;;		_fabsf
  4268 ;;		_get_raw_result
  4269 ;;		_get_switch
  4270 ;;		_get_vterm_ptr
  4271 ;;		_hid_display
  4272 ;;		_init_bsoc
  4273 ;;		_init_display
  4274 ;;		_init_port_dma
  4275 ;;		_lp_filter
  4276 ;;		_mode_lamp_dim
  4277 ;;		_set_dac
  4278 ;;		_set_dac_a
  4279 ;;		_set_dac_b
  4280 ;;		_set_display_info
  4281 ;;		_set_load_relay_one
  4282 ;;		_set_load_relay_two
  4283 ;;		_set_vterm
  4284 ;;		_spinners
  4285 ;;		_sprintf
  4286 ;;		_srand
  4287 ;;		_start_adc_scan
  4288 ;;		_start_switch_handler
  4289 ;;		_static_soc
  4290 ;;		_update_lcd
  4291 ;;		_wait_lcd_done
  4292 ;; This function is called by:
  4293 ;;		Startup code after reset
  4294 ;; This function uses a reentrant model
  4295 ;;
  4296                           
  4297                           	psect	text0
  4298  011244                     __ptext0:
  4299                           	opt callstack 0
  4300  011244                     _main:
  4301                           	opt callstack 0
  4302                           
  4303                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4304  011244  0E11               	movlw	17
  4305  011246  26E1               	addwf	fsr1l,f,c
  4306  011248  0E00               	movlw	0
  4307  01124A  22E2               	addwfc	fsr1h,f,c
  4308                           
  4309                           ;main.c: 191:  UI_STATES mode;;main.c: 192:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4310                           ;stkvar	_inp_index @ sp[(-17)+11]
  4311                           
  4312                           ;incstack = 0
  4313  01124C  0EFA               	movlw	-6
  4314  01124E  6AE3               	clrf	plusw1,c
  4315                           
  4316                           ;stkvar	_i @ sp[(-17)+14]
  4317  011250  0EFD               	movlw	-3
  4318  011252  6AE3               	clrf	plusw1,c
  4319                           
  4320                           ;stkvar	_j @ sp[(-17)+13]
  4321  011254  0EFC               	movlw	-4
  4322  011256  6AE3               	clrf	plusw1,c
  4323  011258  2AE3               	incf	plusw1,f,c
  4324                           
  4325                           ;stkvar	_k @ sp[(-17)+12]
  4326  01125A  0EFB               	movlw	-5
  4327  01125C  6AE3               	clrf	plusw1,c
  4328  01125E  82E3               	bsf	plusw1,1,c
  4329                           
  4330                           ;main.c: 195:  SYSTEM_Initialize();
  4331  011260  ECF0  F0DE         	call	_SYSTEM_Initialize	;wreg free
  4332                           
  4333                           ; BSR set to: 60
  4334                           ;main.c: 198:  (INTCON0bits.GIEH = 1);
  4335  011264  8ED2               	bsf	210,7,c	;volatile
  4336                           
  4337                           ; BSR set to: 60
  4338                           ;main.c: 201:  (INTCON0bits.GIEL = 1);
  4339  011266  8CD2               	bsf	210,6,c	;volatile
  4340                           
  4341                           ; BSR set to: 60
  4342                           ;main.c: 203:  V.ui_state = UI_STATE_INIT;
  4343  011268  0101               	movlb	1	; () banked
  4344  01126A  6B07               	clrf	_V& (0+255),b	;volatile
  4345                           
  4346                           ; BSR set to: 1
  4347                           ;main.c: 208:  WaitMs(300);
  4348  01126C  0E2C               	movlw	44
  4349  01126E  6EE6               	movwf	postinc1,c
  4350  011270  0E01               	movlw	1
  4351  011272  6EE6               	movwf	postinc1,c
  4352  011274  EC5D  F0E1         	call	_WaitMs	;wreg free
  4353                           
  4354                           ;main.c: 209:  if (PORTBbits.RB0) {
  4355  011278  A0CB               	btfss	203,0,c	;volatile
  4356  01127A  D004               	goto	l13771
  4357                           
  4358                           ;main.c: 210:   mode = UI_STATE_HOST;
  4359                           ;stkvar	_mode @ sp[(-17)+15]
  4360  01127C  0EFE               	movlw	-2
  4361  01127E  6AE3               	clrf	plusw1,c
  4362  011280  2AE3               	incf	plusw1,f,c
  4363                           
  4364                           ;main.c: 211:  } else {
  4365  011282  D004               	goto	l13773
  4366  011284                     l13771:
  4367                           
  4368                           ;main.c: 212:   mode = UI_STATE_LOG;
  4369                           ;stkvar	_mode @ sp[(-17)+15]
  4370  011284  0EFE               	movlw	-2
  4371  011286  6AE3               	clrf	plusw1,c
  4372  011288  80E3               	bsf	plusw1,0,c
  4373  01128A  82E3               	bsf	plusw1,1,c	;indir
  4374  01128C                     l13773:
  4375                           
  4376                           ;main.c: 215:  if (mode == UI_STATE_HOST) {
  4377                           ;stkvar	_mode @ sp[(-17)+15]
  4378  01128C  0EFE               	movlw	-2
  4379  01128E  04E3               	decf	plusw1,w,c
  4380  011290  A4D8               	btfss	status,2,c
  4381  011292  D007               	goto	l1336
  4382                           
  4383                           ;main.c: 216:   do { LATDbits.LATD0 = 1; } while(0);
  4384  011294  80BD               	bsf	189,0,c	;volatile
  4385                           
  4386                           ;main.c: 217:   V.mode_pwm = 70;
  4387  011296  0E00               	movlw	0
  4388  011298  0101               	movlb	1	; () banked
  4389  01129A  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  4390  01129C  0E46               	movlw	70
  4391  01129E  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  4392                           
  4393                           ;main.c: 218:  } else {
  4394  0112A0  D004               	goto	l13777
  4395  0112A2                     l1336:
  4396  0112A2  90BD               	bcf	189,0,c	;volatile
  4397                           
  4398                           ;main.c: 220:   V.mode_pwm = 0;
  4399  0112A4  0101               	movlb	1	; () banked
  4400  0112A6  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  4401  0112A8  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  4402  0112AA                     l13777:
  4403                           
  4404                           ; BSR set to: 1
  4405                           ;main.c: 222:  mode_lamp_dim(V.mode_pwm);
  4406  0112AA  0060  F673  FFE6   	movff	_V+149,postinc1
  4407  0112B0  0060  F677  FFE6   	movff	_V+150,postinc1
  4408  0112B6  EC01  F0E5         	call	_mode_lamp_dim	;wreg free
  4409  0112BA  D34D               	goto	l13913
  4410  0112BC                     l13779:
  4411                           
  4412                           ; BSR set to: 1
  4413                           ;main.c: 230:    init_port_dma();
  4414  0112BC  ECE0  F0E1         	call	_init_port_dma	;wreg free
  4415                           
  4416                           ; BSR set to: 59
  4417                           ;main.c: 232:    init_display();
  4418  0112C0  EC2E  F0D3         	call	_init_display	;wreg free
  4419                           
  4420                           ; BSR set to: 61
  4421                           ;main.c: 233:    eaDogM_WriteCommand(0b00001100);
  4422  0112C4  0E0C               	movlw	12
  4423  0112C6  6EE6               	movwf	postinc1,c
  4424  0112C8  EC6D  F0E5         	call	_eaDogM_WriteCommand	;wreg free
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;main.c: 234:    set_dac();
  4428  0112CC  ECD5  F0D6         	call	_set_dac	;wreg free
  4429                           
  4430                           ;main.c: 238:    set_load_relay_one(1);
  4431  0112D0  0E01               	movlw	1
  4432  0112D2  6EE6               	movwf	postinc1,c
  4433  0112D4  EC55  F0E5         	call	_set_load_relay_one	;wreg free
  4434                           
  4435                           ;main.c: 239:    set_load_relay_two(1);
  4436  0112D8  0E01               	movlw	1
  4437  0112DA  6EE6               	movwf	postinc1,c
  4438  0112DC  EC4D  F0E5         	call	_set_load_relay_two	;wreg free
  4439                           
  4440                           ;main.c: 241:    V.ui_state = mode;
  4441                           ;stkvar	_mode @ sp[(-17)+15]
  4442  0112E0  0EFE               	movlw	-2
  4443  0112E2  006F FF8C  F107    	movff	plusw1,_V	;volatile
  4444                           
  4445                           ;main.c: 242:    srand(1957);
  4446  0112E8  0EA5               	movlw	165
  4447  0112EA  6EE6               	movwf	postinc1,c
  4448  0112EC  0E07               	movlw	7
  4449  0112EE  6EE6               	movwf	postinc1,c
  4450  0112F0  EC78  F0E1         	call	_srand	;wreg free
  4451                           
  4452                           ; BSR set to: 1
  4453                           ;main.c: 243:    set_vterm(0);
  4454  0112F4  0E00               	movlw	0
  4455  0112F6  6EE6               	movwf	postinc1,c
  4456  0112F8  ECB9  F0E4         	call	_set_vterm	;wreg free
  4457                           
  4458                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4459  0112FC  0ECA               	movlw	low STR_1
  4460  0112FE  6EE6               	movwf	postinc1,c
  4461  011300  0EFE               	movlw	high STR_1
  4462  011302  6EE6               	movwf	postinc1,c
  4463  011304  0E00               	movlw	0
  4464  011306  6EE6               	movwf	postinc1,c
  4465  011308  0E00               	movlw	0
  4466  01130A  6EE6               	movwf	postinc1,c
  4467  01130C  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  4468  011310  0060  F007  FFE6   	movff	btemp,postinc1
  4469  011316  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4470  01131C  0E04               	movlw	4
  4471  01131E  6EE6               	movwf	postinc1,c
  4472  011320  EC2E  F0D2         	call	_sprintf	;wreg free
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.17");
  4476  011324  0ED1               	movlw	low STR_3
  4477  011326  6EE6               	movwf	postinc1,c
  4478  011328  0EFF               	movlw	high STR_3
  4479  01132A  6EE6               	movwf	postinc1,c
  4480  01132C  0E8B               	movlw	low STR_2
  4481  01132E  6EE6               	movwf	postinc1,c
  4482  011330  0EFE               	movlw	high STR_2
  4483  011332  6EE6               	movwf	postinc1,c
  4484  011334  0E00               	movlw	0
  4485  011336  6EE6               	movwf	postinc1,c
  4486  011338  0E01               	movlw	1
  4487  01133A  6EE6               	movwf	postinc1,c
  4488  01133C  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  4489  011340  0060  F007  FFE6   	movff	btemp,postinc1
  4490  011346  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4491  01134C  0E06               	movlw	6
  4492  01134E  6EE6               	movwf	postinc1,c
  4493  011350  EC2E  F0D2         	call	_sprintf	;wreg free
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4497  011354  0E37               	movlw	low STR_4
  4498  011356  6EE6               	movwf	postinc1,c
  4499  011358  0EFE               	movlw	high STR_4
  4500  01135A  6EE6               	movwf	postinc1,c
  4501  01135C  0E00               	movlw	0
  4502  01135E  6EE6               	movwf	postinc1,c
  4503  011360  0E02               	movlw	2
  4504  011362  6EE6               	movwf	postinc1,c
  4505  011364  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  4506  011368  0060  F007  FFE6   	movff	btemp,postinc1
  4507  01136E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4508  011374  0E04               	movlw	4
  4509  011376  6EE6               	movwf	postinc1,c
  4510  011378  EC2E  F0D2         	call	_sprintf	;wreg free
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;main.c: 247:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4514  01137C  0ECE               	movlw	low STR_5
  4515  01137E  6EE6               	movwf	postinc1,c
  4516  011380  0EFD               	movlw	high STR_5
  4517  011382  6EE6               	movwf	postinc1,c
  4518  011384  0E02               	movlw	2
  4519  011386  6EE6               	movwf	postinc1,c
  4520  011388  0E00               	movlw	0
  4521  01138A  6EE6               	movwf	postinc1,c
  4522  01138C  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  4523  011390  0060  F007  FFE6   	movff	btemp,postinc1
  4524  011396  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4525  01139C  0E04               	movlw	4
  4526  01139E  6EE6               	movwf	postinc1,c
  4527  0113A0  EC2E  F0D2         	call	_sprintf	;wreg free
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;main.c: 248:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4531  0113A4  0ECE               	movlw	low STR_5
  4532  0113A6  6EE6               	movwf	postinc1,c
  4533  0113A8  0EFD               	movlw	high STR_5
  4534  0113AA  6EE6               	movwf	postinc1,c
  4535  0113AC  0E02               	movlw	2
  4536  0113AE  6EE6               	movwf	postinc1,c
  4537  0113B0  0E01               	movlw	1
  4538  0113B2  6EE6               	movwf	postinc1,c
  4539  0113B4  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  4540  0113B8  0060  F007  FFE6   	movff	btemp,postinc1
  4541  0113BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4542  0113C4  0E04               	movlw	4
  4543  0113C6  6EE6               	movwf	postinc1,c
  4544  0113C8  EC2E  F0D2         	call	_sprintf	;wreg free
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;main.c: 249:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4548  0113CC  0ECE               	movlw	low STR_5
  4549  0113CE  6EE6               	movwf	postinc1,c
  4550  0113D0  0EFD               	movlw	high STR_5
  4551  0113D2  6EE6               	movwf	postinc1,c
  4552  0113D4  0E02               	movlw	2
  4553  0113D6  6EE6               	movwf	postinc1,c
  4554  0113D8  0E02               	movlw	2
  4555  0113DA  6EE6               	movwf	postinc1,c
  4556  0113DC  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  4557  0113E0  0060  F007  FFE6   	movff	btemp,postinc1
  4558  0113E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4559  0113EC  0E04               	movlw	4
  4560  0113EE  6EE6               	movwf	postinc1,c
  4561  0113F0  EC2E  F0D2         	call	_sprintf	;wreg free
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;main.c: 250:    update_lcd(0);
  4565  0113F4  0E00               	movlw	0
  4566  0113F6  6EE6               	movwf	postinc1,c
  4567  0113F8  ECA6  F0D1         	call	_update_lcd	;wreg free
  4568                           
  4569                           ;main.c: 251:    WaitMs(1000);
  4570  0113FC  0EE8               	movlw	232
  4571  0113FE  6EE6               	movwf	postinc1,c
  4572  011400  0E03               	movlw	3
  4573  011402  6EE6               	movwf	postinc1,c
  4574  011404  EC5D  F0E1         	call	_WaitMs	;wreg free
  4575                           
  4576                           ;main.c: 252:    StartTimer(TMR_DISPLAY, 250);
  4577  011408  0EFA               	movlw	250
  4578  01140A  6EE6               	movwf	postinc1,c
  4579  01140C  0E00               	movlw	0
  4580  01140E  6EE6               	movwf	postinc1,c
  4581  011410  0E0A               	movlw	10
  4582  011412  6EE6               	movwf	postinc1,c
  4583  011414  EC6E  F0E0         	call	_StartTimer	;wreg free
  4584                           
  4585                           ;main.c: 253:    StartTimer(TMR_ADC, 200);
  4586  011418  0EC8               	movlw	200
  4587  01141A  6EE6               	movwf	postinc1,c
  4588  01141C  0E00               	movlw	0
  4589  01141E  6EE6               	movwf	postinc1,c
  4590  011420  0E01               	movlw	1
  4591  011422  6EE6               	movwf	postinc1,c
  4592  011424  EC6E  F0E0         	call	_StartTimer	;wreg free
  4593                           
  4594                           ;main.c: 254:    StartTimer(TMR_INFO, 3000);
  4595  011428  0EB8               	movlw	184
  4596  01142A  6EE6               	movwf	postinc1,c
  4597  01142C  0E0B               	movlw	11
  4598  01142E  6EE6               	movwf	postinc1,c
  4599  011430  0E07               	movlw	7
  4600  011432  6EE6               	movwf	postinc1,c
  4601  011434  EC6E  F0E0         	call	_StartTimer	;wreg free
  4602                           
  4603                           ;main.c: 255:    StartTimer(TMR_FLIPPER, 1500);
  4604  011438  0EDC               	movlw	220
  4605  01143A  6EE6               	movwf	postinc1,c
  4606  01143C  0E05               	movlw	5
  4607  01143E  6EE6               	movwf	postinc1,c
  4608  011440  0E0B               	movlw	11
  4609  011442  6EE6               	movwf	postinc1,c
  4610  011444  EC6E  F0E0         	call	_StartTimer	;wreg free
  4611                           
  4612                           ;main.c: 256:    StartTimer(TMR_HELPDIS, 3000);
  4613  011448  0EB8               	movlw	184
  4614  01144A  6EE6               	movwf	postinc1,c
  4615  01144C  0E0B               	movlw	11
  4616  01144E  6EE6               	movwf	postinc1,c
  4617  011450  0E09               	movlw	9
  4618  011452  6EE6               	movwf	postinc1,c
  4619  011454  EC6E  F0E0         	call	_StartTimer	;wreg free
  4620                           
  4621                           ;main.c: 258:    start_adc_scan();
  4622  011458  EC07  F0DD         	call	_start_adc_scan	;wreg free
  4623                           
  4624                           ;main.c: 259:    start_switch_handler();
  4625  01145C  EC7B  F0E4         	call	_start_switch_handler	;wreg free
  4626                           
  4627                           ; BSR set to: 57
  4628                           ;main.c: 260:    WaitMs(1000);
  4629  011460  0EE8               	movlw	232
  4630  011462  6EE6               	movwf	postinc1,c
  4631  011464  0E03               	movlw	3
  4632  011466  6EE6               	movwf	postinc1,c
  4633  011468  EC5D  F0E1         	call	_WaitMs	;wreg free
  4634                           
  4635                           ;main.c: 265:    i_ror = 1;
  4636                           ;stkvar	_i_ror @ sp[(-17)+16]
  4637  01146C  0EFF               	movlw	-1
  4638  01146E  6AE3               	clrf	plusw1,c
  4639  011470  2AE3               	incf	plusw1,f,c
  4640  011472                     l13831:
  4641                           
  4642                           ;main.c: 267:     calc_ror_data();
  4643  011472  ECB8  F0C8         	call	_calc_ror_data	;wreg free
  4644                           
  4645                           ;main.c: 268:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4646  011476  0E00               	movlw	0
  4647  011478  6EE6               	movwf	postinc1,c
  4648  01147A  0E04               	movlw	4
  4649  01147C  6EE6               	movwf	postinc1,c
  4650  01147E  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  4651  011482  0060  F007  FFE6   	movff	btemp,postinc1
  4652  011488  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4653  01148E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4654  011494  0060  F013  FFE6   	movff	btemp+3,postinc1
  4655  01149A  0E22               	movlw	low STR_8
  4656  01149C  6EE6               	movwf	postinc1,c
  4657  01149E  0EFE               	movlw	high STR_8
  4658  0114A0  6EE6               	movwf	postinc1,c
  4659  0114A2  0E00               	movlw	0
  4660  0114A4  6EE6               	movwf	postinc1,c
  4661  0114A6  0E01               	movlw	1
  4662  0114A8  6EE6               	movwf	postinc1,c
  4663  0114AA  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  4664  0114AE  0060  F007  FFE6   	movff	btemp,postinc1
  4665  0114B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4666  0114BA  0E08               	movlw	8
  4667  0114BC  6EE6               	movwf	postinc1,c
  4668  0114BE  EC2E  F0D2         	call	_sprintf	;wreg free
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;main.c: 269:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4672  0114C2  EE21  F36B         	lfsr	2,_C+108	;volatile
  4673  0114C6  006F FF7B FFE6     	movff	postinc2,postinc1
  4674  0114CC  006F FF7B FFE6     	movff	postinc2,postinc1
  4675  0114D2  006F FF7B FFE6     	movff	postinc2,postinc1
  4676  0114D8  006F FF7B FFE6     	movff	postinc2,postinc1
  4677                           
  4678                           ;stkvar	_i_ror @ sp[(-21)+16]
  4679  0114DE  0EFB               	movlw	-5
  4680  0114E0  50E3               	movf	plusw1,w,c
  4681  0114E2  6EE6               	movwf	postinc1,c
  4682  0114E4  0E00               	movlw	0
  4683  0114E6  6EE6               	movwf	postinc1,c
  4684  0114E8  0E00               	movlw	0
  4685  0114EA  6EE6               	movwf	postinc1,c
  4686  0114EC  0E05               	movlw	5
  4687  0114EE  6EE6               	movwf	postinc1,c
  4688  0114F0  ECB3  F0D2         	call	_spinners	;wreg free
  4689  0114F4  5001               	movf	btemp^0,w,c
  4690  0114F6  6EE6               	movwf	postinc1,c
  4691  0114F8  0E00               	movlw	0
  4692  0114FA  6EE6               	movwf	postinc1,c
  4693  0114FC  0EC9               	movlw	low STR_9
  4694  0114FE  6EE6               	movwf	postinc1,c
  4695  011500  0EFB               	movlw	high STR_9
  4696  011502  6EE6               	movwf	postinc1,c
  4697  011504  0E00               	movlw	0
  4698  011506  6EE6               	movwf	postinc1,c
  4699  011508  0E02               	movlw	2
  4700  01150A  6EE6               	movwf	postinc1,c
  4701  01150C  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  4702  011510  0060  F007  FFE6   	movff	btemp,postinc1
  4703  011516  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4704  01151C  0E0C               	movlw	12
  4705  01151E  6EE6               	movwf	postinc1,c
  4706  011520  EC2E  F0D2         	call	_sprintf	;wreg free
  4707                           
  4708                           ; BSR set to: 0
  4709                           ;main.c: 270:     update_lcd(0);
  4710  011524  0E00               	movlw	0
  4711  011526  6EE6               	movwf	postinc1,c
  4712  011528  ECA6  F0D1         	call	_update_lcd	;wreg free
  4713                           
  4714                           ;main.c: 271:     clear_adc_scan();
  4715  01152C  ECC1  F0E5         	call	_clear_adc_scan	;wreg free
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;main.c: 272:     start_adc_scan();
  4719  011530  EC07  F0DD         	call	_start_adc_scan	;wreg free
  4720                           
  4721                           ;main.c: 273:     WaitMs(2000);
  4722  011534  0ED0               	movlw	208
  4723  011536  6EE6               	movwf	postinc1,c
  4724  011538  0E07               	movlw	7
  4725  01153A  6EE6               	movwf	postinc1,c
  4726  01153C  EC5D  F0E1         	call	_WaitMs	;wreg free
  4727                           
  4728                           ;main.c: 276:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4729                           ;stkvar	_i_ror @ sp[(-17)+16]
  4730  011540  0EFF               	movlw	-1
  4731  011542  006F FF8C  F00C    	movff	plusw1,btemp+11
  4732  011548  2A0C               	incf	(btemp+11)^0,f,c
  4733  01154A  0060  F033  FFE3   	movff	btemp+11,plusw1
  4734  011550  060C               	decf	(btemp+11)^0,f,c
  4735  011552  0E1E               	movlw	30
  4736  011554  600C               	cpfslt	(btemp+11)^0,c
  4737  011556  D01A               	goto	u13230
  4738  011558  EE21  F36B         	lfsr	2,_C+108	;volatile
  4739  01155C  006F FF7B FFE6     	movff	postinc2,postinc1
  4740  011562  006F FF7B FFE6     	movff	postinc2,postinc1
  4741  011568  006F FF7B FFE6     	movff	postinc2,postinc1
  4742  01156E  006F FF7B FFE6     	movff	postinc2,postinc1
  4743  011574  0E42               	movlw	66
  4744  011576  6EE6               	movwf	postinc1,c
  4745  011578  0E60               	movlw	96
  4746  01157A  6EE6               	movwf	postinc1,c
  4747  01157C  0E65               	movlw	101
  4748  01157E  6EE6               	movwf	postinc1,c
  4749  011580  0E3C               	movlw	60
  4750  011582  6EE6               	movwf	postinc1,c
  4751  011584  ECF4  F0CA         	call	___flge	;wreg free
  4752  011588  A001               	btfss	btemp& (0+255),0,c
  4753  01158A  D773               	goto	l13831
  4754  01158C                     u13230:
  4755                           
  4756                           ;main.c: 278:    static_soc();
  4757  01158C  ECCB  F0DD         	call	_static_soc	;wreg free
  4758                           
  4759                           ;main.c: 279:    init_bsoc();
  4760  011590  ECD3  F0BF         	call	_init_bsoc	;wreg free
  4761                           
  4762                           ;main.c: 280:    set_load_relay_one(0);
  4763  011594  0E00               	movlw	0
  4764  011596  6EE6               	movwf	postinc1,c
  4765  011598  EC55  F0E5         	call	_set_load_relay_one	;wreg free
  4766                           
  4767                           ;main.c: 281:    set_load_relay_two(0);
  4768  01159C  0E00               	movlw	0
  4769  01159E  6EE6               	movwf	postinc1,c
  4770  0115A0  EC4D  F0E5         	call	_set_load_relay_two	;wreg free
  4771                           
  4772                           ;main.c: 282:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4773  0115A4  EE21  F3B5         	lfsr	2,_C+182	;volatile
  4774  0115A8  006F FF78  F00B    	movff	postinc2,btemp+10
  4775  0115AE  006F FF74  F00C    	movff	postdec2,btemp+11
  4776  0115B4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4777  0115BA  0060  F033  FFE6   	movff	btemp+11,postinc1
  4778  0115C0  0E84               	movlw	low STR_10
  4779  0115C2  6EE6               	movwf	postinc1,c
  4780  0115C4  0EFC               	movlw	high STR_10
  4781  0115C6  6EE6               	movwf	postinc1,c
  4782  0115C8  0E00               	movlw	0
  4783  0115CA  6EE6               	movwf	postinc1,c
  4784  0115CC  0E00               	movlw	0
  4785  0115CE  6EE6               	movwf	postinc1,c
  4786  0115D0  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  4787  0115D4  0060  F007  FFE6   	movff	btemp,postinc1
  4788  0115DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4789  0115E0  0E06               	movlw	6
  4790  0115E2  6EE6               	movwf	postinc1,c
  4791  0115E4  EC2E  F0D2         	call	_sprintf	;wreg free
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;main.c: 283:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4795  0115E8  EE21  F38F         	lfsr	2,_C+144	;volatile
  4796  0115EC  006F FF7B FFE6     	movff	postinc2,postinc1
  4797  0115F2  006F FF7B FFE6     	movff	postinc2,postinc1
  4798  0115F8  006F FF7B FFE6     	movff	postinc2,postinc1
  4799  0115FE  006F FF7B FFE6     	movff	postinc2,postinc1
  4800  011604  0E60               	movlw	low STR_11
  4801  011606  6EE6               	movwf	postinc1,c
  4802  011608  0EFD               	movlw	high STR_11
  4803  01160A  6EE6               	movwf	postinc1,c
  4804  01160C  0E00               	movlw	0
  4805  01160E  6EE6               	movwf	postinc1,c
  4806  011610  0E01               	movlw	1
  4807  011612  6EE6               	movwf	postinc1,c
  4808  011614  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  4809  011618  0060  F007  FFE6   	movff	btemp,postinc1
  4810  01161E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4811  011624  0E08               	movlw	8
  4812  011626  6EE6               	movwf	postinc1,c
  4813  011628  EC2E  F0D2         	call	_sprintf	;wreg free
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;main.c: 284:    update_lcd(0);
  4817  01162C  0E00               	movlw	0
  4818  01162E  6EE6               	movwf	postinc1,c
  4819  011630  ECA6  F0D1         	call	_update_lcd	;wreg free
  4820                           
  4821                           ;main.c: 285:    WaitMs(2000);
  4822  011634  0ED0               	movlw	208
  4823  011636  6EE6               	movwf	postinc1,c
  4824  011638  0E07               	movlw	7
  4825  01163A  6EE6               	movwf	postinc1,c
  4826  01163C  EC5D  F0E1         	call	_WaitMs	;wreg free
  4827                           
  4828                           ;main.c: 286:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  4829  011640  0E4C               	movlw	low STR_12
  4830  011642  6EE6               	movwf	postinc1,c
  4831  011644  0EFE               	movlw	high STR_12
  4832  011646  6EE6               	movwf	postinc1,c
  4833  011648  0E00               	movlw	0
  4834  01164A  6EE6               	movwf	postinc1,c
  4835  01164C  0E00               	movlw	0
  4836  01164E  6EE6               	movwf	postinc1,c
  4837  011650  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  4838  011654  0060  F007  FFE6   	movff	btemp,postinc1
  4839  01165A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4840  011660  0E04               	movlw	4
  4841  011662  6EE6               	movwf	postinc1,c
  4842  011664  EC2E  F0D2         	call	_sprintf	;wreg free
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;main.c: 287:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  4846  011668  0E61               	movlw	low STR_13
  4847  01166A  6EE6               	movwf	postinc1,c
  4848  01166C  0EFE               	movlw	high STR_13
  4849  01166E  6EE6               	movwf	postinc1,c
  4850  011670  0E00               	movlw	0
  4851  011672  6EE6               	movwf	postinc1,c
  4852  011674  0E01               	movlw	1
  4853  011676  6EE6               	movwf	postinc1,c
  4854  011678  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  4855  01167C  0060  F007  FFE6   	movff	btemp,postinc1
  4856  011682  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4857  011688  0E04               	movlw	4
  4858  01168A  6EE6               	movwf	postinc1,c
  4859  01168C  EC2E  F0D2         	call	_sprintf	;wreg free
  4860                           
  4861                           ; BSR set to: 0
  4862                           ;main.c: 288:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  4863  011690  0E1E               	movlw	low STR_14
  4864  011692  6EE6               	movwf	postinc1,c
  4865  011694  0EFF               	movlw	high STR_14
  4866  011696  6EE6               	movwf	postinc1,c
  4867  011698  0E00               	movlw	0
  4868  01169A  6EE6               	movwf	postinc1,c
  4869  01169C  0E02               	movlw	2
  4870  01169E  6EE6               	movwf	postinc1,c
  4871  0116A0  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  4872  0116A4  0060  F007  FFE6   	movff	btemp,postinc1
  4873  0116AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4874  0116B0  0E04               	movlw	4
  4875  0116B2  6EE6               	movwf	postinc1,c
  4876  0116B4  EC2E  F0D2         	call	_sprintf	;wreg free
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;main.c: 289:    update_lcd(0);
  4880  0116B8  0E00               	movlw	0
  4881  0116BA  6EE6               	movwf	postinc1,c
  4882  0116BC  ECA6  F0D1         	call	_update_lcd	;wreg free
  4883                           
  4884                           ;main.c: 290:    uint16_t i_esr = 1;
  4885  0116C0  0E01               	movlw	1
  4886  0116C2  6E0B               	movwf	(btemp+10)^0,c
  4887  0116C4  0E00               	movlw	0
  4888  0116C6  6E0C               	movwf	(btemp+11)^0,c
  4889                           
  4890                           ;stkvar	_i_esr @ sp[(-17)+8]
  4891  0116C8  0EF7               	movlw	-9
  4892  0116CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4893  0116D0  0EF8               	movlw	-8
  4894  0116D2  0060  F033  FFE3   	movff	btemp+11,plusw1
  4895                           
  4896                           ;main.c: 292:    float esr_temp;;main.c: 293:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4897  0116D8  D06D               	goto	l13889
  4898  0116DA                     l13877:
  4899                           
  4900                           ;main.c: 294:     WaitMs(110);
  4901  0116DA  0E6E               	movlw	110
  4902  0116DC  6EE6               	movwf	postinc1,c
  4903  0116DE  0E00               	movlw	0
  4904  0116E0  6EE6               	movwf	postinc1,c
  4905  0116E2  EC5D  F0E1         	call	_WaitMs	;wreg free
  4906                           
  4907                           ;main.c: 295:     shape = (uint8_t) fabsf(esr_temp);
  4908                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4909  0116E6  0EF3               	movlw	-13
  4910  0116E8  006F FF8F FFE6     	movff	plusw1,postinc1
  4911  0116EE  006F FF8F FFE6     	movff	plusw1,postinc1
  4912  0116F4  006F FF8F FFE6     	movff	plusw1,postinc1
  4913  0116FA  006F FF8F FFE6     	movff	plusw1,postinc1
  4914  011700  EC30  F0D7         	call	_fabsf	;wreg free
  4915  011704  0060  F007  FFE6   	movff	btemp,postinc1
  4916  01170A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4917  011710  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4918  011716  0060  F013  FFE6   	movff	btemp+3,postinc1
  4919  01171C  EC3B  F0CA         	call	___fltol	;wreg free
  4920  011720  0060  F004  F00C   	movff	btemp,btemp+11
  4921                           
  4922                           ;stkvar	_shape @ sp[(-17)+10]
  4923  011726  0EF9               	movlw	-7
  4924  011728  0060  F033  FFE3   	movff	btemp+11,plusw1
  4925                           
  4926                           ;main.c: 296:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4927  01172E  0E00               	movlw	0
  4928  011730  6EE6               	movwf	postinc1,c
  4929                           
  4930                           ;stkvar	_shape @ sp[(-18)+10]
  4931  011732  0EF8               	movlw	-8
  4932  011734  50E3               	movf	plusw1,w,c
  4933  011736  6EE6               	movwf	postinc1,c
  4934  011738  ECB3  F0D2         	call	_spinners	;wreg free
  4935  01173C  5001               	movf	btemp^0,w,c
  4936  01173E  6EE6               	movwf	postinc1,c
  4937  011740  0E00               	movlw	0
  4938  011742  6EE6               	movwf	postinc1,c
  4939  011744  0E00               	movlw	0
  4940  011746  6EE6               	movwf	postinc1,c
  4941  011748  0E00               	movlw	0
  4942  01174A  6EE6               	movwf	postinc1,c
  4943  01174C  ECB3  F0D2         	call	_spinners	;wreg free
  4944  011750  5001               	movf	btemp^0,w,c
  4945  011752  6EE6               	movwf	postinc1,c
  4946  011754  0E00               	movlw	0
  4947  011756  6EE6               	movwf	postinc1,c
  4948  011758  0EF4               	movlw	low STR_15
  4949  01175A  6EE6               	movwf	postinc1,c
  4950  01175C  0EFE               	movlw	high STR_15
  4951  01175E  6EE6               	movwf	postinc1,c
  4952  011760  0E00               	movlw	0
  4953  011762  6EE6               	movwf	postinc1,c
  4954  011764  0E02               	movlw	2
  4955  011766  6EE6               	movwf	postinc1,c
  4956  011768  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  4957  01176C  0060  F007  FFE6   	movff	btemp,postinc1
  4958  011772  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4959  011778  0E08               	movlw	8
  4960  01177A  6EE6               	movwf	postinc1,c
  4961  01177C  EC2E  F0D2         	call	_sprintf	;wreg free
  4962                           
  4963                           ; BSR set to: 0
  4964                           ;main.c: 297:     update_lcd(0);
  4965  011780  0E00               	movlw	0
  4966  011782  6EE6               	movwf	postinc1,c
  4967  011784  ECA6  F0D1         	call	_update_lcd	;wreg free
  4968                           
  4969                           ;main.c: 299:     if (i_esr++ > 512)
  4970                           ;stkvar	_i_esr @ sp[(-17)+8]
  4971  011788  50E1               	movf	fsr1l,w,c
  4972  01178A  0FF7               	addlw	-9
  4973  01178C  6ED9               	movwf	fsr2l,c
  4974  01178E  50E2               	movf	fsr1h,w,c
  4975  011790  6EDA               	movwf	fsr2h,c
  4976  011792  0EFF               	movlw	255
  4977  011794  22DA               	addwfc	fsr2h,f,c
  4978  011796  006F FF7C  F00B    	movff	indf2,btemp+10
  4979  01179C  0E01               	movlw	1
  4980  01179E  26DE               	addwf	postinc2,f,c
  4981  0117A0  006F FF7C  F00C    	movff	indf2,btemp+11
  4982  0117A6  0E00               	movlw	0
  4983  0117A8  22DD               	addwfc	postdec2,f,c
  4984  0117AA  040B               	decf	(btemp+10)^0,w,c
  4985  0117AC  0E02               	movlw	2
  4986  0117AE  580C               	subwfb	(btemp+11)^0,w,c
  4987  0117B0  B0D8               	btfsc	status,0,c
  4988  0117B2  D017               	goto	u13250
  4989  0117B4                     l13889:
  4990                           
  4991                           ;main.c: 293:    while ((esr_temp = esr_check(0)) < 0.0) {
  4992  0117B4  0E00               	movlw	0
  4993  0117B6  6EE6               	movwf	postinc1,c
  4994  0117B8  EC8E  F0BA         	call	_esr_check	;wreg free
  4995                           
  4996                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4997  0117BC  0EF3               	movlw	-13
  4998  0117BE  0060  F007  FFE3   	movff	btemp,plusw1
  4999  0117C4  0EF4               	movlw	-12
  5000  0117C6  0060  F00B  FFE3   	movff	btemp+1,plusw1
  5001  0117CC  0EF5               	movlw	-11
  5002  0117CE  0060  F00F  FFE3   	movff	btemp+2,plusw1
  5003  0117D4  0EF6               	movlw	-10
  5004  0117D6  0060  F013  FFE3   	movff	btemp+3,plusw1
  5005  0117DC  0EF6               	movlw	-10
  5006  0117DE  BEE3               	btfsc	plusw1,7,c
  5007  0117E0  D77C               	goto	l13877
  5008  0117E2                     u13250:
  5009                           
  5010                           ;main.c: 302:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  5011  0117E2  EE21  F387         	lfsr	2,_C+136	;volatile
  5012  0117E6  006F FF7B FFE6     	movff	postinc2,postinc1
  5013  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  5014  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  5015  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  5016  0117FE  0E6E               	movlw	low STR_16
  5017  011800  6EE6               	movwf	postinc1,c
  5018  011802  0EFC               	movlw	high STR_16
  5019  011804  6EE6               	movwf	postinc1,c
  5020  011806  0E00               	movlw	0
  5021  011808  6EE6               	movwf	postinc1,c
  5022  01180A  0E00               	movlw	0
  5023  01180C  6EE6               	movwf	postinc1,c
  5024  01180E  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  5025  011812  0060  F007  FFE6   	movff	btemp,postinc1
  5026  011818  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5027  01181E  0E08               	movlw	8
  5028  011820  6EE6               	movwf	postinc1,c
  5029  011822  EC2E  F0D2         	call	_sprintf	;wreg free
  5030                           
  5031                           ;main.c: 303:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  5032  011826  EE22  F00D         	lfsr	2,_C+270	;volatile
  5033  01182A  006F FF7B FFE6     	movff	postinc2,postinc1
  5034  011830  006F FF7B FFE6     	movff	postinc2,postinc1
  5035  011836  006F FF7B FFE6     	movff	postinc2,postinc1
  5036  01183C  006F FF7B FFE6     	movff	postinc2,postinc1
  5037  011842  EE22  F019         	lfsr	2,_C+282	;volatile
  5038  011846  006F FF7B FFE6     	movff	postinc2,postinc1
  5039  01184C  006F FF7B FFE6     	movff	postinc2,postinc1
  5040  011852  006F FF7B FFE6     	movff	postinc2,postinc1
  5041  011858  006F FF7B FFE6     	movff	postinc2,postinc1
  5042  01185E  0E95               	movlw	low STR_17
  5043  011860  6EE6               	movwf	postinc1,c
  5044  011862  0EFB               	movlw	high STR_17
  5045  011864  6EE6               	movwf	postinc1,c
  5046  011866  0E00               	movlw	0
  5047  011868  6EE6               	movwf	postinc1,c
  5048  01186A  0E01               	movlw	1
  5049  01186C  6EE6               	movwf	postinc1,c
  5050  01186E  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  5051  011872  0060  F007  FFE6   	movff	btemp,postinc1
  5052  011878  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5053  01187E  0E0C               	movlw	12
  5054  011880  6EE6               	movwf	postinc1,c
  5055  011882  EC2E  F0D2         	call	_sprintf	;wreg free
  5056                           
  5057                           ;main.c: 304:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  5058  011886  EE22  F011         	lfsr	2,_C+274	;volatile
  5059  01188A  006F FF7B FFE6     	movff	postinc2,postinc1
  5060  011890  006F FF7B FFE6     	movff	postinc2,postinc1
  5061  011896  006F FF7B FFE6     	movff	postinc2,postinc1
  5062  01189C  006F FF7B FFE6     	movff	postinc2,postinc1
  5063  0118A2  EE22  F01D         	lfsr	2,_C+286	;volatile
  5064  0118A6  006F FF7B FFE6     	movff	postinc2,postinc1
  5065  0118AC  006F FF7B FFE6     	movff	postinc2,postinc1
  5066  0118B2  006F FF7B FFE6     	movff	postinc2,postinc1
  5067  0118B8  006F FF7B FFE6     	movff	postinc2,postinc1
  5068  0118BE  0EAF               	movlw	low STR_18
  5069  0118C0  6EE6               	movwf	postinc1,c
  5070  0118C2  0EFB               	movlw	high STR_18
  5071  0118C4  6EE6               	movwf	postinc1,c
  5072  0118C6  0E00               	movlw	0
  5073  0118C8  6EE6               	movwf	postinc1,c
  5074  0118CA  0E02               	movlw	2
  5075  0118CC  6EE6               	movwf	postinc1,c
  5076  0118CE  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  5077  0118D2  0060  F007  FFE6   	movff	btemp,postinc1
  5078  0118D8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5079  0118DE  0E0C               	movlw	12
  5080  0118E0  6EE6               	movwf	postinc1,c
  5081  0118E2  EC2E  F0D2         	call	_sprintf	;wreg free
  5082                           
  5083                           ;main.c: 305:    update_lcd(0);
  5084  0118E6  0E00               	movlw	0
  5085  0118E8  6EE6               	movwf	postinc1,c
  5086  0118EA  ECA6  F0D1         	call	_update_lcd	;wreg free
  5087                           
  5088                           ;main.c: 306:    WaitMs(4000);
  5089  0118EE  0EA0               	movlw	160
  5090  0118F0  6EE6               	movwf	postinc1,c
  5091  0118F2  0E0F               	movlw	15
  5092  0118F4  6EE6               	movwf	postinc1,c
  5093  0118F6  EC5D  F0E1         	call	_WaitMs	;wreg free
  5094                           
  5095                           ;main.c: 307:    V.sensor_set = get_switch(SCALIB);
  5096  0118FA  0E04               	movlw	4
  5097  0118FC  6EE6               	movwf	postinc1,c
  5098  0118FE  EC57  F0E2         	call	_get_switch	;wreg free
  5099  011902  5001               	movf	btemp^0,w,c
  5100  011904  B4D8               	btfsc	status,2,c
  5101  011906  D002               	goto	u13260
  5102  011908  0E01               	movlw	1
  5103  01190A  D001               	goto	u13270
  5104  01190C                     u13260:
  5105  01190C  0E00               	movlw	0
  5106  01190E                     u13270:
  5107  01190E  0101               	movlb	1	; () banked
  5108  011910  6FB5               	movwf	(_V+174)& (0+255),b	;volatile
  5109                           
  5110                           ; BSR set to: 1
  5111                           ;main.c: 308:    WaitMs(1000);
  5112  011912  0EE8               	movlw	232
  5113  011914  6EE6               	movwf	postinc1,c
  5114  011916  0E03               	movlw	3
  5115  011918  6EE6               	movwf	postinc1,c
  5116  01191A  EC5D  F0E1         	call	_WaitMs	;wreg free
  5117                           
  5118                           ;main.c: 309:    if (V.sensor_set && get_switch(SCALIB)) {
  5119  01191E  0101               	movlb	1	; () banked
  5120  011920  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
  5121  011922  B4D8               	btfsc	status,2,c
  5122  011924  D00F               	goto	l13907
  5123                           
  5124                           ; BSR set to: 1
  5125  011926  0E04               	movlw	4
  5126  011928  6EE6               	movwf	postinc1,c
  5127  01192A  EC57  F0E2         	call	_get_switch	;wreg free
  5128  01192E  5001               	movf	btemp^0,w,c
  5129  011930  B4D8               	btfsc	status,2,c
  5130  011932  D008               	goto	l13907
  5131                           
  5132                           ;main.c: 310:     current_sensor_cal();
  5133  011934  EC71  F0B2         	call	_current_sensor_cal	;wreg free
  5134                           
  5135                           ;main.c: 311:     WaitMs(4000);
  5136  011938  0EA0               	movlw	160
  5137  01193A  6EE6               	movwf	postinc1,c
  5138  01193C  0E0F               	movlw	15
  5139  01193E  6EE6               	movwf	postinc1,c
  5140  011940  EC5D  F0E1         	call	_WaitMs	;wreg free
  5141  011944                     l13907:
  5142                           
  5143                           ;main.c: 313:    V.sensor_set = 0;
  5144  011944  0101               	movlb	1	; () banked
  5145  011946  6BB5               	clrf	(_V+174)& (0+255),b	;volatile
  5146                           
  5147                           ; BSR set to: 1
  5148                           ;main.c: 314:    V.system_stable = 1;
  5149  011948  0E01               	movlw	1
  5150  01194A  6FB6               	movwf	(_V+175)& (0+255),b	;volatile
  5151                           
  5152                           ;main.c: 315:    break;
  5153  01194C  D01B               	goto	l13915
  5154  01194E                     l1353:
  5155                           
  5156                           ; BSR set to: 1
  5157                           ;main.c: 321:    P.SYSTEM_STABLE = 1;
  5158  01194E  81F3               	bsf	(_P+1)& (0+255),0,b	;volatile
  5159                           
  5160                           ;main.c: 322:    break;
  5161  011950  D019               	goto	l13915
  5162  011952                     l1355:
  5163                           
  5164                           ; BSR set to: 1
  5165                           ;main.c: 325:    V.ui_state = UI_STATE_INIT;
  5166  011952  6B07               	clrf	_V& (0+255),b	;volatile
  5167                           
  5168                           ;main.c: 326:    break;
  5169  011954  D017               	goto	l13915
  5170  011956                     l13913:
  5171  011956  0101               	movlb	1	; () banked
  5172  011958  5107               	movf	_V& (0+255),w,b	;volatile
  5173  01195A  6E0B               	movwf	(btemp+10)^0,c
  5174  01195C  6A0C               	clrf	(btemp+11)^0,c
  5175                           
  5176                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5177                           ; Switch size 1, requested type "simple"
  5178                           ; Number of cases is 1, Range of values is 0 to 0
  5179                           ; switch strategies available:
  5180                           ; Name         Instructions Cycles
  5181                           ; simple_byte            4     3 (average)
  5182                           ;	Chosen strategy is simple_byte
  5183  01195E  500C               	movf	(btemp+11)^0,w,c
  5184  011960  0A00               	xorlw	0	; case 0
  5185  011962  A4D8               	btfss	status,2,c
  5186  011964  D7F6               	goto	l1355
  5187                           
  5188                           ; BSR set to: 1
  5189                           ; Switch size 1, requested type "simple"
  5190                           ; Number of cases is 5, Range of values is 0 to 5
  5191                           ; switch strategies available:
  5192                           ; Name         Instructions Cycles
  5193                           ; simple_byte           16     9 (average)
  5194                           ;	Chosen strategy is simple_byte
  5195  011966  500B               	movf	(btemp+10)^0,w,c
  5196  011968  0A00               	xorlw	0	; case 0
  5197  01196A  B4D8               	btfsc	status,2,c
  5198  01196C  D4A7               	goto	l13779
  5199  01196E  0A01               	xorlw	1	; case 1
  5200  011970  B4D8               	btfsc	status,2,c
  5201  011972  D008               	goto	l13915
  5202  011974  0A02               	xorlw	2	; case 3
  5203  011976  B4D8               	btfsc	status,2,c
  5204  011978  D005               	goto	l13915
  5205  01197A  0A07               	xorlw	7	; case 4
  5206  01197C  B4D8               	btfsc	status,2,c
  5207  01197E  D7E7               	goto	l1353
  5208  011980  0A01               	xorlw	1	; case 5
  5209  011982  D7E7               	goto	l1355
  5210  011984                     l13915:
  5211                           
  5212                           ; BSR set to: 1
  5213                           ;main.c: 329:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  5214  011984  0E01               	movlw	1
  5215  011986  6EE6               	movwf	postinc1,c
  5216  011988  ECC3  F0E2         	call	_TimerDone	;wreg free
  5217  01198C  5001               	movf	btemp^0,w,c
  5218  01198E  B4D8               	btfsc	status,2,c
  5219  011990  D013               	goto	l13927
  5220  011992  ECAD  F0E5         	call	_check_adc_scan	;wreg free
  5221  011996  5001               	movf	btemp^0,w,c
  5222  011998  B4D8               	btfsc	status,2,c
  5223  01199A  D00E               	goto	l13927
  5224                           
  5225                           ;main.c: 333:    convert_adc_data();
  5226  01199C  EC79  F0D6         	call	_convert_adc_data	;wreg free
  5227                           
  5228                           ;main.c: 337:    clear_adc_scan();
  5229  0119A0  ECC1  F0E5         	call	_clear_adc_scan	;wreg free
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;main.c: 338:    start_adc_scan();
  5233  0119A4  EC07  F0DD         	call	_start_adc_scan	;wreg free
  5234                           
  5235                           ;main.c: 339:    StartTimer(TMR_ADC, 200);
  5236  0119A8  0EC8               	movlw	200
  5237  0119AA  6EE6               	movwf	postinc1,c
  5238  0119AC  0E00               	movlw	0
  5239  0119AE  6EE6               	movwf	postinc1,c
  5240  0119B0  0E01               	movlw	1
  5241  0119B2  6EE6               	movwf	postinc1,c
  5242  0119B4  EC6E  F0E0         	call	_StartTimer	;wreg free
  5243  0119B8                     l13927:
  5244                           
  5245                           ;main.c: 346:   if (TimerDone(TMR_DISPLAY)) {
  5246                           
  5247                           ;main.c: 342:   if (V.ticks) {
  5248  0119B8  0E0A               	movlw	10
  5249  0119BA  6EE6               	movwf	postinc1,c
  5250  0119BC  ECC3  F0E2         	call	_TimerDone	;wreg free
  5251  0119C0  5001               	movf	btemp^0,w,c
  5252  0119C2  B4D8               	btfsc	status,2,c
  5253  0119C4  EF88  F091         	goto	l14011
  5254                           
  5255                           ;main.c: 347:    if (TimerDone(TMR_HELPDIS)) {
  5256  0119C8  0E09               	movlw	9
  5257  0119CA  6EE6               	movwf	postinc1,c
  5258  0119CC  ECC3  F0E2         	call	_TimerDone	;wreg free
  5259  0119D0  5001               	movf	btemp^0,w,c
  5260  0119D2  B4D8               	btfsc	status,2,c
  5261  0119D4  D004               	goto	l13935
  5262                           
  5263                           ;main.c: 348:     set_display_info(DIS_STR);
  5264  0119D6  0E00               	movlw	0
  5265  0119D8  6EE6               	movwf	postinc1,c
  5266  0119DA  ECC8  F0E4         	call	_set_display_info	;wreg free
  5267  0119DE                     l13935:
  5268                           
  5269                           ;main.c: 350:    calc_model_data();
  5270  0119DE  EC6E  F0AE         	call	_calc_model_data	;wreg free
  5271                           
  5272                           ; BSR set to: 57
  5273                           ;main.c: 357:     hid_display(&H);
  5274                           
  5275                           ;main.c: 352:    if (0) {
  5276  0119E2  0EC7               	movlw	low _H
  5277  0119E4  6EE6               	movwf	postinc1,c
  5278  0119E6  0E01               	movlw	high _H
  5279  0119E8  6EE6               	movwf	postinc1,c
  5280  0119EA  EC26  F0C3         	call	_hid_display	;wreg free
  5281                           
  5282                           ;main.c: 358:     switch (H.hid_display) {
  5283  0119EE  EF1E  F091         	goto	l13983
  5284  0119F2                     l1363:
  5285                           
  5286                           ; BSR set to: 1
  5287                           ;main.c: 360:      V.calib = 0;
  5288  0119F2  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5289                           
  5290                           ; BSR set to: 1
  5291                           ;main.c: 361:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  5292  0119F4  EE22  F021         	lfsr	2,_C+290	;volatile
  5293  0119F8  50DF               	movf	indf2,w,c
  5294  0119FA  A4D8               	btfss	status,2,c
  5295  0119FC  D002               	goto	l13945
  5296                           
  5297                           ; BSR set to: 1
  5298  0119FE  0E20               	movlw	32
  5299  011A00  D001               	goto	L1
  5300  011A02                     l13945:
  5301                           
  5302                           ; BSR set to: 1
  5303  011A02  0E44               	movlw	68
  5304  011A04                     L1:
  5305  011A04  6E0B               	movwf	(btemp+10)^0,c
  5306  011A06  0E00               	movlw	0
  5307  011A08  6E0C               	movwf	(btemp+11)^0,c
  5308                           
  5309                           ;stkvar	_main$3786 @ sp[(-17)+2]
  5310  011A0A  0EF1               	movlw	-15
  5311  011A0C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5312  011A12  0EF2               	movlw	-14
  5313  011A14  0060  F033  FFE3   	movff	btemp+11,plusw1
  5314                           
  5315                           ; BSR set to: 1
  5316  011A1A  EE21  F37B         	lfsr	2,_C+124	;volatile
  5317  011A1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5318  011A24  006F FF7B FFE6     	movff	postinc2,postinc1
  5319  011A2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5320  011A30  006F FF7B FFE6     	movff	postinc2,postinc1
  5321                           
  5322                           ;stkvar	_main$3786 @ sp[(-21)+2]
  5323  011A36  0EED               	movlw	-19
  5324  011A38  006F FF8F FFE6     	movff	plusw1,postinc1
  5325  011A3E  006F FF8F FFE6     	movff	plusw1,postinc1
  5326  011A44  0E4A               	movlw	low STR_22
  5327  011A46  6EE6               	movwf	postinc1,c
  5328  011A48  0EFD               	movlw	high STR_22
  5329  011A4A  6EE6               	movwf	postinc1,c
  5330  011A4C  0E00               	movlw	0
  5331  011A4E  6EE6               	movwf	postinc1,c
  5332  011A50  0E00               	movlw	0
  5333  011A52  6EE6               	movwf	postinc1,c
  5334  011A54  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  5335  011A58  0060  F007  FFE6   	movff	btemp,postinc1
  5336  011A5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5337  011A64  0E0A               	movlw	10
  5338  011A66  6EE6               	movwf	postinc1,c
  5339  011A68  EC2E  F0D2         	call	_sprintf	;wreg free
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;main.c: 362:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  5343  011A6C  EE21  F373         	lfsr	2,_C+116	;volatile
  5344  011A70  006F FF7B FFE6     	movff	postinc2,postinc1
  5345  011A76  006F FF7B FFE6     	movff	postinc2,postinc1
  5346  011A7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5347  011A82  006F FF7B FFE6     	movff	postinc2,postinc1
  5348  011A88  0E34               	movlw	low STR_23
  5349  011A8A  6EE6               	movwf	postinc1,c
  5350  011A8C  0EFD               	movlw	high STR_23
  5351  011A8E  6EE6               	movwf	postinc1,c
  5352  011A90  0E00               	movlw	0
  5353  011A92  6EE6               	movwf	postinc1,c
  5354  011A94  0E01               	movlw	1
  5355  011A96  6EE6               	movwf	postinc1,c
  5356  011A98  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  5357  011A9C  0060  F007  FFE6   	movff	btemp,postinc1
  5358  011AA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5359  011AA8  0E08               	movlw	8
  5360  011AAA  6EE6               	movwf	postinc1,c
  5361  011AAC  EC2E  F0D2         	call	_sprintf	;wreg free
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;main.c: 363:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  5365  011AB0  EE21  F377         	lfsr	2,_C+120	;volatile
  5366  011AB4  006F FF7B FFE6     	movff	postinc2,postinc1
  5367  011ABA  006F FF7B FFE6     	movff	postinc2,postinc1
  5368  011AC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5369  011AC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5370  011ACC  0E1E               	movlw	low STR_24
  5371  011ACE  6EE6               	movwf	postinc1,c
  5372  011AD0  0EFD               	movlw	high STR_24
  5373  011AD2  6EE6               	movwf	postinc1,c
  5374  011AD4  0E00               	movlw	0
  5375  011AD6  6EE6               	movwf	postinc1,c
  5376  011AD8  0E02               	movlw	2
  5377  011ADA  6EE6               	movwf	postinc1,c
  5378  011ADC  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  5379  011AE0  0060  F007  FFE6   	movff	btemp,postinc1
  5380  011AE6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5381  011AEC  0E08               	movlw	8
  5382  011AEE  6EE6               	movwf	postinc1,c
  5383  011AF0  EC2E  F0D2         	call	_sprintf	;wreg free
  5384                           
  5385                           ; BSR set to: 0
  5386                           ;main.c: 365:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5387  011AF4  EE22  F021         	lfsr	2,_C+290	;volatile
  5388  011AF8  50DF               	movf	indf2,w,c
  5389  011AFA  A4D8               	btfss	status,2,c
  5390  011AFC  D002               	goto	l13957
  5391                           
  5392                           ; BSR set to: 0
  5393  011AFE  0E20               	movlw	32
  5394  011B00  D001               	goto	L2
  5395  011B02                     l13957:
  5396                           
  5397                           ; BSR set to: 0
  5398  011B02  0E44               	movlw	68
  5399  011B04                     L2:
  5400  011B04  6E0B               	movwf	(btemp+10)^0,c
  5401  011B06  0E00               	movlw	0
  5402  011B08  6E0C               	movwf	(btemp+11)^0,c
  5403                           
  5404                           ;stkvar	_main$3790 @ sp[(-17)+0]
  5405  011B0A  0EEF               	movlw	-17
  5406  011B0C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5407  011B12  0EF0               	movlw	-16
  5408  011B14  0060  F033  FFE3   	movff	btemp+11,plusw1
  5409                           
  5410                           ; BSR set to: 0
  5411  011B1A  EE21  F3A7         	lfsr	2,_C+168	;volatile
  5412  011B1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5413  011B24  006F FF7B FFE6     	movff	postinc2,postinc1
  5414  011B2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5415  011B30  006F FF7B FFE6     	movff	postinc2,postinc1
  5416                           
  5417                           ;stkvar	_main$3790 @ sp[(-21)+0]
  5418  011B36  0EEB               	movlw	-21
  5419  011B38  006F FF8F FFE6     	movff	plusw1,postinc1
  5420  011B3E  006F FF8F FFE6     	movff	plusw1,postinc1
  5421  011B44  0E08               	movlw	low STR_25
  5422  011B46  6EE6               	movwf	postinc1,c
  5423  011B48  0EFD               	movlw	high STR_25
  5424  011B4A  6EE6               	movwf	postinc1,c
  5425  011B4C  0E01               	movlw	1
  5426  011B4E  6EE6               	movwf	postinc1,c
  5427  011B50  0E00               	movlw	0
  5428  011B52  6EE6               	movwf	postinc1,c
  5429  011B54  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  5430  011B58  0060  F007  FFE6   	movff	btemp,postinc1
  5431  011B5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5432  011B64  0E0A               	movlw	10
  5433  011B66  6EE6               	movwf	postinc1,c
  5434  011B68  EC2E  F0D2         	call	_sprintf	;wreg free
  5435                           
  5436                           ; BSR set to: 0
  5437                           ;main.c: 366:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5438  011B6C  EE21  F3AF         	lfsr	2,_C+176	;volatile
  5439  011B70  006F FF7B FFE6     	movff	postinc2,postinc1
  5440  011B76  006F FF7B FFE6     	movff	postinc2,postinc1
  5441  011B7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5442  011B82  006F FF7B FFE6     	movff	postinc2,postinc1
  5443  011B88  0EF2               	movlw	low STR_26
  5444  011B8A  6EE6               	movwf	postinc1,c
  5445  011B8C  0EFC               	movlw	high STR_26
  5446  011B8E  6EE6               	movwf	postinc1,c
  5447  011B90  0E01               	movlw	1
  5448  011B92  6EE6               	movwf	postinc1,c
  5449  011B94  0E01               	movlw	1
  5450  011B96  6EE6               	movwf	postinc1,c
  5451  011B98  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  5452  011B9C  0060  F007  FFE6   	movff	btemp,postinc1
  5453  011BA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5454  011BA8  0E08               	movlw	8
  5455  011BAA  6EE6               	movwf	postinc1,c
  5456  011BAC  EC2E  F0D2         	call	_sprintf	;wreg free
  5457                           
  5458                           ; BSR set to: 0
  5459                           ;main.c: 367:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5460  011BB0  EE21  F3AB         	lfsr	2,_C+172	;volatile
  5461  011BB4  006F FF7B FFE6     	movff	postinc2,postinc1
  5462  011BBA  006F FF7B FFE6     	movff	postinc2,postinc1
  5463  011BC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5464  011BC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5465  011BCC  0EDC               	movlw	low STR_27
  5466  011BCE  6EE6               	movwf	postinc1,c
  5467  011BD0  0EFC               	movlw	high STR_27
  5468  011BD2  6EE6               	movwf	postinc1,c
  5469  011BD4  0E01               	movlw	1
  5470  011BD6  6EE6               	movwf	postinc1,c
  5471  011BD8  0E02               	movlw	2
  5472  011BDA  6EE6               	movwf	postinc1,c
  5473  011BDC  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  5474  011BE0  0060  F007  FFE6   	movff	btemp,postinc1
  5475  011BE6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5476  011BEC  0E08               	movlw	8
  5477  011BEE  6EE6               	movwf	postinc1,c
  5478  011BF0  EC2E  F0D2         	call	_sprintf	;wreg free
  5479                           
  5480                           ;main.c: 368:      break;
  5481  011BF4  D339               	goto	l13985
  5482  011BF6                     l1373:
  5483                           
  5484                           ; BSR set to: 1
  5485                           ;main.c: 370:      V.calib = 0;
  5486  011BF6  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5487                           
  5488                           ; BSR set to: 1
  5489                           ;main.c: 371:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5490  011BF8  EE21  F303         	lfsr	2,_C+4	;volatile
  5491  011BFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5492  011C02  006F FF7B FFE6     	movff	postinc2,postinc1
  5493  011C08  006F FF7B FFE6     	movff	postinc2,postinc1
  5494  011C0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5495  011C14  EE21  F313         	lfsr	2,_C+20	;volatile
  5496  011C18  006F FF7B FFE6     	movff	postinc2,postinc1
  5497  011C1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5498  011C24  006F FF7B FFE6     	movff	postinc2,postinc1
  5499  011C2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5500  011C30  0EA2               	movlw	low STR_28
  5501  011C32  6EE6               	movwf	postinc1,c
  5502  011C34  0EFD               	movlw	high STR_28
  5503  011C36  6EE6               	movwf	postinc1,c
  5504  011C38  0E00               	movlw	0
  5505  011C3A  6EE6               	movwf	postinc1,c
  5506  011C3C  0E00               	movlw	0
  5507  011C3E  6EE6               	movwf	postinc1,c
  5508  011C40  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  5509  011C44  0060  F007  FFE6   	movff	btemp,postinc1
  5510  011C4A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5511  011C50  0E0C               	movlw	12
  5512  011C52  6EE6               	movwf	postinc1,c
  5513  011C54  EC2E  F0D2         	call	_sprintf	;wreg free
  5514                           
  5515                           ;main.c: 372:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5516  011C58  EE21  F2FF         	lfsr	2,_C
  5517  011C5C  006F FF7B FFE6     	movff	postinc2,postinc1
  5518  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  5519  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  5520  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5521  011C74  EE21  F30F         	lfsr	2,_C+16	;volatile
  5522  011C78  006F FF7B FFE6     	movff	postinc2,postinc1
  5523  011C7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5524  011C84  006F FF7B FFE6     	movff	postinc2,postinc1
  5525  011C8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5526  011C90  0E76               	movlw	low STR_29
  5527  011C92  6EE6               	movwf	postinc1,c
  5528  011C94  0EFD               	movlw	high STR_29
  5529  011C96  6EE6               	movwf	postinc1,c
  5530  011C98  0E00               	movlw	0
  5531  011C9A  6EE6               	movwf	postinc1,c
  5532  011C9C  0E01               	movlw	1
  5533  011C9E  6EE6               	movwf	postinc1,c
  5534  011CA0  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  5535  011CA4  0060  F007  FFE6   	movff	btemp,postinc1
  5536  011CAA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5537  011CB0  0E0C               	movlw	12
  5538  011CB2  6EE6               	movwf	postinc1,c
  5539  011CB4  EC2E  F0D2         	call	_sprintf	;wreg free
  5540                           
  5541                           ;main.c: 373:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5542  011CB8  EE21  F33F         	lfsr	2,_C+64	;volatile
  5543  011CBC  006F FF7B FFE6     	movff	postinc2,postinc1
  5544  011CC2  006F FF7B FFE6     	movff	postinc2,postinc1
  5545  011CC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5546  011CCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5547  011CD4  EE21  F307         	lfsr	2,_C+8	;volatile
  5548  011CD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5549  011CDE  006F FF7B FFE6     	movff	postinc2,postinc1
  5550  011CE4  006F FF7B FFE6     	movff	postinc2,postinc1
  5551  011CEA  006F FF7B FFE6     	movff	postinc2,postinc1
  5552  011CF0  0E8C               	movlw	low STR_30
  5553  011CF2  6EE6               	movwf	postinc1,c
  5554  011CF4  0EFD               	movlw	high STR_30
  5555  011CF6  6EE6               	movwf	postinc1,c
  5556  011CF8  0E00               	movlw	0
  5557  011CFA  6EE6               	movwf	postinc1,c
  5558  011CFC  0E02               	movlw	2
  5559  011CFE  6EE6               	movwf	postinc1,c
  5560  011D00  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  5561  011D04  0060  F007  FFE6   	movff	btemp,postinc1
  5562  011D0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5563  011D10  0E0C               	movlw	12
  5564  011D12  6EE6               	movwf	postinc1,c
  5565  011D14  EC2E  F0D2         	call	_sprintf	;wreg free
  5566                           
  5567                           ;main.c: 375:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  5568  011D18  EE21  F39F         	lfsr	2,_C+160	;volatile
  5569  011D1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5570  011D22  006F FF7B FFE6     	movff	postinc2,postinc1
  5571  011D28  006F FF7B FFE6     	movff	postinc2,postinc1
  5572  011D2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5573  011D34  0E9A               	movlw	low STR_31
  5574  011D36  6EE6               	movwf	postinc1,c
  5575  011D38  0EFC               	movlw	high STR_31
  5576  011D3A  6EE6               	movwf	postinc1,c
  5577  011D3C  0E01               	movlw	1
  5578  011D3E  6EE6               	movwf	postinc1,c
  5579  011D40  0E00               	movlw	0
  5580  011D42  6EE6               	movwf	postinc1,c
  5581  011D44  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  5582  011D48  0060  F007  FFE6   	movff	btemp,postinc1
  5583  011D4E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5584  011D54  0E08               	movlw	8
  5585  011D56  6EE6               	movwf	postinc1,c
  5586  011D58  EC2E  F0D2         	call	_sprintf	;wreg free
  5587                           
  5588                           ;main.c: 376:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  5589  011D5C  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5590  011D60  006F FF7B FFE6     	movff	postinc2,postinc1
  5591  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
  5592  011D6C  006F FF7B FFE6     	movff	postinc2,postinc1
  5593  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
  5594  011D78  0EB0               	movlw	low STR_32
  5595  011D7A  6EE6               	movwf	postinc1,c
  5596  011D7C  0EFC               	movlw	high STR_32
  5597  011D7E  6EE6               	movwf	postinc1,c
  5598  011D80  0E01               	movlw	1
  5599  011D82  6EE6               	movwf	postinc1,c
  5600  011D84  0E01               	movlw	1
  5601  011D86  6EE6               	movwf	postinc1,c
  5602  011D88  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  5603  011D8C  0060  F007  FFE6   	movff	btemp,postinc1
  5604  011D92  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5605  011D98  0E08               	movlw	8
  5606  011D9A  6EE6               	movwf	postinc1,c
  5607  011D9C  EC2E  F0D2         	call	_sprintf	;wreg free
  5608                           
  5609                           ;main.c: 377:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  5610  011DA0  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5611  011DA4  006F FF7B FFE6     	movff	postinc2,postinc1
  5612  011DAA  006F FF7B FFE6     	movff	postinc2,postinc1
  5613  011DB0  006F FF7B FFE6     	movff	postinc2,postinc1
  5614  011DB6  006F FF7B FFE6     	movff	postinc2,postinc1
  5615  011DBC  EE21  F39F         	lfsr	2,_C+160	;volatile
  5616  011DC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5617  011DC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5618  011DCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5619  011DD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5620  011DD8  EC35  F0A3         	call	___fladd	;wreg free
  5621  011DDC  0060  F007  FFE6   	movff	btemp,postinc1
  5622  011DE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5623  011DE8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5624  011DEE  0060  F013  FFE6   	movff	btemp+3,postinc1
  5625  011DF4  0EC6               	movlw	low STR_33
  5626  011DF6  6EE6               	movwf	postinc1,c
  5627  011DF8  0EFC               	movlw	high STR_33
  5628  011DFA  6EE6               	movwf	postinc1,c
  5629  011DFC  0E01               	movlw	1
  5630  011DFE  6EE6               	movwf	postinc1,c
  5631  011E00  0E02               	movlw	2
  5632  011E02  6EE6               	movwf	postinc1,c
  5633  011E04  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  5634  011E08  0060  F007  FFE6   	movff	btemp,postinc1
  5635  011E0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5636  011E14  0E08               	movlw	8
  5637  011E16  6EE6               	movwf	postinc1,c
  5638  011E18  EC2E  F0D2         	call	_sprintf	;wreg free
  5639                           
  5640                           ;main.c: 378:      break;
  5641  011E1C  D225               	goto	l13985
  5642  011E1E                     l1374:
  5643                           
  5644                           ; BSR set to: 1
  5645                           ;main.c: 380:      V.calib = 0;
  5646  011E1E  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5647                           
  5648                           ; BSR set to: 1
  5649                           ;main.c: 381:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  5650  011E20  EE21  F37F         	lfsr	2,_C+128	;volatile
  5651  011E24  006F FF7B FFE6     	movff	postinc2,postinc1
  5652  011E2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5653  011E30  006F FF7B FFE6     	movff	postinc2,postinc1
  5654  011E36  006F FF7B FFE6     	movff	postinc2,postinc1
  5655  011E3C  0E12               	movlw	low STR_34
  5656  011E3E  6EE6               	movwf	postinc1,c
  5657  011E40  0EFC               	movlw	high STR_34
  5658  011E42  6EE6               	movwf	postinc1,c
  5659  011E44  0E00               	movlw	0
  5660  011E46  6EE6               	movwf	postinc1,c
  5661  011E48  0E00               	movlw	0
  5662  011E4A  6EE6               	movwf	postinc1,c
  5663  011E4C  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  5664  011E50  0060  F007  FFE6   	movff	btemp,postinc1
  5665  011E56  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5666  011E5C  0E08               	movlw	8
  5667  011E5E  6EE6               	movwf	postinc1,c
  5668  011E60  EC2E  F0D2         	call	_sprintf	;wreg free
  5669                           
  5670                           ;main.c: 382:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  5671  011E64  EE21  F393         	lfsr	2,_C+148	;volatile
  5672  011E68  006F FF7B FFE6     	movff	postinc2,postinc1
  5673  011E6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5674  011E74  006F FF7B FFE6     	movff	postinc2,postinc1
  5675  011E7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5676  011E80  EE21  F38F         	lfsr	2,_C+144	;volatile
  5677  011E84  006F FF7B FFE6     	movff	postinc2,postinc1
  5678  011E8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5679  011E90  006F FF7B FFE6     	movff	postinc2,postinc1
  5680  011E96  006F FF7B FFE6     	movff	postinc2,postinc1
  5681  011E9C  0E57               	movlw	low STR_35
  5682  011E9E  6EE6               	movwf	postinc1,c
  5683  011EA0  0EFC               	movlw	high STR_35
  5684  011EA2  6EE6               	movwf	postinc1,c
  5685  011EA4  0E00               	movlw	0
  5686  011EA6  6EE6               	movwf	postinc1,c
  5687  011EA8  0E01               	movlw	1
  5688  011EAA  6EE6               	movwf	postinc1,c
  5689  011EAC  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  5690  011EB0  0060  F007  FFE6   	movff	btemp,postinc1
  5691  011EB6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5692  011EBC  0E0C               	movlw	12
  5693  011EBE  6EE6               	movwf	postinc1,c
  5694  011EC0  EC2E  F0D2         	call	_sprintf	;wreg free
  5695                           
  5696                           ;main.c: 383:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  5697  011EC4  EE21  F30F         	lfsr	2,_C+16	;volatile
  5698  011EC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5699  011ECE  006F FF7B FFE6     	movff	postinc2,postinc1
  5700  011ED4  006F FF7B FFE6     	movff	postinc2,postinc1
  5701  011EDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5702  011EE0  EE21  F3B3         	lfsr	2,_C+180	;volatile
  5703  011EE4  006F FF78  F00B    	movff	postinc2,btemp+10
  5704  011EEA  006F FF74  F00C    	movff	postdec2,btemp+11
  5705  011EF0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5706  011EF6  0060  F033  FFE6   	movff	btemp+11,postinc1
  5707  011EFC  EE21  F3B5         	lfsr	2,_C+182	;volatile
  5708  011F00  006F FF78  F00B    	movff	postinc2,btemp+10
  5709  011F06  006F FF74  F00C    	movff	postdec2,btemp+11
  5710  011F0C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5711  011F12  0060  F033  FFE6   	movff	btemp+11,postinc1
  5712  011F18  0E00               	movlw	0
  5713  011F1A  6EE6               	movwf	postinc1,c
  5714  011F1C  0E05               	movlw	5
  5715  011F1E  6EE6               	movwf	postinc1,c
  5716  011F20  ECB3  F0D2         	call	_spinners	;wreg free
  5717  011F24  5001               	movf	btemp^0,w,c
  5718  011F26  6EE6               	movwf	postinc1,c
  5719  011F28  0E00               	movlw	0
  5720  011F2A  6EE6               	movwf	postinc1,c
  5721  011F2C  0E78               	movlw	low STR_36
  5722  011F2E  6EE6               	movwf	postinc1,c
  5723  011F30  0EFB               	movlw	high STR_36
  5724  011F32  6EE6               	movwf	postinc1,c
  5725  011F34  0E00               	movlw	0
  5726  011F36  6EE6               	movwf	postinc1,c
  5727  011F38  0E02               	movlw	2
  5728  011F3A  6EE6               	movwf	postinc1,c
  5729  011F3C  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  5730  011F40  0060  F007  FFE6   	movff	btemp,postinc1
  5731  011F46  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5732  011F4C  0E0E               	movlw	14
  5733  011F4E  6EE6               	movwf	postinc1,c
  5734  011F50  EC2E  F0D2         	call	_sprintf	;wreg free
  5735                           
  5736                           ;main.c: 385:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  5737  011F54  EE21  F387         	lfsr	2,_C+136	;volatile
  5738  011F58  006F FF7B FFE6     	movff	postinc2,postinc1
  5739  011F5E  006F FF7B FFE6     	movff	postinc2,postinc1
  5740  011F64  006F FF7B FFE6     	movff	postinc2,postinc1
  5741  011F6A  006F FF7B FFE6     	movff	postinc2,postinc1
  5742  011F70  0EFB               	movlw	low STR_37
  5743  011F72  6EE6               	movwf	postinc1,c
  5744  011F74  0EFB               	movlw	high STR_37
  5745  011F76  6EE6               	movwf	postinc1,c
  5746  011F78  0E01               	movlw	1
  5747  011F7A  6EE6               	movwf	postinc1,c
  5748  011F7C  0E00               	movlw	0
  5749  011F7E  6EE6               	movwf	postinc1,c
  5750  011F80  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  5751  011F84  0060  F007  FFE6   	movff	btemp,postinc1
  5752  011F8A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5753  011F90  0E08               	movlw	8
  5754  011F92  6EE6               	movwf	postinc1,c
  5755  011F94  EC2E  F0D2         	call	_sprintf	;wreg free
  5756                           
  5757                           ;main.c: 386:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  5758  011F98  EE22  F00D         	lfsr	2,_C+270	;volatile
  5759  011F9C  006F FF7B FFE6     	movff	postinc2,postinc1
  5760  011FA2  006F FF7B FFE6     	movff	postinc2,postinc1
  5761  011FA8  006F FF7B FFE6     	movff	postinc2,postinc1
  5762  011FAE  006F FF7B FFE6     	movff	postinc2,postinc1
  5763  011FB4  EE22  F019         	lfsr	2,_C+282	;volatile
  5764  011FB8  006F FF7B FFE6     	movff	postinc2,postinc1
  5765  011FBE  006F FF7B FFE6     	movff	postinc2,postinc1
  5766  011FC4  006F FF7B FFE6     	movff	postinc2,postinc1
  5767  011FCA  006F FF7B FFE6     	movff	postinc2,postinc1
  5768  011FD0  0E29               	movlw	low STR_38
  5769  011FD2  6EE6               	movwf	postinc1,c
  5770  011FD4  0EFC               	movlw	high STR_38
  5771  011FD6  6EE6               	movwf	postinc1,c
  5772  011FD8  0E01               	movlw	1
  5773  011FDA  6EE6               	movwf	postinc1,c
  5774  011FDC  0E01               	movlw	1
  5775  011FDE  6EE6               	movwf	postinc1,c
  5776  011FE0  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  5777  011FE4  0060  F007  FFE6   	movff	btemp,postinc1
  5778  011FEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5779  011FF0  0E0C               	movlw	12
  5780  011FF2  6EE6               	movwf	postinc1,c
  5781  011FF4  EC2E  F0D2         	call	_sprintf	;wreg free
  5782                           
  5783                           ;main.c: 387:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  5784  011FF8  EE22  F011         	lfsr	2,_C+274	;volatile
  5785  011FFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5786  012002  006F FF7B FFE6     	movff	postinc2,postinc1
  5787  012008  006F FF7B FFE6     	movff	postinc2,postinc1
  5788  01200E  006F FF7B FFE6     	movff	postinc2,postinc1
  5789  012014  EE22  F01D         	lfsr	2,_C+286	;volatile
  5790  012018  006F FF7B FFE6     	movff	postinc2,postinc1
  5791  01201E  006F FF7B FFE6     	movff	postinc2,postinc1
  5792  012024  006F FF7B FFE6     	movff	postinc2,postinc1
  5793  01202A  006F FF7B FFE6     	movff	postinc2,postinc1
  5794  012030  0E40               	movlw	low STR_39
  5795  012032  6EE6               	movwf	postinc1,c
  5796  012034  0EFC               	movlw	high STR_39
  5797  012036  6EE6               	movwf	postinc1,c
  5798  012038  0E01               	movlw	1
  5799  01203A  6EE6               	movwf	postinc1,c
  5800  01203C  0E02               	movlw	2
  5801  01203E  6EE6               	movwf	postinc1,c
  5802  012040  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  5803  012044  0060  F007  FFE6   	movff	btemp,postinc1
  5804  01204A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5805  012050  0E0C               	movlw	12
  5806  012052  6EE6               	movwf	postinc1,c
  5807  012054  EC2E  F0D2         	call	_sprintf	;wreg free
  5808                           
  5809                           ;main.c: 388:      break;
  5810  012058  D107               	goto	l13985
  5811  01205A                     l13969:
  5812                           
  5813                           ; BSR set to: 1
  5814                           ;main.c: 390:      if (!V.calib) {
  5815  01205A  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  5816  01205C  A4D8               	btfss	status,2,c
  5817  01205E  D02D               	goto	l13973
  5818                           
  5819                           ; BSR set to: 1
  5820                           ;main.c: 391:       lp_filter(0.0, i, -1);
  5821  012060  0EFF               	movlw	255
  5822  012062  6EE6               	movwf	postinc1,c
  5823                           
  5824                           ;stkvar	_i @ sp[(-18)+14]
  5825  012064  0EFC               	movlw	-4
  5826  012066  50E3               	movf	plusw1,w,c
  5827  012068  6EE6               	movwf	postinc1,c
  5828  01206A  0E00               	movlw	0
  5829  01206C  6EE6               	movwf	postinc1,c
  5830  01206E  0E00               	movlw	0
  5831  012070  6EE6               	movwf	postinc1,c
  5832  012072  0E00               	movlw	0
  5833  012074  6EE6               	movwf	postinc1,c
  5834  012076  0E00               	movlw	0
  5835  012078  6EE6               	movwf	postinc1,c
  5836  01207A  EC3F  F0C6         	call	_lp_filter	;wreg free
  5837                           
  5838                           ;main.c: 392:       lp_filter(0.0, j, -1);
  5839  01207E  0EFF               	movlw	255
  5840  012080  6EE6               	movwf	postinc1,c
  5841                           
  5842                           ;stkvar	_j @ sp[(-18)+13]
  5843  012082  0EFB               	movlw	-5
  5844  012084  50E3               	movf	plusw1,w,c
  5845  012086  6EE6               	movwf	postinc1,c
  5846  012088  0E00               	movlw	0
  5847  01208A  6EE6               	movwf	postinc1,c
  5848  01208C  0E00               	movlw	0
  5849  01208E  6EE6               	movwf	postinc1,c
  5850  012090  0E00               	movlw	0
  5851  012092  6EE6               	movwf	postinc1,c
  5852  012094  0E00               	movlw	0
  5853  012096  6EE6               	movwf	postinc1,c
  5854  012098  EC3F  F0C6         	call	_lp_filter	;wreg free
  5855                           
  5856                           ;main.c: 393:       lp_filter(0.0, k, -1);
  5857  01209C  0EFF               	movlw	255
  5858  01209E  6EE6               	movwf	postinc1,c
  5859                           
  5860                           ;stkvar	_k @ sp[(-18)+12]
  5861  0120A0  0EFA               	movlw	-6
  5862  0120A2  50E3               	movf	plusw1,w,c
  5863  0120A4  6EE6               	movwf	postinc1,c
  5864  0120A6  0E00               	movlw	0
  5865  0120A8  6EE6               	movwf	postinc1,c
  5866  0120AA  0E00               	movlw	0
  5867  0120AC  6EE6               	movwf	postinc1,c
  5868  0120AE  0E00               	movlw	0
  5869  0120B0  6EE6               	movwf	postinc1,c
  5870  0120B2  0E00               	movlw	0
  5871  0120B4  6EE6               	movwf	postinc1,c
  5872  0120B6  EC3F  F0C6         	call	_lp_filter	;wreg free
  5873  0120BA                     l13973:
  5874                           
  5875                           ;main.c: 395:      V.calib = 1;
  5876  0120BA  0E01               	movlw	1
  5877  0120BC  0101               	movlb	1	; () banked
  5878  0120BE  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  5879                           
  5880                           ; BSR set to: 1
  5881                           ;main.c: 396:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  5882                           ;stkvar	_inp_index @ sp[(-17)+11]
  5883  0120C0  0EFA               	movlw	-6
  5884  0120C2  50E3               	movf	plusw1,w,c
  5885  0120C4  6EE6               	movwf	postinc1,c
  5886  0120C6  0E00               	movlw	0
  5887  0120C8  6EE6               	movwf	postinc1,c
  5888                           
  5889                           ;stkvar	_i @ sp[(-19)+14]
  5890  0120CA  0EFB               	movlw	-5
  5891  0120CC  50E3               	movf	plusw1,w,c
  5892  0120CE  0D04               	mullw	4
  5893  0120D0  0EFF               	movlw	low _C
  5894  0120D2  24F3               	addwf	243,w,c
  5895  0120D4  6ED9               	movwf	fsr2l,c
  5896  0120D6  0E06               	movlw	high _C
  5897  0120D8  20F4               	addwfc	prodh,w,c
  5898  0120DA  6EDA               	movwf	fsr2h,c
  5899  0120DC  006F FF7B FFE6     	movff	postinc2,postinc1
  5900  0120E2  006F FF7B FFE6     	movff	postinc2,postinc1
  5901  0120E8  006F FF7B FFE6     	movff	postinc2,postinc1
  5902  0120EE  006F FF7B FFE6     	movff	postinc2,postinc1
  5903                           
  5904                           ;stkvar	_i @ sp[(-23)+14]
  5905  0120F4  0EF7               	movlw	-9
  5906  0120F6  50E3               	movf	plusw1,w,c
  5907  0120F8  6EE6               	movwf	postinc1,c
  5908  0120FA  ECD7  F0E4         	call	_get_raw_result	;wreg free
  5909  0120FE  0060  F007  FFE6   	movff	btemp,postinc1
  5910  012104  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5911  01210A  0EB8               	movlw	low STR_40
  5912  01210C  6EE6               	movwf	postinc1,c
  5913  01210E  0EFD               	movlw	high STR_40
  5914  012110  6EE6               	movwf	postinc1,c
  5915  012112  0E00               	movlw	0
  5916  012114  6EE6               	movwf	postinc1,c
  5917  012116  0E00               	movlw	0
  5918  012118  6EE6               	movwf	postinc1,c
  5919  01211A  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  5920  01211E  0060  F007  FFE6   	movff	btemp,postinc1
  5921  012124  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5922  01212A  0E0C               	movlw	12
  5923  01212C  6EE6               	movwf	postinc1,c
  5924  01212E  EC2E  F0D2         	call	_sprintf	;wreg free
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;main.c: 397:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  5928                           ;stkvar	_inp_index @ sp[(-17)+11]
  5929  012132  0EFA               	movlw	-6
  5930  012134  50E3               	movf	plusw1,w,c
  5931  012136  6E0B               	movwf	(btemp+10)^0,c
  5932  012138  6A0C               	clrf	(btemp+11)^0,c
  5933  01213A  0E01               	movlw	1
  5934  01213C  260B               	addwf	(btemp+10)^0,f,c
  5935  01213E  0E00               	movlw	0
  5936  012140  220C               	addwfc	(btemp+11)^0,f,c
  5937  012142  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5938  012148  0060  F033  FFE6   	movff	btemp+11,postinc1
  5939                           
  5940                           ;stkvar	_j @ sp[(-19)+13]
  5941  01214E  0EFA               	movlw	-6
  5942  012150  50E3               	movf	plusw1,w,c
  5943  012152  0D04               	mullw	4
  5944  012154  0EFF               	movlw	low _C
  5945  012156  24F3               	addwf	243,w,c
  5946  012158  6ED9               	movwf	fsr2l,c
  5947  01215A  0E06               	movlw	high _C
  5948  01215C  20F4               	addwfc	prodh,w,c
  5949  01215E  6EDA               	movwf	fsr2h,c
  5950  012160  006F FF7B FFE6     	movff	postinc2,postinc1
  5951  012166  006F FF7B FFE6     	movff	postinc2,postinc1
  5952  01216C  006F FF7B FFE6     	movff	postinc2,postinc1
  5953  012172  006F FF7B FFE6     	movff	postinc2,postinc1
  5954                           
  5955                           ;stkvar	_j @ sp[(-23)+13]
  5956  012178  0EF6               	movlw	-10
  5957  01217A  50E3               	movf	plusw1,w,c
  5958  01217C  6EE6               	movwf	postinc1,c
  5959  01217E  ECD7  F0E4         	call	_get_raw_result	;wreg free
  5960  012182  0060  F007  FFE6   	movff	btemp,postinc1
  5961  012188  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5962  01218E  0EB8               	movlw	low STR_40
  5963  012190  6EE6               	movwf	postinc1,c
  5964  012192  0EFD               	movlw	high STR_40
  5965  012194  6EE6               	movwf	postinc1,c
  5966  012196  0E00               	movlw	0
  5967  012198  6EE6               	movwf	postinc1,c
  5968  01219A  0E01               	movlw	1
  5969  01219C  6EE6               	movwf	postinc1,c
  5970  01219E  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  5971  0121A2  0060  F007  FFE6   	movff	btemp,postinc1
  5972  0121A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5973  0121AE  0E0C               	movlw	12
  5974  0121B0  6EE6               	movwf	postinc1,c
  5975  0121B2  EC2E  F0D2         	call	_sprintf	;wreg free
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;main.c: 398:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  5979                           ;stkvar	_inp_index @ sp[(-17)+11]
  5980  0121B6  0EFA               	movlw	-6
  5981  0121B8  50E3               	movf	plusw1,w,c
  5982  0121BA  6E0B               	movwf	(btemp+10)^0,c
  5983  0121BC  6A0C               	clrf	(btemp+11)^0,c
  5984  0121BE  0E02               	movlw	2
  5985  0121C0  260B               	addwf	(btemp+10)^0,f,c
  5986  0121C2  0E00               	movlw	0
  5987  0121C4  220C               	addwfc	(btemp+11)^0,f,c
  5988  0121C6  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5989  0121CC  0060  F033  FFE6   	movff	btemp+11,postinc1
  5990                           
  5991                           ;stkvar	_k @ sp[(-19)+12]
  5992  0121D2  0EF9               	movlw	-7
  5993  0121D4  50E3               	movf	plusw1,w,c
  5994  0121D6  0D04               	mullw	4
  5995  0121D8  0EFF               	movlw	low _C
  5996  0121DA  24F3               	addwf	243,w,c
  5997  0121DC  6ED9               	movwf	fsr2l,c
  5998  0121DE  0E06               	movlw	high _C
  5999  0121E0  20F4               	addwfc	prodh,w,c
  6000  0121E2  6EDA               	movwf	fsr2h,c
  6001  0121E4  006F FF7B FFE6     	movff	postinc2,postinc1
  6002  0121EA  006F FF7B FFE6     	movff	postinc2,postinc1
  6003  0121F0  006F FF7B FFE6     	movff	postinc2,postinc1
  6004  0121F6  006F FF7B FFE6     	movff	postinc2,postinc1
  6005                           
  6006                           ;stkvar	_k @ sp[(-23)+12]
  6007  0121FC  0EF5               	movlw	-11
  6008  0121FE  50E3               	movf	plusw1,w,c
  6009  012200  6EE6               	movwf	postinc1,c
  6010  012202  ECD7  F0E4         	call	_get_raw_result	;wreg free
  6011  012206  0060  F007  FFE6   	movff	btemp,postinc1
  6012  01220C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6013  012212  0EB8               	movlw	low STR_40
  6014  012214  6EE6               	movwf	postinc1,c
  6015  012216  0EFD               	movlw	high STR_40
  6016  012218  6EE6               	movwf	postinc1,c
  6017  01221A  0E00               	movlw	0
  6018  01221C  6EE6               	movwf	postinc1,c
  6019  01221E  0E02               	movlw	2
  6020  012220  6EE6               	movwf	postinc1,c
  6021  012222  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  6022  012226  0060  F007  FFE6   	movff	btemp,postinc1
  6023  01222C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6024  012232  0E0C               	movlw	12
  6025  012234  6EE6               	movwf	postinc1,c
  6026  012236  EC2E  F0D2         	call	_sprintf	;wreg free
  6027                           
  6028                           ;main.c: 399:      break;
  6029  01223A  D016               	goto	l13985
  6030  01223C                     l13983:
  6031  01223C  0101               	movlb	1	; () banked
  6032  01223E  51C7               	movf	_H& (0+255),w,b
  6033  012240  6E0B               	movwf	(btemp+10)^0,c
  6034  012242  6A0C               	clrf	(btemp+11)^0,c
  6035                           
  6036                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6037                           ; Switch size 1, requested type "simple"
  6038                           ; Number of cases is 1, Range of values is 0 to 0
  6039                           ; switch strategies available:
  6040                           ; Name         Instructions Cycles
  6041                           ; simple_byte            4     3 (average)
  6042                           ;	Chosen strategy is simple_byte
  6043  012244  500C               	movf	(btemp+11)^0,w,c
  6044  012246  0A00               	xorlw	0	; case 0
  6045  012248  A4D8               	btfss	status,2,c
  6046  01224A  D00E               	goto	l13985
  6047                           
  6048                           ; BSR set to: 1
  6049                           ; Switch size 1, requested type "simple"
  6050                           ; Number of cases is 4, Range of values is 0 to 3
  6051                           ; switch strategies available:
  6052                           ; Name         Instructions Cycles
  6053                           ; simple_byte           13     7 (average)
  6054                           ;	Chosen strategy is simple_byte
  6055  01224C  500B               	movf	(btemp+10)^0,w,c
  6056  01224E  0A00               	xorlw	0	; case 0
  6057  012250  B4D8               	btfsc	status,2,c
  6058  012252  D4D1               	goto	l1373
  6059  012254  0A01               	xorlw	1	; case 1
  6060  012256  B4D8               	btfsc	status,2,c
  6061  012258  EFF9  F08C         	goto	l1363
  6062  01225C  0A03               	xorlw	3	; case 2
  6063  01225E  B4D8               	btfsc	status,2,c
  6064  012260  D5DE               	goto	l1374
  6065  012262  0A01               	xorlw	1	; case 3
  6066  012264  B4D8               	btfsc	status,2,c
  6067  012266  D6F9               	goto	l13969
  6068  012268                     l13985:
  6069                           
  6070                           ;main.c: 403:     clear_hid_pflags(&H);
  6071  012268  0EC7               	movlw	low _H
  6072  01226A  6EE6               	movwf	postinc1,c
  6073  01226C  0E01               	movlw	high _H
  6074  01226E  6EE6               	movwf	postinc1,c
  6075  012270  ECA1  F0DC         	call	_clear_hid_pflags	;wreg free
  6076                           
  6077                           ;main.c: 405:    StartTimer(TMR_DISPLAY, 250);
  6078  012274  0EFA               	movlw	250
  6079  012276  6EE6               	movwf	postinc1,c
  6080  012278  0E00               	movlw	0
  6081  01227A  6EE6               	movwf	postinc1,c
  6082  01227C  0E0A               	movlw	10
  6083  01227E  6EE6               	movwf	postinc1,c
  6084  012280  EC6E  F0E0         	call	_StartTimer	;wreg free
  6085                           
  6086                           ;main.c: 406:    V.enter = check_enter_button(&H);
  6087  012284  0EC7               	movlw	low _H
  6088  012286  6EE6               	movwf	postinc1,c
  6089  012288  0E01               	movlw	high _H
  6090  01228A  6EE6               	movwf	postinc1,c
  6091  01228C  ECC8  F0DB         	call	_check_enter_button	;wreg free
  6092  012290  5001               	movf	btemp^0,w,c
  6093  012292  0101               	movlb	1	; () banked
  6094  012294  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  6095                           
  6096                           ; BSR set to: 1
  6097                           ;main.c: 407:    if (V.enter && (H.hid_display != HID_AUX)) {
  6098  012296  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6099  012298  B4D8               	btfsc	status,2,c
  6100  01229A  D011               	goto	l13999
  6101                           
  6102                           ; BSR set to: 1
  6103  01229C  0E03               	movlw	3
  6104  01229E  19C7               	xorwf	_H& (0+255),w,b
  6105  0122A0  B4D8               	btfsc	status,2,c
  6106  0122A2  D00D               	goto	l13999
  6107                           
  6108                           ; BSR set to: 1
  6109                           ;main.c: 408:     V.enter = 0;
  6110  0122A4  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6111                           
  6112                           ; BSR set to: 1
  6113                           ;main.c: 409:     V.screen = ~V.screen;
  6114  0122A6  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6115  0122A8  D002               	goto	u13390
  6116  0122AA  0E01               	movlw	1
  6117  0122AC  D001               	goto	u13396
  6118  0122AE                     u13390:
  6119  0122AE  0E00               	movlw	0
  6120  0122B0                     u13396:
  6121  0122B0  0AFF               	xorlw	255
  6122  0122B2  6E0C               	movwf	(btemp+11)^0,c
  6123  0122B4  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  6124  0122B6  180C               	xorwf	(btemp+11)^0,w,c
  6125  0122B8  0BFE               	andlw	-2
  6126  0122BA  180C               	xorwf	(btemp+11)^0,w,c
  6127  0122BC  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  6128  0122BE                     l13999:
  6129                           
  6130                           ; BSR set to: 1
  6131                           ;main.c: 411:    set_vterm(V.screen);
  6132  0122BE  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6133  0122C0  D002               	goto	u13400
  6134  0122C2  0E01               	movlw	1
  6135  0122C4  D001               	goto	u13406
  6136  0122C6                     u13400:
  6137  0122C6  0E00               	movlw	0
  6138  0122C8                     u13406:
  6139  0122C8  6EE6               	movwf	postinc1,c
  6140  0122CA  ECB9  F0E4         	call	_set_vterm	;wreg free
  6141                           
  6142                           ;main.c: 412:    update_lcd(V.screen);
  6143  0122CE  0101               	movlb	1	; () banked
  6144  0122D0  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6145  0122D2  D002               	goto	u13410
  6146  0122D4  0E01               	movlw	1
  6147  0122D6  D001               	goto	u13416
  6148  0122D8                     u13410:
  6149  0122D8  0E00               	movlw	0
  6150  0122DA                     u13416:
  6151  0122DA  6EE6               	movwf	postinc1,c
  6152  0122DC  ECA6  F0D1         	call	_update_lcd	;wreg free
  6153                           
  6154                           ;main.c: 414:    wait_lcd_done();
  6155  0122E0  EC48  F0E4         	call	_wait_lcd_done	;wreg free
  6156                           
  6157                           ; BSR set to: 0
  6158                           ;main.c: 415:    set_dac_a(3.333);
  6159  0122E4  0EDF               	movlw	223
  6160  0122E6  6EE6               	movwf	postinc1,c
  6161  0122E8  0E4F               	movlw	79
  6162  0122EA  6EE6               	movwf	postinc1,c
  6163  0122EC  0E55               	movlw	85
  6164  0122EE  6EE6               	movwf	postinc1,c
  6165  0122F0  0E40               	movlw	64
  6166  0122F2  6EE6               	movwf	postinc1,c
  6167  0122F4  ECAC  F0E1         	call	_set_dac_a	;wreg free
  6168                           
  6169                           ;main.c: 416:    set_dac_b(6.666);
  6170  0122F8  0EDF               	movlw	223
  6171  0122FA  6EE6               	movwf	postinc1,c
  6172  0122FC  0E4F               	movlw	79
  6173  0122FE  6EE6               	movwf	postinc1,c
  6174  012300  0ED5               	movlw	213
  6175  012302  6EE6               	movwf	postinc1,c
  6176  012304  0E40               	movlw	64
  6177  012306  6EE6               	movwf	postinc1,c
  6178  012308  EC92  F0E1         	call	_set_dac_b	;wreg free
  6179                           
  6180                           ;main.c: 417:    set_dac();
  6181  01230C  ECD5  F0D6         	call	_set_dac	;wreg free
  6182  012310                     l14011:
  6183                           
  6184                           ;main.c: 423:   check_help(V.flipper);
  6185  012310  0101               	movlb	1	; () banked
  6186  012312  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  6187  012314  6EE6               	movwf	postinc1,c
  6188  012316  EC34  F0C4         	call	_check_help	;wreg free
  6189                           
  6190                           ;main.c: 425:   if (V.enter) {
  6191  01231A  0101               	movlb	1	; () banked
  6192  01231C  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6193  01231E  B4D8               	btfsc	status,2,c
  6194  012320  D062               	goto	l1379
  6195                           
  6196                           ; BSR set to: 1
  6197                           ;main.c: 426:    V.enter = 0;
  6198  012322  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6199                           
  6200                           ;main.c: 427:    V.calib = 0;
  6201  012324  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  6202                           
  6203                           ; BSR set to: 1
  6204                           ;main.c: 428:    inp_index += 3;
  6205                           ;stkvar	_inp_index @ sp[(-17)+11]
  6206  012326  0EFA               	movlw	-6
  6207  012328  006F FF8C  F001    	movff	plusw1,btemp
  6208  01232E  0E03               	movlw	3
  6209  012330  2601               	addwf	btemp^0,f,c
  6210  012332  0EFA               	movlw	-6
  6211  012334  0060  F007  FFE3   	movff	btemp,plusw1
  6212                           
  6213                           ;main.c: 429:    if (inp_index > 9)
  6214                           ;stkvar	_inp_index @ sp[(-17)+11]
  6215  01233A  0EFA               	movlw	-6
  6216  01233C  006F FF8C  F001    	movff	plusw1,btemp
  6217  012342  0E09               	movlw	9
  6218  012344  6401               	cpfsgt	btemp^0,c
  6219  012346  D03A               	goto	l14039
  6220                           
  6221                           ; BSR set to: 1
  6222                           ;main.c: 430:     inp_index = 0;
  6223                           ;stkvar	_inp_index @ sp[(-17)+11]
  6224  012348  0EFA               	movlw	-6
  6225  01234A  6AE3               	clrf	plusw1,c
  6226  01234C  D037               	goto	l14039
  6227  01234E                     l14021:
  6228                           
  6229                           ; BSR set to: 1
  6230                           ;main.c: 433:     i = C_BATT;
  6231                           ;stkvar	_i @ sp[(-17)+14]
  6232  01234E  0EFD               	movlw	-3
  6233  012350  6AE3               	clrf	plusw1,c
  6234                           
  6235                           ; BSR set to: 1
  6236                           ;main.c: 434:     j = C_PV;
  6237                           ;stkvar	_j @ sp[(-17)+13]
  6238  012352  0EFC               	movlw	-4
  6239  012354  6AE3               	clrf	plusw1,c
  6240  012356  2AE3               	incf	plusw1,f,c
  6241                           
  6242                           ; BSR set to: 1
  6243                           ;main.c: 435:     k = V_CC;
  6244                           ;stkvar	_k @ sp[(-17)+12]
  6245  012358  0EFB               	movlw	-5
  6246  01235A  6AE3               	clrf	plusw1,c
  6247  01235C  82E3               	bsf	plusw1,1,c
  6248                           
  6249                           ;main.c: 436:     break;
  6250  01235E  D043               	goto	l1379
  6251  012360                     l14027:
  6252                           
  6253                           ; BSR set to: 1
  6254                           ;main.c: 438:     i = V_BAT;
  6255                           ;stkvar	_i @ sp[(-17)+14]
  6256  012360  0EFD               	movlw	-3
  6257  012362  6AE3               	clrf	plusw1,c
  6258  012364  84E3               	bsf	plusw1,2,c
  6259                           
  6260                           ;main.c: 439:     j = V_PV;
  6261                           ;stkvar	_j @ sp[(-17)+13]
  6262  012366  0EFC               	movlw	-4
  6263  012368  6AE3               	clrf	plusw1,c
  6264  01236A  80E3               	bsf	plusw1,0,c
  6265  01236C  84E3               	bsf	plusw1,2,c	;indir
  6266                           
  6267                           ;main.c: 440:     k = V_CBUS;
  6268                           ;stkvar	_k @ sp[(-17)+12]
  6269  01236E  0EFB               	movlw	-5
  6270  012370  6AE3               	clrf	plusw1,c
  6271  012372  82E3               	bsf	plusw1,1,c
  6272  012374  84E3               	bsf	plusw1,2,c	;indir
  6273                           
  6274                           ;main.c: 441:     break;
  6275  012376  D037               	goto	l1379
  6276  012378                     l14029:
  6277                           
  6278                           ; BSR set to: 1
  6279                           ;main.c: 443:     i = V_BBAT;
  6280                           ;stkvar	_i @ sp[(-17)+14]
  6281  012378  0EFD               	movlw	-3
  6282  01237A  6AE3               	clrf	plusw1,c
  6283  01237C  82E3               	bsf	plusw1,1,c
  6284  01237E  86E3               	bsf	plusw1,3,c	;indir
  6285                           
  6286                           ; BSR set to: 1
  6287                           ;main.c: 444:     j = V_TEMP;
  6288  012380  0E0B               	movlw	11
  6289  012382  6E0C               	movwf	(btemp+11)^0,c
  6290                           
  6291                           ;stkvar	_j @ sp[(-17)+13]
  6292  012384  0EFC               	movlw	-4
  6293  012386  0060  F033  FFE3   	movff	btemp+11,plusw1
  6294                           
  6295                           ; BSR set to: 1
  6296                           ;main.c: 445:     k = V_INVERTER;
  6297                           ;stkvar	_k @ sp[(-17)+12]
  6298  01238C  0EFB               	movlw	-5
  6299  01238E  6AE3               	clrf	plusw1,c
  6300  012390  84E3               	bsf	plusw1,2,c
  6301  012392  86E3               	bsf	plusw1,3,c	;indir
  6302                           
  6303                           ;main.c: 446:     break;
  6304  012394  D028               	goto	l1379
  6305  012396                     l14035:
  6306                           
  6307                           ; BSR set to: 1
  6308                           ;main.c: 448:     i = V_LIGHT_SENSOR;
  6309  012396  0E0D               	movlw	13
  6310  012398  6E0C               	movwf	(btemp+11)^0,c
  6311                           
  6312                           ;stkvar	_i @ sp[(-17)+14]
  6313  01239A  0EFD               	movlw	-3
  6314  01239C  0060  F033  FFE3   	movff	btemp+11,plusw1
  6315                           
  6316                           ;main.c: 449:     j = V_LIGHT_SENSOR;
  6317  0123A2  0E0D               	movlw	13
  6318  0123A4  6E0C               	movwf	(btemp+11)^0,c
  6319                           
  6320                           ;stkvar	_j @ sp[(-17)+13]
  6321  0123A6  0EFC               	movlw	-4
  6322  0123A8  0060  F033  FFE3   	movff	btemp+11,plusw1
  6323                           
  6324                           ;main.c: 450:     k = V_LIGHT_SENSOR;
  6325  0123AE  0E0D               	movlw	13
  6326  0123B0  6E0C               	movwf	(btemp+11)^0,c
  6327                           
  6328                           ;stkvar	_k @ sp[(-17)+12]
  6329  0123B2  0EFB               	movlw	-5
  6330  0123B4  0060  F033  FFE3   	movff	btemp+11,plusw1
  6331                           
  6332                           ;main.c: 451:     break;
  6333  0123BA  D015               	goto	l1379
  6334  0123BC                     l14039:
  6335                           
  6336                           ; BSR set to: 1
  6337                           ;stkvar	_inp_index @ sp[(-17)+11]
  6338  0123BC  0EFA               	movlw	-6
  6339  0123BE  50E3               	movf	plusw1,w,c
  6340  0123C0  6E0B               	movwf	(btemp+10)^0,c
  6341  0123C2  6A0C               	clrf	(btemp+11)^0,c
  6342                           
  6343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6344                           ; Switch size 1, requested type "simple"
  6345                           ; Number of cases is 1, Range of values is 0 to 0
  6346                           ; switch strategies available:
  6347                           ; Name         Instructions Cycles
  6348                           ; simple_byte            4     3 (average)
  6349                           ;	Chosen strategy is simple_byte
  6350  0123C4  500C               	movf	(btemp+11)^0,w,c
  6351  0123C6  0A00               	xorlw	0	; case 0
  6352  0123C8  A4D8               	btfss	status,2,c
  6353  0123CA  D00D               	goto	l1379
  6354                           
  6355                           ; BSR set to: 1
  6356                           ; Switch size 1, requested type "simple"
  6357                           ; Number of cases is 4, Range of values is 0 to 9
  6358                           ; switch strategies available:
  6359                           ; Name         Instructions Cycles
  6360                           ; simple_byte           13     7 (average)
  6361                           ;	Chosen strategy is simple_byte
  6362  0123CC  500B               	movf	(btemp+10)^0,w,c
  6363  0123CE  0A00               	xorlw	0	; case 0
  6364  0123D0  B4D8               	btfsc	status,2,c
  6365  0123D2  D7BD               	goto	l14021
  6366  0123D4  0A03               	xorlw	3	; case 3
  6367  0123D6  B4D8               	btfsc	status,2,c
  6368  0123D8  D7C3               	goto	l14027
  6369  0123DA  0A05               	xorlw	5	; case 6
  6370  0123DC  B4D8               	btfsc	status,2,c
  6371  0123DE  D7CC               	goto	l14029
  6372  0123E0  0A0F               	xorlw	15	; case 9
  6373  0123E2  B4D8               	btfsc	status,2,c
  6374  0123E4  D7D8               	goto	l14035
  6375  0123E6                     l1379:
  6376                           
  6377                           ; BSR set to: 1
  6378                           ;main.c: 460:   if (V.set_sequ) {
  6379  0123E6  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  6380  0123E8  EFAB  F08C         	goto	l13913
  6381                           
  6382                           ; BSR set to: 1
  6383                           ;main.c: 461:    if (TimerDone(TMR_INFO)) {
  6384  0123EC  0E07               	movlw	7
  6385  0123EE  6EE6               	movwf	postinc1,c
  6386  0123F0  ECC3  F0E2         	call	_TimerDone	;wreg free
  6387  0123F4  5001               	movf	btemp^0,w,c
  6388  0123F6  B4D8               	btfsc	status,2,c
  6389  0123F8  D00C               	goto	l14049
  6390                           
  6391                           ;main.c: 462:     V.set_sequ = 0;
  6392  0123FA  0101               	movlb	1	; () banked
  6393  0123FC  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  6394                           
  6395                           ; BSR set to: 1
  6396                           ;main.c: 463:     set_vterm(0);
  6397  0123FE  0E00               	movlw	0
  6398  012400  6EE6               	movwf	postinc1,c
  6399  012402  ECB9  F0E4         	call	_set_vterm	;wreg free
  6400                           
  6401                           ;main.c: 464:     update_lcd(0);
  6402  012406  0E00               	movlw	0
  6403  012408  6EE6               	movwf	postinc1,c
  6404  01240A  ECA6  F0D1         	call	_update_lcd	;wreg free
  6405                           
  6406                           ;main.c: 465:    } else {
  6407  01240E  EFAB  F08C         	goto	l13913
  6408  012412                     l14049:
  6409                           
  6410                           ;main.c: 466:     set_vterm(2);
  6411  012412  0E02               	movlw	2
  6412  012414  6EE6               	movwf	postinc1,c
  6413  012416  ECB9  F0E4         	call	_set_vterm	;wreg free
  6414                           
  6415                           ;main.c: 467:     update_lcd(2);
  6416  01241A  0E02               	movlw	2
  6417  01241C  6EE6               	movwf	postinc1,c
  6418  01241E  ECA6  F0D1         	call	_update_lcd	;wreg free
  6419  012422  EFAB  F08C         	goto	l13913
  6420  012426                     __end_of_main:
  6421                           	opt callstack 0
  6422                           
  6423 ;; *************** function _static_soc *****************
  6424 ;; Defined at:
  6425 ;;		line 117 in file "mbmc.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;		None
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;		None
  6430 ;; Return value:  Size  Location     Type
  6431 ;;                  1  [STACK] void 
  6432 ;; Registers used:
  6433 ;;		wreg, fsr2l, fsr2h
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6443 ;;Total ram usage:        0 bytes
  6444 ;; Hardware stack levels used:    1
  6445 ;; Hardware stack levels required when called:   15
  6446 ;; This function calls:
  6447 ;;		Nothing
  6448 ;; This function is called by:
  6449 ;;		_main
  6450 ;; This function uses a reentrant model
  6451 ;;
  6452                           
  6453                           	psect	text1
  6454  01BB96                     __ptext1:
  6455                           	opt callstack 0
  6456  01BB96                     _static_soc:
  6457                           	opt callstack 15
  6458                           
  6459                           ;mbmc.c: 119:  C.runtime = 120;
  6460                           
  6461                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6462                           ;incstack = 0
  6463  01BB96  0E78               	movlw	120
  6464  01BB98  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
  6465  01BB9E  0E00               	movlw	0
  6466  01BBA0  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
  6467                           
  6468                           ;mbmc.c: 120:  C.soc = 100;
  6469  01BBA6  0E64               	movlw	100
  6470  01BBA8  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
  6471  01BBAE  0E00               	movlw	0
  6472  01BBB0  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
  6473                           
  6474                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  6475  01BBB6  EE21  F38B         	lfsr	2,_C+140	;volatile
  6476  01BBBA  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  6477  01BBC0  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  6478  01BBC6  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  6479  01BBCC  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  6480                           
  6481                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  6482  01BBD2  EE21  F38F         	lfsr	2,_C+144	;volatile
  6483  01BBD6  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  6484  01BBDC  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  6485  01BBE2  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  6486  01BBE8  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  6487                           
  6488                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6489  01BBEE  0012               	return		;funcret
  6490  01BBF0                     __end_of_static_soc:
  6491                           	opt callstack 0
  6492                           
  6493 ;; *************** function _start_switch_handler *****************
  6494 ;; Defined at:
  6495 ;;		line 125 in file "dio.c"
  6496 ;; Parameters:    Size  Location     Type
  6497 ;;		None
  6498 ;; Auto vars:     Size  Location     Type
  6499 ;;		None
  6500 ;; Return value:  Size  Location     Type
  6501 ;;                  1  [STACK] void 
  6502 ;; Registers used:
  6503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6504 ;; Tracked objects:
  6505 ;;		On entry : 1/0
  6506 ;;		On exit  : 3F/39
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6513 ;;Total ram usage:        0 bytes
  6514 ;; Hardware stack levels used:    1
  6515 ;; Hardware stack levels required when called:   16
  6516 ;; This function calls:
  6517 ;;		_INT1_SetInterruptHandler
  6518 ;; This function is called by:
  6519 ;;		_main
  6520 ;; This function uses a reentrant model
  6521 ;;
  6522                           
  6523                           	psect	text2
  6524  01C8F6                     __ptext2:
  6525                           	opt callstack 0
  6526  01C8F6                     _start_switch_handler:
  6527                           	opt callstack 14
  6528                           
  6529                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  6530                           
  6531                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6532                           ;incstack = 0
  6533  01C8F6  0139               	movlb	57	; () banked
  6534  01C8F8  9195               	bcf	149,0,b	;volatile
  6535                           
  6536                           ; BSR set to: 57
  6537                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  6538  01C8FA  0EFC               	movlw	low _switch_handler
  6539  01C8FC  6EE6               	movwf	postinc1,c
  6540  01C8FE  0E99               	movlw	high _switch_handler
  6541  01C900  6EE6               	movwf	postinc1,c
  6542  01C902  0E01               	movlw	low (_switch_handler shr (0+16))
  6543  01C904  6EE6               	movwf	postinc1,c
  6544  01C906  EC4F  F0E3         	call	_INT1_SetInterruptHandler	;wreg free
  6545                           
  6546                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  6547  01C90A  0E02               	movlw	2
  6548  01C90C  0102               	movlb	2	; () banked
  6549  01C90E  6F77               	movwf	(_S+35)& (0+255),b	;volatile
  6550                           
  6551                           ; BSR set to: 2
  6552                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  6553  01C910  0139               	movlb	57	; () banked
  6554  01C912  8195               	bsf	149,0,b	;volatile
  6555                           
  6556                           ; BSR set to: 57
  6557                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6558  01C914  0012               	return		;funcret
  6559  01C916                     __end_of_start_switch_handler:
  6560                           	opt callstack 0
  6561                           
  6562 ;; *************** function _srand *****************
  6563 ;; Defined at:
  6564 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;  s               2  [STACK] unsigned int 
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;		None
  6569 ;; Return value:  Size  Location     Type
  6570 ;;                  1  [STACK] void 
  6571 ;; Registers used:
  6572 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6573 ;; Tracked objects:
  6574 ;;		On entry : 0/0
  6575 ;;		On exit  : 3F/1
  6576 ;;		Unchanged: 0/0
  6577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6582 ;;Total ram usage:        0 bytes
  6583 ;; Hardware stack levels used:    1
  6584 ;; Hardware stack levels required when called:   15
  6585 ;; This function calls:
  6586 ;;		Nothing
  6587 ;; This function is called by:
  6588 ;;		_main
  6589 ;; This function uses a reentrant model
  6590 ;;
  6591                           
  6592                           	psect	text3
  6593  01C2F0                     __ptext3:
  6594                           	opt callstack 0
  6595  01C2F0                     _srand:
  6596                           	opt callstack 15
  6597                           
  6598                           ;stkvar	_s @ sp[(0)+-2]
  6599                           
  6600                           ; BSR set to: 57
  6601                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6602                           ;incstack = 0
  6603  01C2F0  0EFE               	movlw	-2
  6604  01C2F2  50E3               	movf	plusw1,w,c
  6605  01C2F4  0FFF               	addlw	255
  6606  01C2F6  6E0B               	movwf	(btemp+10)^0,c
  6607  01C2F8  0EFF               	movlw	-1
  6608  01C2FA  006F FF8C  F00C    	movff	plusw1,btemp+11
  6609  01C300  0EFF               	movlw	255
  6610  01C302  220C               	addwfc	(btemp+11)^0,f,c
  6611  01C304  0060  F02C  F1F6   	movff	btemp+10,_seed
  6612  01C30A  0060  F030  F1F7   	movff	btemp+11,_seed+1
  6613  01C310  0101               	movlb	1	; () banked
  6614  01C312  6BF8               	clrf	(_seed+2)& (0+255),b
  6615  01C314  6BF9               	clrf	(_seed+3)& (0+255),b
  6616  01C316  6BFA               	clrf	(_seed+4)& (0+255),b
  6617  01C318  6BFB               	clrf	(_seed+5)& (0+255),b
  6618  01C31A  6BFC               	clrf	(_seed+6)& (0+255),b
  6619  01C31C  6BFD               	clrf	(_seed+7)& (0+255),b
  6620                           
  6621                           ; BSR set to: 1
  6622                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6623  01C31E  52E5               	movf	postdec1,f,c
  6624  01C320  52E5               	movf	postdec1,f,c
  6625  01C322  0012               	return		;funcret
  6626  01C324                     __end_of_srand:
  6627                           	opt callstack 0
  6628                           
  6629 ;; *************** function _set_dac_b *****************
  6630 ;; Defined at:
  6631 ;;		line 296 in file "daq.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;  voltage         4  [STACK] const float 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;		None
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  2  [STACK] unsigned short 
  6638 ;; Registers used:
  6639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6649 ;;Total ram usage:        0 bytes
  6650 ;; Hardware stack levels used:    1
  6651 ;; Hardware stack levels required when called:   17
  6652 ;; This function calls:
  6653 ;;		_convert_dac_raw
  6654 ;; This function is called by:
  6655 ;;		_main
  6656 ;; This function uses a reentrant model
  6657 ;;
  6658                           
  6659                           	psect	text4
  6660  01C324                     __ptext4:
  6661                           	opt callstack 0
  6662  01C324                     _set_dac_b:
  6663                           	opt callstack 13
  6664                           
  6665                           ;daq.c: 296: uint16_t set_dac_b(const float voltage);daq.c: 297: {;daq.c: 298:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  6666                           ;stkvar	_voltage @ sp[(0)+-4]
  6667                           
  6668                           ; BSR set to: 1
  6669                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6670                           ;incstack = 0
  6671  01C324  0EFC               	movlw	-4
  6672  01C326  006F FF8F FFE6     	movff	plusw1,postinc1
  6673  01C32C  006F FF8F FFE6     	movff	plusw1,postinc1
  6674  01C332  006F FF8F FFE6     	movff	plusw1,postinc1
  6675  01C338  006F FF8F FFE6     	movff	plusw1,postinc1
  6676  01C33E  EC04  F0D0         	call	_convert_dac_raw	;wreg free
  6677  01C342  0060  F004  F0D1   	movff	btemp,_R+34	;volatile
  6678  01C348  0060  F008  F0D2   	movff	btemp+1,_R+35	;volatile
  6679                           
  6680                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6681                           
  6682                           ;daq.c: 299:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  6683  01C34E  52E5               	movf	postdec1,f,c
  6684  01C350  52E5               	movf	postdec1,f,c
  6685  01C352  52E5               	movf	postdec1,f,c
  6686  01C354  52E5               	movf	postdec1,f,c
  6687  01C356  0012               	return		;funcret
  6688  01C358                     __end_of_set_dac_b:
  6689                           	opt callstack 0
  6690                           
  6691 ;; *************** function _set_dac_a *****************
  6692 ;; Defined at:
  6693 ;;		line 287 in file "daq.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;  voltage         4  [STACK] const float 
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;		None
  6698 ;; Return value:  Size  Location     Type
  6699 ;;                  2  [STACK] unsigned short 
  6700 ;; Registers used:
  6701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6702 ;; Tracked objects:
  6703 ;;		On entry : 3F/0
  6704 ;;		On exit  : 0/0
  6705 ;;		Unchanged: 0/0
  6706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6711 ;;Total ram usage:        0 bytes
  6712 ;; Hardware stack levels used:    1
  6713 ;; Hardware stack levels required when called:   17
  6714 ;; This function calls:
  6715 ;;		_convert_dac_raw
  6716 ;; This function is called by:
  6717 ;;		_main
  6718 ;; This function uses a reentrant model
  6719 ;;
  6720                           
  6721                           	psect	text5
  6722  01C358                     __ptext5:
  6723                           	opt callstack 0
  6724  01C358                     _set_dac_a:
  6725                           	opt callstack 13
  6726                           
  6727                           ;daq.c: 287: uint16_t set_dac_a(const float voltage);daq.c: 288: {;daq.c: 289:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  6728                           ;stkvar	_voltage @ sp[(0)+-4]
  6729                           
  6730                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6731                           ;incstack = 0
  6732  01C358  0EFC               	movlw	-4
  6733  01C35A  006F FF8F FFE6     	movff	plusw1,postinc1
  6734  01C360  006F FF8F FFE6     	movff	plusw1,postinc1
  6735  01C366  006F FF8F FFE6     	movff	plusw1,postinc1
  6736  01C36C  006F FF8F FFE6     	movff	plusw1,postinc1
  6737  01C372  EC04  F0D0         	call	_convert_dac_raw	;wreg free
  6738  01C376  0060  F004  F0CF   	movff	btemp,_R+32	;volatile
  6739  01C37C  0060  F008  F0D0   	movff	btemp+1,_R+33	;volatile
  6740                           
  6741                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6742                           
  6743                           ;daq.c: 290:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  6744  01C382  52E5               	movf	postdec1,f,c
  6745  01C384  52E5               	movf	postdec1,f,c
  6746  01C386  52E5               	movf	postdec1,f,c
  6747  01C388  52E5               	movf	postdec1,f,c
  6748  01C38A  0012               	return		;funcret
  6749  01C38C                     __end_of_set_dac_a:
  6750                           	opt callstack 0
  6751                           
  6752 ;; *************** function _convert_dac_raw *****************
  6753 ;; Defined at:
  6754 ;;		line 269 in file "daq.c"
  6755 ;; Parameters:    Size  Location     Type
  6756 ;;  voltage         4  [STACK] float 
  6757 ;; Auto vars:     Size  Location     Type
  6758 ;;		None
  6759 ;; Return value:  Size  Location     Type
  6760 ;;                  2  [STACK] unsigned short 
  6761 ;; Registers used:
  6762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6763 ;; Tracked objects:
  6764 ;;		On entry : 0/0
  6765 ;;		On exit  : 0/0
  6766 ;;		Unchanged: 0/0
  6767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6772 ;;Total ram usage:        0 bytes
  6773 ;; Hardware stack levels used:    1
  6774 ;; Hardware stack levels required when called:   16
  6775 ;; This function calls:
  6776 ;;		___fldiv
  6777 ;;		___flge
  6778 ;;		___fltol
  6779 ;; This function is called by:
  6780 ;;		_set_dac_a
  6781 ;;		_set_dac_b
  6782 ;; This function uses a reentrant model
  6783 ;;
  6784                           
  6785                           	psect	text6
  6786  01A008                     __ptext6:
  6787                           	opt callstack 0
  6788  01A008                     _convert_dac_raw:
  6789                           	opt callstack 13
  6790                           
  6791                           ;daq.c: 269: static uint16_t convert_dac_raw(float voltage);daq.c: 270: {;daq.c: 274:  i
      +                          f (voltage < 0.001)
  6792                           
  6793                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6794                           ;incstack = 0
  6795  01A008  0E6F               	movlw	111
  6796  01A00A  6EE6               	movwf	postinc1,c
  6797  01A00C  0E12               	movlw	18
  6798  01A00E  6EE6               	movwf	postinc1,c
  6799  01A010  0E83               	movlw	131
  6800  01A012  6EE6               	movwf	postinc1,c
  6801  01A014  0E3A               	movlw	58
  6802  01A016  6EE6               	movwf	postinc1,c
  6803                           
  6804                           ;stkvar	_voltage @ sp[(-4)+-4]
  6805  01A018  0EF8               	movlw	-8
  6806  01A01A  006F FF8F FFE6     	movff	plusw1,postinc1
  6807  01A020  006F FF8F FFE6     	movff	plusw1,postinc1
  6808  01A026  006F FF8F FFE6     	movff	plusw1,postinc1
  6809  01A02C  006F FF8F FFE6     	movff	plusw1,postinc1
  6810  01A032  ECF4  F0CA         	call	___flge	;wreg free
  6811  01A036  B001               	btfsc	btemp& (0+255),0,c
  6812  01A038  D018               	goto	l10967
  6813                           
  6814                           ;daq.c: 275:   voltage = 0.001;
  6815  01A03A  0E6F               	movlw	111
  6816  01A03C  6E09               	movwf	(btemp+8)^0,c
  6817  01A03E  0E12               	movlw	18
  6818  01A040  6E0A               	movwf	(btemp+9)^0,c
  6819  01A042  0E83               	movlw	131
  6820  01A044  6E0B               	movwf	(btemp+10)^0,c
  6821  01A046  0E3A               	movlw	58
  6822  01A048  6E0C               	movwf	(btemp+11)^0,c
  6823                           
  6824                           ;stkvar	_voltage @ sp[(0)+-4]
  6825  01A04A  0EFC               	movlw	-4
  6826  01A04C  0060  F027  FFE3   	movff	btemp+8,plusw1
  6827  01A052  0EFD               	movlw	-3
  6828  01A054  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6829  01A05A  0EFE               	movlw	-2
  6830  01A05C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6831  01A062  0EFF               	movlw	-1
  6832  01A064  0060  F033  FFE3   	movff	btemp+11,plusw1
  6833  01A06A                     l10967:
  6834                           
  6835                           ;daq.c: 276:  if (voltage > 10.0)
  6836                           ;stkvar	_voltage @ sp[(0)+-4]
  6837  01A06A  0EFC               	movlw	-4
  6838  01A06C  006F FF8F FFE6     	movff	plusw1,postinc1
  6839  01A072  006F FF8F FFE6     	movff	plusw1,postinc1
  6840  01A078  006F FF8F FFE6     	movff	plusw1,postinc1
  6841  01A07E  006F FF8F FFE6     	movff	plusw1,postinc1
  6842  01A084  0E00               	movlw	0
  6843  01A086  6EE6               	movwf	postinc1,c
  6844  01A088  0E00               	movlw	0
  6845  01A08A  6EE6               	movwf	postinc1,c
  6846  01A08C  0E20               	movlw	32
  6847  01A08E  6EE6               	movwf	postinc1,c
  6848  01A090  0E41               	movlw	65
  6849  01A092  6EE6               	movwf	postinc1,c
  6850  01A094  ECF4  F0CA         	call	___flge	;wreg free
  6851  01A098  B001               	btfsc	btemp& (0+255),0,c
  6852  01A09A  D018               	goto	l10971
  6853                           
  6854                           ;daq.c: 277:   voltage = 10.0;
  6855  01A09C  0E00               	movlw	0
  6856  01A09E  6E09               	movwf	(btemp+8)^0,c
  6857  01A0A0  0E00               	movlw	0
  6858  01A0A2  6E0A               	movwf	(btemp+9)^0,c
  6859  01A0A4  0E20               	movlw	32
  6860  01A0A6  6E0B               	movwf	(btemp+10)^0,c
  6861  01A0A8  0E41               	movlw	65
  6862  01A0AA  6E0C               	movwf	(btemp+11)^0,c
  6863                           
  6864                           ;stkvar	_voltage @ sp[(0)+-4]
  6865  01A0AC  0EFC               	movlw	-4
  6866  01A0AE  0060  F027  FFE3   	movff	btemp+8,plusw1
  6867  01A0B4  0EFD               	movlw	-3
  6868  01A0B6  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6869  01A0BC  0EFE               	movlw	-2
  6870  01A0BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6871  01A0C4  0EFF               	movlw	-1
  6872  01A0C6  0060  F033  FFE3   	movff	btemp+11,plusw1
  6873  01A0CC                     l10971:
  6874                           
  6875                           ;daq.c: 281:  return(uint16_t) (voltage / 0.002442);
  6876  01A0CC  0EF6               	movlw	246
  6877  01A0CE  6EE6               	movwf	postinc1,c
  6878  01A0D0  0E09               	movlw	9
  6879  01A0D2  6EE6               	movwf	postinc1,c
  6880  01A0D4  0E20               	movlw	32
  6881  01A0D6  6EE6               	movwf	postinc1,c
  6882  01A0D8  0E3B               	movlw	59
  6883  01A0DA  6EE6               	movwf	postinc1,c
  6884                           
  6885                           ;stkvar	_voltage @ sp[(-4)+-4]
  6886  01A0DC  0EF8               	movlw	-8
  6887  01A0DE  006F FF8F FFE6     	movff	plusw1,postinc1
  6888  01A0E4  006F FF8F FFE6     	movff	plusw1,postinc1
  6889  01A0EA  006F FF8F FFE6     	movff	plusw1,postinc1
  6890  01A0F0  006F FF8F FFE6     	movff	plusw1,postinc1
  6891  01A0F6  EC13  F0A7         	call	___fldiv	;wreg free
  6892  01A0FA  0060  F007  FFE6   	movff	btemp,postinc1
  6893  01A100  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6894  01A106  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6895  01A10C  0060  F013  FFE6   	movff	btemp+3,postinc1
  6896  01A112  EC3B  F0CA         	call	___fltol	;wreg free
  6897                           
  6898                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  6899  01A116  52E5               	movf	postdec1,f,c
  6900  01A118  52E5               	movf	postdec1,f,c
  6901  01A11A  52E5               	movf	postdec1,f,c
  6902  01A11C  52E5               	movf	postdec1,f,c
  6903  01A11E  0012               	return		;funcret
  6904  01A120                     __end_of_convert_dac_raw:
  6905                           	opt callstack 0
  6906                           
  6907 ;; *************** function _set_dac *****************
  6908 ;; Defined at:
  6909 ;;		line 245 in file "daq.c"
  6910 ;; Parameters:    Size  Location     Type
  6911 ;;		None
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;		None
  6914 ;; Return value:  Size  Location     Type
  6915 ;;                  1  [STACK] void 
  6916 ;; Registers used:
  6917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  6918 ;; Tracked objects:
  6919 ;;		On entry : 0/0
  6920 ;;		On exit  : 0/0
  6921 ;;		Unchanged: 0/0
  6922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6927 ;;Total ram usage:        0 bytes
  6928 ;; Hardware stack levels used:    1
  6929 ;; Hardware stack levels required when called:   16
  6930 ;; This function calls:
  6931 ;;		_SPI1_Exchange8bit
  6932 ;;		_dac_spi_control
  6933 ;; This function is called by:
  6934 ;;		_main
  6935 ;; This function uses a reentrant model
  6936 ;;
  6937                           
  6938                           	psect	text7
  6939  01ADAA                     __ptext7:
  6940                           	opt callstack 0
  6941  01ADAA                     _set_dac:
  6942                           	opt callstack 14
  6943                           
  6944                           ;daq.c: 247:  while (!SPI1STATUSbits.TXBE);
  6945                           
  6946                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6947                           ;incstack = 0
  6948  01ADAA  013D               	movlb	61	; () banked
  6949  01ADAC  AB17               	btfss	23,5,b	;volatile
  6950  01ADAE  D7FD               	goto	_set_dac
  6951                           
  6952                           ; BSR set to: 61
  6953                           
  6954                           ;daq.c: 248:  do { LATCbits.LATC2 = 1; } while(0);
  6955  01ADB0  84BC               	bsf	188,2,c	;volatile
  6956                           
  6957                           ; BSR set to: 61
  6958                           
  6959                           ;daq.c: 249:  do { LATCbits.LATC0 = 1; } while(0);
  6960  01ADB2  80BC               	bsf	188,0,c	;volatile
  6961                           
  6962                           ; BSR set to: 61
  6963                           ;daq.c: 250:  dac_spi_control(1);
  6964  01ADB4  0E01               	movlw	1
  6965  01ADB6  6EE6               	movwf	postinc1,c
  6966  01ADB8  EC4F  F0DB         	call	_dac_spi_control	;wreg free
  6967                           
  6968                           ;daq.c: 251:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  6969  01ADBC  C0CF  F0D3         	movff	_R+32,_R+36	;volatile
  6970                           
  6971                           ;daq.c: 252:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  6972  01ADC0  EE20  F0CF         	lfsr	2,_R+32	;volatile
  6973  01ADC4  006F FF78  F00B    	movff	postinc2,btemp+10
  6974  01ADCA  006F FF74  F00C    	movff	postdec2,btemp+11
  6975  01ADD0  0060  F030  F00B   	movff	btemp+11,btemp+10
  6976  01ADD6  6A0C               	clrf	(btemp+11)^0,c
  6977  01ADD8  0E0F               	movlw	15
  6978  01ADDA  160B               	andwf	(btemp+10)^0,f,c
  6979  01ADDC  0100               	movlb	0	; () banked
  6980  01ADDE  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6981  01ADE0  180B               	xorwf	(btemp+10)^0,w,c
  6982  01ADE2  0BF0               	andlw	-16
  6983  01ADE4  180B               	xorwf	(btemp+10)^0,w,c
  6984  01ADE6  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6985                           
  6986                           ; BSR set to: 0
  6987                           ;daq.c: 253:  R.max5322_cmd.map.cont = 0b0100;
  6988  01ADE8  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6989  01ADEA  0B0F               	andlw	-241
  6990  01ADEC  0940               	iorlw	64
  6991  01ADEE  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6992                           
  6993                           ; BSR set to: 0
  6994  01ADF0  90BF               	bcf	191,0,c	;volatile
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;daq.c: 255:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  6998  01ADF2  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6999  01ADF4  6EE6               	movwf	postinc1,c
  7000  01ADF6  EC9B  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7001                           
  7002                           ; BSR set to: 57
  7003                           ;daq.c: 256:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7004  01ADFA  0100               	movlb	0	; () banked
  7005  01ADFC  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  7006  01ADFE  6EE6               	movwf	postinc1,c
  7007  01AE00  EC9B  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7008                           
  7009                           ; BSR set to: 57
  7010  01AE04  80BF               	bsf	191,0,c	;volatile
  7011                           
  7012                           ; BSR set to: 57
  7013                           ;daq.c: 258:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  7014  01AE06  C0D1  F0D3         	movff	_R+34,_R+36	;volatile
  7015                           
  7016                           ; BSR set to: 57
  7017                           ;daq.c: 259:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  7018  01AE0A  EE20  F0D1         	lfsr	2,_R+34	;volatile
  7019  01AE0E  006F FF78  F00B    	movff	postinc2,btemp+10
  7020  01AE14  006F FF74  F00C    	movff	postdec2,btemp+11
  7021  01AE1A  0060  F030  F00B   	movff	btemp+11,btemp+10
  7022  01AE20  6A0C               	clrf	(btemp+11)^0,c
  7023  01AE22  0E0F               	movlw	15
  7024  01AE24  160B               	andwf	(btemp+10)^0,f,c
  7025  01AE26  0100               	movlb	0	; () banked
  7026  01AE28  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  7027  01AE2A  180B               	xorwf	(btemp+10)^0,w,c
  7028  01AE2C  0BF0               	andlw	-16
  7029  01AE2E  180B               	xorwf	(btemp+10)^0,w,c
  7030  01AE30  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  7031                           
  7032                           ; BSR set to: 0
  7033                           ;daq.c: 260:  R.max5322_cmd.map.cont = 0b0101;
  7034  01AE32  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  7035  01AE34  0B0F               	andlw	-241
  7036  01AE36  0950               	iorlw	80
  7037  01AE38  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  7038                           
  7039                           ; BSR set to: 0
  7040  01AE3A  90BF               	bcf	191,0,c	;volatile
  7041                           
  7042                           ; BSR set to: 0
  7043                           ;daq.c: 262:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7044  01AE3C  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  7045  01AE3E  6EE6               	movwf	postinc1,c
  7046  01AE40  EC9B  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7047                           
  7048                           ; BSR set to: 57
  7049                           ;daq.c: 263:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7050  01AE44  0100               	movlb	0	; () banked
  7051  01AE46  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  7052  01AE48  6EE6               	movwf	postinc1,c
  7053  01AE4A  EC9B  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7054  01AE4E                     l1887:
  7055  01AE4E  013D               	movlb	61	; () banked
  7056  01AE50  AB17               	btfss	23,5,b	;volatile
  7057  01AE52  D7FD               	goto	l1887
  7058                           
  7059                           ; BSR set to: 61
  7060                           
  7061                           ;daq.c: 265:  do { LATFbits.LATF0 = 1; } while(0);
  7062  01AE54  80BF               	bsf	191,0,c	;volatile
  7063                           
  7064                           ; BSR set to: 61
  7065                           ;daq.c: 266:  dac_spi_control(0);
  7066  01AE56  0E00               	movlw	0
  7067  01AE58  6EE6               	movwf	postinc1,c
  7068  01AE5A  EC4F  F0DB         	call	_dac_spi_control	;wreg free
  7069                           
  7070                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  7071  01AE5E  0012               	return		;funcret
  7072  01AE60                     __end_of_set_dac:
  7073                           	opt callstack 0
  7074                           
  7075 ;; *************** function _dac_spi_control *****************
  7076 ;; Defined at:
  7077 ;;		line 197 in file "daq.c"
  7078 ;; Parameters:    Size  Location     Type
  7079 ;;  set             1  [STACK] _Bool 
  7080 ;; Auto vars:     Size  Location     Type
  7081 ;;		None
  7082 ;; Return value:  Size  Location     Type
  7083 ;;                  1  [STACK] void 
  7084 ;; Registers used:
  7085 ;;		wreg, fsr1l, fsr1h, status,2
  7086 ;; Tracked objects:
  7087 ;;		On entry : 3F/3D
  7088 ;;		On exit  : 0/0
  7089 ;;		Unchanged: 0/0
  7090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7095 ;;Total ram usage:        0 bytes
  7096 ;; Hardware stack levels used:    1
  7097 ;; Hardware stack levels required when called:   15
  7098 ;; This function calls:
  7099 ;;		Nothing
  7100 ;; This function is called by:
  7101 ;;		_set_dac
  7102 ;; This function uses a reentrant model
  7103 ;;
  7104                           
  7105                           	psect	text8
  7106  01B69E                     __ptext8:
  7107                           	opt callstack 0
  7108  01B69E                     _dac_spi_control:
  7109                           	opt callstack 14
  7110                           
  7111                           ;daq.c: 197: void dac_spi_control(_Bool set);daq.c: 198: {;daq.c: 199:  static _Bool ini
      +                          t = 0;;daq.c: 200:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 202:  if (set) {
  7112                           ;stkvar	_set @ sp[(0)+-1]
  7113                           
  7114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7115                           ;incstack = 0
  7116  01B69E  0EFF               	movlw	-1
  7117  01B6A0  50E3               	movf	plusw1,w,c
  7118  01B6A2  B4D8               	btfsc	status,2,c
  7119  01B6A4  D022               	goto	l10959
  7120                           
  7121                           ;daq.c: 203:   SPI1CON0bits.EN = 0;
  7122  01B6A6  013D               	movlb	61	; () banked
  7123  01B6A8  9F14               	bcf	20,7,b	;volatile
  7124                           
  7125                           ; BSR set to: 61
  7126                           ;daq.c: 204:   if (!init) {
  7127  01B6AA  5043               	movf	dac_spi_control@init^0,w,c
  7128  01B6AC  A4D8               	btfss	status,2,c
  7129  01B6AE  D011               	goto	l10947
  7130                           
  7131                           ; BSR set to: 61
  7132                           ;daq.c: 205:    init = 1;
  7133  01B6B0  0E01               	movlw	1
  7134  01B6B2  6E43               	movwf	dac_spi_control@init^0,c
  7135                           
  7136                           ; BSR set to: 61
  7137                           ;daq.c: 206:    S0 = SPI1CON0;
  7138  01B6B4  006F F450  F042    	movff	15636,dac_spi_control@S0	;volatile
  7139                           
  7140                           ; BSR set to: 61
  7141                           ;daq.c: 207:    S1 = SPI1CON1;
  7142  01B6BA  006F F454  F0A8    	movff	15637,dac_spi_control@S1	;volatile
  7143                           
  7144                           ; BSR set to: 61
  7145                           ;daq.c: 208:    S2 = SPI1CON2;
  7146  01B6C0  006F F458  F0A7    	movff	15638,dac_spi_control@S2	;volatile
  7147                           
  7148                           ; BSR set to: 61
  7149                           ;daq.c: 209:    SC = SPI1CLK;
  7150  01B6C6  006F F470  F0A6    	movff	15644,dac_spi_control@SC	;volatile
  7151                           
  7152                           ; BSR set to: 61
  7153                           ;daq.c: 210:    SB = SPI1BAUD;
  7154  01B6CC  006F F464  F0A5    	movff	15641,dac_spi_control@SB	;volatile
  7155  01B6D2                     l10947:
  7156                           
  7157                           ; BSR set to: 61
  7158                           ;daq.c: 216:   SPI1CON1 = 0x00;
  7159  01B6D2  6B15               	clrf	21,b	;volatile
  7160                           
  7161                           ; BSR set to: 61
  7162                           ;daq.c: 217:   SPI1CON1bits.CKE = 1;
  7163  01B6D4  8D15               	bsf	21,6,b	;volatile
  7164                           
  7165                           ; BSR set to: 61
  7166                           ;daq.c: 218:   SPI1CON1bits.CKP = 0;
  7167  01B6D6  9B15               	bcf	21,5,b	;volatile
  7168                           
  7169                           ; BSR set to: 61
  7170                           ;daq.c: 219:   SPI1CON1bits.SMP = 0;
  7171  01B6D8  9F15               	bcf	21,7,b	;volatile
  7172                           
  7173                           ;daq.c: 221:   SPI1CON2 = 0x03;
  7174  01B6DA  0E03               	movlw	3
  7175  01B6DC  6F16               	movwf	22,b	;volatile
  7176                           
  7177                           ;daq.c: 223:   SPI1BAUD = 0x0f;
  7178  01B6DE  0E0F               	movlw	15
  7179  01B6E0  6F19               	movwf	25,b	;volatile
  7180                           
  7181                           ; BSR set to: 61
  7182                           ;daq.c: 225:   SPI1CLK = 0x00;
  7183  01B6E2  6B1C               	clrf	28,b	;volatile
  7184                           
  7185                           ;daq.c: 227:   SPI1CON0 = 0x83;
  7186  01B6E4  0E83               	movlw	131
  7187  01B6E6  6F14               	movwf	20,b	;volatile
  7188  01B6E8  D014               	goto	L3
  7189  01B6EA                     l10959:
  7190                           
  7191                           ;daq.c: 230:   if (init) {
  7192  01B6EA  5043               	movf	dac_spi_control@init^0,w,c
  7193  01B6EC  B4D8               	btfsc	status,2,c
  7194  01B6EE  D012               	goto	l1871
  7195                           
  7196                           ;daq.c: 234:    SPI1CON0bits.EN = 0;
  7197  01B6F0  013D               	movlb	61	; () banked
  7198  01B6F2  9F14               	bcf	20,7,b	;volatile
  7199                           
  7200                           ;daq.c: 235:    SPI1CON1 = S1;
  7201  01B6F4  0060  F2A3  FD15   	movff	dac_spi_control@S1,15637	;volatile
  7202                           
  7203                           ;daq.c: 236:    SPI1CON2 = S2;
  7204  01B6FA  0060  F29F  FD16   	movff	dac_spi_control@S2,15638	;volatile
  7205                           
  7206                           ;daq.c: 237:    SPI1CLK = SC;
  7207  01B700  0060  F29B  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  7208                           
  7209                           ;daq.c: 238:    SPI1BAUD = SB;
  7210  01B706  0060  F297  FD19   	movff	dac_spi_control@SB,15641	;volatile
  7211                           
  7212                           ;daq.c: 239:    SPI1CON0 = S0;
  7213  01B70C  0060  F10B  FD14   	movff	dac_spi_control@S0,15636	;volatile
  7214  01B712                     L3:
  7215                           
  7216                           ;daq.c: 240:    SPI1CON0bits.EN = 1;
  7217  01B712  8F14               	bsf	20,7,b	;volatile
  7218  01B714                     l1871:
  7219                           
  7220                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  7221  01B714  52E5               	movf	postdec1,f,c
  7222  01B716  0012               	return		;funcret
  7223  01B718                     __end_of_dac_spi_control:
  7224                           	opt callstack 0
  7225                           
  7226 ;; *************** function _init_port_dma *****************
  7227 ;; Defined at:
  7228 ;;		line 104 in file "eadog.c"
  7229 ;; Parameters:    Size  Location     Type
  7230 ;;		None
  7231 ;; Auto vars:     Size  Location     Type
  7232 ;;		None
  7233 ;; Return value:  Size  Location     Type
  7234 ;;                  1  [STACK] void 
  7235 ;; Registers used:
  7236 ;;		wreg, status,2
  7237 ;; Tracked objects:
  7238 ;;		On entry : 0/1
  7239 ;;		On exit  : 3F/3B
  7240 ;;		Unchanged: 0/0
  7241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7246 ;;Total ram usage:        0 bytes
  7247 ;; Hardware stack levels used:    1
  7248 ;; Hardware stack levels required when called:   15
  7249 ;; This function calls:
  7250 ;;		Nothing
  7251 ;; This function is called by:
  7252 ;;		_main
  7253 ;; This function uses a reentrant model
  7254 ;;
  7255                           
  7256                           	psect	text9
  7257  01C3C0                     __ptext9:
  7258                           	opt callstack 0
  7259  01C3C0                     _init_port_dma:
  7260                           	opt callstack 15
  7261                           
  7262                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  7263                           
  7264                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7265                           ;incstack = 0
  7266  01C3C0  0E3F               	movlw	-193
  7267  01C3C2  013B               	movlb	59	; () banked
  7268  01C3C4  17DD               	andwf	221,f,b	;volatile
  7269                           
  7270                           ; BSR set to: 59
  7271                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  7272  01C3C6  9BDD               	bcf	221,5,b	;volatile
  7273                           
  7274                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  7275  01C3C8  51DD               	movf	221,w,b	;volatile
  7276  01C3CA  0BF9               	andlw	-7
  7277  01C3CC  0902               	iorlw	2
  7278  01C3CE  6FDD               	movwf	221,b	;volatile
  7279                           
  7280                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  7281  01C3D0  0EE7               	movlw	-25
  7282  01C3D2  17DD               	andwf	221,f,b	;volatile
  7283                           
  7284                           ; BSR set to: 59
  7285                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  7286  01C3D4  81DD               	bsf	221,0,b	;volatile
  7287                           
  7288                           ; BSR set to: 59
  7289                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  7290  01C3D6  9DDC               	bcf	220,6,b	;volatile
  7291                           
  7292                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  7293  01C3D8  0E3D               	movlw	61
  7294  01C3DA  6FD1               	movwf	209,b	;volatile
  7295  01C3DC  0EEA               	movlw	234
  7296  01C3DE  6FD0               	movwf	208,b	;volatile
  7297                           
  7298                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  7299  01C3E0  0EFF               	movlw	low _port_data
  7300  01C3E2  6FD9               	movwf	217,b	;volatile
  7301  01C3E4  0E04               	movlw	high _port_data
  7302  01C3E6  6FDA               	movwf	218,b	;volatile
  7303  01C3E8  0E00               	movlw	low (_port_data shr (0+16))
  7304  01C3EA  6FDB               	movwf	219,b	;volatile
  7305                           
  7306                           ; BSR set to: 59
  7307                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  7308  01C3EC  9BDC               	bcf	220,5,b	;volatile
  7309                           
  7310                           ; BSR set to: 59
  7311                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7312  01C3EE  0012               	return		;funcret
  7313  01C3F0                     __end_of_init_port_dma:
  7314                           	opt callstack 0
  7315                           
  7316 ;; *************** function _init_display *****************
  7317 ;; Defined at:
  7318 ;;		line 38 in file "eadog.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;		None
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;		None
  7323 ;; Return value:  Size  Location     Type
  7324 ;;                  1  [STACK] void 
  7325 ;; Registers used:
  7326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7327 ;; Tracked objects:
  7328 ;;		On entry : 3F/3B
  7329 ;;		On exit  : 3F/3D
  7330 ;;		Unchanged: 0/0
  7331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7336 ;;Total ram usage:        0 bytes
  7337 ;; Hardware stack levels used:    1
  7338 ;; Hardware stack levels required when called:   17
  7339 ;; This function calls:
  7340 ;;		_ringBufS_init
  7341 ;;		_send_lcd_cmd
  7342 ;;		_send_lcd_cmd_long
  7343 ;;		_send_lcd_data
  7344 ;;		_wdtdelay
  7345 ;; This function is called by:
  7346 ;;		_main
  7347 ;; This function uses a reentrant model
  7348 ;;
  7349                           
  7350                           	psect	text10
  7351  01A65C                     __ptext10:
  7352                           	opt callstack 0
  7353  01A65C                     _init_display:
  7354                           	opt callstack 13
  7355                           
  7356                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  7357                           
  7358                           ; BSR set to: 59
  7359                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7360                           ;incstack = 0
  7361  01A65C  0E83               	movlw	low _ring_buf1
  7362  01A65E  0101               	movlb	1	; () banked
  7363  01A660  6FD6               	movwf	(_spi_link+6)& (0+255),b	;volatile
  7364  01A662  0E03               	movlw	high _ring_buf1
  7365  01A664  6FD7               	movwf	(_spi_link+7)& (0+255),b	;volatile
  7366                           
  7367                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  7368  01A666  0E40               	movlw	low _ring_buf2
  7369  01A668  6FD4               	movwf	(_spi_link+4)& (0+255),b	;volatile
  7370  01A66A  0E03               	movlw	high _ring_buf2
  7371  01A66C  6FD5               	movwf	(_spi_link+5)& (0+255),b	;volatile
  7372                           
  7373                           ; BSR set to: 1
  7374                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  7375  01A66E  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
  7376  01A674  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
  7377  01A67A  ECAF  F0E2         	call	_ringBufS_init	;wreg free
  7378                           
  7379                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  7380  01A67E  0060  F753  FFE6   	movff	_spi_link+4,postinc1
  7381  01A684  0060  F757  FFE6   	movff	_spi_link+5,postinc1
  7382  01A68A  ECAF  F0E2         	call	_ringBufS_init	;wreg free
  7383                           
  7384                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  7385  01A68E  84BE               	bsf	190,2,c	;volatile
  7386                           
  7387                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  7388  01A690  013D               	movlb	61	; () banked
  7389  01A692  9F14               	bcf	20,7,b	;volatile
  7390                           
  7391                           ; BSR set to: 61
  7392                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  7393  01A694  0E20               	movlw	32
  7394  01A696  6F15               	movwf	21,b	;volatile
  7395                           
  7396                           ; BSR set to: 61
  7397                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  7398  01A698  0E03               	movlw	3
  7399  01A69A  6F16               	movwf	22,b	;volatile
  7400                           
  7401                           ; BSR set to: 61
  7402                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  7403  01A69C  0E04               	movlw	4
  7404  01A69E  6F19               	movwf	25,b	;volatile
  7405                           
  7406                           ; BSR set to: 61
  7407                           ;eadog.c: 55:  SPI1CLK = 0x02;
  7408  01A6A0  0E02               	movlw	2
  7409  01A6A2  6F1C               	movwf	28,b	;volatile
  7410                           
  7411                           ; BSR set to: 61
  7412                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  7413  01A6A4  0E83               	movlw	131
  7414  01A6A6  6F14               	movwf	20,b	;volatile
  7415                           
  7416                           ; BSR set to: 61
  7417                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  7418  01A6A8  8F14               	bsf	20,7,b	;volatile
  7419                           
  7420                           ; BSR set to: 61
  7421                           ;eadog.c: 60:  wdtdelay(350000);
  7422  01A6AA  0E30               	movlw	48
  7423  01A6AC  6EE6               	movwf	postinc1,c
  7424  01A6AE  0E57               	movlw	87
  7425  01A6B0  6EE6               	movwf	postinc1,c
  7426  01A6B2  0E05               	movlw	5
  7427  01A6B4  6EE6               	movwf	postinc1,c
  7428  01A6B6  0E00               	movlw	0
  7429  01A6B8  6EE6               	movwf	postinc1,c
  7430  01A6BA  ECF8  F0DD         	call	_wdtdelay	;wreg free
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  7434  01A6BE  0E46               	movlw	70
  7435  01A6C0  6EE6               	movwf	postinc1,c
  7436  01A6C2  EC2E  F0E0         	call	_send_lcd_cmd_long	;wreg free
  7437                           
  7438                           ; BSR set to: 0
  7439                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  7440  01A6C6  0E41               	movlw	65
  7441  01A6C8  6EE6               	movwf	postinc1,c
  7442  01A6CA  EC4E  F0E0         	call	_send_lcd_cmd	;wreg free
  7443                           
  7444                           ; BSR set to: 0
  7445                           ;eadog.c: 63:  wdtdelay(80);
  7446  01A6CE  0E50               	movlw	80
  7447  01A6D0  6EE6               	movwf	postinc1,c
  7448  01A6D2  0E00               	movlw	0
  7449  01A6D4  6EE6               	movwf	postinc1,c
  7450  01A6D6  0E00               	movlw	0
  7451  01A6D8  6EE6               	movwf	postinc1,c
  7452  01A6DA  0E00               	movlw	0
  7453  01A6DC  6EE6               	movwf	postinc1,c
  7454  01A6DE  ECF8  F0DD         	call	_wdtdelay	;wreg free
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  7458  01A6E2  0E53               	movlw	83
  7459  01A6E4  6EE6               	movwf	postinc1,c
  7460  01A6E6  EC4E  F0E0         	call	_send_lcd_cmd	;wreg free
  7461                           
  7462                           ; BSR set to: 0
  7463                           ;eadog.c: 65:  send_lcd_data(2);
  7464  01A6EA  0E02               	movlw	2
  7465  01A6EC  6EE6               	movwf	postinc1,c
  7466  01A6EE  ECDC  F0E3         	call	_send_lcd_data	;wreg free
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;eadog.c: 66:  wdtdelay(80);
  7470  01A6F2  0E50               	movlw	80
  7471  01A6F4  6EE6               	movwf	postinc1,c
  7472  01A6F6  0E00               	movlw	0
  7473  01A6F8  6EE6               	movwf	postinc1,c
  7474  01A6FA  0E00               	movlw	0
  7475  01A6FC  6EE6               	movwf	postinc1,c
  7476  01A6FE  0E00               	movlw	0
  7477  01A700  6EE6               	movwf	postinc1,c
  7478  01A702  ECF8  F0DD         	call	_wdtdelay	;wreg free
  7479                           
  7480                           ; BSR set to: 0
  7481                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  7482  01A706  0E51               	movlw	81
  7483  01A708  6EE6               	movwf	postinc1,c
  7484  01A70A  EC2E  F0E0         	call	_send_lcd_cmd_long	;wreg free
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  7488  01A70E  013D               	movlb	61	; () banked
  7489  01A710  9F14               	bcf	20,7,b	;volatile
  7490                           
  7491                           ; BSR set to: 61
  7492                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  7493  01A712  0E02               	movlw	2
  7494  01A714  6F16               	movwf	22,b	;volatile
  7495                           
  7496                           ; BSR set to: 61
  7497                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  7498  01A716  8F14               	bsf	20,7,b	;volatile
  7499                           
  7500                           ; BSR set to: 61
  7501                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  7502  01A718  931A               	bcf	26,1,b	;volatile
  7503                           
  7504                           ; BSR set to: 61
  7505                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  7506  01A71A  0E3F               	movlw	-193
  7507  01A71C  013B               	movlb	59	; () banked
  7508  01A71E  17FD               	andwf	253,f,b	;volatile
  7509                           
  7510                           ; BSR set to: 59
  7511                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  7512  01A720  9BFD               	bcf	253,5,b	;volatile
  7513                           
  7514                           ; BSR set to: 59
  7515                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  7516  01A722  51FD               	movf	253,w,b	;volatile
  7517  01A724  0BF9               	andlw	-7
  7518  01A726  0902               	iorlw	2
  7519  01A728  6FFD               	movwf	253,b	;volatile
  7520                           
  7521                           ; BSR set to: 59
  7522                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  7523  01A72A  0EE7               	movlw	-25
  7524  01A72C  17FD               	andwf	253,f,b	;volatile
  7525                           
  7526                           ; BSR set to: 59
  7527                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  7528  01A72E  81FD               	bsf	253,0,b	;volatile
  7529                           
  7530                           ; BSR set to: 59
  7531                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  7532  01A730  0E83               	movlw	low _ring_buf1
  7533  01A732  6FF9               	movwf	249,b	;volatile
  7534  01A734  0E03               	movlw	high _ring_buf1
  7535  01A736  6FFA               	movwf	250,b	;volatile
  7536  01A738  0E00               	movlw	low (_ring_buf1 shr (0+16))
  7537  01A73A  6FFB               	movwf	251,b	;volatile
  7538                           
  7539                           ; BSR set to: 59
  7540                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  7541  01A73C  9BFC               	bcf	252,5,b	;volatile
  7542                           
  7543                           ; BSR set to: 59
  7544                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  7545  01A73E  013D               	movlb	61	; () banked
  7546  01A740  831A               	bsf	26,1,b	;volatile
  7547                           
  7548                           ; BSR set to: 61
  7549                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  7550  01A742  94BE               	bcf	190,2,c	;volatile
  7551                           
  7552                           ; BSR set to: 61
  7553                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7554  01A744  0012               	return		;funcret
  7555  01A746                     __end_of_init_display:
  7556                           	opt callstack 0
  7557                           
  7558 ;; *************** function _send_lcd_data *****************
  7559 ;; Defined at:
  7560 ;;		line 123 in file "eadog.c"
  7561 ;; Parameters:    Size  Location     Type
  7562 ;;  data            1  [STACK] const unsigned char 
  7563 ;; Auto vars:     Size  Location     Type
  7564 ;;		None
  7565 ;; Return value:  Size  Location     Type
  7566 ;;                  1  [STACK] void 
  7567 ;; Registers used:
  7568 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7569 ;; Tracked objects:
  7570 ;;		On entry : 3F/0
  7571 ;;		On exit  : 3F/0
  7572 ;;		Unchanged: 0/0
  7573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7578 ;;Total ram usage:        0 bytes
  7579 ;; Hardware stack levels used:    1
  7580 ;; Hardware stack levels required when called:   16
  7581 ;; This function calls:
  7582 ;;		_SPI1_Exchange8bit
  7583 ;;		_wdtdelay
  7584 ;; This function is called by:
  7585 ;;		_init_display
  7586 ;; This function uses a reentrant model
  7587 ;;
  7588                           
  7589                           	psect	text11
  7590  01C7B8                     __ptext11:
  7591                           	opt callstack 0
  7592  01C7B8                     _send_lcd_data:
  7593                           	opt callstack 13
  7594                           
  7595                           ; BSR set to: 61
  7596                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7597                           ;incstack = 0
  7598                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  7599  01C7B8  94BC               	bcf	188,2,c	;volatile
  7600                           
  7601                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  7602                           ;stkvar	_data @ sp[(0)+-1]
  7603  01C7BA  0EFF               	movlw	-1
  7604  01C7BC  50E3               	movf	plusw1,w,c
  7605  01C7BE  6EE6               	movwf	postinc1,c
  7606  01C7C0  EC9B  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7607                           
  7608                           ; BSR set to: 57
  7609                           ;eadog.c: 127:  wdtdelay(8);
  7610  01C7C4  0E08               	movlw	8
  7611  01C7C6  6EE6               	movwf	postinc1,c
  7612  01C7C8  0E00               	movlw	0
  7613  01C7CA  6EE6               	movwf	postinc1,c
  7614  01C7CC  0E00               	movlw	0
  7615  01C7CE  6EE6               	movwf	postinc1,c
  7616  01C7D0  0E00               	movlw	0
  7617  01C7D2  6EE6               	movwf	postinc1,c
  7618  01C7D4  ECF8  F0DD         	call	_wdtdelay	;wreg free
  7619                           
  7620                           ; BSR set to: 0
  7621                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  7622  01C7D8  52E5               	movf	postdec1,f,c
  7623  01C7DA  0012               	return		;funcret
  7624  01C7DC                     __end_of_send_lcd_data:
  7625                           	opt callstack 0
  7626                           
  7627 ;; *************** function _send_lcd_cmd_long *****************
  7628 ;; Defined at:
  7629 ;;		line 139 in file "eadog.c"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;  cmd             1  [STACK] const unsigned char 
  7632 ;; Auto vars:     Size  Location     Type
  7633 ;;		None
  7634 ;; Return value:  Size  Location     Type
  7635 ;;                  1  [STACK] void 
  7636 ;; Registers used:
  7637 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7638 ;; Tracked objects:
  7639 ;;		On entry : 3F/0
  7640 ;;		On exit  : 3F/0
  7641 ;;		Unchanged: 0/0
  7642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7647 ;;Total ram usage:        0 bytes
  7648 ;; Hardware stack levels used:    1
  7649 ;; Hardware stack levels required when called:   16
  7650 ;; This function calls:
  7651 ;;		_SPI1_Exchange8bit
  7652 ;;		_wdtdelay
  7653 ;; This function is called by:
  7654 ;;		_init_display
  7655 ;; This function uses a reentrant model
  7656 ;;
  7657                           
  7658                           	psect	text12
  7659  01C05C                     __ptext12:
  7660                           	opt callstack 0
  7661  01C05C                     _send_lcd_cmd_long:
  7662                           	opt callstack 13
  7663                           
  7664                           ; BSR set to: 0
  7665                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7666                           ;incstack = 0
  7667                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  7668  01C05C  94BC               	bcf	188,2,c	;volatile
  7669                           
  7670                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  7671  01C05E  0EFE               	movlw	254
  7672  01C060  6EE6               	movwf	postinc1,c
  7673  01C062  EC9B  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7674                           
  7675                           ; BSR set to: 57
  7676                           ;eadog.c: 143:  wdtdelay(8);
  7677  01C066  0E08               	movlw	8
  7678  01C068  6EE6               	movwf	postinc1,c
  7679  01C06A  0E00               	movlw	0
  7680  01C06C  6EE6               	movwf	postinc1,c
  7681  01C06E  0E00               	movlw	0
  7682  01C070  6EE6               	movwf	postinc1,c
  7683  01C072  0E00               	movlw	0
  7684  01C074  6EE6               	movwf	postinc1,c
  7685  01C076  ECF8  F0DD         	call	_wdtdelay	;wreg free
  7686                           
  7687                           ; BSR set to: 0
  7688                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  7689                           ;stkvar	_cmd @ sp[(0)+-1]
  7690  01C07A  0EFF               	movlw	-1
  7691  01C07C  50E3               	movf	plusw1,w,c
  7692  01C07E  6EE6               	movwf	postinc1,c
  7693  01C080  EC9B  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7694                           
  7695                           ;eadog.c: 145:  wdtdelay(800);
  7696  01C084  0E20               	movlw	32
  7697  01C086  6EE6               	movwf	postinc1,c
  7698  01C088  0E03               	movlw	3
  7699  01C08A  6EE6               	movwf	postinc1,c
  7700  01C08C  0E00               	movlw	0
  7701  01C08E  6EE6               	movwf	postinc1,c
  7702  01C090  0E00               	movlw	0
  7703  01C092  6EE6               	movwf	postinc1,c
  7704  01C094  ECF8  F0DD         	call	_wdtdelay	;wreg free
  7705                           
  7706                           ; BSR set to: 0
  7707                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7708  01C098  52E5               	movf	postdec1,f,c
  7709  01C09A  0012               	return		;funcret
  7710  01C09C                     __end_of_send_lcd_cmd_long:
  7711                           	opt callstack 0
  7712                           
  7713 ;; *************** function _send_lcd_cmd *****************
  7714 ;; Defined at:
  7715 ;;		line 130 in file "eadog.c"
  7716 ;; Parameters:    Size  Location     Type
  7717 ;;  cmd             1  [STACK] const unsigned char 
  7718 ;; Auto vars:     Size  Location     Type
  7719 ;;		None
  7720 ;; Return value:  Size  Location     Type
  7721 ;;                  1  [STACK] void 
  7722 ;; Registers used:
  7723 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7724 ;; Tracked objects:
  7725 ;;		On entry : 3F/0
  7726 ;;		On exit  : 3F/0
  7727 ;;		Unchanged: 0/0
  7728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7733 ;;Total ram usage:        0 bytes
  7734 ;; Hardware stack levels used:    1
  7735 ;; Hardware stack levels required when called:   16
  7736 ;; This function calls:
  7737 ;;		_SPI1_Exchange8bit
  7738 ;;		_wdtdelay
  7739 ;; This function is called by:
  7740 ;;		_init_display
  7741 ;; This function uses a reentrant model
  7742 ;;
  7743                           
  7744                           	psect	text13
  7745  01C09C                     __ptext13:
  7746                           	opt callstack 0
  7747  01C09C                     _send_lcd_cmd:
  7748                           	opt callstack 13
  7749                           
  7750                           ; BSR set to: 0
  7751                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7752                           ;incstack = 0
  7753                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  7754  01C09C  94BC               	bcf	188,2,c	;volatile
  7755                           
  7756                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  7757  01C09E  0EFE               	movlw	254
  7758  01C0A0  6EE6               	movwf	postinc1,c
  7759  01C0A2  EC9B  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7760                           
  7761                           ; BSR set to: 57
  7762                           ;eadog.c: 134:  wdtdelay(8);
  7763  01C0A6  0E08               	movlw	8
  7764  01C0A8  6EE6               	movwf	postinc1,c
  7765  01C0AA  0E00               	movlw	0
  7766  01C0AC  6EE6               	movwf	postinc1,c
  7767  01C0AE  0E00               	movlw	0
  7768  01C0B0  6EE6               	movwf	postinc1,c
  7769  01C0B2  0E00               	movlw	0
  7770  01C0B4  6EE6               	movwf	postinc1,c
  7771  01C0B6  ECF8  F0DD         	call	_wdtdelay	;wreg free
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  7775                           ;stkvar	_cmd @ sp[(0)+-1]
  7776  01C0BA  0EFF               	movlw	-1
  7777  01C0BC  50E3               	movf	plusw1,w,c
  7778  01C0BE  6EE6               	movwf	postinc1,c
  7779  01C0C0  EC9B  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7780                           
  7781                           ;eadog.c: 136:  wdtdelay(8);
  7782  01C0C4  0E08               	movlw	8
  7783  01C0C6  6EE6               	movwf	postinc1,c
  7784  01C0C8  0E00               	movlw	0
  7785  01C0CA  6EE6               	movwf	postinc1,c
  7786  01C0CC  0E00               	movlw	0
  7787  01C0CE  6EE6               	movwf	postinc1,c
  7788  01C0D0  0E00               	movlw	0
  7789  01C0D2  6EE6               	movwf	postinc1,c
  7790  01C0D4  ECF8  F0DD         	call	_wdtdelay	;wreg free
  7791                           
  7792                           ; BSR set to: 0
  7793                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  7794  01C0D8  52E5               	movf	postdec1,f,c
  7795  01C0DA  0012               	return		;funcret
  7796  01C0DC                     __end_of_send_lcd_cmd:
  7797                           	opt callstack 0
  7798                           
  7799 ;; *************** function _SPI1_Exchange8bit *****************
  7800 ;; Defined at:
  7801 ;;		line 79 in file "mcc_generated_files/spi1.c"
  7802 ;; Parameters:    Size  Location     Type
  7803 ;;  data            1  [STACK] unsigned char 
  7804 ;; Auto vars:     Size  Location     Type
  7805 ;;		None
  7806 ;; Return value:  Size  Location     Type
  7807 ;;                  1  [STACK] unsigned char 
  7808 ;; Registers used:
  7809 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  7810 ;; Tracked objects:
  7811 ;;		On entry : 0/0
  7812 ;;		On exit  : 3F/39
  7813 ;;		Unchanged: 0/0
  7814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7819 ;;Total ram usage:        0 bytes
  7820 ;; Hardware stack levels used:    1
  7821 ;; Hardware stack levels required when called:   15
  7822 ;; This function calls:
  7823 ;;		Nothing
  7824 ;; This function is called by:
  7825 ;;		_send_lcd_data
  7826 ;;		_send_lcd_cmd
  7827 ;;		_send_lcd_cmd_long
  7828 ;;		_set_dac
  7829 ;; This function uses a reentrant model
  7830 ;;
  7831                           
  7832                           	psect	text14
  7833  01C936                     __ptext14:
  7834                           	opt callstack 0
  7835  01C936                     _SPI1_Exchange8bit:
  7836                           	opt callstack 14
  7837                           
  7838                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  7839                           
  7840                           ; BSR set to: 0
  7841                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7842                           ;incstack = 0
  7843  01C936  0E01               	movlw	1
  7844  01C938  013D               	movlb	61	; () banked
  7845  01C93A  6F12               	movwf	18,b	;volatile
  7846                           
  7847                           ; BSR set to: 61
  7848                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  7849                           ;stkvar	_data @ sp[(0)+-1]
  7850  01C93C  0EFF               	movlw	-1
  7851  01C93E  006F FF8F FD11     	movff	plusw1,15633	;volatile
  7852  01C944                     l807:
  7853                           
  7854                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7855  01C944  0139               	movlb	57	; () banked
  7856  01C946  A9A2               	btfss	162,4,b	;volatile
  7857  01C948  D7FD               	goto	l807
  7858                           
  7859                           ; BSR set to: 57
  7860                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7861  01C94A  006F F440  F001    	movff	15632,btemp	;volatile
  7862                           
  7863                           ; BSR set to: 57
  7864                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7865  01C950  52E5               	movf	postdec1,f,c
  7866  01C952  0012               	return		;funcret
  7867  01C954                     __end_of_SPI1_Exchange8bit:
  7868                           	opt callstack 0
  7869                           
  7870 ;; *************** function _ringBufS_init *****************
  7871 ;; Defined at:
  7872 ;;		line 22 in file "ringbufs.c"
  7873 ;; Parameters:    Size  Location     Type
  7874 ;;  _this           2  [STACK] PTR volatile struct ring
  7875 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7876 ;; Auto vars:     Size  Location     Type
  7877 ;;		None
  7878 ;; Return value:  Size  Location     Type
  7879 ;;                  1  [STACK] void 
  7880 ;; Registers used:
  7881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7882 ;; Tracked objects:
  7883 ;;		On entry : 0/1
  7884 ;;		On exit  : 0/0
  7885 ;;		Unchanged: 0/0
  7886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7891 ;;Total ram usage:        0 bytes
  7892 ;; Hardware stack levels used:    1
  7893 ;; Hardware stack levels required when called:   16
  7894 ;; This function calls:
  7895 ;;		_memset
  7896 ;; This function is called by:
  7897 ;;		_init_display
  7898 ;; This function uses a reentrant model
  7899 ;;
  7900                           
  7901                           	psect	text15
  7902  01C55E                     __ptext15:
  7903                           	opt callstack 0
  7904  01C55E                     _ringBufS_init:
  7905                           	opt callstack 13
  7906                           
  7907                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7908                           
  7909                           ; BSR set to: 57
  7910                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7911                           ;incstack = 0
  7912  01C55E  0E43               	movlw	67
  7913  01C560  6EE6               	movwf	postinc1,c
  7914  01C562  0E00               	movlw	0
  7915  01C564  6EE6               	movwf	postinc1,c
  7916  01C566  0E00               	movlw	0
  7917  01C568  6EE6               	movwf	postinc1,c
  7918  01C56A  0E00               	movlw	0
  7919  01C56C  6EE6               	movwf	postinc1,c
  7920                           
  7921                           ;stkvar	__this @ sp[(-4)+-2]
  7922  01C56E  0EFA               	movlw	-6
  7923  01C570  006F FF8F FFE6     	movff	plusw1,postinc1
  7924  01C576  006F FF8F FFE6     	movff	plusw1,postinc1
  7925  01C57C  EC18  F0B9         	call	_memset	;wreg free
  7926                           
  7927                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7928  01C580  52E5               	movf	postdec1,f,c
  7929  01C582  52E5               	movf	postdec1,f,c
  7930  01C584  0012               	return		;funcret
  7931  01C586                     __end_of_ringBufS_init:
  7932                           	opt callstack 0
  7933                           
  7934 ;; *************** function _init_bsoc *****************
  7935 ;; Defined at:
  7936 ;;		line 110 in file "bsoc.c"
  7937 ;; Parameters:    Size  Location     Type
  7938 ;;		None
  7939 ;; Auto vars:     Size  Location     Type
  7940 ;;		None
  7941 ;; Return value:  Size  Location     Type
  7942 ;;                  1  [STACK] void 
  7943 ;; Registers used:
  7944 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7945 ;; Tracked objects:
  7946 ;;		On entry : 0/0
  7947 ;;		On exit  : 0/0
  7948 ;;		Unchanged: 0/0
  7949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7954 ;;Total ram usage:        0 bytes
  7955 ;; Hardware stack levels used:    1
  7956 ;; Hardware stack levels required when called:   18
  7957 ;; This function calls:
  7958 ;;		_TMR3_SetInterruptHandler
  7959 ;;		_Volts_to_SOC
  7960 ;;		___fldiv
  7961 ;;		___flmul
  7962 ;;		___fltol
  7963 ;;		___xxtofl
  7964 ;;		_conv_raw_result
  7965 ;; This function is called by:
  7966 ;;		_main
  7967 ;; This function uses a reentrant model
  7968 ;;
  7969                           
  7970                           	psect	text16
  7971  017FA6                     __ptext16:
  7972                           	opt callstack 0
  7973  017FA6                     _init_bsoc:
  7974                           	opt callstack 12
  7975                           
  7976                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  7977                           
  7978                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7979                           ;incstack = 0
  7980  017FA6  0E00               	movlw	0
  7981  017FA8  6EE6               	movwf	postinc1,c
  7982  017FAA  0E00               	movlw	0
  7983  017FAC  6EE6               	movwf	postinc1,c
  7984  017FAE  0E7A               	movlw	122
  7985  017FB0  6EE6               	movwf	postinc1,c
  7986  017FB2  0E44               	movlw	68
  7987  017FB4  6EE6               	movwf	postinc1,c
  7988  017FB6  0E00               	movlw	0
  7989  017FB8  6EE6               	movwf	postinc1,c
  7990  017FBA  0E04               	movlw	4
  7991  017FBC  6EE6               	movwf	postinc1,c
  7992  017FBE  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  7993  017FC2  0060  F007  FFE6   	movff	btemp,postinc1
  7994  017FC8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7995  017FCE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7996  017FD4  0060  F013  FFE6   	movff	btemp+3,postinc1
  7997  017FDA  EC3B  F0CA         	call	___fltol	;wreg free
  7998  017FDE  0060  F007  FFE6   	movff	btemp,postinc1
  7999  017FE4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8000  017FEA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8001  017FF0  0060  F013  FFE6   	movff	btemp+3,postinc1
  8002  017FF6  0E00               	movlw	0
  8003  017FF8  6EE6               	movwf	postinc1,c
  8004  017FFA  EC3D  F0C5         	call	___xxtofl	;wreg free
  8005  017FFE  0060  F007  FFE6   	movff	btemp,postinc1
  8006  018004  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8007  01800A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8008  018010  0060  F013  FFE6   	movff	btemp+3,postinc1
  8009  018016  EC20  F09F         	call	___flmul	;wreg free
  8010  01801A  0060  F007  FFE6   	movff	btemp,postinc1
  8011  018020  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8012  018026  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8013  01802C  0060  F013  FFE6   	movff	btemp+3,postinc1
  8014  018032  EC3B  F0CA         	call	___fltol	;wreg free
  8015  018036  0060  F007  FFE6   	movff	btemp,postinc1
  8016  01803C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8017  018042  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8018  018048  0060  F013  FFE6   	movff	btemp+3,postinc1
  8019  01804E  EC1C  F0D6         	call	_Volts_to_SOC	;wreg free
  8020  018052  0060  F004  F7B5   	movff	btemp,_C+182	;volatile
  8021  018058  0060  F008  F7B6   	movff	btemp+1,_C+183	;volatile
  8022                           
  8023                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  8024  01805E  EE21  F38B         	lfsr	2,_C+140	;volatile
  8025  018062  006F FF7B FFE6     	movff	postinc2,postinc1
  8026  018068  006F FF7B FFE6     	movff	postinc2,postinc1
  8027  01806E  006F FF7B FFE6     	movff	postinc2,postinc1
  8028  018074  006F FF7B FFE6     	movff	postinc2,postinc1
  8029  01807A  0E00               	movlw	0
  8030  01807C  6EE6               	movwf	postinc1,c
  8031  01807E  0E00               	movlw	0
  8032  018080  6EE6               	movwf	postinc1,c
  8033  018082  0EC8               	movlw	200
  8034  018084  6EE6               	movwf	postinc1,c
  8035  018086  0E42               	movlw	66
  8036  018088  6EE6               	movwf	postinc1,c
  8037  01808A  0E00               	movlw	0
  8038  01808C  6EE6               	movwf	postinc1,c
  8039  01808E  0E00               	movlw	0
  8040  018090  6EE6               	movwf	postinc1,c
  8041  018092  0E7A               	movlw	122
  8042  018094  6EE6               	movwf	postinc1,c
  8043  018096  0E44               	movlw	68
  8044  018098  6EE6               	movwf	postinc1,c
  8045  01809A  0E00               	movlw	0
  8046  01809C  6EE6               	movwf	postinc1,c
  8047  01809E  0E04               	movlw	4
  8048  0180A0  6EE6               	movwf	postinc1,c
  8049  0180A2  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  8050  0180A6  0060  F007  FFE6   	movff	btemp,postinc1
  8051  0180AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8052  0180B2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8053  0180B8  0060  F013  FFE6   	movff	btemp+3,postinc1
  8054  0180BE  EC3B  F0CA         	call	___fltol	;wreg free
  8055  0180C2  0060  F007  FFE6   	movff	btemp,postinc1
  8056  0180C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8057  0180CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8058  0180D4  0060  F013  FFE6   	movff	btemp+3,postinc1
  8059  0180DA  0E00               	movlw	0
  8060  0180DC  6EE6               	movwf	postinc1,c
  8061  0180DE  EC3D  F0C5         	call	___xxtofl	;wreg free
  8062  0180E2  0060  F007  FFE6   	movff	btemp,postinc1
  8063  0180E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8064  0180EE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8065  0180F4  0060  F013  FFE6   	movff	btemp+3,postinc1
  8066  0180FA  EC20  F09F         	call	___flmul	;wreg free
  8067  0180FE  0060  F007  FFE6   	movff	btemp,postinc1
  8068  018104  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8069  01810A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8070  018110  0060  F013  FFE6   	movff	btemp+3,postinc1
  8071  018116  EC3B  F0CA         	call	___fltol	;wreg free
  8072  01811A  0060  F007  FFE6   	movff	btemp,postinc1
  8073  018120  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8074  018126  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8075  01812C  0060  F013  FFE6   	movff	btemp+3,postinc1
  8076  018132  EC1C  F0D6         	call	_Volts_to_SOC	;wreg free
  8077  018136  0060  F004  F00B   	movff	btemp,btemp+10
  8078  01813C  0060  F008  F00C   	movff	btemp+1,btemp+11
  8079  018142  500B               	movf	(btemp+10)^0,w,c
  8080  018144  6E05               	movwf	(btemp+4)^0,c
  8081  018146  500C               	movf	(btemp+11)^0,w,c
  8082  018148  6E06               	movwf	(btemp+5)^0,c
  8083  01814A  6A07               	clrf	(btemp+6)^0,c
  8084  01814C  6A08               	clrf	(btemp+7)^0,c
  8085  01814E  0060  F017  FFE6   	movff	btemp+4,postinc1
  8086  018154  0060  F01B  FFE6   	movff	btemp+5,postinc1
  8087  01815A  0060  F01F  FFE6   	movff	btemp+6,postinc1
  8088  018160  0060  F023  FFE6   	movff	btemp+7,postinc1
  8089  018166  0E00               	movlw	0
  8090  018168  6EE6               	movwf	postinc1,c
  8091  01816A  EC3D  F0C5         	call	___xxtofl	;wreg free
  8092  01816E  0060  F007  FFE6   	movff	btemp,postinc1
  8093  018174  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8094  01817A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8095  018180  0060  F013  FFE6   	movff	btemp+3,postinc1
  8096  018186  EC13  F0A7         	call	___fldiv	;wreg free
  8097  01818A  0060  F007  FFE6   	movff	btemp,postinc1
  8098  018190  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8099  018196  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8100  01819C  0060  F013  FFE6   	movff	btemp+3,postinc1
  8101  0181A2  EC20  F09F         	call	___flmul	;wreg free
  8102  0181A6  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  8103  0181AC  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  8104  0181B2  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  8105  0181B8  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  8106                           
  8107                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
  8108  0181BE  EE21  F38F         	lfsr	2,_C+144	;volatile
  8109  0181C2  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  8110  0181C8  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  8111  0181CE  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  8112  0181D4  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  8113                           
  8114                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
  8115  0181DA  0ED2               	movlw	low _calc_bsoc
  8116  0181DC  6EE6               	movwf	postinc1,c
  8117  0181DE  0E33               	movlw	high _calc_bsoc
  8118  0181E0  6EE6               	movwf	postinc1,c
  8119  0181E2  0E01               	movlw	low (_calc_bsoc shr (0+16))
  8120  0181E4  6EE6               	movwf	postinc1,c
  8121  0181E6  EC3B  F0E3         	call	_TMR3_SetInterruptHandler	;wreg free
  8122                           
  8123                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8124  0181EA  0012               	return		;funcret
  8125  0181EC                     __end_of_init_bsoc:
  8126                           	opt callstack 0
  8127                           
  8128 ;; *************** function _Volts_to_SOC *****************
  8129 ;; Defined at:
  8130 ;;		line 175 in file "bsoc.c"
  8131 ;; Parameters:    Size  Location     Type
  8132 ;;  cvoltage        4  [STACK] const unsigned long 
  8133 ;; Auto vars:     Size  Location     Type
  8134 ;;  soc             2  [STACK] unsigned short 
  8135 ;;  slot            1  [STACK] unsigned char 
  8136 ;; Return value:  Size  Location     Type
  8137 ;;                  2  [STACK] unsigned short 
  8138 ;; Registers used:
  8139 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8140 ;; Tracked objects:
  8141 ;;		On entry : 0/0
  8142 ;;		On exit  : 0/0
  8143 ;;		Unchanged: 0/0
  8144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8149 ;;Total ram usage:        0 bytes
  8150 ;; Hardware stack levels used:    1
  8151 ;; Hardware stack levels required when called:   15
  8152 ;; This function calls:
  8153 ;;		Nothing
  8154 ;; This function is called by:
  8155 ;;		_init_bsoc
  8156 ;; This function uses a reentrant model
  8157 ;;
  8158                           
  8159                           	psect	text17
  8160  01AC38                     __ptext17:
  8161                           	opt callstack 0
  8162  01AC38                     _Volts_to_SOC:
  8163                           	opt callstack 0
  8164                           
  8165                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8166  01AC38  52E6               	movf	postinc1,f,c
  8167  01AC3A  52E6               	movf	postinc1,f,c
  8168  01AC3C  52E6               	movf	postinc1,f,c
  8169                           
  8170                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
  8171                           ;stkvar	_soc @ sp[(-3)+0]
  8172                           
  8173                           ;incstack = 0
  8174  01AC3E  0EFD               	movlw	-3
  8175  01AC40  6AE3               	clrf	plusw1,c
  8176  01AC42  0EFE               	movlw	-2
  8177  01AC44  6AE3               	clrf	plusw1,c
  8178                           
  8179                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
  8180                           ;stkvar	_slot @ sp[(-3)+2]
  8181  01AC46  0EFF               	movlw	-1
  8182  01AC48  6AE3               	clrf	plusw1,c
  8183  01AC4A                     l11135:
  8184                           
  8185                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  8186                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  8187                           ;stkvar	_slot @ sp[(-3)+2]
  8188  01AC4A  0EFF               	movlw	-1
  8189  01AC4C  50E3               	movf	plusw1,w,c
  8190  01AC4E  0D08               	mullw	8
  8191  01AC50  0E0D               	movlw	low _BVSOC_TABLE
  8192  01AC52  24F3               	addwf	243,w,c
  8193  01AC54  6EF6               	movwf	tblptrl,c
  8194  01AC56  0EF9               	movlw	high _BVSOC_TABLE
  8195  01AC58  20F4               	addwfc	244,w,c
  8196  01AC5A  6EF7               	movwf	tblptrh,c
  8197  01AC5C                     	if	1	;There are 3 active tblptr bytes
  8198  01AC5C  6AF8               	clrf	tblptru,c
  8199  01AC5E  0E00               	movlw	low (__mediumconst shr (0+16))
  8200  01AC60  22F8               	addwfc	tblptru,f,c
  8201  01AC62                     	endif
  8202  01AC62  0EF9               	movlw	-7
  8203  01AC64  50E3               	movf	plusw1,w,c
  8204  01AC66  0009               	tblrd		*+
  8205  01AC68  5CF5               	subwf	tablat,w,c
  8206  01AC6A  0EFA               	movlw	-6
  8207  01AC6C  50E3               	movf	plusw1,w,c
  8208  01AC6E  0009               	tblrd		*+
  8209  01AC70  58F5               	subwfb	tablat,w,c
  8210  01AC72  0EFB               	movlw	-5
  8211  01AC74  50E3               	movf	plusw1,w,c
  8212  01AC76  0009               	tblrd		*+
  8213  01AC78  58F5               	subwfb	tablat,w,c
  8214  01AC7A  0EFC               	movlw	-4
  8215  01AC7C  50E3               	movf	plusw1,w,c
  8216  01AC7E  0009               	tblrd		*+
  8217  01AC80  58F5               	subwfb	tablat,w,c
  8218  01AC82  B0D8               	btfsc	status,0,c
  8219  01AC84  D020               	goto	l11139
  8220                           
  8221                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
  8222                           ;stkvar	_slot @ sp[(-3)+2]
  8223  01AC86  0EFF               	movlw	-1
  8224  01AC88  50E3               	movf	plusw1,w,c
  8225  01AC8A  0D08               	mullw	8
  8226  01AC8C  0E04               	movlw	4
  8227  01AC8E  26F3               	addwf	243,f,c
  8228  01AC90  0E00               	movlw	0
  8229  01AC92  22F4               	addwfc	244,f,c
  8230  01AC94  0E0D               	movlw	low _BVSOC_TABLE
  8231  01AC96  24F3               	addwf	243,w,c
  8232  01AC98  6EF6               	movwf	tblptrl,c
  8233  01AC9A  0EF9               	movlw	high _BVSOC_TABLE
  8234  01AC9C  20F4               	addwfc	244,w,c
  8235  01AC9E  6EF7               	movwf	tblptrh,c
  8236  01ACA0                     	if	1	;There are 3 active tblptr bytes
  8237  01ACA0  6AF8               	clrf	tblptru,c
  8238  01ACA2  0E00               	movlw	low (__mediumconst shr (0+16))
  8239  01ACA4  22F8               	addwfc	tblptru,f,c
  8240  01ACA6                     	endif
  8241  01ACA6  0009               	tblrd		*+
  8242  01ACA8  006F FFD4  F00B    	movff	tablat,btemp+10
  8243  01ACAE  0009               	tblrd		*+
  8244  01ACB0  006F FFD4  F00C    	movff	tablat,btemp+11
  8245                           
  8246                           ;stkvar	_soc @ sp[(-3)+0]
  8247  01ACB6  0EFD               	movlw	-3
  8248  01ACB8  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8249  01ACBE  0EFE               	movlw	-2
  8250  01ACC0  0060  F033  FFE3   	movff	btemp+11,plusw1
  8251  01ACC6                     l11139:
  8252                           
  8253                           ;bsoc.c: 187:  }
  8254                           ;stkvar	_slot @ sp[(-3)+2]
  8255  01ACC6  0EFF               	movlw	-1
  8256  01ACC8  2AE3               	incf	plusw1,f,c
  8257                           
  8258                           ;stkvar	_slot @ sp[(-3)+2]
  8259  01ACCA  0EFF               	movlw	-1
  8260  01ACCC  006F FF8C  F001    	movff	plusw1,btemp
  8261  01ACD2  0E19               	movlw	25
  8262  01ACD4  6401               	cpfsgt	btemp^0,c
  8263  01ACD6  D7B9               	goto	l11135
  8264                           
  8265                           ;bsoc.c: 188:  return soc;
  8266                           ;stkvar	_soc @ sp[(-3)+0]
  8267  01ACD8  0EFD               	movlw	-3
  8268  01ACDA  006F FF8C  F001    	movff	plusw1,btemp
  8269  01ACE0  0EFE               	movlw	-2
  8270  01ACE2  006F FF8C  F002    	movff	plusw1,btemp+1
  8271                           
  8272                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  8273  01ACE8  0EF9               	movlw	249
  8274  01ACEA  26E1               	addwf	fsr1l,f,c
  8275  01ACEC  0EFF               	movlw	255
  8276  01ACEE  22E2               	addwfc	fsr1h,f,c
  8277  01ACF0  0012               	return		;funcret
  8278  01ACF2                     __end_of_Volts_to_SOC:
  8279                           	opt callstack 0
  8280                           
  8281 ;; *************** function _hid_display *****************
  8282 ;; Defined at:
  8283 ;;		line 22 in file "hid.c"
  8284 ;; Parameters:    Size  Location     Type
  8285 ;;  h               2  [STACK] PTR struct H_data
  8286 ;;		 -> H(9), 
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;		None
  8289 ;; Return value:  Size  Location     Type
  8290 ;;                  2  [STACK] PTR struct H_data
  8291 ;; Registers used:
  8292 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  8293 ;; Tracked objects:
  8294 ;;		On entry : 3F/39
  8295 ;;		On exit  : 0/0
  8296 ;;		Unchanged: 0/0
  8297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8302 ;;Total ram usage:        0 bytes
  8303 ;; Hardware stack levels used:    1
  8304 ;; Hardware stack levels required when called:   17
  8305 ;; This function calls:
  8306 ;;		_hid_input
  8307 ;; This function is called by:
  8308 ;;		_main
  8309 ;; This function uses a reentrant model
  8310 ;;
  8311                           
  8312                           	psect	text18
  8313  01864C                     __ptext18:
  8314                           	opt callstack 0
  8315  01864C                     _hid_display:
  8316                           	opt callstack 13
  8317                           
  8318                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
  8319                           ;stkvar	_h @ sp[(0)+-2]
  8320                           
  8321                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8322                           ;incstack = 0
  8323  01864C  0EFE               	movlw	-2
  8324  01864E  006F FF8F FFE6     	movff	plusw1,postinc1
  8325  018654  006F FF8F FFE6     	movff	plusw1,postinc1
  8326  01865A  EC3F  F0CE         	call	_hid_input	;wreg free
  8327                           
  8328                           ;hid.c: 26:  switch (h->h_state) {
  8329  01865E  D0E6               	goto	l13665
  8330  018660                     l13639:
  8331                           
  8332                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
  8333                           ;stkvar	_h @ sp[(0)+-2]
  8334  018660  0EFE               	movlw	-2
  8335  018662  006F FF8C  F00B    	movff	plusw1,btemp+10
  8336  018668  0EFF               	movlw	-1
  8337  01866A  006F FF8C  F00C    	movff	plusw1,btemp+11
  8338  018670  0E01               	movlw	1
  8339  018672  240B               	addwf	(btemp+10)^0,w,c
  8340  018674  6ED9               	movwf	fsr2l,c
  8341  018676  0E00               	movlw	0
  8342  018678  200C               	addwfc	(btemp+11)^0,w,c
  8343  01867A  6EDA               	movwf	fsr2h,c
  8344  01867C  0E01               	movlw	1
  8345  01867E  6EDF               	movwf	indf2,c
  8346                           
  8347                           ;hid.c: 29:   h->hid_display = HID_MAIN;
  8348                           ;stkvar	_h @ sp[(0)+-2]
  8349  018680  0EFE               	movlw	-2
  8350  018682  006F FF8F FFD9     	movff	plusw1,fsr2l
  8351  018688  0EFF               	movlw	-1
  8352  01868A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8353  018690  0E00               	movlw	0
  8354  018692  6EDF               	movwf	indf2,c
  8355                           
  8356                           ;hid.c: 30:   h->wait_enter = 1;
  8357                           ;stkvar	_h @ sp[(0)+-2]
  8358  018694  0EFE               	movlw	-2
  8359  018696  006F FF8C  F00B    	movff	plusw1,btemp+10
  8360  01869C  0EFF               	movlw	-1
  8361  01869E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8362  0186A4  0E04               	movlw	4
  8363  0186A6  240B               	addwf	(btemp+10)^0,w,c
  8364  0186A8  6ED9               	movwf	fsr2l,c
  8365  0186AA  0E00               	movlw	0
  8366  0186AC  200C               	addwfc	(btemp+11)^0,w,c
  8367  0186AE  6EDA               	movwf	fsr2h,c
  8368  0186B0  0E01               	movlw	1
  8369  0186B2  6EDF               	movwf	indf2,c
  8370                           
  8371                           ;hid.c: 31:   h->wait_select = 1;
  8372                           ;stkvar	_h @ sp[(0)+-2]
  8373  0186B4  0EFE               	movlw	-2
  8374  0186B6  006F FF8C  F00B    	movff	plusw1,btemp+10
  8375  0186BC  0EFF               	movlw	-1
  8376  0186BE  006F FF8C  F00C    	movff	plusw1,btemp+11
  8377  0186C4  0E02               	movlw	2
  8378  0186C6  240B               	addwf	(btemp+10)^0,w,c
  8379  0186C8  6ED9               	movwf	fsr2l,c
  8380  0186CA  0E00               	movlw	0
  8381  0186CC  200C               	addwfc	(btemp+11)^0,w,c
  8382  0186CE  6EDA               	movwf	fsr2h,c
  8383  0186D0  0E01               	movlw	1
  8384  0186D2  6EDF               	movwf	indf2,c
  8385                           
  8386                           ;hid.c: 32:   h->wait_calib = 1;
  8387                           ;stkvar	_h @ sp[(0)+-2]
  8388  0186D4  0EFE               	movlw	-2
  8389  0186D6  006F FF8C  F00B    	movff	plusw1,btemp+10
  8390  0186DC  0EFF               	movlw	-1
  8391  0186DE  006F FF8C  F00C    	movff	plusw1,btemp+11
  8392  0186E4  0E06               	movlw	6
  8393  0186E6  240B               	addwf	(btemp+10)^0,w,c
  8394  0186E8  6ED9               	movwf	fsr2l,c
  8395  0186EA  0E00               	movlw	0
  8396  0186EC  200C               	addwfc	(btemp+11)^0,w,c
  8397  0186EE  6EDA               	movwf	fsr2h,c
  8398  0186F0  0E01               	movlw	1
  8399  0186F2  6EDF               	movwf	indf2,c
  8400                           
  8401                           ;hid.c: 33:   h->select_p = SW_OFF;
  8402                           ;stkvar	_h @ sp[(0)+-2]
  8403  0186F4  0EFE               	movlw	-2
  8404  0186F6  006F FF8C  F00B    	movff	plusw1,btemp+10
  8405  0186FC  0EFF               	movlw	-1
  8406  0186FE  006F FF8C  F00C    	movff	plusw1,btemp+11
  8407  018704  0E03               	movlw	3
  8408  018706  240B               	addwf	(btemp+10)^0,w,c
  8409  018708  6ED9               	movwf	fsr2l,c
  8410  01870A  0E00               	movlw	0
  8411  01870C  200C               	addwfc	(btemp+11)^0,w,c
  8412  01870E  6EDA               	movwf	fsr2h,c
  8413  018710  0E00               	movlw	0
  8414  018712  6EDF               	movwf	indf2,c
  8415                           
  8416                           ;hid.c: 34:   h->enter_p = SW_OFF;
  8417                           ;stkvar	_h @ sp[(0)+-2]
  8418  018714  0EFE               	movlw	-2
  8419  018716  006F FF8C  F00B    	movff	plusw1,btemp+10
  8420  01871C  0EFF               	movlw	-1
  8421  01871E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8422  018724  0E05               	movlw	5
  8423  018726  240B               	addwf	(btemp+10)^0,w,c
  8424  018728  6ED9               	movwf	fsr2l,c
  8425  01872A  0E00               	movlw	0
  8426  01872C  200C               	addwfc	(btemp+11)^0,w,c
  8427  01872E  6EDA               	movwf	fsr2h,c
  8428  018730  0E00               	movlw	0
  8429  018732  6EDF               	movwf	indf2,c
  8430                           
  8431                           ;hid.c: 35:   h->calib_p = SW_OFF;
  8432                           ;stkvar	_h @ sp[(0)+-2]
  8433  018734  0EFE               	movlw	-2
  8434  018736  006F FF8C  F00B    	movff	plusw1,btemp+10
  8435  01873C  0EFF               	movlw	-1
  8436  01873E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8437  018744  0E07               	movlw	7
  8438  018746  240B               	addwf	(btemp+10)^0,w,c
  8439  018748  6ED9               	movwf	fsr2l,c
  8440  01874A  0E00               	movlw	0
  8441  01874C  200C               	addwfc	(btemp+11)^0,w,c
  8442  01874E  6EDA               	movwf	fsr2h,c
  8443  018750  0E00               	movlw	0
  8444  018752  D06A               	goto	L4
  8445  018754                     l13655:
  8446                           
  8447                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  8448                           ;stkvar	_h @ sp[(0)+-2]
  8449  018754  0EFE               	movlw	-2
  8450  018756  006F FF8C  F00B    	movff	plusw1,btemp+10
  8451  01875C  0EFF               	movlw	-1
  8452  01875E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8453  018764  0E02               	movlw	2
  8454  018766  240B               	addwf	(btemp+10)^0,w,c
  8455  018768  6ED9               	movwf	fsr2l,c
  8456  01876A  0E00               	movlw	0
  8457  01876C  200C               	addwfc	(btemp+11)^0,w,c
  8458  01876E  6EDA               	movwf	fsr2h,c
  8459  018770  50DF               	movf	indf2,w,c
  8460  018772  A4D8               	btfss	status,2,c
  8461  018774  D076               	goto	l2086
  8462                           
  8463                           ;stkvar	_h @ sp[(0)+-2]
  8464  018776  0EFE               	movlw	-2
  8465  018778  006F FF8C  F00B    	movff	plusw1,btemp+10
  8466  01877E  0EFF               	movlw	-1
  8467  018780  006F FF8C  F00C    	movff	plusw1,btemp+11
  8468  018786  0E03               	movlw	3
  8469  018788  240B               	addwf	(btemp+10)^0,w,c
  8470  01878A  6ED9               	movwf	fsr2l,c
  8471  01878C  0E00               	movlw	0
  8472  01878E  200C               	addwfc	(btemp+11)^0,w,c
  8473  018790  6EDA               	movwf	fsr2h,c
  8474  018792  50DF               	movf	indf2,w,c
  8475  018794  A4D8               	btfss	status,2,c
  8476  018796  D065               	goto	l2086
  8477                           
  8478                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
  8479                           ;stkvar	_h @ sp[(0)+-2]
  8480  018798  0EFE               	movlw	-2
  8481  01879A  006F FF8C  F00B    	movff	plusw1,btemp+10
  8482  0187A0  0EFF               	movlw	-1
  8483  0187A2  006F FF8C  F00C    	movff	plusw1,btemp+11
  8484  0187A8  0E08               	movlw	8
  8485  0187AA  240B               	addwf	(btemp+10)^0,w,c
  8486  0187AC  6ED9               	movwf	fsr2l,c
  8487  0187AE  0E00               	movlw	0
  8488  0187B0  200C               	addwfc	(btemp+11)^0,w,c
  8489  0187B2  6EDA               	movwf	fsr2h,c
  8490                           
  8491                           ;stkvar	_h @ sp[(0)+-2]
  8492  0187B4  0EFE               	movlw	-2
  8493  0187B6  006F FF8C  F00B    	movff	plusw1,btemp+10
  8494  0187BC  0EFF               	movlw	-1
  8495  0187BE  006F FF8C  F00C    	movff	plusw1,btemp+11
  8496  0187C4  0E08               	movlw	8
  8497  0187C6  240B               	addwf	(btemp+10)^0,w,c
  8498  0187C8  6EE9               	movwf	fsr0l,c
  8499  0187CA  0E00               	movlw	0
  8500  0187CC  200C               	addwfc	(btemp+11)^0,w,c
  8501  0187CE  6EEA               	movwf	fsr0h,c
  8502  0187D0  2AEF               	incf	indf0,f,c
  8503  0187D2  50EF               	movf	indf0,w,c
  8504  0187D4  0B03               	andlw	3
  8505  0187D6  6EDF               	movwf	indf2,c
  8506                           
  8507                           ;hid.c: 41:    h->hid_display = h->sequence;
  8508                           ;stkvar	_h @ sp[(0)+-2]
  8509  0187D8  0EFE               	movlw	-2
  8510  0187DA  006F FF8C  F00B    	movff	plusw1,btemp+10
  8511  0187E0  0EFF               	movlw	-1
  8512  0187E2  006F FF8C  F00C    	movff	plusw1,btemp+11
  8513  0187E8  0E08               	movlw	8
  8514  0187EA  240B               	addwf	(btemp+10)^0,w,c
  8515  0187EC  6ED9               	movwf	fsr2l,c
  8516  0187EE  0E00               	movlw	0
  8517  0187F0  200C               	addwfc	(btemp+11)^0,w,c
  8518  0187F2  6EDA               	movwf	fsr2h,c
  8519                           
  8520                           ;stkvar	_h @ sp[(0)+-2]
  8521  0187F4  0EFE               	movlw	-2
  8522  0187F6  006F FF8F FFE9     	movff	plusw1,fsr0l
  8523  0187FC  0EFF               	movlw	-1
  8524  0187FE  006F FF8F FFEA     	movff	plusw1,fsr0h
  8525  018804  006F FF7F FFEF     	movff	indf2,indf0
  8526                           
  8527                           ;hid.c: 42:    h->wait_select = 1;
  8528                           ;stkvar	_h @ sp[(0)+-2]
  8529  01880A  0EFE               	movlw	-2
  8530  01880C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8531  018812  0EFF               	movlw	-1
  8532  018814  006F FF8C  F00C    	movff	plusw1,btemp+11
  8533  01881A  0E02               	movlw	2
  8534  01881C  240B               	addwf	(btemp+10)^0,w,c
  8535  01881E  6ED9               	movwf	fsr2l,c
  8536  018820  0E00               	movlw	0
  8537  018822  200C               	addwfc	(btemp+11)^0,w,c
  8538  018824  6EDA               	movwf	fsr2h,c
  8539  018826  0E01               	movlw	1
  8540  018828                     L4:
  8541  018828  6EDF               	movwf	indf2,c
  8542  01882A  D01B               	goto	l2086
  8543  01882C                     l13665:
  8544                           
  8545                           ;stkvar	_h @ sp[(0)+-2]
  8546  01882C  0EFE               	movlw	-2
  8547  01882E  006F FF8C  F00B    	movff	plusw1,btemp+10
  8548  018834  0EFF               	movlw	-1
  8549  018836  006F FF8C  F00C    	movff	plusw1,btemp+11
  8550  01883C  0E01               	movlw	1
  8551  01883E  240B               	addwf	(btemp+10)^0,w,c
  8552  018840  6ED9               	movwf	fsr2l,c
  8553  018842  0E00               	movlw	0
  8554  018844  200C               	addwfc	(btemp+11)^0,w,c
  8555  018846  6EDA               	movwf	fsr2h,c
  8556  018848  50DF               	movf	indf2,w,c
  8557  01884A  6E0B               	movwf	(btemp+10)^0,c
  8558  01884C  6A0C               	clrf	(btemp+11)^0,c
  8559                           
  8560                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8561                           ; Switch size 1, requested type "simple"
  8562                           ; Number of cases is 1, Range of values is 0 to 0
  8563                           ; switch strategies available:
  8564                           ; Name         Instructions Cycles
  8565                           ; simple_byte            4     3 (average)
  8566                           ;	Chosen strategy is simple_byte
  8567  01884E  500C               	movf	(btemp+11)^0,w,c
  8568  018850  0A00               	xorlw	0	; case 0
  8569  018852  A4D8               	btfss	status,2,c
  8570  018854  D77F               	goto	l13655
  8571                           
  8572                           ; Switch size 1, requested type "simple"
  8573                           ; Number of cases is 2, Range of values is 0 to 1
  8574                           ; switch strategies available:
  8575                           ; Name         Instructions Cycles
  8576                           ; simple_byte            7     4 (average)
  8577                           ;	Chosen strategy is simple_byte
  8578  018856  500B               	movf	(btemp+10)^0,w,c
  8579  018858  0A00               	xorlw	0	; case 0
  8580  01885A  B4D8               	btfsc	status,2,c
  8581  01885C  D701               	goto	l13639
  8582  01885E  0A01               	xorlw	1	; case 1
  8583  018860  D779               	goto	l13655
  8584  018862                     l2086:
  8585                           
  8586                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  8587  018862  52E5               	movf	postdec1,f,c
  8588  018864  52E5               	movf	postdec1,f,c
  8589  018866  0012               	return		;funcret
  8590  018868                     __end_of_hid_display:
  8591                           	opt callstack 0
  8592                           
  8593 ;; *************** function _hid_input *****************
  8594 ;; Defined at:
  8595 ;;		line 3 in file "hid.c"
  8596 ;; Parameters:    Size  Location     Type
  8597 ;;  h               2  [STACK] PTR struct H_data
  8598 ;;		 -> H(9), 
  8599 ;; Auto vars:     Size  Location     Type
  8600 ;;		None
  8601 ;; Return value:  Size  Location     Type
  8602 ;;                  2  [STACK] PTR struct H_data
  8603 ;; Registers used:
  8604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8605 ;; Tracked objects:
  8606 ;;		On entry : 0/39
  8607 ;;		On exit  : 0/0
  8608 ;;		Unchanged: 0/0
  8609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8614 ;;Total ram usage:        0 bytes
  8615 ;; Hardware stack levels used:    1
  8616 ;; Hardware stack levels required when called:   16
  8617 ;; This function calls:
  8618 ;;		_get_switch
  8619 ;; This function is called by:
  8620 ;;		_hid_display
  8621 ;; This function uses a reentrant model
  8622 ;;
  8623                           
  8624                           	psect	text19
  8625  019C7E                     __ptext19:
  8626                           	opt callstack 0
  8627  019C7E                     _hid_input:
  8628                           	opt callstack 13
  8629                           
  8630                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  8631                           
  8632                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8633                           ;incstack = 0
  8634  019C7E  0E02               	movlw	2
  8635  019C80  6EE6               	movwf	postinc1,c
  8636  019C82  EC57  F0E2         	call	_get_switch	;wreg free
  8637  019C86  5001               	movf	btemp^0,w,c
  8638  019C88  B4D8               	btfsc	status,2,c
  8639  019C8A  D02C               	goto	l13409
  8640                           
  8641                           ;hid.c: 6:   h->wait_select = 0;
  8642                           ;stkvar	_h @ sp[(0)+-2]
  8643  019C8C  0EFE               	movlw	-2
  8644  019C8E  006F FF8C  F00B    	movff	plusw1,btemp+10
  8645  019C94  0EFF               	movlw	-1
  8646  019C96  006F FF8C  F00C    	movff	plusw1,btemp+11
  8647  019C9C  0E02               	movlw	2
  8648  019C9E  240B               	addwf	(btemp+10)^0,w,c
  8649  019CA0  6ED9               	movwf	fsr2l,c
  8650  019CA2  0E00               	movlw	0
  8651  019CA4  200C               	addwfc	(btemp+11)^0,w,c
  8652  019CA6  6EDA               	movwf	fsr2h,c
  8653  019CA8  0E00               	movlw	0
  8654  019CAA  6EDF               	movwf	indf2,c
  8655                           
  8656                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  8657  019CAC  0E02               	movlw	2
  8658  019CAE  6EE6               	movwf	postinc1,c
  8659  019CB0  EC57  F0E2         	call	_get_switch	;wreg free
  8660  019CB4  5001               	movf	btemp^0,w,c
  8661  019CB6  B4D8               	btfsc	status,2,c
  8662  019CB8  D003               	goto	u12790
  8663  019CBA  6A0C               	clrf	(btemp+11)^0,c
  8664  019CBC  2A0C               	incf	(btemp+11)^0,f,c
  8665  019CBE  D001               	goto	u12808
  8666  019CC0                     u12790:
  8667  019CC0  6A0C               	clrf	(btemp+11)^0,c
  8668  019CC2                     u12808:
  8669                           
  8670                           ;stkvar	_h @ sp[(0)+-2]
  8671  019CC2  0EFE               	movlw	-2
  8672  019CC4  006F FF8C  F009    	movff	plusw1,btemp+8
  8673  019CCA  0EFF               	movlw	-1
  8674  019CCC  006F FF8C  F00A    	movff	plusw1,btemp+9
  8675  019CD2  0E03               	movlw	3
  8676  019CD4  2409               	addwf	(btemp+8)^0,w,c
  8677  019CD6  6ED9               	movwf	fsr2l,c
  8678  019CD8  0E00               	movlw	0
  8679  019CDA  200A               	addwfc	(btemp+9)^0,w,c
  8680  019CDC  6EDA               	movwf	fsr2h,c
  8681  019CDE  0060  F033  FFDF   	movff	btemp+11,indf2
  8682  019CE4                     l13409:
  8683                           
  8684                           ;hid.c: 10:  if (get_switch(SENTER)) {
  8685  019CE4  0E03               	movlw	3
  8686  019CE6  6EE6               	movwf	postinc1,c
  8687  019CE8  EC57  F0E2         	call	_get_switch	;wreg free
  8688  019CEC  5001               	movf	btemp^0,w,c
  8689  019CEE  B4D8               	btfsc	status,2,c
  8690  019CF0  D02C               	goto	l13415
  8691                           
  8692                           ;hid.c: 11:   h->wait_enter = 0;
  8693                           ;stkvar	_h @ sp[(0)+-2]
  8694  019CF2  0EFE               	movlw	-2
  8695  019CF4  006F FF8C  F00B    	movff	plusw1,btemp+10
  8696  019CFA  0EFF               	movlw	-1
  8697  019CFC  006F FF8C  F00C    	movff	plusw1,btemp+11
  8698  019D02  0E04               	movlw	4
  8699  019D04  240B               	addwf	(btemp+10)^0,w,c
  8700  019D06  6ED9               	movwf	fsr2l,c
  8701  019D08  0E00               	movlw	0
  8702  019D0A  200C               	addwfc	(btemp+11)^0,w,c
  8703  019D0C  6EDA               	movwf	fsr2h,c
  8704  019D0E  0E00               	movlw	0
  8705  019D10  6EDF               	movwf	indf2,c
  8706                           
  8707                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  8708  019D12  0E03               	movlw	3
  8709  019D14  6EE6               	movwf	postinc1,c
  8710  019D16  EC57  F0E2         	call	_get_switch	;wreg free
  8711  019D1A  5001               	movf	btemp^0,w,c
  8712  019D1C  B4D8               	btfsc	status,2,c
  8713  019D1E  D003               	goto	u12820
  8714  019D20  6A0C               	clrf	(btemp+11)^0,c
  8715  019D22  2A0C               	incf	(btemp+11)^0,f,c
  8716  019D24  D001               	goto	u12838
  8717  019D26                     u12820:
  8718  019D26  6A0C               	clrf	(btemp+11)^0,c
  8719  019D28                     u12838:
  8720                           
  8721                           ;stkvar	_h @ sp[(0)+-2]
  8722  019D28  0EFE               	movlw	-2
  8723  019D2A  006F FF8C  F009    	movff	plusw1,btemp+8
  8724  019D30  0EFF               	movlw	-1
  8725  019D32  006F FF8C  F00A    	movff	plusw1,btemp+9
  8726  019D38  0E05               	movlw	5
  8727  019D3A  2409               	addwf	(btemp+8)^0,w,c
  8728  019D3C  6ED9               	movwf	fsr2l,c
  8729  019D3E  0E00               	movlw	0
  8730  019D40  200A               	addwfc	(btemp+9)^0,w,c
  8731  019D42  6EDA               	movwf	fsr2h,c
  8732  019D44  0060  F033  FFDF   	movff	btemp+11,indf2
  8733  019D4A                     l13415:
  8734                           
  8735                           ;hid.c: 15:  if (get_switch(SCALIB)) {
  8736  019D4A  0E04               	movlw	4
  8737  019D4C  6EE6               	movwf	postinc1,c
  8738  019D4E  EC57  F0E2         	call	_get_switch	;wreg free
  8739  019D52  5001               	movf	btemp^0,w,c
  8740  019D54  B4D8               	btfsc	status,2,c
  8741  019D56  D02C               	goto	l2077
  8742                           
  8743                           ;hid.c: 16:   h->wait_calib = 0;
  8744                           ;stkvar	_h @ sp[(0)+-2]
  8745  019D58  0EFE               	movlw	-2
  8746  019D5A  006F FF8C  F00B    	movff	plusw1,btemp+10
  8747  019D60  0EFF               	movlw	-1
  8748  019D62  006F FF8C  F00C    	movff	plusw1,btemp+11
  8749  019D68  0E06               	movlw	6
  8750  019D6A  240B               	addwf	(btemp+10)^0,w,c
  8751  019D6C  6ED9               	movwf	fsr2l,c
  8752  019D6E  0E00               	movlw	0
  8753  019D70  200C               	addwfc	(btemp+11)^0,w,c
  8754  019D72  6EDA               	movwf	fsr2h,c
  8755  019D74  0E00               	movlw	0
  8756  019D76  6EDF               	movwf	indf2,c
  8757                           
  8758                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
  8759  019D78  0E04               	movlw	4
  8760  019D7A  6EE6               	movwf	postinc1,c
  8761  019D7C  EC57  F0E2         	call	_get_switch	;wreg free
  8762  019D80  5001               	movf	btemp^0,w,c
  8763  019D82  B4D8               	btfsc	status,2,c
  8764  019D84  D003               	goto	u12850
  8765  019D86  6A0C               	clrf	(btemp+11)^0,c
  8766  019D88  2A0C               	incf	(btemp+11)^0,f,c
  8767  019D8A  D001               	goto	u12868
  8768  019D8C                     u12850:
  8769  019D8C  6A0C               	clrf	(btemp+11)^0,c
  8770  019D8E                     u12868:
  8771                           
  8772                           ;stkvar	_h @ sp[(0)+-2]
  8773  019D8E  0EFE               	movlw	-2
  8774  019D90  006F FF8C  F009    	movff	plusw1,btemp+8
  8775  019D96  0EFF               	movlw	-1
  8776  019D98  006F FF8C  F00A    	movff	plusw1,btemp+9
  8777  019D9E  0E07               	movlw	7
  8778  019DA0  2409               	addwf	(btemp+8)^0,w,c
  8779  019DA2  6ED9               	movwf	fsr2l,c
  8780  019DA4  0E00               	movlw	0
  8781  019DA6  200A               	addwfc	(btemp+9)^0,w,c
  8782  019DA8  6EDA               	movwf	fsr2h,c
  8783  019DAA  0060  F033  FFDF   	movff	btemp+11,indf2
  8784  019DB0                     l2077:
  8785                           
  8786                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
  8787  019DB0  52E5               	movf	postdec1,f,c
  8788  019DB2  52E5               	movf	postdec1,f,c
  8789  019DB4  0012               	return		;funcret
  8790  019DB6                     __end_of_hid_input:
  8791                           	opt callstack 0
  8792                           
  8793 ;; *************** function _esr_check *****************
  8794 ;; Defined at:
  8795 ;;		line 197 in file "bsoc.c"
  8796 ;; Parameters:    Size  Location     Type
  8797 ;;  fsm             1  [STACK] const unsigned char 
  8798 ;; Auto vars:     Size  Location     Type
  8799 ;;		None
  8800 ;; Return value:  Size  Location     Type
  8801 ;;                  4  [STACK] float 
  8802 ;; Registers used:
  8803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8804 ;; Tracked objects:
  8805 ;;		On entry : 0/0
  8806 ;;		On exit  : 0/0
  8807 ;;		Unchanged: 0/0
  8808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8813 ;;Total ram usage:        0 bytes
  8814 ;; Hardware stack levels used:    1
  8815 ;; Hardware stack levels required when called:   18
  8816 ;; This function calls:
  8817 ;;		_StartTimer
  8818 ;;		_TimerDone
  8819 ;;		___fldiv
  8820 ;;		___flsub
  8821 ;;		_conv_raw_result
  8822 ;;		_fabsf
  8823 ;;		_set_load_relay_one
  8824 ;;		_set_load_relay_two
  8825 ;;		_update_adc_result
  8826 ;; This function is called by:
  8827 ;;		_main
  8828 ;; This function uses a reentrant model
  8829 ;;
  8830                           
  8831                           	psect	text20
  8832  01751C                     __ptext20:
  8833                           	opt callstack 0
  8834  01751C                     _esr_check:
  8835                           	opt callstack 12
  8836                           
  8837                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
  8838                           ;stkvar	_fsm @ sp[(0)+-1]
  8839                           
  8840                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8841                           ;incstack = 0
  8842  01751C  0EFF               	movlw	-1
  8843  01751E  50E3               	movf	plusw1,w,c
  8844  017520  B4D8               	btfsc	status,2,c
  8845  017522  D149               	goto	l11475
  8846                           
  8847                           ;bsoc.c: 202:   esr_state = 0;
  8848  017524  0100               	movlb	0	; () banked
  8849  017526  6BA4               	clrf	esr_check@esr_state& (0+255),b
  8850                           
  8851                           ; BSR set to: 0
  8852                           ;bsoc.c: 203:   return -10.0;
  8853  017528  0E00               	movlw	0
  8854  01752A  6E01               	movwf	btemp^0,c
  8855  01752C  0E00               	movlw	0
  8856  01752E  6E02               	movwf	(btemp+1)^0,c
  8857  017530  0E20               	movlw	32
  8858  017532  6E03               	movwf	(btemp+2)^0,c
  8859  017534  0EC1               	movlw	193
  8860  017536  D15B               	goto	L5
  8861  017538                     l11407:
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
  8865  017538  0E10               	movlw	16
  8866  01753A  6EE6               	movwf	postinc1,c
  8867  01753C  0E27               	movlw	39
  8868  01753E  6EE6               	movwf	postinc1,c
  8869  017540  0E0C               	movlw	12
  8870  017542  6EE6               	movwf	postinc1,c
  8871  017544  EC6E  F0E0         	call	_StartTimer	;wreg free
  8872  017548                     l11409:
  8873                           
  8874                           ;bsoc.c: 209:   esr_state++;
  8875  017548  0100               	movlb	0	; () banked
  8876  01754A  2BA4               	incf	esr_check@esr_state& (0+255),f,b
  8877                           
  8878                           ;bsoc.c: 210:   break;
  8879  01754C  D149               	goto	l11477
  8880  01754E                     l11411:
  8881                           
  8882                           ; BSR set to: 0
  8883                           ;bsoc.c: 215:   set_load_relay_one(0);
  8884  01754E  0E00               	movlw	0
  8885  017550  6EE6               	movwf	postinc1,c
  8886  017552  EC55  F0E5         	call	_set_load_relay_one	;wreg free
  8887                           
  8888                           ;bsoc.c: 216:   set_load_relay_two(0);
  8889  017556  0E00               	movlw	0
  8890  017558  6EE6               	movwf	postinc1,c
  8891  01755A  EC4D  F0E5         	call	_set_load_relay_two	;wreg free
  8892                           
  8893                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
  8894  01755E  0E0C               	movlw	12
  8895  017560  6EE6               	movwf	postinc1,c
  8896  017562  ECC3  F0E2         	call	_TimerDone	;wreg free
  8897  017566  5001               	movf	btemp^0,w,c
  8898  017568  B4D8               	btfsc	status,2,c
  8899  01756A  D009               	goto	l11417
  8900                           
  8901                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
  8902  01756C  0E10               	movlw	16
  8903  01756E  6EE6               	movwf	postinc1,c
  8904  017570  0E27               	movlw	39
  8905  017572  6EE6               	movwf	postinc1,c
  8906  017574  0E0C               	movlw	12
  8907  017576  6EE6               	movwf	postinc1,c
  8908  017578  EC6E  F0E0         	call	_StartTimer	;wreg free
  8909                           
  8910                           ;bsoc.c: 219:   } else {
  8911  01757C  D006               	goto	l11421
  8912  01757E                     l11417:
  8913                           
  8914                           ;bsoc.c: 220:    return -2.0;
  8915  01757E  0E00               	movlw	0
  8916  017580  6E01               	movwf	btemp^0,c
  8917  017582  0E00               	movlw	0
  8918  017584  6E02               	movwf	(btemp+1)^0,c
  8919  017586  0E00               	movlw	0
  8920  017588  D066               	goto	L7
  8921  01758A                     l11421:
  8922                           
  8923                           ;bsoc.c: 225:   update_adc_result();
  8924  01758A  ECED  F0E0         	call	_update_adc_result	;wreg free
  8925                           
  8926                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  8927  01758E  0E00               	movlw	0
  8928  017590  6EE6               	movwf	postinc1,c
  8929  017592  0E04               	movlw	4
  8930  017594  6EE6               	movwf	postinc1,c
  8931  017596  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  8932  01759A  0060  F004  F815   	movff	btemp,_C+278	;volatile
  8933  0175A0  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  8934  0175A6  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  8935  0175AC  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  8936  0175B2  D7CA               	goto	l11409
  8937  0175B4                     l11427:
  8938                           
  8939                           ; BSR set to: 0
  8940                           ;bsoc.c: 230:   set_load_relay_one(1);
  8941  0175B4  0E01               	movlw	1
  8942  0175B6  6EE6               	movwf	postinc1,c
  8943  0175B8  EC55  F0E5         	call	_set_load_relay_one	;wreg free
  8944                           
  8945                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
  8946  0175BC  0E0C               	movlw	12
  8947  0175BE  6EE6               	movwf	postinc1,c
  8948  0175C0  ECC3  F0E2         	call	_TimerDone	;wreg free
  8949  0175C4  5001               	movf	btemp^0,w,c
  8950  0175C6  B4D8               	btfsc	status,2,c
  8951  0175C8  D009               	goto	l11433
  8952                           
  8953                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
  8954  0175CA  0E10               	movlw	16
  8955  0175CC  6EE6               	movwf	postinc1,c
  8956  0175CE  0E27               	movlw	39
  8957  0175D0  6EE6               	movwf	postinc1,c
  8958  0175D2  0E0C               	movlw	12
  8959  0175D4  6EE6               	movwf	postinc1,c
  8960  0175D6  EC6E  F0E0         	call	_StartTimer	;wreg free
  8961                           
  8962                           ;bsoc.c: 233:   } else {
  8963  0175DA  D006               	goto	l11437
  8964  0175DC                     l11433:
  8965                           
  8966                           ;bsoc.c: 234:    return -3.0;
  8967  0175DC  0E00               	movlw	0
  8968  0175DE  6E01               	movwf	btemp^0,c
  8969  0175E0  0E00               	movlw	0
  8970  0175E2  6E02               	movwf	(btemp+1)^0,c
  8971  0175E4  0E40               	movlw	64
  8972  0175E6  D037               	goto	L7
  8973  0175E8                     l11437:
  8974                           
  8975                           ;bsoc.c: 237:   update_adc_result();
  8976  0175E8  ECED  F0E0         	call	_update_adc_result	;wreg free
  8977                           
  8978                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  8979  0175EC  0E00               	movlw	0
  8980  0175EE  6EE6               	movwf	postinc1,c
  8981  0175F0  0E04               	movlw	4
  8982  0175F2  6EE6               	movwf	postinc1,c
  8983  0175F4  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  8984  0175F8  0060  F004  F819   	movff	btemp,_C+282	;volatile
  8985  0175FE  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  8986  017604  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  8987  01760A  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  8988                           
  8989                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  8990  017610  0E00               	movlw	0
  8991  017612  6EE6               	movwf	postinc1,c
  8992  017614  0E00               	movlw	0
  8993  017616  6EE6               	movwf	postinc1,c
  8994  017618  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  8995  01761C  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  8996  017622  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  8997  017628  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  8998  01762E  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  8999  017634  D789               	goto	l11409
  9000  017636                     l11445:
  9001                           
  9002                           ; BSR set to: 0
  9003                           ;bsoc.c: 243:   set_load_relay_two(1);
  9004  017636  0E01               	movlw	1
  9005  017638  6EE6               	movwf	postinc1,c
  9006  01763A  EC4D  F0E5         	call	_set_load_relay_two	;wreg free
  9007                           
  9008                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
  9009  01763E  0E0C               	movlw	12
  9010  017640  6EE6               	movwf	postinc1,c
  9011  017642  ECC3  F0E2         	call	_TimerDone	;wreg free
  9012  017646  5001               	movf	btemp^0,w,c
  9013  017648  A4D8               	btfss	status,2,c
  9014  01764A  D008               	goto	l11453
  9015                           
  9016                           ;bsoc.c: 245:    return -4.0;
  9017  01764C  0E00               	movlw	0
  9018  01764E  6E01               	movwf	btemp^0,c
  9019  017650  0E00               	movlw	0
  9020  017652  6E02               	movwf	(btemp+1)^0,c
  9021  017654  0E80               	movlw	128
  9022  017656                     L7:
  9023  017656  6E03               	movwf	(btemp+2)^0,c
  9024  017658  0EC0               	movlw	192
  9025  01765A  D0C9               	goto	L5
  9026  01765C                     l11453:
  9027                           
  9028                           ;bsoc.c: 247:   update_adc_result();
  9029  01765C  ECED  F0E0         	call	_update_adc_result	;wreg free
  9030                           
  9031                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  9032  017660  0E00               	movlw	0
  9033  017662  6EE6               	movwf	postinc1,c
  9034  017664  0E04               	movlw	4
  9035  017666  6EE6               	movwf	postinc1,c
  9036  017668  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  9037  01766C  0060  F004  F81D   	movff	btemp,_C+286	;volatile
  9038  017672  0060  F008  F81E   	movff	btemp+1,_C+287	;volatile
  9039  017678  0060  F00C  F81F   	movff	btemp+2,_C+288	;volatile
  9040  01767E  0060  F010  F820   	movff	btemp+3,_C+289	;volatile
  9041                           
  9042                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  9043  017684  0E00               	movlw	0
  9044  017686  6EE6               	movwf	postinc1,c
  9045  017688  0E00               	movlw	0
  9046  01768A  6EE6               	movwf	postinc1,c
  9047  01768C  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  9048  017690  0060  F004  F811   	movff	btemp,_C+274	;volatile
  9049  017696  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  9050  01769C  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  9051  0176A2  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  9052                           
  9053                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  9054  0176A8  EE22  F011         	lfsr	2,_C+274	;volatile
  9055  0176AC  006F FF7B FFE6     	movff	postinc2,postinc1
  9056  0176B2  006F FF7B FFE6     	movff	postinc2,postinc1
  9057  0176B8  006F FF7B FFE6     	movff	postinc2,postinc1
  9058  0176BE  006F FF7B FFE6     	movff	postinc2,postinc1
  9059  0176C4  EE22  F00D         	lfsr	2,_C+270	;volatile
  9060  0176C8  006F FF7B FFE6     	movff	postinc2,postinc1
  9061  0176CE  006F FF7B FFE6     	movff	postinc2,postinc1
  9062  0176D4  006F FF7B FFE6     	movff	postinc2,postinc1
  9063  0176DA  006F FF7B FFE6     	movff	postinc2,postinc1
  9064  0176E0  ECC8  F0DF         	call	___flsub	;wreg free
  9065  0176E4  0060  F007  FFE6   	movff	btemp,postinc1
  9066  0176EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9067  0176F0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9068  0176F6  0060  F013  FFE6   	movff	btemp+3,postinc1
  9069  0176FC  EE22  F01D         	lfsr	2,_C+286	;volatile
  9070  017700  006F FF7B FFE6     	movff	postinc2,postinc1
  9071  017706  006F FF7B FFE6     	movff	postinc2,postinc1
  9072  01770C  006F FF7B FFE6     	movff	postinc2,postinc1
  9073  017712  006F FF7B FFE6     	movff	postinc2,postinc1
  9074  017718  EE22  F019         	lfsr	2,_C+282	;volatile
  9075  01771C  006F FF7B FFE6     	movff	postinc2,postinc1
  9076  017722  006F FF7B FFE6     	movff	postinc2,postinc1
  9077  017728  006F FF7B FFE6     	movff	postinc2,postinc1
  9078  01772E  006F FF7B FFE6     	movff	postinc2,postinc1
  9079  017734  ECC8  F0DF         	call	___flsub	;wreg free
  9080  017738  0060  F007  FFE6   	movff	btemp,postinc1
  9081  01773E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9082  017744  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9083  01774A  0060  F013  FFE6   	movff	btemp+3,postinc1
  9084  017750  EC13  F0A7         	call	___fldiv	;wreg free
  9085  017754  0060  F007  FFE6   	movff	btemp,postinc1
  9086  01775A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9087  017760  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9088  017766  0060  F013  FFE6   	movff	btemp+3,postinc1
  9089  01776C  EC30  F0D7         	call	_fabsf	;wreg free
  9090  017770  0060  F004  F787   	movff	btemp,_C+136	;volatile
  9091  017776  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  9092  01777C  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  9093  017782  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  9094                           
  9095                           ;bsoc.c: 252:   set_load_relay_one(0);
  9096  017788  0E00               	movlw	0
  9097  01778A  6EE6               	movwf	postinc1,c
  9098  01778C  EC55  F0E5         	call	_set_load_relay_one	;wreg free
  9099                           
  9100                           ;bsoc.c: 253:   set_load_relay_two(0);
  9101  017790  0E00               	movlw	0
  9102  017792  6EE6               	movwf	postinc1,c
  9103  017794  EC4D  F0E5         	call	_set_load_relay_two	;wreg free
  9104                           
  9105                           ;bsoc.c: 254:   esr_state = 0;
  9106  017798  0100               	movlb	0	; () banked
  9107  01779A  6BA4               	clrf	esr_check@esr_state& (0+255),b
  9108                           
  9109                           ; BSR set to: 0
  9110                           ;bsoc.c: 255:   return C.esr;
  9111  01779C  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  9112  0177A2  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  9113  0177A8  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  9114  0177AE  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  9115  0177B4  D01D               	goto	l2202
  9116  0177B6                     l11475:
  9117  0177B6  0100               	movlb	0	; () banked
  9118  0177B8  51A4               	movf	esr_check@esr_state& (0+255),w,b
  9119  0177BA  6E0B               	movwf	(btemp+10)^0,c
  9120  0177BC  6A0C               	clrf	(btemp+11)^0,c
  9121                           
  9122                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9123                           ; Switch size 1, requested type "simple"
  9124                           ; Number of cases is 1, Range of values is 0 to 0
  9125                           ; switch strategies available:
  9126                           ; Name         Instructions Cycles
  9127                           ; simple_byte            4     3 (average)
  9128                           ;	Chosen strategy is simple_byte
  9129  0177BE  500C               	movf	(btemp+11)^0,w,c
  9130  0177C0  0A00               	xorlw	0	; case 0
  9131  0177C2  A4D8               	btfss	status,2,c
  9132  0177C4  D00D               	goto	l11477
  9133                           
  9134                           ; BSR set to: 0
  9135                           ; Switch size 1, requested type "simple"
  9136                           ; Number of cases is 4, Range of values is 0 to 3
  9137                           ; switch strategies available:
  9138                           ; Name         Instructions Cycles
  9139                           ; simple_byte           13     7 (average)
  9140                           ;	Chosen strategy is simple_byte
  9141  0177C6  500B               	movf	(btemp+10)^0,w,c
  9142  0177C8  0A00               	xorlw	0	; case 0
  9143  0177CA  B4D8               	btfsc	status,2,c
  9144  0177CC  D6B5               	goto	l11407
  9145  0177CE  0A01               	xorlw	1	; case 1
  9146  0177D0  B4D8               	btfsc	status,2,c
  9147  0177D2  D6BD               	goto	l11411
  9148  0177D4  0A03               	xorlw	3	; case 2
  9149  0177D6  B4D8               	btfsc	status,2,c
  9150  0177D8  D6ED               	goto	l11427
  9151  0177DA  0A01               	xorlw	1	; case 3
  9152  0177DC  B4D8               	btfsc	status,2,c
  9153  0177DE  D72B               	goto	l11445
  9154  0177E0                     l11477:
  9155                           
  9156                           ; BSR set to: 0
  9157                           ;bsoc.c: 260:  return -1.0;
  9158  0177E0  0E00               	movlw	0
  9159  0177E2  6E01               	movwf	btemp^0,c
  9160  0177E4  0E00               	movlw	0
  9161  0177E6  6E02               	movwf	(btemp+1)^0,c
  9162  0177E8  0E80               	movlw	128
  9163  0177EA  6E03               	movwf	(btemp+2)^0,c
  9164  0177EC  0EBF               	movlw	191
  9165  0177EE                     L5:
  9166  0177EE  6E04               	movwf	(btemp+3)^0,c
  9167  0177F0                     l2202:
  9168                           
  9169                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9170  0177F0  52E5               	movf	postdec1,f,c
  9171  0177F2  0012               	return		;funcret
  9172  0177F4                     __end_of_esr_check:
  9173                           	opt callstack 0
  9174                           
  9175 ;; *************** function _update_adc_result *****************
  9176 ;; Defined at:
  9177 ;;		line 99 in file "daq.c"
  9178 ;; Parameters:    Size  Location     Type
  9179 ;;		None
  9180 ;; Auto vars:     Size  Location     Type
  9181 ;;		None
  9182 ;; Return value:  Size  Location     Type
  9183 ;;                  1  [STACK] _Bool 
  9184 ;; Registers used:
  9185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  9186 ;; Tracked objects:
  9187 ;;		On entry : 0/0
  9188 ;;		On exit  : 0/0
  9189 ;;		Unchanged: 0/0
  9190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9195 ;;Total ram usage:        0 bytes
  9196 ;; Hardware stack levels used:    1
  9197 ;; Hardware stack levels required when called:   17
  9198 ;; This function calls:
  9199 ;;		_StartTimer
  9200 ;;		_TimerDone
  9201 ;;		_check_adc_scan
  9202 ;;		_clear_adc_scan
  9203 ;;		_start_adc_scan
  9204 ;; This function is called by:
  9205 ;;		_esr_check
  9206 ;; This function uses a reentrant model
  9207 ;;
  9208                           
  9209                           	psect	text21
  9210  01C1DA                     __ptext21:
  9211                           	opt callstack 0
  9212  01C1DA                     _update_adc_result:
  9213                           	opt callstack 12
  9214                           
  9215                           ;daq.c: 101:  if (R.done) {
  9216                           
  9217                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9218                           ;incstack = 0
  9219  01C1DA  0100               	movlb	0	; () banked
  9220  01C1DC  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  9221  01C1DE  B4D8               	btfsc	status,2,c
  9222  01C1E0  0012               	return	
  9223                           
  9224                           ; BSR set to: 0
  9225                           ;daq.c: 102:   clear_adc_scan();
  9226  01C1E2  ECC1  F0E5         	call	_clear_adc_scan	;wreg free
  9227                           
  9228                           ; BSR set to: 0
  9229                           ;daq.c: 103:   start_adc_scan();
  9230  01C1E6  EC07  F0DD         	call	_start_adc_scan	;wreg free
  9231                           
  9232                           ;daq.c: 104:   StartTimer(TMR_ADC, 200);
  9233  01C1EA  0EC8               	movlw	200
  9234  01C1EC  6EE6               	movwf	postinc1,c
  9235  01C1EE  0E00               	movlw	0
  9236  01C1F0  6EE6               	movwf	postinc1,c
  9237  01C1F2  0E01               	movlw	1
  9238  01C1F4  6EE6               	movwf	postinc1,c
  9239  01C1F6  EC6E  F0E0         	call	_StartTimer	;wreg free
  9240  01C1FA                     l10923:
  9241  01C1FA  0E01               	movlw	1
  9242  01C1FC  6EE6               	movwf	postinc1,c
  9243  01C1FE  ECC3  F0E2         	call	_TimerDone	;wreg free
  9244  01C202  5001               	movf	btemp^0,w,c
  9245  01C204  A4D8               	btfss	status,2,c
  9246  01C206  0012               	return	
  9247  01C208  ECAD  F0E5         	call	_check_adc_scan	;wreg free
  9248  01C20C  5001               	movf	btemp^0,w,c
  9249  01C20E  A4D8               	btfss	status,2,c
  9250  01C210  0012               	return	
  9251  01C212  D7F3               	goto	l10923
  9252  01C214                     __end_of_update_adc_result:
  9253                           	opt callstack 0
  9254                           
  9255 ;; *************** function _check_adc_scan *****************
  9256 ;; Defined at:
  9257 ;;		line 83 in file "daq.c"
  9258 ;; Parameters:    Size  Location     Type
  9259 ;;		None
  9260 ;; Auto vars:     Size  Location     Type
  9261 ;;		None
  9262 ;; Return value:  Size  Location     Type
  9263 ;;                  1  [STACK] _Bool 
  9264 ;; Registers used:
  9265 ;;		btemp
  9266 ;; Tracked objects:
  9267 ;;		On entry : 0/1
  9268 ;;		On exit  : 0/0
  9269 ;;		Unchanged: 0/0
  9270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9275 ;;Total ram usage:        0 bytes
  9276 ;; Hardware stack levels used:    1
  9277 ;; Hardware stack levels required when called:   15
  9278 ;; This function calls:
  9279 ;;		Nothing
  9280 ;; This function is called by:
  9281 ;;		_main
  9282 ;;		_update_adc_result
  9283 ;; This function uses a reentrant model
  9284 ;;
  9285                           
  9286                           	psect	text22
  9287  01CB5A                     __ptext22:
  9288                           	opt callstack 0
  9289  01CB5A                     _check_adc_scan:
  9290                           	opt callstack 13
  9291                           
  9292                           ;daq.c: 85:  return R.done;
  9293                           
  9294                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9295                           ;incstack = 0
  9296  01CB5A  0060  F390  F001   	movff	_R+53,btemp	;volatile
  9297                           
  9298                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9299  01CB60  0012               	return		;funcret
  9300  01CB62                     __end_of_check_adc_scan:
  9301                           	opt callstack 0
  9302                           
  9303 ;; *************** function _set_load_relay_two *****************
  9304 ;; Defined at:
  9305 ;;		line 130 in file "mbmc.c"
  9306 ;; Parameters:    Size  Location     Type
  9307 ;;  mode            1  [STACK] const _Bool 
  9308 ;; Auto vars:     Size  Location     Type
  9309 ;;		None
  9310 ;; Return value:  Size  Location     Type
  9311 ;;                  1  [STACK] void 
  9312 ;; Registers used:
  9313 ;;		wreg, fsr1l, fsr1h
  9314 ;; Tracked objects:
  9315 ;;		On entry : 0/0
  9316 ;;		On exit  : 0/0
  9317 ;;		Unchanged: 0/0
  9318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9323 ;;Total ram usage:        0 bytes
  9324 ;; Hardware stack levels used:    1
  9325 ;; Hardware stack levels required when called:   15
  9326 ;; This function calls:
  9327 ;;		Nothing
  9328 ;; This function is called by:
  9329 ;;		_main
  9330 ;;		_esr_check
  9331 ;; This function uses a reentrant model
  9332 ;;
  9333                           
  9334                           	psect	text23
  9335  01CA9A                     __ptext23:
  9336                           	opt callstack 0
  9337  01CA9A                     _set_load_relay_two:
  9338                           	opt callstack 15
  9339                           
  9340                           ;mbmc.c: 130: void set_load_relay_two(const _Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LAT
      +                          Dbits.LATD5 = mode;
  9341                           ;stkvar	_mode @ sp[(0)+-1]
  9342                           
  9343                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9344                           ;incstack = 0
  9345  01CA9A  0EFF               	movlw	-1
  9346  01CA9C  B0E3               	btfsc	plusw1,0,c
  9347  01CA9E  D002               	bra	u9775
  9348  01CAA0  9ABD               	bcf	189,5,c	;volatile
  9349  01CAA2  D001               	bra	u9776
  9350  01CAA4                     u9775:
  9351  01CAA4  8ABD               	bsf	189,5,c	;volatile
  9352  01CAA6                     u9776:
  9353                           
  9354                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9355  01CAA6  52E5               	movf	postdec1,f,c
  9356  01CAA8  0012               	return		;funcret
  9357  01CAAA                     __end_of_set_load_relay_two:
  9358                           	opt callstack 0
  9359                           
  9360 ;; *************** function _set_load_relay_one *****************
  9361 ;; Defined at:
  9362 ;;		line 125 in file "mbmc.c"
  9363 ;; Parameters:    Size  Location     Type
  9364 ;;  mode            1  [STACK] const _Bool 
  9365 ;; Auto vars:     Size  Location     Type
  9366 ;;		None
  9367 ;; Return value:  Size  Location     Type
  9368 ;;                  1  [STACK] void 
  9369 ;; Registers used:
  9370 ;;		wreg, fsr1l, fsr1h
  9371 ;; Tracked objects:
  9372 ;;		On entry : 0/0
  9373 ;;		On exit  : 0/0
  9374 ;;		Unchanged: 0/0
  9375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9380 ;;Total ram usage:        0 bytes
  9381 ;; Hardware stack levels used:    1
  9382 ;; Hardware stack levels required when called:   15
  9383 ;; This function calls:
  9384 ;;		Nothing
  9385 ;; This function is called by:
  9386 ;;		_main
  9387 ;;		_esr_check
  9388 ;; This function uses a reentrant model
  9389 ;;
  9390                           
  9391                           	psect	text24
  9392  01CAAA                     __ptext24:
  9393                           	opt callstack 0
  9394  01CAAA                     _set_load_relay_one:
  9395                           	opt callstack 15
  9396                           
  9397                           ;mbmc.c: 125: void set_load_relay_one(const _Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LAT
      +                          Dbits.LATD4 = mode;
  9398                           ;stkvar	_mode @ sp[(0)+-1]
  9399                           
  9400                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9401                           ;incstack = 0
  9402  01CAAA  0EFF               	movlw	-1
  9403  01CAAC  B0E3               	btfsc	plusw1,0,c
  9404  01CAAE  D002               	bra	u9765
  9405  01CAB0  98BD               	bcf	189,4,c	;volatile
  9406  01CAB2  D001               	bra	u9766
  9407  01CAB4                     u9765:
  9408  01CAB4  88BD               	bsf	189,4,c	;volatile
  9409  01CAB6                     u9766:
  9410                           
  9411                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9412  01CAB6  52E5               	movf	postdec1,f,c
  9413  01CAB8  0012               	return		;funcret
  9414  01CABA                     __end_of_set_load_relay_one:
  9415                           	opt callstack 0
  9416                           
  9417 ;; *************** function _eaDogM_WriteCommand *****************
  9418 ;; Defined at:
  9419 ;;		line 385 in file "eadog.c"
  9420 ;; Parameters:    Size  Location     Type
  9421 ;;  cmd             1  [STACK] const unsigned char 
  9422 ;; Auto vars:     Size  Location     Type
  9423 ;;		None
  9424 ;; Return value:  Size  Location     Type
  9425 ;;                  1  [STACK] void 
  9426 ;; Registers used:
  9427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9428 ;; Tracked objects:
  9429 ;;		On entry : 3F/3D
  9430 ;;		On exit  : 3F/0
  9431 ;;		Unchanged: 0/0
  9432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9437 ;;Total ram usage:        0 bytes
  9438 ;; Hardware stack levels used:    1
  9439 ;; Hardware stack levels required when called:   26
  9440 ;; This function calls:
  9441 ;;		_send_lcd_cmd_dma
  9442 ;; This function is called by:
  9443 ;;		_main
  9444 ;; This function uses a reentrant model
  9445 ;;
  9446                           
  9447                           	psect	text25
  9448  01CADA                     __ptext25:
  9449                           	opt callstack 0
  9450  01CADA                     _eaDogM_WriteCommand:
  9451                           	opt callstack 4
  9452                           
  9453                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
  9454                           ;stkvar	_cmd @ sp[(0)+-1]
  9455                           
  9456                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9457                           ;incstack = 0
  9458  01CADA  0EFF               	movlw	-1
  9459  01CADC  50E3               	movf	plusw1,w,c
  9460  01CADE  6EE6               	movwf	postinc1,c
  9461  01CAE0  ECAA  F0E4         	call	_send_lcd_cmd_dma	;wreg free
  9462                           
  9463                           ; BSR set to: 0
  9464                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  9465  01CAE4  52E5               	movf	postdec1,f,c
  9466  01CAE6  0012               	return		;funcret
  9467  01CAE8                     __end_of_eaDogM_WriteCommand:
  9468                           	opt callstack 0
  9469                           
  9470 ;; *************** function _current_sensor_cal *****************
  9471 ;; Defined at:
  9472 ;;		line 473 in file "main.c"
  9473 ;; Parameters:    Size  Location     Type
  9474 ;;		None
  9475 ;; Auto vars:     Size  Location     Type
  9476 ;;  x               1  [STACK] unsigned char 
  9477 ;; Return value:  Size  Location     Type
  9478 ;;                  1  [STACK] _Bool 
  9479 ;; Registers used:
  9480 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9481 ;; Tracked objects:
  9482 ;;		On entry : 0/1
  9483 ;;		On exit  : 0/0
  9484 ;;		Unchanged: 0/0
  9485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9490 ;;Total ram usage:        0 bytes
  9491 ;; Hardware stack levels used:    1
  9492 ;; Hardware stack levels required when called:   28
  9493 ;; This function calls:
  9494 ;;		_WaitMs
  9495 ;;		_cal_current_zero
  9496 ;;		_clear_adc_scan
  9497 ;;		_get_raw_result
  9498 ;;		_get_switch
  9499 ;;		_get_vterm_ptr
  9500 ;;		_spinners
  9501 ;;		_sprintf
  9502 ;;		_start_adc_scan
  9503 ;;		_update_lcd
  9504 ;; This function is called by:
  9505 ;;		_main
  9506 ;; This function uses a reentrant model
  9507 ;;
  9508                           
  9509                           	psect	text26
  9510  0164E2                     __ptext26:
  9511                           	opt callstack 0
  9512  0164E2                     _current_sensor_cal:
  9513                           	opt callstack 0
  9514                           
  9515                           ; BSR set to: 0
  9516                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9517  0164E2  52E6               	movf	postinc1,f,c
  9518                           
  9519                           ;main.c: 475:  uint8_t x = 0;
  9520                           ;stkvar	_x @ sp[(-1)+0]
  9521                           
  9522                           ;incstack = 0
  9523  0164E4  0EFF               	movlw	-1
  9524  0164E6  6AE3               	clrf	plusw1,c
  9525                           
  9526                           ;main.c: 477:  sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
  9527  0164E8  0EDF               	movlw	low STR_43
  9528  0164EA  6EE6               	movwf	postinc1,c
  9529  0164EC  0EFE               	movlw	high STR_43
  9530  0164EE  6EE6               	movwf	postinc1,c
  9531  0164F0  0E00               	movlw	0
  9532  0164F2  6EE6               	movwf	postinc1,c
  9533  0164F4  0E00               	movlw	0
  9534  0164F6  6EE6               	movwf	postinc1,c
  9535  0164F8  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  9536  0164FC  0060  F007  FFE6   	movff	btemp,postinc1
  9537  016502  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9538  016508  0E04               	movlw	4
  9539  01650A  6EE6               	movwf	postinc1,c
  9540  01650C  EC2E  F0D2         	call	_sprintf	;wreg free
  9541                           
  9542                           ; BSR set to: 0
  9543                           ;main.c: 478:  sprintf(get_vterm_ptr(1, 0), "Sensor              ");
  9544  016510  0EF8               	movlw	low STR_44
  9545  016512  6EE6               	movwf	postinc1,c
  9546  016514  0EFD               	movlw	high STR_44
  9547  016516  6EE6               	movwf	postinc1,c
  9548  016518  0E00               	movlw	0
  9549  01651A  6EE6               	movwf	postinc1,c
  9550  01651C  0E01               	movlw	1
  9551  01651E  6EE6               	movwf	postinc1,c
  9552  016520  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  9553  016524  0060  F007  FFE6   	movff	btemp,postinc1
  9554  01652A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9555  016530  0E04               	movlw	4
  9556  016532  6EE6               	movwf	postinc1,c
  9557  016534  EC2E  F0D2         	call	_sprintf	;wreg free
  9558                           
  9559                           ; BSR set to: 0
  9560                           ;main.c: 479:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
  9561  016538  0E76               	movlw	low STR_45
  9562  01653A  6EE6               	movwf	postinc1,c
  9563  01653C  0EFE               	movlw	high STR_45
  9564  01653E  6EE6               	movwf	postinc1,c
  9565  016540  0E00               	movlw	0
  9566  016542  6EE6               	movwf	postinc1,c
  9567  016544  0E02               	movlw	2
  9568  016546  6EE6               	movwf	postinc1,c
  9569  016548  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  9570  01654C  0060  F007  FFE6   	movff	btemp,postinc1
  9571  016552  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9572  016558  0E04               	movlw	4
  9573  01655A  6EE6               	movwf	postinc1,c
  9574  01655C  EC2E  F0D2         	call	_sprintf	;wreg free
  9575                           
  9576                           ; BSR set to: 0
  9577                           ;main.c: 480:  update_lcd(0);
  9578  016560  0E00               	movlw	0
  9579  016562  6EE6               	movwf	postinc1,c
  9580  016564  ECA6  F0D1         	call	_update_lcd	;wreg free
  9581                           
  9582                           ;main.c: 481:  WaitMs(2000);
  9583  016568  0ED0               	movlw	208
  9584  01656A  6EE6               	movwf	postinc1,c
  9585  01656C  0E07               	movlw	7
  9586  01656E  6EE6               	movwf	postinc1,c
  9587  016570  EC5D  F0E1         	call	_WaitMs	;wreg free
  9588                           
  9589                           ;main.c: 482:  sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
  9590  016574  0E00               	movlw	0
  9591  016576  6EE6               	movwf	postinc1,c
  9592  016578  0E04               	movlw	4
  9593  01657A  6EE6               	movwf	postinc1,c
  9594  01657C  ECB3  F0D2         	call	_spinners	;wreg free
  9595  016580  5001               	movf	btemp^0,w,c
  9596  016582  6EE6               	movwf	postinc1,c
  9597  016584  0E00               	movlw	0
  9598  016586  6EE6               	movwf	postinc1,c
  9599  016588  0E48               	movlw	low STR_46
  9600  01658A  6EE6               	movwf	postinc1,c
  9601  01658C  0EFF               	movlw	high STR_46
  9602  01658E  6EE6               	movwf	postinc1,c
  9603  016590  0E00               	movlw	0
  9604  016592  6EE6               	movwf	postinc1,c
  9605  016594  0E02               	movlw	2
  9606  016596  6EE6               	movwf	postinc1,c
  9607  016598  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  9608  01659C  0060  F007  FFE6   	movff	btemp,postinc1
  9609  0165A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9610  0165A8  0E06               	movlw	6
  9611  0165AA  6EE6               	movwf	postinc1,c
  9612  0165AC  EC2E  F0D2         	call	_sprintf	;wreg free
  9613                           
  9614                           ; BSR set to: 0
  9615                           ;main.c: 483:  update_lcd(0);
  9616  0165B0  0E00               	movlw	0
  9617  0165B2  6EE6               	movwf	postinc1,c
  9618  0165B4  ECA6  F0D1         	call	_update_lcd	;wreg free
  9619  0165B8                     l13589:
  9620                           
  9621                           ;main.c: 485:   if (++x > 50)
  9622                           ;stkvar	_x @ sp[(-1)+0]
  9623  0165B8  0EFF               	movlw	-1
  9624  0165BA  2AE3               	incf	plusw1,f,c
  9625  0165BC  0EFF               	movlw	-1
  9626  0165BE  006F FF8C  F001    	movff	plusw1,btemp
  9627  0165C4  0E32               	movlw	50
  9628  0165C6  6401               	cpfsgt	btemp^0,c
  9629  0165C8  D001               	goto	l13593
  9630  0165CA  D144               	goto	l1398
  9631  0165CC                     l13593:
  9632                           
  9633                           ;main.c: 487:   sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
  9634  0165CC  0E00               	movlw	0
  9635  0165CE  6EE6               	movwf	postinc1,c
  9636  0165D0  0E04               	movlw	4
  9637  0165D2  6EE6               	movwf	postinc1,c
  9638  0165D4  ECB3  F0D2         	call	_spinners	;wreg free
  9639  0165D8  5001               	movf	btemp^0,w,c
  9640  0165DA  6EE6               	movwf	postinc1,c
  9641  0165DC  0E00               	movlw	0
  9642  0165DE  6EE6               	movwf	postinc1,c
  9643  0165E0  0E48               	movlw	low STR_46
  9644  0165E2  6EE6               	movwf	postinc1,c
  9645  0165E4  0EFF               	movlw	high STR_46
  9646  0165E6  6EE6               	movwf	postinc1,c
  9647  0165E8  0E00               	movlw	0
  9648  0165EA  6EE6               	movwf	postinc1,c
  9649  0165EC  0E02               	movlw	2
  9650  0165EE  6EE6               	movwf	postinc1,c
  9651  0165F0  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  9652  0165F4  0060  F007  FFE6   	movff	btemp,postinc1
  9653  0165FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9654  016600  0E06               	movlw	6
  9655  016602  6EE6               	movwf	postinc1,c
  9656  016604  EC2E  F0D2         	call	_sprintf	;wreg free
  9657                           
  9658                           ;main.c: 488:   update_lcd(0);
  9659  016608  0E00               	movlw	0
  9660  01660A  6EE6               	movwf	postinc1,c
  9661  01660C  ECA6  F0D1         	call	_update_lcd	;wreg free
  9662                           
  9663                           ;main.c: 489:   WaitMs(100);
  9664  016610  0E64               	movlw	100
  9665  016612  6EE6               	movwf	postinc1,c
  9666  016614  0E00               	movlw	0
  9667  016616  6EE6               	movwf	postinc1,c
  9668  016618  EC5D  F0E1         	call	_WaitMs	;wreg free
  9669                           
  9670                           ;main.c: 490:  } while (get_switch(SCALIB));
  9671  01661C  0E04               	movlw	4
  9672  01661E  6EE6               	movwf	postinc1,c
  9673  016620  EC57  F0E2         	call	_get_switch	;wreg free
  9674  016624  5001               	movf	btemp^0,w,c
  9675  016626  A4D8               	btfss	status,2,c
  9676  016628  D7C7               	goto	l13589
  9677                           
  9678                           ;main.c: 492:  x = 0;
  9679                           ;stkvar	_x @ sp[(-1)+0]
  9680  01662A  0EFF               	movlw	-1
  9681  01662C  6AE3               	clrf	plusw1,c
  9682  01662E                     l13601:
  9683                           
  9684                           ;main.c: 494:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings     ");
  9685  01662E  0E09               	movlw	low STR_48
  9686  016630  6EE6               	movwf	postinc1,c
  9687  016632  0EFF               	movlw	high STR_48
  9688  016634  6EE6               	movwf	postinc1,c
  9689  016636  0E00               	movlw	0
  9690  016638  6EE6               	movwf	postinc1,c
  9691  01663A  0E00               	movlw	0
  9692  01663C  6EE6               	movwf	postinc1,c
  9693  01663E  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  9694  016642  0060  F007  FFE6   	movff	btemp,postinc1
  9695  016648  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9696  01664E  0E04               	movlw	4
  9697  016650  6EE6               	movwf	postinc1,c
  9698  016652  EC2E  F0D2         	call	_sprintf	;wreg free
  9699                           
  9700                           ; BSR set to: 0
  9701                           ;main.c: 495:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(0), 
      +                          get_raw_result(1));
  9702  016656  0E01               	movlw	1
  9703  016658  6EE6               	movwf	postinc1,c
  9704  01665A  ECD7  F0E4         	call	_get_raw_result	;wreg free
  9705  01665E  0060  F007  FFE6   	movff	btemp,postinc1
  9706  016664  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9707  01666A  0E00               	movlw	0
  9708  01666C  6EE6               	movwf	postinc1,c
  9709  01666E  ECD7  F0E4         	call	_get_raw_result	;wreg free
  9710  016672  0060  F007  FFE6   	movff	btemp,postinc1
  9711  016678  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9712  01667E  0EE3               	movlw	low STR_49
  9713  016680  6EE6               	movwf	postinc1,c
  9714  016682  0EFD               	movlw	high STR_49
  9715  016684  6EE6               	movwf	postinc1,c
  9716  016686  0E00               	movlw	0
  9717  016688  6EE6               	movwf	postinc1,c
  9718  01668A  0E01               	movlw	1
  9719  01668C  6EE6               	movwf	postinc1,c
  9720  01668E  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  9721  016692  0060  F007  FFE6   	movff	btemp,postinc1
  9722  016698  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9723  01669E  0E08               	movlw	8
  9724  0166A0  6EE6               	movwf	postinc1,c
  9725  0166A2  EC2E  F0D2         	call	_sprintf	;wreg free
  9726                           
  9727                           ; BSR set to: 0
  9728                           ;main.c: 496:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d  ", x);
  9729                           ;stkvar	_x @ sp[(-1)+0]
  9730  0166A6  0EFF               	movlw	-1
  9731  0166A8  50E3               	movf	plusw1,w,c
  9732  0166AA  6EE6               	movwf	postinc1,c
  9733  0166AC  0E00               	movlw	0
  9734  0166AE  6EE6               	movwf	postinc1,c
  9735  0166B0  0E33               	movlw	low STR_50
  9736  0166B2  6EE6               	movwf	postinc1,c
  9737  0166B4  0EFF               	movlw	high STR_50
  9738  0166B6  6EE6               	movwf	postinc1,c
  9739  0166B8  0E00               	movlw	0
  9740  0166BA  6EE6               	movwf	postinc1,c
  9741  0166BC  0E02               	movlw	2
  9742  0166BE  6EE6               	movwf	postinc1,c
  9743  0166C0  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  9744  0166C4  0060  F007  FFE6   	movff	btemp,postinc1
  9745  0166CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9746  0166D0  0E06               	movlw	6
  9747  0166D2  6EE6               	movwf	postinc1,c
  9748  0166D4  EC2E  F0D2         	call	_sprintf	;wreg free
  9749                           
  9750                           ; BSR set to: 0
  9751                           ;main.c: 497:   update_lcd(0);
  9752  0166D8  0E00               	movlw	0
  9753  0166DA  6EE6               	movwf	postinc1,c
  9754  0166DC  ECA6  F0D1         	call	_update_lcd	;wreg free
  9755                           
  9756                           ;main.c: 498:   clear_adc_scan();
  9757  0166E0  ECC1  F0E5         	call	_clear_adc_scan	;wreg free
  9758                           
  9759                           ; BSR set to: 0
  9760                           ;main.c: 499:   start_adc_scan();
  9761  0166E4  EC07  F0DD         	call	_start_adc_scan	;wreg free
  9762                           
  9763                           ;main.c: 500:   WaitMs(100);
  9764  0166E8  0E64               	movlw	100
  9765  0166EA  6EE6               	movwf	postinc1,c
  9766  0166EC  0E00               	movlw	0
  9767  0166EE  6EE6               	movwf	postinc1,c
  9768  0166F0  EC5D  F0E1         	call	_WaitMs	;wreg free
  9769                           
  9770                           ;main.c: 501:  } while (++x < 50);
  9771                           ;stkvar	_x @ sp[(-1)+0]
  9772  0166F4  0EFF               	movlw	-1
  9773  0166F6  2AE3               	incf	plusw1,f,c
  9774  0166F8  0EFF               	movlw	-1
  9775  0166FA  006F FF8C  F001    	movff	plusw1,btemp
  9776  016700  0E31               	movlw	49
  9777  016702  6401               	cpfsgt	btemp^0,c
  9778  016704  D794               	goto	l13601
  9779                           
  9780                           ;main.c: 503:  if (cal_current_zero(0)) {
  9781  016706  0E00               	movlw	0
  9782  016708  6EE6               	movwf	postinc1,c
  9783  01670A  EC57  F0D5         	call	_cal_current_zero	;wreg free
  9784  01670E  5001               	movf	btemp^0,w,c
  9785  016710  B4D8               	btfsc	status,2,c
  9786  016712  D04B               	goto	l13631
  9787                           
  9788                           ;main.c: 504:   cal_current_zero(1);
  9789  016714  0E01               	movlw	1
  9790  016716  6EE6               	movwf	postinc1,c
  9791  016718  EC57  F0D5         	call	_cal_current_zero	;wreg free
  9792                           
  9793                           ;main.c: 505:   sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
  9794  01671C  0EDF               	movlw	low STR_43
  9795  01671E  6EE6               	movwf	postinc1,c
  9796  016720  0EFE               	movlw	high STR_43
  9797  016722  6EE6               	movwf	postinc1,c
  9798  016724  0E00               	movlw	0
  9799  016726  6EE6               	movwf	postinc1,c
  9800  016728  0E00               	movlw	0
  9801  01672A  6EE6               	movwf	postinc1,c
  9802  01672C  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  9803  016730  0060  F007  FFE6   	movff	btemp,postinc1
  9804  016736  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9805  01673C  0E04               	movlw	4
  9806  01673E  6EE6               	movwf	postinc1,c
  9807  016740  EC2E  F0D2         	call	_sprintf	;wreg free
  9808                           
  9809                           ; BSR set to: 0
  9810                           ;main.c: 506:   sprintf(get_vterm_ptr(1, 0), "Sensors             ");
  9811  016744  0E0D               	movlw	low STR_52
  9812  016746  6EE6               	movwf	postinc1,c
  9813  016748  0EFE               	movlw	high STR_52
  9814  01674A  6EE6               	movwf	postinc1,c
  9815  01674C  0E00               	movlw	0
  9816  01674E  6EE6               	movwf	postinc1,c
  9817  016750  0E01               	movlw	1
  9818  016752  6EE6               	movwf	postinc1,c
  9819  016754  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  9820  016758  0060  F007  FFE6   	movff	btemp,postinc1
  9821  01675E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9822  016764  0E04               	movlw	4
  9823  016766  6EE6               	movwf	postinc1,c
  9824  016768  EC2E  F0D2         	call	_sprintf	;wreg free
  9825                           
  9826                           ; BSR set to: 0
  9827                           ;main.c: 507:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set        ");
  9828  01676C  0EB5               	movlw	low STR_53
  9829  01676E  6EE6               	movwf	postinc1,c
  9830  016770  0EFE               	movlw	high STR_53
  9831  016772  6EE6               	movwf	postinc1,c
  9832  016774  0E00               	movlw	0
  9833  016776  6EE6               	movwf	postinc1,c
  9834  016778  0E02               	movlw	2
  9835  01677A  6EE6               	movwf	postinc1,c
  9836  01677C  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  9837  016780  0060  F007  FFE6   	movff	btemp,postinc1
  9838  016786  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9839  01678C  0E04               	movlw	4
  9840  01678E  6EE6               	movwf	postinc1,c
  9841  016790  EC2E  F0D2         	call	_sprintf	;wreg free
  9842                           
  9843                           ; BSR set to: 0
  9844                           ;main.c: 508:   update_lcd(0);
  9845  016794  0E00               	movlw	0
  9846  016796  6EE6               	movwf	postinc1,c
  9847  016798  ECA6  F0D1         	call	_update_lcd	;wreg free
  9848  01679C                     l13629:
  9849                           
  9850                           ;main.c: 509:   WaitMs(2000);
  9851  01679C  0ED0               	movlw	208
  9852  01679E  6EE6               	movwf	postinc1,c
  9853  0167A0  0E07               	movlw	7
  9854  0167A2  6EE6               	movwf	postinc1,c
  9855  0167A4  EC5D  F0E1         	call	_WaitMs	;wreg free
  9856                           
  9857                           ;main.c: 510:  } else {
  9858  0167A8  D055               	goto	l1398
  9859  0167AA                     l13631:
  9860                           
  9861                           ;main.c: 511:   sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
  9862  0167AA  0EDF               	movlw	low STR_43
  9863  0167AC  6EE6               	movwf	postinc1,c
  9864  0167AE  0EFE               	movlw	high STR_43
  9865  0167B0  6EE6               	movwf	postinc1,c
  9866  0167B2  0E00               	movlw	0
  9867  0167B4  6EE6               	movwf	postinc1,c
  9868  0167B6  0E00               	movlw	0
  9869  0167B8  6EE6               	movwf	postinc1,c
  9870  0167BA  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  9871  0167BE  0060  F007  FFE6   	movff	btemp,postinc1
  9872  0167C4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9873  0167CA  0E04               	movlw	4
  9874  0167CC  6EE6               	movwf	postinc1,c
  9875  0167CE  EC2E  F0D2         	call	_sprintf	;wreg free
  9876                           
  9877                           ;main.c: 512:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(0), 
      +                          get_raw_result(1));
  9878  0167D2  0E01               	movlw	1
  9879  0167D4  6EE6               	movwf	postinc1,c
  9880  0167D6  ECD7  F0E4         	call	_get_raw_result	;wreg free
  9881  0167DA  0060  F007  FFE6   	movff	btemp,postinc1
  9882  0167E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9883  0167E6  0E00               	movlw	0
  9884  0167E8  6EE6               	movwf	postinc1,c
  9885  0167EA  ECD7  F0E4         	call	_get_raw_result	;wreg free
  9886  0167EE  0060  F007  FFE6   	movff	btemp,postinc1
  9887  0167F4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9888  0167FA  0EE3               	movlw	low STR_49
  9889  0167FC  6EE6               	movwf	postinc1,c
  9890  0167FE  0EFD               	movlw	high STR_49
  9891  016800  6EE6               	movwf	postinc1,c
  9892  016802  0E00               	movlw	0
  9893  016804  6EE6               	movwf	postinc1,c
  9894  016806  0E01               	movlw	1
  9895  016808  6EE6               	movwf	postinc1,c
  9896  01680A  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  9897  01680E  0060  F007  FFE6   	movff	btemp,postinc1
  9898  016814  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9899  01681A  0E08               	movlw	8
  9900  01681C  6EE6               	movwf	postinc1,c
  9901  01681E  EC2E  F0D2         	call	_sprintf	;wreg free
  9902                           
  9903                           ;main.c: 513:   sprintf(get_vterm_ptr(2, 0), "Out Of Range        ");
  9904  016822  0EA0               	movlw	low STR_56
  9905  016824  6EE6               	movwf	postinc1,c
  9906  016826  0EFE               	movlw	high STR_56
  9907  016828  6EE6               	movwf	postinc1,c
  9908  01682A  0E00               	movlw	0
  9909  01682C  6EE6               	movwf	postinc1,c
  9910  01682E  0E02               	movlw	2
  9911  016830  6EE6               	movwf	postinc1,c
  9912  016832  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
  9913  016836  0060  F007  FFE6   	movff	btemp,postinc1
  9914  01683C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9915  016842  0E04               	movlw	4
  9916  016844  6EE6               	movwf	postinc1,c
  9917  016846  EC2E  F0D2         	call	_sprintf	;wreg free
  9918                           
  9919                           ;main.c: 514:   update_lcd(0);
  9920  01684A  0E00               	movlw	0
  9921  01684C  6EE6               	movwf	postinc1,c
  9922  01684E  ECA6  F0D1         	call	_update_lcd	;wreg free
  9923  016852  D7A4               	goto	l13629
  9924  016854                     l1398:
  9925                           
  9926                           ; _current_sensor_cal: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
  9927  016854  52E5               	movf	postdec1,f,c
  9928  016856  0012               	return		;funcret
  9929  016858                     __end_of_current_sensor_cal:
  9930                           	opt callstack 0
  9931                           
  9932 ;; *************** function _start_adc_scan *****************
  9933 ;; Defined at:
  9934 ;;		line 60 in file "daq.c"
  9935 ;; Parameters:    Size  Location     Type
  9936 ;;		None
  9937 ;; Auto vars:     Size  Location     Type
  9938 ;;		None
  9939 ;; Return value:  Size  Location     Type
  9940 ;;                  1  [STACK] _Bool 
  9941 ;; Registers used:
  9942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  9943 ;; Tracked objects:
  9944 ;;		On entry : 0/0
  9945 ;;		On exit  : 1/0
  9946 ;;		Unchanged: 0/0
  9947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9952 ;;Total ram usage:        0 bytes
  9953 ;; Hardware stack levels used:    1
  9954 ;; Hardware stack levels required when called:   16
  9955 ;; This function calls:
  9956 ;;		_ADCC_DischargeSampleCapacitor
  9957 ;;		_ADCC_SetADIInterruptHandler
  9958 ;;		_ADCC_SetADTIInterruptHandler
  9959 ;;		_ADCC_StartConversion
  9960 ;; This function is called by:
  9961 ;;		_main
  9962 ;;		_current_sensor_cal
  9963 ;;		_update_adc_result
  9964 ;; This function uses a reentrant model
  9965 ;;
  9966                           
  9967                           	psect	text27
  9968  01BA0E                     __ptext27:
  9969                           	opt callstack 0
  9970  01BA0E                     _start_adc_scan:
  9971                           	opt callstack 14
  9972                           
  9973                           ;daq.c: 62:  if (R.done)
  9974                           
  9975                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9976                           ;incstack = 0
  9977  01BA0E  0100               	movlb	0	; () banked
  9978  01BA10  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  9979  01BA12  A4D8               	btfss	status,2,c
  9980  01BA14  0012               	return	
  9981                           
  9982                           ; BSR set to: 0
  9983                           ;daq.c: 65:  R.scan_index = 0;
  9984  01BA16  6BE1               	clrf	(_R+50)& (0+255),b	;volatile
  9985                           
  9986                           ; BSR set to: 0
  9987                           ;daq.c: 66:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  9988  01BA18  013A               	movlb	58	; () banked
  9989  01BA1A  5140               	movf	64,w,b	;volatile
  9990  01BA1C  006E F940  F001    	movff	14928,btemp	;volatile
  9991  01BA22  6A02               	clrf	(btemp+1)^0,c
  9992  01BA24  0060  F004  F002   	movff	btemp,btemp+1
  9993  01BA2A  6A01               	clrf	btemp^0,c
  9994  01BA2C  2601               	addwf	btemp^0,f,c
  9995  01BA2E  0E00               	movlw	0
  9996  01BA30  2202               	addwfc	(btemp+1)^0,f,c
  9997  01BA32  0E77               	movlw	119
  9998  01BA34  1401               	andwf	btemp^0,w,c
  9999  01BA36  0100               	movlb	0	; () banked
 10000  01BA38  6FE2               	movwf	(_R+51)& (0+255),b	;volatile
 10001  01BA3A  0E3C               	movlw	60
 10002  01BA3C  1402               	andwf	(btemp+1)^0,w,c
 10003  01BA3E  6FE3               	movwf	(_R+52)& (0+255),b	;volatile
 10004                           
 10005                           ; BSR set to: 0
 10006                           ;daq.c: 67:  ADCC_SetADIInterruptHandler(adc_int_handler);
 10007  01BA40  0EAA               	movlw	low _adc_int_handler
 10008  01BA42  6EE6               	movwf	postinc1,c
 10009  01BA44  0ECB               	movlw	high _adc_int_handler
 10010  01BA46  6EE6               	movwf	postinc1,c
 10011  01BA48  0E01               	movlw	low (_adc_int_handler shr (0+16))
 10012  01BA4A  6EE6               	movwf	postinc1,c
 10013  01BA4C  EC8B  F0E3         	call	_ADCC_SetADIInterruptHandler	;wreg free
 10014                           
 10015                           ;daq.c: 68:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 10016  01BA50  0E20               	movlw	low _adc_int_t_handler
 10017  01BA52  6EE6               	movwf	postinc1,c
 10018  01BA54  0EB6               	movlw	high _adc_int_t_handler
 10019  01BA56  6EE6               	movwf	postinc1,c
 10020  01BA58  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
 10021  01BA5A  6EE6               	movwf	postinc1,c
 10022  01BA5C  EC77  F0E3         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 10023                           
 10024                           ;daq.c: 69:  ADCC_DischargeSampleCapacitor();
 10025  01BA60  ECB1  F0E5         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 10026                           
 10027                           ; BSR set to: 62
 10028                           ;daq.c: 70:  ADCC_StartConversion(R.scan_index & 0xf);
 10029  01BA64  0100               	movlb	0	; () banked
 10030  01BA66  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 10031  01BA68  0B0F               	andlw	15
 10032  01BA6A  6EE6               	movwf	postinc1,c
 10033  01BA6C  EC44  F0E5         	call	_ADCC_StartConversion	;wreg free
 10034                           
 10035                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 10036  01BA70  0012               	return		;funcret
 10037  01BA72                     __end_of_start_adc_scan:
 10038                           	opt callstack 0
 10039                           
 10040 ;; *************** function _ADCC_StartConversion *****************
 10041 ;; Defined at:
 10042 ;;		line 128 in file "mcc_generated_files/adcc.c"
 10043 ;; Parameters:    Size  Location     Type
 10044 ;;  channel         1  [STACK] enum E16136
 10045 ;; Auto vars:     Size  Location     Type
 10046 ;;		None
 10047 ;; Return value:  Size  Location     Type
 10048 ;;                  1  [STACK] void 
 10049 ;; Registers used:
 10050 ;;		fsr1l, fsr1h
 10051 ;; Tracked objects:
 10052 ;;		On entry : 3F/0
 10053 ;;		On exit  : 3F/3E
 10054 ;;		Unchanged: 0/0
 10055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10060 ;;Total ram usage:        0 bytes
 10061 ;; Hardware stack levels used:    1
 10062 ;; Hardware stack levels required when called:   15
 10063 ;; This function calls:
 10064 ;;		Nothing
 10065 ;; This function is called by:
 10066 ;;		_start_adc_scan
 10067 ;;		_adc_int_t_handler
 10068 ;; This function uses a reentrant model
 10069 ;;
 10070                           
 10071                           	psect	text28
 10072  01CA88                     __ptext28:
 10073                           	opt callstack 0
 10074  01CA88                     _ADCC_StartConversion:
 10075                           	opt callstack 0
 10076                           
 10077                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 10078                           ;stkvar	_channel @ sp[(0)+-1]
 10079                           
 10080                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10081                           ;incstack = 0
 10082 ;; hardware stack exceeded
 10083  01CA88  0EFF               	movlw	-1
 10084  01CA8A  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 10085                           
 10086                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 10087  01CA90  013E               	movlb	62	; () banked
 10088  01CA92  8FF8               	bsf	248,7,b	;volatile
 10089                           
 10090                           ; BSR set to: 62
 10091                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 10092  01CA94  81F8               	bsf	248,0,b	;volatile
 10093                           
 10094                           ; BSR set to: 62
 10095                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 10096  01CA96  52E5               	movf	postdec1,f,c
 10097  01CA98  0012               	return		;funcret
 10098  01CA9A                     __end_of_ADCC_StartConversion:
 10099                           	opt callstack 0
 10100                           
 10101 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 10102 ;; Defined at:
 10103 ;;		line 189 in file "mcc_generated_files/adcc.c"
 10104 ;; Parameters:    Size  Location     Type
 10105 ;;		None
 10106 ;; Auto vars:     Size  Location     Type
 10107 ;;		None
 10108 ;; Return value:  Size  Location     Type
 10109 ;;                  1  [STACK] void 
 10110 ;; Registers used:
 10111 ;;		wreg, status,2
 10112 ;; Tracked objects:
 10113 ;;		On entry : 0/0
 10114 ;;		On exit  : 3F/3E
 10115 ;;		Unchanged: 0/0
 10116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10121 ;;Total ram usage:        0 bytes
 10122 ;; Hardware stack levels used:    1
 10123 ;; Hardware stack levels required when called:   15
 10124 ;; This function calls:
 10125 ;;		Nothing
 10126 ;; This function is called by:
 10127 ;;		_start_adc_scan
 10128 ;;		_adc_int_t_handler
 10129 ;; This function uses a reentrant model
 10130 ;;
 10131                           
 10132                           	psect	text29
 10133  01CB62                     __ptext29:
 10134                           	opt callstack 0
 10135  01CB62                     _ADCC_DischargeSampleCapacitor:
 10136                           	opt callstack 0
 10137                           
 10138                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 10139                           
 10140                           ; BSR set to: 62
 10141                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10142                           ;incstack = 0
 10143 ;; hardware stack exceeded
 10144  01CB62  0E3B               	movlw	59
 10145  01CB64  013E               	movlb	62	; () banked
 10146  01CB66  6FF1               	movwf	241,b	;volatile
 10147                           
 10148                           ; BSR set to: 62
 10149                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 10150  01CB68  0012               	return		;funcret
 10151  01CB6A                     __end_of_ADCC_DischargeSampleCapacitor:
 10152                           	opt callstack 0
 10153                           
 10154 ;; *************** function _spinners *****************
 10155 ;; Defined at:
 10156 ;;		line 146 in file "mbmc.c"
 10157 ;; Parameters:    Size  Location     Type
 10158 ;;  shape           1  [STACK] unsigned char 
 10159 ;;  reset           1  [STACK] const unsigned char 
 10160 ;; Auto vars:     Size  Location     Type
 10161 ;;  c               1  [STACK] unsigned char 
 10162 ;; Return value:  Size  Location     Type
 10163 ;;                  1  [STACK] unsigned char 
 10164 ;; Registers used:
 10165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10166 ;; Tracked objects:
 10167 ;;		On entry : 0/0
 10168 ;;		On exit  : 0/0
 10169 ;;		Unchanged: 0/0
 10170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10175 ;;Total ram usage:        0 bytes
 10176 ;; Hardware stack levels used:    1
 10177 ;; Hardware stack levels required when called:   16
 10178 ;; This function calls:
 10179 ;;		_strlen
 10180 ;; This function is called by:
 10181 ;;		_main
 10182 ;;		_current_sensor_cal
 10183 ;; This function uses a reentrant model
 10184 ;;
 10185                           
 10186                           	psect	text30
 10187  01A566                     __ptext30:
 10188                           	opt callstack 0
 10189  01A566                     _spinners:
 10190                           	opt callstack 0
 10191                           
 10192                           ; BSR set to: 62
 10193                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10194  01A566  52E6               	movf	postinc1,f,c
 10195                           
 10196                           ;mbmc.c: 146: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 147: {;mbmc.c: 1
      +                          48:  static uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
 10197                           ;stkvar	_shape @ sp[(-1)+-1]
 10198                           
 10199                           ;incstack = 0
 10200  01A568  0EFE               	movlw	-2
 10201  01A56A  006F FF8C  F001    	movff	plusw1,btemp
 10202  01A570  0E05               	movlw	5
 10203  01A572  6401               	cpfsgt	btemp^0,c
 10204  01A574  D002               	goto	l1994
 10205                           
 10206                           ;mbmc.c: 152:   shape = 0;
 10207                           ;stkvar	_shape @ sp[(-1)+-1]
 10208  01A576  0EFE               	movlw	-2
 10209  01A578  6AE3               	clrf	plusw1,c
 10210  01A57A                     l1994:
 10211                           
 10212                           ;mbmc.c: 153:  if (reset)
 10213                           ;stkvar	_reset @ sp[(-1)+-2]
 10214  01A57A  0EFD               	movlw	-3
 10215  01A57C  50E3               	movf	plusw1,w,c
 10216  01A57E  B4D8               	btfsc	status,2,c
 10217  01A580  D00C               	goto	l10779
 10218                           
 10219                           ;mbmc.c: 154:   s[shape] = 0;
 10220                           ;stkvar	_shape @ sp[(-1)+-1]
 10221  01A582  0EFE               	movlw	-2
 10222  01A584  50E3               	movf	plusw1,w,c
 10223  01A586  6E0B               	movwf	(btemp+10)^0,c
 10224  01A588  6A0C               	clrf	(btemp+11)^0,c
 10225  01A58A  0EE4               	movlw	low spinners@s
 10226  01A58C  240B               	addwf	(btemp+10)^0,w,c
 10227  01A58E  6ED9               	movwf	fsr2l,c
 10228  01A590  0E01               	movlw	high spinners@s
 10229  01A592  200C               	addwfc	(btemp+11)^0,w,c
 10230  01A594  6EDA               	movwf	fsr2h,c
 10231  01A596  0E00               	movlw	0
 10232  01A598  6EDF               	movwf	indf2,c
 10233  01A59A                     l10779:
 10234                           
 10235                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
 10236                           ;stkvar	_shape @ sp[(-1)+-1]
 10237  01A59A  0EFE               	movlw	-2
 10238  01A59C  50E3               	movf	plusw1,w,c
 10239  01A59E  0D14               	mullw	20
 10240  01A5A0  0E6D               	movlw	low _spin
 10241  01A5A2  6E0B               	movwf	(btemp+10)^0,c
 10242  01A5A4  0EFA               	movlw	high _spin
 10243  01A5A6  6E0C               	movwf	(btemp+11)^0,c
 10244  01A5A8  50F3               	movf	243,w,c
 10245  01A5AA  260B               	addwf	(btemp+10)^0,f,c
 10246  01A5AC  50F4               	movf	244,w,c
 10247  01A5AE  220C               	addwfc	(btemp+11)^0,f,c
 10248                           
 10249                           ;stkvar	_shape @ sp[(-1)+-1]
 10250  01A5B0  0EFE               	movlw	-2
 10251  01A5B2  50E3               	movf	plusw1,w,c
 10252  01A5B4  6E09               	movwf	(btemp+8)^0,c
 10253  01A5B6  6A0A               	clrf	(btemp+9)^0,c
 10254  01A5B8  0EE4               	movlw	low spinners@s
 10255  01A5BA  2409               	addwf	(btemp+8)^0,w,c
 10256  01A5BC  6ED9               	movwf	fsr2l,c
 10257  01A5BE  0E01               	movlw	high spinners@s
 10258  01A5C0  200A               	addwfc	(btemp+9)^0,w,c
 10259  01A5C2  6EDA               	movwf	fsr2h,c
 10260  01A5C4  50DF               	movf	indf2,w,c
 10261  01A5C6  260B               	addwf	(btemp+10)^0,f,c
 10262  01A5C8  0E00               	movlw	0
 10263  01A5CA  220C               	addwfc	(btemp+11)^0,f,c
 10264  01A5CC  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10265  01A5D2  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10266  01A5D8                     	if	0	;tblptru may be non-zero
 10267  01A5D8                     	endif
 10268  01A5D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10269  01A5D8  0E00               	movlw	low (__mediumconst shr (0+16))
 10270  01A5DA  6EF8               	movwf	tblptru,c
 10271  01A5DC                     	endif
 10272                           
 10273                           ;stkvar	_c @ sp[(-1)+0]
 10274  01A5DC  0008               	tblrd		*
 10275  01A5DE  0EFF               	movlw	-1
 10276  01A5E0  006F FFD7 FFE3     	movff	tablat,plusw1
 10277                           
 10278                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
 10279                           ;stkvar	_shape @ sp[(-1)+-1]
 10280  01A5E6  0EFE               	movlw	-2
 10281  01A5E8  50E3               	movf	plusw1,w,c
 10282  01A5EA  0D14               	mullw	20
 10283  01A5EC  0E6D               	movlw	low _spin
 10284  01A5EE  6E0B               	movwf	(btemp+10)^0,c
 10285  01A5F0  0EFA               	movlw	high _spin
 10286  01A5F2  6E0C               	movwf	(btemp+11)^0,c
 10287  01A5F4  50F3               	movf	243,w,c
 10288  01A5F6  260B               	addwf	(btemp+10)^0,f,c
 10289  01A5F8  50F4               	movf	244,w,c
 10290  01A5FA  220C               	addwfc	(btemp+11)^0,f,c
 10291  01A5FC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10292  01A602  0060  F033  FFE6   	movff	btemp+11,postinc1
 10293  01A608  ECD9  F0D8         	call	_strlen	;wreg free
 10294                           
 10295                           ;stkvar	_shape @ sp[(-1)+-1]
 10296  01A60C  0EFE               	movlw	-2
 10297  01A60E  50E3               	movf	plusw1,w,c
 10298  01A610  6E0B               	movwf	(btemp+10)^0,c
 10299  01A612  6A0C               	clrf	(btemp+11)^0,c
 10300  01A614  0EE4               	movlw	low spinners@s
 10301  01A616  240B               	addwf	(btemp+10)^0,w,c
 10302  01A618  6ED9               	movwf	fsr2l,c
 10303  01A61A  0E01               	movlw	high spinners@s
 10304  01A61C  200C               	addwfc	(btemp+11)^0,w,c
 10305  01A61E  6EDA               	movwf	fsr2h,c
 10306  01A620  2ADF               	incf	indf2,f,c
 10307  01A622  50DF               	movf	indf2,w,c
 10308  01A624  6E0B               	movwf	(btemp+10)^0,c
 10309  01A626  6A0C               	clrf	(btemp+11)^0,c
 10310  01A628  5001               	movf	btemp^0,w,c
 10311  01A62A  5C0B               	subwf	(btemp+10)^0,w,c
 10312  01A62C  5002               	movf	(btemp+1)^0,w,c
 10313  01A62E  580C               	subwfb	(btemp+11)^0,w,c
 10314  01A630  A0D8               	btfss	status,0,c
 10315  01A632  D00C               	goto	l10785
 10316                           
 10317                           ;mbmc.c: 157:   s[shape] = 0;
 10318                           ;stkvar	_shape @ sp[(-1)+-1]
 10319  01A634  0EFE               	movlw	-2
 10320  01A636  50E3               	movf	plusw1,w,c
 10321  01A638  6E0B               	movwf	(btemp+10)^0,c
 10322  01A63A  6A0C               	clrf	(btemp+11)^0,c
 10323  01A63C  0EE4               	movlw	low spinners@s
 10324  01A63E  240B               	addwf	(btemp+10)^0,w,c
 10325  01A640  6ED9               	movwf	fsr2l,c
 10326  01A642  0E01               	movlw	high spinners@s
 10327  01A644  200C               	addwfc	(btemp+11)^0,w,c
 10328  01A646  6EDA               	movwf	fsr2h,c
 10329  01A648  0E00               	movlw	0
 10330  01A64A  6EDF               	movwf	indf2,c
 10331  01A64C                     l10785:
 10332                           
 10333                           ;mbmc.c: 158:  return c;
 10334                           ;stkvar	_c @ sp[(-1)+0]
 10335  01A64C  0EFF               	movlw	-1
 10336  01A64E  006F FF8C  F001    	movff	plusw1,btemp
 10337                           
 10338                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 10339  01A654  52E5               	movf	postdec1,f,c
 10340  01A656  52E5               	movf	postdec1,f,c
 10341  01A658  52E5               	movf	postdec1,f,c
 10342  01A65A  0012               	return		;funcret
 10343  01A65C                     __end_of_spinners:
 10344                           	opt callstack 0
 10345                           
 10346 ;; *************** function _get_switch *****************
 10347 ;; Defined at:
 10348 ;;		line 18 in file "dio.c"
 10349 ;; Parameters:    Size  Location     Type
 10350 ;;  i               1  [STACK] const unsigned char 
 10351 ;; Auto vars:     Size  Location     Type
 10352 ;;		None
 10353 ;; Return value:  Size  Location     Type
 10354 ;;                  1  [STACK] enum E17021
 10355 ;; Registers used:
 10356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 10357 ;; Tracked objects:
 10358 ;;		On entry : 0/0
 10359 ;;		On exit  : 0/0
 10360 ;;		Unchanged: 0/0
 10361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10366 ;;Total ram usage:        0 bytes
 10367 ;; Hardware stack levels used:    1
 10368 ;; Hardware stack levels required when called:   15
 10369 ;; This function calls:
 10370 ;;		Nothing
 10371 ;; This function is called by:
 10372 ;;		_main
 10373 ;;		_current_sensor_cal
 10374 ;;		_hid_input
 10375 ;; This function uses a reentrant model
 10376 ;;
 10377                           
 10378                           	psect	text31
 10379  01C4AE                     __ptext31:
 10380                           	opt callstack 0
 10381  01C4AE                     _get_switch:
 10382                           	opt callstack 13
 10383                           
 10384                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 10385                           ;stkvar	_i @ sp[(0)+-1]
 10386                           
 10387                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10388                           ;incstack = 0
 10389  01C4AE  0EFF               	movlw	-1
 10390  01C4B0  006F FF8C  F001    	movff	plusw1,btemp
 10391  01C4B6  0E05               	movlw	5
 10392  01C4B8  6401               	cpfsgt	btemp^0,c
 10393  01C4BA  D002               	goto	l10279
 10394                           
 10395                           ;dio.c: 21:   return SW_OFF;
 10396  01C4BC  0E00               	movlw	0
 10397  01C4BE  D00A               	goto	L8
 10398  01C4C0                     l10279:
 10399                           
 10400                           ;dio.c: 23:  return S.button[i].sw;
 10401                           ;stkvar	_i @ sp[(0)+-1]
 10402  01C4C0  0EFF               	movlw	-1
 10403  01C4C2  50E3               	movf	plusw1,w,c
 10404  01C4C4  0D05               	mullw	5
 10405  01C4C6  0E54               	movlw	low _S
 10406  01C4C8  24F3               	addwf	243,w,c
 10407  01C4CA  6ED9               	movwf	fsr2l,c
 10408  01C4CC  0E02               	movlw	high _S
 10409  01C4CE  20F4               	addwfc	prodh,w,c
 10410  01C4D0  6EDA               	movwf	fsr2h,c
 10411  01C4D2  50DF               	movf	indf2,w,c
 10412  01C4D4                     L8:
 10413  01C4D4  6E01               	movwf	btemp^0,c
 10414                           
 10415                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10416  01C4D6  52E5               	movf	postdec1,f,c
 10417  01C4D8  0012               	return		;funcret
 10418  01C4DA                     __end_of_get_switch:
 10419                           	opt callstack 0
 10420                           
 10421 ;; *************** function _clear_adc_scan *****************
 10422 ;; Defined at:
 10423 ;;		line 91 in file "daq.c"
 10424 ;; Parameters:    Size  Location     Type
 10425 ;;		None
 10426 ;; Auto vars:     Size  Location     Type
 10427 ;;		None
 10428 ;; Return value:  Size  Location     Type
 10429 ;;                  1  [STACK] void 
 10430 ;; Registers used:
 10431 ;;		None
 10432 ;; Tracked objects:
 10433 ;;		On entry : 0/0
 10434 ;;		On exit  : 3F/0
 10435 ;;		Unchanged: 0/0
 10436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10441 ;;Total ram usage:        0 bytes
 10442 ;; Hardware stack levels used:    1
 10443 ;; Hardware stack levels required when called:   15
 10444 ;; This function calls:
 10445 ;;		Nothing
 10446 ;; This function is called by:
 10447 ;;		_main
 10448 ;;		_current_sensor_cal
 10449 ;;		_update_adc_result
 10450 ;; This function uses a reentrant model
 10451 ;;
 10452                           
 10453                           	psect	text32
 10454  01CB82                     __ptext32:
 10455                           	opt callstack 0
 10456  01CB82                     _clear_adc_scan:
 10457                           	opt callstack 13
 10458                           
 10459                           ;daq.c: 93:  R.done = 0;
 10460                           
 10461                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10462                           ;incstack = 0
 10463  01CB82  0100               	movlb	0	; () banked
 10464  01CB84  6BE4               	clrf	(_R+53)& (0+255),b	;volatile
 10465                           
 10466                           ; BSR set to: 0
 10467                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 10468  01CB86  0012               	return		;funcret
 10469  01CB88                     __end_of_clear_adc_scan:
 10470                           	opt callstack 0
 10471                           
 10472 ;; *************** function _cal_current_zero *****************
 10473 ;; Defined at:
 10474 ;;		line 317 in file "daq.c"
 10475 ;; Parameters:    Size  Location     Type
 10476 ;;  mode            1  [STACK] _Bool 
 10477 ;; Auto vars:     Size  Location     Type
 10478 ;;  a200            2  [STACK] short 
 10479 ;;  a100            2  [STACK] short 
 10480 ;; Return value:  Size  Location     Type
 10481 ;;                  1  [STACK] _Bool 
 10482 ;; Registers used:
 10483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
 10484 ;; Tracked objects:
 10485 ;;		On entry : 0/0
 10486 ;;		On exit  : 0/0
 10487 ;;		Unchanged: 0/0
 10488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10493 ;;Total ram usage:        0 bytes
 10494 ;; Hardware stack levels used:    1
 10495 ;; Hardware stack levels required when called:   16
 10496 ;; This function calls:
 10497 ;;		_check_range
 10498 ;;		_get_raw_result
 10499 ;; This function is called by:
 10500 ;;		_current_sensor_cal
 10501 ;; This function uses a reentrant model
 10502 ;;
 10503                           
 10504                           	psect	text33
 10505  01AAAE                     __ptext33:
 10506                           	opt callstack 0
 10507  01AAAE                     _cal_current_zero:
 10508                           	opt callstack 0
 10509                           
 10510                           ; BSR set to: 0
 10511                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10512  01AAAE  52E6               	movf	postinc1,f,c
 10513  01AAB0  52E6               	movf	postinc1,f,c
 10514  01AAB2  52E6               	movf	postinc1,f,c
 10515  01AAB4  52E6               	movf	postinc1,f,c
 10516                           
 10517                           ;daq.c: 317: _Bool cal_current_zero(_Bool mode);daq.c: 318: {;daq.c: 319:  int16_t a100,
      +                           a200;;daq.c: 321:  a100 = get_raw_result(C_PV);
 10518                           
 10519                           ;incstack = 0
 10520  01AAB6  0E01               	movlw	1
 10521  01AAB8  6EE6               	movwf	postinc1,c
 10522  01AABA  ECD7  F0E4         	call	_get_raw_result	;wreg free
 10523                           
 10524                           ;stkvar	_a100 @ sp[(-4)+2]
 10525  01AABE  0EFE               	movlw	-2
 10526  01AAC0  0060  F007  FFE3   	movff	btemp,plusw1
 10527  01AAC6  0EFF               	movlw	-1
 10528  01AAC8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 10529                           
 10530                           ;daq.c: 322:  if (!check_range(a100, 100, 4000))
 10531  01AACE  0EA0               	movlw	160
 10532  01AAD0  6EE6               	movwf	postinc1,c
 10533  01AAD2  0E0F               	movlw	15
 10534  01AAD4  6EE6               	movwf	postinc1,c
 10535  01AAD6  0E64               	movlw	100
 10536  01AAD8  6EE6               	movwf	postinc1,c
 10537  01AADA  0E00               	movlw	0
 10538  01AADC  6EE6               	movwf	postinc1,c
 10539                           
 10540                           ;stkvar	_a100 @ sp[(-8)+2]
 10541  01AADE  0EFA               	movlw	-6
 10542  01AAE0  006F FF8F FFE6     	movff	plusw1,postinc1
 10543  01AAE6  006F FF8F FFE6     	movff	plusw1,postinc1
 10544  01AAEC  ECD0  F0DA         	call	_check_range	;wreg free
 10545  01AAF0  5001               	movf	btemp^0,w,c
 10546  01AAF2  A4D8               	btfss	status,2,c
 10547  01AAF4  D002               	goto	l10829
 10548  01AAF6                     u9870:
 10549                           
 10550                           ;daq.c: 323:   return 0;
 10551  01AAF6  0E00               	movlw	0
 10552  01AAF8  D025               	goto	L9
 10553  01AAFA                     l10829:
 10554                           
 10555                           ;daq.c: 324:  a200 = get_raw_result(C_BATT);
 10556  01AAFA  0E00               	movlw	0
 10557  01AAFC  6EE6               	movwf	postinc1,c
 10558  01AAFE  ECD7  F0E4         	call	_get_raw_result	;wreg free
 10559                           
 10560                           ;stkvar	_a200 @ sp[(-4)+0]
 10561  01AB02  0EFC               	movlw	-4
 10562  01AB04  0060  F007  FFE3   	movff	btemp,plusw1
 10563  01AB0A  0EFD               	movlw	-3
 10564  01AB0C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 10565                           
 10566                           ;daq.c: 325:  if (!check_range(a200, 100, 4000))
 10567  01AB12  0EA0               	movlw	160
 10568  01AB14  6EE6               	movwf	postinc1,c
 10569  01AB16  0E0F               	movlw	15
 10570  01AB18  6EE6               	movwf	postinc1,c
 10571  01AB1A  0E64               	movlw	100
 10572  01AB1C  6EE6               	movwf	postinc1,c
 10573  01AB1E  0E00               	movlw	0
 10574  01AB20  6EE6               	movwf	postinc1,c
 10575                           
 10576                           ;stkvar	_a200 @ sp[(-8)+0]
 10577  01AB22  0EF8               	movlw	-8
 10578  01AB24  006F FF8F FFE6     	movff	plusw1,postinc1
 10579  01AB2A  006F FF8F FFE6     	movff	plusw1,postinc1
 10580  01AB30  ECD0  F0DA         	call	_check_range	;wreg free
 10581  01AB34  5001               	movf	btemp^0,w,c
 10582  01AB36  B4D8               	btfsc	status,2,c
 10583  01AB38  D7DE               	goto	u9870
 10584                           
 10585                           ;daq.c: 328:  if (!mode)
 10586                           ;stkvar	_mode @ sp[(-4)+-1]
 10587  01AB3A  0EFB               	movlw	-5
 10588  01AB3C  50E3               	movf	plusw1,w,c
 10589  01AB3E  A4D8               	btfss	status,2,c
 10590  01AB40  D003               	goto	l10843
 10591  01AB42                     u9890:
 10592                           
 10593                           ;daq.c: 329:   return 1;
 10594  01AB42  0E01               	movlw	1
 10595  01AB44                     L9:
 10596  01AB44  6E01               	movwf	btemp^0,c
 10597  01AB46  D011               	goto	l1912
 10598  01AB48                     l10843:
 10599                           
 10600                           ;daq.c: 331:  R.n_offset[1] = a100;
 10601                           ;stkvar	_a100 @ sp[(-4)+2]
 10602  01AB48  0EFE               	movlw	-2
 10603  01AB4A  006F FF8C  F0D7    	movff	plusw1,_R+40	;volatile
 10604  01AB50  0EFF               	movlw	-1
 10605  01AB52  006F FF8C  F0D8    	movff	plusw1,_R+41	;volatile
 10606                           
 10607                           ;daq.c: 332:  R.n_offset[0] = a200;
 10608                           ;stkvar	_a200 @ sp[(-4)+0]
 10609  01AB58  0EFC               	movlw	-4
 10610  01AB5A  006F FF8C  F0D5    	movff	plusw1,_R+38	;volatile
 10611  01AB60  0EFD               	movlw	-3
 10612  01AB62  006F FF8C  F0D6    	movff	plusw1,_R+39	;volatile
 10613  01AB68  D7EC               	goto	u9890
 10614  01AB6A                     l1912:
 10615                           
 10616                           ; _cal_current_zero: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 10617  01AB6A  0EFB               	movlw	251
 10618  01AB6C  26E1               	addwf	fsr1l,f,c
 10619  01AB6E  0EFF               	movlw	255
 10620  01AB70  22E2               	addwfc	fsr1h,f,c
 10621  01AB72  0012               	return		;funcret
 10622  01AB74                     __end_of_cal_current_zero:
 10623                           	opt callstack 0
 10624                           
 10625 ;; *************** function _check_range *****************
 10626 ;; Defined at:
 10627 ;;		line 305 in file "daq.c"
 10628 ;; Parameters:    Size  Location     Type
 10629 ;;  value           2  [STACK] short 
 10630 ;;  window          2  [STACK] short 
 10631 ;;  standard        2  [STACK] short 
 10632 ;; Auto vars:     Size  Location     Type
 10633 ;;		None
 10634 ;; Return value:  Size  Location     Type
 10635 ;;                  1  [STACK] _Bool 
 10636 ;; Registers used:
 10637 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 10638 ;; Tracked objects:
 10639 ;;		On entry : 0/0
 10640 ;;		On exit  : 0/0
 10641 ;;		Unchanged: 0/0
 10642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10647 ;;Total ram usage:        0 bytes
 10648 ;; Hardware stack levels used:    1
 10649 ;; Hardware stack levels required when called:   15
 10650 ;; This function calls:
 10651 ;;		Nothing
 10652 ;; This function is called by:
 10653 ;;		_cal_current_zero
 10654 ;; This function uses a reentrant model
 10655 ;;
 10656                           
 10657                           	psect	text34
 10658  01B5A0                     __ptext34:
 10659                           	opt callstack 0
 10660  01B5A0                     _check_range:
 10661                           	opt callstack 13
 10662                           
 10663                           ;daq.c: 305: static _Bool check_range(int16_t value, int16_t window, int16_t standard);d
      +                          aq.c: 306: {;daq.c: 307:  if (value > (standard + window))
 10664                           ;stkvar	_value @ sp[(0)+-2]
 10665                           ;stkvar	_window @ sp[(0)+-4]
 10666                           ;stkvar	_standard @ sp[(0)+-6]
 10667                           
 10668                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10669                           ;incstack = 0
 10670  01B5A0  0EFA               	movlw	-6
 10671  01B5A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 10672  01B5A8  0EFB               	movlw	-5
 10673  01B5AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 10674  01B5B0  0EFC               	movlw	-4
 10675  01B5B2  50E3               	movf	plusw1,w,c
 10676  01B5B4  260B               	addwf	(btemp+10)^0,f,c
 10677  01B5B6  0EFD               	movlw	-3
 10678  01B5B8  50E3               	movf	plusw1,w,c
 10679  01B5BA  220C               	addwfc	(btemp+11)^0,f,c
 10680  01B5BC  0EFE               	movlw	-2
 10681  01B5BE  50E3               	movf	plusw1,w,c
 10682  01B5C0  5C0B               	subwf	(btemp+10)^0,w,c
 10683  01B5C2  500C               	movf	(btemp+11)^0,w,c
 10684  01B5C4  0A80               	xorlw	128
 10685  01B5C6  6E01               	movwf	btemp^0,c
 10686  01B5C8  0EFF               	movlw	-1
 10687  01B5CA  50E3               	movf	plusw1,w,c
 10688  01B5CC  0A80               	xorlw	128
 10689  01B5CE  5801               	subwfb	btemp^0,w,c
 10690  01B5D0  B0D8               	btfsc	status,0,c
 10691  01B5D2  D002               	goto	l10337
 10692  01B5D4                     u9660:
 10693                           
 10694                           ;daq.c: 308:   return 0;
 10695  01B5D4  0E00               	movlw	0
 10696  01B5D6  D01E               	goto	L10
 10697  01B5D8                     l10337:
 10698                           
 10699                           ;daq.c: 309:  if (value < (standard - window))
 10700                           ;stkvar	_window @ sp[(0)+-4]
 10701                           ;stkvar	_standard @ sp[(0)+-6]
 10702  01B5D8  0EFA               	movlw	-6
 10703  01B5DA  006F FF8C  F00B    	movff	plusw1,btemp+10
 10704  01B5E0  0EFB               	movlw	-5
 10705  01B5E2  006F FF8C  F00C    	movff	plusw1,btemp+11
 10706  01B5E8  0EFC               	movlw	-4
 10707  01B5EA  50E3               	movf	plusw1,w,c
 10708  01B5EC  5E0B               	subwf	(btemp+10)^0,f,c
 10709  01B5EE  0EFD               	movlw	-3
 10710  01B5F0  50E3               	movf	plusw1,w,c
 10711  01B5F2  5A0C               	subwfb	(btemp+11)^0,f,c
 10712                           
 10713                           ;stkvar	_value @ sp[(0)+-2]
 10714  01B5F4  0EFE               	movlw	-2
 10715  01B5F6  006F FF8C  F001    	movff	plusw1,btemp
 10716  01B5FC  500B               	movf	(btemp+10)^0,w,c
 10717  01B5FE  5C01               	subwf	btemp^0,w,c
 10718  01B600  0EFF               	movlw	-1
 10719  01B602  50E3               	movf	plusw1,w,c
 10720  01B604  0A80               	xorlw	128
 10721  01B606  6E01               	movwf	btemp^0,c
 10722  01B608  500C               	movf	(btemp+11)^0,w,c
 10723  01B60A  0A80               	xorlw	128
 10724  01B60C  5801               	subwfb	btemp^0,w,c
 10725  01B60E  A0D8               	btfss	status,0,c
 10726  01B610  D7E1               	goto	u9660
 10727                           
 10728                           ;daq.c: 311:  return 1;
 10729  01B612  0E01               	movlw	1
 10730  01B614                     L10:
 10731  01B614  6E01               	movwf	btemp^0,c
 10732                           
 10733                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 10734  01B616  0EFA               	movlw	250
 10735  01B618  26E1               	addwf	fsr1l,f,c
 10736  01B61A  0EFF               	movlw	255
 10737  01B61C  22E2               	addwfc	fsr1h,f,c
 10738  01B61E  0012               	return		;funcret
 10739  01B620                     __end_of_check_range:
 10740                           	opt callstack 0
 10741                           
 10742 ;; *************** function _convert_adc_data *****************
 10743 ;; Defined at:
 10744 ;;		line 51 in file "mbmc.c"
 10745 ;; Parameters:    Size  Location     Type
 10746 ;;		None
 10747 ;; Auto vars:     Size  Location     Type
 10748 ;;  i               1  [STACK] unsigned char 
 10749 ;; Return value:  Size  Location     Type
 10750 ;;                  1  [STACK] void 
 10751 ;; Registers used:
 10752 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10753 ;; Tracked objects:
 10754 ;;		On entry : 0/1
 10755 ;;		On exit  : 0/0
 10756 ;;		Unchanged: 0/0
 10757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10762 ;;Total ram usage:        0 bytes
 10763 ;; Hardware stack levels used:    1
 10764 ;; Hardware stack levels required when called:   18
 10765 ;; This function calls:
 10766 ;;		_conv_raw_result
 10767 ;;		_lp_filter
 10768 ;; This function is called by:
 10769 ;;		_main
 10770 ;; This function uses a reentrant model
 10771 ;;
 10772                           
 10773                           	psect	text35
 10774  01ACF2                     __ptext35:
 10775                           	opt callstack 0
 10776  01ACF2                     _convert_adc_data:
 10777                           	opt callstack 0
 10778                           
 10779                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10780  01ACF2  52E6               	movf	postinc1,f,c
 10781                           
 10782                           ;mbmc.c: 53:  uint8_t i = 0;
 10783                           ;stkvar	_i @ sp[(-1)+0]
 10784                           
 10785                           ;incstack = 0
 10786  01ACF4  0EFF               	movlw	-1
 10787  01ACF6  6AE3               	clrf	plusw1,c
 10788  01ACF8                     l11553:
 10789                           
 10790                           ;mbmc.c: 56:   if (V.calib) {
 10791  01ACF8  0101               	movlb	1	; () banked
 10792  01ACFA  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 10793  01ACFC  B4D8               	btfsc	status,2,c
 10794  01ACFE  D01B               	goto	l11557
 10795                           
 10796                           ; BSR set to: 1
 10797                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 10798  01AD00  0E01               	movlw	1
 10799  01AD02  6EE6               	movwf	postinc1,c
 10800                           
 10801                           ;stkvar	_i @ sp[(-2)+0]
 10802  01AD04  0EFE               	movlw	-2
 10803  01AD06  50E3               	movf	plusw1,w,c
 10804  01AD08  6EE6               	movwf	postinc1,c
 10805  01AD0A  0E01               	movlw	1
 10806  01AD0C  6EE6               	movwf	postinc1,c
 10807                           
 10808                           ;stkvar	_i @ sp[(-4)+0]
 10809  01AD0E  0EFC               	movlw	-4
 10810  01AD10  50E3               	movf	plusw1,w,c
 10811  01AD12  6EE6               	movwf	postinc1,c
 10812  01AD14  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 10813  01AD18  0060  F007  FFE6   	movff	btemp,postinc1
 10814  01AD1E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10815  01AD24  0060  F00F  FFE6   	movff	btemp+2,postinc1
 10816  01AD2A  0060  F013  FFE6   	movff	btemp+3,postinc1
 10817  01AD30  EC3F  F0C6         	call	_lp_filter	;wreg free
 10818  01AD34  D01A               	goto	L11
 10819  01AD36                     l11557:
 10820                           
 10821                           ; BSR set to: 1
 10822                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 10823  01AD36  0E00               	movlw	0
 10824  01AD38  6EE6               	movwf	postinc1,c
 10825                           
 10826                           ;stkvar	_i @ sp[(-2)+0]
 10827  01AD3A  0EFE               	movlw	-2
 10828  01AD3C  50E3               	movf	plusw1,w,c
 10829  01AD3E  6EE6               	movwf	postinc1,c
 10830  01AD40  0E00               	movlw	0
 10831  01AD42  6EE6               	movwf	postinc1,c
 10832                           
 10833                           ;stkvar	_i @ sp[(-4)+0]
 10834  01AD44  0EFC               	movlw	-4
 10835  01AD46  50E3               	movf	plusw1,w,c
 10836  01AD48  6EE6               	movwf	postinc1,c
 10837  01AD4A  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 10838  01AD4E  0060  F007  FFE6   	movff	btemp,postinc1
 10839  01AD54  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10840  01AD5A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 10841  01AD60  0060  F013  FFE6   	movff	btemp+3,postinc1
 10842  01AD66  EC3F  F0C6         	call	_lp_filter	;wreg free
 10843  01AD6A                     L11:
 10844                           
 10845                           ;stkvar	_i @ sp[(-1)+0]
 10846  01AD6A  0EFF               	movlw	-1
 10847  01AD6C  50E3               	movf	plusw1,w,c
 10848  01AD6E  0D04               	mullw	4
 10849  01AD70  0EFF               	movlw	low _C
 10850  01AD72  24F3               	addwf	243,w,c
 10851  01AD74  6ED9               	movwf	fsr2l,c
 10852  01AD76  0E06               	movlw	high _C
 10853  01AD78  20F4               	addwfc	prodh,w,c
 10854  01AD7A  6EDA               	movwf	fsr2h,c
 10855  01AD7C  0060  F007  FFDE   	movff	btemp,postinc2
 10856  01AD82  0060  F00B  FFDE   	movff	btemp+1,postinc2
 10857  01AD88  0060  F00F  FFDE   	movff	btemp+2,postinc2
 10858  01AD8E  0060  F013  FFDE   	movff	btemp+3,postinc2
 10859                           
 10860                           ;mbmc.c: 61:  } while (++i < 16);
 10861                           ;stkvar	_i @ sp[(-1)+0]
 10862  01AD94  0EFF               	movlw	-1
 10863  01AD96  2AE3               	incf	plusw1,f,c
 10864  01AD98  0EFF               	movlw	-1
 10865  01AD9A  006F FF8C  F001    	movff	plusw1,btemp
 10866  01ADA0  0E0F               	movlw	15
 10867  01ADA2  6401               	cpfsgt	btemp^0,c
 10868  01ADA4  D7A9               	goto	l11553
 10869                           
 10870                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10871  01ADA6  52E5               	movf	postdec1,f,c
 10872  01ADA8  0012               	return		;funcret
 10873  01ADAA                     __end_of_convert_adc_data:
 10874                           	opt callstack 0
 10875                           
 10876 ;; *************** function _clear_hid_pflags *****************
 10877 ;; Defined at:
 10878 ;;		line 67 in file "hid.c"
 10879 ;; Parameters:    Size  Location     Type
 10880 ;;  h               2  [STACK] PTR struct H_data
 10881 ;;		 -> H(9), 
 10882 ;; Auto vars:     Size  Location     Type
 10883 ;;		None
 10884 ;; Return value:  Size  Location     Type
 10885 ;;                  1  [STACK] void 
 10886 ;; Registers used:
 10887 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 10888 ;; Tracked objects:
 10889 ;;		On entry : 3E/0
 10890 ;;		On exit  : 0/0
 10891 ;;		Unchanged: 0/0
 10892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10897 ;;Total ram usage:        0 bytes
 10898 ;; Hardware stack levels used:    1
 10899 ;; Hardware stack levels required when called:   15
 10900 ;; This function calls:
 10901 ;;		Nothing
 10902 ;; This function is called by:
 10903 ;;		_main
 10904 ;; This function uses a reentrant model
 10905 ;;
 10906                           
 10907                           	psect	text36
 10908  01B942                     __ptext36:
 10909                           	opt callstack 0
 10910  01B942                     _clear_hid_pflags:
 10911                           	opt callstack 15
 10912                           
 10913                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 10914                           ;stkvar	_h @ sp[(0)+-2]
 10915                           
 10916                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10917                           ;incstack = 0
 10918  01B942  0EFE               	movlw	-2
 10919  01B944  006F FF8C  F00B    	movff	plusw1,btemp+10
 10920  01B94A  0EFF               	movlw	-1
 10921  01B94C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10922  01B952  0E03               	movlw	3
 10923  01B954  240B               	addwf	(btemp+10)^0,w,c
 10924  01B956  6ED9               	movwf	fsr2l,c
 10925  01B958  0E00               	movlw	0
 10926  01B95A  200C               	addwfc	(btemp+11)^0,w,c
 10927  01B95C  6EDA               	movwf	fsr2h,c
 10928  01B95E  0E00               	movlw	0
 10929  01B960  6EDF               	movwf	indf2,c
 10930                           
 10931                           ;hid.c: 70:  h->enter_p = SW_OFF;
 10932                           ;stkvar	_h @ sp[(0)+-2]
 10933  01B962  0EFE               	movlw	-2
 10934  01B964  006F FF8C  F00B    	movff	plusw1,btemp+10
 10935  01B96A  0EFF               	movlw	-1
 10936  01B96C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10937  01B972  0E05               	movlw	5
 10938  01B974  240B               	addwf	(btemp+10)^0,w,c
 10939  01B976  6ED9               	movwf	fsr2l,c
 10940  01B978  0E00               	movlw	0
 10941  01B97A  200C               	addwfc	(btemp+11)^0,w,c
 10942  01B97C  6EDA               	movwf	fsr2h,c
 10943  01B97E  0E00               	movlw	0
 10944  01B980  6EDF               	movwf	indf2,c
 10945                           
 10946                           ;hid.c: 71:  h->calib_p = SW_OFF;
 10947                           ;stkvar	_h @ sp[(0)+-2]
 10948  01B982  0EFE               	movlw	-2
 10949  01B984  006F FF8C  F00B    	movff	plusw1,btemp+10
 10950  01B98A  0EFF               	movlw	-1
 10951  01B98C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10952  01B992  0E07               	movlw	7
 10953  01B994  240B               	addwf	(btemp+10)^0,w,c
 10954  01B996  6ED9               	movwf	fsr2l,c
 10955  01B998  0E00               	movlw	0
 10956  01B99A  200C               	addwfc	(btemp+11)^0,w,c
 10957  01B99C  6EDA               	movwf	fsr2h,c
 10958  01B99E  0E00               	movlw	0
 10959  01B9A0  6EDF               	movwf	indf2,c
 10960                           
 10961                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 10962  01B9A2  52E5               	movf	postdec1,f,c
 10963  01B9A4  52E5               	movf	postdec1,f,c
 10964  01B9A6  0012               	return		;funcret
 10965  01B9A8                     __end_of_clear_hid_pflags:
 10966                           	opt callstack 0
 10967                           
 10968 ;; *************** function _check_help *****************
 10969 ;; Defined at:
 10970 ;;		line 40 in file "mconfig.c"
 10971 ;; Parameters:    Size  Location     Type
 10972 ;;  flipper         1  [STACK] const _Bool 
 10973 ;; Auto vars:     Size  Location     Type
 10974 ;;  estatus         1    0        _Bool 
 10975 ;; Return value:  Size  Location     Type
 10976 ;;                  1  [STACK] _Bool 
 10977 ;; Registers used:
 10978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10979 ;; Tracked objects:
 10980 ;;		On entry : 3F/1
 10981 ;;		On exit  : 0/0
 10982 ;;		Unchanged: 0/0
 10983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10988 ;;Total ram usage:        0 bytes
 10989 ;; Hardware stack levels used:    1
 10990 ;; Hardware stack levels required when called:   28
 10991 ;; This function calls:
 10992 ;;		_StartTimer
 10993 ;;		_TimerDone
 10994 ;;		_display_help
 10995 ;;		_display_info
 10996 ;;		_get_vterm_ptr
 10997 ;;		_help_button
 10998 ;;		_mode_lamp_bright
 10999 ;;		_mode_lamp_dim
 11000 ;;		_set_display_info
 11001 ;;		_set_temp_display_help
 11002 ;;		_set_vterm
 11003 ;;		_sprintf
 11004 ;;		_update_lcd
 11005 ;;		_vterm_dump
 11006 ;; This function is called by:
 11007 ;;		_main
 11008 ;; This function uses a reentrant model
 11009 ;;
 11010                           
 11011                           	psect	text37
 11012  018868                     __ptext37:
 11013                           	opt callstack 0
 11014  018868                     _check_help:
 11015                           	opt callstack 2
 11016                           
 11017                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 11018                           
 11019                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11020                           ;incstack = 0
 11021  018868  EC0A  F0E1         	call	_help_button	;wreg free
 11022  01886C  5001               	movf	btemp^0,w,c
 11023  01886E  B4D8               	btfsc	status,2,c
 11024  018870  D0D0               	goto	l13723
 11025  018872  ECB5  F0E5         	call	_display_info	;wreg free
 11026  018876  0401               	decf	btemp^0,w,c
 11027  018878  B4D8               	btfsc	status,2,c
 11028  01887A  D0CB               	goto	l13723
 11029                           
 11030                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 11031  01887C  0EDC               	movlw	220
 11032  01887E  6EE6               	movwf	postinc1,c
 11033  018880  0E05               	movlw	5
 11034  018882  6EE6               	movwf	postinc1,c
 11035  018884  0E0B               	movlw	11
 11036  018886  6EE6               	movwf	postinc1,c
 11037  018888  EC6E  F0E0         	call	_StartTimer	;wreg free
 11038                           
 11039                           ;mconfig.c: 48:   if (V.debug)
 11040  01888C  0101               	movlb	1	; () banked
 11041  01888E  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
 11042                           
 11043                           ; BSR set to: 1
 11044                           ;mconfig.c: 49:    vterm_dump();
 11045  018890  ECDB  F0CE         	call	_vterm_dump	;wreg free
 11046                           
 11047                           ;mconfig.c: 51:   set_vterm(1);
 11048  018894  0E01               	movlw	1
 11049  018896  6EE6               	movwf	postinc1,c
 11050  018898  ECB9  F0E4         	call	_set_vterm	;wreg free
 11051                           
 11052                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 11053  01889C  ECB5  F0E5         	call	_display_info	;wreg free
 11054  0188A0  5001               	movf	btemp^0,w,c
 11055  0188A2  6EE6               	movwf	postinc1,c
 11056  0188A4  EC5D  F0E5         	call	_set_temp_display_help	;wreg free
 11057                           
 11058                           ; BSR set to: 1
 11059                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 11060  0188A8  0E01               	movlw	1
 11061  0188AA  6EE6               	movwf	postinc1,c
 11062  0188AC  ECC8  F0E4         	call	_set_display_info	;wreg free
 11063                           
 11064                           ;mconfig.c: 54:   if (flipper) {
 11065                           ;stkvar	_flipper @ sp[(0)+-1]
 11066  0188B0  0EFF               	movlw	-1
 11067  0188B2  50E3               	movf	plusw1,w,c
 11068  0188B4  B4D8               	btfsc	status,2,c
 11069  0188B6  D019               	goto	l13709
 11070                           
 11071                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 11072  0188B8  0EB2               	movlw	low STR_59
 11073  0188BA  6EE6               	movwf	postinc1,c
 11074  0188BC  0EFF               	movlw	high STR_59
 11075  0188BE  6EE6               	movwf	postinc1,c
 11076  0188C0  0E5C               	movlw	low STR_61
 11077  0188C2  6EE6               	movwf	postinc1,c
 11078  0188C4  0EFF               	movlw	high STR_61
 11079  0188C6  6EE6               	movwf	postinc1,c
 11080  0188C8  0E01               	movlw	1
 11081  0188CA  6EE6               	movwf	postinc1,c
 11082  0188CC  0E00               	movlw	0
 11083  0188CE  6EE6               	movwf	postinc1,c
 11084  0188D0  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
 11085  0188D4  0060  F007  FFE6   	movff	btemp,postinc1
 11086  0188DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11087  0188E0  0E06               	movlw	6
 11088  0188E2  6EE6               	movwf	postinc1,c
 11089  0188E4  EC2E  F0D2         	call	_sprintf	;wreg free
 11090                           
 11091                           ;mconfig.c: 56:   } else {
 11092  0188E8  D018               	goto	l1699
 11093  0188EA                     l13709:
 11094                           
 11095                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 11096  0188EA  0EC8               	movlw	low STR_60
 11097  0188EC  6EE6               	movwf	postinc1,c
 11098  0188EE  0EFF               	movlw	high STR_60
 11099  0188F0  6EE6               	movwf	postinc1,c
 11100  0188F2  0E5C               	movlw	low STR_61
 11101  0188F4  6EE6               	movwf	postinc1,c
 11102  0188F6  0EFF               	movlw	high STR_61
 11103  0188F8  6EE6               	movwf	postinc1,c
 11104  0188FA  0E01               	movlw	1
 11105  0188FC  6EE6               	movwf	postinc1,c
 11106  0188FE  0E00               	movlw	0
 11107  018900  6EE6               	movwf	postinc1,c
 11108  018902  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
 11109  018906  0060  F007  FFE6   	movff	btemp,postinc1
 11110  01890C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11111  018912  0E06               	movlw	6
 11112  018914  6EE6               	movwf	postinc1,c
 11113  018916  EC2E  F0D2         	call	_sprintf	;wreg free
 11114  01891A                     l1699:
 11115                           
 11116                           ; BSR set to: 0
 11117                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 11118  01891A  0101               	movlb	1	; () banked
 11119  01891C  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 11120  01891E  32E8               	rrcf	wreg,f,c
 11121  018920  32E8               	rrcf	wreg,f,c
 11122  018922  0B03               	andlw	3
 11123  018924  0D24               	mullw	36
 11124  018926  0E12               	movlw	18
 11125  018928  26F3               	addwf	243,f,c
 11126  01892A  0E00               	movlw	0
 11127  01892C  22F4               	addwfc	244,f,c
 11128  01892E  0EDD               	movlw	low _T
 11129  018930  6E0B               	movwf	(btemp+10)^0,c
 11130  018932  0EF9               	movlw	high _T
 11131  018934  6E0C               	movwf	(btemp+11)^0,c
 11132  018936  50F3               	movf	243,w,c
 11133  018938  260B               	addwf	(btemp+10)^0,f,c
 11134  01893A  50F4               	movf	244,w,c
 11135  01893C  220C               	addwfc	(btemp+11)^0,f,c
 11136  01893E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11137  018944  0060  F033  FFE6   	movff	btemp+11,postinc1
 11138  01894A  0EBE               	movlw	low STR_63
 11139  01894C  6EE6               	movwf	postinc1,c
 11140  01894E  0EFF               	movlw	high STR_63
 11141  018950  6EE6               	movwf	postinc1,c
 11142  018952  0E01               	movlw	1
 11143  018954  6EE6               	movwf	postinc1,c
 11144  018956  0E01               	movlw	1
 11145  018958  6EE6               	movwf	postinc1,c
 11146  01895A  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
 11147  01895E  0060  F007  FFE6   	movff	btemp,postinc1
 11148  018964  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11149  01896A  0E06               	movlw	6
 11150  01896C  6EE6               	movwf	postinc1,c
 11151  01896E  EC2E  F0D2         	call	_sprintf	;wreg free
 11152                           
 11153                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 11154  018972  0101               	movlb	1	; () banked
 11155  018974  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 11156  018976  32E8               	rrcf	wreg,f,c
 11157  018978  32E8               	rrcf	wreg,f,c
 11158  01897A  0B03               	andlw	3
 11159  01897C  0D24               	mullw	36
 11160  01897E  0EDD               	movlw	low _T
 11161  018980  6E0B               	movwf	(btemp+10)^0,c
 11162  018982  0EF9               	movlw	high _T
 11163  018984  6E0C               	movwf	(btemp+11)^0,c
 11164  018986  50F3               	movf	243,w,c
 11165  018988  260B               	addwf	(btemp+10)^0,f,c
 11166  01898A  50F4               	movf	244,w,c
 11167  01898C  220C               	addwfc	(btemp+11)^0,f,c
 11168  01898E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11169  018994  0060  F033  FFE6   	movff	btemp+11,postinc1
 11170  01899A  0EBE               	movlw	low STR_63
 11171  01899C  6EE6               	movwf	postinc1,c
 11172  01899E  0EFF               	movlw	high STR_63
 11173  0189A0  6EE6               	movwf	postinc1,c
 11174  0189A2  0E01               	movlw	1
 11175  0189A4  6EE6               	movwf	postinc1,c
 11176  0189A6  0E02               	movlw	2
 11177  0189A8  6EE6               	movwf	postinc1,c
 11178  0189AA  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
 11179  0189AE  0060  F007  FFE6   	movff	btemp,postinc1
 11180  0189B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11181  0189BA  0E06               	movlw	6
 11182  0189BC  6EE6               	movwf	postinc1,c
 11183  0189BE  EC2E  F0D2         	call	_sprintf	;wreg free
 11184                           
 11185                           ; BSR set to: 0
 11186                           ;mconfig.c: 61:   V.help_id++;
 11187  0189C2  EE20  F1A2         	lfsr	2,_V+155	;volatile
 11188  0189C6  38DF               	swapf	223,w,c
 11189  0189C8  6E0C               	movwf	(btemp+11)^0,c
 11190  0189CA  320C               	rrcf	(btemp+11)^0,f,c
 11191  0189CC  300C               	rrcf	(btemp+11)^0,w,c
 11192  0189CE  0B03               	andlw	3
 11193  0189D0  6E0C               	movwf	(btemp+11)^0,c
 11194  0189D2  2A0C               	incf	(btemp+11)^0,f,c
 11195  0189D4  3A0C               	swapf	(btemp+11)^0,f,c
 11196  0189D6  360C               	rlcf	(btemp+11)^0,f,c
 11197  0189D8  360C               	rlcf	(btemp+11)^0,f,c
 11198  0189DA  50DF               	movf	223,w,c
 11199  0189DC  180C               	xorwf	(btemp+11)^0,w,c
 11200  0189DE  0B3F               	andlw	-193
 11201  0189E0  180C               	xorwf	(btemp+11)^0,w,c
 11202  0189E2  6EDF               	movwf	223,c
 11203                           
 11204                           ; BSR set to: 0
 11205                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 11206  0189E4  0EB8               	movlw	184
 11207  0189E6  6EE6               	movwf	postinc1,c
 11208  0189E8  0E0B               	movlw	11
 11209  0189EA  6EE6               	movwf	postinc1,c
 11210  0189EC  0E09               	movlw	9
 11211  0189EE  6EE6               	movwf	postinc1,c
 11212  0189F0  EC6E  F0E0         	call	_StartTimer	;wreg free
 11213                           
 11214                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 11215  0189F4  0EB8               	movlw	184
 11216  0189F6  6EE6               	movwf	postinc1,c
 11217  0189F8  0E0B               	movlw	11
 11218  0189FA  6EE6               	movwf	postinc1,c
 11219  0189FC  0E07               	movlw	7
 11220  0189FE  6EE6               	movwf	postinc1,c
 11221  018A00  EC6E  F0E0         	call	_StartTimer	;wreg free
 11222                           
 11223                           ;mconfig.c: 64:   mode_lamp_bright();
 11224  018A04  EC74  F0E5         	call	_mode_lamp_bright	;wreg free
 11225                           
 11226                           ;mconfig.c: 65:   update_lcd(1);
 11227  018A08  0E01               	movlw	1
 11228  018A0A  6EE6               	movwf	postinc1,c
 11229  018A0C  ECA6  F0D1         	call	_update_lcd	;wreg free
 11230                           
 11231                           ;mconfig.c: 67:  } else {
 11232  018A10  D032               	goto	l1700
 11233  018A12                     l13723:
 11234                           
 11235                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 11236  018A12  0E09               	movlw	9
 11237  018A14  6EE6               	movwf	postinc1,c
 11238  018A16  ECC3  F0E2         	call	_TimerDone	;wreg free
 11239  018A1A  5001               	movf	btemp^0,w,c
 11240  018A1C  B4D8               	btfsc	status,2,c
 11241  018A1E  D02B               	goto	l1700
 11242                           
 11243                           ;mconfig.c: 69:    set_vterm(0);
 11244  018A20  0E00               	movlw	0
 11245  018A22  6EE6               	movwf	postinc1,c
 11246  018A24  ECB9  F0E4         	call	_set_vterm	;wreg free
 11247                           
 11248                           ;mconfig.c: 70:    V.help = 0;
 11249  018A28  0101               	movlb	1	; () banked
 11250  018A2A  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
 11251                           
 11252                           ; BSR set to: 1
 11253                           ;mconfig.c: 71:    set_display_info(display_help());
 11254  018A2C  ECB9  F0E5         	call	_display_help	;wreg free
 11255  018A30  5001               	movf	btemp^0,w,c
 11256  018A32  6EE6               	movwf	postinc1,c
 11257  018A34  ECC8  F0E4         	call	_set_display_info	;wreg free
 11258                           
 11259                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 11260  018A38  0060  F673  FFE6   	movff	_V+149,postinc1
 11261  018A3E  0060  F677  FFE6   	movff	_V+150,postinc1
 11262  018A44  EC01  F0E5         	call	_mode_lamp_dim	;wreg free
 11263                           
 11264                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 11265  018A48  0E0B               	movlw	11
 11266  018A4A  6EE6               	movwf	postinc1,c
 11267  018A4C  ECC3  F0E2         	call	_TimerDone	;wreg free
 11268  018A50  5001               	movf	btemp^0,w,c
 11269  018A52  B4D8               	btfsc	status,2,c
 11270  018A54  D010               	goto	l1700
 11271                           
 11272                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 11273  018A56  0101               	movlb	1	; () banked
 11274  018A58  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
 11275  018A5A  A4D8               	btfss	status,2,c
 11276  018A5C  D002               	goto	u13170
 11277  018A5E  0E01               	movlw	1
 11278  018A60  D001               	goto	u13180
 11279  018A62                     u13170:
 11280  018A62  0E00               	movlw	0
 11281  018A64                     u13180:
 11282  018A64  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
 11283                           
 11284                           ; BSR set to: 1
 11285                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 11286  018A66  0EDC               	movlw	220
 11287  018A68  6EE6               	movwf	postinc1,c
 11288  018A6A  0E05               	movlw	5
 11289  018A6C  6EE6               	movwf	postinc1,c
 11290  018A6E  0E0B               	movlw	11
 11291  018A70  6EE6               	movwf	postinc1,c
 11292  018A72  EC6E  F0E0         	call	_StartTimer	;wreg free
 11293  018A76                     l1700:
 11294                           
 11295                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 11296  018A76  52E5               	movf	postdec1,f,c
 11297  018A78  0012               	return		;funcret
 11298  018A7A                     __end_of_check_help:
 11299                           	opt callstack 0
 11300                           
 11301 ;; *************** function _vterm_dump *****************
 11302 ;; Defined at:
 11303 ;;		line 121 in file "mconfig.c"
 11304 ;; Parameters:    Size  Location     Type
 11305 ;;		None
 11306 ;; Auto vars:     Size  Location     Type
 11307 ;;		None
 11308 ;; Return value:  Size  Location     Type
 11309 ;;                  1  [STACK] void 
 11310 ;; Registers used:
 11311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11312 ;; Tracked objects:
 11313 ;;		On entry : 3F/1
 11314 ;;		On exit  : 0/0
 11315 ;;		Unchanged: 0/0
 11316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11321 ;;Total ram usage:        0 bytes
 11322 ;; Hardware stack levels used:    1
 11323 ;; Hardware stack levels required when called:   27
 11324 ;; This function calls:
 11325 ;;		_WaitMs
 11326 ;;		_eaDogM_WriteStringAtPos
 11327 ;;		_get_vterm_ptr
 11328 ;;		_sprintf
 11329 ;;		_wait_lcd_done
 11330 ;; This function is called by:
 11331 ;;		_check_help
 11332 ;; This function uses a reentrant model
 11333 ;;
 11334                           
 11335                           	psect	text38
 11336  019DB6                     __ptext38:
 11337                           	opt callstack 0
 11338  019DB6                     _vterm_dump:
 11339                           	opt callstack 2
 11340                           
 11341                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 11342                           
 11343                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11344                           ;incstack = 0
 11345  019DB6  0E01               	movlw	1
 11346  019DB8  6EE6               	movwf	postinc1,c
 11347  019DBA  0E00               	movlw	0
 11348  019DBC  6EE6               	movwf	postinc1,c
 11349  019DBE  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
 11350  019DC2  0060  F007  FFE6   	movff	btemp,postinc1
 11351  019DC8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11352  019DCE  0E00               	movlw	0
 11353  019DD0  6EE6               	movwf	postinc1,c
 11354  019DD2  0E00               	movlw	0
 11355  019DD4  6EE6               	movwf	postinc1,c
 11356  019DD6  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
 11357  019DDA  0060  F007  FFE6   	movff	btemp,postinc1
 11358  019DE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11359  019DE6  0EA3               	movlw	low STR_65
 11360  019DE8  6EE6               	movwf	postinc1,c
 11361  019DEA  0EFF               	movlw	high STR_65
 11362  019DEC  6EE6               	movwf	postinc1,c
 11363  019DEE  0E08               	movlw	low (_V+1)
 11364  019DF0  6EE6               	movwf	postinc1,c
 11365  019DF2  0E01               	movlw	high (_V+1)
 11366  019DF4  6EE6               	movwf	postinc1,c
 11367  019DF6  0E08               	movlw	8
 11368  019DF8  6EE6               	movwf	postinc1,c
 11369  019DFA  EC2E  F0D2         	call	_sprintf	;wreg free
 11370                           
 11371                           ; BSR set to: 0
 11372                           ;mconfig.c: 124:  wait_lcd_done();
 11373  019DFE  EC48  F0E4         	call	_wait_lcd_done	;wreg free
 11374                           
 11375                           ; BSR set to: 0
 11376                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 11377  019E02  0E08               	movlw	low (_V+1)
 11378  019E04  6EE6               	movwf	postinc1,c
 11379  019E06  0E01               	movlw	high (_V+1)
 11380  019E08  6EE6               	movwf	postinc1,c
 11381  019E0A  0E00               	movlw	0
 11382  019E0C  6EE6               	movwf	postinc1,c
 11383  019E0E  0E00               	movlw	0
 11384  019E10  6EE6               	movwf	postinc1,c
 11385  019E12  EC32  F0D8         	call	_eaDogM_WriteStringAtPos	;wreg free
 11386                           
 11387                           ; BSR set to: 59
 11388                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 11389  019E16  0E01               	movlw	1
 11390  019E18  6EE6               	movwf	postinc1,c
 11391  019E1A  0E01               	movlw	1
 11392  019E1C  6EE6               	movwf	postinc1,c
 11393  019E1E  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
 11394  019E22  0060  F007  FFE6   	movff	btemp,postinc1
 11395  019E28  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11396  019E2E  0E00               	movlw	0
 11397  019E30  6EE6               	movwf	postinc1,c
 11398  019E32  0E01               	movlw	1
 11399  019E34  6EE6               	movwf	postinc1,c
 11400  019E36  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
 11401  019E3A  0060  F007  FFE6   	movff	btemp,postinc1
 11402  019E40  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11403  019E46  0EA3               	movlw	low STR_65
 11404  019E48  6EE6               	movwf	postinc1,c
 11405  019E4A  0EFF               	movlw	high STR_65
 11406  019E4C  6EE6               	movwf	postinc1,c
 11407  019E4E  0E08               	movlw	low (_V+1)
 11408  019E50  6EE6               	movwf	postinc1,c
 11409  019E52  0E01               	movlw	high (_V+1)
 11410  019E54  6EE6               	movwf	postinc1,c
 11411  019E56  0E08               	movlw	8
 11412  019E58  6EE6               	movwf	postinc1,c
 11413  019E5A  EC2E  F0D2         	call	_sprintf	;wreg free
 11414                           
 11415                           ; BSR set to: 0
 11416                           ;mconfig.c: 127:  wait_lcd_done();
 11417  019E5E  EC48  F0E4         	call	_wait_lcd_done	;wreg free
 11418                           
 11419                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 11420  019E62  0E08               	movlw	low (_V+1)
 11421  019E64  6EE6               	movwf	postinc1,c
 11422  019E66  0E01               	movlw	high (_V+1)
 11423  019E68  6EE6               	movwf	postinc1,c
 11424  019E6A  0E00               	movlw	0
 11425  019E6C  6EE6               	movwf	postinc1,c
 11426  019E6E  0E01               	movlw	1
 11427  019E70  6EE6               	movwf	postinc1,c
 11428  019E72  EC32  F0D8         	call	_eaDogM_WriteStringAtPos	;wreg free
 11429                           
 11430                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 11431  019E76  0E01               	movlw	1
 11432  019E78  6EE6               	movwf	postinc1,c
 11433  019E7A  0E02               	movlw	2
 11434  019E7C  6EE6               	movwf	postinc1,c
 11435  019E7E  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
 11436  019E82  0060  F007  FFE6   	movff	btemp,postinc1
 11437  019E88  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11438  019E8E  0E00               	movlw	0
 11439  019E90  6EE6               	movwf	postinc1,c
 11440  019E92  0E02               	movlw	2
 11441  019E94  6EE6               	movwf	postinc1,c
 11442  019E96  EC40  F0E2         	call	_get_vterm_ptr	;wreg free
 11443  019E9A  0060  F007  FFE6   	movff	btemp,postinc1
 11444  019EA0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11445  019EA6  0EA3               	movlw	low STR_65
 11446  019EA8  6EE6               	movwf	postinc1,c
 11447  019EAA  0EFF               	movlw	high STR_65
 11448  019EAC  6EE6               	movwf	postinc1,c
 11449  019EAE  0E08               	movlw	low (_V+1)
 11450  019EB0  6EE6               	movwf	postinc1,c
 11451  019EB2  0E01               	movlw	high (_V+1)
 11452  019EB4  6EE6               	movwf	postinc1,c
 11453  019EB6  0E08               	movlw	8
 11454  019EB8  6EE6               	movwf	postinc1,c
 11455  019EBA  EC2E  F0D2         	call	_sprintf	;wreg free
 11456                           
 11457                           ; BSR set to: 0
 11458                           ;mconfig.c: 130:  wait_lcd_done();
 11459  019EBE  EC48  F0E4         	call	_wait_lcd_done	;wreg free
 11460                           
 11461                           ; BSR set to: 0
 11462                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 11463  019EC2  0E08               	movlw	low (_V+1)
 11464  019EC4  6EE6               	movwf	postinc1,c
 11465  019EC6  0E01               	movlw	high (_V+1)
 11466  019EC8  6EE6               	movwf	postinc1,c
 11467  019ECA  0E00               	movlw	0
 11468  019ECC  6EE6               	movwf	postinc1,c
 11469  019ECE  0E02               	movlw	2
 11470  019ED0  6EE6               	movwf	postinc1,c
 11471  019ED2  EC32  F0D8         	call	_eaDogM_WriteStringAtPos	;wreg free
 11472                           
 11473                           ; BSR set to: 59
 11474                           ;mconfig.c: 132:  WaitMs(3000);
 11475  019ED6  0EB8               	movlw	184
 11476  019ED8  6EE6               	movwf	postinc1,c
 11477  019EDA  0E0B               	movlw	11
 11478  019EDC  6EE6               	movwf	postinc1,c
 11479  019EDE  EC5D  F0E1         	call	_WaitMs	;wreg free
 11480                           
 11481                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 11482  019EE2  0012               	return		;funcret
 11483  019EE4                     __end_of_vterm_dump:
 11484                           	opt callstack 0
 11485                           
 11486 ;; *************** function _sprintf *****************
 11487 ;; Defined at:
 11488 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 11489 ;; Parameters:    Size  Location     Type
 11490 ;;  s               2  [STACK] PTR unsigned char 
 11491 ;;		 -> D.lcd(480), D(482), port_data(512), V(192), 
 11492 ;;  fmt             2  [STACK] PTR const unsigned char 
 11493 ;;		 -> STR_78(127), STR_76(3), STR_75(3), STR_74(19), 
 11494 ;;		 -> STR_73(19), STR_72(19), STR_71(19), STR_70(19), 
 11495 ;;		 -> STR_69(19), STR_68(24), STR_67(15), STR_66(15), 
 11496 ;;		 -> STR_65(15), STR_64(10), STR_63(10), STR_62(19), 
 11497 ;;		 -> STR_61(19), STR_56(21), STR_55(21), STR_54(21), 
 11498 ;;		 -> STR_53(21), STR_52(21), STR_51(21), STR_50(21), 
 11499 ;;		 -> STR_49(21), STR_48(21), STR_47(20), STR_46(20), 
 11500 ;;		 -> STR_45(21), STR_44(21), STR_43(21), STR_42(22), 
 11501 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 11502 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 11503 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 11504 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 11505 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 11506 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 11507 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 11508 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 11509 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 11510 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 11511 ;; Auto vars:     Size  Location     Type
 11512 ;;  f               6  [STACK] struct _IO_FILE
 11513 ;;  ap              2  [STACK] PTR void [1]
 11514 ;;		 -> ?_printf(2), ?_sprintf(2), 
 11515 ;;  ret             2    0        int 
 11516 ;; Return value:  Size  Location     Type
 11517 ;;                  2  [STACK] int 
 11518 ;; Registers used:
 11519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11520 ;; Tracked objects:
 11521 ;;		On entry : 0/1
 11522 ;;		On exit  : 3F/0
 11523 ;;		Unchanged: 0/0
 11524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11529 ;;Total ram usage:        0 bytes
 11530 ;; Hardware stack levels used:    1
 11531 ;; Hardware stack levels required when called:   23
 11532 ;; This function calls:
 11533 ;;		_vfprintf
 11534 ;; This function is called by:
 11535 ;;		_main
 11536 ;;		_current_sensor_cal
 11537 ;;		_check_help
 11538 ;;		_vterm_dump
 11539 ;;		_calc_bsoc
 11540 ;; This function uses a reentrant model
 11541 ;;
 11542                           
 11543                           	psect	text39
 11544  01A45C                     __ptext39:
 11545                           	opt callstack 0
 11546  01A45C                     _sprintf:
 11547                           	opt callstack 0
 11548                           
 11549                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11550  01A45C  0E08               	movlw	8
 11551  01A45E  26E1               	addwf	fsr1l,f,c
 11552  01A460  0E00               	movlw	0
 11553  01A462  22E2               	addwfc	fsr1h,f,c
 11554                           
 11555                           ;incstack = 0
 11556 ;; hardware stack exceeded
 11557  01A464  0EFE               	movlw	254
 11558  01A466  6E0B               	movwf	(btemp+10)^0,c
 11559  01A468  0EFF               	movlw	255
 11560  01A46A  6E0C               	movwf	(btemp+11)^0,c
 11561                           
 11562                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 11563  01A46C  0EF5               	movlw	245
 11564  01A46E  24E1               	addwf	fsr1l,w,c
 11565  01A470  6E09               	movwf	(btemp+8)^0,c
 11566  01A472  0EFF               	movlw	255
 11567  01A474  20E2               	addwfc	fsr1h,w,c
 11568  01A476  6E0A               	movwf	(btemp+9)^0,c
 11569  01A478  500B               	movf	(btemp+10)^0,w,c
 11570  01A47A  2609               	addwf	(btemp+8)^0,f,c
 11571  01A47C  500C               	movf	(btemp+11)^0,w,c
 11572  01A47E  220A               	addwfc	(btemp+9)^0,f,c
 11573                           
 11574                           ;stkvar	_ap @ sp[(-8)+6]
 11575  01A480  0EFF               	movlw	-1
 11576  01A482  0060  F02B  FFE3   	movff	btemp+9,plusw1
 11577  01A488  0EFE               	movlw	-2
 11578  01A48A  0060  F027  FFE3   	movff	btemp+8,plusw1
 11579                           
 11580                           ;stkvar	_s @ sp[(-8)+-3]
 11581  01A490  0EF5               	movlw	-11
 11582  01A492  006F FF8C  F00B    	movff	plusw1,btemp+10
 11583  01A498  0EF6               	movlw	-10
 11584  01A49A  006F FF8C  F00C    	movff	plusw1,btemp+11
 11585                           
 11586                           ;stkvar	_f @ sp[(-8)+0]
 11587  01A4A0  0EF9               	movlw	-7
 11588  01A4A2  0060  F033  FFE3   	movff	btemp+11,plusw1
 11589  01A4A8  0EF8               	movlw	-8
 11590  01A4AA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11591                           
 11592                           ;stkvar	_f @ sp[(-8)+0]
 11593  01A4B0  0EFA               	movlw	250
 11594  01A4B2  24E1               	addwf	fsr1l,w,c
 11595  01A4B4  6ED9               	movwf	fsr2l,c
 11596  01A4B6  0EFF               	movlw	255
 11597  01A4B8  20E2               	addwfc	fsr1h,w,c
 11598  01A4BA  6EDA               	movwf	fsr2h,c
 11599  01A4BC  0E00               	movlw	0
 11600  01A4BE  6EDE               	movwf	postinc2,c
 11601  01A4C0  0E00               	movlw	0
 11602  01A4C2  6EDD               	movwf	postdec2,c
 11603                           
 11604                           ;stkvar	_f @ sp[(-8)+0]
 11605  01A4C4  0EFC               	movlw	252
 11606  01A4C6  24E1               	addwf	fsr1l,w,c
 11607  01A4C8  6ED9               	movwf	fsr2l,c
 11608  01A4CA  0EFF               	movlw	255
 11609  01A4CC  20E2               	addwfc	fsr1h,w,c
 11610  01A4CE  6EDA               	movwf	fsr2h,c
 11611  01A4D0  0E00               	movlw	0
 11612  01A4D2  6EDE               	movwf	postinc2,c
 11613  01A4D4  0E00               	movlw	0
 11614  01A4D6  6EDD               	movwf	postdec2,c
 11615                           
 11616                           ;stkvar	_ap @ sp[(-8)+6]
 11617  01A4D8  0EFE               	movlw	254
 11618  01A4DA  24E1               	addwf	fsr1l,w,c
 11619  01A4DC  6E01               	movwf	btemp^0,c
 11620  01A4DE  0EFF               	movlw	255
 11621  01A4E0  20E2               	addwfc	fsr1h,w,c
 11622  01A4E2  6E02               	movwf	(btemp+1)^0,c
 11623  01A4E4  0060  F007  FFE6   	movff	btemp,postinc1
 11624  01A4EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11625                           
 11626                           ;stkvar	_fmt @ sp[(-10)+-5]
 11627  01A4F0  0EF1               	movlw	-15
 11628  01A4F2  006F FF8F FFE6     	movff	plusw1,postinc1
 11629  01A4F8  006F FF8F FFE6     	movff	plusw1,postinc1
 11630                           
 11631                           ;stkvar	_f @ sp[(-12)+0]
 11632  01A4FE  0EF4               	movlw	244
 11633  01A500  24E1               	addwf	fsr1l,w,c
 11634  01A502  6E01               	movwf	btemp^0,c
 11635  01A504  0EFF               	movlw	255
 11636  01A506  20E2               	addwfc	fsr1h,w,c
 11637  01A508  6E02               	movwf	(btemp+1)^0,c
 11638  01A50A  0060  F007  FFE6   	movff	btemp,postinc1
 11639  01A510  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11640  01A516  EC87  F0D7         	call	_vfprintf	;wreg free
 11641                           
 11642                           ; BSR set to: 0
 11643                           ;stkvar	_f @ sp[(-8)+0]
 11644  01A51A  0EFA               	movlw	250
 11645  01A51C  24E1               	addwf	fsr1l,w,c
 11646  01A51E  6ED9               	movwf	fsr2l,c
 11647  01A520  0EFF               	movlw	255
 11648  01A522  20E2               	addwfc	fsr1h,w,c
 11649  01A524  6EDA               	movwf	fsr2h,c
 11650  01A526  006F FF78  F00B    	movff	postinc2,btemp+10
 11651  01A52C  006F FF74  F00C    	movff	postdec2,btemp+11
 11652                           
 11653                           ;stkvar	_s @ sp[(-8)+-3]
 11654  01A532  0EF5               	movlw	-11
 11655  01A534  006F FF8C  F009    	movff	plusw1,btemp+8
 11656  01A53A  0EF6               	movlw	-10
 11657  01A53C  006F FF8C  F00A    	movff	plusw1,btemp+9
 11658  01A542  500B               	movf	(btemp+10)^0,w,c
 11659  01A544  2409               	addwf	(btemp+8)^0,w,c
 11660  01A546  6ED9               	movwf	fsr2l,c
 11661  01A548  500C               	movf	(btemp+11)^0,w,c
 11662  01A54A  200A               	addwfc	(btemp+9)^0,w,c
 11663  01A54C  6EDA               	movwf	fsr2h,c
 11664  01A54E  0E00               	movlw	0
 11665  01A550  6EDF               	movwf	indf2,c
 11666                           
 11667                           ; BSR set to: 0
 11668                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 11669  01A552  0EF8               	movlw	248
 11670  01A554  26E1               	addwf	fsr1l,f,c
 11671  01A556  0EFF               	movlw	255
 11672  01A558  22E2               	addwfc	fsr1h,f,c
 11673  01A55A  52E5               	movf	postdec1,f,c
 11674  01A55C  50E7               	movf	indf1,w,c
 11675  01A55E  5EE1               	subwf	fsr1l,f,c
 11676  01A560  0E00               	movlw	0
 11677  01A562  5AE2               	subwfb	fsr1h,f,c
 11678  01A564  0012               	return		;funcret
 11679  01A566                     __end_of_sprintf:
 11680                           	opt callstack 0
 11681                           
 11682 ;; *************** function _get_vterm_ptr *****************
 11683 ;; Defined at:
 11684 ;;		line 116 in file "mconfig.c"
 11685 ;; Parameters:    Size  Location     Type
 11686 ;;  line            1  [STACK] const unsigned char 
 11687 ;;  vterm           1  [STACK] const unsigned char 
 11688 ;; Auto vars:     Size  Location     Type
 11689 ;;		None
 11690 ;; Return value:  Size  Location     Type
 11691 ;;                  2  [STACK] PTR unsigned char 
 11692 ;; Registers used:
 11693 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 11694 ;; Tracked objects:
 11695 ;;		On entry : 0/1
 11696 ;;		On exit  : 0/0
 11697 ;;		Unchanged: 0/0
 11698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11703 ;;Total ram usage:        0 bytes
 11704 ;; Hardware stack levels used:    1
 11705 ;; Hardware stack levels required when called:   15
 11706 ;; This function calls:
 11707 ;;		Nothing
 11708 ;; This function is called by:
 11709 ;;		_main
 11710 ;;		_current_sensor_cal
 11711 ;;		_check_help
 11712 ;;		_vterm_dump
 11713 ;; This function uses a reentrant model
 11714 ;;
 11715                           
 11716                           	psect	text40
 11717  01C480                     __ptext40:
 11718                           	opt callstack 0
 11719  01C480                     _get_vterm_ptr:
 11720                           	opt callstack 15
 11721                           
 11722                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
 11723                           ;stkvar	_vterm @ sp[(0)+-2]
 11724                           
 11725                           ; BSR set to: 0
 11726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11727                           ;incstack = 0
 11728  01C480  0EFE               	movlw	-2
 11729  01C482  50E3               	movf	plusw1,w,c
 11730  01C484  0B03               	andlw	3
 11731  01C486  0D78               	mullw	120
 11732  01C488  0E2A               	movlw	low _D
 11733  01C48A  6E01               	movwf	btemp^0,c
 11734  01C48C  0E08               	movlw	high _D
 11735  01C48E  6E02               	movwf	(btemp+1)^0,c
 11736  01C490  50F3               	movf	243,w,c
 11737  01C492  2601               	addwf	btemp^0,f,c
 11738  01C494  50F4               	movf	244,w,c
 11739  01C496  2202               	addwfc	(btemp+1)^0,f,c
 11740                           
 11741                           ;stkvar	_line @ sp[(0)+-1]
 11742  01C498  0EFF               	movlw	-1
 11743  01C49A  50E3               	movf	plusw1,w,c
 11744  01C49C  0B03               	andlw	3
 11745  01C49E  0D28               	mullw	40
 11746  01C4A0  50F3               	movf	243,w,c
 11747  01C4A2  2601               	addwf	btemp^0,f,c
 11748  01C4A4  50F4               	movf	244,w,c
 11749  01C4A6  2202               	addwfc	(btemp+1)^0,f,c
 11750                           
 11751                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 11752  01C4A8  52E5               	movf	postdec1,f,c
 11753  01C4AA  52E5               	movf	postdec1,f,c
 11754  01C4AC  0012               	return		;funcret
 11755  01C4AE                     __end_of_get_vterm_ptr:
 11756                           	opt callstack 0
 11757                           
 11758 ;; *************** function _WaitMs *****************
 11759 ;; Defined at:
 11760 ;;		line 32 in file "timers.c"
 11761 ;; Parameters:    Size  Location     Type
 11762 ;;  numMilliseco    2  [STACK] const unsigned short 
 11763 ;; Auto vars:     Size  Location     Type
 11764 ;;		None
 11765 ;; Return value:  Size  Location     Type
 11766 ;;                  1  [STACK] void 
 11767 ;; Registers used:
 11768 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 11769 ;; Tracked objects:
 11770 ;;		On entry : 0/1
 11771 ;;		On exit  : 0/0
 11772 ;;		Unchanged: 0/0
 11773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11778 ;;Total ram usage:        0 bytes
 11779 ;; Hardware stack levels used:    1
 11780 ;; Hardware stack levels required when called:   16
 11781 ;; This function calls:
 11782 ;;		_StartTimer
 11783 ;;		_TimerDone
 11784 ;; This function is called by:
 11785 ;;		_main
 11786 ;;		_current_sensor_cal
 11787 ;;		_vterm_dump
 11788 ;; This function uses a reentrant model
 11789 ;;
 11790                           
 11791                           	psect	text41
 11792  01C2BA                     __ptext41:
 11793                           	opt callstack 0
 11794  01C2BA                     _WaitMs:
 11795                           	opt callstack 13
 11796                           
 11797                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 11798                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 11799                           
 11800                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11801                           ;incstack = 0
 11802  01C2BA  0EFE               	movlw	-2
 11803  01C2BC  006F FF8F FFE6     	movff	plusw1,postinc1
 11804  01C2C2  006F FF8F FFE6     	movff	plusw1,postinc1
 11805  01C2C8  0E00               	movlw	0
 11806  01C2CA  6EE6               	movwf	postinc1,c
 11807  01C2CC  EC6E  F0E0         	call	_StartTimer	;wreg free
 11808                           
 11809                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 11810  01C2D0  D005               	goto	l10225
 11811  01C2D2                     l1631:
 11812                           
 11813                           ;timers.c: 36:   __nop();
 11814  01C2D2  F000               	nop	
 11815                           
 11816                           ;timers.c: 37:   __nop();
 11817  01C2D4  F000               	nop	
 11818                           
 11819                           ;timers.c: 38:   __nop();
 11820  01C2D6  F000               	nop	
 11821                           
 11822                           ;timers.c: 39:   __nop();
 11823  01C2D8  F000               	nop	
 11824  01C2DA  0004               	clrwdt		;# 
 11825  01C2DC                     l10225:
 11826                           
 11827                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 11828  01C2DC  0E00               	movlw	0
 11829  01C2DE  6EE6               	movwf	postinc1,c
 11830  01C2E0  ECC3  F0E2         	call	_TimerDone	;wreg free
 11831  01C2E4  5001               	movf	btemp^0,w,c
 11832  01C2E6  B4D8               	btfsc	status,2,c
 11833  01C2E8  D7F4               	goto	l1631
 11834                           
 11835                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 11836  01C2EA  52E5               	movf	postdec1,f,c
 11837  01C2EC  52E5               	movf	postdec1,f,c
 11838  01C2EE  0012               	return		;funcret
 11839  01C2F0                     __end_of_WaitMs:
 11840                           	opt callstack 0
 11841                           
 11842 ;; *************** function _update_lcd *****************
 11843 ;; Defined at:
 11844 ;;		line 85 in file "mconfig.c"
 11845 ;; Parameters:    Size  Location     Type
 11846 ;;  vterm           1  [STACK] unsigned char 
 11847 ;; Auto vars:     Size  Location     Type
 11848 ;;		None
 11849 ;; Return value:  Size  Location     Type
 11850 ;;                  1  [STACK] unsigned char 
 11851 ;; Registers used:
 11852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11853 ;; Tracked objects:
 11854 ;;		On entry : 0/0
 11855 ;;		On exit  : 0/0
 11856 ;;		Unchanged: 0/0
 11857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11862 ;;Total ram usage:        0 bytes
 11863 ;; Hardware stack levels used:    1
 11864 ;; Hardware stack levels required when called:   27
 11865 ;; This function calls:
 11866 ;;		_eaDogM_WriteStringAtPos
 11867 ;;		_wait_lcd_done
 11868 ;; This function is called by:
 11869 ;;		_main
 11870 ;;		_current_sensor_cal
 11871 ;;		_check_help
 11872 ;; This function uses a reentrant model
 11873 ;;
 11874                           
 11875                           	psect	text42
 11876  01A34C                     __ptext42:
 11877                           	opt callstack 0
 11878  01A34C                     _update_lcd:
 11879                           	opt callstack 3
 11880                           
 11881                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 11882                           ;stkvar	_vterm @ sp[(0)+-1]
 11883                           
 11884                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11885                           ;incstack = 0
 11886  01A34C  0EFF               	movlw	-1
 11887  01A34E  006F FF8C  F001    	movff	plusw1,btemp
 11888  01A354  0E03               	movlw	3
 11889  01A356  1601               	andwf	btemp^0,f,c
 11890  01A358  0EFF               	movlw	-1
 11891  01A35A  0060  F007  FFE3   	movff	btemp,plusw1
 11892                           
 11893                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 11894  01A360  EE22  F20A         	lfsr	2,_D+480
 11895  01A364  A0DF               	btfss	indf2,0,c
 11896  01A366  D004               	goto	l13369
 11897                           
 11898                           ;stkvar	_vterm @ sp[(0)+-1]
 11899  01A368  0EFF               	movlw	-1
 11900  01A36A  50E3               	movf	plusw1,w,c
 11901  01A36C  B4D8               	btfsc	status,2,c
 11902  01A36E  D074               	goto	l1707
 11903  01A370                     l13369:
 11904                           
 11905                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 11906                           ;stkvar	_vterm @ sp[(0)+-1]
 11907  01A370  0EFF               	movlw	-1
 11908  01A372  50E3               	movf	plusw1,w,c
 11909  01A374  0D78               	mullw	120
 11910  01A376  0E3E               	movlw	low (_D+20)
 11911  01A378  24F3               	addwf	243,w,c
 11912  01A37A  6ED9               	movwf	fsr2l,c
 11913  01A37C  0E08               	movlw	high (_D+20)
 11914  01A37E  20F4               	addwfc	prodh,w,c
 11915  01A380  6EDA               	movwf	fsr2h,c
 11916  01A382  0E00               	movlw	0
 11917  01A384  6EDF               	movwf	indf2,c
 11918                           
 11919                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 11920                           ;stkvar	_vterm @ sp[(0)+-1]
 11921  01A386  0EFF               	movlw	-1
 11922  01A388  50E3               	movf	plusw1,w,c
 11923  01A38A  0D78               	mullw	120
 11924  01A38C  0E66               	movlw	low (_D+60)
 11925  01A38E  24F3               	addwf	243,w,c
 11926  01A390  6ED9               	movwf	fsr2l,c
 11927  01A392  0E08               	movlw	high (_D+60)
 11928  01A394  20F4               	addwfc	prodh,w,c
 11929  01A396  6EDA               	movwf	fsr2h,c
 11930  01A398  0E00               	movlw	0
 11931  01A39A  6EDF               	movwf	indf2,c
 11932                           
 11933                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 11934                           ;stkvar	_vterm @ sp[(0)+-1]
 11935  01A39C  0EFF               	movlw	-1
 11936  01A39E  50E3               	movf	plusw1,w,c
 11937  01A3A0  0D78               	mullw	120
 11938  01A3A2  0E8E               	movlw	low (_D+100)
 11939  01A3A4  24F3               	addwf	243,w,c
 11940  01A3A6  6ED9               	movwf	fsr2l,c
 11941  01A3A8  0E08               	movlw	high (_D+100)
 11942  01A3AA  20F4               	addwfc	prodh,w,c
 11943  01A3AC  6EDA               	movwf	fsr2h,c
 11944  01A3AE  0E00               	movlw	0
 11945  01A3B0  6EDF               	movwf	indf2,c
 11946                           
 11947                           ;mconfig.c: 95:  wait_lcd_done();
 11948  01A3B2  EC48  F0E4         	call	_wait_lcd_done	;wreg free
 11949                           
 11950                           ; BSR set to: 0
 11951                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 11952                           ;stkvar	_vterm @ sp[(0)+-1]
 11953  01A3B6  0EFF               	movlw	-1
 11954  01A3B8  50E3               	movf	plusw1,w,c
 11955  01A3BA  0D78               	mullw	120
 11956  01A3BC  0E2A               	movlw	low _D
 11957  01A3BE  6E0B               	movwf	(btemp+10)^0,c
 11958  01A3C0  0E08               	movlw	high _D
 11959  01A3C2  6E0C               	movwf	(btemp+11)^0,c
 11960  01A3C4  50F3               	movf	243,w,c
 11961  01A3C6  260B               	addwf	(btemp+10)^0,f,c
 11962  01A3C8  50F4               	movf	244,w,c
 11963  01A3CA  220C               	addwfc	(btemp+11)^0,f,c
 11964  01A3CC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11965  01A3D2  0060  F033  FFE6   	movff	btemp+11,postinc1
 11966  01A3D8  0E00               	movlw	0
 11967  01A3DA  6EE6               	movwf	postinc1,c
 11968  01A3DC  0E00               	movlw	0
 11969  01A3DE  6EE6               	movwf	postinc1,c
 11970  01A3E0  EC32  F0D8         	call	_eaDogM_WriteStringAtPos	;wreg free
 11971                           
 11972                           ; BSR set to: 59
 11973                           ;mconfig.c: 97:  wait_lcd_done();
 11974  01A3E4  EC48  F0E4         	call	_wait_lcd_done	;wreg free
 11975                           
 11976                           ; BSR set to: 0
 11977                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 11978                           ;stkvar	_vterm @ sp[(0)+-1]
 11979  01A3E8  0EFF               	movlw	-1
 11980  01A3EA  50E3               	movf	plusw1,w,c
 11981  01A3EC  0D78               	mullw	120
 11982  01A3EE  0E2A               	movlw	low _D
 11983  01A3F0  6E0B               	movwf	(btemp+10)^0,c
 11984  01A3F2  0E08               	movlw	high _D
 11985  01A3F4  6E0C               	movwf	(btemp+11)^0,c
 11986  01A3F6  0E28               	movlw	40
 11987  01A3F8  260B               	addwf	(btemp+10)^0,f,c
 11988  01A3FA  0E00               	movlw	0
 11989  01A3FC  220C               	addwfc	(btemp+11)^0,f,c
 11990  01A3FE  50F3               	movf	243,w,c
 11991  01A400  260B               	addwf	(btemp+10)^0,f,c
 11992  01A402  50F4               	movf	244,w,c
 11993  01A404  220C               	addwfc	(btemp+11)^0,f,c
 11994  01A406  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11995  01A40C  0060  F033  FFE6   	movff	btemp+11,postinc1
 11996  01A412  0E00               	movlw	0
 11997  01A414  6EE6               	movwf	postinc1,c
 11998  01A416  0E01               	movlw	1
 11999  01A418  6EE6               	movwf	postinc1,c
 12000  01A41A  EC32  F0D8         	call	_eaDogM_WriteStringAtPos	;wreg free
 12001                           
 12002                           ; BSR set to: 59
 12003                           ;mconfig.c: 99:  wait_lcd_done();
 12004  01A41E  EC48  F0E4         	call	_wait_lcd_done	;wreg free
 12005                           
 12006                           ; BSR set to: 0
 12007                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 12008                           ;stkvar	_vterm @ sp[(0)+-1]
 12009  01A422  0EFF               	movlw	-1
 12010  01A424  50E3               	movf	plusw1,w,c
 12011  01A426  0D78               	mullw	120
 12012  01A428  0E2A               	movlw	low _D
 12013  01A42A  6E0B               	movwf	(btemp+10)^0,c
 12014  01A42C  0E08               	movlw	high _D
 12015  01A42E  6E0C               	movwf	(btemp+11)^0,c
 12016  01A430  0E50               	movlw	80
 12017  01A432  260B               	addwf	(btemp+10)^0,f,c
 12018  01A434  0E00               	movlw	0
 12019  01A436  220C               	addwfc	(btemp+11)^0,f,c
 12020  01A438  50F3               	movf	243,w,c
 12021  01A43A  260B               	addwf	(btemp+10)^0,f,c
 12022  01A43C  50F4               	movf	244,w,c
 12023  01A43E  220C               	addwfc	(btemp+11)^0,f,c
 12024  01A440  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12025  01A446  0060  F033  FFE6   	movff	btemp+11,postinc1
 12026  01A44C  0E00               	movlw	0
 12027  01A44E  6EE6               	movwf	postinc1,c
 12028  01A450  0E02               	movlw	2
 12029  01A452  6EE6               	movwf	postinc1,c
 12030  01A454  EC32  F0D8         	call	_eaDogM_WriteStringAtPos	;wreg free
 12031  01A458                     l1707:
 12032                           
 12033                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 12034  01A458  52E5               	movf	postdec1,f,c
 12035  01A45A  0012               	return		;funcret
 12036  01A45C                     __end_of_update_lcd:
 12037                           	opt callstack 0
 12038                           
 12039 ;; *************** function _eaDogM_WriteStringAtPos *****************
 12040 ;; Defined at:
 12041 ;;		line 195 in file "eadog.c"
 12042 ;; Parameters:    Size  Location     Type
 12043 ;;  r               1  [STACK] const unsigned char 
 12044 ;;  c               1  [STACK] const unsigned char 
 12045 ;;  strPtr          2  [STACK] PTR unsigned char 
 12046 ;;		 -> D.lcd(480), D(482), V(192), 
 12047 ;; Auto vars:     Size  Location     Type
 12048 ;;  row             1  [STACK] unsigned char 
 12049 ;; Return value:  Size  Location     Type
 12050 ;;                  1  [STACK] void 
 12051 ;; Registers used:
 12052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12053 ;; Tracked objects:
 12054 ;;		On entry : 3F/0
 12055 ;;		On exit  : 3F/3B
 12056 ;;		Unchanged: 0/0
 12057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12062 ;;Total ram usage:        0 bytes
 12063 ;; Hardware stack levels used:    1
 12064 ;; Hardware stack levels required when called:   26
 12065 ;; This function calls:
 12066 ;;		_eaDogM_WriteString
 12067 ;;		_send_lcd_cmd_dma
 12068 ;;		_send_lcd_data_dma
 12069 ;;		_wait_lcd_done
 12070 ;;		_wdtdelay
 12071 ;; This function is called by:
 12072 ;;		_update_lcd
 12073 ;;		_vterm_dump
 12074 ;; This function uses a reentrant model
 12075 ;;
 12076                           
 12077                           	psect	text43
 12078  01B064                     __ptext43:
 12079                           	opt callstack 0
 12080  01B064                     _eaDogM_WriteStringAtPos:
 12081                           	opt callstack 0
 12082                           
 12083                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12084  01B064  52E6               	movf	postinc1,f,c
 12085                           
 12086                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 12087                           
 12088                           ;incstack = 0
 12089  01B066  D014               	goto	l13345
 12090  01B068                     l13333:
 12091                           
 12092                           ;eadog.c: 201:   row = 0x40;
 12093                           ;stkvar	_row @ sp[(-1)+0]
 12094  01B068  0EFF               	movlw	-1
 12095  01B06A  6AE3               	clrf	plusw1,c
 12096  01B06C  8CE3               	bsf	plusw1,6,c
 12097                           
 12098                           ;eadog.c: 202:   break;
 12099  01B06E  D026               	goto	l13347
 12100  01B070                     l13335:
 12101                           
 12102                           ;eadog.c: 204:   row = 0x14;
 12103                           ;stkvar	_row @ sp[(-1)+0]
 12104  01B070  0EFF               	movlw	-1
 12105  01B072  6AE3               	clrf	plusw1,c
 12106  01B074  84E3               	bsf	plusw1,2,c
 12107  01B076  88E3               	bsf	plusw1,4,c	;indir
 12108                           
 12109                           ;eadog.c: 205:   break;
 12110  01B078  D021               	goto	l13347
 12111  01B07A                     l13337:
 12112                           
 12113                           ;eadog.c: 207:   row = 0x54;
 12114  01B07A  0E54               	movlw	84
 12115  01B07C  6E0C               	movwf	(btemp+11)^0,c
 12116                           
 12117                           ;stkvar	_row @ sp[(-1)+0]
 12118  01B07E  0EFF               	movlw	-1
 12119  01B080  0060  F033  FFE3   	movff	btemp+11,plusw1
 12120                           
 12121                           ;eadog.c: 208:   break;
 12122  01B086  D01A               	goto	l13347
 12123  01B088                     l13339:
 12124                           
 12125                           ;eadog.c: 210:   row = 0x1;
 12126                           ;stkvar	_row @ sp[(-1)+0]
 12127  01B088  0EFF               	movlw	-1
 12128  01B08A  6AE3               	clrf	plusw1,c
 12129  01B08C  2AE3               	incf	plusw1,f,c
 12130                           
 12131                           ;eadog.c: 211:   break;
 12132  01B08E  D016               	goto	l13347
 12133  01B090                     l13345:
 12134                           
 12135                           ;stkvar	_r @ sp[(-1)+-1]
 12136  01B090  0EFE               	movlw	-2
 12137  01B092  50E3               	movf	plusw1,w,c
 12138  01B094  6E0B               	movwf	(btemp+10)^0,c
 12139  01B096  6A0C               	clrf	(btemp+11)^0,c
 12140                           
 12141                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12142                           ; Switch size 1, requested type "simple"
 12143                           ; Number of cases is 1, Range of values is 0 to 0
 12144                           ; switch strategies available:
 12145                           ; Name         Instructions Cycles
 12146                           ; simple_byte            4     3 (average)
 12147                           ;	Chosen strategy is simple_byte
 12148  01B098  500C               	movf	(btemp+11)^0,w,c
 12149  01B09A  0A00               	xorlw	0	; case 0
 12150  01B09C  A4D8               	btfss	status,2,c
 12151  01B09E  D7E4               	goto	l13333
 12152                           
 12153                           ; Switch size 1, requested type "simple"
 12154                           ; Number of cases is 4, Range of values is 0 to 3
 12155                           ; switch strategies available:
 12156                           ; Name         Instructions Cycles
 12157                           ; simple_byte           13     7 (average)
 12158                           ;	Chosen strategy is simple_byte
 12159  01B0A0  500B               	movf	(btemp+10)^0,w,c
 12160  01B0A2  0A00               	xorlw	0	; case 0
 12161  01B0A4  B4D8               	btfsc	status,2,c
 12162  01B0A6  D7E0               	goto	l13333
 12163  01B0A8  0A01               	xorlw	1	; case 1
 12164  01B0AA  B4D8               	btfsc	status,2,c
 12165  01B0AC  D7E1               	goto	l13335
 12166  01B0AE  0A03               	xorlw	3	; case 2
 12167  01B0B0  B4D8               	btfsc	status,2,c
 12168  01B0B2  D7E3               	goto	l13337
 12169  01B0B4  0A01               	xorlw	1	; case 3
 12170  01B0B6  B4D8               	btfsc	status,2,c
 12171  01B0B8  D7E7               	goto	l13339
 12172  01B0BA  D7D6               	goto	l13333
 12173  01B0BC                     l13347:
 12174                           
 12175                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 12176  01B0BC  0E45               	movlw	69
 12177  01B0BE  6EE6               	movwf	postinc1,c
 12178  01B0C0  ECAA  F0E4         	call	_send_lcd_cmd_dma	;wreg free
 12179                           
 12180                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 12181                           ;stkvar	_c @ sp[(-1)+-2]
 12182  01B0C4  0EFD               	movlw	-3
 12183  01B0C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 12184                           
 12185                           ;stkvar	_row @ sp[(-1)+0]
 12186  01B0CC  0EFF               	movlw	-1
 12187  01B0CE  50E3               	movf	plusw1,w,c
 12188  01B0D0  240C               	addwf	(btemp+11)^0,w,c
 12189  01B0D2  6EE6               	movwf	postinc1,c
 12190  01B0D4  ECCB  F0DE         	call	_send_lcd_data_dma	;wreg free
 12191                           
 12192                           ; BSR set to: 59
 12193                           ;eadog.c: 218:  wait_lcd_done();
 12194  01B0D8  EC48  F0E4         	call	_wait_lcd_done	;wreg free
 12195                           
 12196                           ; BSR set to: 0
 12197                           ;eadog.c: 219:  wdtdelay(8);
 12198  01B0DC  0E08               	movlw	8
 12199  01B0DE  6EE6               	movwf	postinc1,c
 12200  01B0E0  0E00               	movlw	0
 12201  01B0E2  6EE6               	movwf	postinc1,c
 12202  01B0E4  0E00               	movlw	0
 12203  01B0E6  6EE6               	movwf	postinc1,c
 12204  01B0E8  0E00               	movlw	0
 12205  01B0EA  6EE6               	movwf	postinc1,c
 12206  01B0EC  ECF8  F0DD         	call	_wdtdelay	;wreg free
 12207                           
 12208                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 12209                           ;stkvar	_strPtr @ sp[(-1)+-4]
 12210  01B0F0  0EFB               	movlw	-5
 12211  01B0F2  006F FF8F FFE6     	movff	plusw1,postinc1
 12212  01B0F8  006F FF8F FFE6     	movff	plusw1,postinc1
 12213  01B0FE  EC86  F0D8         	call	_eaDogM_WriteString	;wreg free
 12214                           
 12215                           ; BSR set to: 59
 12216                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 12217  01B102  0EFB               	movlw	251
 12218  01B104  26E1               	addwf	fsr1l,f,c
 12219  01B106  0EFF               	movlw	255
 12220  01B108  22E2               	addwfc	fsr1h,f,c
 12221  01B10A  0012               	return		;funcret
 12222  01B10C                     __end_of_eaDogM_WriteStringAtPos:
 12223                           	opt callstack 0
 12224                           
 12225 ;; *************** function _send_lcd_cmd_dma *****************
 12226 ;; Defined at:
 12227 ;;		line 171 in file "eadog.c"
 12228 ;; Parameters:    Size  Location     Type
 12229 ;;  strPtr          1  [STACK] const unsigned char 
 12230 ;; Auto vars:     Size  Location     Type
 12231 ;;		None
 12232 ;; Return value:  Size  Location     Type
 12233 ;;                  1  [STACK] void 
 12234 ;; Registers used:
 12235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12236 ;; Tracked objects:
 12237 ;;		On entry : 0/3D
 12238 ;;		On exit  : 3F/0
 12239 ;;		Unchanged: 0/0
 12240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12245 ;;Total ram usage:        0 bytes
 12246 ;; Hardware stack levels used:    1
 12247 ;; Hardware stack levels required when called:   25
 12248 ;; This function calls:
 12249 ;;		_send_lcd_data_dma
 12250 ;;		_wait_lcd_done
 12251 ;; This function is called by:
 12252 ;;		_eaDogM_WriteStringAtPos
 12253 ;;		_eaDogM_WriteCommand
 12254 ;; This function uses a reentrant model
 12255 ;;
 12256                           
 12257                           	psect	text44
 12258  01C954                     __ptext44:
 12259                           	opt callstack 0
 12260  01C954                     _send_lcd_cmd_dma:
 12261                           	opt callstack 3
 12262                           
 12263                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 12264                           
 12265                           ; BSR set to: 59
 12266                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12267                           ;incstack = 0
 12268  01C954  0EFE               	movlw	254
 12269  01C956  6EE6               	movwf	postinc1,c
 12270  01C958  ECCB  F0DE         	call	_send_lcd_data_dma	;wreg free
 12271                           
 12272                           ; BSR set to: 59
 12273                           ;eadog.c: 174:  wait_lcd_done();
 12274  01C95C  EC48  F0E4         	call	_wait_lcd_done	;wreg free
 12275                           
 12276                           ; BSR set to: 0
 12277                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 12278                           ;stkvar	_strPtr @ sp[(0)+-1]
 12279  01C960  0EFF               	movlw	-1
 12280  01C962  50E3               	movf	plusw1,w,c
 12281  01C964  6EE6               	movwf	postinc1,c
 12282  01C966  ECCB  F0DE         	call	_send_lcd_data_dma	;wreg free
 12283                           
 12284                           ;eadog.c: 176:  wait_lcd_done();
 12285  01C96A  EC48  F0E4         	call	_wait_lcd_done	;wreg free
 12286                           
 12287                           ; BSR set to: 0
 12288                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 12289  01C96E  52E5               	movf	postdec1,f,c
 12290  01C970  0012               	return		;funcret
 12291  01C972                     __end_of_send_lcd_cmd_dma:
 12292                           	opt callstack 0
 12293                           
 12294 ;; *************** function _wait_lcd_done *****************
 12295 ;; Defined at:
 12296 ;;		line 444 in file "eadog.c"
 12297 ;; Parameters:    Size  Location     Type
 12298 ;;		None
 12299 ;; Auto vars:     Size  Location     Type
 12300 ;;		None
 12301 ;; Return value:  Size  Location     Type
 12302 ;;                  1  [STACK] void 
 12303 ;; Registers used:
 12304 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 12305 ;; Tracked objects:
 12306 ;;		On entry : 0/1
 12307 ;;		On exit  : 3F/0
 12308 ;;		Unchanged: 0/0
 12309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12314 ;;Total ram usage:        0 bytes
 12315 ;; Hardware stack levels used:    1
 12316 ;; Hardware stack levels required when called:   16
 12317 ;; This function calls:
 12318 ;;		_wdtdelay
 12319 ;; This function is called by:
 12320 ;;		_main
 12321 ;;		_send_lcd_cmd_dma
 12322 ;;		_eaDogM_WriteStringAtPos
 12323 ;;		_update_lcd
 12324 ;;		_vterm_dump
 12325 ;; This function uses a reentrant model
 12326 ;;
 12327                           
 12328                           	psect	text45
 12329  01C890                     __ptext45:
 12330                           	opt callstack 0
 12331  01C890                     _wait_lcd_done:
 12332                           	opt callstack 14
 12333                           
 12334                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 12335                           
 12336                           ; BSR set to: 0
 12337                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12338                           ;incstack = 0
 12339  01C890  0101               	movlb	1	; () banked
 12340  01C892  B7D0               	btfsc	_spi_link& (0+255),3,b	;volatile
 12341  01C894  D7FD               	goto	_wait_lcd_done
 12342  01C896                     u8900:
 12343  01C896  013D               	movlb	61	; () banked
 12344  01C898  AB17               	btfss	23,5,b	;volatile
 12345  01C89A  D7FD               	goto	u8900
 12346                           
 12347                           ; BSR set to: 61
 12348                           ;eadog.c: 448:  wdtdelay(50);
 12349  01C89C  0E32               	movlw	50
 12350  01C89E  6EE6               	movwf	postinc1,c
 12351  01C8A0  0E00               	movlw	0
 12352  01C8A2  6EE6               	movwf	postinc1,c
 12353  01C8A4  0E00               	movlw	0
 12354  01C8A6  6EE6               	movwf	postinc1,c
 12355  01C8A8  0E00               	movlw	0
 12356  01C8AA  6EE6               	movwf	postinc1,c
 12357  01C8AC  ECF8  F0DD         	call	_wdtdelay	;wreg free
 12358                           
 12359                           ; BSR set to: 0
 12360                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 12361  01C8B0  0012               	return		;funcret
 12362  01C8B2                     __end_of_wait_lcd_done:
 12363                           	opt callstack 0
 12364                           
 12365 ;; *************** function _wdtdelay *****************
 12366 ;; Defined at:
 12367 ;;		line 23 in file "eadog.c"
 12368 ;; Parameters:    Size  Location     Type
 12369 ;;  delay           4  [STACK] const unsigned long 
 12370 ;; Auto vars:     Size  Location     Type
 12371 ;;		None
 12372 ;; Return value:  Size  Location     Type
 12373 ;;                  1  [STACK] void 
 12374 ;; Registers used:
 12375 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 12376 ;; Tracked objects:
 12377 ;;		On entry : 2/3D
 12378 ;;		On exit  : 3F/0
 12379 ;;		Unchanged: 0/0
 12380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12385 ;;Total ram usage:        0 bytes
 12386 ;; Hardware stack levels used:    1
 12387 ;; Hardware stack levels required when called:   15
 12388 ;; This function calls:
 12389 ;;		Nothing
 12390 ;; This function is called by:
 12391 ;;		_init_display
 12392 ;;		_send_lcd_data
 12393 ;;		_send_lcd_cmd
 12394 ;;		_send_lcd_cmd_long
 12395 ;;		_eaDogM_WriteStringAtPos
 12396 ;;		_wait_lcd_done
 12397 ;; This function uses a reentrant model
 12398 ;;
 12399                           
 12400                           	psect	text46
 12401  01BBF0                     __ptext46:
 12402                           	opt callstack 0
 12403  01BBF0                     _wdtdelay:
 12404                           	opt callstack 14
 12405                           
 12406                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 12407                           
 12408                           ; BSR set to: 0
 12409                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12410                           ;incstack = 0
 12411  01BBF0  0100               	movlb	0	; () banked
 12412  01BBF2  6B78               	clrf	wdtdelay@dcount& (0+255),b
 12413  01BBF4  6B79               	clrf	(wdtdelay@dcount+1)& (0+255),b
 12414  01BBF6  6B7A               	clrf	(wdtdelay@dcount+2)& (0+255),b
 12415  01BBF8  6B7B               	clrf	(wdtdelay@dcount+3)& (0+255),b
 12416  01BBFA                     l1484:
 12417                           
 12418                           ; BSR set to: 0
 12419                           ;eadog.c: 28:   __nop();
 12420  01BBFA  F000               	nop	
 12421  01BBFC  0004               	clrwdt		;# 
 12422                           
 12423                           ;eadog.c: 30:  };
 12424  01BBFE  0E01               	movlw	1
 12425  01BC00  0100               	movlb	0	; () banked
 12426  01BC02  2778               	addwf	wdtdelay@dcount& (0+255),f,b
 12427  01BC04  0E00               	movlw	0
 12428  01BC06  2379               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 12429  01BC08  237A               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 12430  01BC0A  237B               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 12431                           
 12432                           ; BSR set to: 0
 12433                           ;stkvar	_delay @ sp[(0)+-4]
 12434  01BC0C  0EFC               	movlw	-4
 12435  01BC0E  006F FF8C  F001    	movff	plusw1,btemp
 12436  01BC14  5178               	movf	wdtdelay@dcount& (0+255),w,b
 12437  01BC16  5C01               	subwf	btemp^0,w,c
 12438  01BC18  0EFD               	movlw	-3
 12439  01BC1A  006F FF8C  F001    	movff	plusw1,btemp
 12440  01BC20  5179               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 12441  01BC22  5801               	subwfb	btemp^0,w,c
 12442  01BC24  0EFE               	movlw	-2
 12443  01BC26  006F FF8C  F001    	movff	plusw1,btemp
 12444  01BC2C  517A               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 12445  01BC2E  5801               	subwfb	btemp^0,w,c
 12446  01BC30  0EFF               	movlw	-1
 12447  01BC32  006F FF8C  F001    	movff	plusw1,btemp
 12448  01BC38  517B               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 12449  01BC3A  5801               	subwfb	btemp^0,w,c
 12450  01BC3C  B0D8               	btfsc	status,0,c
 12451  01BC3E  D7DD               	goto	l1484
 12452                           
 12453                           ; BSR set to: 0
 12454                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 12455  01BC40  52E5               	movf	postdec1,f,c
 12456  01BC42  52E5               	movf	postdec1,f,c
 12457  01BC44  52E5               	movf	postdec1,f,c
 12458  01BC46  52E5               	movf	postdec1,f,c
 12459  01BC48  0012               	return		;funcret
 12460  01BC4A                     __end_of_wdtdelay:
 12461                           	opt callstack 0
 12462                           
 12463 ;; *************** function _send_lcd_data_dma *****************
 12464 ;; Defined at:
 12465 ;;		line 182 in file "eadog.c"
 12466 ;; Parameters:    Size  Location     Type
 12467 ;;  strPtr          1  [STACK] const unsigned char 
 12468 ;; Auto vars:     Size  Location     Type
 12469 ;;		None
 12470 ;; Return value:  Size  Location     Type
 12471 ;;                  1  [STACK] void 
 12472 ;; Registers used:
 12473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12474 ;; Tracked objects:
 12475 ;;		On entry : 0/0
 12476 ;;		On exit  : 3F/3B
 12477 ;;		Unchanged: 0/0
 12478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12483 ;;Total ram usage:        0 bytes
 12484 ;; Hardware stack levels used:    1
 12485 ;; Hardware stack levels required when called:   24
 12486 ;; This function calls:
 12487 ;;		_printf
 12488 ;;		_ringBufS_flush
 12489 ;;		_start_lcd
 12490 ;;		_wait_lcd_set
 12491 ;; This function is called by:
 12492 ;;		_send_lcd_cmd_dma
 12493 ;;		_eaDogM_WriteStringAtPos
 12494 ;; This function uses a reentrant model
 12495 ;;
 12496                           
 12497                           	psect	text47
 12498  01BD96                     __ptext47:
 12499                           	opt callstack 0
 12500  01BD96                     _send_lcd_data_dma:
 12501                           	opt callstack 4
 12502                           
 12503                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 12504                           
 12505                           ; BSR set to: 0
 12506                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12507                           ;incstack = 0
 12508  01BD96  ECC4  F0E5         	call	_wait_lcd_set	;wreg free
 12509                           
 12510                           ; BSR set to: 1
 12511                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 12512  01BD9A  0E00               	movlw	0
 12513  01BD9C  6EE6               	movwf	postinc1,c
 12514  01BD9E  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 12515  01BDA4  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 12516  01BDAA  EC76  F0D9         	call	_ringBufS_flush	;wreg free
 12517  01BDAE  94BC               	bcf	188,2,c	;volatile
 12518                           
 12519                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 12520  01BDB0  013B               	movlb	59	; () banked
 12521  01BDB2  9FFC               	bcf	252,7,b	;volatile
 12522                           
 12523                           ; BSR set to: 59
 12524                           ;eadog.c: 189:  DMA1SSZ = 1;
 12525  01BDB4  0E00               	movlw	0
 12526  01BDB6  6FF8               	movwf	248,b	;volatile
 12527  01BDB8  0E01               	movlw	1
 12528  01BDBA  6FF7               	movwf	247,b	;volatile
 12529                           
 12530                           ; BSR set to: 59
 12531                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 12532  01BDBC  8FFC               	bsf	252,7,b	;volatile
 12533                           
 12534                           ; BSR set to: 59
 12535                           ;eadog.c: 191:  printf("%c", strPtr);
 12536                           ;stkvar	_strPtr @ sp[(0)+-1]
 12537  01BDBE  0EFF               	movlw	-1
 12538  01BDC0  50E3               	movf	plusw1,w,c
 12539  01BDC2  6EE6               	movwf	postinc1,c
 12540  01BDC4  0E00               	movlw	0
 12541  01BDC6  6EE6               	movwf	postinc1,c
 12542  01BDC8  0EF8               	movlw	low STR_58
 12543  01BDCA  6EE6               	movwf	postinc1,c
 12544  01BDCC  0EFF               	movlw	high STR_58
 12545  01BDCE  6EE6               	movwf	postinc1,c
 12546  01BDD0  0E04               	movlw	4
 12547  01BDD2  6EE6               	movwf	postinc1,c
 12548  01BDD4  EC39  F0DD         	call	_printf	;wreg free
 12549                           
 12550                           ; BSR set to: 0
 12551                           ;eadog.c: 192:  start_lcd();
 12552  01BDD8  ECC7  F0E5         	call	_start_lcd	;wreg free
 12553                           
 12554                           ; BSR set to: 59
 12555                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 12556  01BDDC  52E5               	movf	postdec1,f,c
 12557  01BDDE  0012               	return		;funcret
 12558  01BDE0                     __end_of_send_lcd_data_dma:
 12559                           	opt callstack 0
 12560                           
 12561 ;; *************** function _eaDogM_WriteString *****************
 12562 ;; Defined at:
 12563 ;;		line 151 in file "eadog.c"
 12564 ;; Parameters:    Size  Location     Type
 12565 ;;  strPtr          2  [STACK] PTR unsigned char 
 12566 ;;		 -> D.lcd(480), D(482), V(192), 
 12567 ;; Auto vars:     Size  Location     Type
 12568 ;;		None
 12569 ;; Return value:  Size  Location     Type
 12570 ;;                  1  [STACK] void 
 12571 ;; Registers used:
 12572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12573 ;; Tracked objects:
 12574 ;;		On entry : 3F/0
 12575 ;;		On exit  : 3F/3B
 12576 ;;		Unchanged: 0/0
 12577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12582 ;;Total ram usage:        0 bytes
 12583 ;; Hardware stack levels used:    1
 12584 ;; Hardware stack levels required when called:   24
 12585 ;; This function calls:
 12586 ;;		_printf
 12587 ;;		_ringBufS_flush
 12588 ;;		_start_lcd
 12589 ;;		_strlen
 12590 ;;		_wait_lcd_set
 12591 ;; This function is called by:
 12592 ;;		_eaDogM_WriteStringAtPos
 12593 ;; This function uses a reentrant model
 12594 ;;
 12595                           
 12596                           	psect	text48
 12597  01B10C                     __ptext48:
 12598                           	opt callstack 0
 12599  01B10C                     _eaDogM_WriteString:
 12600                           	opt callstack 4
 12601                           
 12602                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 12603                           
 12604                           ; BSR set to: 59
 12605                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12606                           ;incstack = 0
 12607  01B10C  ECC4  F0E5         	call	_wait_lcd_set	;wreg free
 12608                           
 12609                           ; BSR set to: 1
 12610                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 12611  01B110  0E00               	movlw	0
 12612  01B112  6EE6               	movwf	postinc1,c
 12613  01B114  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 12614  01B11A  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 12615  01B120  EC76  F0D9         	call	_ringBufS_flush	;wreg free
 12616  01B124  94BC               	bcf	188,2,c	;volatile
 12617                           
 12618                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 12619                           ;stkvar	_strPtr @ sp[(0)+-2]
 12620  01B126  0EFE               	movlw	-2
 12621  01B128  006F FF8F FFE6     	movff	plusw1,postinc1
 12622  01B12E  006F FF8F FFE6     	movff	plusw1,postinc1
 12623  01B134  ECD9  F0D8         	call	_strlen	;wreg free
 12624  01B138  5002               	movf	(btemp+1)^0,w,c
 12625  01B13A  E104               	bnz	u12740
 12626  01B13C  0E41               	movlw	65
 12627  01B13E  5C01               	subwf	btemp^0,w,c
 12628  01B140  A0D8               	btfss	status,0,c
 12629  01B142  D010               	goto	l13289
 12630  01B144                     u12740:
 12631                           
 12632                           ;stkvar	_strPtr @ sp[(0)+-2]
 12633  01B144  0EFE               	movlw	-2
 12634  01B146  006F FF8C  F00B    	movff	plusw1,btemp+10
 12635  01B14C  0EFF               	movlw	-1
 12636  01B14E  006F FF8C  F00C    	movff	plusw1,btemp+11
 12637  01B154  0E40               	movlw	64
 12638  01B156  240B               	addwf	(btemp+10)^0,w,c
 12639  01B158  6ED9               	movwf	fsr2l,c
 12640  01B15A  0E00               	movlw	0
 12641  01B15C  200C               	addwfc	(btemp+11)^0,w,c
 12642  01B15E  6EDA               	movwf	fsr2h,c
 12643  01B160  0E00               	movlw	0
 12644  01B162  6EDF               	movwf	indf2,c
 12645  01B164                     l13289:
 12646                           
 12647                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 12648  01B164  013B               	movlb	59	; () banked
 12649  01B166  9FFC               	bcf	252,7,b	;volatile
 12650                           
 12651                           ; BSR set to: 59
 12652                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 12653                           ;stkvar	_strPtr @ sp[(0)+-2]
 12654  01B168  0EFE               	movlw	-2
 12655  01B16A  006F FF8F FFE6     	movff	plusw1,postinc1
 12656  01B170  006F FF8F FFE6     	movff	plusw1,postinc1
 12657  01B176  ECD9  F0D8         	call	_strlen	;wreg free
 12658  01B17A  0060  F007  FBF7   	movff	btemp,15351	;volatile
 12659  01B180  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 12660                           
 12661                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 12662  01B186  013B               	movlb	59	; () banked
 12663  01B188  8FFC               	bsf	252,7,b	;volatile
 12664                           
 12665                           ; BSR set to: 59
 12666                           ;eadog.c: 161:  printf("%s", strPtr);
 12667                           ;stkvar	_strPtr @ sp[(0)+-2]
 12668  01B18A  0EFE               	movlw	-2
 12669  01B18C  006F FF8F FFE6     	movff	plusw1,postinc1
 12670  01B192  006F FF8F FFE6     	movff	plusw1,postinc1
 12671  01B198  0EFB               	movlw	low STR_57
 12672  01B19A  6EE6               	movwf	postinc1,c
 12673  01B19C  0EFF               	movlw	high STR_57
 12674  01B19E  6EE6               	movwf	postinc1,c
 12675  01B1A0  0E04               	movlw	4
 12676  01B1A2  6EE6               	movwf	postinc1,c
 12677  01B1A4  EC39  F0DD         	call	_printf	;wreg free
 12678                           
 12679                           ; BSR set to: 0
 12680                           ;eadog.c: 162:  start_lcd();
 12681  01B1A8  ECC7  F0E5         	call	_start_lcd	;wreg free
 12682                           
 12683                           ; BSR set to: 59
 12684                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 12685  01B1AC  52E5               	movf	postdec1,f,c
 12686  01B1AE  52E5               	movf	postdec1,f,c
 12687  01B1B0  0012               	return		;funcret
 12688  01B1B2                     __end_of_eaDogM_WriteString:
 12689                           	opt callstack 0
 12690                           
 12691 ;; *************** function _wait_lcd_set *****************
 12692 ;; Defined at:
 12693 ;;		line 434 in file "eadog.c"
 12694 ;; Parameters:    Size  Location     Type
 12695 ;;		None
 12696 ;; Auto vars:     Size  Location     Type
 12697 ;;		None
 12698 ;; Return value:  Size  Location     Type
 12699 ;;                  1  [STACK] void 
 12700 ;; Registers used:
 12701 ;;		None
 12702 ;; Tracked objects:
 12703 ;;		On entry : 0/0
 12704 ;;		On exit  : 3F/1
 12705 ;;		Unchanged: 0/0
 12706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12711 ;;Total ram usage:        0 bytes
 12712 ;; Hardware stack levels used:    1
 12713 ;; Hardware stack levels required when called:   15
 12714 ;; This function calls:
 12715 ;;		Nothing
 12716 ;; This function is called by:
 12717 ;;		_eaDogM_WriteString
 12718 ;;		_send_lcd_data_dma
 12719 ;; This function uses a reentrant model
 12720 ;;
 12721                           
 12722                           	psect	text49
 12723  01CB88                     __ptext49:
 12724                           	opt callstack 0
 12725  01CB88                     _wait_lcd_set:
 12726                           	opt callstack 12
 12727                           
 12728                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 12729                           
 12730                           ; BSR set to: 59
 12731                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12732                           ;incstack = 0
 12733  01CB88  0101               	movlb	1	; () banked
 12734  01CB8A  87D0               	bsf	_spi_link& (0+255),3,b	;volatile
 12735                           
 12736                           ; BSR set to: 1
 12737                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 12738  01CB8C  0012               	return		;funcret
 12739  01CB8E                     __end_of_wait_lcd_set:
 12740                           	opt callstack 0
 12741                           
 12742 ;; *************** function _start_lcd *****************
 12743 ;; Defined at:
 12744 ;;		line 429 in file "eadog.c"
 12745 ;; Parameters:    Size  Location     Type
 12746 ;;		None
 12747 ;; Auto vars:     Size  Location     Type
 12748 ;;		None
 12749 ;; Return value:  Size  Location     Type
 12750 ;;                  1  [STACK] void 
 12751 ;; Registers used:
 12752 ;;		None
 12753 ;; Tracked objects:
 12754 ;;		On entry : 3F/0
 12755 ;;		On exit  : 3F/3B
 12756 ;;		Unchanged: 0/0
 12757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12762 ;;Total ram usage:        0 bytes
 12763 ;; Hardware stack levels used:    1
 12764 ;; Hardware stack levels required when called:   15
 12765 ;; This function calls:
 12766 ;;		Nothing
 12767 ;; This function is called by:
 12768 ;;		_eaDogM_WriteString
 12769 ;;		_send_lcd_data_dma
 12770 ;; This function uses a reentrant model
 12771 ;;
 12772                           
 12773                           	psect	text50
 12774  01CB8E                     __ptext50:
 12775                           	opt callstack 0
 12776  01CB8E                     _start_lcd:
 12777                           	opt callstack 12
 12778                           
 12779                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 12780                           
 12781                           ; BSR set to: 1
 12782                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12783                           ;incstack = 0
 12784  01CB8E  013B               	movlb	59	; () banked
 12785  01CB90  8DFC               	bsf	252,6,b	;volatile
 12786                           
 12787                           ; BSR set to: 59
 12788                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 12789  01CB92  0012               	return		;funcret
 12790  01CB94                     __end_of_start_lcd:
 12791                           	opt callstack 0
 12792                           
 12793 ;; *************** function _ringBufS_flush *****************
 12794 ;; Defined at:
 12795 ;;		line 76 in file "ringbufs.c"
 12796 ;; Parameters:    Size  Location     Type
 12797 ;;  _this           2  [STACK] PTR struct ringBufS_t
 12798 ;;		 -> ring_buf1(67), 
 12799 ;;  clearBuffer     1  [STACK] const char 
 12800 ;; Auto vars:     Size  Location     Type
 12801 ;;		None
 12802 ;; Return value:  Size  Location     Type
 12803 ;;                  1  [STACK] void 
 12804 ;; Registers used:
 12805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 12806 ;; Tracked objects:
 12807 ;;		On entry : 3F/1
 12808 ;;		On exit  : 0/0
 12809 ;;		Unchanged: 0/0
 12810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12815 ;;Total ram usage:        0 bytes
 12816 ;; Hardware stack levels used:    1
 12817 ;; Hardware stack levels required when called:   16
 12818 ;; This function calls:
 12819 ;;		_memset
 12820 ;; This function is called by:
 12821 ;;		_eaDogM_WriteString
 12822 ;;		_send_lcd_data_dma
 12823 ;; This function uses a reentrant model
 12824 ;;
 12825                           
 12826                           	psect	text51
 12827  01B2EC                     __ptext51:
 12828                           	opt callstack 0
 12829  01B2EC                     _ringBufS_flush:
 12830                           	opt callstack 11
 12831                           
 12832                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 12833                           ;stkvar	__this @ sp[(0)+-2]
 12834                           
 12835                           ; BSR set to: 59
 12836                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12837                           ;incstack = 0
 12838  01B2EC  0EFE               	movlw	-2
 12839  01B2EE  006F FF8C  F00B    	movff	plusw1,btemp+10
 12840  01B2F4  0EFF               	movlw	-1
 12841  01B2F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 12842  01B2FC  0E42               	movlw	66
 12843  01B2FE  240B               	addwf	(btemp+10)^0,w,c
 12844  01B300  6ED9               	movwf	fsr2l,c
 12845  01B302  0E00               	movlw	0
 12846  01B304  200C               	addwfc	(btemp+11)^0,w,c
 12847  01B306  6EDA               	movwf	fsr2h,c
 12848  01B308  0E00               	movlw	0
 12849  01B30A  6EDF               	movwf	indf2,c
 12850                           
 12851                           ;ringbufs.c: 79:  _this->head = 0;
 12852                           ;stkvar	__this @ sp[(0)+-2]
 12853  01B30C  0EFE               	movlw	-2
 12854  01B30E  006F FF8C  F00B    	movff	plusw1,btemp+10
 12855  01B314  0EFF               	movlw	-1
 12856  01B316  006F FF8C  F00C    	movff	plusw1,btemp+11
 12857  01B31C  0E40               	movlw	64
 12858  01B31E  240B               	addwf	(btemp+10)^0,w,c
 12859  01B320  6ED9               	movwf	fsr2l,c
 12860  01B322  0E00               	movlw	0
 12861  01B324  200C               	addwfc	(btemp+11)^0,w,c
 12862  01B326  6EDA               	movwf	fsr2h,c
 12863  01B328  0E00               	movlw	0
 12864  01B32A  6EDF               	movwf	indf2,c
 12865                           
 12866                           ;ringbufs.c: 80:  _this->tail = 0;
 12867                           ;stkvar	__this @ sp[(0)+-2]
 12868  01B32C  0EFE               	movlw	-2
 12869  01B32E  006F FF8C  F00B    	movff	plusw1,btemp+10
 12870  01B334  0EFF               	movlw	-1
 12871  01B336  006F FF8C  F00C    	movff	plusw1,btemp+11
 12872  01B33C  0E41               	movlw	65
 12873  01B33E  240B               	addwf	(btemp+10)^0,w,c
 12874  01B340  6ED9               	movwf	fsr2l,c
 12875  01B342  0E00               	movlw	0
 12876  01B344  200C               	addwfc	(btemp+11)^0,w,c
 12877  01B346  6EDA               	movwf	fsr2h,c
 12878  01B348  0E00               	movlw	0
 12879  01B34A  6EDF               	movwf	indf2,c
 12880                           
 12881                           ;ringbufs.c: 81:  if (clearBuffer) {
 12882                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 12883  01B34C  0EFD               	movlw	-3
 12884  01B34E  50E3               	movf	plusw1,w,c
 12885  01B350  B4D8               	btfsc	status,2,c
 12886  01B352  D011               	goto	l1616
 12887                           
 12888                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 12889  01B354  0E40               	movlw	64
 12890  01B356  6EE6               	movwf	postinc1,c
 12891  01B358  0E00               	movlw	0
 12892  01B35A  6EE6               	movwf	postinc1,c
 12893  01B35C  0E00               	movlw	0
 12894  01B35E  6EE6               	movwf	postinc1,c
 12895  01B360  0E00               	movlw	0
 12896  01B362  6EE6               	movwf	postinc1,c
 12897                           
 12898                           ;stkvar	__this @ sp[(-4)+-2]
 12899  01B364  0EFA               	movlw	-6
 12900  01B366  006F FF8F FFE6     	movff	plusw1,postinc1
 12901  01B36C  006F FF8F FFE6     	movff	plusw1,postinc1
 12902  01B372  EC18  F0B9         	call	_memset	;wreg free
 12903  01B376                     l1616:
 12904                           
 12905                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 12906  01B376  52E5               	movf	postdec1,f,c
 12907  01B378  52E5               	movf	postdec1,f,c
 12908  01B37A  52E5               	movf	postdec1,f,c
 12909  01B37C  0012               	return		;funcret
 12910  01B37E                     __end_of_ringBufS_flush:
 12911                           	opt callstack 0
 12912                           
 12913 ;; *************** function _memset *****************
 12914 ;; Defined at:
 12915 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 12916 ;; Parameters:    Size  Location     Type
 12917 ;;  dest            2  [STACK] PTR void 
 12918 ;;		 -> ring_buf2(67), ring_buf1(67), 
 12919 ;;  c               2  [STACK] int 
 12920 ;;  n               2  [STACK] unsigned int 
 12921 ;; Auto vars:     Size  Location     Type
 12922 ;;  s               2  [STACK] PTR unsigned char 
 12923 ;;		 -> ring_buf2(67), ring_buf1(67), 
 12924 ;;  k               2  [STACK] unsigned int 
 12925 ;; Return value:  Size  Location     Type
 12926 ;;                  2  [STACK] PTR void 
 12927 ;; Registers used:
 12928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 12929 ;; Tracked objects:
 12930 ;;		On entry : 0/1
 12931 ;;		On exit  : 0/0
 12932 ;;		Unchanged: 0/0
 12933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12938 ;;Total ram usage:        0 bytes
 12939 ;; Hardware stack levels used:    1
 12940 ;; Hardware stack levels required when called:   15
 12941 ;; This function calls:
 12942 ;;		Nothing
 12943 ;; This function is called by:
 12944 ;;		_ringBufS_init
 12945 ;;		_ringBufS_flush
 12946 ;; This function uses a reentrant model
 12947 ;;
 12948                           
 12949                           	psect	text52
 12950  017230                     __ptext52:
 12951                           	opt callstack 0
 12952  017230                     _memset:
 12953                           	opt callstack 0
 12954                           
 12955                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12956  017230  52E6               	movf	postinc1,f,c
 12957  017232  52E6               	movf	postinc1,f,c
 12958  017234  52E6               	movf	postinc1,f,c
 12959  017236  52E6               	movf	postinc1,f,c
 12960                           
 12961                           ;stkvar	_dest @ sp[(-4)+-2]
 12962                           
 12963                           ;incstack = 0
 12964  017238  0EFA               	movlw	-6
 12965  01723A  006F FF8C  F00B    	movff	plusw1,btemp+10
 12966  017240  0EFB               	movlw	-5
 12967  017242  006F FF8C  F00C    	movff	plusw1,btemp+11
 12968                           
 12969                           ;stkvar	_s @ sp[(-4)+0]
 12970  017248  0EFD               	movlw	-3
 12971  01724A  0060  F033  FFE3   	movff	btemp+11,plusw1
 12972  017250  0EFC               	movlw	-4
 12973  017252  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12974                           
 12975                           ;stkvar	_n @ sp[(-4)+-6]
 12976  017258  0EF6               	movlw	-10
 12977  01725A  006F FF8C  F001    	movff	plusw1,btemp
 12978  017260  0EF7               	movlw	-9
 12979  017262  50E3               	movf	plusw1,w,c
 12980  017264  1001               	iorwf	btemp^0,w,c
 12981  017266  B4D8               	btfsc	status,2,c
 12982  017268  D154               	goto	u11290
 12983                           
 12984                           ;stkvar	_c @ sp[(-4)+-4]
 12985                           ;stkvar	_s @ sp[(-4)+0]
 12986  01726A  0EFC               	movlw	-4
 12987  01726C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12988  017272  0EFD               	movlw	-3
 12989  017274  006F FF8F FFDA     	movff	plusw1,fsr2h
 12990  01727A  0EF8               	movlw	-8
 12991  01727C  006F FF8F FFDF     	movff	plusw1,indf2
 12992                           
 12993                           ;stkvar	_c @ sp[(-4)+-4]
 12994                           ;stkvar	_n @ sp[(-4)+-6]
 12995                           ;stkvar	_s @ sp[(-4)+0]
 12996  017282  0EFC               	movlw	-4
 12997  017284  006F FF8C  F00B    	movff	plusw1,btemp+10
 12998  01728A  0EFD               	movlw	-3
 12999  01728C  006F FF8C  F00C    	movff	plusw1,btemp+11
 13000  017292  0EF6               	movlw	-10
 13001  017294  50E3               	movf	plusw1,w,c
 13002  017296  260B               	addwf	(btemp+10)^0,f,c
 13003  017298  0EF7               	movlw	-9
 13004  01729A  50E3               	movf	plusw1,w,c
 13005  01729C  220C               	addwfc	(btemp+11)^0,f,c
 13006  01729E  0EFF               	movlw	255
 13007  0172A0  240B               	addwf	(btemp+10)^0,w,c
 13008  0172A2  6ED9               	movwf	fsr2l,c
 13009  0172A4  0EFF               	movlw	255
 13010  0172A6  200C               	addwfc	(btemp+11)^0,w,c
 13011  0172A8  6EDA               	movwf	fsr2h,c
 13012  0172AA  0EF8               	movlw	-8
 13013  0172AC  006F FF8F FFDF     	movff	plusw1,indf2
 13014                           
 13015                           ;stkvar	_n @ sp[(-4)+-6]
 13016  0172B2  0EF7               	movlw	-9
 13017  0172B4  50E3               	movf	plusw1,w,c
 13018  0172B6  E108               	bnz	l12441
 13019  0172B8  0EF6               	movlw	-10
 13020  0172BA  006F FF8C  F001    	movff	plusw1,btemp
 13021  0172C0  0E03               	movlw	3
 13022  0172C2  5E01               	subwf	btemp^0,f,c
 13023  0172C4  A0D8               	btfss	status,0,c
 13024  0172C6  D125               	goto	u11290
 13025  0172C8                     l12441:
 13026                           
 13027                           ;stkvar	_c @ sp[(-4)+-4]
 13028                           ;stkvar	_s @ sp[(-4)+0]
 13029  0172C8  0EFC               	movlw	-4
 13030  0172CA  006F FF8C  F00B    	movff	plusw1,btemp+10
 13031  0172D0  0EFD               	movlw	-3
 13032  0172D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 13033  0172D8  0E01               	movlw	1
 13034  0172DA  240B               	addwf	(btemp+10)^0,w,c
 13035  0172DC  6ED9               	movwf	fsr2l,c
 13036  0172DE  0E00               	movlw	0
 13037  0172E0  200C               	addwfc	(btemp+11)^0,w,c
 13038  0172E2  6EDA               	movwf	fsr2h,c
 13039  0172E4  0EF8               	movlw	-8
 13040  0172E6  006F FF8F FFDF     	movff	plusw1,indf2
 13041                           
 13042                           ;stkvar	_c @ sp[(-4)+-4]
 13043                           ;stkvar	_s @ sp[(-4)+0]
 13044  0172EC  0EFC               	movlw	-4
 13045  0172EE  006F FF8C  F00B    	movff	plusw1,btemp+10
 13046  0172F4  0EFD               	movlw	-3
 13047  0172F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 13048  0172FC  0E02               	movlw	2
 13049  0172FE  240B               	addwf	(btemp+10)^0,w,c
 13050  017300  6ED9               	movwf	fsr2l,c
 13051  017302  0E00               	movlw	0
 13052  017304  200C               	addwfc	(btemp+11)^0,w,c
 13053  017306  6EDA               	movwf	fsr2h,c
 13054  017308  0EF8               	movlw	-8
 13055  01730A  006F FF8F FFDF     	movff	plusw1,indf2
 13056                           
 13057                           ;stkvar	_c @ sp[(-4)+-4]
 13058                           ;stkvar	_n @ sp[(-4)+-6]
 13059                           ;stkvar	_s @ sp[(-4)+0]
 13060  017310  0EFC               	movlw	-4
 13061  017312  006F FF8C  F00B    	movff	plusw1,btemp+10
 13062  017318  0EFD               	movlw	-3
 13063  01731A  006F FF8C  F00C    	movff	plusw1,btemp+11
 13064  017320  0EF6               	movlw	-10
 13065  017322  50E3               	movf	plusw1,w,c
 13066  017324  260B               	addwf	(btemp+10)^0,f,c
 13067  017326  0EF7               	movlw	-9
 13068  017328  50E3               	movf	plusw1,w,c
 13069  01732A  220C               	addwfc	(btemp+11)^0,f,c
 13070  01732C  0EFE               	movlw	254
 13071  01732E  240B               	addwf	(btemp+10)^0,w,c
 13072  017330  6ED9               	movwf	fsr2l,c
 13073  017332  0EFF               	movlw	255
 13074  017334  200C               	addwfc	(btemp+11)^0,w,c
 13075  017336  6EDA               	movwf	fsr2h,c
 13076  017338  0EF8               	movlw	-8
 13077  01733A  006F FF8F FFDF     	movff	plusw1,indf2
 13078                           
 13079                           ;stkvar	_c @ sp[(-4)+-4]
 13080                           ;stkvar	_n @ sp[(-4)+-6]
 13081                           ;stkvar	_s @ sp[(-4)+0]
 13082  017340  0EFC               	movlw	-4
 13083  017342  006F FF8C  F00B    	movff	plusw1,btemp+10
 13084  017348  0EFD               	movlw	-3
 13085  01734A  006F FF8C  F00C    	movff	plusw1,btemp+11
 13086  017350  0EF6               	movlw	-10
 13087  017352  50E3               	movf	plusw1,w,c
 13088  017354  260B               	addwf	(btemp+10)^0,f,c
 13089  017356  0EF7               	movlw	-9
 13090  017358  50E3               	movf	plusw1,w,c
 13091  01735A  220C               	addwfc	(btemp+11)^0,f,c
 13092  01735C  0EFD               	movlw	253
 13093  01735E  240B               	addwf	(btemp+10)^0,w,c
 13094  017360  6ED9               	movwf	fsr2l,c
 13095  017362  0EFF               	movlw	255
 13096  017364  200C               	addwfc	(btemp+11)^0,w,c
 13097  017366  6EDA               	movwf	fsr2h,c
 13098  017368  0EF8               	movlw	-8
 13099  01736A  006F FF8F FFDF     	movff	plusw1,indf2
 13100                           
 13101                           ;stkvar	_n @ sp[(-4)+-6]
 13102  017370  0EF7               	movlw	-9
 13103  017372  50E3               	movf	plusw1,w,c
 13104  017374  E108               	bnz	l12447
 13105  017376  0EF6               	movlw	-10
 13106  017378  006F FF8C  F001    	movff	plusw1,btemp
 13107  01737E  0E07               	movlw	7
 13108  017380  5E01               	subwf	btemp^0,f,c
 13109  017382  A0D8               	btfss	status,0,c
 13110  017384  D0C6               	goto	u11290
 13111  017386                     l12447:
 13112                           
 13113                           ;stkvar	_c @ sp[(-4)+-4]
 13114                           ;stkvar	_s @ sp[(-4)+0]
 13115  017386  0EFC               	movlw	-4
 13116  017388  006F FF8C  F00B    	movff	plusw1,btemp+10
 13117  01738E  0EFD               	movlw	-3
 13118  017390  006F FF8C  F00C    	movff	plusw1,btemp+11
 13119  017396  0E03               	movlw	3
 13120  017398  240B               	addwf	(btemp+10)^0,w,c
 13121  01739A  6ED9               	movwf	fsr2l,c
 13122  01739C  0E00               	movlw	0
 13123  01739E  200C               	addwfc	(btemp+11)^0,w,c
 13124  0173A0  6EDA               	movwf	fsr2h,c
 13125  0173A2  0EF8               	movlw	-8
 13126  0173A4  006F FF8F FFDF     	movff	plusw1,indf2
 13127                           
 13128                           ;stkvar	_c @ sp[(-4)+-4]
 13129                           ;stkvar	_n @ sp[(-4)+-6]
 13130                           ;stkvar	_s @ sp[(-4)+0]
 13131  0173AA  0EFC               	movlw	-4
 13132  0173AC  006F FF8C  F00B    	movff	plusw1,btemp+10
 13133  0173B2  0EFD               	movlw	-3
 13134  0173B4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13135  0173BA  0EF6               	movlw	-10
 13136  0173BC  50E3               	movf	plusw1,w,c
 13137  0173BE  260B               	addwf	(btemp+10)^0,f,c
 13138  0173C0  0EF7               	movlw	-9
 13139  0173C2  50E3               	movf	plusw1,w,c
 13140  0173C4  220C               	addwfc	(btemp+11)^0,f,c
 13141  0173C6  0EFC               	movlw	252
 13142  0173C8  240B               	addwf	(btemp+10)^0,w,c
 13143  0173CA  6ED9               	movwf	fsr2l,c
 13144  0173CC  0EFF               	movlw	255
 13145  0173CE  200C               	addwfc	(btemp+11)^0,w,c
 13146  0173D0  6EDA               	movwf	fsr2h,c
 13147  0173D2  0EF8               	movlw	-8
 13148  0173D4  006F FF8F FFDF     	movff	plusw1,indf2
 13149                           
 13150                           ;stkvar	_n @ sp[(-4)+-6]
 13151  0173DA  0EF7               	movlw	-9
 13152  0173DC  50E3               	movf	plusw1,w,c
 13153  0173DE  E108               	bnz	l12453
 13154  0173E0  0EF6               	movlw	-10
 13155  0173E2  006F FF8C  F001    	movff	plusw1,btemp
 13156  0173E8  0E09               	movlw	9
 13157  0173EA  5E01               	subwf	btemp^0,f,c
 13158  0173EC  A0D8               	btfss	status,0,c
 13159  0173EE  D091               	goto	u11290
 13160  0173F0                     l12453:
 13161                           
 13162                           ;stkvar	_s @ sp[(-4)+0]
 13163  0173F0  0EFC               	movlw	-4
 13164  0173F2  006F FF8C  F00B    	movff	plusw1,btemp+10
 13165  0173F8  1E0B               	comf	(btemp+10)^0,f,c
 13166  0173FA  0EFD               	movlw	-3
 13167  0173FC  006F FF8C  F00C    	movff	plusw1,btemp+11
 13168  017402  1E0C               	comf	(btemp+11)^0,f,c
 13169  017404  2A0B               	incf	(btemp+10)^0,f,c
 13170  017406  B4D8               	btfsc	status,2,c
 13171  017408  2A0C               	incf	(btemp+11)^0,f,c
 13172  01740A  0E03               	movlw	3
 13173  01740C  160B               	andwf	(btemp+10)^0,f,c
 13174  01740E  0E00               	movlw	0
 13175  017410  160C               	andwf	(btemp+11)^0,f,c
 13176                           
 13177                           ;stkvar	_k @ sp[(-4)+2]
 13178  017412  0EFE               	movlw	-2
 13179  017414  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13180  01741A  0EFF               	movlw	-1
 13181  01741C  0060  F033  FFE3   	movff	btemp+11,plusw1
 13182                           
 13183                           ;stkvar	_k @ sp[(-4)+2]
 13184                           ;stkvar	_s @ sp[(-4)+0]
 13185  017422  0EFC               	movlw	-4
 13186  017424  50E3               	movf	plusw1,w,c
 13187  017426  6E01               	movwf	btemp^0,c
 13188  017428  0EFE               	movlw	-2
 13189  01742A  50E3               	movf	plusw1,w,c
 13190  01742C  2601               	addwf	btemp^0,f,c
 13191  01742E  0EFC               	movlw	-4
 13192  017430  0060  F007  FFE3   	movff	btemp,plusw1
 13193  017436  0EFD               	movlw	-3
 13194  017438  50E3               	movf	plusw1,w,c
 13195  01743A  6E01               	movwf	btemp^0,c
 13196  01743C  0EFF               	movlw	-1
 13197  01743E  50E3               	movf	plusw1,w,c
 13198  017440  2201               	addwfc	btemp^0,f,c
 13199  017442  0EFD               	movlw	-3
 13200  017444  0060  F007  FFE3   	movff	btemp,plusw1
 13201                           
 13202                           ;stkvar	_k @ sp[(-4)+2]
 13203                           ;stkvar	_n @ sp[(-4)+-6]
 13204  01744A  0EF6               	movlw	-10
 13205  01744C  50E3               	movf	plusw1,w,c
 13206  01744E  6E01               	movwf	btemp^0,c
 13207  017450  0EFE               	movlw	-2
 13208  017452  50E3               	movf	plusw1,w,c
 13209  017454  5E01               	subwf	btemp^0,f,c
 13210  017456  0EF6               	movlw	-10
 13211  017458  0060  F007  FFE3   	movff	btemp,plusw1
 13212  01745E  0EF7               	movlw	-9
 13213  017460  50E3               	movf	plusw1,w,c
 13214  017462  6E01               	movwf	btemp^0,c
 13215  017464  0EFF               	movlw	-1
 13216  017466  50E3               	movf	plusw1,w,c
 13217  017468  5A01               	subwfb	btemp^0,f,c
 13218  01746A  0EF7               	movlw	-9
 13219  01746C  0060  F007  FFE3   	movff	btemp,plusw1
 13220  017472  0EFC               	movlw	252
 13221  017474  6E0B               	movwf	(btemp+10)^0,c
 13222  017476  0EFF               	movlw	255
 13223  017478  6E0C               	movwf	(btemp+11)^0,c
 13224                           
 13225                           ;stkvar	_n @ sp[(-4)+-6]
 13226  01747A  0EF6               	movlw	-10
 13227  01747C  006F FF8C  F001    	movff	plusw1,btemp
 13228  017482  500B               	movf	(btemp+10)^0,w,c
 13229  017484  1601               	andwf	btemp^0,f,c
 13230  017486  0EF6               	movlw	-10
 13231  017488  0060  F007  FFE3   	movff	btemp,plusw1
 13232  01748E  0EF7               	movlw	-9
 13233  017490  006F FF8C  F001    	movff	plusw1,btemp
 13234  017496  500C               	movf	(btemp+11)^0,w,c
 13235  017498  1601               	andwf	btemp^0,f,c
 13236  01749A  0EF7               	movlw	-9
 13237  01749C  D02E               	goto	L12
 13238  01749E                     l12461:
 13239                           
 13240                           ;stkvar	_c @ sp[(-4)+-4]
 13241                           ;stkvar	_s @ sp[(-4)+0]
 13242  01749E  0EFC               	movlw	-4
 13243  0174A0  006F FF8F FFD9     	movff	plusw1,fsr2l
 13244  0174A6  0EFD               	movlw	-3
 13245  0174A8  006F FF8F FFDA     	movff	plusw1,fsr2h
 13246  0174AE  0EF8               	movlw	-8
 13247  0174B0  006F FF8F FFDF     	movff	plusw1,indf2
 13248                           
 13249                           ;stkvar	_n @ sp[(-4)+-6]
 13250  0174B6  0EF6               	movlw	-10
 13251  0174B8  006F FF8C  F001    	movff	plusw1,btemp
 13252  0174BE  0E01               	movlw	1
 13253  0174C0  5E01               	subwf	btemp^0,f,c
 13254  0174C2  0EF6               	movlw	-10
 13255  0174C4  0060  F007  FFE3   	movff	btemp,plusw1
 13256  0174CA  0EF7               	movlw	-9
 13257  0174CC  006F FF8C  F001    	movff	plusw1,btemp
 13258  0174D2  0E00               	movlw	0
 13259  0174D4  5A01               	subwfb	btemp^0,f,c
 13260  0174D6  0EF7               	movlw	-9
 13261  0174D8  0060  F007  FFE3   	movff	btemp,plusw1
 13262                           
 13263                           ;stkvar	_s @ sp[(-4)+0]
 13264  0174DE  0EFC               	movlw	-4
 13265  0174E0  50E3               	movf	plusw1,w,c
 13266  0174E2  0F01               	addlw	1
 13267  0174E4  6E01               	movwf	btemp^0,c
 13268  0174E6  0EFC               	movlw	-4
 13269  0174E8  0060  F007  FFE3   	movff	btemp,plusw1
 13270  0174EE  6A01               	clrf	btemp^0,c
 13271  0174F0  0EFD               	movlw	-3
 13272  0174F2  50E3               	movf	plusw1,w,c
 13273  0174F4  2001               	addwfc	btemp^0,w,c
 13274  0174F6  6E01               	movwf	btemp^0,c
 13275  0174F8  0EFD               	movlw	-3
 13276  0174FA                     L12:
 13277  0174FA  0060  F007  FFE3   	movff	btemp,plusw1
 13278                           
 13279                           ;stkvar	_n @ sp[(-4)+-6]
 13280  017500  0EF6               	movlw	-10
 13281  017502  006F FF8C  F001    	movff	plusw1,btemp
 13282  017508  0EF7               	movlw	-9
 13283  01750A  50E3               	movf	plusw1,w,c
 13284  01750C  1001               	iorwf	btemp^0,w,c
 13285  01750E  A4D8               	btfss	status,2,c
 13286  017510  D7C6               	goto	l12461
 13287  017512                     u11290:
 13288                           
 13289                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 13290  017512  0EF6               	movlw	246
 13291  017514  26E1               	addwf	fsr1l,f,c
 13292  017516  0EFF               	movlw	255
 13293  017518  22E2               	addwfc	fsr1h,f,c
 13294  01751A  0012               	return		;funcret
 13295  01751C                     __end_of_memset:
 13296                           	opt callstack 0
 13297                           
 13298 ;; *************** function _printf *****************
 13299 ;; Defined at:
 13300 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 13301 ;; Parameters:    Size  Location     Type
 13302 ;;  fmt             2  [STACK] PTR const unsigned char 
 13303 ;;		 -> STR_58(3), STR_57(3), 
 13304 ;; Auto vars:     Size  Location     Type
 13305 ;;  ap              2  [STACK] PTR void [1]
 13306 ;;		 -> ?_printf(2), ?_sprintf(2), 
 13307 ;;  ret             2    0        int 
 13308 ;; Return value:  Size  Location     Type
 13309 ;;                  2  [STACK] int 
 13310 ;; Registers used:
 13311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13312 ;; Tracked objects:
 13313 ;;		On entry : 3F/3B
 13314 ;;		On exit  : 3F/0
 13315 ;;		Unchanged: 0/0
 13316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13321 ;;Total ram usage:        0 bytes
 13322 ;; Hardware stack levels used:    1
 13323 ;; Hardware stack levels required when called:   23
 13324 ;; This function calls:
 13325 ;;		_vfprintf
 13326 ;; This function is called by:
 13327 ;;		_eaDogM_WriteString
 13328 ;;		_send_lcd_data_dma
 13329 ;; This function uses a reentrant model
 13330 ;;
 13331                           
 13332                           	psect	text53
 13333  01BA72                     __ptext53:
 13334                           	opt callstack 0
 13335  01BA72                     _printf:
 13336                           	opt callstack 0
 13337                           
 13338                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13339  01BA72  52E6               	movf	postinc1,f,c
 13340  01BA74  52E6               	movf	postinc1,f,c
 13341                           
 13342                           ;stkvar	?_printf @ sp[(-2)+-3]
 13343                           
 13344                           ;incstack = 0
 13345  01BA76  0EFB               	movlw	251
 13346  01BA78  24E1               	addwf	fsr1l,w,c
 13347  01BA7A  6E0B               	movwf	(btemp+10)^0,c
 13348  01BA7C  0EFF               	movlw	255
 13349  01BA7E  20E2               	addwfc	fsr1h,w,c
 13350  01BA80  6E0C               	movwf	(btemp+11)^0,c
 13351                           
 13352                           ;stkvar	_ap @ sp[(-2)+0]
 13353  01BA82  0EFF               	movlw	-1
 13354  01BA84  0060  F033  FFE3   	movff	btemp+11,plusw1
 13355  01BA8A  0EFE               	movlw	-2
 13356  01BA8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13357                           
 13358                           ;stkvar	_ap @ sp[(-2)+0]
 13359  01BA92  0EFE               	movlw	254
 13360  01BA94  24E1               	addwf	fsr1l,w,c
 13361  01BA96  6E01               	movwf	btemp^0,c
 13362  01BA98  0EFF               	movlw	255
 13363  01BA9A  20E2               	addwfc	fsr1h,w,c
 13364  01BA9C  6E02               	movwf	(btemp+1)^0,c
 13365  01BA9E  0060  F007  FFE6   	movff	btemp,postinc1
 13366  01BAA4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13367                           
 13368                           ;stkvar	_fmt @ sp[(-4)+-3]
 13369  01BAAA  0EF9               	movlw	-7
 13370  01BAAC  006F FF8F FFE6     	movff	plusw1,postinc1
 13371  01BAB2  006F FF8F FFE6     	movff	plusw1,postinc1
 13372  01BAB8  0E00               	movlw	0
 13373  01BABA  6EE6               	movwf	postinc1,c
 13374  01BABC  0E00               	movlw	0
 13375  01BABE  6EE6               	movwf	postinc1,c
 13376  01BAC0  EC87  F0D7         	call	_vfprintf	;wreg free
 13377                           
 13378                           ; BSR set to: 0
 13379                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 13380  01BAC4  52E5               	movf	postdec1,f,c
 13381  01BAC6  52E5               	movf	postdec1,f,c
 13382  01BAC8  52E5               	movf	postdec1,f,c
 13383  01BACA  50E7               	movf	indf1,w,c
 13384  01BACC  5EE1               	subwf	fsr1l,f,c
 13385  01BACE  0E00               	movlw	0
 13386  01BAD0  5AE2               	subwfb	fsr1h,f,c
 13387  01BAD2  0012               	return		;funcret
 13388  01BAD4                     __end_of_printf:
 13389                           	opt callstack 0
 13390                           
 13391 ;; *************** function _vfprintf *****************
 13392 ;; Defined at:
 13393 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13394 ;; Parameters:    Size  Location     Type
 13395 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13396 ;;		 -> f(6), NULL(0), 
 13397 ;;  fmt             2  [STACK] PTR const unsigned char 
 13398 ;;		 -> STR_78(127), STR_76(3), STR_75(3), STR_74(19), 
 13399 ;;		 -> STR_73(19), STR_72(19), STR_71(19), STR_70(19), 
 13400 ;;		 -> STR_69(19), STR_68(24), STR_67(15), STR_66(15), 
 13401 ;;		 -> STR_65(15), STR_64(10), STR_63(10), STR_62(19), 
 13402 ;;		 -> STR_61(19), STR_58(3), STR_57(3), STR_56(21), 
 13403 ;;		 -> STR_55(21), STR_54(21), STR_53(21), STR_52(21), 
 13404 ;;		 -> STR_51(21), STR_50(21), STR_49(21), STR_48(21), 
 13405 ;;		 -> STR_47(20), STR_46(20), STR_45(21), STR_44(21), 
 13406 ;;		 -> STR_43(21), STR_42(22), STR_41(22), STR_40(22), 
 13407 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(29), 
 13408 ;;		 -> STR_35(23), STR_34(23), STR_33(22), STR_32(22), 
 13409 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 13410 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(22), 
 13411 ;;		 -> STR_23(22), STR_22(22), STR_21(17), STR_20(16), 
 13412 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 13413 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
 13414 ;;		 -> STR_11(22), STR_10(22), STR_9(26), STR_8(21), 
 13415 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 13416 ;;		 -> STR_2(21), STR_1(21), 
 13417 ;;  ap              2  [STACK] PTR PTR void 
 13418 ;;		 -> ap(2), ap(2), 
 13419 ;; Auto vars:     Size  Location     Type
 13420 ;;  cfmt            2  [STACK] PTR unsigned char 
 13421 ;;		 -> STR_78(127), STR_76(3), STR_75(3), STR_74(19), 
 13422 ;;		 -> STR_73(19), STR_72(19), STR_71(19), STR_70(19), 
 13423 ;;		 -> STR_69(19), STR_68(24), STR_67(15), STR_66(15), 
 13424 ;;		 -> STR_65(15), STR_64(10), STR_63(10), STR_62(19), 
 13425 ;;		 -> STR_61(19), STR_58(3), STR_57(3), STR_56(21), 
 13426 ;;		 -> STR_55(21), STR_54(21), STR_53(21), STR_52(21), 
 13427 ;;		 -> STR_51(21), STR_50(21), STR_49(21), STR_48(21), 
 13428 ;;		 -> STR_47(20), STR_46(20), STR_45(21), STR_44(21), 
 13429 ;;		 -> STR_43(21), STR_42(22), STR_41(22), STR_40(22), 
 13430 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(29), 
 13431 ;;		 -> STR_35(23), STR_34(23), STR_33(22), STR_32(22), 
 13432 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 13433 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(22), 
 13434 ;;		 -> STR_23(22), STR_22(22), STR_21(17), STR_20(16), 
 13435 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 13436 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
 13437 ;;		 -> STR_11(22), STR_10(22), STR_9(26), STR_8(21), 
 13438 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 13439 ;;		 -> STR_2(21), STR_1(21), 
 13440 ;; Return value:  Size  Location     Type
 13441 ;;                  2  [STACK] int 
 13442 ;; Registers used:
 13443 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13444 ;; Tracked objects:
 13445 ;;		On entry : 0/1
 13446 ;;		On exit  : 3F/0
 13447 ;;		Unchanged: 0/0
 13448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13453 ;;Total ram usage:        0 bytes
 13454 ;; Hardware stack levels used:    1
 13455 ;; Hardware stack levels required when called:   22
 13456 ;; This function calls:
 13457 ;;		_vfpfcnvrt
 13458 ;; This function is called by:
 13459 ;;		_sprintf
 13460 ;;		_printf
 13461 ;; This function uses a reentrant model
 13462 ;;
 13463                           
 13464                           	psect	text54
 13465  01AF0E                     __ptext54:
 13466                           	opt callstack 0
 13467  01AF0E                     _vfprintf:
 13468                           	opt callstack 0
 13469                           
 13470                           ; BSR set to: 0
 13471                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13472  01AF0E  52E6               	movf	postinc1,f,c
 13473  01AF10  52E6               	movf	postinc1,f,c
 13474                           
 13475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 13476                           ;stkvar	_fmt @ sp[(-2)+-4]
 13477                           
 13478                           ;incstack = 0
 13479 ;; hardware stack exceeded
 13480  01AF12  0EFA               	movlw	-6
 13481  01AF14  006F FF8C  F00B    	movff	plusw1,btemp+10
 13482  01AF1A  0EFB               	movlw	-5
 13483  01AF1C  006F FF8C  F00C    	movff	plusw1,btemp+11
 13484                           
 13485                           ;stkvar	_cfmt @ sp[(-2)+0]
 13486  01AF22  0EFF               	movlw	-1
 13487  01AF24  0060  F033  FFE3   	movff	btemp+11,plusw1
 13488  01AF2A  0EFE               	movlw	-2
 13489  01AF2C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13490                           
 13491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 13492  01AF32  0100               	movlb	0	; () banked
 13493  01AF34  6B9A               	clrf	_nout& (0+255),b
 13494  01AF36  6B9B               	clrf	(_nout+1)& (0+255),b
 13495                           
 13496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 13497  01AF38  D021               	goto	l13311
 13498  01AF3A                     l13309:
 13499                           
 13500                           ; BSR set to: 0
 13501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 13502                           ;stkvar	_ap @ sp[(-2)+-6]
 13503  01AF3A  0EF8               	movlw	-8
 13504  01AF3C  006F FF8F FFE6     	movff	plusw1,postinc1
 13505  01AF42  006F FF8F FFE6     	movff	plusw1,postinc1
 13506                           
 13507                           ;stkvar	_cfmt @ sp[(-4)+0]
 13508  01AF48  0EFC               	movlw	252
 13509  01AF4A  24E1               	addwf	fsr1l,w,c
 13510  01AF4C  6E01               	movwf	btemp^0,c
 13511  01AF4E  0EFF               	movlw	255
 13512  01AF50  20E2               	addwfc	fsr1h,w,c
 13513  01AF52  6E02               	movwf	(btemp+1)^0,c
 13514  01AF54  0060  F007  FFE6   	movff	btemp,postinc1
 13515  01AF5A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13516                           
 13517                           ;stkvar	_fp @ sp[(-6)+-2]
 13518  01AF60  0EF8               	movlw	-8
 13519  01AF62  006F FF8F FFE6     	movff	plusw1,postinc1
 13520  01AF68  006F FF8F FFE6     	movff	plusw1,postinc1
 13521  01AF6E  EC13  F092         	call	_vfpfcnvrt	;wreg free
 13522  01AF72  5001               	movf	btemp^0,w,c
 13523  01AF74  0100               	movlb	0	; () banked
 13524  01AF76  279A               	addwf	_nout& (0+255),f,b
 13525  01AF78  5002               	movf	(btemp+1)^0,w,c
 13526  01AF7A  239B               	addwfc	(_nout+1)& (0+255),f,b
 13527  01AF7C                     l13311:
 13528                           
 13529                           ; BSR set to: 0
 13530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 13531                           ;stkvar	_cfmt @ sp[(-2)+0]
 13532  01AF7C  50E1               	movf	fsr1l,w,c
 13533  01AF7E  0FFE               	addlw	-2
 13534  01AF80  6ED9               	movwf	fsr2l,c
 13535  01AF82  50E2               	movf	fsr1h,w,c
 13536  01AF84  6EDA               	movwf	fsr2h,c
 13537  01AF86  0EFF               	movlw	255
 13538  01AF88  22DA               	addwfc	fsr2h,f,c
 13539  01AF8A  006F FF7B FFF6     	movff	postinc2,tblptrl
 13540  01AF90  006F FF77 FFF7     	movff	postdec2,tblptrh
 13541  01AF96                     	if	0	;tblptru may be non-zero
 13542  01AF96                     	endif
 13543  01AF96                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13544  01AF96  0E00               	movlw	low (__mediumconst shr (0+16))
 13545  01AF98  6EF8               	movwf	tblptru,c
 13546  01AF9A                     	endif
 13547  01AF9A  0008               	tblrd		*
 13548  01AF9C  50F5               	movf	tablat,w,c
 13549  01AF9E  0900               	iorlw	0
 13550  01AFA0  A4D8               	btfss	status,2,c
 13551  01AFA2  D7CB               	goto	l13309
 13552                           
 13553                           ; BSR set to: 0
 13554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 13555  01AFA4  0060  F268  F001   	movff	_nout,btemp
 13556  01AFAA  0060  F26C  F002   	movff	_nout+1,btemp+1
 13557                           
 13558                           ; BSR set to: 0
 13559                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 13560  01AFB0  0EF8               	movlw	248
 13561  01AFB2  26E1               	addwf	fsr1l,f,c
 13562  01AFB4  0EFF               	movlw	255
 13563  01AFB6  22E2               	addwfc	fsr1h,f,c
 13564  01AFB8  0012               	return		;funcret
 13565  01AFBA                     __end_of_vfprintf:
 13566                           	opt callstack 0
 13567                           
 13568 ;; *************** function _vfpfcnvrt *****************
 13569 ;; Defined at:
 13570 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13571 ;; Parameters:    Size  Location     Type
 13572 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13573 ;;		 -> f(6), NULL(0), 
 13574 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 13575 ;;		 -> cfmt(2), 
 13576 ;;  ap              2  [STACK] PTR PTR void 
 13577 ;;		 -> ap(2), ap(2), 
 13578 ;; Auto vars:     Size  Location     Type
 13579 ;;  llu             8  [STACK] unsigned long long 
 13580 ;;  ll              8  [STACK] long long 
 13581 ;;  f               4  [STACK] long long 
 13582 ;;  ct              3  [STACK] unsigned char [3]
 13583 ;;  vp              3    0        PTR void 
 13584 ;;  cp              2  [STACK] PTR unsigned char 
 13585 ;;		 -> ?_printf(2), ?_sprintf(2), STR_60(9), STR_59(12), 
 13586 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 13587 ;;		 -> V(192), 
 13588 ;;  i               2    0        int 
 13589 ;;  done            2    0        int 
 13590 ;;  c               1  [STACK] unsigned char 
 13591 ;; Return value:  Size  Location     Type
 13592 ;;                  2  [STACK] int 
 13593 ;; Registers used:
 13594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13595 ;; Tracked objects:
 13596 ;;		On entry : 0/0
 13597 ;;		On exit  : 0/0
 13598 ;;		Unchanged: 0/0
 13599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13604 ;;Total ram usage:        0 bytes
 13605 ;; Hardware stack levels used:    1
 13606 ;; Hardware stack levels required when called:   21
 13607 ;; This function calls:
 13608 ;;		_atoi
 13609 ;;		_ctoa
 13610 ;;		_dtoa
 13611 ;;		_efgtoa
 13612 ;;		_fputc
 13613 ;;		_isdigit
 13614 ;;		_isupper
 13615 ;;		_stoa
 13616 ;;		_strncmp
 13617 ;;		_tolower
 13618 ;;		_utoa
 13619 ;;		_xtoa
 13620 ;; This function is called by:
 13621 ;;		_vfprintf
 13622 ;; This function uses a reentrant model
 13623 ;;
 13624                           
 13625                           	psect	text55
 13626  012426                     __ptext55:
 13627                           	opt callstack 0
 13628  012426                     _vfpfcnvrt:
 13629                           	opt callstack 0
 13630                           
 13631                           ; BSR set to: 0
 13632                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13633  012426  0E20               	movlw	32
 13634  012428  26E1               	addwf	fsr1l,f,c
 13635  01242A  0E00               	movlw	0
 13636  01242C  22E2               	addwfc	fsr1h,f,c
 13637                           
 13638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 13639                           ;stkvar	_fmt @ sp[(-32)+-4]
 13640                           
 13641                           ;incstack = 0
 13642 ;; hardware stack exceeded
 13643  01242E  0EDC               	movlw	-36
 13644  012430  006F FF8F FFD9     	movff	plusw1,fsr2l
 13645  012436  0EDD               	movlw	-35
 13646  012438  006F FF8F FFDA     	movff	plusw1,fsr2h
 13647  01243E  006F FF7B FFF6     	movff	postinc2,tblptrl
 13648  012444  006F FF77 FFF7     	movff	postdec2,tblptrh
 13649  01244A                     	if	0	;tblptru may be non-zero
 13650  01244A                     	endif
 13651  01244A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13652  01244A  0E00               	movlw	low (__mediumconst shr (0+16))
 13653  01244C  6EF8               	movwf	tblptru,c
 13654  01244E                     	endif
 13655  01244E  0008               	tblrd		*
 13656  012450  50F5               	movf	tablat,w,c
 13657  012452  0A25               	xorlw	37
 13658  012454  A4D8               	btfss	status,2,c
 13659  012456  EFBA  F099         	goto	l13271
 13660                           
 13661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 13662                           ;stkvar	_fmt @ sp[(-32)+-4]
 13663  01245A  0EDC               	movlw	-36
 13664  01245C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13665  012462  0EDD               	movlw	-35
 13666  012464  006F FF8F FFDA     	movff	plusw1,fsr2h
 13667  01246A  2ADE               	incf	postinc2,f,c
 13668  01246C  0E00               	movlw	0
 13669  01246E  22DD               	addwfc	postdec2,f,c
 13670                           
 13671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 13672  012470  6A3A               	clrf	_width^0,c
 13673  012472  6A3B               	clrf	(_width+1)^0,c
 13674  012474  6A3E               	clrf	_flags^0,c
 13675  012476  6A3F               	clrf	(_flags+1)^0,c
 13676                           
 13677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 13678  012478  683C               	setf	_prec^0,c
 13679  01247A  683D               	setf	(_prec+1)^0,c
 13680                           
 13681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 13682                           ;stkvar	_fmt @ sp[(-32)+-4]
 13683  01247C  0EDC               	movlw	-36
 13684  01247E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13685  012484  0EDD               	movlw	-35
 13686  012486  006F FF8F FFDA     	movff	plusw1,fsr2h
 13687  01248C  006F FF7B FFF6     	movff	postinc2,tblptrl
 13688  012492  006F FF77 FFF7     	movff	postdec2,tblptrh
 13689  012498                     	if	0	;tblptru may be non-zero
 13690  012498                     	endif
 13691  012498                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13692  012498  0E00               	movlw	low (__mediumconst shr (0+16))
 13693  01249A  6EF8               	movwf	tblptru,c
 13694  01249C                     	endif
 13695  01249C  0008               	tblrd		*
 13696  01249E  50F5               	movf	tablat,w,c
 13697  0124A0  0A2A               	xorlw	42
 13698  0124A2  A4D8               	btfss	status,2,c
 13699  0124A4  D031               	goto	l13089
 13700                           
 13701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 13702                           ;stkvar	_fmt @ sp[(-32)+-4]
 13703  0124A6  0EDC               	movlw	-36
 13704  0124A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 13705  0124AE  0EDD               	movlw	-35
 13706  0124B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 13707  0124B6  2ADE               	incf	postinc2,f,c
 13708  0124B8  0E00               	movlw	0
 13709  0124BA  22DD               	addwfc	postdec2,f,c
 13710                           
 13711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 13712                           ;stkvar	_ap @ sp[(-32)+-6]
 13713  0124BC  0EDA               	movlw	-38
 13714  0124BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13715  0124C4  0EDB               	movlw	-37
 13716  0124C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13717  0124CC  0E02               	movlw	2
 13718  0124CE  5EDE               	subwf	postinc2,f,c
 13719  0124D0  0E00               	movlw	0
 13720  0124D2  5ADD               	subwfb	postdec2,f,c
 13721  0124D4  006F FF78  F00B    	movff	postinc2,btemp+10
 13722  0124DA  006F FF74  F00C    	movff	postdec2,btemp+11
 13723  0124E0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13724  0124E6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13725  0124EC  006F FF78  F03A    	movff	postinc2,_width
 13726  0124F2  006F FF74  F03B    	movff	postdec2,_width+1
 13727                           
 13728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 13729  0124F8  AE3B               	btfss	(_width+1)^0,7,c
 13730  0124FA  D066               	goto	u12480
 13731                           
 13732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 13733  0124FC  803E               	bsf	_flags^0,0,c
 13734                           
 13735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 13736  0124FE  6C3A               	negf	_width^0,c
 13737  012500  1E3B               	comf	(_width+1)^0,f,c
 13738  012502  B0D8               	btfsc	status,0,c
 13739  012504  2A3B               	incf	(_width+1)^0,f,c
 13740  012506  D060               	goto	u12480
 13741  012508                     l13089:
 13742                           
 13743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 13744                           ;stkvar	_fmt @ sp[(-32)+-4]
 13745  012508  0EDC               	movlw	-36
 13746  01250A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13747  012510  0EDD               	movlw	-35
 13748  012512  006F FF8F FFDA     	movff	plusw1,fsr2h
 13749  012518  006F FF78  F00B    	movff	postinc2,btemp+10
 13750  01251E  006F FF74  F00C    	movff	postdec2,btemp+11
 13751  012524  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13752  01252A  0060  F033  FFE6   	movff	btemp+11,postinc1
 13753  012530  EC99  F0BE         	call	_atoi	;wreg free
 13754  012534  0060  F004  F03A   	movff	btemp,_width
 13755  01253A  0060  F008  F03B   	movff	btemp+1,_width+1
 13756                           
 13757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 13758  012540  D00B               	goto	l13093
 13759  012542                     l13091:
 13760                           
 13761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 13762                           ;stkvar	_fmt @ sp[(-32)+-4]
 13763  012542  0EDC               	movlw	-36
 13764  012544  006F FF8F FFD9     	movff	plusw1,fsr2l
 13765  01254A  0EDD               	movlw	-35
 13766  01254C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13767  012552  2ADE               	incf	postinc2,f,c
 13768  012554  0E00               	movlw	0
 13769  012556  22DD               	addwfc	postdec2,f,c
 13770  012558                     l13093:
 13771  012558  0ED0               	movlw	208
 13772  01255A  6E0B               	movwf	(btemp+10)^0,c
 13773  01255C  0EFF               	movlw	255
 13774  01255E  6E0C               	movwf	(btemp+11)^0,c
 13775                           
 13776                           ;stkvar	_fmt @ sp[(-32)+-4]
 13777  012560  0EDC               	movlw	-36
 13778  012562  006F FF8F FFD9     	movff	plusw1,fsr2l
 13779  012568  0EDD               	movlw	-35
 13780  01256A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13781  012570  006F FF7B FFF6     	movff	postinc2,tblptrl
 13782  012576  006F FF77 FFF7     	movff	postdec2,tblptrh
 13783  01257C                     	if	0	;tblptru may be non-zero
 13784  01257C                     	endif
 13785  01257C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13786  01257C  0E00               	movlw	low (__mediumconst shr (0+16))
 13787  01257E  6EF8               	movwf	tblptru,c
 13788  012580                     	endif
 13789  012580  0008               	tblrd		*
 13790  012582  50F5               	movf	tablat,w,c
 13791  012584  6E09               	movwf	(btemp+8)^0,c
 13792  012586  6A0A               	clrf	(btemp+9)^0,c
 13793  012588  500B               	movf	(btemp+10)^0,w,c
 13794  01258A  2609               	addwf	(btemp+8)^0,f,c
 13795  01258C  500C               	movf	(btemp+11)^0,w,c
 13796  01258E  220A               	addwfc	(btemp+9)^0,f,c
 13797  012590  500A               	movf	(btemp+9)^0,w,c
 13798  012592  E106               	bnz	u12460
 13799  012594  0E0A               	movlw	10
 13800  012596  5C09               	subwf	(btemp+8)^0,w,c
 13801  012598  B0D8               	btfsc	status,0,c
 13802  01259A  D002               	goto	u12460
 13803  01259C  0E01               	movlw	1
 13804  01259E  D001               	goto	u12470
 13805  0125A0                     u12460:
 13806  0125A0  0E00               	movlw	0
 13807  0125A2                     u12470:
 13808  0125A2  6E0B               	movwf	(btemp+10)^0,c
 13809  0125A4  6A0C               	clrf	(btemp+11)^0,c
 13810                           
 13811                           ;stkvar	_vfpfcnvrt$5910 @ sp[(-32)+4]
 13812  0125A6  0EE4               	movlw	-28
 13813  0125A8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13814  0125AE  0EE5               	movlw	-27
 13815  0125B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 13816                           
 13817                           ;stkvar	_vfpfcnvrt$5910 @ sp[(-32)+4]
 13818  0125B6  0EE4               	movlw	-28
 13819  0125B8  006F FF8C  F001    	movff	plusw1,btemp
 13820  0125BE  0EE5               	movlw	-27
 13821  0125C0  50E3               	movf	plusw1,w,c
 13822  0125C2  1001               	iorwf	btemp^0,w,c
 13823  0125C4  A4D8               	btfss	status,2,c
 13824  0125C6  D7BD               	goto	l13091
 13825  0125C8                     u12480:
 13826                           
 13827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 13828                           ;stkvar	_fmt @ sp[(-32)+-4]
 13829  0125C8  0EDC               	movlw	-36
 13830  0125CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13831  0125D0  0EDD               	movlw	-35
 13832  0125D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13833  0125D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 13834  0125DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 13835  0125E4                     	if	0	;tblptru may be non-zero
 13836  0125E4                     	endif
 13837  0125E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13838  0125E4  0E00               	movlw	low (__mediumconst shr (0+16))
 13839  0125E6  6EF8               	movwf	tblptru,c
 13840  0125E8                     	endif
 13841  0125E8  0008               	tblrd		*
 13842  0125EA  50F5               	movf	tablat,w,c
 13843  0125EC  0A2E               	xorlw	46
 13844  0125EE  A4D8               	btfss	status,2,c
 13845  0125F0  D0AC               	goto	u12530
 13846                           
 13847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 13848  0125F2  6A3C               	clrf	_prec^0,c
 13849  0125F4  6A3D               	clrf	(_prec+1)^0,c
 13850                           
 13851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 13852                           ;stkvar	_fmt @ sp[(-32)+-4]
 13853  0125F6  0EDC               	movlw	-36
 13854  0125F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 13855  0125FE  0EDD               	movlw	-35
 13856  012600  006F FF8F FFDA     	movff	plusw1,fsr2h
 13857  012606  2ADE               	incf	postinc2,f,c
 13858  012608  0E00               	movlw	0
 13859  01260A  22DD               	addwfc	postdec2,f,c
 13860                           
 13861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 13862                           ;stkvar	_fmt @ sp[(-32)+-4]
 13863  01260C  0EDC               	movlw	-36
 13864  01260E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13865  012614  0EDD               	movlw	-35
 13866  012616  006F FF8F FFDA     	movff	plusw1,fsr2h
 13867  01261C  006F FF7B FFF6     	movff	postinc2,tblptrl
 13868  012622  006F FF77 FFF7     	movff	postdec2,tblptrh
 13869  012628                     	if	0	;tblptru may be non-zero
 13870  012628                     	endif
 13871  012628                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13872  012628  0E00               	movlw	low (__mediumconst shr (0+16))
 13873  01262A  6EF8               	movwf	tblptru,c
 13874  01262C                     	endif
 13875  01262C  0008               	tblrd		*
 13876  01262E  50F5               	movf	tablat,w,c
 13877  012630  0A2A               	xorlw	42
 13878  012632  A4D8               	btfss	status,2,c
 13879  012634  D02A               	goto	l13111
 13880                           
 13881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 13882                           ;stkvar	_fmt @ sp[(-32)+-4]
 13883  012636  0EDC               	movlw	-36
 13884  012638  006F FF8F FFD9     	movff	plusw1,fsr2l
 13885  01263E  0EDD               	movlw	-35
 13886  012640  006F FF8F FFDA     	movff	plusw1,fsr2h
 13887  012646  2ADE               	incf	postinc2,f,c
 13888  012648  0E00               	movlw	0
 13889  01264A  22DD               	addwfc	postdec2,f,c
 13890                           
 13891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 13892                           ;stkvar	_ap @ sp[(-32)+-6]
 13893  01264C  0EDA               	movlw	-38
 13894  01264E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13895  012654  0EDB               	movlw	-37
 13896  012656  006F FF8F FFDA     	movff	plusw1,fsr2h
 13897  01265C  0E02               	movlw	2
 13898  01265E  5EDE               	subwf	postinc2,f,c
 13899  012660  0E00               	movlw	0
 13900  012662  5ADD               	subwfb	postdec2,f,c
 13901  012664  006F FF78  F00B    	movff	postinc2,btemp+10
 13902  01266A  006F FF74  F00C    	movff	postdec2,btemp+11
 13903  012670  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13904  012676  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13905  01267C  006F FF78  F03C    	movff	postinc2,_prec
 13906  012682  006F FF74  F03D    	movff	postdec2,_prec+1
 13907                           
 13908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 13909  012688  D060               	goto	u12530
 13910  01268A                     l13111:
 13911                           
 13912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 13913                           ;stkvar	_fmt @ sp[(-32)+-4]
 13914  01268A  0EDC               	movlw	-36
 13915  01268C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13916  012692  0EDD               	movlw	-35
 13917  012694  006F FF8F FFDA     	movff	plusw1,fsr2h
 13918  01269A  006F FF78  F00B    	movff	postinc2,btemp+10
 13919  0126A0  006F FF74  F00C    	movff	postdec2,btemp+11
 13920  0126A6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13921  0126AC  0060  F033  FFE6   	movff	btemp+11,postinc1
 13922  0126B2  EC99  F0BE         	call	_atoi	;wreg free
 13923  0126B6  0060  F004  F03C   	movff	btemp,_prec
 13924  0126BC  0060  F008  F03D   	movff	btemp+1,_prec+1
 13925                           
 13926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 13927  0126C2  D00B               	goto	l13115
 13928  0126C4                     l13113:
 13929                           
 13930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 13931                           ;stkvar	_fmt @ sp[(-32)+-4]
 13932  0126C4  0EDC               	movlw	-36
 13933  0126C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 13934  0126CC  0EDD               	movlw	-35
 13935  0126CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 13936  0126D4  2ADE               	incf	postinc2,f,c
 13937  0126D6  0E00               	movlw	0
 13938  0126D8  22DD               	addwfc	postdec2,f,c
 13939  0126DA                     l13115:
 13940  0126DA  0ED0               	movlw	208
 13941  0126DC  6E0B               	movwf	(btemp+10)^0,c
 13942  0126DE  0EFF               	movlw	255
 13943  0126E0  6E0C               	movwf	(btemp+11)^0,c
 13944                           
 13945                           ;stkvar	_fmt @ sp[(-32)+-4]
 13946  0126E2  0EDC               	movlw	-36
 13947  0126E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 13948  0126EA  0EDD               	movlw	-35
 13949  0126EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 13950  0126F2  006F FF7B FFF6     	movff	postinc2,tblptrl
 13951  0126F8  006F FF77 FFF7     	movff	postdec2,tblptrh
 13952  0126FE                     	if	0	;tblptru may be non-zero
 13953  0126FE                     	endif
 13954  0126FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13955  0126FE  0E00               	movlw	low (__mediumconst shr (0+16))
 13956  012700  6EF8               	movwf	tblptru,c
 13957  012702                     	endif
 13958  012702  0008               	tblrd		*
 13959  012704  50F5               	movf	tablat,w,c
 13960  012706  6E09               	movwf	(btemp+8)^0,c
 13961  012708  6A0A               	clrf	(btemp+9)^0,c
 13962  01270A  500B               	movf	(btemp+10)^0,w,c
 13963  01270C  2609               	addwf	(btemp+8)^0,f,c
 13964  01270E  500C               	movf	(btemp+11)^0,w,c
 13965  012710  220A               	addwfc	(btemp+9)^0,f,c
 13966  012712  500A               	movf	(btemp+9)^0,w,c
 13967  012714  E106               	bnz	u12510
 13968  012716  0E0A               	movlw	10
 13969  012718  5C09               	subwf	(btemp+8)^0,w,c
 13970  01271A  B0D8               	btfsc	status,0,c
 13971  01271C  D002               	goto	u12510
 13972  01271E  0E01               	movlw	1
 13973  012720  D001               	goto	u12520
 13974  012722                     u12510:
 13975  012722  0E00               	movlw	0
 13976  012724                     u12520:
 13977  012724  6E0B               	movwf	(btemp+10)^0,c
 13978  012726  6A0C               	clrf	(btemp+11)^0,c
 13979                           
 13980                           ;stkvar	_vfpfcnvrt$5911 @ sp[(-32)+0]
 13981  012728  0EE0               	movlw	-32
 13982  01272A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13983  012730  0EE1               	movlw	-31
 13984  012732  0060  F033  FFE3   	movff	btemp+11,plusw1
 13985                           
 13986                           ;stkvar	_vfpfcnvrt$5911 @ sp[(-32)+0]
 13987  012738  0EE0               	movlw	-32
 13988  01273A  006F FF8C  F001    	movff	plusw1,btemp
 13989  012740  0EE1               	movlw	-31
 13990  012742  50E3               	movf	plusw1,w,c
 13991  012744  1001               	iorwf	btemp^0,w,c
 13992  012746  A4D8               	btfss	status,2,c
 13993  012748  D7BD               	goto	l13113
 13994  01274A                     u12530:
 13995                           
 13996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 13997                           ;stkvar	_fmt @ sp[(-32)+-4]
 13998  01274A  0EDC               	movlw	-36
 13999  01274C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14000  012752  0EDD               	movlw	-35
 14001  012754  006F FF8F FFDA     	movff	plusw1,fsr2h
 14002  01275A  006F FF7B FFF6     	movff	postinc2,tblptrl
 14003  012760  006F FF77 FFF7     	movff	postdec2,tblptrh
 14004  012766                     	if	0	;tblptru may be non-zero
 14005  012766                     	endif
 14006  012766                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14007  012766  0E00               	movlw	low (__mediumconst shr (0+16))
 14008  012768  6EF8               	movwf	tblptru,c
 14009  01276A                     	endif
 14010  01276A  0008               	tblrd		*
 14011  01276C  50F5               	movf	tablat,w,c
 14012  01276E  6EE6               	movwf	postinc1,c
 14013  012770  0E00               	movlw	0
 14014  012772  6EE6               	movwf	postinc1,c
 14015  012774  EC8E  F0DA         	call	_tolower	;wreg free
 14016                           
 14017                           ;stkvar	_ct @ sp[(-32)+26]
 14018  012778  0EFA               	movlw	-6
 14019  01277A  0060  F007  FFE3   	movff	btemp,plusw1
 14020                           
 14021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 14022                           ;stkvar	_ct @ sp[(-32)+26]
 14023  012780  0EFA               	movlw	-6
 14024  012782  50E3               	movf	plusw1,w,c
 14025  012784  B4D8               	btfsc	status,2,c
 14026  012786  D05B               	goto	l13131
 14027                           
 14028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 14029                           ;stkvar	_ct @ sp[(-32)+26]
 14030  012788  0EFB               	movlw	251
 14031  01278A  24E1               	addwf	fsr1l,w,c
 14032  01278C  6ED9               	movwf	fsr2l,c
 14033  01278E  0EFF               	movlw	255
 14034  012790  20E2               	addwfc	fsr1h,w,c
 14035  012792  6EDA               	movwf	fsr2h,c
 14036                           
 14037                           ;stkvar	_fmt @ sp[(-32)+-4]
 14038  012794  0EDC               	movlw	-36
 14039  012796  006F FF8F FFE9     	movff	plusw1,fsr0l
 14040  01279C  0EDD               	movlw	-35
 14041  01279E  006F FF8F FFEA     	movff	plusw1,fsr0h
 14042  0127A4  006F FFB8  F00B    	movff	postinc0,btemp+10
 14043  0127AA  006F FFB4  F00C    	movff	postdec0,btemp+11
 14044  0127B0  0E01               	movlw	1
 14045  0127B2  260B               	addwf	(btemp+10)^0,f,c
 14046  0127B4  0E00               	movlw	0
 14047  0127B6  220C               	addwfc	(btemp+11)^0,f,c
 14048  0127B8  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 14049  0127BE  0060  F033  FFF7   	movff	btemp+11,tblptrh
 14050  0127C4                     	if	0	;tblptru may be non-zero
 14051  0127C4                     	endif
 14052  0127C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14053  0127C4  0E00               	movlw	low (__mediumconst shr (0+16))
 14054  0127C6  6EF8               	movwf	tblptru,c
 14055  0127C8                     	endif
 14056  0127C8  0008               	tblrd		*
 14057  0127CA  50F5               	movf	tablat,w,c
 14058  0127CC  6EE6               	movwf	postinc1,c
 14059  0127CE  0E00               	movlw	0
 14060  0127D0  6EE6               	movwf	postinc1,c
 14061  0127D2  EC8E  F0DA         	call	_tolower	;wreg free
 14062  0127D6  5001               	movf	btemp^0,w,c
 14063  0127D8  6EDF               	movwf	indf2,c
 14064                           
 14065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 14066                           ;stkvar	_ct @ sp[(-32)+26]
 14067  0127DA  0EFB               	movlw	251
 14068  0127DC  24E1               	addwf	fsr1l,w,c
 14069  0127DE  6ED9               	movwf	fsr2l,c
 14070  0127E0  0EFF               	movlw	255
 14071  0127E2  20E2               	addwfc	fsr1h,w,c
 14072  0127E4  6EDA               	movwf	fsr2h,c
 14073  0127E6  50DF               	movf	indf2,w,c
 14074  0127E8  B4D8               	btfsc	status,2,c
 14075  0127EA  D029               	goto	l13131
 14076                           
 14077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 14078                           ;stkvar	_ct @ sp[(-32)+26]
 14079  0127EC  0EFC               	movlw	252
 14080  0127EE  24E1               	addwf	fsr1l,w,c
 14081  0127F0  6ED9               	movwf	fsr2l,c
 14082  0127F2  0EFF               	movlw	255
 14083  0127F4  20E2               	addwfc	fsr1h,w,c
 14084  0127F6  6EDA               	movwf	fsr2h,c
 14085                           
 14086                           ;stkvar	_fmt @ sp[(-32)+-4]
 14087  0127F8  0EDC               	movlw	-36
 14088  0127FA  006F FF8F FFE9     	movff	plusw1,fsr0l
 14089  012800  0EDD               	movlw	-35
 14090  012802  006F FF8F FFEA     	movff	plusw1,fsr0h
 14091  012808  006F FFB8  F00B    	movff	postinc0,btemp+10
 14092  01280E  006F FFB4  F00C    	movff	postdec0,btemp+11
 14093  012814  0E02               	movlw	2
 14094  012816  260B               	addwf	(btemp+10)^0,f,c
 14095  012818  0E00               	movlw	0
 14096  01281A  220C               	addwfc	(btemp+11)^0,f,c
 14097  01281C  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 14098  012822  0060  F033  FFF7   	movff	btemp+11,tblptrh
 14099  012828                     	if	0	;tblptru may be non-zero
 14100  012828                     	endif
 14101  012828                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14102  012828  0E00               	movlw	low (__mediumconst shr (0+16))
 14103  01282A  6EF8               	movwf	tblptru,c
 14104  01282C                     	endif
 14105  01282C  0008               	tblrd		*
 14106  01282E  50F5               	movf	tablat,w,c
 14107  012830  6EE6               	movwf	postinc1,c
 14108  012832  0E00               	movlw	0
 14109  012834  6EE6               	movwf	postinc1,c
 14110  012836  EC8E  F0DA         	call	_tolower	;wreg free
 14111  01283A  5001               	movf	btemp^0,w,c
 14112  01283C  6EDF               	movwf	indf2,c
 14113  01283E                     l13131:
 14114                           
 14115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 14116                           ;stkvar	_fmt @ sp[(-32)+-4]
 14117  01283E  0EDC               	movlw	-36
 14118  012840  006F FF8F FFD9     	movff	plusw1,fsr2l
 14119  012846  0EDD               	movlw	-35
 14120  012848  006F FF8F FFDA     	movff	plusw1,fsr2h
 14121  01284E  006F FF7B FFF6     	movff	postinc2,tblptrl
 14122  012854  006F FF77 FFF7     	movff	postdec2,tblptrh
 14123  01285A                     	if	0	;tblptru may be non-zero
 14124  01285A                     	endif
 14125  01285A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14126  01285A  0E00               	movlw	low (__mediumconst shr (0+16))
 14127  01285C  6EF8               	movwf	tblptru,c
 14128  01285E                     	endif
 14129  01285E  0008               	tblrd		*
 14130  012860  50F5               	movf	tablat,w,c
 14131  012862  0A63               	xorlw	99
 14132  012864  A4D8               	btfss	status,2,c
 14133  012866  D037               	goto	l13141
 14134                           
 14135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 14136                           ;stkvar	_fmt @ sp[(-32)+-4]
 14137  012868  0EDC               	movlw	-36
 14138  01286A  006F FF8F FFD9     	movff	plusw1,fsr2l
 14139  012870  0EDD               	movlw	-35
 14140  012872  006F FF8F FFDA     	movff	plusw1,fsr2h
 14141  012878  2ADE               	incf	postinc2,f,c
 14142  01287A  0E00               	movlw	0
 14143  01287C  22DD               	addwfc	postdec2,f,c
 14144                           
 14145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 14146                           ;stkvar	_ap @ sp[(-32)+-6]
 14147  01287E  0EDA               	movlw	-38
 14148  012880  006F FF8F FFD9     	movff	plusw1,fsr2l
 14149  012886  0EDB               	movlw	-37
 14150  012888  006F FF8F FFDA     	movff	plusw1,fsr2h
 14151  01288E  0E02               	movlw	2
 14152  012890  5EDE               	subwf	postinc2,f,c
 14153  012892  0E00               	movlw	0
 14154  012894  5ADD               	subwfb	postdec2,f,c
 14155  012896  006F FF78  F00B    	movff	postinc2,btemp+10
 14156  01289C  006F FF74  F00C    	movff	postdec2,btemp+11
 14157  0128A2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14158  0128A8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14159  0128AE  50DF               	movf	indf2,w,c
 14160  0128B0  6E0C               	movwf	(btemp+11)^0,c
 14161                           
 14162                           ;stkvar	_c @ sp[(-32)+31]
 14163  0128B2  0EFF               	movlw	-1
 14164  0128B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 14165                           
 14166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 14167                           ;stkvar	_c @ sp[(-32)+31]
 14168  0128BA  0EFF               	movlw	-1
 14169  0128BC  50E3               	movf	plusw1,w,c
 14170  0128BE  6EE6               	movwf	postinc1,c
 14171                           
 14172                           ;stkvar	_fp @ sp[(-33)+-2]
 14173  0128C0  0EDD               	movlw	-35
 14174  0128C2  006F FF8F FFE6     	movff	plusw1,postinc1
 14175  0128C8  006F FF8F FFE6     	movff	plusw1,postinc1
 14176  0128CE  EC08  F0DA         	call	_ctoa	;wreg free
 14177  0128D2  EFE4  F099         	goto	l2485
 14178  0128D6                     l13141:
 14179                           
 14180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 14181                           ;stkvar	_fmt @ sp[(-32)+-4]
 14182  0128D6  0EDC               	movlw	-36
 14183  0128D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14184  0128DE  0EDD               	movlw	-35
 14185  0128E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14186  0128E6  006F FF7B FFF6     	movff	postinc2,tblptrl
 14187  0128EC  006F FF77 FFF7     	movff	postdec2,tblptrh
 14188  0128F2                     	if	0	;tblptru may be non-zero
 14189  0128F2                     	endif
 14190  0128F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14191  0128F2  0E00               	movlw	low (__mediumconst shr (0+16))
 14192  0128F4  6EF8               	movwf	tblptru,c
 14193  0128F6                     	endif
 14194  0128F6  0008               	tblrd		*
 14195  0128F8  50F5               	movf	tablat,w,c
 14196  0128FA  0A64               	xorlw	100
 14197  0128FC  B4D8               	btfsc	status,2,c
 14198  0128FE  D015               	goto	u12580
 14199                           
 14200                           ;stkvar	_fmt @ sp[(-32)+-4]
 14201  012900  0EDC               	movlw	-36
 14202  012902  006F FF8F FFD9     	movff	plusw1,fsr2l
 14203  012908  0EDD               	movlw	-35
 14204  01290A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14205  012910  006F FF7B FFF6     	movff	postinc2,tblptrl
 14206  012916  006F FF77 FFF7     	movff	postdec2,tblptrh
 14207  01291C                     	if	0	;tblptru may be non-zero
 14208  01291C                     	endif
 14209  01291C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14210  01291C  0E00               	movlw	low (__mediumconst shr (0+16))
 14211  01291E  6EF8               	movwf	tblptru,c
 14212  012920                     	endif
 14213  012920  0008               	tblrd		*
 14214  012922  50F5               	movf	tablat,w,c
 14215  012924  0A69               	xorlw	105
 14216  012926  A4D8               	btfss	status,2,c
 14217  012928  D076               	goto	l13153
 14218  01292A                     u12580:
 14219                           
 14220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 14221                           ;stkvar	_fmt @ sp[(-32)+-4]
 14222  01292A  0EDC               	movlw	-36
 14223  01292C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14224  012932  0EDD               	movlw	-35
 14225  012934  006F FF8F FFDA     	movff	plusw1,fsr2h
 14226  01293A  2ADE               	incf	postinc2,f,c
 14227  01293C  0E00               	movlw	0
 14228  01293E  22DD               	addwfc	postdec2,f,c
 14229                           
 14230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 14231                           ;stkvar	_ap @ sp[(-32)+-6]
 14232  012940  0EDA               	movlw	-38
 14233  012942  006F FF8F FFD9     	movff	plusw1,fsr2l
 14234  012948  0EDB               	movlw	-37
 14235  01294A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14236  012950  0E02               	movlw	2
 14237  012952  5EDE               	subwf	postinc2,f,c
 14238  012954  0E00               	movlw	0
 14239  012956  5ADD               	subwfb	postdec2,f,c
 14240  012958  006F FF78  F00B    	movff	postinc2,btemp+10
 14241  01295E  006F FF74  F00C    	movff	postdec2,btemp+11
 14242  012964  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14243  01296A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14244  012970  006F FF78  F00B    	movff	postinc2,btemp+10
 14245  012976  006F FF74  F00C    	movff	postdec2,btemp+11
 14246                           
 14247                           ;stkvar	_ll @ sp[(-32)+14]
 14248  01297C  0EEE               	movlw	-18
 14249  01297E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14250  012984  0EEF               	movlw	-17
 14251  012986  0060  F033  FFE3   	movff	btemp+11,plusw1
 14252  01298C  6A01               	clrf	btemp^0,c
 14253  01298E  BEE3               	btfsc	plusw1,7,c
 14254  012990  6801               	setf	btemp^0,c
 14255  012992  0EF0               	movlw	-16
 14256  012994  0060  F007  FFE3   	movff	btemp,plusw1
 14257  01299A  0EF1               	movlw	-15
 14258  01299C  0060  F007  FFE3   	movff	btemp,plusw1
 14259  0129A2  0EF2               	movlw	-14
 14260  0129A4  0060  F007  FFE3   	movff	btemp,plusw1
 14261  0129AA  0EF3               	movlw	-13
 14262  0129AC  0060  F007  FFE3   	movff	btemp,plusw1
 14263  0129B2  0EF4               	movlw	-12
 14264  0129B4  0060  F007  FFE3   	movff	btemp,plusw1
 14265  0129BA  0EF5               	movlw	-11
 14266  0129BC  0060  F007  FFE3   	movff	btemp,plusw1
 14267  0129C2                     l13149:
 14268                           
 14269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 14270                           ;stkvar	_ll @ sp[(-32)+14]
 14271  0129C2  50E1               	movf	fsr1l,w,c
 14272  0129C4  0FEE               	addlw	-18
 14273  0129C6  6ED9               	movwf	fsr2l,c
 14274  0129C8  50E2               	movf	fsr1h,w,c
 14275  0129CA  6EDA               	movwf	fsr2h,c
 14276  0129CC  0EFF               	movlw	255
 14277  0129CE  22DA               	addwfc	fsr2h,f,c
 14278  0129D0  006F FF7B FFE6     	movff	postinc2,postinc1
 14279  0129D6  006F FF7B FFE6     	movff	postinc2,postinc1
 14280  0129DC  006F FF7B FFE6     	movff	postinc2,postinc1
 14281  0129E2  006F FF7B FFE6     	movff	postinc2,postinc1
 14282  0129E8  006F FF7B FFE6     	movff	postinc2,postinc1
 14283  0129EE  006F FF7B FFE6     	movff	postinc2,postinc1
 14284  0129F4  006F FF7B FFE6     	movff	postinc2,postinc1
 14285  0129FA  006F FF7B FFE6     	movff	postinc2,postinc1
 14286                           
 14287                           ;stkvar	_fp @ sp[(-40)+-2]
 14288  012A00  0ED6               	movlw	-42
 14289  012A02  006F FF8F FFE6     	movff	plusw1,postinc1
 14290  012A08  006F FF8F FFE6     	movff	plusw1,postinc1
 14291  012A0E  EC2E  F0AC         	call	_dtoa	;wreg free
 14292  012A12  EFE4  F099         	goto	l2485
 14293  012A16                     l13153:
 14294                           
 14295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 14296  012A16  0E02               	movlw	2
 14297  012A18  6EE6               	movwf	postinc1,c
 14298  012A1A  0E00               	movlw	0
 14299  012A1C  6EE6               	movwf	postinc1,c
 14300  012A1E  0EE9               	movlw	low STR_87
 14301  012A20  6EE6               	movwf	postinc1,c
 14302  012A22  0EFF               	movlw	high STR_87
 14303  012A24  6EE6               	movwf	postinc1,c
 14304                           
 14305                           ;stkvar	_fmt @ sp[(-36)+-4]
 14306  012A26  0ED8               	movlw	-40
 14307  012A28  006F FF8F FFD9     	movff	plusw1,fsr2l
 14308  012A2E  0ED9               	movlw	-39
 14309  012A30  006F FF8F FFDA     	movff	plusw1,fsr2h
 14310  012A36  006F FF78  F00B    	movff	postinc2,btemp+10
 14311  012A3C  006F FF74  F00C    	movff	postdec2,btemp+11
 14312  012A42  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14313  012A48  0060  F033  FFE6   	movff	btemp+11,postinc1
 14314  012A4E  EC16  F0C2         	call	_strncmp	;wreg free
 14315  012A52  5001               	movf	btemp^0,w,c
 14316  012A54  1002               	iorwf	(btemp+1)^0,w,c
 14317  012A56  B4D8               	btfsc	status,2,c
 14318  012A58  D022               	goto	u12600
 14319  012A5A  0E02               	movlw	2
 14320  012A5C  6EE6               	movwf	postinc1,c
 14321  012A5E  0E00               	movlw	0
 14322  012A60  6EE6               	movwf	postinc1,c
 14323  012A62  0EEF               	movlw	low STR_91
 14324  012A64  6EE6               	movwf	postinc1,c
 14325  012A66  0EFF               	movlw	high STR_91
 14326  012A68  6EE6               	movwf	postinc1,c
 14327                           
 14328                           ;stkvar	_fmt @ sp[(-36)+-4]
 14329  012A6A  0ED8               	movlw	-40
 14330  012A6C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14331  012A72  0ED9               	movlw	-39
 14332  012A74  006F FF8F FFDA     	movff	plusw1,fsr2h
 14333  012A7A  006F FF78  F00B    	movff	postinc2,btemp+10
 14334  012A80  006F FF74  F00C    	movff	postdec2,btemp+11
 14335  012A86  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14336  012A8C  0060  F033  FFE6   	movff	btemp+11,postinc1
 14337  012A92  EC16  F0C2         	call	_strncmp	;wreg free
 14338  012A96  5001               	movf	btemp^0,w,c
 14339  012A98  1002               	iorwf	(btemp+1)^0,w,c
 14340  012A9A  A4D8               	btfss	status,2,c
 14341  012A9C  D069               	goto	l13165
 14342  012A9E                     u12600:
 14343                           
 14344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 14345                           ;stkvar	_fmt @ sp[(-32)+-4]
 14346  012A9E  0EDC               	movlw	-36
 14347  012AA0  006F FF8F FFD9     	movff	plusw1,fsr2l
 14348  012AA6  0EDD               	movlw	-35
 14349  012AA8  006F FF8F FFDA     	movff	plusw1,fsr2h
 14350  012AAE  0E02               	movlw	2
 14351  012AB0  26DE               	addwf	postinc2,f,c
 14352  012AB2  0E00               	movlw	0
 14353  012AB4  22DD               	addwfc	postdec2,f,c
 14354                           
 14355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 14356                           ;stkvar	_ap @ sp[(-32)+-6]
 14357  012AB6  0EDA               	movlw	-38
 14358  012AB8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14359  012ABE  0EDB               	movlw	-37
 14360  012AC0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14361  012AC6  0E04               	movlw	4
 14362  012AC8  5EDE               	subwf	postinc2,f,c
 14363  012ACA  0E00               	movlw	0
 14364  012ACC  5ADD               	subwfb	postdec2,f,c
 14365  012ACE  006F FF78  F00B    	movff	postinc2,btemp+10
 14366  012AD4  006F FF74  F00C    	movff	postdec2,btemp+11
 14367  012ADA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14368  012AE0  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14369  012AE6  006F FF78  F009    	movff	postinc2,btemp+8
 14370  012AEC  006F FF78  F00A    	movff	postinc2,btemp+9
 14371  012AF2  006F FF78  F00B    	movff	postinc2,btemp+10
 14372  012AF8  006F FF78  F00C    	movff	postinc2,btemp+11
 14373  012AFE  0060  F024  F011   	movff	btemp+8,btemp+16
 14374  012B04  0060  F028  F012   	movff	btemp+9,btemp+17
 14375  012B0A  0060  F02C  F013   	movff	btemp+10,btemp+18
 14376  012B10  0060  F030  F014   	movff	btemp+11,btemp+19
 14377  012B16  6A15               	clrf	(btemp+20)^0,c
 14378  012B18  BE14               	btfsc	(btemp+19)^0,7,c
 14379  012B1A  6815               	setf	(btemp+20)^0,c
 14380  012B1C  0060  F054  F016   	movff	btemp+20,btemp+21
 14381  012B22  0060  F054  F017   	movff	btemp+20,btemp+22
 14382  012B28  0060  F054  F018   	movff	btemp+20,btemp+23
 14383                           
 14384                           ;stkvar	_ll @ sp[(-32)+14]
 14385  012B2E  0EEE               	movlw	-18
 14386  012B30  0060  F047  FFE3   	movff	btemp+16,plusw1
 14387  012B36  0EEF               	movlw	-17
 14388  012B38  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14389  012B3E  0EF0               	movlw	-16
 14390  012B40  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14391  012B46  0EF1               	movlw	-15
 14392  012B48  0060  F053  FFE3   	movff	btemp+19,plusw1
 14393  012B4E  0EF2               	movlw	-14
 14394  012B50  0060  F057  FFE3   	movff	btemp+20,plusw1
 14395  012B56  0EF3               	movlw	-13
 14396  012B58  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14397  012B5E  0EF4               	movlw	-12
 14398  012B60  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14399  012B66  0EF5               	movlw	-11
 14400  012B68  0060  F063  FFE3   	movff	btemp+23,plusw1
 14401  012B6E  D729               	goto	l13149
 14402  012B70                     l13165:
 14403                           
 14404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 14405                           ;stkvar	_ct @ sp[(-32)+26]
 14406  012B70  0EFA               	movlw	-6
 14407  012B72  006F FF8C  F001    	movff	plusw1,btemp
 14408  012B78  0E66               	movlw	102
 14409  012B7A  1801               	xorwf	btemp^0,w,c
 14410  012B7C  A4D8               	btfss	status,2,c
 14411  012B7E  D06E               	goto	l13177
 14412                           
 14413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 14414                           ;stkvar	_fmt @ sp[(-32)+-4]
 14415  012B80  0EDC               	movlw	-36
 14416  012B82  006F FF8F FFD9     	movff	plusw1,fsr2l
 14417  012B88  0EDD               	movlw	-35
 14418  012B8A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14419  012B90  006F FF7B FFF6     	movff	postinc2,tblptrl
 14420  012B96  006F FF77 FFF7     	movff	postdec2,tblptrh
 14421  012B9C                     	if	0	;tblptru may be non-zero
 14422  012B9C                     	endif
 14423  012B9C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14424  012B9C  0E00               	movlw	low (__mediumconst shr (0+16))
 14425  012B9E  6EF8               	movwf	tblptru,c
 14426  012BA0                     	endif
 14427                           
 14428                           ;stkvar	_c @ sp[(-32)+31]
 14429  012BA0  0008               	tblrd		*
 14430  012BA2  0EFF               	movlw	-1
 14431  012BA4  006F FFD7 FFE3     	movff	tablat,plusw1
 14432                           
 14433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 14434                           ;stkvar	_fmt @ sp[(-32)+-4]
 14435  012BAA  0EDC               	movlw	-36
 14436  012BAC  006F FF8F FFD9     	movff	plusw1,fsr2l
 14437  012BB2  0EDD               	movlw	-35
 14438  012BB4  006F FF8F FFDA     	movff	plusw1,fsr2h
 14439  012BBA  2ADE               	incf	postinc2,f,c
 14440  012BBC  0E00               	movlw	0
 14441  012BBE  22DD               	addwfc	postdec2,f,c
 14442                           
 14443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 14444                           ;stkvar	_ap @ sp[(-32)+-6]
 14445  012BC0  0EDA               	movlw	-38
 14446  012BC2  006F FF8F FFD9     	movff	plusw1,fsr2l
 14447  012BC8  0EDB               	movlw	-37
 14448  012BCA  006F FF8F FFDA     	movff	plusw1,fsr2h
 14449  012BD0  0E04               	movlw	4
 14450  012BD2  5EDE               	subwf	postinc2,f,c
 14451  012BD4  0E00               	movlw	0
 14452  012BD6  5ADD               	subwfb	postdec2,f,c
 14453  012BD8  006F FF78  F00B    	movff	postinc2,btemp+10
 14454  012BDE  006F FF74  F00C    	movff	postdec2,btemp+11
 14455  012BE4  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14456  012BEA  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14457  012BF0  006F FF78  F009    	movff	postinc2,btemp+8
 14458  012BF6  006F FF78  F00A    	movff	postinc2,btemp+9
 14459  012BFC  006F FF78  F00B    	movff	postinc2,btemp+10
 14460  012C02  006F FF78  F00C    	movff	postinc2,btemp+11
 14461                           
 14462                           ;stkvar	_f @ sp[(-32)+22]
 14463  012C08  0EF6               	movlw	-10
 14464  012C0A  0060  F027  FFE3   	movff	btemp+8,plusw1
 14465  012C10  0EF7               	movlw	-9
 14466  012C12  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14467  012C18  0EF8               	movlw	-8
 14468  012C1A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14469  012C20  0EF9               	movlw	-7
 14470  012C22  0060  F033  FFE3   	movff	btemp+11,plusw1
 14471  012C28                     l13173:
 14472                           
 14473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 14474                           ;stkvar	_c @ sp[(-32)+31]
 14475  012C28  0EFF               	movlw	-1
 14476  012C2A  50E3               	movf	plusw1,w,c
 14477  012C2C  6EE6               	movwf	postinc1,c
 14478                           
 14479                           ;stkvar	_f @ sp[(-33)+22]
 14480  012C2E  0EF5               	movlw	-11
 14481  012C30  006F FF8F FFE6     	movff	plusw1,postinc1
 14482  012C36  006F FF8F FFE6     	movff	plusw1,postinc1
 14483  012C3C  006F FF8F FFE6     	movff	plusw1,postinc1
 14484  012C42  006F FF8F FFE6     	movff	plusw1,postinc1
 14485                           
 14486                           ;stkvar	_fp @ sp[(-37)+-2]
 14487  012C48  0ED9               	movlw	-39
 14488  012C4A  006F FF8F FFE6     	movff	plusw1,postinc1
 14489  012C50  006F FF8F FFE6     	movff	plusw1,postinc1
 14490  012C56  EC00  F080         	call	_efgtoa	;wreg free
 14491  012C5A  D3B6               	goto	l2485
 14492  012C5C                     l13177:
 14493                           
 14494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 14495  012C5C  0E02               	movlw	2
 14496  012C5E  6EE6               	movwf	postinc1,c
 14497  012C60  0E00               	movlw	0
 14498  012C62  6EE6               	movwf	postinc1,c
 14499  012C64  0EEC               	movlw	low STR_96
 14500  012C66  6EE6               	movwf	postinc1,c
 14501  012C68  0EFF               	movlw	high STR_96
 14502  012C6A  6EE6               	movwf	postinc1,c
 14503                           
 14504                           ;stkvar	_ct @ sp[(-36)+26]
 14505  012C6C  0EF6               	movlw	246
 14506  012C6E  24E1               	addwf	fsr1l,w,c
 14507  012C70  6E01               	movwf	btemp^0,c
 14508  012C72  0EFF               	movlw	255
 14509  012C74  20E2               	addwfc	fsr1h,w,c
 14510  012C76  6E02               	movwf	(btemp+1)^0,c
 14511  012C78  0060  F007  FFE6   	movff	btemp,postinc1
 14512  012C7E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14513  012C84  EC16  F0C2         	call	_strncmp	;wreg free
 14514  012C88  5001               	movf	btemp^0,w,c
 14515  012C8A  1002               	iorwf	(btemp+1)^0,w,c
 14516  012C8C  A4D8               	btfss	status,2,c
 14517  012C8E  D096               	goto	l13197
 14518                           
 14519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 14520                           ;stkvar	_fmt @ sp[(-32)+-4]
 14521  012C90  0EDC               	movlw	-36
 14522  012C92  006F FF8F FFD9     	movff	plusw1,fsr2l
 14523  012C98  0EDD               	movlw	-35
 14524  012C9A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14525  012CA0  006F FF78  F00B    	movff	postinc2,btemp+10
 14526  012CA6  006F FF74  F00C    	movff	postdec2,btemp+11
 14527  012CAC  0E01               	movlw	1
 14528  012CAE  260B               	addwf	(btemp+10)^0,f,c
 14529  012CB0  0E00               	movlw	0
 14530  012CB2  220C               	addwfc	(btemp+11)^0,f,c
 14531  012CB4  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 14532  012CBA  0060  F033  FFF7   	movff	btemp+11,tblptrh
 14533  012CC0                     	if	0	;tblptru may be non-zero
 14534  012CC0                     	endif
 14535  012CC0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14536  012CC0  0E00               	movlw	low (__mediumconst shr (0+16))
 14537  012CC2  6EF8               	movwf	tblptru,c
 14538  012CC4                     	endif
 14539                           
 14540                           ;stkvar	_c @ sp[(-32)+31]
 14541  012CC4  0008               	tblrd		*
 14542  012CC6  0EFF               	movlw	-1
 14543  012CC8  006F FFD7 FFE3     	movff	tablat,plusw1
 14544  012CCE  0EBF               	movlw	191
 14545  012CD0  6E0B               	movwf	(btemp+10)^0,c
 14546  012CD2  0EFF               	movlw	255
 14547  012CD4  6E0C               	movwf	(btemp+11)^0,c
 14548                           
 14549                           ;stkvar	_fmt @ sp[(-32)+-4]
 14550  012CD6  0EDC               	movlw	-36
 14551  012CD8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14552  012CDE  0EDD               	movlw	-35
 14553  012CE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14554  012CE6  006F FF7B FFF6     	movff	postinc2,tblptrl
 14555  012CEC  006F FF77 FFF7     	movff	postdec2,tblptrh
 14556  012CF2                     	if	0	;tblptru may be non-zero
 14557  012CF2                     	endif
 14558  012CF2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14559  012CF2  0E00               	movlw	low (__mediumconst shr (0+16))
 14560  012CF4  6EF8               	movwf	tblptru,c
 14561  012CF6                     	endif
 14562  012CF6  0008               	tblrd		*
 14563  012CF8  50F5               	movf	tablat,w,c
 14564  012CFA  6E09               	movwf	(btemp+8)^0,c
 14565  012CFC  6A0A               	clrf	(btemp+9)^0,c
 14566  012CFE  500B               	movf	(btemp+10)^0,w,c
 14567  012D00  2609               	addwf	(btemp+8)^0,f,c
 14568  012D02  500C               	movf	(btemp+11)^0,w,c
 14569  012D04  220A               	addwfc	(btemp+9)^0,f,c
 14570  012D06  500A               	movf	(btemp+9)^0,w,c
 14571  012D08  E106               	bnz	u12630
 14572  012D0A  0E1A               	movlw	26
 14573  012D0C  5C09               	subwf	(btemp+8)^0,w,c
 14574  012D0E  B0D8               	btfsc	status,0,c
 14575  012D10  D002               	goto	u12630
 14576  012D12  0E01               	movlw	1
 14577  012D14  D001               	goto	u12640
 14578  012D16                     u12630:
 14579  012D16  0E00               	movlw	0
 14580  012D18                     u12640:
 14581  012D18  6E0B               	movwf	(btemp+10)^0,c
 14582  012D1A  6A0C               	clrf	(btemp+11)^0,c
 14583                           
 14584                           ;stkvar	_vfpfcnvrt$5922 @ sp[(-32)+2]
 14585  012D1C  0EE2               	movlw	-30
 14586  012D1E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14587  012D24  0EE3               	movlw	-29
 14588  012D26  0060  F033  FFE3   	movff	btemp+11,plusw1
 14589                           
 14590                           ;stkvar	_vfpfcnvrt$5922 @ sp[(-32)+2]
 14591  012D2C  0EE2               	movlw	-30
 14592  012D2E  006F FF8C  F001    	movff	plusw1,btemp
 14593  012D34  0EE3               	movlw	-29
 14594  012D36  50E3               	movf	plusw1,w,c
 14595  012D38  1001               	iorwf	btemp^0,w,c
 14596                           
 14597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 14598                           ;stkvar	_ap @ sp[(-32)+-6]
 14599                           
 14600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 14601                           
 14602                           ;stkvar	_f @ sp[(-32)+22]
 14603                           
 14604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 14605                           ;stkvar	_ap @ sp[(-32)+-6]
 14606  012D3A  0EDA               	movlw	-38
 14607  012D3C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14608  012D42  0EDB               	movlw	-37
 14609  012D44  006F FF8F FFDA     	movff	plusw1,fsr2h
 14610  012D4A  0E04               	movlw	4
 14611  012D4C  5EDE               	subwf	postinc2,f,c
 14612  012D4E  0E00               	movlw	0
 14613  012D50  5ADD               	subwfb	postdec2,f,c
 14614  012D52  006F FF78  F00B    	movff	postinc2,btemp+10
 14615  012D58  006F FF74  F00C    	movff	postdec2,btemp+11
 14616  012D5E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14617  012D64  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14618  012D6A  006F FF78  F009    	movff	postinc2,btemp+8
 14619  012D70  006F FF78  F00A    	movff	postinc2,btemp+9
 14620  012D76  006F FF78  F00B    	movff	postinc2,btemp+10
 14621  012D7C  006F FF78  F00C    	movff	postinc2,btemp+11
 14622                           
 14623                           ;stkvar	_f @ sp[(-32)+22]
 14624  012D82  0EF6               	movlw	-10
 14625  012D84  0060  F027  FFE3   	movff	btemp+8,plusw1
 14626  012D8A  0EF7               	movlw	-9
 14627  012D8C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14628  012D92  0EF8               	movlw	-8
 14629  012D94  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14630  012D9A  0EF9               	movlw	-7
 14631  012D9C  0060  F033  FFE3   	movff	btemp+11,plusw1
 14632                           
 14633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 14634                           ;stkvar	_fmt @ sp[(-32)+-4]
 14635  012DA2  0EDC               	movlw	-36
 14636  012DA4  006F FF8F FFD9     	movff	plusw1,fsr2l
 14637  012DAA  0EDD               	movlw	-35
 14638  012DAC  006F FF8F FFDA     	movff	plusw1,fsr2h
 14639  012DB2  0E02               	movlw	2
 14640  012DB4  26DE               	addwf	postinc2,f,c
 14641  012DB6  0E00               	movlw	0
 14642  012DB8  22DD               	addwfc	postdec2,f,c
 14643  012DBA  D736               	goto	l13173
 14644  012DBC                     l13197:
 14645                           
 14646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 14647                           ;stkvar	_fmt @ sp[(-32)+-4]
 14648  012DBC  0EDC               	movlw	-36
 14649  012DBE  006F FF8F FFD9     	movff	plusw1,fsr2l
 14650  012DC4  0EDD               	movlw	-35
 14651  012DC6  006F FF8F FFDA     	movff	plusw1,fsr2h
 14652  012DCC  006F FF7B FFF6     	movff	postinc2,tblptrl
 14653  012DD2  006F FF77 FFF7     	movff	postdec2,tblptrh
 14654  012DD8                     	if	0	;tblptru may be non-zero
 14655  012DD8                     	endif
 14656  012DD8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14657  012DD8  0E00               	movlw	low (__mediumconst shr (0+16))
 14658  012DDA  6EF8               	movwf	tblptru,c
 14659  012DDC                     	endif
 14660  012DDC  0008               	tblrd		*
 14661  012DDE  50F5               	movf	tablat,w,c
 14662  012DE0  0A73               	xorlw	115
 14663  012DE2  A4D8               	btfss	status,2,c
 14664  012DE4  D042               	goto	l13207
 14665                           
 14666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 14667                           ;stkvar	_fmt @ sp[(-32)+-4]
 14668  012DE6  0EDC               	movlw	-36
 14669  012DE8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14670  012DEE  0EDD               	movlw	-35
 14671  012DF0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14672  012DF6  2ADE               	incf	postinc2,f,c
 14673  012DF8  0E00               	movlw	0
 14674  012DFA  22DD               	addwfc	postdec2,f,c
 14675                           
 14676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 14677                           ;stkvar	_ap @ sp[(-32)+-6]
 14678  012DFC  0EDA               	movlw	-38
 14679  012DFE  006F FF8F FFD9     	movff	plusw1,fsr2l
 14680  012E04  0EDB               	movlw	-37
 14681  012E06  006F FF8F FFDA     	movff	plusw1,fsr2h
 14682  012E0C  0E02               	movlw	2
 14683  012E0E  5EDE               	subwf	postinc2,f,c
 14684  012E10  0E00               	movlw	0
 14685  012E12  5ADD               	subwfb	postdec2,f,c
 14686  012E14  006F FF78  F00B    	movff	postinc2,btemp+10
 14687  012E1A  006F FF74  F00C    	movff	postdec2,btemp+11
 14688  012E20  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14689  012E26  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14690  012E2C  006F FF78  F00B    	movff	postinc2,btemp+10
 14691  012E32  006F FF74  F00C    	movff	postdec2,btemp+11
 14692                           
 14693                           ;stkvar	_cp @ sp[(-32)+29]
 14694  012E38  0EFE               	movlw	-2
 14695  012E3A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14696  012E40  0EFD               	movlw	-3
 14697  012E42  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14698                           
 14699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 14700                           ;stkvar	_cp @ sp[(-32)+29]
 14701  012E48  0EFD               	movlw	-3
 14702  012E4A  006F FF8F FFE6     	movff	plusw1,postinc1
 14703  012E50  006F FF8F FFE6     	movff	plusw1,postinc1
 14704                           
 14705                           ;stkvar	_fp @ sp[(-34)+-2]
 14706  012E56  0EDC               	movlw	-36
 14707  012E58  006F FF8F FFE6     	movff	plusw1,postinc1
 14708  012E5E  006F FF8F FFE6     	movff	plusw1,postinc1
 14709  012E64  ECFA  F0BB         	call	_stoa	;wreg free
 14710  012E68  D2AF               	goto	l2485
 14711  012E6A                     l13207:
 14712                           
 14713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 14714                           ;stkvar	_fmt @ sp[(-32)+-4]
 14715  012E6A  0EDC               	movlw	-36
 14716  012E6C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14717  012E72  0EDD               	movlw	-35
 14718  012E74  006F FF8F FFDA     	movff	plusw1,fsr2h
 14719  012E7A  006F FF7B FFF6     	movff	postinc2,tblptrl
 14720  012E80  006F FF77 FFF7     	movff	postdec2,tblptrh
 14721  012E86                     	if	0	;tblptru may be non-zero
 14722  012E86                     	endif
 14723  012E86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14724  012E86  0E00               	movlw	low (__mediumconst shr (0+16))
 14725  012E88  6EF8               	movwf	tblptru,c
 14726  012E8A                     	endif
 14727  012E8A  0008               	tblrd		*
 14728  012E8C  50F5               	movf	tablat,w,c
 14729  012E8E  0A75               	xorlw	117
 14730  012E90  A4D8               	btfss	status,2,c
 14731  012E92  D07C               	goto	l13217
 14732                           
 14733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 14734                           ;stkvar	_fmt @ sp[(-32)+-4]
 14735  012E94  0EDC               	movlw	-36
 14736  012E96  006F FF8F FFD9     	movff	plusw1,fsr2l
 14737  012E9C  0EDD               	movlw	-35
 14738  012E9E  006F FF8F FFDA     	movff	plusw1,fsr2h
 14739  012EA4  2ADE               	incf	postinc2,f,c
 14740  012EA6  0E00               	movlw	0
 14741  012EA8  22DD               	addwfc	postdec2,f,c
 14742                           
 14743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 14744                           ;stkvar	_ap @ sp[(-32)+-6]
 14745  012EAA  0EDA               	movlw	-38
 14746  012EAC  006F FF8F FFD9     	movff	plusw1,fsr2l
 14747  012EB2  0EDB               	movlw	-37
 14748  012EB4  006F FF8F FFDA     	movff	plusw1,fsr2h
 14749  012EBA  0E02               	movlw	2
 14750  012EBC  5EDE               	subwf	postinc2,f,c
 14751  012EBE  0E00               	movlw	0
 14752  012EC0  5ADD               	subwfb	postdec2,f,c
 14753  012EC2  006F FF78  F00B    	movff	postinc2,btemp+10
 14754  012EC8  006F FF74  F00C    	movff	postdec2,btemp+11
 14755  012ECE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14756  012ED4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14757  012EDA  006F FF78  F00B    	movff	postinc2,btemp+10
 14758  012EE0  006F FF74  F00C    	movff	postdec2,btemp+11
 14759  012EE6  500B               	movf	(btemp+10)^0,w,c
 14760  012EE8  6E11               	movwf	(btemp+16)^0,c
 14761  012EEA  500C               	movf	(btemp+11)^0,w,c
 14762  012EEC  6E12               	movwf	(btemp+17)^0,c
 14763  012EEE  6A13               	clrf	(btemp+18)^0,c
 14764  012EF0  6A14               	clrf	(btemp+19)^0,c
 14765  012EF2  6A15               	clrf	(btemp+20)^0,c
 14766  012EF4  6A16               	clrf	(btemp+21)^0,c
 14767  012EF6  6A17               	clrf	(btemp+22)^0,c
 14768  012EF8  6A18               	clrf	(btemp+23)^0,c
 14769                           
 14770                           ;stkvar	_llu @ sp[(-32)+6]
 14771  012EFA  0EE6               	movlw	-26
 14772  012EFC  0060  F047  FFE3   	movff	btemp+16,plusw1
 14773  012F02  0EE7               	movlw	-25
 14774  012F04  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14775  012F0A  0EE8               	movlw	-24
 14776  012F0C  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14777  012F12  0EE9               	movlw	-23
 14778  012F14  0060  F053  FFE3   	movff	btemp+19,plusw1
 14779  012F1A  0EEA               	movlw	-22
 14780  012F1C  0060  F057  FFE3   	movff	btemp+20,plusw1
 14781  012F22  0EEB               	movlw	-21
 14782  012F24  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14783  012F2A  0EEC               	movlw	-20
 14784  012F2C  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14785  012F32  0EED               	movlw	-19
 14786  012F34  0060  F063  FFE3   	movff	btemp+23,plusw1
 14787                           
 14788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 14789                           ;stkvar	_llu @ sp[(-32)+6]
 14790  012F3A  50E1               	movf	fsr1l,w,c
 14791  012F3C  0FE6               	addlw	-26
 14792  012F3E  6ED9               	movwf	fsr2l,c
 14793  012F40  50E2               	movf	fsr1h,w,c
 14794  012F42  6EDA               	movwf	fsr2h,c
 14795  012F44  0EFF               	movlw	255
 14796  012F46  22DA               	addwfc	fsr2h,f,c
 14797  012F48  006F FF7B FFE6     	movff	postinc2,postinc1
 14798  012F4E  006F FF7B FFE6     	movff	postinc2,postinc1
 14799  012F54  006F FF7B FFE6     	movff	postinc2,postinc1
 14800  012F5A  006F FF7B FFE6     	movff	postinc2,postinc1
 14801  012F60  006F FF7B FFE6     	movff	postinc2,postinc1
 14802  012F66  006F FF7B FFE6     	movff	postinc2,postinc1
 14803  012F6C  006F FF7B FFE6     	movff	postinc2,postinc1
 14804  012F72  006F FF7B FFE6     	movff	postinc2,postinc1
 14805                           
 14806                           ;stkvar	_fp @ sp[(-40)+-2]
 14807  012F78  0ED6               	movlw	-42
 14808  012F7A  006F FF8F FFE6     	movff	plusw1,postinc1
 14809  012F80  006F FF8F FFE6     	movff	plusw1,postinc1
 14810  012F86  ECE2  F0B5         	call	_utoa	;wreg free
 14811  012F8A  D21E               	goto	l2485
 14812  012F8C                     l13217:
 14813                           
 14814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 14815  012F8C  0E02               	movlw	2
 14816  012F8E  6EE6               	movwf	postinc1,c
 14817  012F90  0E00               	movlw	0
 14818  012F92  6EE6               	movwf	postinc1,c
 14819  012F94  0EF2               	movlw	low STR_101
 14820  012F96  6EE6               	movwf	postinc1,c
 14821  012F98  0EFF               	movlw	high STR_101
 14822  012F9A  6EE6               	movwf	postinc1,c
 14823                           
 14824                           ;stkvar	_fmt @ sp[(-36)+-4]
 14825  012F9C  0ED8               	movlw	-40
 14826  012F9E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14827  012FA4  0ED9               	movlw	-39
 14828  012FA6  006F FF8F FFDA     	movff	plusw1,fsr2h
 14829  012FAC  006F FF78  F00B    	movff	postinc2,btemp+10
 14830  012FB2  006F FF74  F00C    	movff	postdec2,btemp+11
 14831  012FB8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14832  012FBE  0060  F033  FFE6   	movff	btemp+11,postinc1
 14833  012FC4  EC16  F0C2         	call	_strncmp	;wreg free
 14834  012FC8  5001               	movf	btemp^0,w,c
 14835  012FCA  1002               	iorwf	(btemp+1)^0,w,c
 14836  012FCC  A4D8               	btfss	status,2,c
 14837  012FCE  D039               	goto	l13227
 14838                           
 14839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 14840                           ;stkvar	_fmt @ sp[(-32)+-4]
 14841  012FD0  0EDC               	movlw	-36
 14842  012FD2  006F FF8F FFD9     	movff	plusw1,fsr2l
 14843  012FD8  0EDD               	movlw	-35
 14844  012FDA  006F FF8F FFDA     	movff	plusw1,fsr2h
 14845  012FE0  0E02               	movlw	2
 14846  012FE2  26DE               	addwf	postinc2,f,c
 14847  012FE4  0E00               	movlw	0
 14848  012FE6  22DD               	addwfc	postdec2,f,c
 14849                           
 14850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 14851                           ;stkvar	_ap @ sp[(-32)+-6]
 14852  012FE8  0EDA               	movlw	-38
 14853  012FEA  006F FF8F FFD9     	movff	plusw1,fsr2l
 14854  012FF0  0EDB               	movlw	-37
 14855  012FF2  006F FF8F FFDA     	movff	plusw1,fsr2h
 14856  012FF8  0E04               	movlw	4
 14857  012FFA  5EDE               	subwf	postinc2,f,c
 14858  012FFC  0E00               	movlw	0
 14859  012FFE  5ADD               	subwfb	postdec2,f,c
 14860  013000  006F FF78  F00B    	movff	postinc2,btemp+10
 14861  013006  006F FF74  F00C    	movff	postdec2,btemp+11
 14862  01300C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14863  013012  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14864  013018  006F FF78  F009    	movff	postinc2,btemp+8
 14865  01301E  006F FF78  F00A    	movff	postinc2,btemp+9
 14866  013024  006F FF78  F00B    	movff	postinc2,btemp+10
 14867  01302A  006F FF78  F00C    	movff	postinc2,btemp+11
 14868  013030  5009               	movf	(btemp+8)^0,w,c
 14869  013032  6E11               	movwf	(btemp+16)^0,c
 14870  013034  500A               	movf	(btemp+9)^0,w,c
 14871  013036  6E12               	movwf	(btemp+17)^0,c
 14872  013038  500B               	movf	(btemp+10)^0,w,c
 14873  01303A  6E13               	movwf	(btemp+18)^0,c
 14874  01303C  500C               	movf	(btemp+11)^0,w,c
 14875  01303E  6E14               	movwf	(btemp+19)^0,c
 14876  013040  D758               	goto	L13
 14877  013042                     l13227:
 14878                           
 14879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 14880                           ;stkvar	_fmt @ sp[(-32)+-4]
 14881  013042  0EDC               	movlw	-36
 14882  013044  006F FF8F FFD9     	movff	plusw1,fsr2l
 14883  01304A  0EDD               	movlw	-35
 14884  01304C  006F FF8F FFDA     	movff	plusw1,fsr2h
 14885  013052  006F FF7B FFF6     	movff	postinc2,tblptrl
 14886  013058  006F FF77 FFF7     	movff	postdec2,tblptrh
 14887  01305E                     	if	0	;tblptru may be non-zero
 14888  01305E                     	endif
 14889  01305E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14890  01305E  0E00               	movlw	low (__mediumconst shr (0+16))
 14891  013060  6EF8               	movwf	tblptru,c
 14892  013062                     	endif
 14893  013062  0008               	tblrd		*
 14894  013064  50F5               	movf	tablat,w,c
 14895  013066  0A78               	xorlw	120
 14896  013068  B4D8               	btfsc	status,2,c
 14897  01306A  D015               	goto	u12700
 14898                           
 14899                           ;stkvar	_fmt @ sp[(-32)+-4]
 14900  01306C  0EDC               	movlw	-36
 14901  01306E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14902  013074  0EDD               	movlw	-35
 14903  013076  006F FF8F FFDA     	movff	plusw1,fsr2h
 14904  01307C  006F FF7B FFF6     	movff	postinc2,tblptrl
 14905  013082  006F FF77 FFF7     	movff	postdec2,tblptrh
 14906  013088                     	if	0	;tblptru may be non-zero
 14907  013088                     	endif
 14908  013088                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14909  013088  0E00               	movlw	low (__mediumconst shr (0+16))
 14910  01308A  6EF8               	movwf	tblptru,c
 14911  01308C                     	endif
 14912  01308C  0008               	tblrd		*
 14913  01308E  50F5               	movf	tablat,w,c
 14914  013090  0A58               	xorlw	88
 14915  013092  A4D8               	btfss	status,2,c
 14916  013094  D094               	goto	l13241
 14917  013096                     u12700:
 14918                           
 14919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 14920                           ;stkvar	_fmt @ sp[(-32)+-4]
 14921  013096  0EDC               	movlw	-36
 14922  013098  006F FF8F FFD9     	movff	plusw1,fsr2l
 14923  01309E  0EDD               	movlw	-35
 14924  0130A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14925  0130A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 14926  0130AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 14927  0130B2                     	if	0	;tblptru may be non-zero
 14928  0130B2                     	endif
 14929  0130B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14930  0130B2  0E00               	movlw	low (__mediumconst shr (0+16))
 14931  0130B4  6EF8               	movwf	tblptru,c
 14932  0130B6                     	endif
 14933                           
 14934                           ;stkvar	_c @ sp[(-32)+31]
 14935  0130B6  0008               	tblrd		*
 14936  0130B8  0EFF               	movlw	-1
 14937  0130BA  006F FFD7 FFE3     	movff	tablat,plusw1
 14938                           
 14939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 14940                           ;stkvar	_fmt @ sp[(-32)+-4]
 14941  0130C0  0EDC               	movlw	-36
 14942  0130C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 14943  0130C8  0EDD               	movlw	-35
 14944  0130CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 14945  0130D0  2ADE               	incf	postinc2,f,c
 14946  0130D2  0E00               	movlw	0
 14947  0130D4  22DD               	addwfc	postdec2,f,c
 14948                           
 14949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 14950                           ;stkvar	_ap @ sp[(-32)+-6]
 14951  0130D6  0EDA               	movlw	-38
 14952  0130D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14953  0130DE  0EDB               	movlw	-37
 14954  0130E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14955  0130E6  0E02               	movlw	2
 14956  0130E8  5EDE               	subwf	postinc2,f,c
 14957  0130EA  0E00               	movlw	0
 14958  0130EC  5ADD               	subwfb	postdec2,f,c
 14959  0130EE  006F FF78  F00B    	movff	postinc2,btemp+10
 14960  0130F4  006F FF74  F00C    	movff	postdec2,btemp+11
 14961  0130FA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14962  013100  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14963  013106  006F FF78  F00B    	movff	postinc2,btemp+10
 14964  01310C  006F FF74  F00C    	movff	postdec2,btemp+11
 14965  013112  500B               	movf	(btemp+10)^0,w,c
 14966  013114  6E11               	movwf	(btemp+16)^0,c
 14967  013116  500C               	movf	(btemp+11)^0,w,c
 14968  013118  6E12               	movwf	(btemp+17)^0,c
 14969  01311A  6A13               	clrf	(btemp+18)^0,c
 14970  01311C  6A14               	clrf	(btemp+19)^0,c
 14971  01311E  6A15               	clrf	(btemp+20)^0,c
 14972  013120  6A16               	clrf	(btemp+21)^0,c
 14973  013122  6A17               	clrf	(btemp+22)^0,c
 14974  013124  6A18               	clrf	(btemp+23)^0,c
 14975                           
 14976                           ;stkvar	_llu @ sp[(-32)+6]
 14977  013126  0EE6               	movlw	-26
 14978  013128  0060  F047  FFE3   	movff	btemp+16,plusw1
 14979  01312E  0EE7               	movlw	-25
 14980  013130  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14981  013136  0EE8               	movlw	-24
 14982  013138  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14983  01313E  0EE9               	movlw	-23
 14984  013140  0060  F053  FFE3   	movff	btemp+19,plusw1
 14985  013146  0EEA               	movlw	-22
 14986  013148  0060  F057  FFE3   	movff	btemp+20,plusw1
 14987  01314E  0EEB               	movlw	-21
 14988  013150  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14989  013156  0EEC               	movlw	-20
 14990  013158  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14991  01315E  0EED               	movlw	-19
 14992  013160  0060  F063  FFE3   	movff	btemp+23,plusw1
 14993                           
 14994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 14995                           ;stkvar	_c @ sp[(-32)+31]
 14996  013166  0EFF               	movlw	-1
 14997  013168  50E3               	movf	plusw1,w,c
 14998  01316A  6EE6               	movwf	postinc1,c
 14999                           
 15000                           ;stkvar	_llu @ sp[(-33)+6]
 15001  01316C  50E1               	movf	fsr1l,w,c
 15002  01316E  0FE5               	addlw	-27
 15003  013170  6ED9               	movwf	fsr2l,c
 15004  013172  50E2               	movf	fsr1h,w,c
 15005  013174  6EDA               	movwf	fsr2h,c
 15006  013176  0EFF               	movlw	255
 15007  013178  22DA               	addwfc	fsr2h,f,c
 15008  01317A  006F FF7B FFE6     	movff	postinc2,postinc1
 15009  013180  006F FF7B FFE6     	movff	postinc2,postinc1
 15010  013186  006F FF7B FFE6     	movff	postinc2,postinc1
 15011  01318C  006F FF7B FFE6     	movff	postinc2,postinc1
 15012  013192  006F FF7B FFE6     	movff	postinc2,postinc1
 15013  013198  006F FF7B FFE6     	movff	postinc2,postinc1
 15014  01319E  006F FF7B FFE6     	movff	postinc2,postinc1
 15015  0131A4  006F FF7B FFE6     	movff	postinc2,postinc1
 15016                           
 15017                           ;stkvar	_fp @ sp[(-41)+-2]
 15018  0131AA  0ED5               	movlw	-43
 15019  0131AC  006F FF8F FFE6     	movff	plusw1,postinc1
 15020  0131B2  006F FF8F FFE6     	movff	plusw1,postinc1
 15021  0131B8  EC94  F0B0         	call	_xtoa	;wreg free
 15022  0131BC  D105               	goto	l2485
 15023  0131BE                     l13241:
 15024                           
 15025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 15026  0131BE  0E02               	movlw	2
 15027  0131C0  6EE6               	movwf	postinc1,c
 15028  0131C2  0E00               	movlw	0
 15029  0131C4  6EE6               	movwf	postinc1,c
 15030  0131C6  0EF5               	movlw	low STR_106
 15031  0131C8  6EE6               	movwf	postinc1,c
 15032  0131CA  0EFF               	movlw	high STR_106
 15033  0131CC  6EE6               	movwf	postinc1,c
 15034                           
 15035                           ;stkvar	_fmt @ sp[(-36)+-4]
 15036  0131CE  0ED8               	movlw	-40
 15037  0131D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15038  0131D6  0ED9               	movlw	-39
 15039  0131D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15040  0131DE  006F FF78  F00B    	movff	postinc2,btemp+10
 15041  0131E4  006F FF74  F00C    	movff	postdec2,btemp+11
 15042  0131EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15043  0131F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 15044  0131F6  EC16  F0C2         	call	_strncmp	;wreg free
 15045  0131FA  5001               	movf	btemp^0,w,c
 15046  0131FC  1002               	iorwf	(btemp+1)^0,w,c
 15047  0131FE  B4D8               	btfsc	status,2,c
 15048  013200  D022               	goto	u12720
 15049  013202  0E02               	movlw	2
 15050  013204  6EE6               	movwf	postinc1,c
 15051  013206  0E00               	movlw	0
 15052  013208  6EE6               	movwf	postinc1,c
 15053  01320A  0EE6               	movlw	low STR_110
 15054  01320C  6EE6               	movwf	postinc1,c
 15055  01320E  0EFF               	movlw	high STR_110
 15056  013210  6EE6               	movwf	postinc1,c
 15057                           
 15058                           ;stkvar	_fmt @ sp[(-36)+-4]
 15059  013212  0ED8               	movlw	-40
 15060  013214  006F FF8F FFD9     	movff	plusw1,fsr2l
 15061  01321A  0ED9               	movlw	-39
 15062  01321C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15063  013222  006F FF78  F00B    	movff	postinc2,btemp+10
 15064  013228  006F FF74  F00C    	movff	postdec2,btemp+11
 15065  01322E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15066  013234  0060  F033  FFE6   	movff	btemp+11,postinc1
 15067  01323A  EC16  F0C2         	call	_strncmp	;wreg free
 15068  01323E  5001               	movf	btemp^0,w,c
 15069  013240  1002               	iorwf	(btemp+1)^0,w,c
 15070  013242  A4D8               	btfss	status,2,c
 15071  013244  D058               	goto	l13255
 15072  013246                     u12720:
 15073                           
 15074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 15075                           ;stkvar	_fmt @ sp[(-32)+-4]
 15076  013246  0EDC               	movlw	-36
 15077  013248  006F FF8F FFD9     	movff	plusw1,fsr2l
 15078  01324E  0EDD               	movlw	-35
 15079  013250  006F FF8F FFDA     	movff	plusw1,fsr2h
 15080  013256  006F FF78  F00B    	movff	postinc2,btemp+10
 15081  01325C  006F FF74  F00C    	movff	postdec2,btemp+11
 15082  013262  0E01               	movlw	1
 15083  013264  260B               	addwf	(btemp+10)^0,f,c
 15084  013266  0E00               	movlw	0
 15085  013268  220C               	addwfc	(btemp+11)^0,f,c
 15086  01326A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 15087  013270  0060  F033  FFF7   	movff	btemp+11,tblptrh
 15088  013276                     	if	0	;tblptru may be non-zero
 15089  013276                     	endif
 15090  013276                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15091  013276  0E00               	movlw	low (__mediumconst shr (0+16))
 15092  013278  6EF8               	movwf	tblptru,c
 15093  01327A                     	endif
 15094                           
 15095                           ;stkvar	_c @ sp[(-32)+31]
 15096  01327A  0008               	tblrd		*
 15097  01327C  0EFF               	movlw	-1
 15098  01327E  006F FFD7 FFE3     	movff	tablat,plusw1
 15099                           
 15100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 15101                           ;stkvar	_fmt @ sp[(-32)+-4]
 15102  013284  0EDC               	movlw	-36
 15103  013286  006F FF8F FFD9     	movff	plusw1,fsr2l
 15104  01328C  0EDD               	movlw	-35
 15105  01328E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15106  013294  0E02               	movlw	2
 15107  013296  26DE               	addwf	postinc2,f,c
 15108  013298  0E00               	movlw	0
 15109  01329A  22DD               	addwfc	postdec2,f,c
 15110                           
 15111                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 15112                           ;stkvar	_ap @ sp[(-32)+-6]
 15113  01329C  0EDA               	movlw	-38
 15114  01329E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15115  0132A4  0EDB               	movlw	-37
 15116  0132A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 15117  0132AC  0E04               	movlw	4
 15118  0132AE  5EDE               	subwf	postinc2,f,c
 15119  0132B0  0E00               	movlw	0
 15120  0132B2  5ADD               	subwfb	postdec2,f,c
 15121  0132B4  006F FF78  F00B    	movff	postinc2,btemp+10
 15122  0132BA  006F FF74  F00C    	movff	postdec2,btemp+11
 15123  0132C0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15124  0132C6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15125  0132CC  006F FF78  F009    	movff	postinc2,btemp+8
 15126  0132D2  006F FF78  F00A    	movff	postinc2,btemp+9
 15127  0132D8  006F FF78  F00B    	movff	postinc2,btemp+10
 15128  0132DE  006F FF78  F00C    	movff	postinc2,btemp+11
 15129  0132E4  5009               	movf	(btemp+8)^0,w,c
 15130  0132E6  6E11               	movwf	(btemp+16)^0,c
 15131  0132E8  500A               	movf	(btemp+9)^0,w,c
 15132  0132EA  6E12               	movwf	(btemp+17)^0,c
 15133  0132EC  500B               	movf	(btemp+10)^0,w,c
 15134  0132EE  6E13               	movwf	(btemp+18)^0,c
 15135  0132F0  500C               	movf	(btemp+11)^0,w,c
 15136  0132F2  6E14               	movwf	(btemp+19)^0,c
 15137  0132F4  D714               	goto	L14
 15138  0132F6                     l13255:
 15139                           
 15140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 15141                           ;stkvar	_fmt @ sp[(-32)+-4]
 15142  0132F6  0EDC               	movlw	-36
 15143  0132F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 15144  0132FE  0EDD               	movlw	-35
 15145  013300  006F FF8F FFDA     	movff	plusw1,fsr2h
 15146  013306  006F FF7B FFF6     	movff	postinc2,tblptrl
 15147  01330C  006F FF77 FFF7     	movff	postdec2,tblptrh
 15148  013312                     	if	0	;tblptru may be non-zero
 15149  013312                     	endif
 15150  013312                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15151  013312  0E00               	movlw	low (__mediumconst shr (0+16))
 15152  013314  6EF8               	movwf	tblptru,c
 15153  013316                     	endif
 15154  013316  0008               	tblrd		*
 15155  013318  50F5               	movf	tablat,w,c
 15156  01331A  0A25               	xorlw	37
 15157  01331C  A4D8               	btfss	status,2,c
 15158  01331E  D01A               	goto	l13265
 15159                           
 15160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 15161                           ;stkvar	_fmt @ sp[(-32)+-4]
 15162  013320  0EDC               	movlw	-36
 15163  013322  006F FF8F FFD9     	movff	plusw1,fsr2l
 15164  013328  0EDD               	movlw	-35
 15165  01332A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15166  013330  2ADE               	incf	postinc2,f,c
 15167  013332  0E00               	movlw	0
 15168  013334  22DD               	addwfc	postdec2,f,c
 15169                           
 15170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 15171                           ;stkvar	_fp @ sp[(-32)+-2]
 15172  013336  0EDE               	movlw	-34
 15173  013338  006F FF8F FFE6     	movff	plusw1,postinc1
 15174  01333E  006F FF8F FFE6     	movff	plusw1,postinc1
 15175  013344  0E25               	movlw	37
 15176  013346  6EE6               	movwf	postinc1,c
 15177  013348  0E00               	movlw	0
 15178  01334A  6EE6               	movwf	postinc1,c
 15179  01334C  EC72  F0CF         	call	_fputc	;wreg free
 15180  013350                     l13261:
 15181                           
 15182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 15183  013350  0E01               	movlw	1
 15184  013352  D00C               	goto	L15
 15185  013354                     l13265:
 15186                           
 15187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 15188                           ;stkvar	_fmt @ sp[(-32)+-4]
 15189  013354  0EDC               	movlw	-36
 15190  013356  006F FF8F FFD9     	movff	plusw1,fsr2l
 15191  01335C  0EDD               	movlw	-35
 15192  01335E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15193  013364  2ADE               	incf	postinc2,f,c
 15194  013366  0E00               	movlw	0
 15195  013368  22DD               	addwfc	postdec2,f,c
 15196                           
 15197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 15198  01336A  0E00               	movlw	0
 15199  01336C                     L15:
 15200  01336C  6E01               	movwf	btemp^0,c
 15201  01336E  0E00               	movlw	0
 15202  013370  6E02               	movwf	(btemp+1)^0,c
 15203  013372  D02A               	goto	l2485
 15204  013374                     l13271:
 15205                           
 15206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 15207                           ;stkvar	_fp @ sp[(-32)+-2]
 15208  013374  0EDE               	movlw	-34
 15209  013376  006F FF8F FFE6     	movff	plusw1,postinc1
 15210  01337C  006F FF8F FFE6     	movff	plusw1,postinc1
 15211                           
 15212                           ;stkvar	_fmt @ sp[(-34)+-4]
 15213  013382  0EDA               	movlw	-38
 15214  013384  006F FF8F FFD9     	movff	plusw1,fsr2l
 15215  01338A  0EDB               	movlw	-37
 15216  01338C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15217  013392  006F FF7B FFF6     	movff	postinc2,tblptrl
 15218  013398  006F FF77 FFF7     	movff	postdec2,tblptrh
 15219  01339E                     	if	0	;tblptru may be non-zero
 15220  01339E                     	endif
 15221  01339E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15222  01339E  0E00               	movlw	low (__mediumconst shr (0+16))
 15223  0133A0  6EF8               	movwf	tblptru,c
 15224  0133A2                     	endif
 15225  0133A2  0008               	tblrd		*
 15226  0133A4  50F5               	movf	tablat,w,c
 15227  0133A6  6EE6               	movwf	postinc1,c
 15228  0133A8  0E00               	movlw	0
 15229  0133AA  6EE6               	movwf	postinc1,c
 15230  0133AC  EC72  F0CF         	call	_fputc	;wreg free
 15231                           
 15232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 15233                           ;stkvar	_fmt @ sp[(-32)+-4]
 15234  0133B0  0EDC               	movlw	-36
 15235  0133B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 15236  0133B8  0EDD               	movlw	-35
 15237  0133BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 15238  0133C0  2ADE               	incf	postinc2,f,c
 15239  0133C2  0E00               	movlw	0
 15240  0133C4  22DD               	addwfc	postdec2,f,c
 15241  0133C6  D7C4               	goto	l13261
 15242  0133C8                     l2485:
 15243                           
 15244                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 15245  0133C8  0EDA               	movlw	218
 15246  0133CA  26E1               	addwf	fsr1l,f,c
 15247  0133CC  0EFF               	movlw	255
 15248  0133CE  22E2               	addwfc	fsr1h,f,c
 15249  0133D0  0012               	return		;funcret
 15250  0133D2                     __end_of_vfpfcnvrt:
 15251                           	opt callstack 0
 15252                           
 15253 ;; *************** function _xtoa *****************
 15254 ;; Defined at:
 15255 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15256 ;; Parameters:    Size  Location     Type
 15257 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15258 ;;		 -> f(6), NULL(0), 
 15259 ;;  d               8  [STACK] unsigned long long 
 15260 ;;  x               1  [STACK] unsigned char 
 15261 ;; Auto vars:     Size  Location     Type
 15262 ;;  n               8  [STACK] unsigned long long 
 15263 ;;  c               2  [STACK] int 
 15264 ;;  i               2  [STACK] int 
 15265 ;;  w               2  [STACK] int 
 15266 ;;  p               2  [STACK] int 
 15267 ;; Return value:  Size  Location     Type
 15268 ;;                  2  [STACK] int 
 15269 ;; Registers used:
 15270 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 15271 ;; Tracked objects:
 15272 ;;		On entry : 0/0
 15273 ;;		On exit  : 0/0
 15274 ;;		Unchanged: 0/0
 15275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15280 ;;Total ram usage:        0 bytes
 15281 ;; Hardware stack levels used:    1
 15282 ;; Hardware stack levels required when called:   20
 15283 ;; This function calls:
 15284 ;;		_isalpha
 15285 ;;		_isupper
 15286 ;;		_pad
 15287 ;;		_toupper
 15288 ;; This function is called by:
 15289 ;;		_vfpfcnvrt
 15290 ;; This function uses a reentrant model
 15291 ;;
 15292                           
 15293                           	psect	text56
 15294  016128                     __ptext56:
 15295                           	opt callstack 0
 15296  016128                     _xtoa:
 15297                           	opt callstack 0
 15298                           
 15299                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 15300  016128  0E14               	movlw	20
 15301  01612A  26E1               	addwf	fsr1l,f,c
 15302  01612C  0E00               	movlw	0
 15303  01612E  22E2               	addwfc	fsr1h,f,c
 15304                           
 15305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 15306                           
 15307                           ;incstack = 0
 15308 ;; hardware stack exceeded
 15309  016130  AE3D               	btfss	(_prec+1)^0,7,c
 15310                           
 15311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 15312  016132  923E               	bcf	_flags^0,1,c
 15313                           
 15314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 15315  016134  BE3D               	btfsc	(_prec+1)^0,7,c
 15316  016136  D005               	goto	u12260
 15317  016138  503D               	movf	(_prec+1)^0,w,c
 15318  01613A  E110               	bnz	l12991
 15319  01613C  043C               	decf	_prec^0,w,c
 15320  01613E  B0D8               	btfsc	status,0,c
 15321  016140  D00D               	goto	l12991
 15322  016142                     u12260:
 15323  016142  0E01               	movlw	1
 15324  016144  6E0B               	movwf	(btemp+10)^0,c
 15325  016146  0E00               	movlw	0
 15326  016148  6E0C               	movwf	(btemp+11)^0,c
 15327                           
 15328                           ;stkvar	_p @ sp[(-20)+18]
 15329  01614A  0EFE               	movlw	-2
 15330  01614C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15331  016152  0EFF               	movlw	-1
 15332  016154  0060  F033  FFE3   	movff	btemp+11,plusw1
 15333  01615A  D008               	goto	l2435
 15334  01615C                     l12991:
 15335                           
 15336                           ;stkvar	_p @ sp[(-20)+18]
 15337  01615C  0EFE               	movlw	-2
 15338  01615E  0060  F0F3  FFE3   	movff	_prec,plusw1
 15339  016164  0EFF               	movlw	-1
 15340  016166  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 15341  01616C                     l2435:
 15342                           
 15343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 15344                           ;stkvar	_w @ sp[(-20)+16]
 15345  01616C  0EFC               	movlw	-4
 15346  01616E  0060  F0EB  FFE3   	movff	_width,plusw1
 15347  016174  0EFD               	movlw	-3
 15348  016176  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15349                           
 15350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 15351  01617C  A83E               	btfss	_flags^0,4,c
 15352  01617E  D00B               	goto	l12997
 15353                           
 15354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 15355                           ;stkvar	_w @ sp[(-20)+16]
 15356  016180  50E1               	movf	fsr1l,w,c
 15357  016182  0FFC               	addlw	-4
 15358  016184  6ED9               	movwf	fsr2l,c
 15359  016186  50E2               	movf	fsr1h,w,c
 15360  016188  6EDA               	movwf	fsr2h,c
 15361  01618A  0EFF               	movlw	255
 15362  01618C  22DA               	addwfc	fsr2h,f,c
 15363  01618E  0EFE               	movlw	254
 15364  016190  26DE               	addwf	postinc2,f,c
 15365  016192  0EFF               	movlw	255
 15366  016194  22DD               	addwfc	postdec2,f,c
 15367  016196                     l12997:
 15368                           
 15369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 15370                           ;stkvar	_d @ sp[(-20)+-10]
 15371  016196  0EE2               	movlw	226
 15372  016198  24E1               	addwf	fsr1l,w,c
 15373  01619A  6ED9               	movwf	fsr2l,c
 15374  01619C  0EFF               	movlw	255
 15375  01619E  20E2               	addwfc	fsr1h,w,c
 15376  0161A0  6EDA               	movwf	fsr2h,c
 15377                           
 15378                           ;stkvar	_n @ sp[(-20)+4]
 15379  0161A2  0E08               	movlw	8
 15380  0161A4  6E01               	movwf	btemp^0,c
 15381  0161A6  0EF0               	movlw	-16
 15382  0161A8                     us1228999:
 15383  0161A8  006F FF7B FFE3     	movff	postinc2,plusw1
 15384  0161AE  28E8               	incf	wreg,w,c
 15385  0161B0  2E01               	decfsz	btemp^0,f,c
 15386  0161B2  D7FA               	bra	us1228999
 15387                           
 15388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 15389  0161B4  0E4F               	movlw	79
 15390  0161B6  6E0B               	movwf	(btemp+10)^0,c
 15391  0161B8  0E00               	movlw	0
 15392  0161BA  6E0C               	movwf	(btemp+11)^0,c
 15393                           
 15394                           ;stkvar	_i @ sp[(-20)+14]
 15395  0161BC  0EFA               	movlw	-6
 15396  0161BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15397  0161C4  0EFB               	movlw	-5
 15398  0161C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 15399                           
 15400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 15401  0161CC  0102               	movlb	2	; () banked
 15402  0161CE  6BE6               	clrf	(_dbuf+79)& (0+255),b
 15403                           
 15404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15405  0161D0  D0EE               	goto	l13035
 15406  0161D2                     l13003:
 15407                           
 15408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 15409                           ;stkvar	_i @ sp[(-20)+14]
 15410  0161D2  50E1               	movf	fsr1l,w,c
 15411  0161D4  0FFA               	addlw	-6
 15412  0161D6  6ED9               	movwf	fsr2l,c
 15413  0161D8  50E2               	movf	fsr1h,w,c
 15414  0161DA  6EDA               	movwf	fsr2h,c
 15415  0161DC  0EFF               	movlw	255
 15416  0161DE  22DA               	addwfc	fsr2h,f,c
 15417  0161E0  06DE               	decf	postinc2,f,c
 15418  0161E2  0E00               	movlw	0
 15419  0161E4  5ADD               	subwfb	postdec2,f,c
 15420                           
 15421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 15422                           ;stkvar	_n @ sp[(-20)+4]
 15423  0161E6  0EF0               	movlw	-16
 15424  0161E8  006F FF8C  F00B    	movff	plusw1,btemp+10
 15425  0161EE  0EF1               	movlw	-15
 15426  0161F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 15427  0161F6  0E0F               	movlw	15
 15428  0161F8  160B               	andwf	(btemp+10)^0,f,c
 15429  0161FA  0E00               	movlw	0
 15430  0161FC  160C               	andwf	(btemp+11)^0,f,c
 15431                           
 15432                           ;stkvar	_c @ sp[(-20)+12]
 15433  0161FE  0EF8               	movlw	-8
 15434  016200  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15435  016206  0EF9               	movlw	-7
 15436  016208  0060  F033  FFE3   	movff	btemp+11,plusw1
 15437                           
 15438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 15439                           ;stkvar	_c @ sp[(-20)+12]
 15440  01620E  0EF9               	movlw	-7
 15441  016210  BEE3               	btfsc	plusw1,7,c
 15442  016212  D00F               	goto	l13011
 15443  016214  0EF9               	movlw	-7
 15444  016216  50E3               	movf	plusw1,w,c
 15445  016218  E108               	bnz	u12290
 15446  01621A  0EF8               	movlw	-8
 15447  01621C  006F FF8C  F001    	movff	plusw1,btemp
 15448  016222  0E0A               	movlw	10
 15449  016224  5E01               	subwf	btemp^0,f,c
 15450  016226  A0D8               	btfss	status,0,c
 15451  016228  D004               	goto	l13011
 15452  01622A                     u12290:
 15453                           
 15454                           ;stkvar	_c @ sp[(-20)+12]
 15455  01622A  0EF8               	movlw	-8
 15456  01622C  50E3               	movf	plusw1,w,c
 15457  01622E  0F57               	addlw	87
 15458  016230  D003               	goto	L16
 15459  016232                     l13011:
 15460                           
 15461                           ;stkvar	_c @ sp[(-20)+12]
 15462  016232  0EF8               	movlw	-8
 15463  016234  50E3               	movf	plusw1,w,c
 15464  016236  0F30               	addlw	48
 15465  016238                     L16:
 15466  016238  6E0B               	movwf	(btemp+10)^0,c
 15467  01623A  0EF9               	movlw	-7
 15468  01623C  006F FF8C  F00C    	movff	plusw1,btemp+11
 15469  016242  0E00               	movlw	0
 15470  016244  220C               	addwfc	(btemp+11)^0,f,c
 15471                           
 15472                           ;stkvar	_c @ sp[(-20)+12]
 15473  016246  0EF8               	movlw	-8
 15474  016248  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15475  01624E  0EF9               	movlw	-7
 15476  016250  0060  F033  FFE3   	movff	btemp+11,plusw1
 15477  016256  0EBF               	movlw	191
 15478  016258  6E0B               	movwf	(btemp+10)^0,c
 15479  01625A  0EFF               	movlw	255
 15480  01625C  6E0C               	movwf	(btemp+11)^0,c
 15481                           
 15482                           ;stkvar	_x @ sp[(-20)+-11]
 15483  01625E  0EE1               	movlw	-31
 15484  016260  50E3               	movf	plusw1,w,c
 15485  016262  6E09               	movwf	(btemp+8)^0,c
 15486  016264  6A0A               	clrf	(btemp+9)^0,c
 15487  016266  500B               	movf	(btemp+10)^0,w,c
 15488  016268  2609               	addwf	(btemp+8)^0,f,c
 15489  01626A  500C               	movf	(btemp+11)^0,w,c
 15490  01626C  220A               	addwfc	(btemp+9)^0,f,c
 15491  01626E  500A               	movf	(btemp+9)^0,w,c
 15492  016270  E106               	bnz	u12300
 15493  016272  0E1A               	movlw	26
 15494  016274  5C09               	subwf	(btemp+8)^0,w,c
 15495  016276  B0D8               	btfsc	status,0,c
 15496  016278  D002               	goto	u12300
 15497  01627A  0E01               	movlw	1
 15498  01627C  D001               	goto	u12310
 15499  01627E                     u12300:
 15500  01627E  0E00               	movlw	0
 15501  016280                     u12310:
 15502  016280  6E0B               	movwf	(btemp+10)^0,c
 15503  016282  6A0C               	clrf	(btemp+11)^0,c
 15504                           
 15505                           ;stkvar	_xtoa$5895 @ sp[(-20)+2]
 15506  016284  0EEE               	movlw	-18
 15507  016286  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15508  01628C  0EEF               	movlw	-17
 15509  01628E  0060  F033  FFE3   	movff	btemp+11,plusw1
 15510                           
 15511                           ;stkvar	_xtoa$5895 @ sp[(-20)+2]
 15512  016294  0EEE               	movlw	-18
 15513  016296  006F FF8C  F001    	movff	plusw1,btemp
 15514  01629C  0EEF               	movlw	-17
 15515  01629E  50E3               	movf	plusw1,w,c
 15516  0162A0  1001               	iorwf	btemp^0,w,c
 15517  0162A2  B4D8               	btfsc	status,2,c
 15518  0162A4  D041               	goto	l13027
 15519  0162A6  0E9F               	movlw	159
 15520  0162A8  6E0B               	movwf	(btemp+10)^0,c
 15521  0162AA  0EFF               	movlw	255
 15522  0162AC  6E0C               	movwf	(btemp+11)^0,c
 15523                           
 15524                           ;stkvar	_c @ sp[(-20)+12]
 15525  0162AE  0EF8               	movlw	-8
 15526  0162B0  006F FF8C  F009    	movff	plusw1,btemp+8
 15527  0162B6  0EF9               	movlw	-7
 15528  0162B8  006F FF8C  F00A    	movff	plusw1,btemp+9
 15529  0162BE  0E20               	movlw	32
 15530  0162C0  1209               	iorwf	(btemp+8)^0,f,c
 15531  0162C2  0E00               	movlw	0
 15532  0162C4  120A               	iorwf	(btemp+9)^0,f,c
 15533  0162C6  500B               	movf	(btemp+10)^0,w,c
 15534  0162C8  2609               	addwf	(btemp+8)^0,f,c
 15535  0162CA  500C               	movf	(btemp+11)^0,w,c
 15536  0162CC  220A               	addwfc	(btemp+9)^0,f,c
 15537  0162CE  500A               	movf	(btemp+9)^0,w,c
 15538  0162D0  E106               	bnz	u12330
 15539  0162D2  0E1A               	movlw	26
 15540  0162D4  5C09               	subwf	(btemp+8)^0,w,c
 15541  0162D6  B0D8               	btfsc	status,0,c
 15542  0162D8  D002               	goto	u12330
 15543  0162DA  0E01               	movlw	1
 15544  0162DC  D001               	goto	u12340
 15545  0162DE                     u12330:
 15546  0162DE  0E00               	movlw	0
 15547  0162E0                     u12340:
 15548  0162E0  6E0B               	movwf	(btemp+10)^0,c
 15549  0162E2  6A0C               	clrf	(btemp+11)^0,c
 15550                           
 15551                           ;stkvar	_xtoa$5896 @ sp[(-20)+0]
 15552  0162E4  0EEC               	movlw	-20
 15553  0162E6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15554  0162EC  0EED               	movlw	-19
 15555  0162EE  0060  F033  FFE3   	movff	btemp+11,plusw1
 15556                           
 15557                           ;stkvar	_xtoa$5896 @ sp[(-20)+0]
 15558  0162F4  0EEC               	movlw	-20
 15559  0162F6  006F FF8C  F001    	movff	plusw1,btemp
 15560  0162FC  0EED               	movlw	-19
 15561  0162FE  50E3               	movf	plusw1,w,c
 15562  016300  1001               	iorwf	btemp^0,w,c
 15563  016302  B4D8               	btfsc	status,2,c
 15564  016304  D011               	goto	l13027
 15565                           
 15566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 15567                           ;stkvar	_c @ sp[(-20)+12]
 15568  016306  0EF8               	movlw	-8
 15569  016308  006F FF8F FFE6     	movff	plusw1,postinc1
 15570  01630E  006F FF8F FFE6     	movff	plusw1,postinc1
 15571  016314  EC4C  F0DA         	call	_toupper	;wreg free
 15572                           
 15573                           ;stkvar	_c @ sp[(-20)+12]
 15574  016318  0EF8               	movlw	-8
 15575  01631A  0060  F007  FFE3   	movff	btemp,plusw1
 15576  016320  0EF9               	movlw	-7
 15577  016322  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15578  016328                     l13027:
 15579                           
 15580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 15581                           ;stkvar	_c @ sp[(-20)+12]
 15582                           ;stkvar	_i @ sp[(-20)+14]
 15583  016328  0EFA               	movlw	-6
 15584  01632A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15585  016330  0EFB               	movlw	-5
 15586  016332  006F FF8C  F00C    	movff	plusw1,btemp+11
 15587  016338  0E97               	movlw	low _dbuf
 15588  01633A  240B               	addwf	(btemp+10)^0,w,c
 15589  01633C  6ED9               	movwf	fsr2l,c
 15590  01633E  0E02               	movlw	high _dbuf
 15591  016340  200C               	addwfc	(btemp+11)^0,w,c
 15592  016342  6EDA               	movwf	fsr2h,c
 15593  016344  0EF8               	movlw	-8
 15594  016346  006F FF8F FFDF     	movff	plusw1,indf2
 15595                           
 15596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 15597                           ;stkvar	_p @ sp[(-20)+18]
 15598  01634C  50E1               	movf	fsr1l,w,c
 15599  01634E  0FFE               	addlw	-2
 15600  016350  6ED9               	movwf	fsr2l,c
 15601  016352  50E2               	movf	fsr1h,w,c
 15602  016354  6EDA               	movwf	fsr2h,c
 15603  016356  0EFF               	movlw	255
 15604  016358  22DA               	addwfc	fsr2h,f,c
 15605  01635A  06DE               	decf	postinc2,f,c
 15606  01635C  0E00               	movlw	0
 15607  01635E  5ADD               	subwfb	postdec2,f,c
 15608                           
 15609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 15610                           ;stkvar	_w @ sp[(-20)+16]
 15611  016360  50E1               	movf	fsr1l,w,c
 15612  016362  0FFC               	addlw	-4
 15613  016364  6ED9               	movwf	fsr2l,c
 15614  016366  50E2               	movf	fsr1h,w,c
 15615  016368  6EDA               	movwf	fsr2h,c
 15616  01636A  0EFF               	movlw	255
 15617  01636C  22DA               	addwfc	fsr2h,f,c
 15618  01636E  06DE               	decf	postinc2,f,c
 15619  016370  0E00               	movlw	0
 15620  016372  5ADD               	subwfb	postdec2,f,c
 15621                           
 15622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 15623  016374  0E04               	movlw	4
 15624  016376  6E0C               	movwf	(btemp+11)^0,c
 15625                           
 15626                           ;stkvar	_n @ sp[(-20)+4]
 15627  016378  50E1               	movf	fsr1l,w,c
 15628  01637A  0FF0               	addlw	-16
 15629  01637C  6ED9               	movwf	fsr2l,c
 15630  01637E  50E2               	movf	fsr1h,w,c
 15631  016380  6EDA               	movwf	fsr2h,c
 15632  016382  0EFF               	movlw	255
 15633  016384  22DA               	addwfc	fsr2h,f,c
 15634  016386  280C               	incf	(btemp+11)^0,w,c
 15635  016388  52DE               	movf	postinc2,f,c
 15636  01638A  D00F               	goto	u12360
 15637  01638C                     u12365:
 15638  01638C  52DE               	movf	postinc2,f,c
 15639  01638E  52DE               	movf	postinc2,f,c
 15640  016390  52DE               	movf	postinc2,f,c
 15641  016392  52DE               	movf	postinc2,f,c
 15642  016394  52DE               	movf	postinc2,f,c
 15643  016396  52DE               	movf	postinc2,f,c
 15644  016398  90D8               	bcf	status,0,c
 15645  01639A  32DD               	rrcf	postdec2,f,c
 15646  01639C  32DD               	rrcf	postdec2,f,c
 15647  01639E  32DD               	rrcf	postdec2,f,c
 15648  0163A0  32DD               	rrcf	postdec2,f,c
 15649  0163A2  32DD               	rrcf	postdec2,f,c
 15650  0163A4  32DD               	rrcf	postdec2,f,c
 15651  0163A6  32DD               	rrcf	postdec2,f,c
 15652  0163A8  32DE               	rrcf	postinc2,f,c
 15653  0163AA                     u12360:
 15654  0163AA  2EE8               	decfsz	wreg,f,c
 15655  0163AC  D7EF               	goto	u12365
 15656  0163AE                     l13035:
 15657                           
 15658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15659                           ;stkvar	_i @ sp[(-20)+14]
 15660  0163AE  0EFB               	movlw	-5
 15661  0163B0  BEE3               	btfsc	plusw1,7,c
 15662  0163B2  D03A               	goto	u12410
 15663  0163B4  0EFB               	movlw	-5
 15664  0163B6  50E3               	movf	plusw1,w,c
 15665  0163B8  E108               	bnz	u12370
 15666  0163BA  0EFA               	movlw	-6
 15667  0163BC  006F FF8C  F001    	movff	plusw1,btemp
 15668  0163C2  0E02               	movlw	2
 15669  0163C4  5E01               	subwf	btemp^0,f,c
 15670  0163C6  A0D8               	btfss	status,0,c
 15671  0163C8  D02F               	goto	u12410
 15672  0163CA                     u12370:
 15673                           
 15674                           ;stkvar	_n @ sp[(-20)+4]
 15675  0163CA  0EF0               	movlw	-16
 15676  0163CC  50E3               	movf	plusw1,w,c
 15677  0163CE  E115               	bnz	u12381
 15678  0163D0  0EF1               	movlw	-15
 15679  0163D2  50E3               	movf	plusw1,w,c
 15680  0163D4  E112               	bnz	u12381
 15681  0163D6  0EF2               	movlw	-14
 15682  0163D8  50E3               	movf	plusw1,w,c
 15683  0163DA  E10F               	bnz	u12381
 15684  0163DC  0EF3               	movlw	-13
 15685  0163DE  50E3               	movf	plusw1,w,c
 15686  0163E0  E10C               	bnz	u12381
 15687  0163E2  0EF4               	movlw	-12
 15688  0163E4  50E3               	movf	plusw1,w,c
 15689  0163E6  E109               	bnz	u12381
 15690  0163E8  0EF5               	movlw	-11
 15691  0163EA  50E3               	movf	plusw1,w,c
 15692  0163EC  E106               	bnz	u12381
 15693  0163EE  0EF6               	movlw	-10
 15694  0163F0  50E3               	movf	plusw1,w,c
 15695  0163F2  E103               	bnz	u12381
 15696  0163F4  0EF7               	movlw	-9
 15697  0163F6  50E3               	movf	plusw1,w,c
 15698  0163F8  A4D8               	btfss	status,2,c
 15699  0163FA                     u12381:
 15700  0163FA  D6EB               	goto	l13003
 15701                           
 15702                           ;stkvar	_p @ sp[(-20)+18]
 15703  0163FC  0EFF               	movlw	-1
 15704  0163FE  BEE3               	btfsc	plusw1,7,c
 15705  016400  D007               	goto	u12390
 15706  016402  0EFF               	movlw	-1
 15707  016404  50E3               	movf	plusw1,w,c
 15708  016406  E103               	bnz	u12391
 15709  016408  0EFE               	movlw	-2
 15710  01640A  04E3               	decf	plusw1,w,c
 15711  01640C  B0D8               	btfsc	status,0,c
 15712  01640E                     u12391:
 15713  01640E  D6E1               	goto	l13003
 15714  016410                     u12390:
 15715                           
 15716                           ;stkvar	_w @ sp[(-20)+16]
 15717  016410  0EFD               	movlw	-3
 15718  016412  BEE3               	btfsc	plusw1,7,c
 15719  016414  D009               	goto	u12410
 15720  016416  0EFD               	movlw	-3
 15721  016418  50E3               	movf	plusw1,w,c
 15722  01641A  E104               	bnz	u12400
 15723  01641C  0EFC               	movlw	-4
 15724  01641E  04E3               	decf	plusw1,w,c
 15725  016420  A0D8               	btfss	status,0,c
 15726  016422  D002               	goto	u12410
 15727  016424                     u12400:
 15728  016424  B23E               	btfsc	_flags^0,1,c
 15729  016426  D6D5               	goto	l13003
 15730  016428                     u12410:
 15731                           
 15732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 15733  016428  A83E               	btfss	_flags^0,4,c
 15734  01642A  D036               	goto	l13051
 15735                           
 15736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 15737                           ;stkvar	_i @ sp[(-20)+14]
 15738  01642C  50E1               	movf	fsr1l,w,c
 15739  01642E  0FFA               	addlw	-6
 15740  016430  6ED9               	movwf	fsr2l,c
 15741  016432  50E2               	movf	fsr1h,w,c
 15742  016434  6EDA               	movwf	fsr2h,c
 15743  016436  0EFF               	movlw	255
 15744  016438  22DA               	addwfc	fsr2h,f,c
 15745  01643A  06DE               	decf	postinc2,f,c
 15746  01643C  0E00               	movlw	0
 15747  01643E  5ADD               	subwfb	postdec2,f,c
 15748                           
 15749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 15750                           ;stkvar	_x @ sp[(-20)+-11]
 15751                           ;stkvar	_i @ sp[(-20)+14]
 15752  016440  0EFA               	movlw	-6
 15753  016442  006F FF8C  F00B    	movff	plusw1,btemp+10
 15754  016448  0EFB               	movlw	-5
 15755  01644A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15756  016450  0E97               	movlw	low _dbuf
 15757  016452  240B               	addwf	(btemp+10)^0,w,c
 15758  016454  6ED9               	movwf	fsr2l,c
 15759  016456  0E02               	movlw	high _dbuf
 15760  016458  200C               	addwfc	(btemp+11)^0,w,c
 15761  01645A  6EDA               	movwf	fsr2h,c
 15762  01645C  0EE1               	movlw	-31
 15763  01645E  006F FF8F FFDF     	movff	plusw1,indf2
 15764                           
 15765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 15766                           ;stkvar	_i @ sp[(-20)+14]
 15767  016464  50E1               	movf	fsr1l,w,c
 15768  016466  0FFA               	addlw	-6
 15769  016468  6ED9               	movwf	fsr2l,c
 15770  01646A  50E2               	movf	fsr1h,w,c
 15771  01646C  6EDA               	movwf	fsr2h,c
 15772  01646E  0EFF               	movlw	255
 15773  016470  22DA               	addwfc	fsr2h,f,c
 15774  016472  06DE               	decf	postinc2,f,c
 15775  016474  0E00               	movlw	0
 15776  016476  5ADD               	subwfb	postdec2,f,c
 15777                           
 15778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 15779                           ;stkvar	_i @ sp[(-20)+14]
 15780  016478  0EFA               	movlw	-6
 15781  01647A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15782  016480  0EFB               	movlw	-5
 15783  016482  006F FF8C  F00C    	movff	plusw1,btemp+11
 15784  016488  0E97               	movlw	low _dbuf
 15785  01648A  240B               	addwf	(btemp+10)^0,w,c
 15786  01648C  6ED9               	movwf	fsr2l,c
 15787  01648E  0E02               	movlw	high _dbuf
 15788  016490  200C               	addwfc	(btemp+11)^0,w,c
 15789  016492  6EDA               	movwf	fsr2h,c
 15790  016494  0E30               	movlw	48
 15791  016496  6EDF               	movwf	indf2,c
 15792  016498                     l13051:
 15793                           
 15794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 15795                           ;stkvar	_w @ sp[(-20)+16]
 15796  016498  0EFC               	movlw	-4
 15797  01649A  006F FF8F FFE6     	movff	plusw1,postinc1
 15798  0164A0  006F FF8F FFE6     	movff	plusw1,postinc1
 15799                           
 15800                           ;stkvar	_i @ sp[(-22)+14]
 15801  0164A6  0E97               	movlw	low _dbuf
 15802  0164A8  6E0B               	movwf	(btemp+10)^0,c
 15803  0164AA  0E02               	movlw	high _dbuf
 15804  0164AC  6E0C               	movwf	(btemp+11)^0,c
 15805  0164AE  0EF8               	movlw	-8
 15806  0164B0  50E3               	movf	plusw1,w,c
 15807  0164B2  260B               	addwf	(btemp+10)^0,f,c
 15808  0164B4  0EF9               	movlw	-7
 15809  0164B6  50E3               	movf	plusw1,w,c
 15810  0164B8  220C               	addwfc	(btemp+11)^0,f,c
 15811  0164BA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15812  0164C0  0060  F033  FFE6   	movff	btemp+11,postinc1
 15813                           
 15814                           ;stkvar	_fp @ sp[(-24)+-2]
 15815  0164C6  0EE6               	movlw	-26
 15816  0164C8  006F FF8F FFE6     	movff	plusw1,postinc1
 15817  0164CE  006F FF8F FFE6     	movff	plusw1,postinc1
 15818  0164D4  EC1C  F0D1         	call	_pad	;wreg free
 15819                           
 15820                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 15821  0164D8  0EE1               	movlw	225
 15822  0164DA  26E1               	addwf	fsr1l,f,c
 15823  0164DC  0EFF               	movlw	255
 15824  0164DE  22E2               	addwfc	fsr1h,f,c
 15825  0164E0  0012               	return		;funcret
 15826  0164E2                     __end_of_xtoa:
 15827                           	opt callstack 0
 15828                           
 15829 ;; *************** function _toupper *****************
 15830 ;; Defined at:
 15831 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 15832 ;; Parameters:    Size  Location     Type
 15833 ;;  c               2  [STACK] int 
 15834 ;; Auto vars:     Size  Location     Type
 15835 ;;		None
 15836 ;; Return value:  Size  Location     Type
 15837 ;;                  2  [STACK] int 
 15838 ;; Registers used:
 15839 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 15840 ;; Tracked objects:
 15841 ;;		On entry : 0/2
 15842 ;;		On exit  : 0/0
 15843 ;;		Unchanged: 0/0
 15844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15849 ;;Total ram usage:        0 bytes
 15850 ;; Hardware stack levels used:    1
 15851 ;; Hardware stack levels required when called:   16
 15852 ;; This function calls:
 15853 ;;		_islower
 15854 ;; This function is called by:
 15855 ;;		_xtoa
 15856 ;; This function uses a reentrant model
 15857 ;;
 15858                           
 15859                           	psect	text57
 15860  01B498                     __ptext57:
 15861                           	opt callstack 0
 15862  01B498                     _toupper:
 15863                           	opt callstack 0
 15864                           
 15865                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15866  01B498  52E6               	movf	postinc1,f,c
 15867  01B49A  52E6               	movf	postinc1,f,c
 15868                           
 15869                           ;stkvar	_c @ sp[(-2)+-2]
 15870                           
 15871                           ;incstack = 0
 15872 ;; hardware stack exceeded
 15873  01B49C  0EFC               	movlw	-4
 15874  01B49E  50E3               	movf	plusw1,w,c
 15875  01B4A0  0F9F               	addlw	159
 15876  01B4A2  6E0B               	movwf	(btemp+10)^0,c
 15877  01B4A4  0EFD               	movlw	-3
 15878  01B4A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 15879  01B4AC  0EFF               	movlw	255
 15880  01B4AE  220C               	addwfc	(btemp+11)^0,f,c
 15881  01B4B0  500C               	movf	(btemp+11)^0,w,c
 15882  01B4B2  E106               	bnz	u6480
 15883  01B4B4  0E1A               	movlw	26
 15884  01B4B6  5C0B               	subwf	(btemp+10)^0,w,c
 15885  01B4B8  B0D8               	btfsc	status,0,c
 15886  01B4BA  D002               	goto	u6480
 15887  01B4BC  0E01               	movlw	1
 15888  01B4BE  D001               	goto	u6490
 15889  01B4C0                     u6480:
 15890  01B4C0  0E00               	movlw	0
 15891  01B4C2                     u6490:
 15892  01B4C2  6E0B               	movwf	(btemp+10)^0,c
 15893  01B4C4  6A0C               	clrf	(btemp+11)^0,c
 15894                           
 15895                           ;stkvar	_toupper$6702 @ sp[(-2)+0]
 15896  01B4C6  0EFE               	movlw	-2
 15897  01B4C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15898  01B4CE  0EFF               	movlw	-1
 15899  01B4D0  0060  F033  FFE3   	movff	btemp+11,plusw1
 15900                           
 15901                           ;stkvar	_toupper$6702 @ sp[(-2)+0]
 15902  01B4D6  0EFE               	movlw	-2
 15903  01B4D8  006F FF8C  F001    	movff	plusw1,btemp
 15904  01B4DE  0EFF               	movlw	-1
 15905  01B4E0  50E3               	movf	plusw1,w,c
 15906  01B4E2  1001               	iorwf	btemp^0,w,c
 15907  01B4E4  B4D8               	btfsc	status,2,c
 15908  01B4E6  D00D               	goto	l8459
 15909                           
 15910                           ;stkvar	_c @ sp[(-2)+-2]
 15911  01B4E8  0EFC               	movlw	-4
 15912  01B4EA  006F FF8C  F001    	movff	plusw1,btemp
 15913  01B4F0  0EFD               	movlw	-3
 15914  01B4F2  006F FF8C  F002    	movff	plusw1,btemp+1
 15915  01B4F8  0E5F               	movlw	95
 15916  01B4FA  1601               	andwf	btemp^0,f,c
 15917  01B4FC  0E00               	movlw	0
 15918  01B4FE  1602               	andwf	(btemp+1)^0,f,c
 15919  01B500  D008               	goto	l3602
 15920  01B502                     l8459:
 15921                           
 15922                           ;stkvar	_c @ sp[(-2)+-2]
 15923  01B502  0EFC               	movlw	-4
 15924  01B504  006F FF8C  F001    	movff	plusw1,btemp
 15925  01B50A  0EFD               	movlw	-3
 15926  01B50C  006F FF8C  F002    	movff	plusw1,btemp+1
 15927  01B512                     l3602:
 15928                           
 15929                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 15930  01B512  52E5               	movf	postdec1,f,c
 15931  01B514  52E5               	movf	postdec1,f,c
 15932  01B516  52E5               	movf	postdec1,f,c
 15933  01B518  52E5               	movf	postdec1,f,c
 15934  01B51A  0012               	return		;funcret
 15935  01B51C                     __end_of_toupper:
 15936                           	opt callstack 0
 15937                           
 15938 ;; *************** function _islower *****************
 15939 ;; Defined at:
 15940 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 15941 ;; Parameters:    Size  Location     Type
 15942 ;;  c               2  [STACK] int 
 15943 ;; Auto vars:     Size  Location     Type
 15944 ;;		None
 15945 ;; Return value:  Size  Location     Type
 15946 ;;                  2  [STACK] int 
 15947 ;; Registers used:
 15948 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 15949 ;; Tracked objects:
 15950 ;;		On entry : 0/0
 15951 ;;		On exit  : 0/0
 15952 ;;		Unchanged: 0/0
 15953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15958 ;;Total ram usage:        0 bytes
 15959 ;; Hardware stack levels used:    1
 15960 ;; Hardware stack levels required when called:   15
 15961 ;; This function calls:
 15962 ;;		Nothing
 15963 ;; This function is called by:
 15964 ;;		_toupper
 15965 ;; This function uses a reentrant model
 15966 ;;
 15967                           
 15968                           	psect	text58
 15969  01C3F0                     __ptext58:
 15970                           	opt callstack 0
 15971  01C3F0                     _islower:
 15972                           	opt callstack 0
 15973                           
 15974                           ;stkvar	_c @ sp[(0)+-2]
 15975                           
 15976                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15977                           ;incstack = 0
 15978 ;; hardware stack exceeded
 15979  01C3F0  0EFE               	movlw	-2
 15980  01C3F2  50E3               	movf	plusw1,w,c
 15981  01C3F4  0F9F               	addlw	159
 15982  01C3F6  6E0B               	movwf	(btemp+10)^0,c
 15983  01C3F8  0EFF               	movlw	-1
 15984  01C3FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 15985  01C400  0EFF               	movlw	255
 15986  01C402  220C               	addwfc	(btemp+11)^0,f,c
 15987  01C404  500C               	movf	(btemp+11)^0,w,c
 15988  01C406  E106               	bnz	u6120
 15989  01C408  0E1A               	movlw	26
 15990  01C40A  5C0B               	subwf	(btemp+10)^0,w,c
 15991  01C40C  B0D8               	btfsc	status,0,c
 15992  01C40E  D002               	goto	u6120
 15993  01C410  0E01               	movlw	1
 15994  01C412  D001               	goto	u6130
 15995  01C414                     u6120:
 15996  01C414  0E00               	movlw	0
 15997  01C416                     u6130:
 15998  01C416  6E01               	movwf	btemp^0,c
 15999  01C418  6A02               	clrf	(btemp+1)^0,c
 16000                           
 16001                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 16002  01C41A  52E5               	movf	postdec1,f,c
 16003  01C41C  52E5               	movf	postdec1,f,c
 16004  01C41E  0012               	return		;funcret
 16005  01C420                     __end_of_islower:
 16006                           	opt callstack 0
 16007                           
 16008 ;; *************** function _isalpha *****************
 16009 ;; Defined at:
 16010 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 16011 ;; Parameters:    Size  Location     Type
 16012 ;;  c               2  [STACK] int 
 16013 ;; Auto vars:     Size  Location     Type
 16014 ;;		None
 16015 ;; Return value:  Size  Location     Type
 16016 ;;                  2  [STACK] int 
 16017 ;; Registers used:
 16018 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 16019 ;; Tracked objects:
 16020 ;;		On entry : 0/0
 16021 ;;		On exit  : 0/0
 16022 ;;		Unchanged: 0/0
 16023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16028 ;;Total ram usage:        0 bytes
 16029 ;; Hardware stack levels used:    1
 16030 ;; Hardware stack levels required when called:   15
 16031 ;; This function calls:
 16032 ;;		Nothing
 16033 ;; This function is called by:
 16034 ;;		_xtoa
 16035 ;; This function uses a reentrant model
 16036 ;;
 16037                           
 16038                           	psect	text59
 16039  01BFD6                     __ptext59:
 16040                           	opt callstack 0
 16041  01BFD6                     _isalpha:
 16042                           	opt callstack 0
 16043                           
 16044                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16045                           ;incstack = 0
 16046 ;; hardware stack exceeded
 16047  01BFD6  0E9F               	movlw	159
 16048  01BFD8  6E0B               	movwf	(btemp+10)^0,c
 16049  01BFDA  0EFF               	movlw	255
 16050  01BFDC  6E0C               	movwf	(btemp+11)^0,c
 16051                           
 16052                           ;stkvar	_c @ sp[(0)+-2]
 16053  01BFDE  0EFE               	movlw	-2
 16054  01BFE0  006F FF8C  F009    	movff	plusw1,btemp+8
 16055  01BFE6  0EFF               	movlw	-1
 16056  01BFE8  006F FF8C  F00A    	movff	plusw1,btemp+9
 16057  01BFEE  0E20               	movlw	32
 16058  01BFF0  1209               	iorwf	(btemp+8)^0,f,c
 16059  01BFF2  0E00               	movlw	0
 16060  01BFF4  120A               	iorwf	(btemp+9)^0,f,c
 16061  01BFF6  500B               	movf	(btemp+10)^0,w,c
 16062  01BFF8  2609               	addwf	(btemp+8)^0,f,c
 16063  01BFFA  500C               	movf	(btemp+11)^0,w,c
 16064  01BFFC  220A               	addwfc	(btemp+9)^0,f,c
 16065  01BFFE  500A               	movf	(btemp+9)^0,w,c
 16066  01C000  E106               	bnz	u6460
 16067  01C002  0E1A               	movlw	26
 16068  01C004  5C09               	subwf	(btemp+8)^0,w,c
 16069  01C006  B0D8               	btfsc	status,0,c
 16070  01C008  D002               	goto	u6460
 16071  01C00A  0E01               	movlw	1
 16072  01C00C  D001               	goto	u6470
 16073  01C00E                     u6460:
 16074  01C00E  0E00               	movlw	0
 16075  01C010                     u6470:
 16076  01C010  6E01               	movwf	btemp^0,c
 16077  01C012  6A02               	clrf	(btemp+1)^0,c
 16078                           
 16079                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 16080  01C014  52E5               	movf	postdec1,f,c
 16081  01C016  52E5               	movf	postdec1,f,c
 16082  01C018  0012               	return		;funcret
 16083  01C01A                     __end_of_isalpha:
 16084                           	opt callstack 0
 16085                           
 16086 ;; *************** function _utoa *****************
 16087 ;; Defined at:
 16088 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16089 ;; Parameters:    Size  Location     Type
 16090 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16091 ;;		 -> f(6), NULL(0), 
 16092 ;;  d               8  [STACK] unsigned long long 
 16093 ;; Auto vars:     Size  Location     Type
 16094 ;;  n               8  [STACK] unsigned long long 
 16095 ;;  i               2  [STACK] int 
 16096 ;;  w               2  [STACK] int 
 16097 ;;  p               2  [STACK] int 
 16098 ;; Return value:  Size  Location     Type
 16099 ;;                  2  [STACK] int 
 16100 ;; Registers used:
 16101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 16102 ;; Tracked objects:
 16103 ;;		On entry : 0/0
 16104 ;;		On exit  : 0/0
 16105 ;;		Unchanged: 0/0
 16106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16111 ;;Total ram usage:        0 bytes
 16112 ;; Hardware stack levels used:    1
 16113 ;; Hardware stack levels required when called:   20
 16114 ;; This function calls:
 16115 ;;		___lodiv
 16116 ;;		___lomod
 16117 ;;		_pad
 16118 ;; This function is called by:
 16119 ;;		_vfpfcnvrt
 16120 ;; This function uses a reentrant model
 16121 ;;
 16122                           
 16123                           	psect	text60
 16124  016BC4                     __ptext60:
 16125                           	opt callstack 0
 16126  016BC4                     _utoa:
 16127                           	opt callstack 0
 16128                           
 16129                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16130  016BC4  0E0E               	movlw	14
 16131  016BC6  26E1               	addwf	fsr1l,f,c
 16132  016BC8  0E00               	movlw	0
 16133  016BCA  22E2               	addwfc	fsr1h,f,c
 16134                           
 16135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 16136                           
 16137                           ;incstack = 0
 16138 ;; hardware stack exceeded
 16139  016BCC  AE3D               	btfss	(_prec+1)^0,7,c
 16140                           
 16141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 16142  016BCE  923E               	bcf	_flags^0,1,c
 16143                           
 16144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 16145  016BD0  BE3D               	btfsc	(_prec+1)^0,7,c
 16146  016BD2  D005               	goto	u12180
 16147  016BD4  503D               	movf	(_prec+1)^0,w,c
 16148  016BD6  E110               	bnz	l12951
 16149  016BD8  043C               	decf	_prec^0,w,c
 16150  016BDA  B0D8               	btfsc	status,0,c
 16151  016BDC  D00D               	goto	l12951
 16152  016BDE                     u12180:
 16153  016BDE  0E01               	movlw	1
 16154  016BE0  6E0B               	movwf	(btemp+10)^0,c
 16155  016BE2  0E00               	movlw	0
 16156  016BE4  6E0C               	movwf	(btemp+11)^0,c
 16157                           
 16158                           ;stkvar	_p @ sp[(-14)+12]
 16159  016BE6  0EFE               	movlw	-2
 16160  016BE8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16161  016BEE  0EFF               	movlw	-1
 16162  016BF0  0060  F033  FFE3   	movff	btemp+11,plusw1
 16163  016BF6  D008               	goto	l2420
 16164  016BF8                     l12951:
 16165                           
 16166                           ;stkvar	_p @ sp[(-14)+12]
 16167  016BF8  0EFE               	movlw	-2
 16168  016BFA  0060  F0F3  FFE3   	movff	_prec,plusw1
 16169  016C00  0EFF               	movlw	-1
 16170  016C02  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16171  016C08                     l2420:
 16172                           
 16173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 16174                           ;stkvar	_w @ sp[(-14)+10]
 16175  016C08  0EFC               	movlw	-4
 16176  016C0A  0060  F0EB  FFE3   	movff	_width,plusw1
 16177  016C10  0EFD               	movlw	-3
 16178  016C12  0060  F0EF  FFE3   	movff	_width+1,plusw1
 16179                           
 16180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 16181                           ;stkvar	_d @ sp[(-14)+-10]
 16182  016C18  0EE8               	movlw	232
 16183  016C1A  24E1               	addwf	fsr1l,w,c
 16184  016C1C  6ED9               	movwf	fsr2l,c
 16185  016C1E  0EFF               	movlw	255
 16186  016C20  20E2               	addwfc	fsr1h,w,c
 16187  016C22  6EDA               	movwf	fsr2h,c
 16188                           
 16189                           ;stkvar	_n @ sp[(-14)+0]
 16190  016C24  0E08               	movlw	8
 16191  016C26  6E01               	movwf	btemp^0,c
 16192  016C28  0EF2               	movlw	-14
 16193  016C2A                     us1219999:
 16194  016C2A  006F FF7B FFE3     	movff	postinc2,plusw1
 16195  016C30  28E8               	incf	wreg,w,c
 16196  016C32  2E01               	decfsz	btemp^0,f,c
 16197  016C34  D7FA               	bra	us1219999
 16198                           
 16199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 16200  016C36  0E4F               	movlw	79
 16201  016C38  6E0B               	movwf	(btemp+10)^0,c
 16202  016C3A  0E00               	movlw	0
 16203  016C3C  6E0C               	movwf	(btemp+11)^0,c
 16204                           
 16205                           ;stkvar	_i @ sp[(-14)+8]
 16206  016C3E  0EFA               	movlw	-6
 16207  016C40  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16208  016C46  0EFB               	movlw	-5
 16209  016C48  0060  F033  FFE3   	movff	btemp+11,plusw1
 16210                           
 16211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 16212  016C4E  0102               	movlb	2	; () banked
 16213  016C50  6BE6               	clrf	(_dbuf+79)& (0+255),b
 16214                           
 16215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 16216  016C52  D0FB               	goto	l12969
 16217  016C54                     l12959:
 16218                           
 16219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 16220                           ;stkvar	_i @ sp[(-14)+8]
 16221  016C54  50E1               	movf	fsr1l,w,c
 16222  016C56  0FFA               	addlw	-6
 16223  016C58  6ED9               	movwf	fsr2l,c
 16224  016C5A  50E2               	movf	fsr1h,w,c
 16225  016C5C  6EDA               	movwf	fsr2h,c
 16226  016C5E  0EFF               	movlw	255
 16227  016C60  22DA               	addwfc	fsr2h,f,c
 16228  016C62  06DE               	decf	postinc2,f,c
 16229  016C64  0E00               	movlw	0
 16230  016C66  5ADD               	subwfb	postdec2,f,c
 16231                           
 16232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 16233  016C68  0E0A               	movlw	10
 16234  016C6A  6EE6               	movwf	postinc1,c
 16235  016C6C  0E00               	movlw	0
 16236  016C6E  6EE6               	movwf	postinc1,c
 16237  016C70  0E00               	movlw	0
 16238  016C72  6EE6               	movwf	postinc1,c
 16239  016C74  0E00               	movlw	0
 16240  016C76  6EE6               	movwf	postinc1,c
 16241  016C78  0E00               	movlw	0
 16242  016C7A  6EE6               	movwf	postinc1,c
 16243  016C7C  0E00               	movlw	0
 16244  016C7E  6EE6               	movwf	postinc1,c
 16245  016C80  0E00               	movlw	0
 16246  016C82  6EE6               	movwf	postinc1,c
 16247  016C84  0E00               	movlw	0
 16248  016C86  6EE6               	movwf	postinc1,c
 16249                           
 16250                           ;stkvar	_n @ sp[(-22)+0]
 16251  016C88  50E1               	movf	fsr1l,w,c
 16252  016C8A  0FEA               	addlw	-22
 16253  016C8C  6ED9               	movwf	fsr2l,c
 16254  016C8E  50E2               	movf	fsr1h,w,c
 16255  016C90  6EDA               	movwf	fsr2h,c
 16256  016C92  0EFF               	movlw	255
 16257  016C94  22DA               	addwfc	fsr2h,f,c
 16258  016C96  006F FF7B FFE6     	movff	postinc2,postinc1
 16259  016C9C  006F FF7B FFE6     	movff	postinc2,postinc1
 16260  016CA2  006F FF7B FFE6     	movff	postinc2,postinc1
 16261  016CA8  006F FF7B FFE6     	movff	postinc2,postinc1
 16262  016CAE  006F FF7B FFE6     	movff	postinc2,postinc1
 16263  016CB4  006F FF7B FFE6     	movff	postinc2,postinc1
 16264  016CBA  006F FF7B FFE6     	movff	postinc2,postinc1
 16265  016CC0  006F FF7B FFE6     	movff	postinc2,postinc1
 16266  016CC6  EC9F  F0CD         	call	___lomod	;wreg free
 16267  016CCA  52E5               	movf	postdec1,f,c
 16268  016CCC  006F FF9C  F018    	movff	indf1,btemp+23
 16269  016CD2  52E5               	movf	postdec1,f,c
 16270  016CD4  006F FF9C  F017    	movff	indf1,btemp+22
 16271  016CDA  52E5               	movf	postdec1,f,c
 16272  016CDC  006F FF9C  F016    	movff	indf1,btemp+21
 16273  016CE2  52E5               	movf	postdec1,f,c
 16274  016CE4  006F FF9C  F015    	movff	indf1,btemp+20
 16275  016CEA  52E5               	movf	postdec1,f,c
 16276  016CEC  006F FF9C  F014    	movff	indf1,btemp+19
 16277  016CF2  52E5               	movf	postdec1,f,c
 16278  016CF4  006F FF9C  F013    	movff	indf1,btemp+18
 16279  016CFA  52E5               	movf	postdec1,f,c
 16280  016CFC  006F FF9C  F012    	movff	indf1,btemp+17
 16281  016D02  52E5               	movf	postdec1,f,c
 16282  016D04  006F FF9C  F011    	movff	indf1,btemp+16
 16283  016D0A  0EF8               	movlw	248
 16284  016D0C  26E1               	addwf	fsr1l,f,c
 16285  016D0E  0EFF               	movlw	255
 16286  016D10  22E2               	addwfc	fsr1h,f,c
 16287  016D12  0E30               	movlw	48
 16288  016D14  2611               	addwf	(btemp+16)^0,f,c
 16289                           
 16290                           ;stkvar	_i @ sp[(-14)+8]
 16291  016D16  0EFA               	movlw	-6
 16292  016D18  006F FF8C  F00B    	movff	plusw1,btemp+10
 16293  016D1E  0EFB               	movlw	-5
 16294  016D20  006F FF8C  F00C    	movff	plusw1,btemp+11
 16295  016D26  0E97               	movlw	low _dbuf
 16296  016D28  240B               	addwf	(btemp+10)^0,w,c
 16297  016D2A  6ED9               	movwf	fsr2l,c
 16298  016D2C  0E02               	movlw	high _dbuf
 16299  016D2E  200C               	addwfc	(btemp+11)^0,w,c
 16300  016D30  6EDA               	movwf	fsr2h,c
 16301  016D32  0060  F047  FFDF   	movff	btemp+16,indf2
 16302                           
 16303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 16304                           ;stkvar	_p @ sp[(-14)+12]
 16305  016D38  50E1               	movf	fsr1l,w,c
 16306  016D3A  0FFE               	addlw	-2
 16307  016D3C  6ED9               	movwf	fsr2l,c
 16308  016D3E  50E2               	movf	fsr1h,w,c
 16309  016D40  6EDA               	movwf	fsr2h,c
 16310  016D42  0EFF               	movlw	255
 16311  016D44  22DA               	addwfc	fsr2h,f,c
 16312  016D46  06DE               	decf	postinc2,f,c
 16313  016D48  0E00               	movlw	0
 16314  016D4A  5ADD               	subwfb	postdec2,f,c
 16315                           
 16316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 16317                           ;stkvar	_w @ sp[(-14)+10]
 16318  016D4C  50E1               	movf	fsr1l,w,c
 16319  016D4E  0FFC               	addlw	-4
 16320  016D50  6ED9               	movwf	fsr2l,c
 16321  016D52  50E2               	movf	fsr1h,w,c
 16322  016D54  6EDA               	movwf	fsr2h,c
 16323  016D56  0EFF               	movlw	255
 16324  016D58  22DA               	addwfc	fsr2h,f,c
 16325  016D5A  06DE               	decf	postinc2,f,c
 16326  016D5C  0E00               	movlw	0
 16327  016D5E  5ADD               	subwfb	postdec2,f,c
 16328                           
 16329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 16330  016D60  0E0A               	movlw	10
 16331  016D62  6EE6               	movwf	postinc1,c
 16332  016D64  0E00               	movlw	0
 16333  016D66  6EE6               	movwf	postinc1,c
 16334  016D68  0E00               	movlw	0
 16335  016D6A  6EE6               	movwf	postinc1,c
 16336  016D6C  0E00               	movlw	0
 16337  016D6E  6EE6               	movwf	postinc1,c
 16338  016D70  0E00               	movlw	0
 16339  016D72  6EE6               	movwf	postinc1,c
 16340  016D74  0E00               	movlw	0
 16341  016D76  6EE6               	movwf	postinc1,c
 16342  016D78  0E00               	movlw	0
 16343  016D7A  6EE6               	movwf	postinc1,c
 16344  016D7C  0E00               	movlw	0
 16345  016D7E  6EE6               	movwf	postinc1,c
 16346                           
 16347                           ;stkvar	_n @ sp[(-22)+0]
 16348  016D80  50E1               	movf	fsr1l,w,c
 16349  016D82  0FEA               	addlw	-22
 16350  016D84  6ED9               	movwf	fsr2l,c
 16351  016D86  50E2               	movf	fsr1h,w,c
 16352  016D88  6EDA               	movwf	fsr2h,c
 16353  016D8A  0EFF               	movlw	255
 16354  016D8C  22DA               	addwfc	fsr2h,f,c
 16355  016D8E  006F FF7B FFE6     	movff	postinc2,postinc1
 16356  016D94  006F FF7B FFE6     	movff	postinc2,postinc1
 16357  016D9A  006F FF7B FFE6     	movff	postinc2,postinc1
 16358  016DA0  006F FF7B FFE6     	movff	postinc2,postinc1
 16359  016DA6  006F FF7B FFE6     	movff	postinc2,postinc1
 16360  016DAC  006F FF7B FFE6     	movff	postinc2,postinc1
 16361  016DB2  006F FF7B FFE6     	movff	postinc2,postinc1
 16362  016DB8  006F FF7B FFE6     	movff	postinc2,postinc1
 16363  016DBE  EC7B  F0C9         	call	___lodiv	;wreg free
 16364  016DC2  52E5               	movf	postdec1,f,c
 16365  016DC4  006F FF9C  F018    	movff	indf1,btemp+23
 16366  016DCA  52E5               	movf	postdec1,f,c
 16367  016DCC  006F FF9C  F017    	movff	indf1,btemp+22
 16368  016DD2  52E5               	movf	postdec1,f,c
 16369  016DD4  006F FF9C  F016    	movff	indf1,btemp+21
 16370  016DDA  52E5               	movf	postdec1,f,c
 16371  016DDC  006F FF9C  F015    	movff	indf1,btemp+20
 16372  016DE2  52E5               	movf	postdec1,f,c
 16373  016DE4  006F FF9C  F014    	movff	indf1,btemp+19
 16374  016DEA  52E5               	movf	postdec1,f,c
 16375  016DEC  006F FF9C  F013    	movff	indf1,btemp+18
 16376  016DF2  52E5               	movf	postdec1,f,c
 16377  016DF4  006F FF9C  F012    	movff	indf1,btemp+17
 16378  016DFA  52E5               	movf	postdec1,f,c
 16379  016DFC  006F FF9C  F011    	movff	indf1,btemp+16
 16380  016E02  0EF8               	movlw	248
 16381  016E04  26E1               	addwf	fsr1l,f,c
 16382  016E06  0EFF               	movlw	255
 16383  016E08  22E2               	addwfc	fsr1h,f,c
 16384                           
 16385                           ;stkvar	_n @ sp[(-14)+0]
 16386  016E0A  0EF2               	movlw	-14
 16387  016E0C  0060  F047  FFE3   	movff	btemp+16,plusw1
 16388  016E12  0EF3               	movlw	-13
 16389  016E14  0060  F04B  FFE3   	movff	btemp+17,plusw1
 16390  016E1A  0EF4               	movlw	-12
 16391  016E1C  0060  F04F  FFE3   	movff	btemp+18,plusw1
 16392  016E22  0EF5               	movlw	-11
 16393  016E24  0060  F053  FFE3   	movff	btemp+19,plusw1
 16394  016E2A  0EF6               	movlw	-10
 16395  016E2C  0060  F057  FFE3   	movff	btemp+20,plusw1
 16396  016E32  0EF7               	movlw	-9
 16397  016E34  0060  F05B  FFE3   	movff	btemp+21,plusw1
 16398  016E3A  0EF8               	movlw	-8
 16399  016E3C  0060  F05F  FFE3   	movff	btemp+22,plusw1
 16400  016E42  0EF9               	movlw	-7
 16401  016E44  0060  F063  FFE3   	movff	btemp+23,plusw1
 16402  016E4A                     l12969:
 16403                           
 16404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 16405                           ;stkvar	_i @ sp[(-14)+8]
 16406  016E4A  0EFA               	movlw	-6
 16407  016E4C  006F FF8C  F001    	movff	plusw1,btemp
 16408  016E52  0EFB               	movlw	-5
 16409  016E54  50E3               	movf	plusw1,w,c
 16410  016E56  1001               	iorwf	btemp^0,w,c
 16411  016E58  B4D8               	btfsc	status,2,c
 16412  016E5A  D02F               	goto	u12240
 16413                           
 16414                           ;stkvar	_n @ sp[(-14)+0]
 16415  016E5C  0EF2               	movlw	-14
 16416  016E5E  50E3               	movf	plusw1,w,c
 16417  016E60  E115               	bnz	u12211
 16418  016E62  0EF3               	movlw	-13
 16419  016E64  50E3               	movf	plusw1,w,c
 16420  016E66  E112               	bnz	u12211
 16421  016E68  0EF4               	movlw	-12
 16422  016E6A  50E3               	movf	plusw1,w,c
 16423  016E6C  E10F               	bnz	u12211
 16424  016E6E  0EF5               	movlw	-11
 16425  016E70  50E3               	movf	plusw1,w,c
 16426  016E72  E10C               	bnz	u12211
 16427  016E74  0EF6               	movlw	-10
 16428  016E76  50E3               	movf	plusw1,w,c
 16429  016E78  E109               	bnz	u12211
 16430  016E7A  0EF7               	movlw	-9
 16431  016E7C  50E3               	movf	plusw1,w,c
 16432  016E7E  E106               	bnz	u12211
 16433  016E80  0EF8               	movlw	-8
 16434  016E82  50E3               	movf	plusw1,w,c
 16435  016E84  E103               	bnz	u12211
 16436  016E86  0EF9               	movlw	-7
 16437  016E88  50E3               	movf	plusw1,w,c
 16438  016E8A  A4D8               	btfss	status,2,c
 16439  016E8C                     u12211:
 16440  016E8C  D6E3               	goto	l12959
 16441                           
 16442                           ;stkvar	_p @ sp[(-14)+12]
 16443  016E8E  0EFF               	movlw	-1
 16444  016E90  BEE3               	btfsc	plusw1,7,c
 16445  016E92  D007               	goto	u12220
 16446  016E94  0EFF               	movlw	-1
 16447  016E96  50E3               	movf	plusw1,w,c
 16448  016E98  E103               	bnz	u12221
 16449  016E9A  0EFE               	movlw	-2
 16450  016E9C  04E3               	decf	plusw1,w,c
 16451  016E9E  B0D8               	btfsc	status,0,c
 16452  016EA0                     u12221:
 16453  016EA0  D6D9               	goto	l12959
 16454  016EA2                     u12220:
 16455                           
 16456                           ;stkvar	_w @ sp[(-14)+10]
 16457  016EA2  0EFD               	movlw	-3
 16458  016EA4  BEE3               	btfsc	plusw1,7,c
 16459  016EA6  D009               	goto	u12240
 16460  016EA8  0EFD               	movlw	-3
 16461  016EAA  50E3               	movf	plusw1,w,c
 16462  016EAC  E104               	bnz	u12230
 16463  016EAE  0EFC               	movlw	-4
 16464  016EB0  04E3               	decf	plusw1,w,c
 16465  016EB2  A0D8               	btfss	status,0,c
 16466  016EB4  D002               	goto	u12240
 16467  016EB6                     u12230:
 16468  016EB6  B23E               	btfsc	_flags^0,1,c
 16469  016EB8  D6CD               	goto	l12959
 16470  016EBA                     u12240:
 16471                           
 16472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 16473                           ;stkvar	_w @ sp[(-14)+10]
 16474  016EBA  0EFC               	movlw	-4
 16475  016EBC  006F FF8F FFE6     	movff	plusw1,postinc1
 16476  016EC2  006F FF8F FFE6     	movff	plusw1,postinc1
 16477                           
 16478                           ;stkvar	_i @ sp[(-16)+8]
 16479  016EC8  0E97               	movlw	low _dbuf
 16480  016ECA  6E0B               	movwf	(btemp+10)^0,c
 16481  016ECC  0E02               	movlw	high _dbuf
 16482  016ECE  6E0C               	movwf	(btemp+11)^0,c
 16483  016ED0  0EF8               	movlw	-8
 16484  016ED2  50E3               	movf	plusw1,w,c
 16485  016ED4  260B               	addwf	(btemp+10)^0,f,c
 16486  016ED6  0EF9               	movlw	-7
 16487  016ED8  50E3               	movf	plusw1,w,c
 16488  016EDA  220C               	addwfc	(btemp+11)^0,f,c
 16489  016EDC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16490  016EE2  0060  F033  FFE6   	movff	btemp+11,postinc1
 16491                           
 16492                           ;stkvar	_fp @ sp[(-18)+-2]
 16493  016EE8  0EEC               	movlw	-20
 16494  016EEA  006F FF8F FFE6     	movff	plusw1,postinc1
 16495  016EF0  006F FF8F FFE6     	movff	plusw1,postinc1
 16496  016EF6  EC1C  F0D1         	call	_pad	;wreg free
 16497                           
 16498                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 16499  016EFA  0EE8               	movlw	232
 16500  016EFC  26E1               	addwf	fsr1l,f,c
 16501  016EFE  0EFF               	movlw	255
 16502  016F00  22E2               	addwfc	fsr1h,f,c
 16503  016F02  0012               	return		;funcret
 16504  016F04                     __end_of_utoa:
 16505                           	opt callstack 0
 16506                           
 16507 ;; *************** function ___lomod *****************
 16508 ;; Defined at:
 16509 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 16510 ;; Parameters:    Size  Location     Type
 16511 ;;  dividend        8  [STACK] unsigned long long 
 16512 ;;  divisor         8  [STACK] unsigned long long 
 16513 ;; Auto vars:     Size  Location     Type
 16514 ;;  counter         1  [STACK] unsigned char 
 16515 ;; Return value:  Size  Location     Type
 16516 ;;                  8  [STACK] unsigned long long 
 16517 ;; Registers used:
 16518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 16519 ;; Tracked objects:
 16520 ;;		On entry : 0/2
 16521 ;;		On exit  : 0/0
 16522 ;;		Unchanged: 0/0
 16523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16528 ;;Total ram usage:        0 bytes
 16529 ;; Hardware stack levels used:    1
 16530 ;; Hardware stack levels required when called:   15
 16531 ;; This function calls:
 16532 ;;		Nothing
 16533 ;; This function is called by:
 16534 ;;		_utoa
 16535 ;; This function uses a reentrant model
 16536 ;;
 16537                           
 16538                           	psect	text61
 16539  019B3E                     __ptext61:
 16540                           	opt callstack 0
 16541  019B3E                     ___lomod:
 16542                           	opt callstack 0
 16543                           
 16544                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 16545  019B3E  52E6               	movf	postinc1,f,c
 16546                           
 16547                           ;stkvar	_divisor @ sp[(-1)+-16]
 16548                           
 16549                           ;incstack = 0
 16550 ;; hardware stack exceeded
 16551  019B40  0EEF               	movlw	-17
 16552  019B42  50E3               	movf	plusw1,w,c
 16553  019B44  E116               	bnz	u7610
 16554  019B46  0EF0               	movlw	-16
 16555  019B48  50E3               	movf	plusw1,w,c
 16556  019B4A  E113               	bnz	u7610
 16557  019B4C  0EF1               	movlw	-15
 16558  019B4E  50E3               	movf	plusw1,w,c
 16559  019B50  E110               	bnz	u7610
 16560  019B52  0EF2               	movlw	-14
 16561  019B54  50E3               	movf	plusw1,w,c
 16562  019B56  E10D               	bnz	u7610
 16563  019B58  0EF3               	movlw	-13
 16564  019B5A  50E3               	movf	plusw1,w,c
 16565  019B5C  E10A               	bnz	u7610
 16566  019B5E  0EF4               	movlw	-12
 16567  019B60  50E3               	movf	plusw1,w,c
 16568  019B62  E107               	bnz	u7610
 16569  019B64  0EF5               	movlw	-11
 16570  019B66  50E3               	movf	plusw1,w,c
 16571  019B68  E104               	bnz	u7610
 16572  019B6A  0EF6               	movlw	-10
 16573  019B6C  50E3               	movf	plusw1,w,c
 16574  019B6E  B4D8               	btfsc	status,2,c
 16575  019B70  D075               	goto	u7640
 16576  019B72                     u7610:
 16577                           
 16578                           ;stkvar	_counter @ sp[(-1)+0]
 16579  019B72  0EFF               	movlw	-1
 16580  019B74  6AE3               	clrf	plusw1,c
 16581  019B76  D012               	goto	L17
 16582  019B78                     l9069:
 16583                           
 16584                           ;stkvar	_divisor @ sp[(-1)+-16]
 16585  019B78  90D8               	bcf	status,0,c
 16586  019B7A  0EEF               	movlw	-17
 16587  019B7C  36E3               	rlcf	plusw1,f,c
 16588  019B7E  0EF0               	movlw	-16
 16589  019B80  36E3               	rlcf	plusw1,f,c
 16590  019B82  0EF1               	movlw	-15
 16591  019B84  36E3               	rlcf	plusw1,f,c
 16592  019B86  0EF2               	movlw	-14
 16593  019B88  36E3               	rlcf	plusw1,f,c
 16594  019B8A  0EF3               	movlw	-13
 16595  019B8C  36E3               	rlcf	plusw1,f,c
 16596  019B8E  0EF4               	movlw	-12
 16597  019B90  36E3               	rlcf	plusw1,f,c
 16598  019B92  0EF5               	movlw	-11
 16599  019B94  36E3               	rlcf	plusw1,f,c
 16600  019B96  0EF6               	movlw	-10
 16601  019B98  36E3               	rlcf	plusw1,f,c
 16602                           
 16603                           ;stkvar	_counter @ sp[(-1)+0]
 16604  019B9A  0EFF               	movlw	-1
 16605  019B9C                     L17:
 16606  019B9C  2AE3               	incf	plusw1,f,c
 16607                           
 16608                           ;stkvar	_divisor @ sp[(-1)+-16]
 16609  019B9E  0EF6               	movlw	-10
 16610  019BA0  AEE3               	btfss	plusw1,7,c
 16611  019BA2  D7EA               	goto	l9069
 16612  019BA4                     u7620:
 16613                           
 16614                           ;stkvar	_divisor @ sp[(-1)+-16]
 16615                           ;stkvar	_dividend @ sp[(-1)+-8]
 16616  019BA4  50E1               	movf	fsr1l,w,c
 16617  019BA6  0FF7               	addlw	-9
 16618  019BA8  6ED9               	movwf	fsr2l,c
 16619  019BAA  50E2               	movf	fsr1h,w,c
 16620  019BAC  6EDA               	movwf	fsr2h,c
 16621  019BAE  0EFF               	movlw	255
 16622  019BB0  22DA               	addwfc	fsr2h,f,c
 16623  019BB2  0EEF               	movlw	-17
 16624  019BB4  50E3               	movf	plusw1,w,c
 16625  019BB6  5CDE               	subwf	postinc2,w,c
 16626  019BB8  0EF0               	movlw	-16
 16627  019BBA  50E3               	movf	plusw1,w,c
 16628  019BBC  58DE               	subwfb	postinc2,w,c
 16629  019BBE  0EF1               	movlw	-15
 16630  019BC0  50E3               	movf	plusw1,w,c
 16631  019BC2  58DE               	subwfb	postinc2,w,c
 16632  019BC4  0EF2               	movlw	-14
 16633  019BC6  50E3               	movf	plusw1,w,c
 16634  019BC8  58DE               	subwfb	postinc2,w,c
 16635  019BCA  0EF3               	movlw	-13
 16636  019BCC  50E3               	movf	plusw1,w,c
 16637  019BCE  58DE               	subwfb	postinc2,w,c
 16638  019BD0  0EF4               	movlw	-12
 16639  019BD2  50E3               	movf	plusw1,w,c
 16640  019BD4  58DE               	subwfb	postinc2,w,c
 16641  019BD6  0EF5               	movlw	-11
 16642  019BD8  50E3               	movf	plusw1,w,c
 16643  019BDA  58DE               	subwfb	postinc2,w,c
 16644  019BDC  0EF6               	movlw	-10
 16645  019BDE  50E3               	movf	plusw1,w,c
 16646  019BE0  58DE               	subwfb	postinc2,w,c
 16647  019BE2  A0D8               	btfss	status,0,c
 16648  019BE4  D01F               	goto	l9077
 16649                           
 16650                           ;stkvar	_divisor @ sp[(-1)+-16]
 16651                           ;stkvar	_dividend @ sp[(-1)+-8]
 16652  019BE6  50E1               	movf	fsr1l,w,c
 16653  019BE8  0FF7               	addlw	-9
 16654  019BEA  6ED9               	movwf	fsr2l,c
 16655  019BEC  50E2               	movf	fsr1h,w,c
 16656  019BEE  6EDA               	movwf	fsr2h,c
 16657  019BF0  0EFF               	movlw	255
 16658  019BF2  22DA               	addwfc	fsr2h,f,c
 16659  019BF4  0EEF               	movlw	-17
 16660  019BF6  50E3               	movf	plusw1,w,c
 16661  019BF8  5EDE               	subwf	postinc2,f,c
 16662  019BFA  0EF0               	movlw	-16
 16663  019BFC  50E3               	movf	plusw1,w,c
 16664  019BFE  5ADE               	subwfb	postinc2,f,c
 16665  019C00  0EF1               	movlw	-15
 16666  019C02  50E3               	movf	plusw1,w,c
 16667  019C04  5ADE               	subwfb	postinc2,f,c
 16668  019C06  0EF2               	movlw	-14
 16669  019C08  50E3               	movf	plusw1,w,c
 16670  019C0A  5ADE               	subwfb	postinc2,f,c
 16671  019C0C  0EF3               	movlw	-13
 16672  019C0E  50E3               	movf	plusw1,w,c
 16673  019C10  5ADE               	subwfb	postinc2,f,c
 16674  019C12  0EF4               	movlw	-12
 16675  019C14  50E3               	movf	plusw1,w,c
 16676  019C16  5ADE               	subwfb	postinc2,f,c
 16677  019C18  0EF5               	movlw	-11
 16678  019C1A  50E3               	movf	plusw1,w,c
 16679  019C1C  5ADE               	subwfb	postinc2,f,c
 16680  019C1E  0EF6               	movlw	-10
 16681  019C20  50E3               	movf	plusw1,w,c
 16682  019C22  5ADE               	subwfb	postinc2,f,c
 16683  019C24                     l9077:
 16684                           
 16685                           ;stkvar	_divisor @ sp[(-1)+-16]
 16686  019C24  90D8               	bcf	status,0,c
 16687  019C26  0EF6               	movlw	-10
 16688  019C28  32E3               	rrcf	plusw1,f,c
 16689  019C2A  0EF5               	movlw	-11
 16690  019C2C  32E3               	rrcf	plusw1,f,c
 16691  019C2E  0EF4               	movlw	-12
 16692  019C30  32E3               	rrcf	plusw1,f,c
 16693  019C32  0EF3               	movlw	-13
 16694  019C34  32E3               	rrcf	plusw1,f,c
 16695  019C36  0EF2               	movlw	-14
 16696  019C38  32E3               	rrcf	plusw1,f,c
 16697  019C3A  0EF1               	movlw	-15
 16698  019C3C  32E3               	rrcf	plusw1,f,c
 16699  019C3E  0EF0               	movlw	-16
 16700  019C40  32E3               	rrcf	plusw1,f,c
 16701  019C42  0EEF               	movlw	-17
 16702  019C44  32E3               	rrcf	plusw1,f,c
 16703                           
 16704                           ;stkvar	_counter @ sp[(-1)+0]
 16705  019C46  0EFF               	movlw	-1
 16706  019C48  50E3               	movf	plusw1,w,c
 16707  019C4A  6E01               	movwf	btemp^0,c
 16708  019C4C  0E01               	movlw	1
 16709  019C4E  5E01               	subwf	btemp^0,f,c
 16710  019C50  0EFF               	movlw	-1
 16711  019C52  0060  F007  FFE3   	movff	btemp,plusw1
 16712  019C58  A4D8               	btfss	status,2,c
 16713  019C5A  D7A4               	goto	u7620
 16714  019C5C                     u7640:
 16715                           
 16716                           ;stkvar	_dividend @ sp[(-1)+-8]
 16717  019C5C  0EF7               	movlw	247
 16718  019C5E  24E1               	addwf	fsr1l,w,c
 16719  019C60  6ED9               	movwf	fsr2l,c
 16720  019C62  0EFF               	movlw	255
 16721  019C64  20E2               	addwfc	fsr1h,w,c
 16722  019C66  6EDA               	movwf	fsr2h,c
 16723                           
 16724                           ;stkvar	?___lomod @ sp[(-1)+-8]
 16725  019C68  0E08               	movlw	8
 16726  019C6A  6E01               	movwf	btemp^0,c
 16727  019C6C  0EF7               	movlw	-9
 16728  019C6E                     us765999:
 16729  019C6E  006F FF7B FFE3     	movff	postinc2,plusw1
 16730  019C74  28E8               	incf	wreg,w,c
 16731  019C76  2E01               	decfsz	btemp^0,f,c
 16732  019C78  D7FA               	bra	us765999
 16733                           
 16734                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 16735  019C7A  52E5               	movf	postdec1,f,c
 16736  019C7C  0012               	return		;funcret
 16737  019C7E                     __end_of___lomod:
 16738                           	opt callstack 0
 16739                           
 16740 ;; *************** function ___lodiv *****************
 16741 ;; Defined at:
 16742 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 16743 ;; Parameters:    Size  Location     Type
 16744 ;;  dividend        8  [STACK] unsigned long long 
 16745 ;;  divisor         8  [STACK] unsigned long long 
 16746 ;; Auto vars:     Size  Location     Type
 16747 ;;  quotient        8  [STACK] unsigned long long 
 16748 ;;  counter         1  [STACK] unsigned char 
 16749 ;; Return value:  Size  Location     Type
 16750 ;;                  8  [STACK] unsigned long long 
 16751 ;; Registers used:
 16752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 16753 ;; Tracked objects:
 16754 ;;		On entry : 0/2
 16755 ;;		On exit  : 0/0
 16756 ;;		Unchanged: 0/0
 16757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16762 ;;Total ram usage:        0 bytes
 16763 ;; Hardware stack levels used:    1
 16764 ;; Hardware stack levels required when called:   15
 16765 ;; This function calls:
 16766 ;;		Nothing
 16767 ;; This function is called by:
 16768 ;;		_utoa
 16769 ;; This function uses a reentrant model
 16770 ;;
 16771                           
 16772                           	psect	text62
 16773  0192F6                     __ptext62:
 16774                           	opt callstack 0
 16775  0192F6                     ___lodiv:
 16776                           	opt callstack 0
 16777                           
 16778                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 16779  0192F6  0E09               	movlw	9
 16780  0192F8  26E1               	addwf	fsr1l,f,c
 16781  0192FA  0E00               	movlw	0
 16782  0192FC  22E2               	addwfc	fsr1h,f,c
 16783                           
 16784                           ;stkvar	_quotient @ sp[(-9)+0]
 16785                           
 16786                           ;incstack = 0
 16787 ;; hardware stack exceeded
 16788  0192FE  0E07               	movlw	7
 16789  019300  6E01               	movwf	btemp^0,c
 16790  019302  0EF7               	movlw	-9
 16791  019304                     u7551:
 16792  019304  6AE3               	clrf	plusw1,c
 16793  019306  2AE8               	incf	wreg,f,c
 16794  019308  0601               	decf	btemp^0,f,c
 16795  01930A  E2FC               	bc	u7551
 16796                           
 16797                           ;stkvar	_divisor @ sp[(-9)+-16]
 16798  01930C  0EE7               	movlw	-25
 16799  01930E  50E3               	movf	plusw1,w,c
 16800  019310  E116               	bnz	u7560
 16801  019312  0EE8               	movlw	-24
 16802  019314  50E3               	movf	plusw1,w,c
 16803  019316  E113               	bnz	u7560
 16804  019318  0EE9               	movlw	-23
 16805  01931A  50E3               	movf	plusw1,w,c
 16806  01931C  E110               	bnz	u7560
 16807  01931E  0EEA               	movlw	-22
 16808  019320  50E3               	movf	plusw1,w,c
 16809  019322  E10D               	bnz	u7560
 16810  019324  0EEB               	movlw	-21
 16811  019326  50E3               	movf	plusw1,w,c
 16812  019328  E10A               	bnz	u7560
 16813  01932A  0EEC               	movlw	-20
 16814  01932C  50E3               	movf	plusw1,w,c
 16815  01932E  E107               	bnz	u7560
 16816  019330  0EED               	movlw	-19
 16817  019332  50E3               	movf	plusw1,w,c
 16818  019334  E104               	bnz	u7560
 16819  019336  0EEE               	movlw	-18
 16820  019338  50E3               	movf	plusw1,w,c
 16821  01933A  B4D8               	btfsc	status,2,c
 16822  01933C  D088               	goto	u7590
 16823  01933E                     u7560:
 16824                           
 16825                           ;stkvar	_counter @ sp[(-9)+8]
 16826  01933E  0EFF               	movlw	-1
 16827  019340  6AE3               	clrf	plusw1,c
 16828  019342  D012               	goto	L18
 16829  019344                     l9045:
 16830                           
 16831                           ;stkvar	_divisor @ sp[(-9)+-16]
 16832  019344  90D8               	bcf	status,0,c
 16833  019346  0EE7               	movlw	-25
 16834  019348  36E3               	rlcf	plusw1,f,c
 16835  01934A  0EE8               	movlw	-24
 16836  01934C  36E3               	rlcf	plusw1,f,c
 16837  01934E  0EE9               	movlw	-23
 16838  019350  36E3               	rlcf	plusw1,f,c
 16839  019352  0EEA               	movlw	-22
 16840  019354  36E3               	rlcf	plusw1,f,c
 16841  019356  0EEB               	movlw	-21
 16842  019358  36E3               	rlcf	plusw1,f,c
 16843  01935A  0EEC               	movlw	-20
 16844  01935C  36E3               	rlcf	plusw1,f,c
 16845  01935E  0EED               	movlw	-19
 16846  019360  36E3               	rlcf	plusw1,f,c
 16847  019362  0EEE               	movlw	-18
 16848  019364  36E3               	rlcf	plusw1,f,c
 16849                           
 16850                           ;stkvar	_counter @ sp[(-9)+8]
 16851  019366  0EFF               	movlw	-1
 16852  019368                     L18:
 16853  019368  2AE3               	incf	plusw1,f,c
 16854                           
 16855                           ;stkvar	_divisor @ sp[(-9)+-16]
 16856  01936A  0EEE               	movlw	-18
 16857  01936C  AEE3               	btfss	plusw1,7,c
 16858  01936E  D7EA               	goto	l9045
 16859  019370                     u7570:
 16860                           
 16861                           ;stkvar	_quotient @ sp[(-9)+0]
 16862  019370  90D8               	bcf	status,0,c
 16863  019372  0EF7               	movlw	-9
 16864  019374  36E3               	rlcf	plusw1,f,c
 16865  019376  0EF8               	movlw	-8
 16866  019378  36E3               	rlcf	plusw1,f,c
 16867  01937A  0EF9               	movlw	-7
 16868  01937C  36E3               	rlcf	plusw1,f,c
 16869  01937E  0EFA               	movlw	-6
 16870  019380  36E3               	rlcf	plusw1,f,c
 16871  019382  0EFB               	movlw	-5
 16872  019384  36E3               	rlcf	plusw1,f,c
 16873  019386  0EFC               	movlw	-4
 16874  019388  36E3               	rlcf	plusw1,f,c
 16875  01938A  0EFD               	movlw	-3
 16876  01938C  36E3               	rlcf	plusw1,f,c
 16877  01938E  0EFE               	movlw	-2
 16878  019390  36E3               	rlcf	plusw1,f,c
 16879                           
 16880                           ;stkvar	_divisor @ sp[(-9)+-16]
 16881                           ;stkvar	_dividend @ sp[(-9)+-8]
 16882  019392  50E1               	movf	fsr1l,w,c
 16883  019394  0FEF               	addlw	-17
 16884  019396  6ED9               	movwf	fsr2l,c
 16885  019398  50E2               	movf	fsr1h,w,c
 16886  01939A  6EDA               	movwf	fsr2h,c
 16887  01939C  0EFF               	movlw	255
 16888  01939E  22DA               	addwfc	fsr2h,f,c
 16889  0193A0  0EE7               	movlw	-25
 16890  0193A2  50E3               	movf	plusw1,w,c
 16891  0193A4  5CDE               	subwf	postinc2,w,c
 16892  0193A6  0EE8               	movlw	-24
 16893  0193A8  50E3               	movf	plusw1,w,c
 16894  0193AA  58DE               	subwfb	postinc2,w,c
 16895  0193AC  0EE9               	movlw	-23
 16896  0193AE  50E3               	movf	plusw1,w,c
 16897  0193B0  58DE               	subwfb	postinc2,w,c
 16898  0193B2  0EEA               	movlw	-22
 16899  0193B4  50E3               	movf	plusw1,w,c
 16900  0193B6  58DE               	subwfb	postinc2,w,c
 16901  0193B8  0EEB               	movlw	-21
 16902  0193BA  50E3               	movf	plusw1,w,c
 16903  0193BC  58DE               	subwfb	postinc2,w,c
 16904  0193BE  0EEC               	movlw	-20
 16905  0193C0  50E3               	movf	plusw1,w,c
 16906  0193C2  58DE               	subwfb	postinc2,w,c
 16907  0193C4  0EED               	movlw	-19
 16908  0193C6  50E3               	movf	plusw1,w,c
 16909  0193C8  58DE               	subwfb	postinc2,w,c
 16910  0193CA  0EEE               	movlw	-18
 16911  0193CC  50E3               	movf	plusw1,w,c
 16912  0193CE  58DE               	subwfb	postinc2,w,c
 16913  0193D0  A0D8               	btfss	status,0,c
 16914  0193D2  D021               	goto	l9057
 16915                           
 16916                           ;stkvar	_divisor @ sp[(-9)+-16]
 16917                           ;stkvar	_dividend @ sp[(-9)+-8]
 16918  0193D4  50E1               	movf	fsr1l,w,c
 16919  0193D6  0FEF               	addlw	-17
 16920  0193D8  6ED9               	movwf	fsr2l,c
 16921  0193DA  50E2               	movf	fsr1h,w,c
 16922  0193DC  6EDA               	movwf	fsr2h,c
 16923  0193DE  0EFF               	movlw	255
 16924  0193E0  22DA               	addwfc	fsr2h,f,c
 16925  0193E2  0EE7               	movlw	-25
 16926  0193E4  50E3               	movf	plusw1,w,c
 16927  0193E6  5EDE               	subwf	postinc2,f,c
 16928  0193E8  0EE8               	movlw	-24
 16929  0193EA  50E3               	movf	plusw1,w,c
 16930  0193EC  5ADE               	subwfb	postinc2,f,c
 16931  0193EE  0EE9               	movlw	-23
 16932  0193F0  50E3               	movf	plusw1,w,c
 16933  0193F2  5ADE               	subwfb	postinc2,f,c
 16934  0193F4  0EEA               	movlw	-22
 16935  0193F6  50E3               	movf	plusw1,w,c
 16936  0193F8  5ADE               	subwfb	postinc2,f,c
 16937  0193FA  0EEB               	movlw	-21
 16938  0193FC  50E3               	movf	plusw1,w,c
 16939  0193FE  5ADE               	subwfb	postinc2,f,c
 16940  019400  0EEC               	movlw	-20
 16941  019402  50E3               	movf	plusw1,w,c
 16942  019404  5ADE               	subwfb	postinc2,f,c
 16943  019406  0EED               	movlw	-19
 16944  019408  50E3               	movf	plusw1,w,c
 16945  01940A  5ADE               	subwfb	postinc2,f,c
 16946  01940C  0EEE               	movlw	-18
 16947  01940E  50E3               	movf	plusw1,w,c
 16948  019410  5ADE               	subwfb	postinc2,f,c
 16949                           
 16950                           ;stkvar	_quotient @ sp[(-9)+0]
 16951  019412  0EF7               	movlw	-9
 16952  019414  80E3               	bsf	plusw1,0,c
 16953  019416                     l9057:
 16954                           
 16955                           ;stkvar	_divisor @ sp[(-9)+-16]
 16956  019416  90D8               	bcf	status,0,c
 16957  019418  0EEE               	movlw	-18
 16958  01941A  32E3               	rrcf	plusw1,f,c
 16959  01941C  0EED               	movlw	-19
 16960  01941E  32E3               	rrcf	plusw1,f,c
 16961  019420  0EEC               	movlw	-20
 16962  019422  32E3               	rrcf	plusw1,f,c
 16963  019424  0EEB               	movlw	-21
 16964  019426  32E3               	rrcf	plusw1,f,c
 16965  019428  0EEA               	movlw	-22
 16966  01942A  32E3               	rrcf	plusw1,f,c
 16967  01942C  0EE9               	movlw	-23
 16968  01942E  32E3               	rrcf	plusw1,f,c
 16969  019430  0EE8               	movlw	-24
 16970  019432  32E3               	rrcf	plusw1,f,c
 16971  019434  0EE7               	movlw	-25
 16972  019436  32E3               	rrcf	plusw1,f,c
 16973                           
 16974                           ;stkvar	_counter @ sp[(-9)+8]
 16975  019438  0EFF               	movlw	-1
 16976  01943A  50E3               	movf	plusw1,w,c
 16977  01943C  6E01               	movwf	btemp^0,c
 16978  01943E  0E01               	movlw	1
 16979  019440  5E01               	subwf	btemp^0,f,c
 16980  019442  0EFF               	movlw	-1
 16981  019444  0060  F007  FFE3   	movff	btemp,plusw1
 16982  01944A  A4D8               	btfss	status,2,c
 16983  01944C  D791               	goto	u7570
 16984  01944E                     u7590:
 16985                           
 16986                           ;stkvar	_quotient @ sp[(-9)+0]
 16987  01944E  0EF7               	movlw	247
 16988  019450  24E1               	addwf	fsr1l,w,c
 16989  019452  6ED9               	movwf	fsr2l,c
 16990  019454  0EFF               	movlw	255
 16991  019456  20E2               	addwfc	fsr1h,w,c
 16992  019458  6EDA               	movwf	fsr2h,c
 16993                           
 16994                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 16995  01945A  0E08               	movlw	8
 16996  01945C  6E01               	movwf	btemp^0,c
 16997  01945E  0EEF               	movlw	-17
 16998  019460                     us760999:
 16999  019460  006F FF7B FFE3     	movff	postinc2,plusw1
 17000  019466  28E8               	incf	wreg,w,c
 17001  019468  2E01               	decfsz	btemp^0,f,c
 17002  01946A  D7FA               	bra	us760999
 17003                           
 17004                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 17005  01946C  0EF7               	movlw	247
 17006  01946E  26E1               	addwf	fsr1l,f,c
 17007  019470  0EFF               	movlw	255
 17008  019472  22E2               	addwfc	fsr1h,f,c
 17009  019474  0012               	return		;funcret
 17010  019476                     __end_of___lodiv:
 17011                           	opt callstack 0
 17012                           
 17013 ;; *************** function _strncmp *****************
 17014 ;; Defined at:
 17015 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 17016 ;; Parameters:    Size  Location     Type
 17017 ;;  _l              2  [STACK] PTR const unsigned char 
 17018 ;;		 -> ct(3), STR_78(127), STR_76(3), STR_75(3), 
 17019 ;;		 -> STR_74(19), STR_73(19), STR_72(19), STR_71(19), 
 17020 ;;		 -> STR_70(19), STR_69(19), STR_68(24), STR_67(15), 
 17021 ;;		 -> STR_66(15), STR_65(15), STR_64(10), STR_63(10), 
 17022 ;;		 -> STR_62(19), STR_61(19), STR_58(3), STR_57(3), 
 17023 ;;		 -> STR_56(21), STR_55(21), STR_54(21), STR_53(21), 
 17024 ;;		 -> STR_52(21), STR_51(21), STR_50(21), STR_49(21), 
 17025 ;;		 -> STR_48(21), STR_47(20), STR_46(20), STR_45(21), 
 17026 ;;		 -> STR_44(21), STR_43(21), STR_42(22), STR_41(22), 
 17027 ;;		 -> STR_40(22), STR_39(23), STR_38(23), STR_37(23), 
 17028 ;;		 -> STR_36(29), STR_35(23), STR_34(23), STR_33(22), 
 17029 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 17030 ;;		 -> STR_28(22), STR_27(22), STR_26(22), STR_25(22), 
 17031 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(17), 
 17032 ;;		 -> STR_20(16), STR_19(16), STR_18(26), STR_17(26), 
 17033 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 17034 ;;		 -> STR_12(21), STR_11(22), STR_10(22), STR_9(26), 
 17035 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 17036 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 17037 ;;  _r              2  [STACK] PTR const unsigned char 
 17038 ;;		 -> STR_112(3), STR_108(3), STR_103(3), STR_98(3), 
 17039 ;;		 -> STR_93(3), STR_89(3), 
 17040 ;;  n               2  [STACK] unsigned int 
 17041 ;; Auto vars:     Size  Location     Type
 17042 ;;  r               2  [STACK] PTR const unsigned char 
 17043 ;;		 -> STR_112(3), STR_108(3), STR_103(3), STR_98(3), 
 17044 ;;		 -> STR_93(3), STR_89(3), 
 17045 ;;  l               2  [STACK] PTR const unsigned char 
 17046 ;;		 -> ct(3), STR_78(127), STR_76(3), STR_75(3), 
 17047 ;;		 -> STR_74(19), STR_73(19), STR_72(19), STR_71(19), 
 17048 ;;		 -> STR_70(19), STR_69(19), STR_68(24), STR_67(15), 
 17049 ;;		 -> STR_66(15), STR_65(15), STR_64(10), STR_63(10), 
 17050 ;;		 -> STR_62(19), STR_61(19), STR_58(3), STR_57(3), 
 17051 ;;		 -> STR_56(21), STR_55(21), STR_54(21), STR_53(21), 
 17052 ;;		 -> STR_52(21), STR_51(21), STR_50(21), STR_49(21), 
 17053 ;;		 -> STR_48(21), STR_47(20), STR_46(20), STR_45(21), 
 17054 ;;		 -> STR_44(21), STR_43(21), STR_42(22), STR_41(22), 
 17055 ;;		 -> STR_40(22), STR_39(23), STR_38(23), STR_37(23), 
 17056 ;;		 -> STR_36(29), STR_35(23), STR_34(23), STR_33(22), 
 17057 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 17058 ;;		 -> STR_28(22), STR_27(22), STR_26(22), STR_25(22), 
 17059 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(17), 
 17060 ;;		 -> STR_20(16), STR_19(16), STR_18(26), STR_17(26), 
 17061 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 17062 ;;		 -> STR_12(21), STR_11(22), STR_10(22), STR_9(26), 
 17063 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 17064 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 17065 ;; Return value:  Size  Location     Type
 17066 ;;                  2  [STACK] int 
 17067 ;; Registers used:
 17068 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 17069 ;; Tracked objects:
 17070 ;;		On entry : 0/0
 17071 ;;		On exit  : 0/0
 17072 ;;		Unchanged: 0/0
 17073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17078 ;;Total ram usage:        0 bytes
 17079 ;; Hardware stack levels used:    1
 17080 ;; Hardware stack levels required when called:   15
 17081 ;; This function calls:
 17082 ;;		Nothing
 17083 ;; This function is called by:
 17084 ;;		_vfpfcnvrt
 17085 ;; This function uses a reentrant model
 17086 ;;
 17087                           
 17088                           	psect	text63
 17089  01842C                     __ptext63:
 17090                           	opt callstack 0
 17091  01842C                     _strncmp:
 17092                           	opt callstack 0
 17093                           
 17094                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17095  01842C  52E6               	movf	postinc1,f,c
 17096  01842E  52E6               	movf	postinc1,f,c
 17097  018430  52E6               	movf	postinc1,f,c
 17098  018432  52E6               	movf	postinc1,f,c
 17099                           
 17100                           ;stkvar	__l @ sp[(-4)+-2]
 17101                           
 17102                           ;incstack = 0
 17103 ;; hardware stack exceeded
 17104  018434  0EFA               	movlw	-6
 17105  018436  006F FF8C  F00B    	movff	plusw1,btemp+10
 17106  01843C  0EFB               	movlw	-5
 17107  01843E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17108                           
 17109                           ;stkvar	_l @ sp[(-4)+2]
 17110  018444  0EFF               	movlw	-1
 17111  018446  0060  F033  FFE3   	movff	btemp+11,plusw1
 17112  01844C  0EFE               	movlw	-2
 17113  01844E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17114                           
 17115                           ;stkvar	__r @ sp[(-4)+-4]
 17116  018454  0EF8               	movlw	-8
 17117  018456  006F FF8C  F00B    	movff	plusw1,btemp+10
 17118  01845C  0EF9               	movlw	-7
 17119  01845E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17120                           
 17121                           ;stkvar	_r @ sp[(-4)+0]
 17122  018464  0EFD               	movlw	-3
 17123  018466  0060  F033  FFE3   	movff	btemp+11,plusw1
 17124  01846C  0EFC               	movlw	-4
 17125  01846E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17126                           
 17127                           ;stkvar	_n @ sp[(-4)+-6]
 17128  018474  0EF6               	movlw	-10
 17129  018476  006F FF8C  F001    	movff	plusw1,btemp
 17130  01847C  0E01               	movlw	1
 17131  01847E  5E01               	subwf	btemp^0,f,c
 17132  018480  0EF6               	movlw	-10
 17133  018482  0060  F007  FFE3   	movff	btemp,plusw1
 17134  018488  0EF7               	movlw	-9
 17135  01848A  006F FF8C  F001    	movff	plusw1,btemp
 17136  018490  0E00               	movlw	0
 17137  018492  5A01               	subwfb	btemp^0,f,c
 17138  018494  0EF7               	movlw	-9
 17139  018496  0060  F007  FFE3   	movff	btemp,plusw1
 17140  01849C  0EF6               	movlw	-10
 17141  01849E  28E3               	incf	plusw1,w,c
 17142  0184A0  E13F               	bnz	l9727
 17143  0184A2  0EF7               	movlw	-9
 17144  0184A4  28E3               	incf	plusw1,w,c
 17145  0184A6  A4D8               	btfss	status,2,c
 17146  0184A8  D03B               	goto	l9727
 17147  0184AA  0E00               	movlw	0
 17148  0184AC  6E01               	movwf	btemp^0,c
 17149  0184AE  0E00               	movlw	0
 17150  0184B0  6E02               	movwf	(btemp+1)^0,c
 17151  0184B2  D0C7               	goto	l3574
 17152  0184B4                     l9725:
 17153                           
 17154                           ;stkvar	_l @ sp[(-4)+2]
 17155  0184B4  0EFE               	movlw	-2
 17156  0184B6  50E3               	movf	plusw1,w,c
 17157  0184B8  0F01               	addlw	1
 17158  0184BA  6E01               	movwf	btemp^0,c
 17159  0184BC  0EFE               	movlw	-2
 17160  0184BE  0060  F007  FFE3   	movff	btemp,plusw1
 17161  0184C4  6A01               	clrf	btemp^0,c
 17162  0184C6  0EFF               	movlw	-1
 17163  0184C8  50E3               	movf	plusw1,w,c
 17164  0184CA  2001               	addwfc	btemp^0,w,c
 17165  0184CC  6E01               	movwf	btemp^0,c
 17166  0184CE  0EFF               	movlw	-1
 17167  0184D0  0060  F007  FFE3   	movff	btemp,plusw1
 17168                           
 17169                           ;stkvar	_r @ sp[(-4)+0]
 17170  0184D6  0EFC               	movlw	-4
 17171  0184D8  50E3               	movf	plusw1,w,c
 17172  0184DA  0F01               	addlw	1
 17173  0184DC  6E01               	movwf	btemp^0,c
 17174  0184DE  0EFC               	movlw	-4
 17175  0184E0  0060  F007  FFE3   	movff	btemp,plusw1
 17176  0184E6  6A01               	clrf	btemp^0,c
 17177  0184E8  0EFD               	movlw	-3
 17178  0184EA  50E3               	movf	plusw1,w,c
 17179  0184EC  2001               	addwfc	btemp^0,w,c
 17180  0184EE  6E01               	movwf	btemp^0,c
 17181  0184F0  0EFD               	movlw	-3
 17182  0184F2  0060  F007  FFE3   	movff	btemp,plusw1
 17183                           
 17184                           ;stkvar	_n @ sp[(-4)+-6]
 17185  0184F8  0EF6               	movlw	-10
 17186  0184FA  006F FF8C  F001    	movff	plusw1,btemp
 17187  018500  0E01               	movlw	1
 17188  018502  5E01               	subwf	btemp^0,f,c
 17189  018504  0EF6               	movlw	-10
 17190  018506  0060  F007  FFE3   	movff	btemp,plusw1
 17191  01850C  0EF7               	movlw	-9
 17192  01850E  006F FF8C  F001    	movff	plusw1,btemp
 17193  018514  0E00               	movlw	0
 17194  018516  5A01               	subwfb	btemp^0,f,c
 17195  018518  0EF7               	movlw	-9
 17196  01851A  0060  F007  FFE3   	movff	btemp,plusw1
 17197  018520                     l9727:
 17198                           
 17199                           ;stkvar	_l @ sp[(-4)+2]
 17200  018520  0EFE               	movlw	-2
 17201  018522  006F FF8F FFF6     	movff	plusw1,tblptrl
 17202  018528  0EFF               	movlw	-1
 17203  01852A  006F FF8F FFF7     	movff	plusw1,tblptrh
 17204  018530  0E00               	movlw	low (__mediumconst shr (0+16))
 17205  018532  6EF8               	movwf	tblptru,c
 17206  018534  0E1F               	movlw	(high __ramtop+-1)
 17207  018536  64F7               	cpfsgt	tblptrh,c
 17208  018538  D003               	bra	u8847
 17209  01853A  0008               	tblrd		*
 17210  01853C  50F5               	movf	tablat,w,c
 17211  01853E  D007               	bra	u8840
 17212  018540                     u8847:
 17213  018540  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17214  018546  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17215  01854C  50EF               	movf	indf0,w,c
 17216  01854E                     u8840:
 17217  01854E  0900               	iorlw	0
 17218  018550  B4D8               	btfsc	status,2,c
 17219  018552  D04A               	goto	u8880
 17220                           
 17221                           ;stkvar	_r @ sp[(-4)+0]
 17222  018554  50E1               	movf	fsr1l,w,c
 17223  018556  0FFC               	addlw	-4
 17224  018558  6ED9               	movwf	fsr2l,c
 17225  01855A  50E2               	movf	fsr1h,w,c
 17226  01855C  6EDA               	movwf	fsr2h,c
 17227  01855E  0EFF               	movlw	255
 17228  018560  22DA               	addwfc	fsr2h,f,c
 17229  018562  006F FF7B FFF6     	movff	postinc2,tblptrl
 17230  018568  006F FF77 FFF7     	movff	postdec2,tblptrh
 17231  01856E                     	if	0	;tblptru may be non-zero
 17232  01856E                     	endif
 17233  01856E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17234  01856E  0E00               	movlw	low (__mediumconst shr (0+16))
 17235  018570  6EF8               	movwf	tblptru,c
 17236  018572                     	endif
 17237  018572  0008               	tblrd		*
 17238  018574  50F5               	movf	tablat,w,c
 17239  018576  0900               	iorlw	0
 17240  018578  B4D8               	btfsc	status,2,c
 17241  01857A  D036               	goto	u8880
 17242                           
 17243                           ;stkvar	_n @ sp[(-4)+-6]
 17244  01857C  0EF6               	movlw	-10
 17245  01857E  006F FF8C  F001    	movff	plusw1,btemp
 17246  018584  0EF7               	movlw	-9
 17247  018586  50E3               	movf	plusw1,w,c
 17248  018588  1001               	iorwf	btemp^0,w,c
 17249  01858A  B4D8               	btfsc	status,2,c
 17250  01858C  D02D               	goto	u8880
 17251                           
 17252                           ;stkvar	_r @ sp[(-4)+0]
 17253  01858E  50E1               	movf	fsr1l,w,c
 17254  018590  0FFC               	addlw	-4
 17255  018592  6ED9               	movwf	fsr2l,c
 17256  018594  50E2               	movf	fsr1h,w,c
 17257  018596  6EDA               	movwf	fsr2h,c
 17258  018598  0EFF               	movlw	255
 17259  01859A  22DA               	addwfc	fsr2h,f,c
 17260  01859C  006F FF7B FFF6     	movff	postinc2,tblptrl
 17261  0185A2  006F FF77 FFF7     	movff	postdec2,tblptrh
 17262  0185A8                     	if	0	;tblptru may be non-zero
 17263  0185A8                     	endif
 17264  0185A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17265  0185A8  0E00               	movlw	low (__mediumconst shr (0+16))
 17266  0185AA  6EF8               	movwf	tblptru,c
 17267  0185AC                     	endif
 17268  0185AC  0008               	tblrd		*
 17269  0185AE  006F FFD4  F00C    	movff	tablat,btemp+11
 17270                           
 17271                           ;stkvar	_l @ sp[(-4)+2]
 17272  0185B4  0EFE               	movlw	-2
 17273  0185B6  006F FF8F FFF6     	movff	plusw1,tblptrl
 17274  0185BC  0EFF               	movlw	-1
 17275  0185BE  006F FF8F FFF7     	movff	plusw1,tblptrh
 17276  0185C4  0E00               	movlw	low (__mediumconst shr (0+16))
 17277  0185C6  6EF8               	movwf	tblptru,c
 17278  0185C8  0E1F               	movlw	(high __ramtop+-1)
 17279  0185CA  64F7               	cpfsgt	tblptrh,c
 17280  0185CC  D003               	bra	u8887
 17281  0185CE  0008               	tblrd		*
 17282  0185D0  50F5               	movf	tablat,w,c
 17283  0185D2  D007               	bra	u8885
 17284  0185D4                     u8887:
 17285  0185D4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17286  0185DA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17287  0185E0  50EF               	movf	indf0,w,c
 17288  0185E2                     u8885:
 17289  0185E2  180C               	xorwf	(btemp+11)^0,w,c
 17290  0185E4  B4D8               	btfsc	status,2,c
 17291  0185E6  D766               	goto	l9725
 17292  0185E8                     u8880:
 17293                           
 17294                           ;stkvar	_l @ sp[(-4)+2]
 17295  0185E8  0EFE               	movlw	-2
 17296  0185EA  006F FF8F FFF6     	movff	plusw1,tblptrl
 17297  0185F0  0EFF               	movlw	-1
 17298  0185F2  006F FF8F FFF7     	movff	plusw1,tblptrh
 17299  0185F8  0E00               	movlw	low (__mediumconst shr (0+16))
 17300  0185FA  6EF8               	movwf	tblptru,c
 17301  0185FC  0E1F               	movlw	(high __ramtop+-1)
 17302  0185FE  64F7               	cpfsgt	tblptrh,c
 17303  018600  D003               	bra	u8897
 17304  018602  0008               	tblrd		*
 17305  018604  50F5               	movf	tablat,w,c
 17306  018606  D007               	bra	u8890
 17307  018608                     u8897:
 17308  018608  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17309  01860E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17310  018614  50EF               	movf	indf0,w,c
 17311  018616                     u8890:
 17312  018616  6E01               	movwf	btemp^0,c
 17313  018618  6A02               	clrf	(btemp+1)^0,c
 17314                           
 17315                           ;stkvar	_r @ sp[(-4)+0]
 17316  01861A  50E1               	movf	fsr1l,w,c
 17317  01861C  0FFC               	addlw	-4
 17318  01861E  6ED9               	movwf	fsr2l,c
 17319  018620  50E2               	movf	fsr1h,w,c
 17320  018622  6EDA               	movwf	fsr2h,c
 17321  018624  0EFF               	movlw	255
 17322  018626  22DA               	addwfc	fsr2h,f,c
 17323  018628  006F FF7B FFF6     	movff	postinc2,tblptrl
 17324  01862E  006F FF77 FFF7     	movff	postdec2,tblptrh
 17325  018634                     	if	0	;tblptru may be non-zero
 17326  018634                     	endif
 17327  018634                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17328  018634  0E00               	movlw	low (__mediumconst shr (0+16))
 17329  018636  6EF8               	movwf	tblptru,c
 17330  018638                     	endif
 17331  018638  0008               	tblrd		*
 17332  01863A  50F5               	movf	tablat,w,c
 17333  01863C  5E01               	subwf	btemp^0,f,c
 17334  01863E  0E00               	movlw	0
 17335  018640  5A02               	subwfb	(btemp+1)^0,f,c
 17336  018642                     l3574:
 17337                           
 17338                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 17339  018642  0EF6               	movlw	246
 17340  018644  26E1               	addwf	fsr1l,f,c
 17341  018646  0EFF               	movlw	255
 17342  018648  22E2               	addwfc	fsr1h,f,c
 17343  01864A  0012               	return		;funcret
 17344  01864C                     __end_of_strncmp:
 17345                           	opt callstack 0
 17346                           
 17347 ;; *************** function _stoa *****************
 17348 ;; Defined at:
 17349 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17350 ;; Parameters:    Size  Location     Type
 17351 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17352 ;;		 -> f(6), NULL(0), 
 17353 ;;  s               2  [STACK] PTR unsigned char 
 17354 ;;		 -> ?_printf(2), ?_sprintf(2), STR_60(9), STR_59(12), 
 17355 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 17356 ;;		 -> V(192), 
 17357 ;; Auto vars:     Size  Location     Type
 17358 ;;  nuls            7  [STACK] unsigned char [7]
 17359 ;;  l               2  [STACK] int 
 17360 ;;  p               2  [STACK] int 
 17361 ;;  cp              2  [STACK] PTR unsigned char 
 17362 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_60(9), 
 17363 ;;		 -> STR_59(12), D.lcd(480), D(482), T(144), 
 17364 ;;		 -> STR_3(5), V(192), 
 17365 ;;  w               2  [STACK] int 
 17366 ;;  i               2  [STACK] int 
 17367 ;; Return value:  Size  Location     Type
 17368 ;;                  2  [STACK] int 
 17369 ;; Registers used:
 17370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17371 ;; Tracked objects:
 17372 ;;		On entry : 0/0
 17373 ;;		On exit  : 0/0
 17374 ;;		Unchanged: 0/0
 17375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17380 ;;Total ram usage:        0 bytes
 17381 ;; Hardware stack levels used:    1
 17382 ;; Hardware stack levels required when called:   18
 17383 ;; This function calls:
 17384 ;;		_fputc
 17385 ;;		_strlen
 17386 ;; This function is called by:
 17387 ;;		_vfpfcnvrt
 17388 ;; This function uses a reentrant model
 17389 ;;
 17390                           
 17391                           	psect	text64
 17392  0177F4                     __ptext64:
 17393                           	opt callstack 0
 17394  0177F4                     _stoa:
 17395                           	opt callstack 0
 17396                           
 17397                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17398  0177F4  0E11               	movlw	17
 17399  0177F6  26E1               	addwf	fsr1l,f,c
 17400  0177F8  0E00               	movlw	0
 17401  0177FA  22E2               	addwfc	fsr1h,f,c
 17402                           
 17403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 17404                           
 17405                           ;incstack = 0
 17406 ;; hardware stack exceeded
 17407  0177FC  EE20  F100         	lfsr	2,stoa@F1166
 17408                           
 17409                           ;stkvar	_nuls @ sp[(-17)+0]
 17410  017800  0E07               	movlw	7
 17411  017802  6E01               	movwf	btemp^0,c
 17412  017804  0EEF               	movlw	-17
 17413  017806                     us1207999:
 17414  017806  006F FF7B FFE3     	movff	postinc2,plusw1
 17415  01780C  28E8               	incf	wreg,w,c
 17416  01780E  2E01               	decfsz	btemp^0,f,c
 17417  017810  D7FA               	bra	us1207999
 17418                           
 17419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 17420                           ;stkvar	_s @ sp[(-17)+-4]
 17421  017812  0EEB               	movlw	-21
 17422  017814  006F FF8C  F00B    	movff	plusw1,btemp+10
 17423  01781A  0EEC               	movlw	-20
 17424  01781C  006F FF8C  F00C    	movff	plusw1,btemp+11
 17425                           
 17426                           ;stkvar	_cp @ sp[(-17)+11]
 17427  017822  0EFB               	movlw	-5
 17428  017824  0060  F033  FFE3   	movff	btemp+11,plusw1
 17429  01782A  0EFA               	movlw	-6
 17430  01782C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17431                           
 17432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 17433                           ;stkvar	_cp @ sp[(-17)+11]
 17434  017832  0EFA               	movlw	-6
 17435  017834  006F FF8C  F001    	movff	plusw1,btemp
 17436  01783A  0EFB               	movlw	-5
 17437  01783C  50E3               	movf	plusw1,w,c
 17438  01783E  1001               	iorwf	btemp^0,w,c
 17439  017840  A4D8               	btfss	status,2,c
 17440  017842  D00E               	goto	l12899
 17441                           
 17442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 17443                           ;stkvar	_nuls @ sp[(-17)+0]
 17444  017844  0EEF               	movlw	239
 17445  017846  24E1               	addwf	fsr1l,w,c
 17446  017848  6E0B               	movwf	(btemp+10)^0,c
 17447  01784A  0EFF               	movlw	255
 17448  01784C  20E2               	addwfc	fsr1h,w,c
 17449  01784E  6E0C               	movwf	(btemp+11)^0,c
 17450                           
 17451                           ;stkvar	_cp @ sp[(-17)+11]
 17452  017850  0EFB               	movlw	-5
 17453  017852  0060  F033  FFE3   	movff	btemp+11,plusw1
 17454  017858  0EFA               	movlw	-6
 17455  01785A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17456  017860                     l12899:
 17457                           
 17458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 17459                           ;stkvar	_cp @ sp[(-17)+11]
 17460  017860  0EFA               	movlw	-6
 17461  017862  006F FF8F FFE6     	movff	plusw1,postinc1
 17462  017868  006F FF8F FFE6     	movff	plusw1,postinc1
 17463  01786E  ECD9  F0D8         	call	_strlen	;wreg free
 17464                           
 17465                           ;stkvar	_l @ sp[(-17)+7]
 17466  017872  0EF6               	movlw	-10
 17467  017874  0060  F007  FFE3   	movff	btemp,plusw1
 17468  01787A  0EF7               	movlw	-9
 17469  01787C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17470                           
 17471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 17472                           ;stkvar	_p @ sp[(-17)+9]
 17473  017882  0EF8               	movlw	-8
 17474  017884  0060  F0F3  FFE3   	movff	_prec,plusw1
 17475  01788A  0EF9               	movlw	-7
 17476  01788C  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 17477                           
 17478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 17479                           ;stkvar	_p @ sp[(-17)+9]
 17480  017892  0EF9               	movlw	-7
 17481  017894  BEE3               	btfsc	plusw1,7,c
 17482  017896  D023               	goto	l2399
 17483                           
 17484                           ;stkvar	_l @ sp[(-17)+7]
 17485                           ;stkvar	_p @ sp[(-17)+9]
 17486  017898  50E1               	movf	fsr1l,w,c
 17487  01789A  0FF8               	addlw	-8
 17488  01789C  6ED9               	movwf	fsr2l,c
 17489  01789E  50E2               	movf	fsr1h,w,c
 17490  0178A0  6EDA               	movwf	fsr2h,c
 17491  0178A2  0EFF               	movlw	255
 17492  0178A4  22DA               	addwfc	fsr2h,f,c
 17493  0178A6  0EF6               	movlw	-10
 17494  0178A8  50E3               	movf	plusw1,w,c
 17495  0178AA  5CDE               	subwf	postinc2,w,c
 17496  0178AC  50DE               	movf	postinc2,w,c
 17497  0178AE  0A80               	xorlw	128
 17498  0178B0  6E01               	movwf	btemp^0,c
 17499  0178B2  0EF7               	movlw	-9
 17500  0178B4  50E3               	movf	plusw1,w,c
 17501  0178B6  0A80               	xorlw	128
 17502  0178B8  5801               	subwfb	btemp^0,w,c
 17503  0178BA  B0D8               	btfsc	status,0,c
 17504  0178BC  D010               	goto	l2399
 17505                           
 17506                           ;stkvar	_p @ sp[(-17)+9]
 17507                           ;stkvar	_l @ sp[(-17)+7]
 17508  0178BE  0EF8               	movlw	-8
 17509  0178C0  006F FF8C  F001    	movff	plusw1,btemp
 17510  0178C6  0EF6               	movlw	-10
 17511  0178C8  0060  F007  FFE3   	movff	btemp,plusw1
 17512  0178CE  0EF9               	movlw	-7
 17513  0178D0  006F FF8C  F001    	movff	plusw1,btemp
 17514  0178D6  0EF7               	movlw	-9
 17515  0178D8  0060  F007  FFE3   	movff	btemp,plusw1
 17516  0178DE                     l2399:
 17517                           
 17518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 17519                           ;stkvar	_l @ sp[(-17)+7]
 17520                           ;stkvar	_p @ sp[(-17)+9]
 17521  0178DE  0EF6               	movlw	-10
 17522  0178E0  006F FF8C  F001    	movff	plusw1,btemp
 17523  0178E6  0EF8               	movlw	-8
 17524  0178E8  0060  F007  FFE3   	movff	btemp,plusw1
 17525  0178EE  0EF7               	movlw	-9
 17526  0178F0  006F FF8C  F001    	movff	plusw1,btemp
 17527  0178F6  0EF9               	movlw	-7
 17528  0178F8  0060  F007  FFE3   	movff	btemp,plusw1
 17529                           
 17530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 17531                           ;stkvar	_w @ sp[(-17)+13]
 17532  0178FE  0EFC               	movlw	-4
 17533  017900  0060  F0EB  FFE3   	movff	_width,plusw1
 17534  017906  0EFD               	movlw	-3
 17535  017908  0060  F0EF  FFE3   	movff	_width+1,plusw1
 17536                           
 17537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 17538  01790E  A03E               	btfss	_flags^0,0,c
 17539  017910  D01F               	goto	l12919
 17540  017912  D031               	goto	u12120
 17541  017914                     l12915:
 17542                           
 17543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 17544                           ;stkvar	_fp @ sp[(-17)+-2]
 17545  017914  0EED               	movlw	-19
 17546  017916  006F FF8F FFE6     	movff	plusw1,postinc1
 17547  01791C  006F FF8F FFE6     	movff	plusw1,postinc1
 17548  017922  0E20               	movlw	32
 17549  017924  6EE6               	movwf	postinc1,c
 17550  017926  0E00               	movlw	0
 17551  017928  6EE6               	movwf	postinc1,c
 17552  01792A  EC72  F0CF         	call	_fputc	;wreg free
 17553                           
 17554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 17555                           ;stkvar	_l @ sp[(-17)+7]
 17556  01792E  0EF6               	movlw	-10
 17557  017930  50E3               	movf	plusw1,w,c
 17558  017932  0F01               	addlw	1
 17559  017934  6E01               	movwf	btemp^0,c
 17560  017936  0EF6               	movlw	-10
 17561  017938  0060  F007  FFE3   	movff	btemp,plusw1
 17562  01793E  6A01               	clrf	btemp^0,c
 17563  017940  0EF7               	movlw	-9
 17564  017942  50E3               	movf	plusw1,w,c
 17565  017944  2001               	addwfc	btemp^0,w,c
 17566  017946  6E01               	movwf	btemp^0,c
 17567  017948  0EF7               	movlw	-9
 17568  01794A  0060  F007  FFE3   	movff	btemp,plusw1
 17569  017950                     l12919:
 17570                           
 17571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 17572                           ;stkvar	_w @ sp[(-17)+13]
 17573                           ;stkvar	_l @ sp[(-17)+7]
 17574  017950  50E1               	movf	fsr1l,w,c
 17575  017952  0FF6               	addlw	-10
 17576  017954  6ED9               	movwf	fsr2l,c
 17577  017956  50E2               	movf	fsr1h,w,c
 17578  017958  6EDA               	movwf	fsr2h,c
 17579  01795A  0EFF               	movlw	255
 17580  01795C  22DA               	addwfc	fsr2h,f,c
 17581  01795E  0EFC               	movlw	-4
 17582  017960  50E3               	movf	plusw1,w,c
 17583  017962  5CDE               	subwf	postinc2,w,c
 17584  017964  50DE               	movf	postinc2,w,c
 17585  017966  0A80               	xorlw	128
 17586  017968  6E01               	movwf	btemp^0,c
 17587  01796A  0EFD               	movlw	-3
 17588  01796C  50E3               	movf	plusw1,w,c
 17589  01796E  0A80               	xorlw	128
 17590  017970  5801               	subwfb	btemp^0,w,c
 17591  017972  A0D8               	btfss	status,0,c
 17592  017974  D7CF               	goto	l12915
 17593  017976                     u12120:
 17594                           
 17595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 17596                           ;stkvar	_i @ sp[(-17)+15]
 17597  017976  0EFE               	movlw	-2
 17598  017978  6AE3               	clrf	plusw1,c
 17599  01797A  0EFF               	movlw	-1
 17600  01797C  6AE3               	clrf	plusw1,c
 17601                           
 17602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 17603  01797E  D045               	goto	l12929
 17604  017980                     l12923:
 17605                           
 17606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 17607                           ;stkvar	_fp @ sp[(-17)+-2]
 17608  017980  0EED               	movlw	-19
 17609  017982  006F FF8F FFE6     	movff	plusw1,postinc1
 17610  017988  006F FF8F FFE6     	movff	plusw1,postinc1
 17611                           
 17612                           ;stkvar	_cp @ sp[(-19)+11]
 17613  01798E  0EF8               	movlw	-8
 17614  017990  006F FF8F FFF6     	movff	plusw1,tblptrl
 17615  017996  0EF9               	movlw	-7
 17616  017998  006F FF8F FFF7     	movff	plusw1,tblptrh
 17617  01799E  0E00               	movlw	low (__mediumconst shr (0+16))
 17618  0179A0  6EF8               	movwf	tblptru,c
 17619  0179A2  0E1F               	movlw	(high __ramtop+-1)
 17620  0179A4  64F7               	cpfsgt	tblptrh,c
 17621  0179A6  D003               	bra	u12137
 17622  0179A8  0008               	tblrd		*
 17623  0179AA  50F5               	movf	tablat,w,c
 17624  0179AC  D007               	bra	u12130
 17625  0179AE                     u12137:
 17626  0179AE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17627  0179B4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17628  0179BA  50EF               	movf	indf0,w,c
 17629  0179BC                     u12130:
 17630  0179BC  6EE6               	movwf	postinc1,c
 17631  0179BE  0E00               	movlw	0
 17632  0179C0  6EE6               	movwf	postinc1,c
 17633  0179C2  EC72  F0CF         	call	_fputc	;wreg free
 17634                           
 17635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 17636                           ;stkvar	_cp @ sp[(-17)+11]
 17637  0179C6  0EFA               	movlw	-6
 17638  0179C8  50E3               	movf	plusw1,w,c
 17639  0179CA  0F01               	addlw	1
 17640  0179CC  6E01               	movwf	btemp^0,c
 17641  0179CE  0EFA               	movlw	-6
 17642  0179D0  0060  F007  FFE3   	movff	btemp,plusw1
 17643  0179D6  6A01               	clrf	btemp^0,c
 17644  0179D8  0EFB               	movlw	-5
 17645  0179DA  50E3               	movf	plusw1,w,c
 17646  0179DC  2001               	addwfc	btemp^0,w,c
 17647  0179DE  6E01               	movwf	btemp^0,c
 17648  0179E0  0EFB               	movlw	-5
 17649  0179E2  0060  F007  FFE3   	movff	btemp,plusw1
 17650                           
 17651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 17652                           ;stkvar	_i @ sp[(-17)+15]
 17653  0179E8  0EFE               	movlw	-2
 17654  0179EA  50E3               	movf	plusw1,w,c
 17655  0179EC  0F01               	addlw	1
 17656  0179EE  6E01               	movwf	btemp^0,c
 17657  0179F0  0EFE               	movlw	-2
 17658  0179F2  0060  F007  FFE3   	movff	btemp,plusw1
 17659  0179F8  6A01               	clrf	btemp^0,c
 17660  0179FA  0EFF               	movlw	-1
 17661  0179FC  50E3               	movf	plusw1,w,c
 17662  0179FE  2001               	addwfc	btemp^0,w,c
 17663  017A00  6E01               	movwf	btemp^0,c
 17664  017A02  0EFF               	movlw	-1
 17665  017A04  0060  F007  FFE3   	movff	btemp,plusw1
 17666  017A0A                     l12929:
 17667                           
 17668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 17669                           ;stkvar	_p @ sp[(-17)+9]
 17670                           ;stkvar	_i @ sp[(-17)+15]
 17671  017A0A  50E1               	movf	fsr1l,w,c
 17672  017A0C  0FFE               	addlw	-2
 17673  017A0E  6ED9               	movwf	fsr2l,c
 17674  017A10  50E2               	movf	fsr1h,w,c
 17675  017A12  6EDA               	movwf	fsr2h,c
 17676  017A14  0EFF               	movlw	255
 17677  017A16  22DA               	addwfc	fsr2h,f,c
 17678  017A18  0EF8               	movlw	-8
 17679  017A1A  50E3               	movf	plusw1,w,c
 17680  017A1C  5CDE               	subwf	postinc2,w,c
 17681  017A1E  50DE               	movf	postinc2,w,c
 17682  017A20  0A80               	xorlw	128
 17683  017A22  6E01               	movwf	btemp^0,c
 17684  017A24  0EF9               	movlw	-7
 17685  017A26  50E3               	movf	plusw1,w,c
 17686  017A28  0A80               	xorlw	128
 17687  017A2A  5801               	subwfb	btemp^0,w,c
 17688  017A2C  A0D8               	btfss	status,0,c
 17689  017A2E  D7A8               	goto	l12923
 17690                           
 17691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 17692  017A30  B03E               	btfsc	_flags^0,0,c
 17693  017A32  D01F               	goto	l12937
 17694  017A34  D031               	goto	u12160
 17695  017A36                     l12933:
 17696                           
 17697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 17698                           ;stkvar	_fp @ sp[(-17)+-2]
 17699  017A36  0EED               	movlw	-19
 17700  017A38  006F FF8F FFE6     	movff	plusw1,postinc1
 17701  017A3E  006F FF8F FFE6     	movff	plusw1,postinc1
 17702  017A44  0E20               	movlw	32
 17703  017A46  6EE6               	movwf	postinc1,c
 17704  017A48  0E00               	movlw	0
 17705  017A4A  6EE6               	movwf	postinc1,c
 17706  017A4C  EC72  F0CF         	call	_fputc	;wreg free
 17707                           
 17708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 17709                           ;stkvar	_l @ sp[(-17)+7]
 17710  017A50  0EF6               	movlw	-10
 17711  017A52  50E3               	movf	plusw1,w,c
 17712  017A54  0F01               	addlw	1
 17713  017A56  6E01               	movwf	btemp^0,c
 17714  017A58  0EF6               	movlw	-10
 17715  017A5A  0060  F007  FFE3   	movff	btemp,plusw1
 17716  017A60  6A01               	clrf	btemp^0,c
 17717  017A62  0EF7               	movlw	-9
 17718  017A64  50E3               	movf	plusw1,w,c
 17719  017A66  2001               	addwfc	btemp^0,w,c
 17720  017A68  6E01               	movwf	btemp^0,c
 17721  017A6A  0EF7               	movlw	-9
 17722  017A6C  0060  F007  FFE3   	movff	btemp,plusw1
 17723  017A72                     l12937:
 17724                           
 17725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 17726                           ;stkvar	_w @ sp[(-17)+13]
 17727                           ;stkvar	_l @ sp[(-17)+7]
 17728  017A72  50E1               	movf	fsr1l,w,c
 17729  017A74  0FF6               	addlw	-10
 17730  017A76  6ED9               	movwf	fsr2l,c
 17731  017A78  50E2               	movf	fsr1h,w,c
 17732  017A7A  6EDA               	movwf	fsr2h,c
 17733  017A7C  0EFF               	movlw	255
 17734  017A7E  22DA               	addwfc	fsr2h,f,c
 17735  017A80  0EFC               	movlw	-4
 17736  017A82  50E3               	movf	plusw1,w,c
 17737  017A84  5CDE               	subwf	postinc2,w,c
 17738  017A86  50DE               	movf	postinc2,w,c
 17739  017A88  0A80               	xorlw	128
 17740  017A8A  6E01               	movwf	btemp^0,c
 17741  017A8C  0EFD               	movlw	-3
 17742  017A8E  50E3               	movf	plusw1,w,c
 17743  017A90  0A80               	xorlw	128
 17744  017A92  5801               	subwfb	btemp^0,w,c
 17745  017A94  A0D8               	btfss	status,0,c
 17746  017A96  D7CF               	goto	l12933
 17747  017A98                     u12160:
 17748                           
 17749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 17750                           ;stkvar	_l @ sp[(-17)+7]
 17751  017A98  0EF6               	movlw	-10
 17752  017A9A  006F FF8C  F001    	movff	plusw1,btemp
 17753  017AA0  0EF7               	movlw	-9
 17754  017AA2  006F FF8C  F002    	movff	plusw1,btemp+1
 17755                           
 17756                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 17757  017AA8  0EEB               	movlw	235
 17758  017AAA  26E1               	addwf	fsr1l,f,c
 17759  017AAC  0EFF               	movlw	255
 17760  017AAE  22E2               	addwfc	fsr1h,f,c
 17761  017AB0  0012               	return		;funcret
 17762  017AB2                     __end_of_stoa:
 17763                           	opt callstack 0
 17764                           
 17765 ;; *************** function _efgtoa *****************
 17766 ;; Defined at:
 17767 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17768 ;; Parameters:    Size  Location     Type
 17769 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17770 ;;		 -> f(6), NULL(0), 
 17771 ;;  f               4  [STACK] PTR struct _IO_FILE
 17772 ;;  c               1  [STACK] unsigned char 
 17773 ;; Auto vars:     Size  Location     Type
 17774 ;;  u               4  [STACK] unsigned char 
 17775 ;;  g               4  [STACK] unsigned char 
 17776 ;;  l               4  [STACK] unsigned char 
 17777 ;;  h               4  [STACK] unsigned char 
 17778 ;;  ou              4  [STACK] unsigned char 
 17779 ;;  n               2  [STACK] int 
 17780 ;;  e               2  [STACK] int 
 17781 ;;  i               2  [STACK] int 
 17782 ;;  w               2  [STACK] int 
 17783 ;;  p               2  [STACK] int 
 17784 ;;  sign            2  [STACK] int 
 17785 ;;  d               2  [STACK] int 
 17786 ;;  ne              2  [STACK] int 
 17787 ;;  m               2  [STACK] int 
 17788 ;;  pp              2  [STACK] int 
 17789 ;;  t               2  [STACK] int 
 17790 ;;  mode            1  [STACK] unsigned char 
 17791 ;;  nmode           1  [STACK] unsigned char 
 17792 ;; Return value:  Size  Location     Type
 17793 ;;                  2  [STACK] int 
 17794 ;; Registers used:
 17795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 17796 ;; Tracked objects:
 17797 ;;		On entry : 0/0
 17798 ;;		On exit  : 0/0
 17799 ;;		Unchanged: 0/0
 17800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17805 ;;Total ram usage:        0 bytes
 17806 ;; Hardware stack levels used:    1
 17807 ;; Hardware stack levels required when called:   20
 17808 ;; This function calls:
 17809 ;;		___awdiv
 17810 ;;		___awmod
 17811 ;;		___fladd
 17812 ;;		___fldiv
 17813 ;;		___fleq
 17814 ;;		___flge
 17815 ;;		___flmul
 17816 ;;		___flneg
 17817 ;;		___flsub
 17818 ;;		___fltol
 17819 ;;		___fpclassifyf
 17820 ;;		_floorf
 17821 ;;		_isupper
 17822 ;;		_pad
 17823 ;;		_strcpy
 17824 ;;		_tolower
 17825 ;; This function is called by:
 17826 ;;		_vfpfcnvrt
 17827 ;; This function uses a reentrant model
 17828 ;;
 17829                           
 17830                           	psect	text65
 17831  010000                     __ptext65:
 17832                           	opt callstack 0
 17833  010000                     _efgtoa:
 17834                           	opt callstack 0
 17835                           
 17836                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17837  010000  0E38               	movlw	56
 17838  010002  26E1               	addwf	fsr1l,f,c
 17839  010004  0E00               	movlw	0
 17840  010006  22E2               	addwfc	fsr1h,f,c
 17841                           
 17842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 17843                           ;stkvar	_sign @ sp[(-56)+42]
 17844                           
 17845                           ;incstack = 0
 17846 ;; hardware stack exceeded
 17847  010008  0EF2               	movlw	-14
 17848  01000A  6AE3               	clrf	plusw1,c
 17849  01000C  0EF3               	movlw	-13
 17850  01000E  6AE3               	clrf	plusw1,c
 17851                           
 17852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 17853                           ;stkvar	_f @ sp[(-56)+-6]
 17854  010010  0EC2               	movlw	-62
 17855  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 17856  010018  0EC3               	movlw	-61
 17857  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 17858  010020  0EC4               	movlw	-60
 17859  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 17860  010028  0EC5               	movlw	-59
 17861  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 17862                           
 17863                           ;stkvar	_g @ sp[(-56)+16]
 17864  010030  0ED8               	movlw	-40
 17865  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 17866  010038  0ED9               	movlw	-39
 17867  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17868  010040  0EDA               	movlw	-38
 17869  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17870  010048  0EDB               	movlw	-37
 17871  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 17872                           
 17873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 17874                           ;stkvar	_g @ sp[(-56)+16]
 17875  010050  0EDB               	movlw	-37
 17876  010052  AEE3               	btfss	plusw1,7,c
 17877  010054  D02B               	goto	l12597
 17878                           
 17879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 17880  010056  0E01               	movlw	1
 17881  010058  6E0B               	movwf	(btemp+10)^0,c
 17882  01005A  0E00               	movlw	0
 17883  01005C  6E0C               	movwf	(btemp+11)^0,c
 17884                           
 17885                           ;stkvar	_sign @ sp[(-56)+42]
 17886  01005E  0EF2               	movlw	-14
 17887  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17888  010066  0EF3               	movlw	-13
 17889  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 17890                           
 17891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 17892                           ;stkvar	_g @ sp[(-56)+16]
 17893  01006E  0ED8               	movlw	-40
 17894  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 17895  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 17896  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 17897  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 17898  010088  EC15  F0DF         	call	___flneg	;wreg free
 17899                           
 17900                           ;stkvar	_g @ sp[(-56)+16]
 17901  01008C  0ED8               	movlw	-40
 17902  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 17903  010094  0ED9               	movlw	-39
 17904  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17905  01009C  0EDA               	movlw	-38
 17906  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17907  0100A4  0EDB               	movlw	-37
 17908  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 17909  0100AC                     l12597:
 17910                           
 17911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 17912                           ;stkvar	_n @ sp[(-56)+32]
 17913  0100AC  0EE8               	movlw	-24
 17914  0100AE  6AE3               	clrf	plusw1,c
 17915  0100B0  0EE9               	movlw	-23
 17916  0100B2  6AE3               	clrf	plusw1,c
 17917                           
 17918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 17919                           ;stkvar	_w @ sp[(-56)+38]
 17920  0100B4  0EEE               	movlw	-18
 17921  0100B6  0060  F0EB  FFE3   	movff	_width,plusw1
 17922  0100BC  0EEF               	movlw	-17
 17923  0100BE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 17924                           
 17925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 17926                           ;stkvar	_sign @ sp[(-56)+42]
 17927  0100C4  0EF2               	movlw	-14
 17928  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 17929  0100CC  0EF3               	movlw	-13
 17930  0100CE  50E3               	movf	plusw1,w,c
 17931  0100D0  1001               	iorwf	btemp^0,w,c
 17932  0100D2  A4D8               	btfss	status,2,c
 17933  0100D4  D002               	goto	u11570
 17934  0100D6  A43E               	btfss	_flags^0,2,c
 17935  0100D8  D036               	goto	l12617
 17936  0100DA                     u11570:
 17937                           
 17938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 17939                           ;stkvar	_sign @ sp[(-56)+42]
 17940  0100DA  0EF2               	movlw	-14
 17941  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 17942  0100E2  0EF3               	movlw	-13
 17943  0100E4  50E3               	movf	plusw1,w,c
 17944  0100E6  1001               	iorwf	btemp^0,w,c
 17945  0100E8  A4D8               	btfss	status,2,c
 17946  0100EA  D002               	goto	l12609
 17947  0100EC  0E2B               	movlw	43
 17948  0100EE  D001               	goto	L19
 17949  0100F0                     l12609:
 17950  0100F0  0E2D               	movlw	45
 17951  0100F2                     L19:
 17952  0100F2  6E0B               	movwf	(btemp+10)^0,c
 17953  0100F4  0E00               	movlw	0
 17954  0100F6  6E0C               	movwf	(btemp+11)^0,c
 17955                           
 17956                           ;stkvar	_efgtoa$5857 @ sp[(-56)+10]
 17957  0100F8  0ED2               	movlw	-46
 17958  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17959  010100  0ED3               	movlw	-45
 17960  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 17961                           
 17962                           ;stkvar	_efgtoa$5857 @ sp[(-56)+10]
 17963  010108  0ED2               	movlw	-46
 17964  01010A  006F FF8C  F297    	movff	plusw1,_dbuf
 17965                           
 17966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 17967                           ;stkvar	_n @ sp[(-56)+32]
 17968  010110  0EE8               	movlw	-24
 17969  010112  50E3               	movf	plusw1,w,c
 17970  010114  0F01               	addlw	1
 17971  010116  6E01               	movwf	btemp^0,c
 17972  010118  0EE8               	movlw	-24
 17973  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 17974  010120  6A01               	clrf	btemp^0,c
 17975  010122  0EE9               	movlw	-23
 17976  010124  50E3               	movf	plusw1,w,c
 17977  010126  2001               	addwfc	btemp^0,w,c
 17978  010128  6E01               	movwf	btemp^0,c
 17979  01012A  0EE9               	movlw	-23
 17980  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 17981                           
 17982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 17983                           ;stkvar	_w @ sp[(-56)+38]
 17984  010132  50E1               	movf	fsr1l,w,c
 17985  010134  0FEE               	addlw	-18
 17986  010136  6ED9               	movwf	fsr2l,c
 17987  010138  50E2               	movf	fsr1h,w,c
 17988  01013A  6EDA               	movwf	fsr2h,c
 17989  01013C  0EFF               	movlw	255
 17990  01013E  22DA               	addwfc	fsr2h,f,c
 17991  010140  06DE               	decf	postinc2,f,c
 17992  010142  0E00               	movlw	0
 17993  010144  5ADD               	subwfb	postdec2,f,c
 17994  010146                     l12617:
 17995                           
 17996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 17997                           ;stkvar	_g @ sp[(-56)+16]
 17998  010146  0ED8               	movlw	-40
 17999  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 18000  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 18001  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 18002  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 18003  010160  ECED  F0C7         	call	___fpclassifyf	;wreg free
 18004  010164  0401               	decf	btemp^0,w,c
 18005  010166  1002               	iorwf	(btemp+1)^0,w,c
 18006  010168  A4D8               	btfss	status,2,c
 18007  01016A  D076               	goto	l12635
 18008  01016C  0EBF               	movlw	191
 18009  01016E  6E0B               	movwf	(btemp+10)^0,c
 18010  010170  0EFF               	movlw	255
 18011  010172  6E0C               	movwf	(btemp+11)^0,c
 18012                           
 18013                           ;stkvar	_c @ sp[(-56)+-7]
 18014  010174  0EC1               	movlw	-63
 18015  010176  50E3               	movf	plusw1,w,c
 18016  010178  6E09               	movwf	(btemp+8)^0,c
 18017  01017A  6A0A               	clrf	(btemp+9)^0,c
 18018  01017C  500B               	movf	(btemp+10)^0,w,c
 18019  01017E  2609               	addwf	(btemp+8)^0,f,c
 18020  010180  500C               	movf	(btemp+11)^0,w,c
 18021  010182  220A               	addwfc	(btemp+9)^0,f,c
 18022  010184  500A               	movf	(btemp+9)^0,w,c
 18023  010186  E106               	bnz	u11600
 18024  010188  0E1A               	movlw	26
 18025  01018A  5C09               	subwf	(btemp+8)^0,w,c
 18026  01018C  B0D8               	btfsc	status,0,c
 18027  01018E  D002               	goto	u11600
 18028  010190  0E01               	movlw	1
 18029  010192  D001               	goto	u11610
 18030  010194                     u11600:
 18031  010194  0E00               	movlw	0
 18032  010196                     u11610:
 18033  010196  6E0B               	movwf	(btemp+10)^0,c
 18034  010198  6A0C               	clrf	(btemp+11)^0,c
 18035                           
 18036                           ;stkvar	_efgtoa$5858 @ sp[(-56)+8]
 18037  01019A  0ED0               	movlw	-48
 18038  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18039  0101A2  0ED1               	movlw	-47
 18040  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18041                           
 18042                           ;stkvar	_efgtoa$5858 @ sp[(-56)+8]
 18043  0101AA  0ED0               	movlw	-48
 18044  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 18045  0101B2  0ED1               	movlw	-47
 18046  0101B4  50E3               	movf	plusw1,w,c
 18047  0101B6  1001               	iorwf	btemp^0,w,c
 18048  0101B8  B4D8               	btfsc	status,2,c
 18049  0101BA  D017               	goto	l12627
 18050                           
 18051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 18052  0101BC  0ED6               	movlw	low STR_79
 18053  0101BE  6EE6               	movwf	postinc1,c
 18054  0101C0  0EFF               	movlw	high STR_79
 18055  0101C2  6EE6               	movwf	postinc1,c
 18056                           
 18057                           ;stkvar	_n @ sp[(-58)+32]
 18058  0101C4  0E97               	movlw	low _dbuf
 18059  0101C6  6E0B               	movwf	(btemp+10)^0,c
 18060  0101C8  0E02               	movlw	high _dbuf
 18061  0101CA  6E0C               	movwf	(btemp+11)^0,c
 18062  0101CC  0EE6               	movlw	-26
 18063  0101CE  50E3               	movf	plusw1,w,c
 18064  0101D0  260B               	addwf	(btemp+10)^0,f,c
 18065  0101D2  0EE7               	movlw	-25
 18066  0101D4  50E3               	movf	plusw1,w,c
 18067  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 18068  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18069  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 18070  0101E4  EC85  F0D4         	call	_strcpy	;wreg free
 18071                           
 18072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 18073  0101E8  D016               	goto	l12629
 18074  0101EA                     l12627:
 18075                           
 18076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 18077  0101EA  0EDE               	movlw	low STR_80
 18078  0101EC  6EE6               	movwf	postinc1,c
 18079  0101EE  0EFF               	movlw	high STR_80
 18080  0101F0  6EE6               	movwf	postinc1,c
 18081                           
 18082                           ;stkvar	_n @ sp[(-58)+32]
 18083  0101F2  0E97               	movlw	low _dbuf
 18084  0101F4  6E0B               	movwf	(btemp+10)^0,c
 18085  0101F6  0E02               	movlw	high _dbuf
 18086  0101F8  6E0C               	movwf	(btemp+11)^0,c
 18087  0101FA  0EE6               	movlw	-26
 18088  0101FC  50E3               	movf	plusw1,w,c
 18089  0101FE  260B               	addwf	(btemp+10)^0,f,c
 18090  010200  0EE7               	movlw	-25
 18091  010202  50E3               	movf	plusw1,w,c
 18092  010204  220C               	addwfc	(btemp+11)^0,f,c
 18093  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18094  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 18095  010212  EC85  F0D4         	call	_strcpy	;wreg free
 18096  010216                     l12629:
 18097                           
 18098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 18099                           ;stkvar	_w @ sp[(-56)+38]
 18100  010216  50E1               	movf	fsr1l,w,c
 18101  010218  0FEE               	addlw	-18
 18102  01021A  6ED9               	movwf	fsr2l,c
 18103  01021C  50E2               	movf	fsr1h,w,c
 18104  01021E  6EDA               	movwf	fsr2h,c
 18105  010220  0EFF               	movlw	255
 18106  010222  22DA               	addwfc	fsr2h,f,c
 18107  010224  0EFD               	movlw	253
 18108  010226  26DE               	addwf	postinc2,f,c
 18109  010228  0EFF               	movlw	255
 18110  01022A  22DD               	addwfc	postdec2,f,c
 18111  01022C                     l12631:
 18112                           
 18113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 18114                           ;stkvar	_w @ sp[(-56)+38]
 18115  01022C  0EEE               	movlw	-18
 18116  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 18117  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 18118  01023A  0E97               	movlw	low _dbuf
 18119  01023C  6EE6               	movwf	postinc1,c
 18120  01023E  0E02               	movlw	high _dbuf
 18121  010240  6EE6               	movwf	postinc1,c
 18122                           
 18123                           ;stkvar	_fp @ sp[(-60)+-2]
 18124  010242  0EC2               	movlw	-62
 18125  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 18126  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 18127  010250  EC1C  F0D1         	call	_pad	;wreg free
 18128  010254  EF1D  F089         	goto	l2317
 18129  010258                     l12635:
 18130                           
 18131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 18132                           ;stkvar	_g @ sp[(-56)+16]
 18133  010258  0ED8               	movlw	-40
 18134  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 18135  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 18136  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 18137  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 18138  010272  ECED  F0C7         	call	___fpclassifyf	;wreg free
 18139  010276  5001               	movf	btemp^0,w,c
 18140  010278  1002               	iorwf	(btemp+1)^0,w,c
 18141  01027A  A4D8               	btfss	status,2,c
 18142  01027C  D056               	goto	l12653
 18143  01027E  0EBF               	movlw	191
 18144  010280  6E0B               	movwf	(btemp+10)^0,c
 18145  010282  0EFF               	movlw	255
 18146  010284  6E0C               	movwf	(btemp+11)^0,c
 18147                           
 18148                           ;stkvar	_c @ sp[(-56)+-7]
 18149  010286  0EC1               	movlw	-63
 18150  010288  50E3               	movf	plusw1,w,c
 18151  01028A  6E09               	movwf	(btemp+8)^0,c
 18152  01028C  6A0A               	clrf	(btemp+9)^0,c
 18153  01028E  500B               	movf	(btemp+10)^0,w,c
 18154  010290  2609               	addwf	(btemp+8)^0,f,c
 18155  010292  500C               	movf	(btemp+11)^0,w,c
 18156  010294  220A               	addwfc	(btemp+9)^0,f,c
 18157  010296  500A               	movf	(btemp+9)^0,w,c
 18158  010298  E106               	bnz	u11640
 18159  01029A  0E1A               	movlw	26
 18160  01029C  5C09               	subwf	(btemp+8)^0,w,c
 18161  01029E  B0D8               	btfsc	status,0,c
 18162  0102A0  D002               	goto	u11640
 18163  0102A2  0E01               	movlw	1
 18164  0102A4  D001               	goto	u11650
 18165  0102A6                     u11640:
 18166  0102A6  0E00               	movlw	0
 18167  0102A8                     u11650:
 18168  0102A8  6E0B               	movwf	(btemp+10)^0,c
 18169  0102AA  6A0C               	clrf	(btemp+11)^0,c
 18170                           
 18171                           ;stkvar	_efgtoa$5862 @ sp[(-56)+6]
 18172  0102AC  0ECE               	movlw	-50
 18173  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18174  0102B4  0ECF               	movlw	-49
 18175  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 18176                           
 18177                           ;stkvar	_efgtoa$5862 @ sp[(-56)+6]
 18178  0102BC  0ECE               	movlw	-50
 18179  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 18180  0102C4  0ECF               	movlw	-49
 18181  0102C6  50E3               	movf	plusw1,w,c
 18182  0102C8  1001               	iorwf	btemp^0,w,c
 18183  0102CA  B4D8               	btfsc	status,2,c
 18184  0102CC  D017               	goto	l12645
 18185                           
 18186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 18187  0102CE  0EDA               	movlw	low STR_83
 18188  0102D0  6EE6               	movwf	postinc1,c
 18189  0102D2  0EFF               	movlw	high STR_83
 18190  0102D4  6EE6               	movwf	postinc1,c
 18191                           
 18192                           ;stkvar	_n @ sp[(-58)+32]
 18193  0102D6  0E97               	movlw	low _dbuf
 18194  0102D8  6E0B               	movwf	(btemp+10)^0,c
 18195  0102DA  0E02               	movlw	high _dbuf
 18196  0102DC  6E0C               	movwf	(btemp+11)^0,c
 18197  0102DE  0EE6               	movlw	-26
 18198  0102E0  50E3               	movf	plusw1,w,c
 18199  0102E2  260B               	addwf	(btemp+10)^0,f,c
 18200  0102E4  0EE7               	movlw	-25
 18201  0102E6  50E3               	movf	plusw1,w,c
 18202  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 18203  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18204  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 18205  0102F6  EC85  F0D4         	call	_strcpy	;wreg free
 18206                           
 18207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 18208  0102FA  D78D               	goto	l12629
 18209  0102FC                     l12645:
 18210                           
 18211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 18212  0102FC  0EE2               	movlw	low STR_84
 18213  0102FE  6EE6               	movwf	postinc1,c
 18214  010300  0EFF               	movlw	high STR_84
 18215  010302  6EE6               	movwf	postinc1,c
 18216                           
 18217                           ;stkvar	_n @ sp[(-58)+32]
 18218  010304  0E97               	movlw	low _dbuf
 18219  010306  6E0B               	movwf	(btemp+10)^0,c
 18220  010308  0E02               	movlw	high _dbuf
 18221  01030A  6E0C               	movwf	(btemp+11)^0,c
 18222  01030C  0EE6               	movlw	-26
 18223  01030E  50E3               	movf	plusw1,w,c
 18224  010310  260B               	addwf	(btemp+10)^0,f,c
 18225  010312  0EE7               	movlw	-25
 18226  010314  50E3               	movf	plusw1,w,c
 18227  010316  220C               	addwfc	(btemp+11)^0,f,c
 18228  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18229  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 18230  010324  EC85  F0D4         	call	_strcpy	;wreg free
 18231  010328  D776               	goto	l12629
 18232  01032A                     l12653:
 18233                           
 18234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 18235  01032A  0E00               	movlw	0
 18236  01032C  6E09               	movwf	(btemp+8)^0,c
 18237  01032E  0E00               	movlw	0
 18238  010330  6E0A               	movwf	(btemp+9)^0,c
 18239  010332  0E80               	movlw	128
 18240  010334  6E0B               	movwf	(btemp+10)^0,c
 18241  010336  0E3F               	movlw	63
 18242  010338  6E0C               	movwf	(btemp+11)^0,c
 18243                           
 18244                           ;stkvar	_u @ sp[(-56)+12]
 18245  01033A  0ED4               	movlw	-44
 18246  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 18247  010342  0ED5               	movlw	-43
 18248  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18249  01034A  0ED6               	movlw	-42
 18250  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18251  010352  0ED7               	movlw	-41
 18252  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 18253                           
 18254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 18255                           ;stkvar	_e @ sp[(-56)+34]
 18256  01035A  0EEA               	movlw	-22
 18257  01035C  6AE3               	clrf	plusw1,c
 18258  01035E  0EEB               	movlw	-21
 18259  010360  6AE3               	clrf	plusw1,c
 18260                           
 18261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 18262  010362  0E00               	movlw	0
 18263  010364  6EE6               	movwf	postinc1,c
 18264  010366  0E00               	movlw	0
 18265  010368  6EE6               	movwf	postinc1,c
 18266  01036A  0E00               	movlw	0
 18267  01036C  6EE6               	movwf	postinc1,c
 18268  01036E  0E00               	movlw	0
 18269  010370  6EE6               	movwf	postinc1,c
 18270                           
 18271                           ;stkvar	_g @ sp[(-60)+16]
 18272  010372  0ED4               	movlw	-44
 18273  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 18274  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 18275  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 18276  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 18277  01038C  ECBA  F0D5         	call	___fleq	;wreg free
 18278  010390  A001               	btfss	btemp& (0+255),0,c
 18279  010392  D039               	goto	l12665
 18280  010394  D0BC               	goto	u11690
 18281  010396                     l12661:
 18282                           
 18283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 18284  010396  0E00               	movlw	0
 18285  010398  6EE6               	movwf	postinc1,c
 18286  01039A  0E00               	movlw	0
 18287  01039C  6EE6               	movwf	postinc1,c
 18288  01039E  0E20               	movlw	32
 18289  0103A0  6EE6               	movwf	postinc1,c
 18290  0103A2  0E41               	movlw	65
 18291  0103A4  6EE6               	movwf	postinc1,c
 18292                           
 18293                           ;stkvar	_u @ sp[(-60)+12]
 18294  0103A6  0ED0               	movlw	-48
 18295  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 18296  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 18297  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 18298  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 18299  0103C0  EC20  F09F         	call	___flmul	;wreg free
 18300                           
 18301                           ;stkvar	_u @ sp[(-56)+12]
 18302  0103C4  0ED4               	movlw	-44
 18303  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 18304  0103CC  0ED5               	movlw	-43
 18305  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18306  0103D4  0ED6               	movlw	-42
 18307  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18308  0103DC  0ED7               	movlw	-41
 18309  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 18310                           
 18311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 18312                           ;stkvar	_e @ sp[(-56)+34]
 18313  0103E4  0EEA               	movlw	-22
 18314  0103E6  50E3               	movf	plusw1,w,c
 18315  0103E8  0F01               	addlw	1
 18316  0103EA  6E01               	movwf	btemp^0,c
 18317  0103EC  0EEA               	movlw	-22
 18318  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 18319  0103F4  6A01               	clrf	btemp^0,c
 18320  0103F6  0EEB               	movlw	-21
 18321  0103F8  50E3               	movf	plusw1,w,c
 18322  0103FA  2001               	addwfc	btemp^0,w,c
 18323  0103FC  6E01               	movwf	btemp^0,c
 18324  0103FE  0EEB               	movlw	-21
 18325  010400  0060  F007  FFE3   	movff	btemp,plusw1
 18326  010406                     l12665:
 18327                           
 18328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 18329  010406  0E00               	movlw	0
 18330  010408  6EE6               	movwf	postinc1,c
 18331  01040A  0E00               	movlw	0
 18332  01040C  6EE6               	movwf	postinc1,c
 18333  01040E  0E20               	movlw	32
 18334  010410  6EE6               	movwf	postinc1,c
 18335  010412  0E41               	movlw	65
 18336  010414  6EE6               	movwf	postinc1,c
 18337                           
 18338                           ;stkvar	_u @ sp[(-60)+12]
 18339  010416  0ED0               	movlw	-48
 18340  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 18341  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 18342  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 18343  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 18344  010430  EC20  F09F         	call	___flmul	;wreg free
 18345  010434  0060  F007  FFE6   	movff	btemp,postinc1
 18346  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 18347  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 18348  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 18349                           
 18350                           ;stkvar	_g @ sp[(-60)+16]
 18351  01044C  0ED4               	movlw	-44
 18352  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 18353  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 18354  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 18355  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 18356  010466  ECF4  F0CA         	call	___flge	;wreg free
 18357  01046A  A001               	btfss	btemp& (0+255),0,c
 18358  01046C  D032               	goto	l12671
 18359  01046E  D793               	goto	l12661
 18360  010470                     l12667:
 18361                           
 18362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 18363  010470  0E00               	movlw	0
 18364  010472  6EE6               	movwf	postinc1,c
 18365  010474  0E00               	movlw	0
 18366  010476  6EE6               	movwf	postinc1,c
 18367  010478  0E20               	movlw	32
 18368  01047A  6EE6               	movwf	postinc1,c
 18369  01047C  0E41               	movlw	65
 18370  01047E  6EE6               	movwf	postinc1,c
 18371                           
 18372                           ;stkvar	_u @ sp[(-60)+12]
 18373  010480  0ED0               	movlw	-48
 18374  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 18375  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 18376  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 18377  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 18378  01049A  EC13  F0A7         	call	___fldiv	;wreg free
 18379                           
 18380                           ;stkvar	_u @ sp[(-56)+12]
 18381  01049E  0ED4               	movlw	-44
 18382  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 18383  0104A6  0ED5               	movlw	-43
 18384  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18385  0104AE  0ED6               	movlw	-42
 18386  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18387  0104B6  0ED7               	movlw	-41
 18388  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 18389                           
 18390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 18391                           ;stkvar	_e @ sp[(-56)+34]
 18392  0104BE  50E1               	movf	fsr1l,w,c
 18393  0104C0  0FEA               	addlw	-22
 18394  0104C2  6ED9               	movwf	fsr2l,c
 18395  0104C4  50E2               	movf	fsr1h,w,c
 18396  0104C6  6EDA               	movwf	fsr2h,c
 18397  0104C8  0EFF               	movlw	255
 18398  0104CA  22DA               	addwfc	fsr2h,f,c
 18399  0104CC  06DE               	decf	postinc2,f,c
 18400  0104CE  0E00               	movlw	0
 18401  0104D0  5ADD               	subwfb	postdec2,f,c
 18402  0104D2                     l12671:
 18403                           
 18404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 18405                           ;stkvar	_u @ sp[(-56)+12]
 18406  0104D2  0ED4               	movlw	-44
 18407  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 18408  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 18409  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 18410  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 18411                           
 18412                           ;stkvar	_g @ sp[(-60)+16]
 18413  0104EC  0ED4               	movlw	-44
 18414  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 18415  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 18416  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 18417  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 18418  010506  ECF4  F0CA         	call	___flge	;wreg free
 18419  01050A  A001               	btfss	btemp& (0+255),0,c
 18420  01050C  D7B1               	goto	l12667
 18421  01050E                     u11690:
 18422                           
 18423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 18424                           ;stkvar	_c @ sp[(-56)+-7]
 18425  01050E  0EC1               	movlw	-63
 18426  010510  50E3               	movf	plusw1,w,c
 18427  010512  6EE6               	movwf	postinc1,c
 18428  010514  0E00               	movlw	0
 18429  010516  6EE6               	movwf	postinc1,c
 18430  010518  EC8E  F0DA         	call	_tolower	;wreg free
 18431                           
 18432                           ;stkvar	_mode @ sp[(-56)+54]
 18433  01051C  0EFE               	movlw	-2
 18434  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 18435                           
 18436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 18437                           ;stkvar	_mode @ sp[(-56)+54]
 18438                           ;stkvar	_nmode @ sp[(-56)+55]
 18439  010524  0EFE               	movlw	-2
 18440  010526  006F FF8C  F001    	movff	plusw1,btemp
 18441  01052C  0EFF               	movlw	-1
 18442  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 18443                           
 18444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 18445                           ;stkvar	_mode @ sp[(-56)+54]
 18446  010534  0EFE               	movlw	-2
 18447  010536  006F FF8C  F001    	movff	plusw1,btemp
 18448  01053C  0E67               	movlw	103
 18449  01053E  1801               	xorwf	btemp^0,w,c
 18450  010540  A4D8               	btfss	status,2,c
 18451  010542  D025               	goto	l12689
 18452                           
 18453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 18454  010544  503C               	movf	_prec^0,w,c
 18455  010546  103D               	iorwf	(_prec+1)^0,w,c
 18456  010548  A4D8               	btfss	status,2,c
 18457  01054A  D004               	goto	l12683
 18458                           
 18459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 18460  01054C  0E00               	movlw	0
 18461  01054E  6E3D               	movwf	(_prec+1)^0,c
 18462  010550  0E01               	movlw	1
 18463  010552  6E3C               	movwf	_prec^0,c
 18464  010554                     l12683:
 18465                           
 18466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 18467  010554  BE3D               	btfsc	(_prec+1)^0,7,c
 18468  010556  D005               	goto	u11720
 18469  010558  503D               	movf	(_prec+1)^0,w,c
 18470  01055A  E110               	bnz	l12687
 18471  01055C  043C               	decf	_prec^0,w,c
 18472  01055E  B0D8               	btfsc	status,0,c
 18473  010560  D00D               	goto	l12687
 18474  010562                     u11720:
 18475  010562  0E06               	movlw	6
 18476  010564  6E0B               	movwf	(btemp+10)^0,c
 18477  010566  0E00               	movlw	0
 18478  010568  6E0C               	movwf	(btemp+11)^0,c
 18479                           
 18480                           ;stkvar	_p @ sp[(-56)+40]
 18481  01056A  0EF0               	movlw	-16
 18482  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18483  010572  0EF1               	movlw	-15
 18484  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 18485  01057A  D00C               	goto	l12695
 18486  01057C                     l12687:
 18487                           
 18488                           ;stkvar	_p @ sp[(-56)+40]
 18489  01057C  0EF0               	movlw	-16
 18490  01057E  0060  F0F3  FFE3   	movff	_prec,plusw1
 18491  010584  0EF1               	movlw	-15
 18492  010586  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 18493  01058C  D003               	goto	l12695
 18494  01058E                     l12689:
 18495                           
 18496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 18497  01058E  AE3D               	btfss	(_prec+1)^0,7,c
 18498  010590  D7F5               	goto	l12687
 18499  010592  D7E7               	goto	u11720
 18500  010594                     l12695:
 18501                           
 18502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 18503                           ;stkvar	_mode @ sp[(-56)+54]
 18504  010594  0EFE               	movlw	-2
 18505  010596  006F FF8C  F001    	movff	plusw1,btemp
 18506  01059C  0E67               	movlw	103
 18507  01059E  1801               	xorwf	btemp^0,w,c
 18508  0105A0  A4D8               	btfss	status,2,c
 18509  0105A2  D02F               	goto	l12705
 18510                           
 18511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 18512                           ;stkvar	_e @ sp[(-56)+34]
 18513  0105A4  0EEB               	movlw	-21
 18514  0105A6  AEE3               	btfss	plusw1,7,c
 18515  0105A8  D00E               	goto	u11750
 18516  0105AA  0EEA               	movlw	-22
 18517  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 18518  0105B2  0EFC               	movlw	252
 18519  0105B4  5E01               	subwf	btemp^0,f,c
 18520  0105B6  0EEB               	movlw	-21
 18521  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 18522  0105BE  0EFF               	movlw	255
 18523  0105C0  5A01               	subwfb	btemp^0,f,c
 18524  0105C2  A0D8               	btfss	status,0,c
 18525  0105C4  D018               	goto	l12703
 18526  0105C6                     u11750:
 18527                           
 18528                           ;stkvar	_e @ sp[(-56)+34]
 18529                           ;stkvar	_p @ sp[(-56)+40]
 18530  0105C6  0EF0               	movlw	-16
 18531  0105C8  50E3               	movf	plusw1,w,c
 18532  0105CA  0FFF               	addlw	255
 18533  0105CC  6E0B               	movwf	(btemp+10)^0,c
 18534  0105CE  0EF1               	movlw	-15
 18535  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 18536  0105D6  0EFF               	movlw	255
 18537  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 18538  0105DA  0EEA               	movlw	-22
 18539  0105DC  50E3               	movf	plusw1,w,c
 18540  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 18541  0105E0  500C               	movf	(btemp+11)^0,w,c
 18542  0105E2  0A80               	xorlw	128
 18543  0105E4  6E01               	movwf	btemp^0,c
 18544  0105E6  0EEB               	movlw	-21
 18545  0105E8  50E3               	movf	plusw1,w,c
 18546  0105EA  0A80               	xorlw	128
 18547  0105EC  5801               	subwfb	btemp^0,w,c
 18548  0105EE  A0D8               	btfss	status,0,c
 18549  0105F0  D002               	goto	l12703
 18550                           
 18551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 18552  0105F2  0E66               	movlw	102
 18553  0105F4  D001               	goto	L20
 18554  0105F6                     l12703:
 18555                           
 18556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 18557  0105F6  0E65               	movlw	101
 18558  0105F8                     L20:
 18559  0105F8  6E0C               	movwf	(btemp+11)^0,c
 18560                           
 18561                           ;stkvar	_nmode @ sp[(-56)+55]
 18562  0105FA  0EFF               	movlw	-1
 18563  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 18564  010602                     l12705:
 18565                           
 18566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 18567                           ;stkvar	_p @ sp[(-56)+40]
 18568                           ;stkvar	_m @ sp[(-56)+48]
 18569  010602  0EF0               	movlw	-16
 18570  010604  006F FF8C  F001    	movff	plusw1,btemp
 18571  01060A  0EF8               	movlw	-8
 18572  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 18573  010612  0EF1               	movlw	-15
 18574  010614  006F FF8C  F001    	movff	plusw1,btemp
 18575  01061A  0EF9               	movlw	-7
 18576  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 18577                           
 18578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 18579                           ;stkvar	_mode @ sp[(-56)+54]
 18580  010622  0EFE               	movlw	-2
 18581  010624  006F FF8C  F001    	movff	plusw1,btemp
 18582  01062A  0E67               	movlw	103
 18583  01062C  1801               	xorwf	btemp^0,w,c
 18584  01062E  A4D8               	btfss	status,2,c
 18585  010630  D00B               	goto	u11790
 18586                           
 18587                           ;stkvar	_nmode @ sp[(-56)+55]
 18588  010632  0EFF               	movlw	-1
 18589  010634  006F FF8C  F001    	movff	plusw1,btemp
 18590  01063A  0E66               	movlw	102
 18591  01063C  1801               	xorwf	btemp^0,w,c
 18592  01063E  A4D8               	btfss	status,2,c
 18593  010640  D014               	goto	l2346
 18594                           
 18595                           ;stkvar	_e @ sp[(-56)+34]
 18596  010642  0EEB               	movlw	-21
 18597  010644  AEE3               	btfss	plusw1,7,c
 18598  010646  D011               	goto	l2346
 18599  010648                     u11790:
 18600                           
 18601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 18602                           ;stkvar	_m @ sp[(-56)+48]
 18603  010648  0EF8               	movlw	-8
 18604  01064A  50E3               	movf	plusw1,w,c
 18605  01064C  0F01               	addlw	1
 18606  01064E  6E01               	movwf	btemp^0,c
 18607  010650  0EF8               	movlw	-8
 18608  010652  0060  F007  FFE3   	movff	btemp,plusw1
 18609  010658  6A01               	clrf	btemp^0,c
 18610  01065A  0EF9               	movlw	-7
 18611  01065C  50E3               	movf	plusw1,w,c
 18612  01065E  2001               	addwfc	btemp^0,w,c
 18613  010660  6E01               	movwf	btemp^0,c
 18614  010662  0EF9               	movlw	-7
 18615  010664  0060  F007  FFE3   	movff	btemp,plusw1
 18616  01066A                     l2346:
 18617                           
 18618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 18619                           ;stkvar	_nmode @ sp[(-56)+55]
 18620  01066A  0EFF               	movlw	-1
 18621  01066C  006F FF8C  F001    	movff	plusw1,btemp
 18622  010672  0E66               	movlw	102
 18623  010674  1801               	xorwf	btemp^0,w,c
 18624  010676  A4D8               	btfss	status,2,c
 18625  010678  D03B               	goto	l12725
 18626                           
 18627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 18628                           ;stkvar	_e @ sp[(-56)+34]
 18629  01067A  0EEB               	movlw	-21
 18630  01067C  AEE3               	btfss	plusw1,7,c
 18631  01067E  D01C               	goto	l12721
 18632                           
 18633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 18634  010680  0E00               	movlw	0
 18635  010682  6E09               	movwf	(btemp+8)^0,c
 18636  010684  0E00               	movlw	0
 18637  010686  6E0A               	movwf	(btemp+9)^0,c
 18638  010688  0E80               	movlw	128
 18639  01068A  6E0B               	movwf	(btemp+10)^0,c
 18640  01068C  0E3F               	movlw	63
 18641  01068E  6E0C               	movwf	(btemp+11)^0,c
 18642                           
 18643                           ;stkvar	_u @ sp[(-56)+12]
 18644  010690  0ED4               	movlw	-44
 18645  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 18646  010698  0ED5               	movlw	-43
 18647  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18648  0106A0  0ED6               	movlw	-42
 18649  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18650  0106A8  0ED7               	movlw	-41
 18651  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 18652                           
 18653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 18654                           ;stkvar	_e @ sp[(-56)+34]
 18655  0106B0  0EEA               	movlw	-22
 18656  0106B2  6AE3               	clrf	plusw1,c
 18657  0106B4  0EEB               	movlw	-21
 18658  0106B6  6AE3               	clrf	plusw1,c
 18659  0106B8                     l12721:
 18660                           
 18661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 18662                           ;stkvar	_mode @ sp[(-56)+54]
 18663  0106B8  0EFE               	movlw	-2
 18664  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 18665  0106C0  0E67               	movlw	103
 18666  0106C2  1801               	xorwf	btemp^0,w,c
 18667  0106C4  B4D8               	btfsc	status,2,c
 18668  0106C6  D014               	goto	l12725
 18669                           
 18670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 18671                           ;stkvar	_e @ sp[(-56)+34]
 18672                           ;stkvar	_m @ sp[(-56)+48]
 18673  0106C8  0EF8               	movlw	-8
 18674  0106CA  50E3               	movf	plusw1,w,c
 18675  0106CC  6E01               	movwf	btemp^0,c
 18676  0106CE  0EEA               	movlw	-22
 18677  0106D0  50E3               	movf	plusw1,w,c
 18678  0106D2  2601               	addwf	btemp^0,f,c
 18679  0106D4  0EF8               	movlw	-8
 18680  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 18681  0106DC  0EF9               	movlw	-7
 18682  0106DE  50E3               	movf	plusw1,w,c
 18683  0106E0  6E01               	movwf	btemp^0,c
 18684  0106E2  0EEB               	movlw	-21
 18685  0106E4  50E3               	movf	plusw1,w,c
 18686  0106E6  2201               	addwfc	btemp^0,f,c
 18687  0106E8  0EF9               	movlw	-7
 18688  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 18689  0106F0                     l12725:
 18690                           
 18691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 18692                           ;stkvar	_i @ sp[(-56)+36]
 18693  0106F0  0EEC               	movlw	-20
 18694  0106F2  6AE3               	clrf	plusw1,c
 18695  0106F4  0EED               	movlw	-19
 18696  0106F6  6AE3               	clrf	plusw1,c
 18697                           
 18698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 18699                           ;stkvar	_g @ sp[(-56)+16]
 18700  0106F8  0ED8               	movlw	-40
 18701  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 18702  010700  0ED9               	movlw	-39
 18703  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 18704  010708  0EDA               	movlw	-38
 18705  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 18706  010710  0EDB               	movlw	-37
 18707  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 18708                           
 18709                           ;stkvar	_h @ sp[(-56)+24]
 18710  010718  0EE0               	movlw	-32
 18711  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 18712  010720  0EE1               	movlw	-31
 18713  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18714  010728  0EE2               	movlw	-30
 18715  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18716  010730  0EE3               	movlw	-29
 18717  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 18718                           
 18719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 18720                           ;stkvar	_u @ sp[(-56)+12]
 18721  010738  0ED4               	movlw	-44
 18722  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 18723  010740  0ED5               	movlw	-43
 18724  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 18725  010748  0ED6               	movlw	-42
 18726  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 18727  010750  0ED7               	movlw	-41
 18728  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 18729                           
 18730                           ;stkvar	_ou @ sp[(-56)+28]
 18731  010758  0EE4               	movlw	-28
 18732  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 18733  010760  0EE5               	movlw	-27
 18734  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18735  010768  0EE6               	movlw	-26
 18736  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18737  010770  0EE7               	movlw	-25
 18738  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 18739                           
 18740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 18741  010778  D0D6               	goto	l12741
 18742  01077A                     l12731:
 18743                           
 18744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 18745                           ;stkvar	_u @ sp[(-56)+12]
 18746  01077A  0ED4               	movlw	-44
 18747  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 18748  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 18749  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 18750  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 18751                           
 18752                           ;stkvar	_h @ sp[(-60)+24]
 18753  010794  0EDC               	movlw	-36
 18754  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 18755  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 18756  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 18757  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 18758  0107AE  EC13  F0A7         	call	___fldiv	;wreg free
 18759  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 18760  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 18761  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 18762  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 18763  0107CA  EC2C  F0B4         	call	_floorf	;wreg free
 18764                           
 18765                           ;stkvar	_l @ sp[(-56)+20]
 18766  0107CE  0EDC               	movlw	-36
 18767  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 18768  0107D6  0EDD               	movlw	-35
 18769  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18770  0107DE  0EDE               	movlw	-34
 18771  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18772  0107E6  0EDF               	movlw	-33
 18773  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 18774                           
 18775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 18776                           ;stkvar	_l @ sp[(-56)+20]
 18777  0107EE  0EDC               	movlw	-36
 18778  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 18779  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 18780  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 18781  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 18782  010808  EC3B  F0CA         	call	___fltol	;wreg free
 18783  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 18784  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 18785                           
 18786                           ;stkvar	_d @ sp[(-56)+44]
 18787  010818  0EF4               	movlw	-12
 18788  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18789  010820  0EF5               	movlw	-11
 18790  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 18791                           
 18792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 18793                           ;stkvar	_u @ sp[(-56)+12]
 18794  010828  0ED4               	movlw	-44
 18795  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 18796  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 18797  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 18798  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 18799                           
 18800                           ;stkvar	_l @ sp[(-60)+20]
 18801  010842  0ED8               	movlw	-40
 18802  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 18803  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 18804  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 18805  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 18806  01085C  EC20  F09F         	call	___flmul	;wreg free
 18807  010860  0060  F007  FFE6   	movff	btemp,postinc1
 18808  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 18809  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 18810  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 18811                           
 18812                           ;stkvar	_h @ sp[(-60)+24]
 18813  010878  0EDC               	movlw	-36
 18814  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 18815  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 18816  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 18817  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 18818  010892  ECC8  F0DF         	call	___flsub	;wreg free
 18819                           
 18820                           ;stkvar	_h @ sp[(-56)+24]
 18821  010896  0EE0               	movlw	-32
 18822  010898  0060  F007  FFE3   	movff	btemp,plusw1
 18823  01089E  0EE1               	movlw	-31
 18824  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18825  0108A6  0EE2               	movlw	-30
 18826  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18827  0108AE  0EE3               	movlw	-29
 18828  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 18829                           
 18830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 18831  0108B6  0E00               	movlw	0
 18832  0108B8  6EE6               	movwf	postinc1,c
 18833  0108BA  0E00               	movlw	0
 18834  0108BC  6EE6               	movwf	postinc1,c
 18835  0108BE  0E20               	movlw	32
 18836  0108C0  6EE6               	movwf	postinc1,c
 18837  0108C2  0E41               	movlw	65
 18838  0108C4  6EE6               	movwf	postinc1,c
 18839                           
 18840                           ;stkvar	_u @ sp[(-60)+12]
 18841  0108C6  0ED0               	movlw	-48
 18842  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 18843  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 18844  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 18845  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 18846  0108E0  EC13  F0A7         	call	___fldiv	;wreg free
 18847                           
 18848                           ;stkvar	_u @ sp[(-56)+12]
 18849  0108E4  0ED4               	movlw	-44
 18850  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 18851  0108EC  0ED5               	movlw	-43
 18852  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18853  0108F4  0ED6               	movlw	-42
 18854  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18855  0108FC  0ED7               	movlw	-41
 18856  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 18857                           
 18858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 18859                           ;stkvar	_i @ sp[(-56)+36]
 18860  010904  0EEC               	movlw	-20
 18861  010906  50E3               	movf	plusw1,w,c
 18862  010908  0F01               	addlw	1
 18863  01090A  6E01               	movwf	btemp^0,c
 18864  01090C  0EEC               	movlw	-20
 18865  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 18866  010914  6A01               	clrf	btemp^0,c
 18867  010916  0EED               	movlw	-19
 18868  010918  50E3               	movf	plusw1,w,c
 18869  01091A  2001               	addwfc	btemp^0,w,c
 18870  01091C  6E01               	movwf	btemp^0,c
 18871  01091E  0EED               	movlw	-19
 18872  010920  0060  F007  FFE3   	movff	btemp,plusw1
 18873  010926                     l12741:
 18874                           
 18875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 18876                           ;stkvar	_m @ sp[(-56)+48]
 18877                           ;stkvar	_i @ sp[(-56)+36]
 18878  010926  50E1               	movf	fsr1l,w,c
 18879  010928  0FEC               	addlw	-20
 18880  01092A  6ED9               	movwf	fsr2l,c
 18881  01092C  50E2               	movf	fsr1h,w,c
 18882  01092E  6EDA               	movwf	fsr2h,c
 18883  010930  0EFF               	movlw	255
 18884  010932  22DA               	addwfc	fsr2h,f,c
 18885  010934  0EF8               	movlw	-8
 18886  010936  50E3               	movf	plusw1,w,c
 18887  010938  5CDE               	subwf	postinc2,w,c
 18888  01093A  50DE               	movf	postinc2,w,c
 18889  01093C  0A80               	xorlw	128
 18890  01093E  6E01               	movwf	btemp^0,c
 18891  010940  0EF9               	movlw	-7
 18892  010942  50E3               	movf	plusw1,w,c
 18893  010944  0A80               	xorlw	128
 18894  010946  5801               	subwfb	btemp^0,w,c
 18895  010948  A0D8               	btfss	status,0,c
 18896  01094A  D717               	goto	l12731
 18897                           
 18898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 18899  01094C  0E00               	movlw	0
 18900  01094E  6EE6               	movwf	postinc1,c
 18901  010950  0E00               	movlw	0
 18902  010952  6EE6               	movwf	postinc1,c
 18903  010954  0EA0               	movlw	160
 18904  010956  6EE6               	movwf	postinc1,c
 18905  010958  0E40               	movlw	64
 18906  01095A  6EE6               	movwf	postinc1,c
 18907                           
 18908                           ;stkvar	_u @ sp[(-60)+12]
 18909  01095C  0ED0               	movlw	-48
 18910  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 18911  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 18912  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 18913  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 18914  010976  EC20  F09F         	call	___flmul	;wreg free
 18915                           
 18916                           ;stkvar	_l @ sp[(-56)+20]
 18917  01097A  0EDC               	movlw	-36
 18918  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 18919  010982  0EDD               	movlw	-35
 18920  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18921  01098A  0EDE               	movlw	-34
 18922  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18923  010992  0EDF               	movlw	-33
 18924  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 18925                           
 18926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 18927                           ;stkvar	_l @ sp[(-56)+20]
 18928  01099A  0EDC               	movlw	-36
 18929  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 18930  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 18931  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 18932  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 18933                           
 18934                           ;stkvar	_h @ sp[(-60)+24]
 18935  0109B4  0EDC               	movlw	-36
 18936  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 18937  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 18938  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 18939  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 18940  0109CE  ECF4  F0CA         	call	___flge	;wreg free
 18941  0109D2  A001               	btfss	btemp& (0+255),0,c
 18942  0109D4  D021               	goto	u11860
 18943                           
 18944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 18945                           ;stkvar	_l @ sp[(-56)+20]
 18946                           
 18947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 18948                           
 18949                           ;stkvar	_l @ sp[(-56)+20]
 18950                           
 18951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 18952  0109D6  0EDC               	movlw	-36
 18953  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 18954  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 18955  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 18956  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 18957                           
 18958                           ;stkvar	_h @ sp[(-60)+24]
 18959  0109F0  0EDC               	movlw	-36
 18960  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 18961  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 18962  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 18963  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 18964  010A0A  ECBA  F0D5         	call	___fleq	;wreg free
 18965  010A0E  A001               	btfss	btemp& (0+255),0,c
 18966  010A10  D01B               	goto	l12755
 18967                           
 18968                           ;stkvar	_d @ sp[(-56)+44]
 18969  010A12  0EF4               	movlw	-12
 18970  010A14  B0E3               	btfsc	plusw1,0,c
 18971  010A16  D018               	goto	l12755
 18972  010A18                     u11860:
 18973                           
 18974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 18975  010A18  0E00               	movlw	0
 18976  010A1A  6E09               	movwf	(btemp+8)^0,c
 18977  010A1C  0E00               	movlw	0
 18978  010A1E  6E0A               	movwf	(btemp+9)^0,c
 18979  010A20  0E00               	movlw	0
 18980  010A22  6E0B               	movwf	(btemp+10)^0,c
 18981  010A24  0E00               	movlw	0
 18982  010A26  6E0C               	movwf	(btemp+11)^0,c
 18983                           
 18984                           ;stkvar	_l @ sp[(-56)+20]
 18985  010A28  0EDC               	movlw	-36
 18986  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 18987  010A30  0EDD               	movlw	-35
 18988  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18989  010A38  0EDE               	movlw	-34
 18990  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18991  010A40  0EDF               	movlw	-33
 18992  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 18993  010A48                     l12755:
 18994                           
 18995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 18996                           ;stkvar	_l @ sp[(-56)+20]
 18997  010A48  0EDC               	movlw	-36
 18998  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 18999  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 19000  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 19001  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 19002                           
 19003                           ;stkvar	_g @ sp[(-60)+16]
 19004  010A62  0ED4               	movlw	-44
 19005  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 19006  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 19007  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 19008  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 19009  010A7C  EC35  F0A3         	call	___fladd	;wreg free
 19010                           
 19011                           ;stkvar	_h @ sp[(-56)+24]
 19012  010A80  0EE0               	movlw	-32
 19013  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 19014  010A88  0EE1               	movlw	-31
 19015  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19016  010A90  0EE2               	movlw	-30
 19017  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19018  010A98  0EE3               	movlw	-29
 19019  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 19020                           
 19021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 19022                           ;stkvar	_ou @ sp[(-56)+28]
 19023  010AA0  0EE4               	movlw	-28
 19024  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 19025  010AA8  0EE5               	movlw	-27
 19026  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 19027  010AB0  0EE6               	movlw	-26
 19028  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 19029  010AB8  0EE7               	movlw	-25
 19030  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 19031                           
 19032                           ;stkvar	_u @ sp[(-56)+12]
 19033  010AC0  0ED4               	movlw	-44
 19034  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 19035  010AC8  0ED5               	movlw	-43
 19036  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19037  010AD0  0ED6               	movlw	-42
 19038  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19039  010AD8  0ED7               	movlw	-41
 19040  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 19041                           
 19042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 19043                           ;stkvar	_nmode @ sp[(-56)+55]
 19044  010AE0  0EFF               	movlw	-1
 19045  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 19046  010AE8  0E65               	movlw	101
 19047  010AEA  1801               	xorwf	btemp^0,w,c
 19048  010AEC  B4D8               	btfsc	status,2,c
 19049  010AEE  D011               	goto	l12763
 19050                           
 19051                           ;stkvar	_e @ sp[(-56)+34]
 19052                           ;stkvar	_ne @ sp[(-56)+46]
 19053  010AF0  0EEA               	movlw	-22
 19054  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 19055  010AF8  0EF6               	movlw	-10
 19056  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 19057  010B00  0EEB               	movlw	-21
 19058  010B02  006F FF8C  F001    	movff	plusw1,btemp
 19059  010B08  0EF7               	movlw	-9
 19060  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 19061  010B10  D004               	goto	l2361
 19062  010B12                     l12763:
 19063                           
 19064                           ;stkvar	_ne @ sp[(-56)+46]
 19065  010B12  0EF6               	movlw	-10
 19066  010B14  6AE3               	clrf	plusw1,c
 19067  010B16  0EF7               	movlw	-9
 19068  010B18  6AE3               	clrf	plusw1,c
 19069  010B1A                     l2361:
 19070                           
 19071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 19072                           ;stkvar	_pp @ sp[(-56)+50]
 19073  010B1A  0EFA               	movlw	-6
 19074  010B1C  6AE3               	clrf	plusw1,c
 19075  010B1E  0EFB               	movlw	-5
 19076  010B20  6AE3               	clrf	plusw1,c
 19077                           
 19078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 19079                           ;stkvar	_t @ sp[(-56)+52]
 19080  010B22  0EFC               	movlw	-4
 19081  010B24  6AE3               	clrf	plusw1,c
 19082  010B26  0EFD               	movlw	-3
 19083  010B28  6AE3               	clrf	plusw1,c
 19084                           
 19085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 19086                           ;stkvar	_i @ sp[(-56)+36]
 19087  010B2A  0EEC               	movlw	-20
 19088  010B2C  6AE3               	clrf	plusw1,c
 19089  010B2E  0EED               	movlw	-19
 19090  010B30  6AE3               	clrf	plusw1,c
 19091                           
 19092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 19093  010B32  D1B7               	goto	l12815
 19094  010B34                     l12765:
 19095                           
 19096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 19097                           ;stkvar	_u @ sp[(-56)+12]
 19098  010B34  0ED4               	movlw	-44
 19099  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 19100  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 19101  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 19102  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 19103                           
 19104                           ;stkvar	_h @ sp[(-60)+24]
 19105  010B4E  0EDC               	movlw	-36
 19106  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 19107  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 19108  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 19109  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 19110  010B68  EC13  F0A7         	call	___fldiv	;wreg free
 19111  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 19112  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19113  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 19114  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 19115  010B84  EC2C  F0B4         	call	_floorf	;wreg free
 19116                           
 19117                           ;stkvar	_l @ sp[(-56)+20]
 19118  010B88  0EDC               	movlw	-36
 19119  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 19120  010B90  0EDD               	movlw	-35
 19121  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19122  010B98  0EDE               	movlw	-34
 19123  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19124  010BA0  0EDF               	movlw	-33
 19125  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 19126                           
 19127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 19128                           ;stkvar	_l @ sp[(-56)+20]
 19129  010BA8  0EDC               	movlw	-36
 19130  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 19131  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 19132  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 19133  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 19134  010BC2  EC3B  F0CA         	call	___fltol	;wreg free
 19135  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 19136  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 19137                           
 19138                           ;stkvar	_d @ sp[(-56)+44]
 19139  010BD2  0EF4               	movlw	-12
 19140  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19141  010BDA  0EF5               	movlw	-11
 19142  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 19143                           
 19144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 19145  010BE2  B83E               	btfsc	_flags^0,4,c
 19146  010BE4  D026               	goto	l12779
 19147                           
 19148                           ;stkvar	_d @ sp[(-56)+44]
 19149  010BE6  0EF4               	movlw	-12
 19150  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 19151  010BEE  0EF5               	movlw	-11
 19152  010BF0  50E3               	movf	plusw1,w,c
 19153  010BF2  1001               	iorwf	btemp^0,w,c
 19154  010BF4  A4D8               	btfss	status,2,c
 19155  010BF6  D01D               	goto	l12779
 19156                           
 19157                           ;stkvar	_mode @ sp[(-56)+54]
 19158  010BF8  0EFE               	movlw	-2
 19159  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 19160  010C00  0E67               	movlw	103
 19161  010C02  1801               	xorwf	btemp^0,w,c
 19162  010C04  A4D8               	btfss	status,2,c
 19163  010C06  D015               	goto	l12779
 19164                           
 19165                           ;stkvar	_ne @ sp[(-56)+46]
 19166  010C08  0EF7               	movlw	-9
 19167  010C0A  AEE3               	btfss	plusw1,7,c
 19168  010C0C  D012               	goto	l12779
 19169                           
 19170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 19171                           ;stkvar	_t @ sp[(-56)+52]
 19172  010C0E  0EFC               	movlw	-4
 19173  010C10  50E3               	movf	plusw1,w,c
 19174  010C12  0F01               	addlw	1
 19175  010C14  6E01               	movwf	btemp^0,c
 19176  010C16  0EFC               	movlw	-4
 19177  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 19178  010C1E  6A01               	clrf	btemp^0,c
 19179  010C20  0EFD               	movlw	-3
 19180  010C22  50E3               	movf	plusw1,w,c
 19181  010C24  2001               	addwfc	btemp^0,w,c
 19182  010C26  6E01               	movwf	btemp^0,c
 19183  010C28  0EFD               	movlw	-3
 19184  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 19185                           
 19186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 19187  010C30  D0AF               	goto	l12807
 19188  010C32                     l12779:
 19189                           
 19190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 19191                           ;stkvar	_pp @ sp[(-56)+50]
 19192  010C32  0EFA               	movlw	-6
 19193  010C34  006F FF8C  F001    	movff	plusw1,btemp
 19194  010C3A  0EFB               	movlw	-5
 19195  010C3C  50E3               	movf	plusw1,w,c
 19196  010C3E  1001               	iorwf	btemp^0,w,c
 19197  010C40  A4D8               	btfss	status,2,c
 19198  010C42  D070               	goto	l12799
 19199                           
 19200                           ;stkvar	_ne @ sp[(-56)+46]
 19201  010C44  0EF7               	movlw	-9
 19202  010C46  AEE3               	btfss	plusw1,7,c
 19203  010C48  D06D               	goto	l12799
 19204                           
 19205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 19206                           ;stkvar	_n @ sp[(-56)+32]
 19207  010C4A  0EE8               	movlw	-24
 19208  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19209  010C52  0EE9               	movlw	-23
 19210  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 19211  010C5A  0E97               	movlw	low _dbuf
 19212  010C5C  240B               	addwf	(btemp+10)^0,w,c
 19213  010C5E  6ED9               	movwf	fsr2l,c
 19214  010C60  0E02               	movlw	high _dbuf
 19215  010C62  200C               	addwfc	(btemp+11)^0,w,c
 19216  010C64  6EDA               	movwf	fsr2h,c
 19217  010C66  0E2E               	movlw	46
 19218  010C68  6EDF               	movwf	indf2,c
 19219                           
 19220                           ;stkvar	_n @ sp[(-56)+32]
 19221  010C6A  0EE8               	movlw	-24
 19222  010C6C  50E3               	movf	plusw1,w,c
 19223  010C6E  0F01               	addlw	1
 19224  010C70  6E01               	movwf	btemp^0,c
 19225  010C72  0EE8               	movlw	-24
 19226  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 19227  010C7A  6A01               	clrf	btemp^0,c
 19228  010C7C  0EE9               	movlw	-23
 19229  010C7E  50E3               	movf	plusw1,w,c
 19230  010C80  2001               	addwfc	btemp^0,w,c
 19231  010C82  6E01               	movwf	btemp^0,c
 19232  010C84  0EE9               	movlw	-23
 19233  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 19234                           
 19235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 19236                           ;stkvar	_w @ sp[(-56)+38]
 19237  010C8C  50E1               	movf	fsr1l,w,c
 19238  010C8E  0FEE               	addlw	-18
 19239  010C90  6ED9               	movwf	fsr2l,c
 19240  010C92  50E2               	movf	fsr1h,w,c
 19241  010C94  6EDA               	movwf	fsr2h,c
 19242  010C96  0EFF               	movlw	255
 19243  010C98  22DA               	addwfc	fsr2h,f,c
 19244  010C9A  06DE               	decf	postinc2,f,c
 19245  010C9C  0E00               	movlw	0
 19246  010C9E  5ADD               	subwfb	postdec2,f,c
 19247                           
 19248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 19249  010CA0  0E01               	movlw	1
 19250  010CA2  6E0B               	movwf	(btemp+10)^0,c
 19251  010CA4  0E00               	movlw	0
 19252  010CA6  6E0C               	movwf	(btemp+11)^0,c
 19253                           
 19254                           ;stkvar	_pp @ sp[(-56)+50]
 19255  010CA8  0EFA               	movlw	-6
 19256  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19257  010CB0  0EFB               	movlw	-5
 19258  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 19259  010CB8  D035               	goto	l12799
 19260  010CBA                     l12791:
 19261                           
 19262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 19263                           ;stkvar	_n @ sp[(-56)+32]
 19264  010CBA  0EE8               	movlw	-24
 19265  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19266  010CC2  0EE9               	movlw	-23
 19267  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 19268  010CCA  0E97               	movlw	low _dbuf
 19269  010CCC  240B               	addwf	(btemp+10)^0,w,c
 19270  010CCE  6ED9               	movwf	fsr2l,c
 19271  010CD0  0E02               	movlw	high _dbuf
 19272  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 19273  010CD4  6EDA               	movwf	fsr2h,c
 19274  010CD6  0E30               	movlw	48
 19275  010CD8  6EDF               	movwf	indf2,c
 19276                           
 19277                           ;stkvar	_n @ sp[(-56)+32]
 19278  010CDA  0EE8               	movlw	-24
 19279  010CDC  50E3               	movf	plusw1,w,c
 19280  010CDE  0F01               	addlw	1
 19281  010CE0  6E01               	movwf	btemp^0,c
 19282  010CE2  0EE8               	movlw	-24
 19283  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 19284  010CEA  6A01               	clrf	btemp^0,c
 19285  010CEC  0EE9               	movlw	-23
 19286  010CEE  50E3               	movf	plusw1,w,c
 19287  010CF0  2001               	addwfc	btemp^0,w,c
 19288  010CF2  6E01               	movwf	btemp^0,c
 19289  010CF4  0EE9               	movlw	-23
 19290  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 19291                           
 19292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 19293                           ;stkvar	_w @ sp[(-56)+38]
 19294  010CFC  50E1               	movf	fsr1l,w,c
 19295  010CFE  0FEE               	addlw	-18
 19296  010D00  6ED9               	movwf	fsr2l,c
 19297  010D02  50E2               	movf	fsr1h,w,c
 19298  010D04  6EDA               	movwf	fsr2h,c
 19299  010D06  0EFF               	movlw	255
 19300  010D08  22DA               	addwfc	fsr2h,f,c
 19301  010D0A  06DE               	decf	postinc2,f,c
 19302  010D0C  0E00               	movlw	0
 19303  010D0E  5ADD               	subwfb	postdec2,f,c
 19304                           
 19305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 19306                           ;stkvar	_t @ sp[(-56)+52]
 19307  010D10  50E1               	movf	fsr1l,w,c
 19308  010D12  0FFC               	addlw	-4
 19309  010D14  6ED9               	movwf	fsr2l,c
 19310  010D16  50E2               	movf	fsr1h,w,c
 19311  010D18  6EDA               	movwf	fsr2h,c
 19312  010D1A  0EFF               	movlw	255
 19313  010D1C  22DA               	addwfc	fsr2h,f,c
 19314  010D1E  06DE               	decf	postinc2,f,c
 19315  010D20  0E00               	movlw	0
 19316  010D22  5ADD               	subwfb	postdec2,f,c
 19317  010D24                     l12799:
 19318                           
 19319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 19320                           ;stkvar	_t @ sp[(-56)+52]
 19321  010D24  0EFC               	movlw	-4
 19322  010D26  006F FF8C  F001    	movff	plusw1,btemp
 19323  010D2C  0EFD               	movlw	-3
 19324  010D2E  50E3               	movf	plusw1,w,c
 19325  010D30  1001               	iorwf	btemp^0,w,c
 19326  010D32  A4D8               	btfss	status,2,c
 19327  010D34  D7C2               	goto	l12791
 19328                           
 19329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 19330                           ;stkvar	_n @ sp[(-56)+32]
 19331  010D36  0EE8               	movlw	-24
 19332  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 19333  010D3E  0EE9               	movlw	-23
 19334  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 19335  010D46  0E97               	movlw	low _dbuf
 19336  010D48  240B               	addwf	(btemp+10)^0,w,c
 19337  010D4A  6ED9               	movwf	fsr2l,c
 19338  010D4C  0E02               	movlw	high _dbuf
 19339  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 19340  010D50  6EDA               	movwf	fsr2h,c
 19341                           
 19342                           ;stkvar	_d @ sp[(-56)+44]
 19343  010D52  0EF4               	movlw	-12
 19344  010D54  50E3               	movf	plusw1,w,c
 19345  010D56  0F30               	addlw	48
 19346  010D58  6EDF               	movwf	indf2,c
 19347                           
 19348                           ;stkvar	_n @ sp[(-56)+32]
 19349  010D5A  0EE8               	movlw	-24
 19350  010D5C  50E3               	movf	plusw1,w,c
 19351  010D5E  0F01               	addlw	1
 19352  010D60  6E01               	movwf	btemp^0,c
 19353  010D62  0EE8               	movlw	-24
 19354  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 19355  010D6A  6A01               	clrf	btemp^0,c
 19356  010D6C  0EE9               	movlw	-23
 19357  010D6E  50E3               	movf	plusw1,w,c
 19358  010D70  2001               	addwfc	btemp^0,w,c
 19359  010D72  6E01               	movwf	btemp^0,c
 19360  010D74  0EE9               	movlw	-23
 19361  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 19362                           
 19363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 19364                           ;stkvar	_w @ sp[(-56)+38]
 19365  010D7C  50E1               	movf	fsr1l,w,c
 19366  010D7E  0FEE               	addlw	-18
 19367  010D80  6ED9               	movwf	fsr2l,c
 19368  010D82  50E2               	movf	fsr1h,w,c
 19369  010D84  6EDA               	movwf	fsr2h,c
 19370  010D86  0EFF               	movlw	255
 19371  010D88  22DA               	addwfc	fsr2h,f,c
 19372  010D8A  06DE               	decf	postinc2,f,c
 19373  010D8C  0E00               	movlw	0
 19374  010D8E  5ADD               	subwfb	postdec2,f,c
 19375  010D90                     l12807:
 19376                           
 19377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 19378                           ;stkvar	_u @ sp[(-56)+12]
 19379  010D90  0ED4               	movlw	-44
 19380  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 19381  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 19382  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 19383  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 19384                           
 19385                           ;stkvar	_l @ sp[(-60)+20]
 19386  010DAA  0ED8               	movlw	-40
 19387  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 19388  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 19389  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 19390  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 19391  010DC4  EC20  F09F         	call	___flmul	;wreg free
 19392  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 19393  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19394  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 19395  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 19396                           
 19397                           ;stkvar	_h @ sp[(-60)+24]
 19398  010DE0  0EDC               	movlw	-36
 19399  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 19400  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 19401  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 19402  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 19403  010DFA  ECC8  F0DF         	call	___flsub	;wreg free
 19404                           
 19405                           ;stkvar	_h @ sp[(-56)+24]
 19406  010DFE  0EE0               	movlw	-32
 19407  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 19408  010E06  0EE1               	movlw	-31
 19409  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19410  010E0E  0EE2               	movlw	-30
 19411  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19412  010E16  0EE3               	movlw	-29
 19413  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 19414                           
 19415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 19416  010E1E  0E00               	movlw	0
 19417  010E20  6EE6               	movwf	postinc1,c
 19418  010E22  0E00               	movlw	0
 19419  010E24  6EE6               	movwf	postinc1,c
 19420  010E26  0E20               	movlw	32
 19421  010E28  6EE6               	movwf	postinc1,c
 19422  010E2A  0E41               	movlw	65
 19423  010E2C  6EE6               	movwf	postinc1,c
 19424                           
 19425                           ;stkvar	_u @ sp[(-60)+12]
 19426  010E2E  0ED0               	movlw	-48
 19427  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 19428  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 19429  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 19430  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 19431  010E48  EC13  F0A7         	call	___fldiv	;wreg free
 19432                           
 19433                           ;stkvar	_u @ sp[(-56)+12]
 19434  010E4C  0ED4               	movlw	-44
 19435  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 19436  010E54  0ED5               	movlw	-43
 19437  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19438  010E5C  0ED6               	movlw	-42
 19439  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19440  010E64  0ED7               	movlw	-41
 19441  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 19442                           
 19443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 19444                           ;stkvar	_ne @ sp[(-56)+46]
 19445  010E6C  50E1               	movf	fsr1l,w,c
 19446  010E6E  0FF6               	addlw	-10
 19447  010E70  6ED9               	movwf	fsr2l,c
 19448  010E72  50E2               	movf	fsr1h,w,c
 19449  010E74  6EDA               	movwf	fsr2h,c
 19450  010E76  0EFF               	movlw	255
 19451  010E78  22DA               	addwfc	fsr2h,f,c
 19452  010E7A  06DE               	decf	postinc2,f,c
 19453  010E7C  0E00               	movlw	0
 19454  010E7E  5ADD               	subwfb	postdec2,f,c
 19455                           
 19456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 19457                           ;stkvar	_i @ sp[(-56)+36]
 19458  010E80  0EEC               	movlw	-20
 19459  010E82  50E3               	movf	plusw1,w,c
 19460  010E84  0F01               	addlw	1
 19461  010E86  6E01               	movwf	btemp^0,c
 19462  010E88  0EEC               	movlw	-20
 19463  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 19464  010E90  6A01               	clrf	btemp^0,c
 19465  010E92  0EED               	movlw	-19
 19466  010E94  50E3               	movf	plusw1,w,c
 19467  010E96  2001               	addwfc	btemp^0,w,c
 19468  010E98  6E01               	movwf	btemp^0,c
 19469  010E9A  0EED               	movlw	-19
 19470  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 19471  010EA2                     l12815:
 19472                           
 19473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 19474                           ;stkvar	_m @ sp[(-56)+48]
 19475                           ;stkvar	_i @ sp[(-56)+36]
 19476  010EA2  50E1               	movf	fsr1l,w,c
 19477  010EA4  0FEC               	addlw	-20
 19478  010EA6  6ED9               	movwf	fsr2l,c
 19479  010EA8  50E2               	movf	fsr1h,w,c
 19480  010EAA  6EDA               	movwf	fsr2h,c
 19481  010EAC  0EFF               	movlw	255
 19482  010EAE  22DA               	addwfc	fsr2h,f,c
 19483  010EB0  0EF8               	movlw	-8
 19484  010EB2  50E3               	movf	plusw1,w,c
 19485  010EB4  5CDE               	subwf	postinc2,w,c
 19486  010EB6  50DE               	movf	postinc2,w,c
 19487  010EB8  0A80               	xorlw	128
 19488  010EBA  6E01               	movwf	btemp^0,c
 19489  010EBC  0EF9               	movlw	-7
 19490  010EBE  50E3               	movf	plusw1,w,c
 19491  010EC0  0A80               	xorlw	128
 19492  010EC2  5801               	subwfb	btemp^0,w,c
 19493  010EC4  B0D8               	btfsc	status,0,c
 19494  010EC6  D00E               	goto	u11960
 19495                           
 19496                           ;stkvar	_n @ sp[(-56)+32]
 19497  010EC8  0EE9               	movlw	-23
 19498  010ECA  BEE3               	btfsc	plusw1,7,c
 19499  010ECC  D633               	goto	l12765
 19500  010ECE  0EE9               	movlw	-23
 19501  010ED0  50E3               	movf	plusw1,w,c
 19502  010ED2  E108               	bnz	u11960
 19503  010ED4  0EE8               	movlw	-24
 19504  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 19505  010EDC  0E4B               	movlw	75
 19506  010EDE  5E01               	subwf	btemp^0,f,c
 19507  010EE0  A0D8               	btfss	status,0,c
 19508  010EE2  D628               	goto	l12765
 19509  010EE4                     u11960:
 19510                           
 19511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 19512                           ;stkvar	_pp @ sp[(-56)+50]
 19513  010EE4  0EFA               	movlw	-6
 19514  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 19515  010EEC  0EFB               	movlw	-5
 19516  010EEE  50E3               	movf	plusw1,w,c
 19517  010EF0  1001               	iorwf	btemp^0,w,c
 19518  010EF2  B4D8               	btfsc	status,2,c
 19519  010EF4  A83E               	btfss	_flags^0,4,c
 19520  010EF6  D021               	goto	l12827
 19521                           
 19522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 19523                           ;stkvar	_n @ sp[(-56)+32]
 19524  010EF8  0EE8               	movlw	-24
 19525  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 19526  010F00  0EE9               	movlw	-23
 19527  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 19528  010F08  0E97               	movlw	low _dbuf
 19529  010F0A  240B               	addwf	(btemp+10)^0,w,c
 19530  010F0C  6ED9               	movwf	fsr2l,c
 19531  010F0E  0E02               	movlw	high _dbuf
 19532  010F10  200C               	addwfc	(btemp+11)^0,w,c
 19533  010F12  6EDA               	movwf	fsr2h,c
 19534  010F14  0E2E               	movlw	46
 19535  010F16  6EDF               	movwf	indf2,c
 19536                           
 19537                           ;stkvar	_n @ sp[(-56)+32]
 19538  010F18  0EE8               	movlw	-24
 19539  010F1A  50E3               	movf	plusw1,w,c
 19540  010F1C  0F01               	addlw	1
 19541  010F1E  6E01               	movwf	btemp^0,c
 19542  010F20  0EE8               	movlw	-24
 19543  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 19544  010F28  6A01               	clrf	btemp^0,c
 19545  010F2A  0EE9               	movlw	-23
 19546  010F2C  50E3               	movf	plusw1,w,c
 19547  010F2E  2001               	addwfc	btemp^0,w,c
 19548  010F30  6E01               	movwf	btemp^0,c
 19549  010F32  0EE9               	movlw	-23
 19550  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 19551  010F3A                     l12827:
 19552                           
 19553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 19554                           ;stkvar	_n @ sp[(-56)+32]
 19555  010F3A  0EE8               	movlw	-24
 19556  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19557  010F42  0EE9               	movlw	-23
 19558  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 19559  010F4A  0E97               	movlw	low _dbuf
 19560  010F4C  240B               	addwf	(btemp+10)^0,w,c
 19561  010F4E  6ED9               	movwf	fsr2l,c
 19562  010F50  0E02               	movlw	high _dbuf
 19563  010F52  200C               	addwfc	(btemp+11)^0,w,c
 19564  010F54  6EDA               	movwf	fsr2h,c
 19565  010F56  0E00               	movlw	0
 19566  010F58  6EDF               	movwf	indf2,c
 19567                           
 19568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 19569                           ;stkvar	_nmode @ sp[(-56)+55]
 19570  010F5A  0EFF               	movlw	-1
 19571  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 19572  010F62  0E65               	movlw	101
 19573  010F64  1801               	xorwf	btemp^0,w,c
 19574  010F66  A4D8               	btfss	status,2,c
 19575  010F68  EF16  F081         	goto	l12631
 19576                           
 19577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 19578  010F6C  0E4F               	movlw	79
 19579  010F6E  6E0B               	movwf	(btemp+10)^0,c
 19580  010F70  0E00               	movlw	0
 19581  010F72  6E0C               	movwf	(btemp+11)^0,c
 19582                           
 19583                           ;stkvar	_i @ sp[(-56)+36]
 19584  010F74  0EEC               	movlw	-20
 19585  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19586  010F7C  0EED               	movlw	-19
 19587  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 19588                           
 19589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 19590                           ;stkvar	_i @ sp[(-56)+36]
 19591  010F84  0EEC               	movlw	-20
 19592  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 19593  010F8C  0EED               	movlw	-19
 19594  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19595  010F94  0E97               	movlw	low _dbuf
 19596  010F96  240B               	addwf	(btemp+10)^0,w,c
 19597  010F98  6ED9               	movwf	fsr2l,c
 19598  010F9A  0E02               	movlw	high _dbuf
 19599  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 19600  010F9E  6EDA               	movwf	fsr2h,c
 19601  010FA0  0E00               	movlw	0
 19602  010FA2  6EDF               	movwf	indf2,c
 19603                           
 19604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 19605                           ;stkvar	_sign @ sp[(-56)+42]
 19606  010FA4  0EF2               	movlw	-14
 19607  010FA6  6AE3               	clrf	plusw1,c
 19608  010FA8  0EF3               	movlw	-13
 19609  010FAA  6AE3               	clrf	plusw1,c
 19610                           
 19611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 19612                           ;stkvar	_e @ sp[(-56)+34]
 19613  010FAC  0EEB               	movlw	-21
 19614  010FAE  AEE3               	btfss	plusw1,7,c
 19615  010FB0  D012               	goto	l12841
 19616                           
 19617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 19618  010FB2  0E01               	movlw	1
 19619  010FB4  6E0B               	movwf	(btemp+10)^0,c
 19620  010FB6  0E00               	movlw	0
 19621  010FB8  6E0C               	movwf	(btemp+11)^0,c
 19622                           
 19623                           ;stkvar	_sign @ sp[(-56)+42]
 19624  010FBA  0EF2               	movlw	-14
 19625  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19626  010FC2  0EF3               	movlw	-13
 19627  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 19628                           
 19629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 19630                           ;stkvar	_e @ sp[(-56)+34]
 19631                           ;stkvar	_e @ sp[(-56)+34]
 19632  010FCA  0EEA               	movlw	-22
 19633  010FCC  6CE3               	negf	plusw1,c
 19634  010FCE  0EEB               	movlw	-21
 19635  010FD0  1EE3               	comf	plusw1,f,c
 19636  010FD2  B0D8               	btfsc	status,0,c
 19637  010FD4  2AE3               	incf	plusw1,f,c
 19638  010FD6                     l12841:
 19639                           
 19640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 19641  010FD6  0E02               	movlw	2
 19642  010FD8  6E0B               	movwf	(btemp+10)^0,c
 19643  010FDA  0E00               	movlw	0
 19644  010FDC  6E0C               	movwf	(btemp+11)^0,c
 19645                           
 19646                           ;stkvar	_p @ sp[(-56)+40]
 19647  010FDE  0EF0               	movlw	-16
 19648  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19649  010FE6  0EF1               	movlw	-15
 19650  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 19651                           
 19652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 19653  010FEE  D051               	goto	l12853
 19654  010FF0                     l12843:
 19655                           
 19656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 19657                           ;stkvar	_i @ sp[(-56)+36]
 19658  010FF0  50E1               	movf	fsr1l,w,c
 19659  010FF2  0FEC               	addlw	-20
 19660  010FF4  6ED9               	movwf	fsr2l,c
 19661  010FF6  50E2               	movf	fsr1h,w,c
 19662  010FF8  6EDA               	movwf	fsr2h,c
 19663  010FFA  0EFF               	movlw	255
 19664  010FFC  22DA               	addwfc	fsr2h,f,c
 19665  010FFE  06DE               	decf	postinc2,f,c
 19666  011000  0E00               	movlw	0
 19667  011002  5ADD               	subwfb	postdec2,f,c
 19668                           
 19669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 19670                           ;stkvar	_i @ sp[(-56)+36]
 19671  011004  0EEC               	movlw	-20
 19672  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 19673  01100C  0EED               	movlw	-19
 19674  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19675  011014  0E97               	movlw	low _dbuf
 19676  011016  240B               	addwf	(btemp+10)^0,w,c
 19677  011018  6ED9               	movwf	fsr2l,c
 19678  01101A  0E02               	movlw	high _dbuf
 19679  01101C  200C               	addwfc	(btemp+11)^0,w,c
 19680  01101E  6EDA               	movwf	fsr2h,c
 19681  011020  0E0A               	movlw	10
 19682  011022  6EE6               	movwf	postinc1,c
 19683  011024  0E00               	movlw	0
 19684  011026  6EE6               	movwf	postinc1,c
 19685                           
 19686                           ;stkvar	_e @ sp[(-58)+34]
 19687  011028  0EE8               	movlw	-24
 19688  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 19689  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 19690  011036  EC90  F0D0         	call	___awmod	;wreg free
 19691  01103A  5001               	movf	btemp^0,w,c
 19692  01103C  0F30               	addlw	48
 19693  01103E  6EDF               	movwf	indf2,c
 19694                           
 19695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 19696  011040  0E0A               	movlw	10
 19697  011042  6EE6               	movwf	postinc1,c
 19698  011044  0E00               	movlw	0
 19699  011046  6EE6               	movwf	postinc1,c
 19700                           
 19701                           ;stkvar	_e @ sp[(-58)+34]
 19702  011048  0EE8               	movlw	-24
 19703  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 19704  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 19705  011056  EC57  F0CC         	call	___awdiv	;wreg free
 19706                           
 19707                           ;stkvar	_e @ sp[(-56)+34]
 19708  01105A  0EEA               	movlw	-22
 19709  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 19710  011062  0EEB               	movlw	-21
 19711  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19712                           
 19713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 19714                           ;stkvar	_p @ sp[(-56)+40]
 19715  01106A  50E1               	movf	fsr1l,w,c
 19716  01106C  0FF0               	addlw	-16
 19717  01106E  6ED9               	movwf	fsr2l,c
 19718  011070  50E2               	movf	fsr1h,w,c
 19719  011072  6EDA               	movwf	fsr2h,c
 19720  011074  0EFF               	movlw	255
 19721  011076  22DA               	addwfc	fsr2h,f,c
 19722  011078  06DE               	decf	postinc2,f,c
 19723  01107A  0E00               	movlw	0
 19724  01107C  5ADD               	subwfb	postdec2,f,c
 19725                           
 19726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 19727                           ;stkvar	_w @ sp[(-56)+38]
 19728  01107E  50E1               	movf	fsr1l,w,c
 19729  011080  0FEE               	addlw	-18
 19730  011082  6ED9               	movwf	fsr2l,c
 19731  011084  50E2               	movf	fsr1h,w,c
 19732  011086  6EDA               	movwf	fsr2h,c
 19733  011088  0EFF               	movlw	255
 19734  01108A  22DA               	addwfc	fsr2h,f,c
 19735  01108C  06DE               	decf	postinc2,f,c
 19736  01108E  0E00               	movlw	0
 19737  011090  5ADD               	subwfb	postdec2,f,c
 19738  011092                     l12853:
 19739                           
 19740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 19741                           ;stkvar	_e @ sp[(-56)+34]
 19742  011092  0EEA               	movlw	-22
 19743  011094  006F FF8C  F001    	movff	plusw1,btemp
 19744  01109A  0EEB               	movlw	-21
 19745  01109C  50E3               	movf	plusw1,w,c
 19746  01109E  1001               	iorwf	btemp^0,w,c
 19747  0110A0  A4D8               	btfss	status,2,c
 19748  0110A2  D7A6               	goto	l12843
 19749                           
 19750                           ;stkvar	_p @ sp[(-56)+40]
 19751  0110A4  0EF1               	movlw	-15
 19752  0110A6  BEE3               	btfsc	plusw1,7,c
 19753  0110A8  D007               	goto	u12020
 19754  0110AA  0EF1               	movlw	-15
 19755  0110AC  50E3               	movf	plusw1,w,c
 19756  0110AE  E1A0               	bnz	l12843
 19757  0110B0  0EF0               	movlw	-16
 19758  0110B2  04E3               	decf	plusw1,w,c
 19759  0110B4  B0D8               	btfsc	status,0,c
 19760  0110B6  D79C               	goto	l12843
 19761  0110B8                     u12020:
 19762                           
 19763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 19764                           ;stkvar	_i @ sp[(-56)+36]
 19765  0110B8  50E1               	movf	fsr1l,w,c
 19766  0110BA  0FEC               	addlw	-20
 19767  0110BC  6ED9               	movwf	fsr2l,c
 19768  0110BE  50E2               	movf	fsr1h,w,c
 19769  0110C0  6EDA               	movwf	fsr2h,c
 19770  0110C2  0EFF               	movlw	255
 19771  0110C4  22DA               	addwfc	fsr2h,f,c
 19772  0110C6  06DE               	decf	postinc2,f,c
 19773  0110C8  0E00               	movlw	0
 19774  0110CA  5ADD               	subwfb	postdec2,f,c
 19775                           
 19776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 19777                           ;stkvar	_sign @ sp[(-56)+42]
 19778  0110CC  0EF2               	movlw	-14
 19779  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 19780  0110D4  0EF3               	movlw	-13
 19781  0110D6  50E3               	movf	plusw1,w,c
 19782  0110D8  1001               	iorwf	btemp^0,w,c
 19783  0110DA  A4D8               	btfss	status,2,c
 19784  0110DC  D002               	goto	l12863
 19785  0110DE  0E2B               	movlw	43
 19786  0110E0  D001               	goto	L21
 19787  0110E2                     l12863:
 19788  0110E2  0E2D               	movlw	45
 19789  0110E4                     L21:
 19790  0110E4  6E0B               	movwf	(btemp+10)^0,c
 19791  0110E6  0E00               	movlw	0
 19792  0110E8  6E0C               	movwf	(btemp+11)^0,c
 19793                           
 19794                           ;stkvar	_efgtoa$5866 @ sp[(-56)+4]
 19795  0110EA  0ECC               	movlw	-52
 19796  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19797  0110F2  0ECD               	movlw	-51
 19798  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 19799                           
 19800                           ;stkvar	_efgtoa$5866 @ sp[(-56)+4]
 19801                           ;stkvar	_i @ sp[(-56)+36]
 19802  0110FA  0EEC               	movlw	-20
 19803  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19804  011102  0EED               	movlw	-19
 19805  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 19806  01110A  0E97               	movlw	low _dbuf
 19807  01110C  240B               	addwf	(btemp+10)^0,w,c
 19808  01110E  6ED9               	movwf	fsr2l,c
 19809  011110  0E02               	movlw	high _dbuf
 19810  011112  200C               	addwfc	(btemp+11)^0,w,c
 19811  011114  6EDA               	movwf	fsr2h,c
 19812  011116  0ECC               	movlw	-52
 19813  011118  006F FF8F FFDF     	movff	plusw1,indf2
 19814                           
 19815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 19816                           ;stkvar	_w @ sp[(-56)+38]
 19817  01111E  50E1               	movf	fsr1l,w,c
 19818  011120  0FEE               	addlw	-18
 19819  011122  6ED9               	movwf	fsr2l,c
 19820  011124  50E2               	movf	fsr1h,w,c
 19821  011126  6EDA               	movwf	fsr2h,c
 19822  011128  0EFF               	movlw	255
 19823  01112A  22DA               	addwfc	fsr2h,f,c
 19824  01112C  06DE               	decf	postinc2,f,c
 19825  01112E  0E00               	movlw	0
 19826  011130  5ADD               	subwfb	postdec2,f,c
 19827                           
 19828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 19829                           ;stkvar	_i @ sp[(-56)+36]
 19830  011132  50E1               	movf	fsr1l,w,c
 19831  011134  0FEC               	addlw	-20
 19832  011136  6ED9               	movwf	fsr2l,c
 19833  011138  50E2               	movf	fsr1h,w,c
 19834  01113A  6EDA               	movwf	fsr2h,c
 19835  01113C  0EFF               	movlw	255
 19836  01113E  22DA               	addwfc	fsr2h,f,c
 19837  011140  06DE               	decf	postinc2,f,c
 19838  011142  0E00               	movlw	0
 19839  011144  5ADD               	subwfb	postdec2,f,c
 19840  011146  0EBF               	movlw	191
 19841  011148  6E0B               	movwf	(btemp+10)^0,c
 19842  01114A  0EFF               	movlw	255
 19843  01114C  6E0C               	movwf	(btemp+11)^0,c
 19844                           
 19845                           ;stkvar	_c @ sp[(-56)+-7]
 19846  01114E  0EC1               	movlw	-63
 19847  011150  50E3               	movf	plusw1,w,c
 19848  011152  6E09               	movwf	(btemp+8)^0,c
 19849  011154  6A0A               	clrf	(btemp+9)^0,c
 19850  011156  500B               	movf	(btemp+10)^0,w,c
 19851  011158  2609               	addwf	(btemp+8)^0,f,c
 19852  01115A  500C               	movf	(btemp+11)^0,w,c
 19853  01115C  220A               	addwfc	(btemp+9)^0,f,c
 19854  01115E  500A               	movf	(btemp+9)^0,w,c
 19855  011160  E106               	bnz	u12040
 19856  011162  0E1A               	movlw	26
 19857  011164  5C09               	subwf	(btemp+8)^0,w,c
 19858  011166  B0D8               	btfsc	status,0,c
 19859  011168  D002               	goto	u12040
 19860  01116A  0E01               	movlw	1
 19861  01116C  D001               	goto	u12050
 19862  01116E                     u12040:
 19863  01116E  0E00               	movlw	0
 19864  011170                     u12050:
 19865  011170  6E0B               	movwf	(btemp+10)^0,c
 19866  011172  6A0C               	clrf	(btemp+11)^0,c
 19867                           
 19868                           ;stkvar	_efgtoa$5868 @ sp[(-56)+0]
 19869  011174  0EC8               	movlw	-56
 19870  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19871  01117C  0EC9               	movlw	-55
 19872  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 19873                           
 19874                           ;stkvar	_efgtoa$5868 @ sp[(-56)+0]
 19875  011184  0EC8               	movlw	-56
 19876  011186  006F FF8C  F001    	movff	plusw1,btemp
 19877  01118C  0EC9               	movlw	-55
 19878  01118E  50E3               	movf	plusw1,w,c
 19879  011190  1001               	iorwf	btemp^0,w,c
 19880  011192  A4D8               	btfss	status,2,c
 19881  011194  D002               	goto	l12879
 19882  011196  0E65               	movlw	101
 19883  011198  D001               	goto	L22
 19884  01119A                     l12879:
 19885  01119A  0E45               	movlw	69
 19886  01119C                     L22:
 19887  01119C  6E0B               	movwf	(btemp+10)^0,c
 19888  01119E  0E00               	movlw	0
 19889  0111A0  6E0C               	movwf	(btemp+11)^0,c
 19890                           
 19891                           ;stkvar	_efgtoa$5867 @ sp[(-56)+2]
 19892  0111A2  0ECA               	movlw	-54
 19893  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19894  0111AA  0ECB               	movlw	-53
 19895  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 19896                           
 19897                           ;stkvar	_efgtoa$5867 @ sp[(-56)+2]
 19898                           ;stkvar	_i @ sp[(-56)+36]
 19899  0111B2  0EEC               	movlw	-20
 19900  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 19901  0111BA  0EED               	movlw	-19
 19902  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 19903  0111C2  0E97               	movlw	low _dbuf
 19904  0111C4  240B               	addwf	(btemp+10)^0,w,c
 19905  0111C6  6ED9               	movwf	fsr2l,c
 19906  0111C8  0E02               	movlw	high _dbuf
 19907  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 19908  0111CC  6EDA               	movwf	fsr2h,c
 19909  0111CE  0ECA               	movlw	-54
 19910  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 19911                           
 19912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 19913                           ;stkvar	_w @ sp[(-56)+38]
 19914  0111D6  50E1               	movf	fsr1l,w,c
 19915  0111D8  0FEE               	addlw	-18
 19916  0111DA  6ED9               	movwf	fsr2l,c
 19917  0111DC  50E2               	movf	fsr1h,w,c
 19918  0111DE  6EDA               	movwf	fsr2h,c
 19919  0111E0  0EFF               	movlw	255
 19920  0111E2  22DA               	addwfc	fsr2h,f,c
 19921  0111E4  06DE               	decf	postinc2,f,c
 19922  0111E6  0E00               	movlw	0
 19923  0111E8  5ADD               	subwfb	postdec2,f,c
 19924                           
 19925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 19926                           ;stkvar	_i @ sp[(-56)+36]
 19927  0111EA  0EEC               	movlw	-20
 19928  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19929  0111F2  0EED               	movlw	-19
 19930  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 19931  0111FA  0E97               	movlw	low _dbuf
 19932  0111FC  240B               	addwf	(btemp+10)^0,w,c
 19933  0111FE  6E09               	movwf	(btemp+8)^0,c
 19934  011200  0E02               	movlw	high _dbuf
 19935  011202  200C               	addwfc	(btemp+11)^0,w,c
 19936  011204  6E0A               	movwf	(btemp+9)^0,c
 19937  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 19938  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 19939                           
 19940                           ;stkvar	_n @ sp[(-58)+32]
 19941  011212  0E97               	movlw	low _dbuf
 19942  011214  6E0B               	movwf	(btemp+10)^0,c
 19943  011216  0E02               	movlw	high _dbuf
 19944  011218  6E0C               	movwf	(btemp+11)^0,c
 19945  01121A  0EE6               	movlw	-26
 19946  01121C  50E3               	movf	plusw1,w,c
 19947  01121E  260B               	addwf	(btemp+10)^0,f,c
 19948  011220  0EE7               	movlw	-25
 19949  011222  50E3               	movf	plusw1,w,c
 19950  011224  220C               	addwfc	(btemp+11)^0,f,c
 19951  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19952  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 19953  011232  EC85  F0D4         	call	_strcpy	;wreg free
 19954  011236  EF16  F081         	goto	l12631
 19955  01123A                     l2317:
 19956                           
 19957                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 19958  01123A  0EC1               	movlw	193
 19959  01123C  26E1               	addwf	fsr1l,f,c
 19960  01123E  0EFF               	movlw	255
 19961  011240  22E2               	addwfc	fsr1h,f,c
 19962  011242  0012               	return		;funcret
 19963  011244                     __end_of_efgtoa:
 19964                           	opt callstack 0
 19965                           
 19966 ;; *************** function _tolower *****************
 19967 ;; Defined at:
 19968 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 19969 ;; Parameters:    Size  Location     Type
 19970 ;;  c               2  [STACK] int 
 19971 ;; Auto vars:     Size  Location     Type
 19972 ;;		None
 19973 ;; Return value:  Size  Location     Type
 19974 ;;                  2  [STACK] int 
 19975 ;; Registers used:
 19976 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 19977 ;; Tracked objects:
 19978 ;;		On entry : 0/0
 19979 ;;		On exit  : 0/0
 19980 ;;		Unchanged: 0/0
 19981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19986 ;;Total ram usage:        0 bytes
 19987 ;; Hardware stack levels used:    1
 19988 ;; Hardware stack levels required when called:   16
 19989 ;; This function calls:
 19990 ;;		_isupper
 19991 ;; This function is called by:
 19992 ;;		_efgtoa
 19993 ;;		_vfpfcnvrt
 19994 ;; This function uses a reentrant model
 19995 ;;
 19996                           
 19997                           	psect	text66
 19998  01B51C                     __ptext66:
 19999                           	opt callstack 0
 20000  01B51C                     _tolower:
 20001                           	opt callstack 0
 20002                           
 20003                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20004  01B51C  52E6               	movf	postinc1,f,c
 20005  01B51E  52E6               	movf	postinc1,f,c
 20006                           
 20007                           ;stkvar	_c @ sp[(-2)+-2]
 20008                           
 20009                           ;incstack = 0
 20010 ;; hardware stack exceeded
 20011  01B520  0EFC               	movlw	-4
 20012  01B522  50E3               	movf	plusw1,w,c
 20013  01B524  0FBF               	addlw	191
 20014  01B526  6E0B               	movwf	(btemp+10)^0,c
 20015  01B528  0EFD               	movlw	-3
 20016  01B52A  006F FF8C  F00C    	movff	plusw1,btemp+11
 20017  01B530  0EFF               	movlw	255
 20018  01B532  220C               	addwfc	(btemp+11)^0,f,c
 20019  01B534  500C               	movf	(btemp+11)^0,w,c
 20020  01B536  E106               	bnz	u6330
 20021  01B538  0E1A               	movlw	26
 20022  01B53A  5C0B               	subwf	(btemp+10)^0,w,c
 20023  01B53C  B0D8               	btfsc	status,0,c
 20024  01B53E  D002               	goto	u6330
 20025  01B540  0E01               	movlw	1
 20026  01B542  D001               	goto	u6340
 20027  01B544                     u6330:
 20028  01B544  0E00               	movlw	0
 20029  01B546                     u6340:
 20030  01B546  6E0B               	movwf	(btemp+10)^0,c
 20031  01B548  6A0C               	clrf	(btemp+11)^0,c
 20032                           
 20033                           ;stkvar	_tolower$6687 @ sp[(-2)+0]
 20034  01B54A  0EFE               	movlw	-2
 20035  01B54C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20036  01B552  0EFF               	movlw	-1
 20037  01B554  0060  F033  FFE3   	movff	btemp+11,plusw1
 20038                           
 20039                           ;stkvar	_tolower$6687 @ sp[(-2)+0]
 20040  01B55A  0EFE               	movlw	-2
 20041  01B55C  006F FF8C  F001    	movff	plusw1,btemp
 20042  01B562  0EFF               	movlw	-1
 20043  01B564  50E3               	movf	plusw1,w,c
 20044  01B566  1001               	iorwf	btemp^0,w,c
 20045  01B568  B4D8               	btfsc	status,2,c
 20046  01B56A  D00D               	goto	l8403
 20047                           
 20048                           ;stkvar	_c @ sp[(-2)+-2]
 20049  01B56C  0EFC               	movlw	-4
 20050  01B56E  006F FF8C  F001    	movff	plusw1,btemp
 20051  01B574  0EFD               	movlw	-3
 20052  01B576  006F FF8C  F002    	movff	plusw1,btemp+1
 20053  01B57C  0E20               	movlw	32
 20054  01B57E  1201               	iorwf	btemp^0,f,c
 20055  01B580  0E00               	movlw	0
 20056  01B582  1202               	iorwf	(btemp+1)^0,f,c
 20057  01B584  D008               	goto	l3589
 20058  01B586                     l8403:
 20059                           
 20060                           ;stkvar	_c @ sp[(-2)+-2]
 20061  01B586  0EFC               	movlw	-4
 20062  01B588  006F FF8C  F001    	movff	plusw1,btemp
 20063  01B58E  0EFD               	movlw	-3
 20064  01B590  006F FF8C  F002    	movff	plusw1,btemp+1
 20065  01B596                     l3589:
 20066                           
 20067                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20068  01B596  52E5               	movf	postdec1,f,c
 20069  01B598  52E5               	movf	postdec1,f,c
 20070  01B59A  52E5               	movf	postdec1,f,c
 20071  01B59C  52E5               	movf	postdec1,f,c
 20072  01B59E  0012               	return		;funcret
 20073  01B5A0                     __end_of_tolower:
 20074                           	opt callstack 0
 20075                           
 20076 ;; *************** function _isupper *****************
 20077 ;; Defined at:
 20078 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 20079 ;; Parameters:    Size  Location     Type
 20080 ;;  c               2  [STACK] int 
 20081 ;; Auto vars:     Size  Location     Type
 20082 ;;		None
 20083 ;; Return value:  Size  Location     Type
 20084 ;;                  2  [STACK] int 
 20085 ;; Registers used:
 20086 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20087 ;; Tracked objects:
 20088 ;;		On entry : 0/0
 20089 ;;		On exit  : 0/0
 20090 ;;		Unchanged: 0/0
 20091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20096 ;;Total ram usage:        0 bytes
 20097 ;; Hardware stack levels used:    1
 20098 ;; Hardware stack levels required when called:   15
 20099 ;; This function calls:
 20100 ;;		Nothing
 20101 ;; This function is called by:
 20102 ;;		_efgtoa
 20103 ;;		_xtoa
 20104 ;;		_vfpfcnvrt
 20105 ;;		_tolower
 20106 ;; This function uses a reentrant model
 20107 ;;
 20108                           
 20109                           	psect	text67
 20110  01C420                     __ptext67:
 20111                           	opt callstack 0
 20112  01C420                     _isupper:
 20113                           	opt callstack 0
 20114                           
 20115                           ;stkvar	_c @ sp[(0)+-2]
 20116                           
 20117                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20118                           ;incstack = 0
 20119 ;; hardware stack exceeded
 20120  01C420  0EFE               	movlw	-2
 20121  01C422  50E3               	movf	plusw1,w,c
 20122  01C424  0FBF               	addlw	191
 20123  01C426  6E0B               	movwf	(btemp+10)^0,c
 20124  01C428  0EFF               	movlw	-1
 20125  01C42A  006F FF8C  F00C    	movff	plusw1,btemp+11
 20126  01C430  0EFF               	movlw	255
 20127  01C432  220C               	addwfc	(btemp+11)^0,f,c
 20128  01C434  500C               	movf	(btemp+11)^0,w,c
 20129  01C436  E106               	bnz	u5680
 20130  01C438  0E1A               	movlw	26
 20131  01C43A  5C0B               	subwf	(btemp+10)^0,w,c
 20132  01C43C  B0D8               	btfsc	status,0,c
 20133  01C43E  D002               	goto	u5680
 20134  01C440  0E01               	movlw	1
 20135  01C442  D001               	goto	u5690
 20136  01C444                     u5680:
 20137  01C444  0E00               	movlw	0
 20138  01C446                     u5690:
 20139  01C446  6E01               	movwf	btemp^0,c
 20140  01C448  6A02               	clrf	(btemp+1)^0,c
 20141                           
 20142                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20143  01C44A  52E5               	movf	postdec1,f,c
 20144  01C44C  52E5               	movf	postdec1,f,c
 20145  01C44E  0012               	return		;funcret
 20146  01C450                     __end_of_isupper:
 20147                           	opt callstack 0
 20148                           
 20149 ;; *************** function _strcpy *****************
 20150 ;; Defined at:
 20151 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 20152 ;; Parameters:    Size  Location     Type
 20153 ;;  dest            2  [STACK] PTR unsigned char 
 20154 ;;		 -> dbuf(80), 
 20155 ;;  src             2  [STACK] PTR const unsigned char 
 20156 ;;		 -> STR_84(4), STR_83(4), STR_80(4), STR_79(4), 
 20157 ;;		 -> dbuf(80), 
 20158 ;; Auto vars:     Size  Location     Type
 20159 ;;  d               2  [STACK] PTR unsigned char 
 20160 ;;		 -> dbuf(80), 
 20161 ;;  s               2  [STACK] PTR const unsigned char 
 20162 ;;		 -> STR_84(4), STR_83(4), STR_80(4), STR_79(4), 
 20163 ;;		 -> dbuf(80), 
 20164 ;; Return value:  Size  Location     Type
 20165 ;;                  2  [STACK] PTR unsigned char 
 20166 ;; Registers used:
 20167 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 20168 ;; Tracked objects:
 20169 ;;		On entry : 0/0
 20170 ;;		On exit  : 0/0
 20171 ;;		Unchanged: 0/0
 20172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20177 ;;Total ram usage:        0 bytes
 20178 ;; Hardware stack levels used:    1
 20179 ;; Hardware stack levels required when called:   15
 20180 ;; This function calls:
 20181 ;;		Nothing
 20182 ;; This function is called by:
 20183 ;;		_efgtoa
 20184 ;; This function uses a reentrant model
 20185 ;;
 20186                           
 20187                           	psect	text68
 20188  01A90A                     __ptext68:
 20189                           	opt callstack 0
 20190  01A90A                     _strcpy:
 20191                           	opt callstack 0
 20192                           
 20193                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20194  01A90A  52E6               	movf	postinc1,f,c
 20195  01A90C  52E6               	movf	postinc1,f,c
 20196  01A90E  52E6               	movf	postinc1,f,c
 20197  01A910  52E6               	movf	postinc1,f,c
 20198                           
 20199                           ;stkvar	_src @ sp[(-4)+-4]
 20200                           
 20201                           ;incstack = 0
 20202 ;; hardware stack exceeded
 20203  01A912  0EF8               	movlw	-8
 20204  01A914  006F FF8C  F00B    	movff	plusw1,btemp+10
 20205  01A91A  0EF9               	movlw	-7
 20206  01A91C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20207                           
 20208                           ;stkvar	_s @ sp[(-4)+2]
 20209  01A922  0EFF               	movlw	-1
 20210  01A924  0060  F033  FFE3   	movff	btemp+11,plusw1
 20211  01A92A  0EFE               	movlw	-2
 20212  01A92C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20213                           
 20214                           ;stkvar	_dest @ sp[(-4)+-2]
 20215  01A932  0EFA               	movlw	-6
 20216  01A934  006F FF8C  F00B    	movff	plusw1,btemp+10
 20217  01A93A  0EFB               	movlw	-5
 20218  01A93C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20219                           
 20220                           ;stkvar	_d @ sp[(-4)+0]
 20221  01A942  0EFD               	movlw	-3
 20222  01A944  0060  F033  FFE3   	movff	btemp+11,plusw1
 20223  01A94A  0EFC               	movlw	-4
 20224  01A94C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20225  01A952                     l12493:
 20226                           
 20227                           ;stkvar	_s @ sp[(-4)+2]
 20228  01A952  50E1               	movf	fsr1l,w,c
 20229  01A954  0FFE               	addlw	-2
 20230  01A956  6ED9               	movwf	fsr2l,c
 20231  01A958  50E2               	movf	fsr1h,w,c
 20232  01A95A  6EDA               	movwf	fsr2h,c
 20233  01A95C  0EFF               	movlw	255
 20234  01A95E  22DA               	addwfc	fsr2h,f,c
 20235  01A960  006F FF7C  F00B    	movff	indf2,btemp+10
 20236  01A966  0E01               	movlw	1
 20237  01A968  26DE               	addwf	postinc2,f,c
 20238  01A96A  006F FF7C  F00C    	movff	indf2,btemp+11
 20239  01A970  0E00               	movlw	0
 20240  01A972  22DD               	addwfc	postdec2,f,c
 20241  01A974  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 20242  01A97A  0060  F033  FFF7   	movff	btemp+11,tblptrh
 20243  01A980  0E00               	movlw	low (__mediumconst shr (0+16))
 20244  01A982  6EF8               	movwf	tblptru,c
 20245                           
 20246                           ;stkvar	_d @ sp[(-4)+0]
 20247  01A984  50E1               	movf	fsr1l,w,c
 20248  01A986  0FFC               	addlw	-4
 20249  01A988  6ED9               	movwf	fsr2l,c
 20250  01A98A  50E2               	movf	fsr1h,w,c
 20251  01A98C  6EDA               	movwf	fsr2h,c
 20252  01A98E  0EFF               	movlw	255
 20253  01A990  22DA               	addwfc	fsr2h,f,c
 20254  01A992  006F FF7C  F00B    	movff	indf2,btemp+10
 20255  01A998  0E01               	movlw	1
 20256  01A99A  26DE               	addwf	postinc2,f,c
 20257  01A99C  006F FF7C  F00C    	movff	indf2,btemp+11
 20258  01A9A2  0E00               	movlw	0
 20259  01A9A4  22DD               	addwfc	postdec2,f,c
 20260  01A9A6  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 20261  01A9AC  0060  F033  FFDA   	movff	btemp+11,fsr2h
 20262  01A9B2  0E1F               	movlw	(high __ramtop+-1)
 20263  01A9B4  64F7               	cpfsgt	tblptrh,c
 20264  01A9B6  D003               	bra	u11347
 20265  01A9B8  0008               	tblrd		*
 20266  01A9BA  50F5               	movf	tablat,w,c
 20267  01A9BC  D007               	bra	u11340
 20268  01A9BE                     u11347:
 20269  01A9BE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20270  01A9C4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20271  01A9CA  50EF               	movf	indf0,w,c
 20272  01A9CC                     u11340:
 20273  01A9CC  6EDF               	movwf	indf2,c
 20274  01A9CE  50DF               	movf	indf2,w,c
 20275  01A9D0  A4D8               	btfss	status,2,c
 20276  01A9D2  D7BF               	goto	l12493
 20277                           
 20278                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 20279  01A9D4  0EF8               	movlw	248
 20280  01A9D6  26E1               	addwf	fsr1l,f,c
 20281  01A9D8  0EFF               	movlw	255
 20282  01A9DA  22E2               	addwfc	fsr1h,f,c
 20283  01A9DC  0012               	return		;funcret
 20284  01A9DE                     __end_of_strcpy:
 20285                           	opt callstack 0
 20286                           
 20287 ;; *************** function _floorf *****************
 20288 ;; Defined at:
 20289 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 20290 ;; Parameters:    Size  Location     Type
 20291 ;;  x               4  [STACK] float 
 20292 ;; Auto vars:     Size  Location     Type
 20293 ;;  u               4  [STACK] struct .
 20294 ;;  m               4  [STACK] unsigned long 
 20295 ;;  e               2  [STACK] int 
 20296 ;; Return value:  Size  Location     Type
 20297 ;;                  4  [STACK] float 
 20298 ;; Registers used:
 20299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20300 ;; Tracked objects:
 20301 ;;		On entry : 0/0
 20302 ;;		On exit  : 0/0
 20303 ;;		Unchanged: 0/0
 20304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20309 ;;Total ram usage:        0 bytes
 20310 ;; Hardware stack levels used:    1
 20311 ;; Hardware stack levels required when called:   15
 20312 ;; This function calls:
 20313 ;;		Nothing
 20314 ;; This function is called by:
 20315 ;;		_efgtoa
 20316 ;; This function uses a reentrant model
 20317 ;;
 20318                           
 20319                           	psect	text69
 20320  016858                     __ptext69:
 20321                           	opt callstack 0
 20322  016858                     _floorf:
 20323                           	opt callstack 0
 20324                           
 20325                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 20326  016858  0E0A               	movlw	10
 20327  01685A  26E1               	addwf	fsr1l,f,c
 20328  01685C  0E00               	movlw	0
 20329  01685E  22E2               	addwfc	fsr1h,f,c
 20330                           
 20331                           ;incstack = 0
 20332 ;; hardware stack exceeded
 20333  016860  0060  F7A8  F009   	movff	floorf@F524,btemp+8
 20334  016866  0060  F7AC  F00A   	movff	floorf@F524+1,btemp+9
 20335  01686C  0060  F7B0  F00B   	movff	floorf@F524+2,btemp+10
 20336  016872  0060  F7B4  F00C   	movff	floorf@F524+3,btemp+11
 20337                           
 20338                           ;stkvar	_u @ sp[(-10)+0]
 20339  016878  0EF6               	movlw	-10
 20340  01687A  0060  F027  FFE3   	movff	btemp+8,plusw1
 20341  016880  0EF7               	movlw	-9
 20342  016882  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20343  016888  0EF8               	movlw	-8
 20344  01688A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20345  016890  0EF9               	movlw	-7
 20346  016892  0060  F033  FFE3   	movff	btemp+11,plusw1
 20347                           
 20348                           ;stkvar	_x @ sp[(-10)+-4]
 20349  016898  0EF2               	movlw	-14
 20350  01689A  006F FF8C  F009    	movff	plusw1,btemp+8
 20351  0168A0  0EF3               	movlw	-13
 20352  0168A2  006F FF8C  F00A    	movff	plusw1,btemp+9
 20353  0168A8  0EF4               	movlw	-12
 20354  0168AA  006F FF8C  F00B    	movff	plusw1,btemp+10
 20355  0168B0  0EF5               	movlw	-11
 20356  0168B2  006F FF8C  F00C    	movff	plusw1,btemp+11
 20357                           
 20358                           ;stkvar	_u @ sp[(-10)+0]
 20359  0168B8  0EF6               	movlw	-10
 20360  0168BA  0060  F027  FFE3   	movff	btemp+8,plusw1
 20361  0168C0  0EF7               	movlw	-9
 20362  0168C2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20363  0168C8  0EF8               	movlw	-8
 20364  0168CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20365  0168D0  0EF9               	movlw	-7
 20366  0168D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 20367  0168D8  0E81               	movlw	129
 20368  0168DA  6E0B               	movwf	(btemp+10)^0,c
 20369  0168DC  0EFF               	movlw	255
 20370  0168DE  6E0C               	movwf	(btemp+11)^0,c
 20371                           
 20372                           ;stkvar	_u @ sp[(-10)+0]
 20373  0168E0  0EF6               	movlw	-10
 20374  0168E2  006F FF8C  F005    	movff	plusw1,btemp+4
 20375  0168E8  0EF7               	movlw	-9
 20376  0168EA  006F FF8C  F006    	movff	plusw1,btemp+5
 20377  0168F0  0EF8               	movlw	-8
 20378  0168F2  006F FF8C  F007    	movff	plusw1,btemp+6
 20379  0168F8  0EF9               	movlw	-7
 20380  0168FA  006F FF8C  F008    	movff	plusw1,btemp+7
 20381  016900  0E18               	movlw	24
 20382  016902  D005               	goto	u6360
 20383  016904                     u6365:
 20384  016904  90D8               	bcf	status,0,c
 20385  016906  3208               	rrcf	(btemp+7)^0,f,c
 20386  016908  3207               	rrcf	(btemp+6)^0,f,c
 20387  01690A  3206               	rrcf	(btemp+5)^0,f,c
 20388  01690C  3205               	rrcf	(btemp+4)^0,f,c
 20389  01690E                     u6360:
 20390  01690E  2EE8               	decfsz	wreg,f,c
 20391  016910  D7F9               	goto	u6365
 20392  016912  0060  F014  F009   	movff	btemp+4,btemp+8
 20393  016918  0060  F018  F00A   	movff	btemp+5,btemp+9
 20394  01691E  0EFF               	movlw	255
 20395  016920  1609               	andwf	(btemp+8)^0,f,c
 20396  016922  0E00               	movlw	0
 20397  016924  160A               	andwf	(btemp+9)^0,f,c
 20398  016926  500B               	movf	(btemp+10)^0,w,c
 20399  016928  2609               	addwf	(btemp+8)^0,f,c
 20400  01692A  500C               	movf	(btemp+11)^0,w,c
 20401  01692C  220A               	addwfc	(btemp+9)^0,f,c
 20402                           
 20403                           ;stkvar	_e @ sp[(-10)+8]
 20404  01692E  0EFE               	movlw	-2
 20405  016930  0060  F027  FFE3   	movff	btemp+8,plusw1
 20406  016936  0EFF               	movlw	-1
 20407  016938  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20408                           
 20409                           ;stkvar	_e @ sp[(-10)+8]
 20410  01693E  0EFF               	movlw	-1
 20411  016940  BEE3               	btfsc	plusw1,7,c
 20412  016942  D019               	goto	l8417
 20413  016944  0EFF               	movlw	-1
 20414  016946  50E3               	movf	plusw1,w,c
 20415  016948  E108               	bnz	u6370
 20416  01694A  0EFE               	movlw	-2
 20417  01694C  006F FF8C  F001    	movff	plusw1,btemp
 20418  016952  0E17               	movlw	23
 20419  016954  5E01               	subwf	btemp^0,f,c
 20420  016956  A0D8               	btfss	status,0,c
 20421  016958  D00E               	goto	l8417
 20422  01695A                     u6370:
 20423                           
 20424                           ;stkvar	_x @ sp[(-10)+-4]
 20425  01695A  0EF2               	movlw	-14
 20426  01695C  006F FF8C  F001    	movff	plusw1,btemp
 20427  016962  0EF3               	movlw	-13
 20428  016964  006F FF8C  F002    	movff	plusw1,btemp+1
 20429  01696A  0EF4               	movlw	-12
 20430  01696C  006F FF8C  F003    	movff	plusw1,btemp+2
 20431  016972  0EF5               	movlw	-11
 20432  016974  D11F               	goto	L23
 20433  016976                     l8417:
 20434                           
 20435                           ;stkvar	_e @ sp[(-10)+8]
 20436  016976  0EFF               	movlw	-1
 20437  016978  BEE3               	btfsc	plusw1,7,c
 20438  01697A  D0B4               	goto	l8433
 20439                           
 20440                           ;stkvar	_e @ sp[(-10)+8]
 20441  01697C  0EFE               	movlw	-2
 20442  01697E  006F FF8C  F00C    	movff	plusw1,btemp+11
 20443  016984  0EFF               	movlw	255
 20444  016986  6E05               	movwf	(btemp+4)^0,c
 20445  016988  0EFF               	movlw	255
 20446  01698A  6E06               	movwf	(btemp+5)^0,c
 20447  01698C  0E7F               	movlw	127
 20448  01698E  6E07               	movwf	(btemp+6)^0,c
 20449  016990  0E00               	movlw	0
 20450  016992  6E08               	movwf	(btemp+7)^0,c
 20451  016994                     u6395:
 20452  016994  660C               	tstfsz	(btemp+11)^0,c
 20453  016996  D001               	goto	u6396
 20454  016998  D007               	goto	u6397
 20455  01699A                     u6396:
 20456  01699A  3408               	rlcf	(btemp+7)^0,w,c
 20457  01699C  3208               	rrcf	(btemp+7)^0,f,c
 20458  01699E  3207               	rrcf	(btemp+6)^0,f,c
 20459  0169A0  3206               	rrcf	(btemp+5)^0,f,c
 20460  0169A2  3205               	rrcf	(btemp+4)^0,f,c
 20461  0169A4  2E0C               	decfsz	(btemp+11)^0,f,c
 20462  0169A6  D7F6               	goto	u6395
 20463  0169A8                     u6397:
 20464                           
 20465                           ;stkvar	_m @ sp[(-10)+4]
 20466  0169A8  0EFA               	movlw	-6
 20467  0169AA  0060  F017  FFE3   	movff	btemp+4,plusw1
 20468  0169B0  0EFB               	movlw	-5
 20469  0169B2  0060  F01B  FFE3   	movff	btemp+5,plusw1
 20470  0169B8  0EFC               	movlw	-4
 20471  0169BA  0060  F01F  FFE3   	movff	btemp+6,plusw1
 20472  0169C0  0EFD               	movlw	-3
 20473  0169C2  0060  F023  FFE3   	movff	btemp+7,plusw1
 20474                           
 20475                           ;stkvar	_m @ sp[(-10)+4]
 20476                           ;stkvar	_u @ sp[(-10)+0]
 20477  0169C8  0EF6               	movlw	-10
 20478  0169CA  006F FF8C  F009    	movff	plusw1,btemp+8
 20479  0169D0  0EF7               	movlw	-9
 20480  0169D2  006F FF8C  F00A    	movff	plusw1,btemp+9
 20481  0169D8  0EF8               	movlw	-8
 20482  0169DA  006F FF8C  F00B    	movff	plusw1,btemp+10
 20483  0169E0  0EF9               	movlw	-7
 20484  0169E2  006F FF8C  F00C    	movff	plusw1,btemp+11
 20485  0169E8  0EFA               	movlw	-6
 20486  0169EA  50E3               	movf	plusw1,w,c
 20487  0169EC  1609               	andwf	(btemp+8)^0,f,c
 20488  0169EE  0EFB               	movlw	-5
 20489  0169F0  50E3               	movf	plusw1,w,c
 20490  0169F2  160A               	andwf	(btemp+9)^0,f,c
 20491  0169F4  0EFC               	movlw	-4
 20492  0169F6  50E3               	movf	plusw1,w,c
 20493  0169F8  160B               	andwf	(btemp+10)^0,f,c
 20494  0169FA  0EFD               	movlw	-3
 20495  0169FC  50E3               	movf	plusw1,w,c
 20496  0169FE  160C               	andwf	(btemp+11)^0,f,c
 20497  016A00  5009               	movf	(btemp+8)^0,w,c
 20498  016A02  100A               	iorwf	(btemp+9)^0,w,c
 20499  016A04  100B               	iorwf	(btemp+10)^0,w,c
 20500  016A06  100C               	iorwf	(btemp+11)^0,w,c
 20501  016A08  B4D8               	btfsc	status,2,c
 20502  016A0A  D7A7               	goto	u6370
 20503                           
 20504                           ;stkvar	_u @ sp[(-10)+0]
 20505  016A0C  0EF6               	movlw	-10
 20506  016A0E  006F FF8C  F009    	movff	plusw1,btemp+8
 20507  016A14  0EF7               	movlw	-9
 20508  016A16  006F FF8C  F00A    	movff	plusw1,btemp+9
 20509  016A1C  0EF8               	movlw	-8
 20510  016A1E  006F FF8C  F00B    	movff	plusw1,btemp+10
 20511  016A24  0EF9               	movlw	-7
 20512  016A26  006F FF8C  F00C    	movff	plusw1,btemp+11
 20513  016A2C  0E20               	movlw	32
 20514  016A2E  D005               	goto	u6410
 20515  016A30                     u6415:
 20516  016A30  90D8               	bcf	status,0,c
 20517  016A32  320C               	rrcf	(btemp+11)^0,f,c
 20518  016A34  320B               	rrcf	(btemp+10)^0,f,c
 20519  016A36  320A               	rrcf	(btemp+9)^0,f,c
 20520  016A38  3209               	rrcf	(btemp+8)^0,f,c
 20521  016A3A                     u6410:
 20522  016A3A  2EE8               	decfsz	wreg,f,c
 20523  016A3C  D7F9               	goto	u6415
 20524  016A3E  5009               	movf	(btemp+8)^0,w,c
 20525  016A40  B4D8               	btfsc	status,2,c
 20526  016A42  D028               	goto	l8431
 20527                           
 20528                           ;stkvar	_m @ sp[(-10)+4]
 20529                           ;stkvar	_u @ sp[(-10)+0]
 20530  016A44  0EF6               	movlw	-10
 20531  016A46  50E3               	movf	plusw1,w,c
 20532  016A48  6E01               	movwf	btemp^0,c
 20533  016A4A  0EFA               	movlw	-6
 20534  016A4C  50E3               	movf	plusw1,w,c
 20535  016A4E  2601               	addwf	btemp^0,f,c
 20536  016A50  0EF6               	movlw	-10
 20537  016A52  0060  F007  FFE3   	movff	btemp,plusw1
 20538  016A58  0EF7               	movlw	-9
 20539  016A5A  50E3               	movf	plusw1,w,c
 20540  016A5C  6E01               	movwf	btemp^0,c
 20541  016A5E  0EFB               	movlw	-5
 20542  016A60  50E3               	movf	plusw1,w,c
 20543  016A62  2201               	addwfc	btemp^0,f,c
 20544  016A64  0EF7               	movlw	-9
 20545  016A66  0060  F007  FFE3   	movff	btemp,plusw1
 20546  016A6C  0EF8               	movlw	-8
 20547  016A6E  50E3               	movf	plusw1,w,c
 20548  016A70  6E01               	movwf	btemp^0,c
 20549  016A72  0EFC               	movlw	-4
 20550  016A74  50E3               	movf	plusw1,w,c
 20551  016A76  2201               	addwfc	btemp^0,f,c
 20552  016A78  0EF8               	movlw	-8
 20553  016A7A  0060  F007  FFE3   	movff	btemp,plusw1
 20554  016A80  0EF9               	movlw	-7
 20555  016A82  50E3               	movf	plusw1,w,c
 20556  016A84  6E01               	movwf	btemp^0,c
 20557  016A86  0EFD               	movlw	-3
 20558  016A88  50E3               	movf	plusw1,w,c
 20559  016A8A  2201               	addwfc	btemp^0,f,c
 20560  016A8C  0EF9               	movlw	-7
 20561  016A8E  0060  F007  FFE3   	movff	btemp,plusw1
 20562  016A94                     l8431:
 20563                           
 20564                           ;stkvar	_m @ sp[(-10)+4]
 20565  016A94  0EFA               	movlw	-6
 20566  016A96  006F FF8C  F009    	movff	plusw1,btemp+8
 20567  016A9C  0EFB               	movlw	-5
 20568  016A9E  006F FF8C  F00A    	movff	plusw1,btemp+9
 20569  016AA4  0EFC               	movlw	-4
 20570  016AA6  006F FF8C  F00B    	movff	plusw1,btemp+10
 20571  016AAC  0EFD               	movlw	-3
 20572  016AAE  006F FF8C  F00C    	movff	plusw1,btemp+11
 20573  016AB4  1C09               	comf	(btemp+8)^0,w,c
 20574  016AB6  6E05               	movwf	(btemp+4)^0,c
 20575  016AB8  1C0A               	comf	(btemp+9)^0,w,c
 20576  016ABA  6E06               	movwf	(btemp+5)^0,c
 20577  016ABC  1C0B               	comf	(btemp+10)^0,w,c
 20578  016ABE  6E07               	movwf	(btemp+6)^0,c
 20579  016AC0  1C0C               	comf	(btemp+11)^0,w,c
 20580  016AC2  6E08               	movwf	(btemp+7)^0,c
 20581                           
 20582                           ;stkvar	_u @ sp[(-10)+0]
 20583  016AC4  50E1               	movf	fsr1l,w,c
 20584  016AC6  0FF6               	addlw	-10
 20585  016AC8  6ED9               	movwf	fsr2l,c
 20586  016ACA  50E2               	movf	fsr1h,w,c
 20587  016ACC  6EDA               	movwf	fsr2h,c
 20588  016ACE  0EFF               	movlw	255
 20589  016AD0  22DA               	addwfc	fsr2h,f,c
 20590  016AD2  5005               	movf	(btemp+4)^0,w,c
 20591  016AD4  16DE               	andwf	postinc2,f,c
 20592  016AD6  5006               	movf	(btemp+5)^0,w,c
 20593  016AD8  16DE               	andwf	postinc2,f,c
 20594  016ADA  5007               	movf	(btemp+6)^0,w,c
 20595  016ADC  16DE               	andwf	postinc2,f,c
 20596  016ADE  5008               	movf	(btemp+7)^0,w,c
 20597  016AE0  16DE               	andwf	postinc2,f,c
 20598  016AE2  D05B               	goto	l8441
 20599  016AE4                     l8433:
 20600                           
 20601                           ;stkvar	_u @ sp[(-10)+0]
 20602  016AE4  0EF6               	movlw	-10
 20603  016AE6  006F FF8C  F009    	movff	plusw1,btemp+8
 20604  016AEC  0EF7               	movlw	-9
 20605  016AEE  006F FF8C  F00A    	movff	plusw1,btemp+9
 20606  016AF4  0EF8               	movlw	-8
 20607  016AF6  006F FF8C  F00B    	movff	plusw1,btemp+10
 20608  016AFC  0EF9               	movlw	-7
 20609  016AFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 20610  016B04  0E20               	movlw	32
 20611  016B06  D005               	goto	u6430
 20612  016B08                     u6435:
 20613  016B08  90D8               	bcf	status,0,c
 20614  016B0A  320C               	rrcf	(btemp+11)^0,f,c
 20615  016B0C  320B               	rrcf	(btemp+10)^0,f,c
 20616  016B0E  320A               	rrcf	(btemp+9)^0,f,c
 20617  016B10  3209               	rrcf	(btemp+8)^0,f,c
 20618  016B12                     u6430:
 20619  016B12  2EE8               	decfsz	wreg,f,c
 20620  016B14  D7F9               	goto	u6435
 20621  016B16  6609               	tstfsz	(btemp+8)^0,c
 20622  016B18  D009               	goto	l8437
 20623                           
 20624                           ;stkvar	_u @ sp[(-10)+0]
 20625  016B1A  0EF6               	movlw	-10
 20626  016B1C  6AE3               	clrf	plusw1,c
 20627  016B1E  0EF7               	movlw	-9
 20628  016B20  6AE3               	clrf	plusw1,c
 20629  016B22  0EF8               	movlw	-8
 20630  016B24  6AE3               	clrf	plusw1,c
 20631  016B26  0EF9               	movlw	-7
 20632  016B28  6AE3               	clrf	plusw1,c
 20633  016B2A  D037               	goto	l8441
 20634  016B2C                     l8437:
 20635                           
 20636                           ;stkvar	_u @ sp[(-10)+0]
 20637  016B2C  0EF6               	movlw	-10
 20638  016B2E  006F FF8C  F009    	movff	plusw1,btemp+8
 20639  016B34  0EF7               	movlw	-9
 20640  016B36  006F FF8C  F00A    	movff	plusw1,btemp+9
 20641  016B3C  0EF8               	movlw	-8
 20642  016B3E  006F FF8C  F00B    	movff	plusw1,btemp+10
 20643  016B44  0EF9               	movlw	-7
 20644  016B46  006F FF8C  F00C    	movff	plusw1,btemp+11
 20645  016B4C  90D8               	bcf	status,0,c
 20646  016B4E  3409               	rlcf	(btemp+8)^0,w,c
 20647  016B50  6E05               	movwf	(btemp+4)^0,c
 20648  016B52  340A               	rlcf	(btemp+9)^0,w,c
 20649  016B54  6E06               	movwf	(btemp+5)^0,c
 20650  016B56  340B               	rlcf	(btemp+10)^0,w,c
 20651  016B58  6E07               	movwf	(btemp+6)^0,c
 20652  016B5A  340C               	rlcf	(btemp+11)^0,w,c
 20653  016B5C  6E08               	movwf	(btemp+7)^0,c
 20654  016B5E  5005               	movf	(btemp+4)^0,w,c
 20655  016B60  1006               	iorwf	(btemp+5)^0,w,c
 20656  016B62  1007               	iorwf	(btemp+6)^0,w,c
 20657  016B64  1008               	iorwf	(btemp+7)^0,w,c
 20658  016B66  B4D8               	btfsc	status,2,c
 20659  016B68  D018               	goto	l8441
 20660  016B6A  0E00               	movlw	0
 20661  016B6C  6E09               	movwf	(btemp+8)^0,c
 20662  016B6E  0E00               	movlw	0
 20663  016B70  6E0A               	movwf	(btemp+9)^0,c
 20664  016B72  0E80               	movlw	128
 20665  016B74  6E0B               	movwf	(btemp+10)^0,c
 20666  016B76  0EBF               	movlw	191
 20667  016B78  6E0C               	movwf	(btemp+11)^0,c
 20668                           
 20669                           ;stkvar	_u @ sp[(-10)+0]
 20670  016B7A  0EF6               	movlw	-10
 20671  016B7C  0060  F027  FFE3   	movff	btemp+8,plusw1
 20672  016B82  0EF7               	movlw	-9
 20673  016B84  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20674  016B8A  0EF8               	movlw	-8
 20675  016B8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20676  016B92  0EF9               	movlw	-7
 20677  016B94  0060  F033  FFE3   	movff	btemp+11,plusw1
 20678  016B9A                     l8441:
 20679                           
 20680                           ;stkvar	_u @ sp[(-10)+0]
 20681  016B9A  0EF6               	movlw	-10
 20682  016B9C  006F FF8C  F001    	movff	plusw1,btemp
 20683  016BA2  0EF7               	movlw	-9
 20684  016BA4  006F FF8C  F002    	movff	plusw1,btemp+1
 20685  016BAA  0EF8               	movlw	-8
 20686  016BAC  006F FF8C  F003    	movff	plusw1,btemp+2
 20687  016BB2  0EF9               	movlw	-7
 20688  016BB4                     L23:
 20689  016BB4  006F FF8C  F004    	movff	plusw1,btemp+3
 20690                           
 20691                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20692  016BBA  0EF2               	movlw	242
 20693  016BBC  26E1               	addwf	fsr1l,f,c
 20694  016BBE  0EFF               	movlw	255
 20695  016BC0  22E2               	addwfc	fsr1h,f,c
 20696  016BC2  0012               	return		;funcret
 20697  016BC4                     __end_of_floorf:
 20698                           	opt callstack 0
 20699                           
 20700 ;; *************** function ___fpclassifyf *****************
 20701 ;; Defined at:
 20702 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 20703 ;; Parameters:    Size  Location     Type
 20704 ;;  x               4  [STACK] float 
 20705 ;; Auto vars:     Size  Location     Type
 20706 ;;  u               4  [STACK] struct .
 20707 ;;  e               2  [STACK] int 
 20708 ;; Return value:  Size  Location     Type
 20709 ;;                  2  [STACK] int 
 20710 ;; Registers used:
 20711 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 20712 ;; Tracked objects:
 20713 ;;		On entry : 0/0
 20714 ;;		On exit  : 0/0
 20715 ;;		Unchanged: 0/0
 20716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20721 ;;Total ram usage:        0 bytes
 20722 ;; Hardware stack levels used:    1
 20723 ;; Hardware stack levels required when called:   15
 20724 ;; This function calls:
 20725 ;;		Nothing
 20726 ;; This function is called by:
 20727 ;;		_efgtoa
 20728 ;; This function uses a reentrant model
 20729 ;;
 20730                           
 20731                           	psect	text70
 20732  018FDA                     __ptext70:
 20733                           	opt callstack 0
 20734  018FDA                     ___fpclassifyf:
 20735                           	opt callstack 0
 20736                           
 20737                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20738  018FDA  0E06               	movlw	6
 20739  018FDC  26E1               	addwf	fsr1l,f,c
 20740  018FDE  0E00               	movlw	0
 20741  018FE0  22E2               	addwfc	fsr1h,f,c
 20742                           
 20743                           ;incstack = 0
 20744 ;; hardware stack exceeded
 20745  018FE2  0060  F190  F009   	movff	___fpclassifyf@F463,btemp+8
 20746  018FE8  0060  F194  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 20747  018FEE  0060  F198  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 20748  018FF4  0060  F19C  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 20749                           
 20750                           ;stkvar	_u @ sp[(-6)+0]
 20751  018FFA  0EFA               	movlw	-6
 20752  018FFC  0060  F027  FFE3   	movff	btemp+8,plusw1
 20753  019002  0EFB               	movlw	-5
 20754  019004  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20755  01900A  0EFC               	movlw	-4
 20756  01900C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20757  019012  0EFD               	movlw	-3
 20758  019014  0060  F033  FFE3   	movff	btemp+11,plusw1
 20759                           
 20760                           ;stkvar	_x @ sp[(-6)+-4]
 20761  01901A  0EF6               	movlw	-10
 20762  01901C  006F FF8C  F009    	movff	plusw1,btemp+8
 20763  019022  0EF7               	movlw	-9
 20764  019024  006F FF8C  F00A    	movff	plusw1,btemp+9
 20765  01902A  0EF8               	movlw	-8
 20766  01902C  006F FF8C  F00B    	movff	plusw1,btemp+10
 20767  019032  0EF9               	movlw	-7
 20768  019034  006F FF8C  F00C    	movff	plusw1,btemp+11
 20769                           
 20770                           ;stkvar	_u @ sp[(-6)+0]
 20771  01903A  0EFA               	movlw	-6
 20772  01903C  0060  F027  FFE3   	movff	btemp+8,plusw1
 20773  019042  0EFB               	movlw	-5
 20774  019044  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20775  01904A  0EFC               	movlw	-4
 20776  01904C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20777  019052  0EFD               	movlw	-3
 20778  019054  0060  F033  FFE3   	movff	btemp+11,plusw1
 20779                           
 20780                           ;stkvar	_u @ sp[(-6)+0]
 20781  01905A  0EFA               	movlw	-6
 20782  01905C  006F FF8C  F009    	movff	plusw1,btemp+8
 20783  019062  0EFB               	movlw	-5
 20784  019064  006F FF8C  F00A    	movff	plusw1,btemp+9
 20785  01906A  0EFC               	movlw	-4
 20786  01906C  006F FF8C  F00B    	movff	plusw1,btemp+10
 20787  019072  0EFD               	movlw	-3
 20788  019074  006F FF8C  F00C    	movff	plusw1,btemp+11
 20789  01907A  0E18               	movlw	24
 20790  01907C  D005               	goto	u6240
 20791  01907E                     u6245:
 20792  01907E  90D8               	bcf	status,0,c
 20793  019080  320C               	rrcf	(btemp+11)^0,f,c
 20794  019082  320B               	rrcf	(btemp+10)^0,f,c
 20795  019084  320A               	rrcf	(btemp+9)^0,f,c
 20796  019086  3209               	rrcf	(btemp+8)^0,f,c
 20797  019088                     u6240:
 20798  019088  2EE8               	decfsz	wreg,f,c
 20799  01908A  D7F9               	goto	u6245
 20800  01908C  0060  F024  F007   	movff	btemp+8,btemp+6
 20801  019092  0060  F028  F008   	movff	btemp+9,btemp+7
 20802  019098  0EFF               	movlw	255
 20803  01909A  1607               	andwf	(btemp+6)^0,f,c
 20804  01909C  0E00               	movlw	0
 20805  01909E  1608               	andwf	(btemp+7)^0,f,c
 20806                           
 20807                           ;stkvar	_e @ sp[(-6)+4]
 20808  0190A0  0EFE               	movlw	-2
 20809  0190A2  0060  F01F  FFE3   	movff	btemp+6,plusw1
 20810  0190A8  0EFF               	movlw	-1
 20811  0190AA  0060  F023  FFE3   	movff	btemp+7,plusw1
 20812                           
 20813                           ;stkvar	_e @ sp[(-6)+4]
 20814  0190B0  0EFE               	movlw	-2
 20815  0190B2  006F FF8C  F001    	movff	plusw1,btemp
 20816  0190B8  0EFF               	movlw	-1
 20817  0190BA  50E3               	movf	plusw1,w,c
 20818  0190BC  1001               	iorwf	btemp^0,w,c
 20819  0190BE  A4D8               	btfss	status,2,c
 20820  0190C0  D023               	goto	l8379
 20821                           
 20822                           ;stkvar	_u @ sp[(-6)+0]
 20823  0190C2  0EFA               	movlw	-6
 20824  0190C4  006F FF8C  F009    	movff	plusw1,btemp+8
 20825  0190CA  0EFB               	movlw	-5
 20826  0190CC  006F FF8C  F00A    	movff	plusw1,btemp+9
 20827  0190D2  0EFC               	movlw	-4
 20828  0190D4  006F FF8C  F00B    	movff	plusw1,btemp+10
 20829  0190DA  0EFD               	movlw	-3
 20830  0190DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 20831  0190E2  90D8               	bcf	status,0,c
 20832  0190E4  3409               	rlcf	(btemp+8)^0,w,c
 20833  0190E6  6E05               	movwf	(btemp+4)^0,c
 20834  0190E8  340A               	rlcf	(btemp+9)^0,w,c
 20835  0190EA  6E06               	movwf	(btemp+5)^0,c
 20836  0190EC  340B               	rlcf	(btemp+10)^0,w,c
 20837  0190EE  6E07               	movwf	(btemp+6)^0,c
 20838  0190F0  340C               	rlcf	(btemp+11)^0,w,c
 20839  0190F2  6E08               	movwf	(btemp+7)^0,c
 20840  0190F4  5005               	movf	(btemp+4)^0,w,c
 20841  0190F6  1006               	iorwf	(btemp+5)^0,w,c
 20842  0190F8  1007               	iorwf	(btemp+6)^0,w,c
 20843  0190FA  1008               	iorwf	(btemp+7)^0,w,c
 20844  0190FC  A4D8               	btfss	status,2,c
 20845  0190FE  D002               	goto	l8375
 20846  019100  0E02               	movlw	2
 20847  019102  D02E               	goto	L24
 20848  019104                     l8375:
 20849  019104  0E03               	movlw	3
 20850  019106  D02C               	goto	L24
 20851  019108                     l8379:
 20852                           
 20853                           ;stkvar	_e @ sp[(-6)+4]
 20854  019108  0EFE               	movlw	-2
 20855  01910A  28E3               	incf	plusw1,w,c
 20856  01910C  E128               	bnz	l8385
 20857  01910E  0EFF               	movlw	-1
 20858  019110  50E3               	movf	plusw1,w,c
 20859  019112  A4D8               	btfss	status,2,c
 20860  019114  D024               	goto	l8385
 20861                           
 20862                           ;stkvar	_u @ sp[(-6)+0]
 20863  019116  0EFA               	movlw	-6
 20864  019118  006F FF8C  F009    	movff	plusw1,btemp+8
 20865  01911E  0EFB               	movlw	-5
 20866  019120  006F FF8C  F00A    	movff	plusw1,btemp+9
 20867  019126  0EFC               	movlw	-4
 20868  019128  006F FF8C  F00B    	movff	plusw1,btemp+10
 20869  01912E  0EFD               	movlw	-3
 20870  019130  006F FF8C  F00C    	movff	plusw1,btemp+11
 20871  019136  0E09               	movlw	9
 20872  019138                     u6285:
 20873  019138  90D8               	bcf	status,0,c
 20874  01913A  3609               	rlcf	(btemp+8)^0,f,c
 20875  01913C  360A               	rlcf	(btemp+9)^0,f,c
 20876  01913E  360B               	rlcf	(btemp+10)^0,f,c
 20877  019140  360C               	rlcf	(btemp+11)^0,f,c
 20878  019142  2EE8               	decfsz	wreg,f,c
 20879  019144  D7F9               	goto	u6285
 20880  019146  5009               	movf	(btemp+8)^0,w,c
 20881  019148  100A               	iorwf	(btemp+9)^0,w,c
 20882  01914A  100B               	iorwf	(btemp+10)^0,w,c
 20883  01914C  100C               	iorwf	(btemp+11)^0,w,c
 20884  01914E  A4D8               	btfss	status,2,c
 20885  019150  D002               	goto	u6290
 20886  019152  0E01               	movlw	1
 20887  019154  D001               	goto	u6300
 20888  019156                     u6290:
 20889  019156  0E00               	movlw	0
 20890  019158                     u6300:
 20891  019158  6E01               	movwf	btemp^0,c
 20892  01915A  6A02               	clrf	(btemp+1)^0,c
 20893  01915C  D004               	goto	l3199
 20894  01915E                     l8385:
 20895  01915E  0E04               	movlw	4
 20896  019160                     L24:
 20897  019160  6E01               	movwf	btemp^0,c
 20898  019162  0E00               	movlw	0
 20899  019164  6E02               	movwf	(btemp+1)^0,c
 20900  019166                     l3199:
 20901                           
 20902                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 20903  019166  0EF6               	movlw	246
 20904  019168  26E1               	addwf	fsr1l,f,c
 20905  01916A  0EFF               	movlw	255
 20906  01916C  22E2               	addwfc	fsr1h,f,c
 20907  01916E  0012               	return		;funcret
 20908  019170                     __end_of___fpclassifyf:
 20909                           	opt callstack 0
 20910                           
 20911 ;; *************** function ___fltol *****************
 20912 ;; Defined at:
 20913 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 20914 ;; Parameters:    Size  Location     Type
 20915 ;;  f1              4  [STACK] int 
 20916 ;; Auto vars:     Size  Location     Type
 20917 ;;  exp1            1  [STACK] unsigned char 
 20918 ;;  sign1           1  [STACK] unsigned char 
 20919 ;; Return value:  Size  Location     Type
 20920 ;;                  4  [STACK] long 
 20921 ;; Registers used:
 20922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 20923 ;; Tracked objects:
 20924 ;;		On entry : 0/0
 20925 ;;		On exit  : 0/0
 20926 ;;		Unchanged: 0/0
 20927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20932 ;;Total ram usage:        0 bytes
 20933 ;; Hardware stack levels used:    1
 20934 ;; Hardware stack levels required when called:   15
 20935 ;; This function calls:
 20936 ;;		Nothing
 20937 ;; This function is called by:
 20938 ;;		_main
 20939 ;;		_convert_dac_raw
 20940 ;;		_calc_bsoc
 20941 ;;		_init_bsoc
 20942 ;;		_efgtoa
 20943 ;; This function uses a reentrant model
 20944 ;;
 20945                           
 20946                           	psect	text71
 20947  019476                     __ptext71:
 20948                           	opt callstack 0
 20949  019476                     ___fltol:
 20950                           	opt callstack 0
 20951                           
 20952                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20953  019476  52E6               	movf	postinc1,f,c
 20954  019478  52E6               	movf	postinc1,f,c
 20955                           
 20956                           ;stkvar	_f1 @ sp[(-2)+-4]
 20957                           
 20958                           ;incstack = 0
 20959 ;; hardware stack exceeded
 20960  01947A  0EFA               	movlw	-6
 20961  01947C  006F FF8C  F009    	movff	plusw1,btemp+8
 20962  019482  0EFB               	movlw	-5
 20963  019484  006F FF8C  F00A    	movff	plusw1,btemp+9
 20964  01948A  0EFC               	movlw	-4
 20965  01948C  006F FF8C  F00B    	movff	plusw1,btemp+10
 20966  019492  0EFD               	movlw	-3
 20967  019494  006F FF8C  F00C    	movff	plusw1,btemp+11
 20968  01949A  0E18               	movlw	24
 20969  01949C  D005               	goto	u7450
 20970  01949E                     u7455:
 20971  01949E  90D8               	bcf	status,0,c
 20972  0194A0  320C               	rrcf	(btemp+11)^0,f,c
 20973  0194A2  320B               	rrcf	(btemp+10)^0,f,c
 20974  0194A4  320A               	rrcf	(btemp+9)^0,f,c
 20975  0194A6  3209               	rrcf	(btemp+8)^0,f,c
 20976  0194A8                     u7450:
 20977  0194A8  2EE8               	decfsz	wreg,f,c
 20978  0194AA  D7F9               	goto	u7455
 20979                           
 20980                           ;stkvar	_exp1 @ sp[(-2)+0]
 20981  0194AC  0EFE               	movlw	-2
 20982  0194AE  0060  F027  FFE3   	movff	btemp+8,plusw1
 20983  0194B4  0EFE               	movlw	-2
 20984  0194B6  50E3               	movf	plusw1,w,c
 20985  0194B8  A4D8               	btfss	status,2,c
 20986  0194BA  D006               	goto	l9005
 20987  0194BC                     u7460:
 20988  0194BC  0E00               	movlw	0
 20989  0194BE  6E01               	movwf	btemp^0,c
 20990  0194C0  6A02               	clrf	(btemp+1)^0,c
 20991  0194C2  6A03               	clrf	(btemp+2)^0,c
 20992  0194C4  6A04               	clrf	(btemp+3)^0,c
 20993  0194C6  D08B               	goto	l2815
 20994  0194C8                     l9005:
 20995                           
 20996                           ;stkvar	_f1 @ sp[(-2)+-4]
 20997  0194C8  0EFA               	movlw	-6
 20998  0194CA  006F FF8C  F009    	movff	plusw1,btemp+8
 20999  0194D0  0EFB               	movlw	-5
 21000  0194D2  006F FF8C  F00A    	movff	plusw1,btemp+9
 21001  0194D8  0EFC               	movlw	-4
 21002  0194DA  006F FF8C  F00B    	movff	plusw1,btemp+10
 21003  0194E0  0EFD               	movlw	-3
 21004  0194E2  006F FF8C  F00C    	movff	plusw1,btemp+11
 21005  0194E8  0E20               	movlw	32
 21006  0194EA  D005               	goto	u7470
 21007  0194EC                     u7475:
 21008  0194EC  90D8               	bcf	status,0,c
 21009  0194EE  320C               	rrcf	(btemp+11)^0,f,c
 21010  0194F0  320B               	rrcf	(btemp+10)^0,f,c
 21011  0194F2  320A               	rrcf	(btemp+9)^0,f,c
 21012  0194F4  3209               	rrcf	(btemp+8)^0,f,c
 21013  0194F6                     u7470:
 21014  0194F6  2EE8               	decfsz	wreg,f,c
 21015  0194F8  D7F9               	goto	u7475
 21016                           
 21017                           ;stkvar	_sign1 @ sp[(-2)+1]
 21018  0194FA  0EFF               	movlw	-1
 21019  0194FC  0060  F027  FFE3   	movff	btemp+8,plusw1
 21020                           
 21021                           ;stkvar	_f1 @ sp[(-2)+-4]
 21022  019502  0EFC               	movlw	-4
 21023  019504  8EE3               	bsf	plusw1,7,c
 21024                           
 21025                           ;stkvar	_f1 @ sp[(-2)+-4]
 21026  019506  50E1               	movf	fsr1l,w,c
 21027  019508  0FFA               	addlw	-6
 21028  01950A  6ED9               	movwf	fsr2l,c
 21029  01950C  50E2               	movf	fsr1h,w,c
 21030  01950E  6EDA               	movwf	fsr2h,c
 21031  019510  0EFF               	movlw	255
 21032  019512  22DA               	addwfc	fsr2h,f,c
 21033  019514  0EFF               	movlw	255
 21034  019516  16DE               	andwf	postinc2,f,c
 21035  019518  0EFF               	movlw	255
 21036  01951A  16DE               	andwf	postinc2,f,c
 21037  01951C  0EFF               	movlw	255
 21038  01951E  16DE               	andwf	postinc2,f,c
 21039  019520  0E00               	movlw	0
 21040  019522  16DE               	andwf	postinc2,f,c
 21041                           
 21042                           ;stkvar	_exp1 @ sp[(-2)+0]
 21043  019524  0EFE               	movlw	-2
 21044  019526  006F FF8C  F001    	movff	plusw1,btemp
 21045  01952C  0E96               	movlw	150
 21046  01952E  5E01               	subwf	btemp^0,f,c
 21047  019530  0EFE               	movlw	-2
 21048  019532  0060  F007  FFE3   	movff	btemp,plusw1
 21049                           
 21050                           ;stkvar	_exp1 @ sp[(-2)+0]
 21051  019538  0EFE               	movlw	-2
 21052  01953A  AEE3               	btfss	plusw1,7,c
 21053  01953C  D014               	goto	l9023
 21054                           
 21055                           ;stkvar	_exp1 @ sp[(-2)+0]
 21056  01953E  0EFE               	movlw	-2
 21057  019540  50E3               	movf	plusw1,w,c
 21058  019542  0A80               	xorlw	128
 21059  019544  0F97               	addlw	151
 21060  019546  A0D8               	btfss	status,0,c
 21061  019548  D7B9               	goto	u7460
 21062  01954A                     l9021:
 21063                           
 21064                           ;stkvar	_f1 @ sp[(-2)+-4]
 21065  01954A  90D8               	bcf	status,0,c
 21066  01954C  0EFD               	movlw	-3
 21067  01954E  32E3               	rrcf	plusw1,f,c
 21068  019550  0EFC               	movlw	-4
 21069  019552  32E3               	rrcf	plusw1,f,c
 21070  019554  0EFB               	movlw	-5
 21071  019556  32E3               	rrcf	plusw1,f,c
 21072  019558  0EFA               	movlw	-6
 21073  01955A  32E3               	rrcf	plusw1,f,c
 21074                           
 21075                           ;stkvar	_exp1 @ sp[(-2)+0]
 21076  01955C  0EFE               	movlw	-2
 21077  01955E  2AE3               	incf	plusw1,f,c
 21078  019560  B4D8               	btfsc	status,2,c
 21079  019562  D018               	goto	u7520
 21080  019564  D7F2               	goto	l9021
 21081  019566                     l9023:
 21082                           
 21083                           ;stkvar	_exp1 @ sp[(-2)+0]
 21084  019566  0EFE               	movlw	-2
 21085  019568  006F FF8C  F001    	movff	plusw1,btemp
 21086  01956E  0E1F               	movlw	31
 21087  019570  6401               	cpfsgt	btemp^0,c
 21088  019572  D00C               	goto	l9031
 21089  019574  D7A3               	goto	u7460
 21090  019576                     l9029:
 21091                           
 21092                           ;stkvar	_f1 @ sp[(-2)+-4]
 21093  019576  90D8               	bcf	status,0,c
 21094  019578  0EFA               	movlw	-6
 21095  01957A  36E3               	rlcf	plusw1,f,c
 21096  01957C  0EFB               	movlw	-5
 21097  01957E  36E3               	rlcf	plusw1,f,c
 21098  019580  0EFC               	movlw	-4
 21099  019582  36E3               	rlcf	plusw1,f,c
 21100  019584  0EFD               	movlw	-3
 21101  019586  36E3               	rlcf	plusw1,f,c
 21102                           
 21103                           ;stkvar	_exp1 @ sp[(-2)+0]
 21104  019588  0EFE               	movlw	-2
 21105  01958A  06E3               	decf	plusw1,f,c
 21106  01958C                     l9031:
 21107                           
 21108                           ;stkvar	_exp1 @ sp[(-2)+0]
 21109  01958C  0EFE               	movlw	-2
 21110  01958E  50E3               	movf	plusw1,w,c
 21111  019590  A4D8               	btfss	status,2,c
 21112  019592  D7F1               	goto	l9029
 21113  019594                     u7520:
 21114                           
 21115                           ;stkvar	_sign1 @ sp[(-2)+1]
 21116  019594  0EFF               	movlw	-1
 21117  019596  50E3               	movf	plusw1,w,c
 21118  019598  B4D8               	btfsc	status,2,c
 21119  01959A  D011               	goto	u7540
 21120                           
 21121                           ;stkvar	_f1 @ sp[(-2)+-4]
 21122                           ;stkvar	_f1 @ sp[(-2)+-4]
 21123  01959C  0EFA               	movlw	-6
 21124  01959E  6CE3               	negf	plusw1,c
 21125  0195A0  0EFB               	movlw	-5
 21126  0195A2  1EE3               	comf	plusw1,f,c
 21127  0195A4  0EFC               	movlw	-4
 21128  0195A6  1EE3               	comf	plusw1,f,c
 21129  0195A8  0EFD               	movlw	-3
 21130  0195AA  1EE3               	comf	plusw1,f,c
 21131  0195AC  E308               	bnc	u7540
 21132  0195AE  0EFB               	movlw	-5
 21133  0195B0  2AE3               	incf	plusw1,f,c
 21134  0195B2  E305               	bnc	u7540
 21135  0195B4  0EFC               	movlw	-4
 21136  0195B6  2AE3               	incf	plusw1,f,c
 21137  0195B8  E302               	bnc	u7540
 21138  0195BA  0EFD               	movlw	-3
 21139  0195BC  2AE3               	incf	plusw1,f,c
 21140  0195BE                     u7540:
 21141                           
 21142                           ;stkvar	_f1 @ sp[(-2)+-4]
 21143  0195BE  0EFA               	movlw	-6
 21144  0195C0  006F FF8C  F001    	movff	plusw1,btemp
 21145  0195C6  0EFB               	movlw	-5
 21146  0195C8  006F FF8C  F002    	movff	plusw1,btemp+1
 21147  0195CE  0EFC               	movlw	-4
 21148  0195D0  006F FF8C  F003    	movff	plusw1,btemp+2
 21149  0195D6  0EFD               	movlw	-3
 21150  0195D8  006F FF8C  F004    	movff	plusw1,btemp+3
 21151  0195DE                     l2815:
 21152                           
 21153                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 21154  0195DE  0EFA               	movlw	250
 21155  0195E0  26E1               	addwf	fsr1l,f,c
 21156  0195E2  0EFF               	movlw	255
 21157  0195E4  22E2               	addwfc	fsr1h,f,c
 21158  0195E6  0012               	return		;funcret
 21159  0195E8                     __end_of___fltol:
 21160                           	opt callstack 0
 21161                           
 21162 ;; *************** function ___flneg *****************
 21163 ;; Defined at:
 21164 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 21165 ;; Parameters:    Size  Location     Type
 21166 ;;  f1              4  [STACK] long 
 21167 ;; Auto vars:     Size  Location     Type
 21168 ;;		None
 21169 ;; Return value:  Size  Location     Type
 21170 ;;                  4  [STACK] long 
 21171 ;; Registers used:
 21172 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 21173 ;; Tracked objects:
 21174 ;;		On entry : 0/0
 21175 ;;		On exit  : 0/0
 21176 ;;		Unchanged: 0/0
 21177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21182 ;;Total ram usage:        0 bytes
 21183 ;; Hardware stack levels used:    1
 21184 ;; Hardware stack levels required when called:   15
 21185 ;; This function calls:
 21186 ;;		Nothing
 21187 ;; This function is called by:
 21188 ;;		_calc_bsoc
 21189 ;;		_efgtoa
 21190 ;; This function uses a reentrant model
 21191 ;;
 21192                           
 21193                           	psect	text72
 21194  01BE2A                     __ptext72:
 21195                           	opt callstack 0
 21196  01BE2A                     ___flneg:
 21197                           	opt callstack 0
 21198                           
 21199                           ;stkvar	_f1 @ sp[(0)+-4]
 21200                           
 21201                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21202                           ;incstack = 0
 21203 ;; hardware stack exceeded
 21204  01BE2A  0EFC               	movlw	-4
 21205  01BE2C  50E3               	movf	plusw1,w,c
 21206  01BE2E  E10A               	bnz	u7440
 21207  01BE30  0EFD               	movlw	-3
 21208  01BE32  50E3               	movf	plusw1,w,c
 21209  01BE34  E107               	bnz	u7440
 21210  01BE36  0EFE               	movlw	-2
 21211  01BE38  50E3               	movf	plusw1,w,c
 21212  01BE3A  E104               	bnz	u7440
 21213  01BE3C  0EFF               	movlw	-1
 21214  01BE3E  50E3               	movf	plusw1,w,c
 21215  01BE40  B4D8               	btfsc	status,2,c
 21216  01BE42  D002               	goto	l8995
 21217  01BE44                     u7440:
 21218                           
 21219                           ;stkvar	_f1 @ sp[(0)+-4]
 21220  01BE44  0EFF               	movlw	-1
 21221  01BE46  7EE3               	btg	plusw1,7,c
 21222  01BE48                     l8995:
 21223                           
 21224                           ;stkvar	_f1 @ sp[(0)+-4]
 21225  01BE48  0EFC               	movlw	-4
 21226  01BE4A  006F FF8C  F001    	movff	plusw1,btemp
 21227  01BE50  0EFD               	movlw	-3
 21228  01BE52  006F FF8C  F002    	movff	plusw1,btemp+1
 21229  01BE58  0EFE               	movlw	-2
 21230  01BE5A  006F FF8C  F003    	movff	plusw1,btemp+2
 21231  01BE60  0EFF               	movlw	-1
 21232  01BE62  006F FF8C  F004    	movff	plusw1,btemp+3
 21233                           
 21234                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 21235  01BE68  52E5               	movf	postdec1,f,c
 21236  01BE6A  52E5               	movf	postdec1,f,c
 21237  01BE6C  52E5               	movf	postdec1,f,c
 21238  01BE6E  52E5               	movf	postdec1,f,c
 21239  01BE70  0012               	return		;funcret
 21240  01BE72                     __end_of___flneg:
 21241                           	opt callstack 0
 21242                           
 21243 ;; *************** function ___fleq *****************
 21244 ;; Defined at:
 21245 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 21246 ;; Parameters:    Size  Location     Type
 21247 ;;  ff1             4  [STACK] long 
 21248 ;;  ff2             4  [STACK] long 
 21249 ;; Auto vars:     Size  Location     Type
 21250 ;;		None
 21251 ;; Return value:  Size  Location     Type
 21252 ;;		None               void
 21253 ;; Registers used:
 21254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21255 ;; Tracked objects:
 21256 ;;		On entry : 0/0
 21257 ;;		On exit  : 0/0
 21258 ;;		Unchanged: 0/0
 21259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21264 ;;Total ram usage:        0 bytes
 21265 ;; Hardware stack levels used:    1
 21266 ;; Hardware stack levels required when called:   15
 21267 ;; This function calls:
 21268 ;;		Nothing
 21269 ;; This function is called by:
 21270 ;;		_efgtoa
 21271 ;; This function uses a reentrant model
 21272 ;;
 21273                           
 21274                           	psect	text73
 21275  01AB74                     __ptext73:
 21276                           	opt callstack 0
 21277  01AB74                     ___fleq:
 21278                           	opt callstack 0
 21279                           
 21280                           ;stkvar	_ff1 @ sp[(0)+-4]
 21281                           
 21282                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21283                           ;incstack = 0
 21284 ;; hardware stack exceeded
 21285  01AB74  50E1               	movf	fsr1l,w,c
 21286  01AB76  0FFC               	addlw	-4
 21287  01AB78  6ED9               	movwf	fsr2l,c
 21288  01AB7A  50E2               	movf	fsr1h,w,c
 21289  01AB7C  6EDA               	movwf	fsr2h,c
 21290  01AB7E  0EFF               	movlw	255
 21291  01AB80  22DA               	addwfc	fsr2h,f,c
 21292  01AB82  0E00               	movlw	0
 21293  01AB84  14DE               	andwf	postinc2,w,c
 21294  01AB86  6E09               	movwf	(btemp+8)^0,c
 21295  01AB88  0E00               	movlw	0
 21296  01AB8A  14DE               	andwf	postinc2,w,c
 21297  01AB8C  6E0A               	movwf	(btemp+9)^0,c
 21298  01AB8E  0E80               	movlw	128
 21299  01AB90  14DE               	andwf	postinc2,w,c
 21300  01AB92  6E0B               	movwf	(btemp+10)^0,c
 21301  01AB94  0E7F               	movlw	127
 21302  01AB96  14DE               	andwf	postinc2,w,c
 21303  01AB98  6E0C               	movwf	(btemp+11)^0,c
 21304  01AB9A  5009               	movf	(btemp+8)^0,w,c
 21305  01AB9C  100A               	iorwf	(btemp+9)^0,w,c
 21306  01AB9E  100B               	iorwf	(btemp+10)^0,w,c
 21307  01ABA0  100C               	iorwf	(btemp+11)^0,w,c
 21308  01ABA2  A4D8               	btfss	status,2,c
 21309  01ABA4  D008               	goto	l8953
 21310                           
 21311                           ;stkvar	_ff1 @ sp[(0)+-4]
 21312  01ABA6  0EFC               	movlw	-4
 21313  01ABA8  6AE3               	clrf	plusw1,c
 21314  01ABAA  0EFD               	movlw	-3
 21315  01ABAC  6AE3               	clrf	plusw1,c
 21316  01ABAE  0EFE               	movlw	-2
 21317  01ABB0  6AE3               	clrf	plusw1,c
 21318  01ABB2  0EFF               	movlw	-1
 21319  01ABB4  6AE3               	clrf	plusw1,c
 21320  01ABB6                     l8953:
 21321                           
 21322                           ;stkvar	_ff2 @ sp[(0)+-8]
 21323  01ABB6  50E1               	movf	fsr1l,w,c
 21324  01ABB8  0FF8               	addlw	-8
 21325  01ABBA  6ED9               	movwf	fsr2l,c
 21326  01ABBC  50E2               	movf	fsr1h,w,c
 21327  01ABBE  6EDA               	movwf	fsr2h,c
 21328  01ABC0  0EFF               	movlw	255
 21329  01ABC2  22DA               	addwfc	fsr2h,f,c
 21330  01ABC4  0E00               	movlw	0
 21331  01ABC6  14DE               	andwf	postinc2,w,c
 21332  01ABC8  6E09               	movwf	(btemp+8)^0,c
 21333  01ABCA  0E00               	movlw	0
 21334  01ABCC  14DE               	andwf	postinc2,w,c
 21335  01ABCE  6E0A               	movwf	(btemp+9)^0,c
 21336  01ABD0  0E80               	movlw	128
 21337  01ABD2  14DE               	andwf	postinc2,w,c
 21338  01ABD4  6E0B               	movwf	(btemp+10)^0,c
 21339  01ABD6  0E7F               	movlw	127
 21340  01ABD8  14DE               	andwf	postinc2,w,c
 21341  01ABDA  6E0C               	movwf	(btemp+11)^0,c
 21342  01ABDC  5009               	movf	(btemp+8)^0,w,c
 21343  01ABDE  100A               	iorwf	(btemp+9)^0,w,c
 21344  01ABE0  100B               	iorwf	(btemp+10)^0,w,c
 21345  01ABE2  100C               	iorwf	(btemp+11)^0,w,c
 21346  01ABE4  A4D8               	btfss	status,2,c
 21347  01ABE6  D008               	goto	l8957
 21348                           
 21349                           ;stkvar	_ff2 @ sp[(0)+-8]
 21350  01ABE8  0EF8               	movlw	-8
 21351  01ABEA  6AE3               	clrf	plusw1,c
 21352  01ABEC  0EF9               	movlw	-7
 21353  01ABEE  6AE3               	clrf	plusw1,c
 21354  01ABF0  0EFA               	movlw	-6
 21355  01ABF2  6AE3               	clrf	plusw1,c
 21356  01ABF4  0EFB               	movlw	-5
 21357  01ABF6  6AE3               	clrf	plusw1,c
 21358  01ABF8                     l8957:
 21359                           
 21360                           ;stkvar	_ff2 @ sp[(0)+-8]
 21361                           ;stkvar	_ff1 @ sp[(0)+-4]
 21362  01ABF8  50E1               	movf	fsr1l,w,c
 21363  01ABFA  0FFC               	addlw	-4
 21364  01ABFC  6ED9               	movwf	fsr2l,c
 21365  01ABFE  50E2               	movf	fsr1h,w,c
 21366  01AC00  6EDA               	movwf	fsr2h,c
 21367  01AC02  0EFF               	movlw	255
 21368  01AC04  22DA               	addwfc	fsr2h,f,c
 21369  01AC06  0EF8               	movlw	-8
 21370  01AC08  50E3               	movf	plusw1,w,c
 21371  01AC0A  18DE               	xorwf	postinc2,w,c
 21372  01AC0C  E10D               	bnz	u7380
 21373  01AC0E  0EF9               	movlw	-7
 21374  01AC10  50E3               	movf	plusw1,w,c
 21375  01AC12  18DE               	xorwf	postinc2,w,c
 21376  01AC14  E109               	bnz	u7380
 21377  01AC16  0EFA               	movlw	-6
 21378  01AC18  50E3               	movf	plusw1,w,c
 21379  01AC1A  18DE               	xorwf	postinc2,w,c
 21380  01AC1C  E105               	bnz	u7380
 21381  01AC1E  0EFB               	movlw	-5
 21382  01AC20  50E3               	movf	plusw1,w,c
 21383  01AC22  18DE               	xorwf	postinc2,w,c
 21384  01AC24  B4D8               	btfsc	status,2,c
 21385  01AC26  D002               	goto	l8961
 21386  01AC28                     u7380:
 21387  01AC28  9001               	bcf	btemp& (0+255),0,c
 21388  01AC2A  D001               	goto	l2777
 21389  01AC2C                     l8961:
 21390  01AC2C  8001               	bsf	btemp& (0+255),0,c
 21391  01AC2E                     l2777:
 21392                           
 21393                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 21394  01AC2E  0EF8               	movlw	248
 21395  01AC30  26E1               	addwf	fsr1l,f,c
 21396  01AC32  0EFF               	movlw	255
 21397  01AC34  22E2               	addwfc	fsr1h,f,c
 21398  01AC36  0012               	return		;funcret
 21399  01AC38                     __end_of___fleq:
 21400                           	opt callstack 0
 21401                           
 21402 ;; *************** function ___awmod *****************
 21403 ;; Defined at:
 21404 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 21405 ;; Parameters:    Size  Location     Type
 21406 ;;  dividend        2  [STACK] int 
 21407 ;;  divisor         2  [STACK] int 
 21408 ;; Auto vars:     Size  Location     Type
 21409 ;;  sign            1  [STACK] unsigned char 
 21410 ;;  counter         1  [STACK] unsigned char 
 21411 ;; Return value:  Size  Location     Type
 21412 ;;                  2  [STACK] int 
 21413 ;; Registers used:
 21414 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 21415 ;; Tracked objects:
 21416 ;;		On entry : 0/0
 21417 ;;		On exit  : 0/0
 21418 ;;		Unchanged: 0/0
 21419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21424 ;;Total ram usage:        0 bytes
 21425 ;; Hardware stack levels used:    1
 21426 ;; Hardware stack levels required when called:   15
 21427 ;; This function calls:
 21428 ;;		Nothing
 21429 ;; This function is called by:
 21430 ;;		_efgtoa
 21431 ;; This function uses a reentrant model
 21432 ;;
 21433                           
 21434                           	psect	text74
 21435  01A120                     __ptext74:
 21436                           	opt callstack 0
 21437  01A120                     ___awmod:
 21438                           	opt callstack 0
 21439                           
 21440                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21441  01A120  52E6               	movf	postinc1,f,c
 21442  01A122  52E6               	movf	postinc1,f,c
 21443                           
 21444                           ;stkvar	_sign @ sp[(-2)+0]
 21445                           
 21446                           ;incstack = 0
 21447 ;; hardware stack exceeded
 21448  01A124  0EFE               	movlw	-2
 21449  01A126  6AE3               	clrf	plusw1,c
 21450                           
 21451                           ;stkvar	_dividend @ sp[(-2)+-2]
 21452  01A128  0EFD               	movlw	-3
 21453  01A12A  AEE3               	btfss	plusw1,7,c
 21454  01A12C  D009               	goto	l8919
 21455                           
 21456                           ;stkvar	_dividend @ sp[(-2)+-2]
 21457                           ;stkvar	_dividend @ sp[(-2)+-2]
 21458  01A12E  0EFC               	movlw	-4
 21459  01A130  6CE3               	negf	plusw1,c
 21460  01A132  0EFD               	movlw	-3
 21461  01A134  1EE3               	comf	plusw1,f,c
 21462  01A136  B0D8               	btfsc	status,0,c
 21463  01A138  2AE3               	incf	plusw1,f,c
 21464                           
 21465                           ;stkvar	_sign @ sp[(-2)+0]
 21466  01A13A  0EFE               	movlw	-2
 21467  01A13C  6AE3               	clrf	plusw1,c
 21468  01A13E  2AE3               	incf	plusw1,f,c
 21469  01A140                     l8919:
 21470                           
 21471                           ;stkvar	_divisor @ sp[(-2)+-4]
 21472  01A140  0EFB               	movlw	-5
 21473  01A142  AEE3               	btfss	plusw1,7,c
 21474  01A144  D006               	goto	l8923
 21475                           
 21476                           ;stkvar	_divisor @ sp[(-2)+-4]
 21477                           ;stkvar	_divisor @ sp[(-2)+-4]
 21478  01A146  0EFA               	movlw	-6
 21479  01A148  6CE3               	negf	plusw1,c
 21480  01A14A  0EFB               	movlw	-5
 21481  01A14C  1EE3               	comf	plusw1,f,c
 21482  01A14E  B0D8               	btfsc	status,0,c
 21483  01A150  2AE3               	incf	plusw1,f,c
 21484  01A152                     l8923:
 21485                           
 21486                           ;stkvar	_divisor @ sp[(-2)+-4]
 21487  01A152  0EFA               	movlw	-6
 21488  01A154  006F FF8C  F001    	movff	plusw1,btemp
 21489  01A15A  0EFB               	movlw	-5
 21490  01A15C  50E3               	movf	plusw1,w,c
 21491  01A15E  1001               	iorwf	btemp^0,w,c
 21492  01A160  B4D8               	btfsc	status,2,c
 21493  01A162  D053               	goto	u7340
 21494                           
 21495                           ;stkvar	_counter @ sp[(-2)+1]
 21496  01A164  0EFF               	movlw	-1
 21497  01A166  6AE3               	clrf	plusw1,c
 21498  01A168  D012               	goto	L25
 21499  01A16A                     l8927:
 21500                           
 21501                           ;stkvar	_divisor @ sp[(-2)+-4]
 21502  01A16A  0EFA               	movlw	-6
 21503  01A16C  50E3               	movf	plusw1,w,c
 21504  01A16E  90D8               	bcf	status,0,c
 21505  01A170  34E8               	rlcf	wreg,w,c
 21506  01A172  6E01               	movwf	btemp^0,c
 21507  01A174  0EFA               	movlw	-6
 21508  01A176  0060  F007  FFE3   	movff	btemp,plusw1
 21509  01A17C  0EFB               	movlw	-5
 21510  01A17E  50E3               	movf	plusw1,w,c
 21511  01A180  34E8               	rlcf	wreg,w,c
 21512  01A182  6E01               	movwf	btemp^0,c
 21513  01A184  0EFB               	movlw	-5
 21514  01A186  0060  F007  FFE3   	movff	btemp,plusw1
 21515                           
 21516                           ;stkvar	_counter @ sp[(-2)+1]
 21517  01A18C  0EFF               	movlw	-1
 21518  01A18E                     L25:
 21519  01A18E  2AE3               	incf	plusw1,f,c
 21520                           
 21521                           ;stkvar	_divisor @ sp[(-2)+-4]
 21522  01A190  0EFB               	movlw	-5
 21523  01A192  AEE3               	btfss	plusw1,7,c
 21524  01A194  D7EA               	goto	l8927
 21525  01A196                     u7320:
 21526                           
 21527                           ;stkvar	_divisor @ sp[(-2)+-4]
 21528  01A196  0EFA               	movlw	-6
 21529  01A198  006F FF8C  F00B    	movff	plusw1,btemp+10
 21530  01A19E  0EFB               	movlw	-5
 21531  01A1A0  006F FF8C  F00C    	movff	plusw1,btemp+11
 21532                           
 21533                           ;stkvar	_dividend @ sp[(-2)+-2]
 21534  01A1A6  0EFC               	movlw	-4
 21535  01A1A8  006F FF8C  F009    	movff	plusw1,btemp+8
 21536  01A1AE  0EFD               	movlw	-3
 21537  01A1B0  006F FF8C  F00A    	movff	plusw1,btemp+9
 21538  01A1B6  500B               	movf	(btemp+10)^0,w,c
 21539  01A1B8  5C09               	subwf	(btemp+8)^0,w,c
 21540  01A1BA  500C               	movf	(btemp+11)^0,w,c
 21541  01A1BC  580A               	subwfb	(btemp+9)^0,w,c
 21542  01A1BE  A0D8               	btfss	status,0,c
 21543  01A1C0  D014               	goto	l8937
 21544                           
 21545                           ;stkvar	_divisor @ sp[(-2)+-4]
 21546                           ;stkvar	_dividend @ sp[(-2)+-2]
 21547  01A1C2  0EFC               	movlw	-4
 21548  01A1C4  50E3               	movf	plusw1,w,c
 21549  01A1C6  6E01               	movwf	btemp^0,c
 21550  01A1C8  0EFA               	movlw	-6
 21551  01A1CA  50E3               	movf	plusw1,w,c
 21552  01A1CC  5E01               	subwf	btemp^0,f,c
 21553  01A1CE  0EFC               	movlw	-4
 21554  01A1D0  0060  F007  FFE3   	movff	btemp,plusw1
 21555  01A1D6  0EFD               	movlw	-3
 21556  01A1D8  50E3               	movf	plusw1,w,c
 21557  01A1DA  6E01               	movwf	btemp^0,c
 21558  01A1DC  0EFB               	movlw	-5
 21559  01A1DE  50E3               	movf	plusw1,w,c
 21560  01A1E0  5A01               	subwfb	btemp^0,f,c
 21561  01A1E2  0EFD               	movlw	-3
 21562  01A1E4  0060  F007  FFE3   	movff	btemp,plusw1
 21563  01A1EA                     l8937:
 21564                           
 21565                           ;stkvar	_divisor @ sp[(-2)+-4]
 21566  01A1EA  90D8               	bcf	status,0,c
 21567  01A1EC  0EFB               	movlw	-5
 21568  01A1EE  32E3               	rrcf	plusw1,f,c
 21569  01A1F0  0EFA               	movlw	-6
 21570  01A1F2  32E3               	rrcf	plusw1,f,c
 21571                           
 21572                           ;stkvar	_counter @ sp[(-2)+1]
 21573  01A1F4  0EFF               	movlw	-1
 21574  01A1F6  50E3               	movf	plusw1,w,c
 21575  01A1F8  6E01               	movwf	btemp^0,c
 21576  01A1FA  0E01               	movlw	1
 21577  01A1FC  5E01               	subwf	btemp^0,f,c
 21578  01A1FE  0EFF               	movlw	-1
 21579  01A200  0060  F007  FFE3   	movff	btemp,plusw1
 21580  01A206  A4D8               	btfss	status,2,c
 21581  01A208  D7C6               	goto	u7320
 21582  01A20A                     u7340:
 21583                           
 21584                           ;stkvar	_sign @ sp[(-2)+0]
 21585  01A20A  0EFE               	movlw	-2
 21586  01A20C  50E3               	movf	plusw1,w,c
 21587  01A20E  B4D8               	btfsc	status,2,c
 21588  01A210  D006               	goto	l8945
 21589                           
 21590                           ;stkvar	_dividend @ sp[(-2)+-2]
 21591                           ;stkvar	_dividend @ sp[(-2)+-2]
 21592  01A212  0EFC               	movlw	-4
 21593  01A214  6CE3               	negf	plusw1,c
 21594  01A216  0EFD               	movlw	-3
 21595  01A218  1EE3               	comf	plusw1,f,c
 21596  01A21A  B0D8               	btfsc	status,0,c
 21597  01A21C  2AE3               	incf	plusw1,f,c
 21598  01A21E                     l8945:
 21599                           
 21600                           ;stkvar	_dividend @ sp[(-2)+-2]
 21601  01A21E  0EFC               	movlw	-4
 21602  01A220  006F FF8C  F001    	movff	plusw1,btemp
 21603  01A226  0EFD               	movlw	-3
 21604  01A228  006F FF8C  F002    	movff	plusw1,btemp+1
 21605                           
 21606                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 21607  01A22E  0EFA               	movlw	250
 21608  01A230  26E1               	addwf	fsr1l,f,c
 21609  01A232  0EFF               	movlw	255
 21610  01A234  22E2               	addwfc	fsr1h,f,c
 21611  01A236  0012               	return		;funcret
 21612  01A238                     __end_of___awmod:
 21613                           	opt callstack 0
 21614                           
 21615 ;; *************** function ___awdiv *****************
 21616 ;; Defined at:
 21617 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 21618 ;; Parameters:    Size  Location     Type
 21619 ;;  dividend        2  [STACK] int 
 21620 ;;  divisor         2  [STACK] int 
 21621 ;; Auto vars:     Size  Location     Type
 21622 ;;  quotient        2  [STACK] int 
 21623 ;;  sign            1  [STACK] unsigned char 
 21624 ;;  counter         1  [STACK] unsigned char 
 21625 ;; Return value:  Size  Location     Type
 21626 ;;                  2  [STACK] int 
 21627 ;; Registers used:
 21628 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 21629 ;; Tracked objects:
 21630 ;;		On entry : 0/0
 21631 ;;		On exit  : 0/0
 21632 ;;		Unchanged: 0/0
 21633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21638 ;;Total ram usage:        0 bytes
 21639 ;; Hardware stack levels used:    1
 21640 ;; Hardware stack levels required when called:   15
 21641 ;; This function calls:
 21642 ;;		Nothing
 21643 ;; This function is called by:
 21644 ;;		_efgtoa
 21645 ;; This function uses a reentrant model
 21646 ;;
 21647                           
 21648                           	psect	text75
 21649  0198AE                     __ptext75:
 21650                           	opt callstack 0
 21651  0198AE                     ___awdiv:
 21652                           	opt callstack 0
 21653                           
 21654                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21655  0198AE  52E6               	movf	postinc1,f,c
 21656  0198B0  52E6               	movf	postinc1,f,c
 21657  0198B2  52E6               	movf	postinc1,f,c
 21658  0198B4  52E6               	movf	postinc1,f,c
 21659                           
 21660                           ;stkvar	_sign @ sp[(-4)+2]
 21661                           
 21662                           ;incstack = 0
 21663 ;; hardware stack exceeded
 21664  0198B6  0EFE               	movlw	-2
 21665  0198B8  6AE3               	clrf	plusw1,c
 21666                           
 21667                           ;stkvar	_divisor @ sp[(-4)+-4]
 21668  0198BA  0EF9               	movlw	-7
 21669  0198BC  AEE3               	btfss	plusw1,7,c
 21670  0198BE  D009               	goto	l8873
 21671                           
 21672                           ;stkvar	_divisor @ sp[(-4)+-4]
 21673                           ;stkvar	_divisor @ sp[(-4)+-4]
 21674  0198C0  0EF8               	movlw	-8
 21675  0198C2  6CE3               	negf	plusw1,c
 21676  0198C4  0EF9               	movlw	-7
 21677  0198C6  1EE3               	comf	plusw1,f,c
 21678  0198C8  B0D8               	btfsc	status,0,c
 21679  0198CA  2AE3               	incf	plusw1,f,c
 21680                           
 21681                           ;stkvar	_sign @ sp[(-4)+2]
 21682  0198CC  0EFE               	movlw	-2
 21683  0198CE  6AE3               	clrf	plusw1,c
 21684  0198D0  2AE3               	incf	plusw1,f,c
 21685  0198D2                     l8873:
 21686                           
 21687                           ;stkvar	_dividend @ sp[(-4)+-2]
 21688  0198D2  0EFB               	movlw	-5
 21689  0198D4  AEE3               	btfss	plusw1,7,c
 21690  0198D6  D008               	goto	l8879
 21691                           
 21692                           ;stkvar	_dividend @ sp[(-4)+-2]
 21693                           ;stkvar	_dividend @ sp[(-4)+-2]
 21694  0198D8  0EFA               	movlw	-6
 21695  0198DA  6CE3               	negf	plusw1,c
 21696  0198DC  0EFB               	movlw	-5
 21697  0198DE  1EE3               	comf	plusw1,f,c
 21698  0198E0  B0D8               	btfsc	status,0,c
 21699  0198E2  2AE3               	incf	plusw1,f,c
 21700                           
 21701                           ;stkvar	_sign @ sp[(-4)+2]
 21702  0198E4  0EFE               	movlw	-2
 21703  0198E6  70E3               	btg	plusw1,0,c
 21704  0198E8                     l8879:
 21705                           
 21706                           ;stkvar	_quotient @ sp[(-4)+0]
 21707  0198E8  0EFC               	movlw	-4
 21708  0198EA  6AE3               	clrf	plusw1,c
 21709  0198EC  0EFD               	movlw	-3
 21710  0198EE  6AE3               	clrf	plusw1,c
 21711                           
 21712                           ;stkvar	_divisor @ sp[(-4)+-4]
 21713  0198F0  0EF8               	movlw	-8
 21714  0198F2  006F FF8C  F001    	movff	plusw1,btemp
 21715  0198F8  0EF9               	movlw	-7
 21716  0198FA  50E3               	movf	plusw1,w,c
 21717  0198FC  1001               	iorwf	btemp^0,w,c
 21718  0198FE  B4D8               	btfsc	status,2,c
 21719  019900  D066               	goto	u7270
 21720                           
 21721                           ;stkvar	_counter @ sp[(-4)+3]
 21722  019902  0EFF               	movlw	-1
 21723  019904  6AE3               	clrf	plusw1,c
 21724  019906  D012               	goto	L26
 21725  019908                     l8885:
 21726                           
 21727                           ;stkvar	_divisor @ sp[(-4)+-4]
 21728  019908  0EF8               	movlw	-8
 21729  01990A  50E3               	movf	plusw1,w,c
 21730  01990C  90D8               	bcf	status,0,c
 21731  01990E  34E8               	rlcf	wreg,w,c
 21732  019910  6E01               	movwf	btemp^0,c
 21733  019912  0EF8               	movlw	-8
 21734  019914  0060  F007  FFE3   	movff	btemp,plusw1
 21735  01991A  0EF9               	movlw	-7
 21736  01991C  50E3               	movf	plusw1,w,c
 21737  01991E  34E8               	rlcf	wreg,w,c
 21738  019920  6E01               	movwf	btemp^0,c
 21739  019922  0EF9               	movlw	-7
 21740  019924  0060  F007  FFE3   	movff	btemp,plusw1
 21741                           
 21742                           ;stkvar	_counter @ sp[(-4)+3]
 21743  01992A  0EFF               	movlw	-1
 21744  01992C                     L26:
 21745  01992C  2AE3               	incf	plusw1,f,c
 21746                           
 21747                           ;stkvar	_divisor @ sp[(-4)+-4]
 21748  01992E  0EF9               	movlw	-7
 21749  019930  AEE3               	btfss	plusw1,7,c
 21750  019932  D7EA               	goto	l8885
 21751  019934                     u7250:
 21752                           
 21753                           ;stkvar	_quotient @ sp[(-4)+0]
 21754  019934  0EFC               	movlw	-4
 21755  019936  50E3               	movf	plusw1,w,c
 21756  019938  90D8               	bcf	status,0,c
 21757  01993A  34E8               	rlcf	wreg,w,c
 21758  01993C  6E01               	movwf	btemp^0,c
 21759  01993E  0EFC               	movlw	-4
 21760  019940  0060  F007  FFE3   	movff	btemp,plusw1
 21761  019946  0EFD               	movlw	-3
 21762  019948  50E3               	movf	plusw1,w,c
 21763  01994A  34E8               	rlcf	wreg,w,c
 21764  01994C  6E01               	movwf	btemp^0,c
 21765  01994E  0EFD               	movlw	-3
 21766  019950  0060  F007  FFE3   	movff	btemp,plusw1
 21767                           
 21768                           ;stkvar	_divisor @ sp[(-4)+-4]
 21769  019956  0EF8               	movlw	-8
 21770  019958  006F FF8C  F00B    	movff	plusw1,btemp+10
 21771  01995E  0EF9               	movlw	-7
 21772  019960  006F FF8C  F00C    	movff	plusw1,btemp+11
 21773                           
 21774                           ;stkvar	_dividend @ sp[(-4)+-2]
 21775  019966  0EFA               	movlw	-6
 21776  019968  006F FF8C  F009    	movff	plusw1,btemp+8
 21777  01996E  0EFB               	movlw	-5
 21778  019970  006F FF8C  F00A    	movff	plusw1,btemp+9
 21779  019976  500B               	movf	(btemp+10)^0,w,c
 21780  019978  5C09               	subwf	(btemp+8)^0,w,c
 21781  01997A  500C               	movf	(btemp+11)^0,w,c
 21782  01997C  580A               	subwfb	(btemp+9)^0,w,c
 21783  01997E  A0D8               	btfss	status,0,c
 21784  019980  D016               	goto	l8899
 21785                           
 21786                           ;stkvar	_divisor @ sp[(-4)+-4]
 21787                           ;stkvar	_dividend @ sp[(-4)+-2]
 21788  019982  0EFA               	movlw	-6
 21789  019984  50E3               	movf	plusw1,w,c
 21790  019986  6E01               	movwf	btemp^0,c
 21791  019988  0EF8               	movlw	-8
 21792  01998A  50E3               	movf	plusw1,w,c
 21793  01998C  5E01               	subwf	btemp^0,f,c
 21794  01998E  0EFA               	movlw	-6
 21795  019990  0060  F007  FFE3   	movff	btemp,plusw1
 21796  019996  0EFB               	movlw	-5
 21797  019998  50E3               	movf	plusw1,w,c
 21798  01999A  6E01               	movwf	btemp^0,c
 21799  01999C  0EF9               	movlw	-7
 21800  01999E  50E3               	movf	plusw1,w,c
 21801  0199A0  5A01               	subwfb	btemp^0,f,c
 21802  0199A2  0EFB               	movlw	-5
 21803  0199A4  0060  F007  FFE3   	movff	btemp,plusw1
 21804                           
 21805                           ;stkvar	_quotient @ sp[(-4)+0]
 21806  0199AA  0EFC               	movlw	-4
 21807  0199AC  80E3               	bsf	plusw1,0,c
 21808  0199AE                     l8899:
 21809                           
 21810                           ;stkvar	_divisor @ sp[(-4)+-4]
 21811  0199AE  90D8               	bcf	status,0,c
 21812  0199B0  0EF9               	movlw	-7
 21813  0199B2  32E3               	rrcf	plusw1,f,c
 21814  0199B4  0EF8               	movlw	-8
 21815  0199B6  32E3               	rrcf	plusw1,f,c
 21816                           
 21817                           ;stkvar	_counter @ sp[(-4)+3]
 21818  0199B8  0EFF               	movlw	-1
 21819  0199BA  50E3               	movf	plusw1,w,c
 21820  0199BC  6E01               	movwf	btemp^0,c
 21821  0199BE  0E01               	movlw	1
 21822  0199C0  5E01               	subwf	btemp^0,f,c
 21823  0199C2  0EFF               	movlw	-1
 21824  0199C4  0060  F007  FFE3   	movff	btemp,plusw1
 21825  0199CA  A4D8               	btfss	status,2,c
 21826  0199CC  D7B3               	goto	u7250
 21827  0199CE                     u7270:
 21828                           
 21829                           ;stkvar	_sign @ sp[(-4)+2]
 21830  0199CE  0EFE               	movlw	-2
 21831  0199D0  50E3               	movf	plusw1,w,c
 21832  0199D2  B4D8               	btfsc	status,2,c
 21833  0199D4  D006               	goto	l8907
 21834                           
 21835                           ;stkvar	_quotient @ sp[(-4)+0]
 21836                           ;stkvar	_quotient @ sp[(-4)+0]
 21837  0199D6  0EFC               	movlw	-4
 21838  0199D8  6CE3               	negf	plusw1,c
 21839  0199DA  0EFD               	movlw	-3
 21840  0199DC  1EE3               	comf	plusw1,f,c
 21841  0199DE  B0D8               	btfsc	status,0,c
 21842  0199E0  2AE3               	incf	plusw1,f,c
 21843  0199E2                     l8907:
 21844                           
 21845                           ;stkvar	_quotient @ sp[(-4)+0]
 21846  0199E2  0EFC               	movlw	-4
 21847  0199E4  006F FF8C  F001    	movff	plusw1,btemp
 21848  0199EA  0EFD               	movlw	-3
 21849  0199EC  006F FF8C  F002    	movff	plusw1,btemp+1
 21850                           
 21851                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 21852  0199F2  0EF8               	movlw	248
 21853  0199F4  26E1               	addwf	fsr1l,f,c
 21854  0199F6  0EFF               	movlw	255
 21855  0199F8  22E2               	addwfc	fsr1h,f,c
 21856  0199FA  0012               	return		;funcret
 21857  0199FC                     __end_of___awdiv:
 21858                           	opt callstack 0
 21859                           
 21860 ;; *************** function _dtoa *****************
 21861 ;; Defined at:
 21862 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21863 ;; Parameters:    Size  Location     Type
 21864 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21865 ;;		 -> f(6), NULL(0), 
 21866 ;;  d               8  [STACK] long long 
 21867 ;; Auto vars:     Size  Location     Type
 21868 ;;  n               8  [STACK] long long 
 21869 ;;  i               2  [STACK] int 
 21870 ;;  s               2  [STACK] int 
 21871 ;;  w               2  [STACK] int 
 21872 ;;  p               2  [STACK] int 
 21873 ;; Return value:  Size  Location     Type
 21874 ;;                  2  [STACK] int 
 21875 ;; Registers used:
 21876 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 21877 ;; Tracked objects:
 21878 ;;		On entry : 0/0
 21879 ;;		On exit  : 0/0
 21880 ;;		Unchanged: 0/0
 21881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21886 ;;Total ram usage:        0 bytes
 21887 ;; Hardware stack levels used:    1
 21888 ;; Hardware stack levels required when called:   20
 21889 ;; This function calls:
 21890 ;;		___aodiv
 21891 ;;		___aomod
 21892 ;;		_abs
 21893 ;;		_pad
 21894 ;; This function is called by:
 21895 ;;		_vfpfcnvrt
 21896 ;; This function uses a reentrant model
 21897 ;;
 21898                           
 21899                           	psect	text76
 21900  01585C                     __ptext76:
 21901                           	opt callstack 0
 21902  01585C                     _dtoa:
 21903                           	opt callstack 0
 21904                           
 21905                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 21906  01585C  0E12               	movlw	18
 21907  01585E  26E1               	addwf	fsr1l,f,c
 21908  015860  0E00               	movlw	0
 21909  015862  22E2               	addwfc	fsr1h,f,c
 21910                           
 21911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 21912                           ;stkvar	_d @ sp[(-18)+-10]
 21913                           
 21914                           ;incstack = 0
 21915 ;; hardware stack exceeded
 21916  015864  0EE4               	movlw	228
 21917  015866  24E1               	addwf	fsr1l,w,c
 21918  015868  6ED9               	movwf	fsr2l,c
 21919  01586A  0EFF               	movlw	255
 21920  01586C  20E2               	addwfc	fsr1h,w,c
 21921  01586E  6EDA               	movwf	fsr2h,c
 21922                           
 21923                           ;stkvar	_n @ sp[(-18)+2]
 21924  015870  0E08               	movlw	8
 21925  015872  6E01               	movwf	btemp^0,c
 21926  015874  0EF0               	movlw	-16
 21927  015876                     us1138999:
 21928  015876  006F FF7B FFE3     	movff	postinc2,plusw1
 21929  01587C  28E8               	incf	wreg,w,c
 21930  01587E  2E01               	decfsz	btemp^0,f,c
 21931  015880  D7FA               	bra	us1138999
 21932                           
 21933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 21934                           ;stkvar	_n @ sp[(-18)+2]
 21935  015882  0EF7               	movlw	-9
 21936  015884  AEE3               	btfss	plusw1,7,c
 21937  015886  D002               	goto	u11390
 21938  015888  0E01               	movlw	1
 21939  01588A  D001               	goto	u11400
 21940  01588C                     u11390:
 21941  01588C  0E00               	movlw	0
 21942  01588E                     u11400:
 21943  01588E  6E0B               	movwf	(btemp+10)^0,c
 21944  015890  6A0C               	clrf	(btemp+11)^0,c
 21945                           
 21946                           ;stkvar	_s @ sp[(-18)+12]
 21947  015892  0EFA               	movlw	-6
 21948  015894  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21949  01589A  0EFB               	movlw	-5
 21950  01589C  0060  F033  FFE3   	movff	btemp+11,plusw1
 21951                           
 21952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 21953                           ;stkvar	_s @ sp[(-18)+12]
 21954  0158A2  0EFA               	movlw	-6
 21955  0158A4  006F FF8C  F001    	movff	plusw1,btemp
 21956  0158AA  0EFB               	movlw	-5
 21957  0158AC  50E3               	movf	plusw1,w,c
 21958  0158AE  1001               	iorwf	btemp^0,w,c
 21959  0158B0  B4D8               	btfsc	status,2,c
 21960  0158B2  D025               	goto	u11420
 21961                           
 21962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 21963                           ;stkvar	_n @ sp[(-18)+2]
 21964                           ;stkvar	_n @ sp[(-18)+2]
 21965  0158B4  0EF0               	movlw	-16
 21966  0158B6  6CE3               	negf	plusw1,c
 21967  0158B8  0EF1               	movlw	-15
 21968  0158BA  1EE3               	comf	plusw1,f,c
 21969  0158BC  0EF2               	movlw	-14
 21970  0158BE  1EE3               	comf	plusw1,f,c
 21971  0158C0  0EF3               	movlw	-13
 21972  0158C2  1EE3               	comf	plusw1,f,c
 21973  0158C4  0EF4               	movlw	-12
 21974  0158C6  1EE3               	comf	plusw1,f,c
 21975  0158C8  0EF5               	movlw	-11
 21976  0158CA  1EE3               	comf	plusw1,f,c
 21977  0158CC  0EF6               	movlw	-10
 21978  0158CE  1EE3               	comf	plusw1,f,c
 21979  0158D0  0EF7               	movlw	-9
 21980  0158D2  1EE3               	comf	plusw1,f,c
 21981  0158D4  E314               	bnc	u11420
 21982  0158D6  0EF1               	movlw	-15
 21983  0158D8  2AE3               	incf	plusw1,f,c
 21984  0158DA  E311               	bnc	u11420
 21985  0158DC  0EF2               	movlw	-14
 21986  0158DE  2AE3               	incf	plusw1,f,c
 21987  0158E0  E30E               	bnc	u11420
 21988  0158E2  0EF3               	movlw	-13
 21989  0158E4  2AE3               	incf	plusw1,f,c
 21990  0158E6  E30B               	bnc	u11420
 21991  0158E8  0EF4               	movlw	-12
 21992  0158EA  2AE3               	incf	plusw1,f,c
 21993  0158EC  E308               	bnc	u11420
 21994  0158EE  0EF5               	movlw	-11
 21995  0158F0  2AE3               	incf	plusw1,f,c
 21996  0158F2  E305               	bnc	u11420
 21997  0158F4  0EF6               	movlw	-10
 21998  0158F6  2AE3               	incf	plusw1,f,c
 21999  0158F8  E302               	bnc	u11420
 22000  0158FA  0EF7               	movlw	-9
 22001  0158FC  2AE3               	incf	plusw1,f,c
 22002  0158FE                     u11420:
 22003                           
 22004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 22005  0158FE  AE3D               	btfss	(_prec+1)^0,7,c
 22006                           
 22007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 22008  015900  923E               	bcf	_flags^0,1,c
 22009                           
 22010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 22011  015902  BE3D               	btfsc	(_prec+1)^0,7,c
 22012  015904  D005               	goto	u11440
 22013  015906  503D               	movf	(_prec+1)^0,w,c
 22014  015908  E110               	bnz	l12537
 22015  01590A  043C               	decf	_prec^0,w,c
 22016  01590C  B0D8               	btfsc	status,0,c
 22017  01590E  D00D               	goto	l12537
 22018  015910                     u11440:
 22019  015910  0E01               	movlw	1
 22020  015912  6E0B               	movwf	(btemp+10)^0,c
 22021  015914  0E00               	movlw	0
 22022  015916  6E0C               	movwf	(btemp+11)^0,c
 22023                           
 22024                           ;stkvar	_p @ sp[(-18)+16]
 22025  015918  0EFE               	movlw	-2
 22026  01591A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22027  015920  0EFF               	movlw	-1
 22028  015922  0060  F033  FFE3   	movff	btemp+11,plusw1
 22029  015928  D008               	goto	l2281
 22030  01592A                     l12537:
 22031                           
 22032                           ;stkvar	_p @ sp[(-18)+16]
 22033  01592A  0EFE               	movlw	-2
 22034  01592C  0060  F0F3  FFE3   	movff	_prec,plusw1
 22035  015932  0EFF               	movlw	-1
 22036  015934  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 22037  01593A                     l2281:
 22038                           
 22039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 22040                           ;stkvar	_w @ sp[(-18)+14]
 22041  01593A  0EFC               	movlw	-4
 22042  01593C  0060  F0EB  FFE3   	movff	_width,plusw1
 22043  015942  0EFD               	movlw	-3
 22044  015944  0060  F0EF  FFE3   	movff	_width+1,plusw1
 22045                           
 22046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 22047                           ;stkvar	_s @ sp[(-18)+12]
 22048  01594A  0EFA               	movlw	-6
 22049  01594C  006F FF8C  F001    	movff	plusw1,btemp
 22050  015952  0EFB               	movlw	-5
 22051  015954  50E3               	movf	plusw1,w,c
 22052  015956  1001               	iorwf	btemp^0,w,c
 22053  015958  A4D8               	btfss	status,2,c
 22054  01595A  D002               	goto	u11460
 22055  01595C  A43E               	btfss	_flags^0,2,c
 22056  01595E  D00A               	goto	l12545
 22057  015960                     u11460:
 22058                           
 22059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 22060                           ;stkvar	_w @ sp[(-18)+14]
 22061  015960  50E1               	movf	fsr1l,w,c
 22062  015962  0FFC               	addlw	-4
 22063  015964  6ED9               	movwf	fsr2l,c
 22064  015966  50E2               	movf	fsr1h,w,c
 22065  015968  6EDA               	movwf	fsr2h,c
 22066  01596A  0EFF               	movlw	255
 22067  01596C  22DA               	addwfc	fsr2h,f,c
 22068  01596E  06DE               	decf	postinc2,f,c
 22069  015970  0E00               	movlw	0
 22070  015972  5ADD               	subwfb	postdec2,f,c
 22071  015974                     l12545:
 22072                           
 22073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 22074  015974  0E4F               	movlw	79
 22075  015976  6E0B               	movwf	(btemp+10)^0,c
 22076  015978  0E00               	movlw	0
 22077  01597A  6E0C               	movwf	(btemp+11)^0,c
 22078                           
 22079                           ;stkvar	_i @ sp[(-18)+10]
 22080  01597C  0EF8               	movlw	-8
 22081  01597E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22082  015984  0EF9               	movlw	-7
 22083  015986  0060  F033  FFE3   	movff	btemp+11,plusw1
 22084                           
 22085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 22086  01598C  0102               	movlb	2	; () banked
 22087  01598E  6BE6               	clrf	(_dbuf+79)& (0+255),b
 22088                           
 22089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22090  015990  D109               	goto	l12559
 22091  015992                     l12549:
 22092                           
 22093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 22094                           ;stkvar	_i @ sp[(-18)+10]
 22095  015992  50E1               	movf	fsr1l,w,c
 22096  015994  0FF8               	addlw	-8
 22097  015996  6ED9               	movwf	fsr2l,c
 22098  015998  50E2               	movf	fsr1h,w,c
 22099  01599A  6EDA               	movwf	fsr2h,c
 22100  01599C  0EFF               	movlw	255
 22101  01599E  22DA               	addwfc	fsr2h,f,c
 22102  0159A0  06DE               	decf	postinc2,f,c
 22103  0159A2  0E00               	movlw	0
 22104  0159A4  5ADD               	subwfb	postdec2,f,c
 22105                           
 22106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 22107  0159A6  0E0A               	movlw	10
 22108  0159A8  6EE6               	movwf	postinc1,c
 22109  0159AA  0E00               	movlw	0
 22110  0159AC  6EE6               	movwf	postinc1,c
 22111  0159AE  0E00               	movlw	0
 22112  0159B0  6EE6               	movwf	postinc1,c
 22113  0159B2  0E00               	movlw	0
 22114  0159B4  6EE6               	movwf	postinc1,c
 22115  0159B6  0E00               	movlw	0
 22116  0159B8  6EE6               	movwf	postinc1,c
 22117  0159BA  0E00               	movlw	0
 22118  0159BC  6EE6               	movwf	postinc1,c
 22119  0159BE  0E00               	movlw	0
 22120  0159C0  6EE6               	movwf	postinc1,c
 22121  0159C2  0E00               	movlw	0
 22122  0159C4  6EE6               	movwf	postinc1,c
 22123                           
 22124                           ;stkvar	_n @ sp[(-26)+2]
 22125  0159C6  50E1               	movf	fsr1l,w,c
 22126  0159C8  0FE8               	addlw	-24
 22127  0159CA  6ED9               	movwf	fsr2l,c
 22128  0159CC  50E2               	movf	fsr1h,w,c
 22129  0159CE  6EDA               	movwf	fsr2h,c
 22130  0159D0  0EFF               	movlw	255
 22131  0159D2  22DA               	addwfc	fsr2h,f,c
 22132  0159D4  006F FF7B FFE6     	movff	postinc2,postinc1
 22133  0159DA  006F FF7B FFE6     	movff	postinc2,postinc1
 22134  0159E0  006F FF7B FFE6     	movff	postinc2,postinc1
 22135  0159E6  006F FF7B FFE6     	movff	postinc2,postinc1
 22136  0159EC  006F FF7B FFE6     	movff	postinc2,postinc1
 22137  0159F2  006F FF7B FFE6     	movff	postinc2,postinc1
 22138  0159F8  006F FF7B FFE6     	movff	postinc2,postinc1
 22139  0159FE  006F FF7B FFE6     	movff	postinc2,postinc1
 22140  015A04  ECF6  F0C0         	call	___aomod	;wreg free
 22141  015A08  52E5               	movf	postdec1,f,c
 22142  015A0A  006F FF9C  F018    	movff	indf1,btemp+23
 22143  015A10  52E5               	movf	postdec1,f,c
 22144  015A12  006F FF9C  F017    	movff	indf1,btemp+22
 22145  015A18  52E5               	movf	postdec1,f,c
 22146  015A1A  006F FF9C  F016    	movff	indf1,btemp+21
 22147  015A20  52E5               	movf	postdec1,f,c
 22148  015A22  006F FF9C  F015    	movff	indf1,btemp+20
 22149  015A28  52E5               	movf	postdec1,f,c
 22150  015A2A  006F FF9C  F014    	movff	indf1,btemp+19
 22151  015A30  52E5               	movf	postdec1,f,c
 22152  015A32  006F FF9C  F013    	movff	indf1,btemp+18
 22153  015A38  52E5               	movf	postdec1,f,c
 22154  015A3A  006F FF9C  F012    	movff	indf1,btemp+17
 22155  015A40  52E5               	movf	postdec1,f,c
 22156  015A42  006F FF9C  F011    	movff	indf1,btemp+16
 22157  015A48  0EF8               	movlw	248
 22158  015A4A  26E1               	addwf	fsr1l,f,c
 22159  015A4C  0EFF               	movlw	255
 22160  015A4E  22E2               	addwfc	fsr1h,f,c
 22161  015A50  0060  F044  F00B   	movff	btemp+16,btemp+10
 22162  015A56  0060  F048  F00C   	movff	btemp+17,btemp+11
 22163  015A5C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 22164  015A62  0060  F033  FFE6   	movff	btemp+11,postinc1
 22165  015A68  ECA5  F0DF         	call	_abs	;wreg free
 22166  015A6C  0E30               	movlw	48
 22167  015A6E  2601               	addwf	btemp^0,f,c
 22168                           
 22169                           ;stkvar	_i @ sp[(-18)+10]
 22170  015A70  0EF8               	movlw	-8
 22171  015A72  006F FF8C  F00B    	movff	plusw1,btemp+10
 22172  015A78  0EF9               	movlw	-7
 22173  015A7A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22174  015A80  0E97               	movlw	low _dbuf
 22175  015A82  240B               	addwf	(btemp+10)^0,w,c
 22176  015A84  6ED9               	movwf	fsr2l,c
 22177  015A86  0E02               	movlw	high _dbuf
 22178  015A88  200C               	addwfc	(btemp+11)^0,w,c
 22179  015A8A  6EDA               	movwf	fsr2h,c
 22180  015A8C  0060  F007  FFDF   	movff	btemp,indf2
 22181                           
 22182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 22183                           ;stkvar	_p @ sp[(-18)+16]
 22184  015A92  50E1               	movf	fsr1l,w,c
 22185  015A94  0FFE               	addlw	-2
 22186  015A96  6ED9               	movwf	fsr2l,c
 22187  015A98  50E2               	movf	fsr1h,w,c
 22188  015A9A  6EDA               	movwf	fsr2h,c
 22189  015A9C  0EFF               	movlw	255
 22190  015A9E  22DA               	addwfc	fsr2h,f,c
 22191  015AA0  06DE               	decf	postinc2,f,c
 22192  015AA2  0E00               	movlw	0
 22193  015AA4  5ADD               	subwfb	postdec2,f,c
 22194                           
 22195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 22196                           ;stkvar	_w @ sp[(-18)+14]
 22197  015AA6  50E1               	movf	fsr1l,w,c
 22198  015AA8  0FFC               	addlw	-4
 22199  015AAA  6ED9               	movwf	fsr2l,c
 22200  015AAC  50E2               	movf	fsr1h,w,c
 22201  015AAE  6EDA               	movwf	fsr2h,c
 22202  015AB0  0EFF               	movlw	255
 22203  015AB2  22DA               	addwfc	fsr2h,f,c
 22204  015AB4  06DE               	decf	postinc2,f,c
 22205  015AB6  0E00               	movlw	0
 22206  015AB8  5ADD               	subwfb	postdec2,f,c
 22207                           
 22208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 22209  015ABA  0E0A               	movlw	10
 22210  015ABC  6EE6               	movwf	postinc1,c
 22211  015ABE  0E00               	movlw	0
 22212  015AC0  6EE6               	movwf	postinc1,c
 22213  015AC2  0E00               	movlw	0
 22214  015AC4  6EE6               	movwf	postinc1,c
 22215  015AC6  0E00               	movlw	0
 22216  015AC8  6EE6               	movwf	postinc1,c
 22217  015ACA  0E00               	movlw	0
 22218  015ACC  6EE6               	movwf	postinc1,c
 22219  015ACE  0E00               	movlw	0
 22220  015AD0  6EE6               	movwf	postinc1,c
 22221  015AD2  0E00               	movlw	0
 22222  015AD4  6EE6               	movwf	postinc1,c
 22223  015AD6  0E00               	movlw	0
 22224  015AD8  6EE6               	movwf	postinc1,c
 22225                           
 22226                           ;stkvar	_n @ sp[(-26)+2]
 22227  015ADA  50E1               	movf	fsr1l,w,c
 22228  015ADC  0FE8               	addlw	-24
 22229  015ADE  6ED9               	movwf	fsr2l,c
 22230  015AE0  50E2               	movf	fsr1h,w,c
 22231  015AE2  6EDA               	movwf	fsr2h,c
 22232  015AE4  0EFF               	movlw	255
 22233  015AE6  22DA               	addwfc	fsr2h,f,c
 22234  015AE8  006F FF7B FFE6     	movff	postinc2,postinc1
 22235  015AEE  006F FF7B FFE6     	movff	postinc2,postinc1
 22236  015AF4  006F FF7B FFE6     	movff	postinc2,postinc1
 22237  015AFA  006F FF7B FFE6     	movff	postinc2,postinc1
 22238  015B00  006F FF7B FFE6     	movff	postinc2,postinc1
 22239  015B06  006F FF7B FFE6     	movff	postinc2,postinc1
 22240  015B0C  006F FF7B FFE6     	movff	postinc2,postinc1
 22241  015B12  006F FF7B FFE6     	movff	postinc2,postinc1
 22242  015B18  EC59  F0BD         	call	___aodiv	;wreg free
 22243  015B1C  52E5               	movf	postdec1,f,c
 22244  015B1E  006F FF9C  F018    	movff	indf1,btemp+23
 22245  015B24  52E5               	movf	postdec1,f,c
 22246  015B26  006F FF9C  F017    	movff	indf1,btemp+22
 22247  015B2C  52E5               	movf	postdec1,f,c
 22248  015B2E  006F FF9C  F016    	movff	indf1,btemp+21
 22249  015B34  52E5               	movf	postdec1,f,c
 22250  015B36  006F FF9C  F015    	movff	indf1,btemp+20
 22251  015B3C  52E5               	movf	postdec1,f,c
 22252  015B3E  006F FF9C  F014    	movff	indf1,btemp+19
 22253  015B44  52E5               	movf	postdec1,f,c
 22254  015B46  006F FF9C  F013    	movff	indf1,btemp+18
 22255  015B4C  52E5               	movf	postdec1,f,c
 22256  015B4E  006F FF9C  F012    	movff	indf1,btemp+17
 22257  015B54  52E5               	movf	postdec1,f,c
 22258  015B56  006F FF9C  F011    	movff	indf1,btemp+16
 22259  015B5C  0EF8               	movlw	248
 22260  015B5E  26E1               	addwf	fsr1l,f,c
 22261  015B60  0EFF               	movlw	255
 22262  015B62  22E2               	addwfc	fsr1h,f,c
 22263                           
 22264                           ;stkvar	_n @ sp[(-18)+2]
 22265  015B64  0EF0               	movlw	-16
 22266  015B66  0060  F047  FFE3   	movff	btemp+16,plusw1
 22267  015B6C  0EF1               	movlw	-15
 22268  015B6E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 22269  015B74  0EF2               	movlw	-14
 22270  015B76  0060  F04F  FFE3   	movff	btemp+18,plusw1
 22271  015B7C  0EF3               	movlw	-13
 22272  015B7E  0060  F053  FFE3   	movff	btemp+19,plusw1
 22273  015B84  0EF4               	movlw	-12
 22274  015B86  0060  F057  FFE3   	movff	btemp+20,plusw1
 22275  015B8C  0EF5               	movlw	-11
 22276  015B8E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 22277  015B94  0EF6               	movlw	-10
 22278  015B96  0060  F05F  FFE3   	movff	btemp+22,plusw1
 22279  015B9C  0EF7               	movlw	-9
 22280  015B9E  0060  F063  FFE3   	movff	btemp+23,plusw1
 22281  015BA4                     l12559:
 22282                           
 22283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22284                           ;stkvar	_i @ sp[(-18)+10]
 22285  015BA4  0EF9               	movlw	-7
 22286  015BA6  BEE3               	btfsc	plusw1,7,c
 22287  015BA8  D036               	goto	u11510
 22288  015BAA  0EF9               	movlw	-7
 22289  015BAC  50E3               	movf	plusw1,w,c
 22290  015BAE  E104               	bnz	u11470
 22291  015BB0  0EF8               	movlw	-8
 22292  015BB2  04E3               	decf	plusw1,w,c
 22293  015BB4  A0D8               	btfss	status,0,c
 22294  015BB6  D02F               	goto	u11510
 22295  015BB8                     u11470:
 22296                           
 22297                           ;stkvar	_n @ sp[(-18)+2]
 22298  015BB8  0EF0               	movlw	-16
 22299  015BBA  50E3               	movf	plusw1,w,c
 22300  015BBC  E115               	bnz	u11481
 22301  015BBE  0EF1               	movlw	-15
 22302  015BC0  50E3               	movf	plusw1,w,c
 22303  015BC2  E112               	bnz	u11481
 22304  015BC4  0EF2               	movlw	-14
 22305  015BC6  50E3               	movf	plusw1,w,c
 22306  015BC8  E10F               	bnz	u11481
 22307  015BCA  0EF3               	movlw	-13
 22308  015BCC  50E3               	movf	plusw1,w,c
 22309  015BCE  E10C               	bnz	u11481
 22310  015BD0  0EF4               	movlw	-12
 22311  015BD2  50E3               	movf	plusw1,w,c
 22312  015BD4  E109               	bnz	u11481
 22313  015BD6  0EF5               	movlw	-11
 22314  015BD8  50E3               	movf	plusw1,w,c
 22315  015BDA  E106               	bnz	u11481
 22316  015BDC  0EF6               	movlw	-10
 22317  015BDE  50E3               	movf	plusw1,w,c
 22318  015BE0  E103               	bnz	u11481
 22319  015BE2  0EF7               	movlw	-9
 22320  015BE4  50E3               	movf	plusw1,w,c
 22321  015BE6  A4D8               	btfss	status,2,c
 22322  015BE8                     u11481:
 22323  015BE8  D6D4               	goto	l12549
 22324                           
 22325                           ;stkvar	_p @ sp[(-18)+16]
 22326  015BEA  0EFF               	movlw	-1
 22327  015BEC  BEE3               	btfsc	plusw1,7,c
 22328  015BEE  D007               	goto	u11490
 22329  015BF0  0EFF               	movlw	-1
 22330  015BF2  50E3               	movf	plusw1,w,c
 22331  015BF4  E103               	bnz	u11491
 22332  015BF6  0EFE               	movlw	-2
 22333  015BF8  04E3               	decf	plusw1,w,c
 22334  015BFA  B0D8               	btfsc	status,0,c
 22335  015BFC                     u11491:
 22336  015BFC  D6CA               	goto	l12549
 22337  015BFE                     u11490:
 22338                           
 22339                           ;stkvar	_w @ sp[(-18)+14]
 22340  015BFE  0EFD               	movlw	-3
 22341  015C00  BEE3               	btfsc	plusw1,7,c
 22342  015C02  D009               	goto	u11510
 22343  015C04  0EFD               	movlw	-3
 22344  015C06  50E3               	movf	plusw1,w,c
 22345  015C08  E104               	bnz	u11500
 22346  015C0A  0EFC               	movlw	-4
 22347  015C0C  04E3               	decf	plusw1,w,c
 22348  015C0E  A0D8               	btfss	status,0,c
 22349  015C10  D002               	goto	u11510
 22350  015C12                     u11500:
 22351  015C12  B23E               	btfsc	_flags^0,1,c
 22352  015C14  D6BE               	goto	l12549
 22353  015C16                     u11510:
 22354                           
 22355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 22356                           ;stkvar	_s @ sp[(-18)+12]
 22357  015C16  0EFA               	movlw	-6
 22358  015C18  006F FF8C  F001    	movff	plusw1,btemp
 22359  015C1E  0EFB               	movlw	-5
 22360  015C20  50E3               	movf	plusw1,w,c
 22361  015C22  1001               	iorwf	btemp^0,w,c
 22362  015C24  A4D8               	btfss	status,2,c
 22363  015C26  D002               	goto	u11530
 22364  015C28  A43E               	btfss	_flags^0,2,c
 22365  015C2A  D033               	goto	l12583
 22366  015C2C                     u11530:
 22367                           
 22368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 22369                           ;stkvar	_i @ sp[(-18)+10]
 22370  015C2C  50E1               	movf	fsr1l,w,c
 22371  015C2E  0FF8               	addlw	-8
 22372  015C30  6ED9               	movwf	fsr2l,c
 22373  015C32  50E2               	movf	fsr1h,w,c
 22374  015C34  6EDA               	movwf	fsr2h,c
 22375  015C36  0EFF               	movlw	255
 22376  015C38  22DA               	addwfc	fsr2h,f,c
 22377  015C3A  06DE               	decf	postinc2,f,c
 22378  015C3C  0E00               	movlw	0
 22379  015C3E  5ADD               	subwfb	postdec2,f,c
 22380                           
 22381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 22382                           ;stkvar	_s @ sp[(-18)+12]
 22383  015C40  0EFA               	movlw	-6
 22384  015C42  006F FF8C  F001    	movff	plusw1,btemp
 22385  015C48  0EFB               	movlw	-5
 22386  015C4A  50E3               	movf	plusw1,w,c
 22387  015C4C  1001               	iorwf	btemp^0,w,c
 22388  015C4E  A4D8               	btfss	status,2,c
 22389  015C50  D002               	goto	l12579
 22390  015C52  0E2B               	movlw	43
 22391  015C54  D001               	goto	L27
 22392  015C56                     l12579:
 22393  015C56  0E2D               	movlw	45
 22394  015C58                     L27:
 22395  015C58  6E0B               	movwf	(btemp+10)^0,c
 22396  015C5A  0E00               	movlw	0
 22397  015C5C  6E0C               	movwf	(btemp+11)^0,c
 22398                           
 22399                           ;stkvar	_dtoa$5834 @ sp[(-18)+0]
 22400  015C5E  0EEE               	movlw	-18
 22401  015C60  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22402  015C66  0EEF               	movlw	-17
 22403  015C68  0060  F033  FFE3   	movff	btemp+11,plusw1
 22404                           
 22405                           ;stkvar	_dtoa$5834 @ sp[(-18)+0]
 22406                           ;stkvar	_i @ sp[(-18)+10]
 22407  015C6E  0EF8               	movlw	-8
 22408  015C70  006F FF8C  F00B    	movff	plusw1,btemp+10
 22409  015C76  0EF9               	movlw	-7
 22410  015C78  006F FF8C  F00C    	movff	plusw1,btemp+11
 22411  015C7E  0E97               	movlw	low _dbuf
 22412  015C80  240B               	addwf	(btemp+10)^0,w,c
 22413  015C82  6ED9               	movwf	fsr2l,c
 22414  015C84  0E02               	movlw	high _dbuf
 22415  015C86  200C               	addwfc	(btemp+11)^0,w,c
 22416  015C88  6EDA               	movwf	fsr2h,c
 22417  015C8A  0EEE               	movlw	-18
 22418  015C8C  006F FF8F FFDF     	movff	plusw1,indf2
 22419  015C92                     l12583:
 22420                           
 22421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 22422                           ;stkvar	_w @ sp[(-18)+14]
 22423  015C92  0EFC               	movlw	-4
 22424  015C94  006F FF8F FFE6     	movff	plusw1,postinc1
 22425  015C9A  006F FF8F FFE6     	movff	plusw1,postinc1
 22426                           
 22427                           ;stkvar	_i @ sp[(-20)+10]
 22428  015CA0  0E97               	movlw	low _dbuf
 22429  015CA2  6E0B               	movwf	(btemp+10)^0,c
 22430  015CA4  0E02               	movlw	high _dbuf
 22431  015CA6  6E0C               	movwf	(btemp+11)^0,c
 22432  015CA8  0EF6               	movlw	-10
 22433  015CAA  50E3               	movf	plusw1,w,c
 22434  015CAC  260B               	addwf	(btemp+10)^0,f,c
 22435  015CAE  0EF7               	movlw	-9
 22436  015CB0  50E3               	movf	plusw1,w,c
 22437  015CB2  220C               	addwfc	(btemp+11)^0,f,c
 22438  015CB4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 22439  015CBA  0060  F033  FFE6   	movff	btemp+11,postinc1
 22440                           
 22441                           ;stkvar	_fp @ sp[(-22)+-2]
 22442  015CC0  0EE8               	movlw	-24
 22443  015CC2  006F FF8F FFE6     	movff	plusw1,postinc1
 22444  015CC8  006F FF8F FFE6     	movff	plusw1,postinc1
 22445  015CCE  EC1C  F0D1         	call	_pad	;wreg free
 22446                           
 22447                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 22448  015CD2  0EE4               	movlw	228
 22449  015CD4  26E1               	addwf	fsr1l,f,c
 22450  015CD6  0EFF               	movlw	255
 22451  015CD8  22E2               	addwfc	fsr1h,f,c
 22452  015CDA  0012               	return		;funcret
 22453  015CDC                     __end_of_dtoa:
 22454                           	opt callstack 0
 22455                           
 22456 ;; *************** function _abs *****************
 22457 ;; Defined at:
 22458 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 22459 ;; Parameters:    Size  Location     Type
 22460 ;;  a               2  [STACK] int 
 22461 ;; Auto vars:     Size  Location     Type
 22462 ;;		None
 22463 ;; Return value:  Size  Location     Type
 22464 ;;                  2  [STACK] int 
 22465 ;; Registers used:
 22466 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 22467 ;; Tracked objects:
 22468 ;;		On entry : 0/2
 22469 ;;		On exit  : 0/0
 22470 ;;		Unchanged: 0/0
 22471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22476 ;;Total ram usage:        0 bytes
 22477 ;; Hardware stack levels used:    1
 22478 ;; Hardware stack levels required when called:   15
 22479 ;; This function calls:
 22480 ;;		Nothing
 22481 ;; This function is called by:
 22482 ;;		_dtoa
 22483 ;; This function uses a reentrant model
 22484 ;;
 22485                           
 22486                           	psect	text77
 22487  01BF4A                     __ptext77:
 22488                           	opt callstack 0
 22489  01BF4A                     _abs:
 22490                           	opt callstack 0
 22491                           
 22492                           ;stkvar	_a @ sp[(0)+-2]
 22493                           
 22494                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22495                           ;incstack = 0
 22496 ;; hardware stack exceeded
 22497  01BF4A  0EFF               	movlw	-1
 22498  01BF4C  BEE3               	btfsc	plusw1,7,c
 22499  01BF4E  D007               	goto	u6230
 22500  01BF50  0EFF               	movlw	-1
 22501  01BF52  50E3               	movf	plusw1,w,c
 22502  01BF54  E112               	bnz	l8361
 22503  01BF56  0EFE               	movlw	-2
 22504  01BF58  04E3               	decf	plusw1,w,c
 22505  01BF5A  B0D8               	btfsc	status,0,c
 22506  01BF5C  D00E               	goto	l8361
 22507  01BF5E                     u6230:
 22508                           
 22509                           ;stkvar	_a @ sp[(0)+-2]
 22510  01BF5E  0EFE               	movlw	-2
 22511  01BF60  006F FF8C  F001    	movff	plusw1,btemp
 22512  01BF66  1E01               	comf	btemp^0,f,c
 22513  01BF68  0EFF               	movlw	-1
 22514  01BF6A  006F FF8C  F002    	movff	plusw1,btemp+1
 22515  01BF70  1E02               	comf	(btemp+1)^0,f,c
 22516  01BF72  2A01               	incf	btemp^0,f,c
 22517  01BF74  B4D8               	btfsc	status,2,c
 22518  01BF76  2A02               	incf	(btemp+1)^0,f,c
 22519  01BF78  D008               	goto	l3207
 22520  01BF7A                     l8361:
 22521                           
 22522                           ;stkvar	_a @ sp[(0)+-2]
 22523  01BF7A  0EFE               	movlw	-2
 22524  01BF7C  006F FF8C  F001    	movff	plusw1,btemp
 22525  01BF82  0EFF               	movlw	-1
 22526  01BF84  006F FF8C  F002    	movff	plusw1,btemp+1
 22527  01BF8A                     l3207:
 22528                           
 22529                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 22530  01BF8A  52E5               	movf	postdec1,f,c
 22531  01BF8C  52E5               	movf	postdec1,f,c
 22532  01BF8E  0012               	return		;funcret
 22533  01BF90                     __end_of_abs:
 22534                           	opt callstack 0
 22535                           
 22536 ;; *************** function ___aomod *****************
 22537 ;; Defined at:
 22538 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 22539 ;; Parameters:    Size  Location     Type
 22540 ;;  dividend        8  [STACK] long long 
 22541 ;;  divisor         8  [STACK] long long 
 22542 ;; Auto vars:     Size  Location     Type
 22543 ;;  sign            1  [STACK] unsigned char 
 22544 ;;  counter         1  [STACK] unsigned char 
 22545 ;; Return value:  Size  Location     Type
 22546 ;;                  8  [STACK] long long 
 22547 ;; Registers used:
 22548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 22549 ;; Tracked objects:
 22550 ;;		On entry : 0/2
 22551 ;;		On exit  : 0/0
 22552 ;;		Unchanged: 0/0
 22553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22558 ;;Total ram usage:        0 bytes
 22559 ;; Hardware stack levels used:    1
 22560 ;; Hardware stack levels required when called:   15
 22561 ;; This function calls:
 22562 ;;		Nothing
 22563 ;; This function is called by:
 22564 ;;		_dtoa
 22565 ;; This function uses a reentrant model
 22566 ;;
 22567                           
 22568                           	psect	text78
 22569  0181EC                     __ptext78:
 22570                           	opt callstack 0
 22571  0181EC                     ___aomod:
 22572                           	opt callstack 0
 22573                           
 22574                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 22575  0181EC  52E6               	movf	postinc1,f,c
 22576  0181EE  52E6               	movf	postinc1,f,c
 22577                           
 22578                           ;stkvar	_sign @ sp[(-2)+0]
 22579                           
 22580                           ;incstack = 0
 22581 ;; hardware stack exceeded
 22582  0181F0  0EFE               	movlw	-2
 22583  0181F2  6AE3               	clrf	plusw1,c
 22584                           
 22585                           ;stkvar	_dividend @ sp[(-2)+-8]
 22586  0181F4  0EFD               	movlw	-3
 22587  0181F6  AEE3               	btfss	plusw1,7,c
 22588  0181F8  D028               	goto	l8519
 22589                           
 22590                           ;stkvar	_dividend @ sp[(-2)+-8]
 22591                           ;stkvar	_dividend @ sp[(-2)+-8]
 22592  0181FA  0EF6               	movlw	-10
 22593  0181FC  6CE3               	negf	plusw1,c
 22594  0181FE  0EF7               	movlw	-9
 22595  018200  1EE3               	comf	plusw1,f,c
 22596  018202  0EF8               	movlw	-8
 22597  018204  1EE3               	comf	plusw1,f,c
 22598  018206  0EF9               	movlw	-7
 22599  018208  1EE3               	comf	plusw1,f,c
 22600  01820A  0EFA               	movlw	-6
 22601  01820C  1EE3               	comf	plusw1,f,c
 22602  01820E  0EFB               	movlw	-5
 22603  018210  1EE3               	comf	plusw1,f,c
 22604  018212  0EFC               	movlw	-4
 22605  018214  1EE3               	comf	plusw1,f,c
 22606  018216  0EFD               	movlw	-3
 22607  018218  1EE3               	comf	plusw1,f,c
 22608  01821A  E314               	bnc	u6660
 22609  01821C  0EF7               	movlw	-9
 22610  01821E  2AE3               	incf	plusw1,f,c
 22611  018220  E311               	bnc	u6660
 22612  018222  0EF8               	movlw	-8
 22613  018224  2AE3               	incf	plusw1,f,c
 22614  018226  E30E               	bnc	u6660
 22615  018228  0EF9               	movlw	-7
 22616  01822A  2AE3               	incf	plusw1,f,c
 22617  01822C  E30B               	bnc	u6660
 22618  01822E  0EFA               	movlw	-6
 22619  018230  2AE3               	incf	plusw1,f,c
 22620  018232  E308               	bnc	u6660
 22621  018234  0EFB               	movlw	-5
 22622  018236  2AE3               	incf	plusw1,f,c
 22623  018238  E305               	bnc	u6660
 22624  01823A  0EFC               	movlw	-4
 22625  01823C  2AE3               	incf	plusw1,f,c
 22626  01823E  E302               	bnc	u6660
 22627  018240  0EFD               	movlw	-3
 22628  018242  2AE3               	incf	plusw1,f,c
 22629  018244                     u6660:
 22630                           
 22631                           ;stkvar	_sign @ sp[(-2)+0]
 22632  018244  0EFE               	movlw	-2
 22633  018246  6AE3               	clrf	plusw1,c
 22634  018248  2AE3               	incf	plusw1,f,c
 22635  01824A                     l8519:
 22636                           
 22637                           ;stkvar	_divisor @ sp[(-2)+-16]
 22638  01824A  0EF5               	movlw	-11
 22639  01824C  AEE3               	btfss	plusw1,7,c
 22640  01824E  D025               	goto	u6680
 22641                           
 22642                           ;stkvar	_divisor @ sp[(-2)+-16]
 22643                           ;stkvar	_divisor @ sp[(-2)+-16]
 22644  018250  0EEE               	movlw	-18
 22645  018252  6CE3               	negf	plusw1,c
 22646  018254  0EEF               	movlw	-17
 22647  018256  1EE3               	comf	plusw1,f,c
 22648  018258  0EF0               	movlw	-16
 22649  01825A  1EE3               	comf	plusw1,f,c
 22650  01825C  0EF1               	movlw	-15
 22651  01825E  1EE3               	comf	plusw1,f,c
 22652  018260  0EF2               	movlw	-14
 22653  018262  1EE3               	comf	plusw1,f,c
 22654  018264  0EF3               	movlw	-13
 22655  018266  1EE3               	comf	plusw1,f,c
 22656  018268  0EF4               	movlw	-12
 22657  01826A  1EE3               	comf	plusw1,f,c
 22658  01826C  0EF5               	movlw	-11
 22659  01826E  1EE3               	comf	plusw1,f,c
 22660  018270  E314               	bnc	u6680
 22661  018272  0EEF               	movlw	-17
 22662  018274  2AE3               	incf	plusw1,f,c
 22663  018276  E311               	bnc	u6680
 22664  018278  0EF0               	movlw	-16
 22665  01827A  2AE3               	incf	plusw1,f,c
 22666  01827C  E30E               	bnc	u6680
 22667  01827E  0EF1               	movlw	-15
 22668  018280  2AE3               	incf	plusw1,f,c
 22669  018282  E30B               	bnc	u6680
 22670  018284  0EF2               	movlw	-14
 22671  018286  2AE3               	incf	plusw1,f,c
 22672  018288  E308               	bnc	u6680
 22673  01828A  0EF3               	movlw	-13
 22674  01828C  2AE3               	incf	plusw1,f,c
 22675  01828E  E305               	bnc	u6680
 22676  018290  0EF4               	movlw	-12
 22677  018292  2AE3               	incf	plusw1,f,c
 22678  018294  E302               	bnc	u6680
 22679  018296  0EF5               	movlw	-11
 22680  018298  2AE3               	incf	plusw1,f,c
 22681  01829A                     u6680:
 22682                           
 22683                           ;stkvar	_divisor @ sp[(-2)+-16]
 22684  01829A  0EEE               	movlw	-18
 22685  01829C  50E3               	movf	plusw1,w,c
 22686  01829E  E116               	bnz	u6690
 22687  0182A0  0EEF               	movlw	-17
 22688  0182A2  50E3               	movf	plusw1,w,c
 22689  0182A4  E113               	bnz	u6690
 22690  0182A6  0EF0               	movlw	-16
 22691  0182A8  50E3               	movf	plusw1,w,c
 22692  0182AA  E110               	bnz	u6690
 22693  0182AC  0EF1               	movlw	-15
 22694  0182AE  50E3               	movf	plusw1,w,c
 22695  0182B0  E10D               	bnz	u6690
 22696  0182B2  0EF2               	movlw	-14
 22697  0182B4  50E3               	movf	plusw1,w,c
 22698  0182B6  E10A               	bnz	u6690
 22699  0182B8  0EF3               	movlw	-13
 22700  0182BA  50E3               	movf	plusw1,w,c
 22701  0182BC  E107               	bnz	u6690
 22702  0182BE  0EF4               	movlw	-12
 22703  0182C0  50E3               	movf	plusw1,w,c
 22704  0182C2  E104               	bnz	u6690
 22705  0182C4  0EF5               	movlw	-11
 22706  0182C6  50E3               	movf	plusw1,w,c
 22707  0182C8  B4D8               	btfsc	status,2,c
 22708  0182CA  D075               	goto	u6720
 22709  0182CC                     u6690:
 22710                           
 22711                           ;stkvar	_counter @ sp[(-2)+1]
 22712  0182CC  0EFF               	movlw	-1
 22713  0182CE  6AE3               	clrf	plusw1,c
 22714  0182D0  D012               	goto	L28
 22715  0182D2                     l8527:
 22716                           
 22717                           ;stkvar	_divisor @ sp[(-2)+-16]
 22718  0182D2  90D8               	bcf	status,0,c
 22719  0182D4  0EEE               	movlw	-18
 22720  0182D6  36E3               	rlcf	plusw1,f,c
 22721  0182D8  0EEF               	movlw	-17
 22722  0182DA  36E3               	rlcf	plusw1,f,c
 22723  0182DC  0EF0               	movlw	-16
 22724  0182DE  36E3               	rlcf	plusw1,f,c
 22725  0182E0  0EF1               	movlw	-15
 22726  0182E2  36E3               	rlcf	plusw1,f,c
 22727  0182E4  0EF2               	movlw	-14
 22728  0182E6  36E3               	rlcf	plusw1,f,c
 22729  0182E8  0EF3               	movlw	-13
 22730  0182EA  36E3               	rlcf	plusw1,f,c
 22731  0182EC  0EF4               	movlw	-12
 22732  0182EE  36E3               	rlcf	plusw1,f,c
 22733  0182F0  0EF5               	movlw	-11
 22734  0182F2  36E3               	rlcf	plusw1,f,c
 22735                           
 22736                           ;stkvar	_counter @ sp[(-2)+1]
 22737  0182F4  0EFF               	movlw	-1
 22738  0182F6                     L28:
 22739  0182F6  2AE3               	incf	plusw1,f,c
 22740                           
 22741                           ;stkvar	_divisor @ sp[(-2)+-16]
 22742  0182F8  0EF5               	movlw	-11
 22743  0182FA  AEE3               	btfss	plusw1,7,c
 22744  0182FC  D7EA               	goto	l8527
 22745  0182FE                     u6700:
 22746                           
 22747                           ;stkvar	_divisor @ sp[(-2)+-16]
 22748                           ;stkvar	_dividend @ sp[(-2)+-8]
 22749  0182FE  50E1               	movf	fsr1l,w,c
 22750  018300  0FF6               	addlw	-10
 22751  018302  6ED9               	movwf	fsr2l,c
 22752  018304  50E2               	movf	fsr1h,w,c
 22753  018306  6EDA               	movwf	fsr2h,c
 22754  018308  0EFF               	movlw	255
 22755  01830A  22DA               	addwfc	fsr2h,f,c
 22756  01830C  0EEE               	movlw	-18
 22757  01830E  50E3               	movf	plusw1,w,c
 22758  018310  5CDE               	subwf	postinc2,w,c
 22759  018312  0EEF               	movlw	-17
 22760  018314  50E3               	movf	plusw1,w,c
 22761  018316  58DE               	subwfb	postinc2,w,c
 22762  018318  0EF0               	movlw	-16
 22763  01831A  50E3               	movf	plusw1,w,c
 22764  01831C  58DE               	subwfb	postinc2,w,c
 22765  01831E  0EF1               	movlw	-15
 22766  018320  50E3               	movf	plusw1,w,c
 22767  018322  58DE               	subwfb	postinc2,w,c
 22768  018324  0EF2               	movlw	-14
 22769  018326  50E3               	movf	plusw1,w,c
 22770  018328  58DE               	subwfb	postinc2,w,c
 22771  01832A  0EF3               	movlw	-13
 22772  01832C  50E3               	movf	plusw1,w,c
 22773  01832E  58DE               	subwfb	postinc2,w,c
 22774  018330  0EF4               	movlw	-12
 22775  018332  50E3               	movf	plusw1,w,c
 22776  018334  58DE               	subwfb	postinc2,w,c
 22777  018336  0EF5               	movlw	-11
 22778  018338  50E3               	movf	plusw1,w,c
 22779  01833A  58DE               	subwfb	postinc2,w,c
 22780  01833C  A0D8               	btfss	status,0,c
 22781  01833E  D01F               	goto	l8535
 22782                           
 22783                           ;stkvar	_divisor @ sp[(-2)+-16]
 22784                           ;stkvar	_dividend @ sp[(-2)+-8]
 22785  018340  50E1               	movf	fsr1l,w,c
 22786  018342  0FF6               	addlw	-10
 22787  018344  6ED9               	movwf	fsr2l,c
 22788  018346  50E2               	movf	fsr1h,w,c
 22789  018348  6EDA               	movwf	fsr2h,c
 22790  01834A  0EFF               	movlw	255
 22791  01834C  22DA               	addwfc	fsr2h,f,c
 22792  01834E  0EEE               	movlw	-18
 22793  018350  50E3               	movf	plusw1,w,c
 22794  018352  5EDE               	subwf	postinc2,f,c
 22795  018354  0EEF               	movlw	-17
 22796  018356  50E3               	movf	plusw1,w,c
 22797  018358  5ADE               	subwfb	postinc2,f,c
 22798  01835A  0EF0               	movlw	-16
 22799  01835C  50E3               	movf	plusw1,w,c
 22800  01835E  5ADE               	subwfb	postinc2,f,c
 22801  018360  0EF1               	movlw	-15
 22802  018362  50E3               	movf	plusw1,w,c
 22803  018364  5ADE               	subwfb	postinc2,f,c
 22804  018366  0EF2               	movlw	-14
 22805  018368  50E3               	movf	plusw1,w,c
 22806  01836A  5ADE               	subwfb	postinc2,f,c
 22807  01836C  0EF3               	movlw	-13
 22808  01836E  50E3               	movf	plusw1,w,c
 22809  018370  5ADE               	subwfb	postinc2,f,c
 22810  018372  0EF4               	movlw	-12
 22811  018374  50E3               	movf	plusw1,w,c
 22812  018376  5ADE               	subwfb	postinc2,f,c
 22813  018378  0EF5               	movlw	-11
 22814  01837A  50E3               	movf	plusw1,w,c
 22815  01837C  5ADE               	subwfb	postinc2,f,c
 22816  01837E                     l8535:
 22817                           
 22818                           ;stkvar	_divisor @ sp[(-2)+-16]
 22819  01837E  90D8               	bcf	status,0,c
 22820  018380  0EF5               	movlw	-11
 22821  018382  32E3               	rrcf	plusw1,f,c
 22822  018384  0EF4               	movlw	-12
 22823  018386  32E3               	rrcf	plusw1,f,c
 22824  018388  0EF3               	movlw	-13
 22825  01838A  32E3               	rrcf	plusw1,f,c
 22826  01838C  0EF2               	movlw	-14
 22827  01838E  32E3               	rrcf	plusw1,f,c
 22828  018390  0EF1               	movlw	-15
 22829  018392  32E3               	rrcf	plusw1,f,c
 22830  018394  0EF0               	movlw	-16
 22831  018396  32E3               	rrcf	plusw1,f,c
 22832  018398  0EEF               	movlw	-17
 22833  01839A  32E3               	rrcf	plusw1,f,c
 22834  01839C  0EEE               	movlw	-18
 22835  01839E  32E3               	rrcf	plusw1,f,c
 22836                           
 22837                           ;stkvar	_counter @ sp[(-2)+1]
 22838  0183A0  0EFF               	movlw	-1
 22839  0183A2  50E3               	movf	plusw1,w,c
 22840  0183A4  6E01               	movwf	btemp^0,c
 22841  0183A6  0E01               	movlw	1
 22842  0183A8  5E01               	subwf	btemp^0,f,c
 22843  0183AA  0EFF               	movlw	-1
 22844  0183AC  0060  F007  FFE3   	movff	btemp,plusw1
 22845  0183B2  A4D8               	btfss	status,2,c
 22846  0183B4  D7A4               	goto	u6700
 22847  0183B6                     u6720:
 22848                           
 22849                           ;stkvar	_sign @ sp[(-2)+0]
 22850  0183B6  0EFE               	movlw	-2
 22851  0183B8  50E3               	movf	plusw1,w,c
 22852  0183BA  B4D8               	btfsc	status,2,c
 22853  0183BC  D025               	goto	u6740
 22854                           
 22855                           ;stkvar	_dividend @ sp[(-2)+-8]
 22856                           ;stkvar	_dividend @ sp[(-2)+-8]
 22857  0183BE  0EF6               	movlw	-10
 22858  0183C0  6CE3               	negf	plusw1,c
 22859  0183C2  0EF7               	movlw	-9
 22860  0183C4  1EE3               	comf	plusw1,f,c
 22861  0183C6  0EF8               	movlw	-8
 22862  0183C8  1EE3               	comf	plusw1,f,c
 22863  0183CA  0EF9               	movlw	-7
 22864  0183CC  1EE3               	comf	plusw1,f,c
 22865  0183CE  0EFA               	movlw	-6
 22866  0183D0  1EE3               	comf	plusw1,f,c
 22867  0183D2  0EFB               	movlw	-5
 22868  0183D4  1EE3               	comf	plusw1,f,c
 22869  0183D6  0EFC               	movlw	-4
 22870  0183D8  1EE3               	comf	plusw1,f,c
 22871  0183DA  0EFD               	movlw	-3
 22872  0183DC  1EE3               	comf	plusw1,f,c
 22873  0183DE  E314               	bnc	u6740
 22874  0183E0  0EF7               	movlw	-9
 22875  0183E2  2AE3               	incf	plusw1,f,c
 22876  0183E4  E311               	bnc	u6740
 22877  0183E6  0EF8               	movlw	-8
 22878  0183E8  2AE3               	incf	plusw1,f,c
 22879  0183EA  E30E               	bnc	u6740
 22880  0183EC  0EF9               	movlw	-7
 22881  0183EE  2AE3               	incf	plusw1,f,c
 22882  0183F0  E30B               	bnc	u6740
 22883  0183F2  0EFA               	movlw	-6
 22884  0183F4  2AE3               	incf	plusw1,f,c
 22885  0183F6  E308               	bnc	u6740
 22886  0183F8  0EFB               	movlw	-5
 22887  0183FA  2AE3               	incf	plusw1,f,c
 22888  0183FC  E305               	bnc	u6740
 22889  0183FE  0EFC               	movlw	-4
 22890  018400  2AE3               	incf	plusw1,f,c
 22891  018402  E302               	bnc	u6740
 22892  018404  0EFD               	movlw	-3
 22893  018406  2AE3               	incf	plusw1,f,c
 22894  018408                     u6740:
 22895                           
 22896                           ;stkvar	_dividend @ sp[(-2)+-8]
 22897  018408  0EF6               	movlw	246
 22898  01840A  24E1               	addwf	fsr1l,w,c
 22899  01840C  6ED9               	movwf	fsr2l,c
 22900  01840E  0EFF               	movlw	255
 22901  018410  20E2               	addwfc	fsr1h,w,c
 22902  018412  6EDA               	movwf	fsr2h,c
 22903                           
 22904                           ;stkvar	?___aomod @ sp[(-2)+-8]
 22905  018414  0E08               	movlw	8
 22906  018416  6E01               	movwf	btemp^0,c
 22907  018418  0EF6               	movlw	-10
 22908  01841A                     us675999:
 22909  01841A  006F FF7B FFE3     	movff	postinc2,plusw1
 22910  018420  28E8               	incf	wreg,w,c
 22911  018422  2E01               	decfsz	btemp^0,f,c
 22912  018424  D7FA               	bra	us675999
 22913                           
 22914                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 22915  018426  52E5               	movf	postdec1,f,c
 22916  018428  52E5               	movf	postdec1,f,c
 22917  01842A  0012               	return		;funcret
 22918  01842C                     __end_of___aomod:
 22919                           	opt callstack 0
 22920                           
 22921 ;; *************** function ___aodiv *****************
 22922 ;; Defined at:
 22923 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 22924 ;; Parameters:    Size  Location     Type
 22925 ;;  dividend        8  [STACK] long long 
 22926 ;;  divisor         8  [STACK] long long 
 22927 ;; Auto vars:     Size  Location     Type
 22928 ;;  quotient        8  [STACK] long long 
 22929 ;;  sign            1  [STACK] unsigned char 
 22930 ;;  counter         1  [STACK] unsigned char 
 22931 ;; Return value:  Size  Location     Type
 22932 ;;                  8  [STACK] long long 
 22933 ;; Registers used:
 22934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 22935 ;; Tracked objects:
 22936 ;;		On entry : 0/2
 22937 ;;		On exit  : 0/0
 22938 ;;		Unchanged: 0/0
 22939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22944 ;;Total ram usage:        0 bytes
 22945 ;; Hardware stack levels used:    1
 22946 ;; Hardware stack levels required when called:   15
 22947 ;; This function calls:
 22948 ;;		Nothing
 22949 ;; This function is called by:
 22950 ;;		_dtoa
 22951 ;; This function uses a reentrant model
 22952 ;;
 22953                           
 22954                           	psect	text79
 22955  017AB2                     __ptext79:
 22956                           	opt callstack 0
 22957  017AB2                     ___aodiv:
 22958                           	opt callstack 0
 22959                           
 22960                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 22961  017AB2  0E0A               	movlw	10
 22962  017AB4  26E1               	addwf	fsr1l,f,c
 22963  017AB6  0E00               	movlw	0
 22964  017AB8  22E2               	addwfc	fsr1h,f,c
 22965                           
 22966                           ;stkvar	_sign @ sp[(-10)+8]
 22967                           
 22968                           ;incstack = 0
 22969 ;; hardware stack exceeded
 22970  017ABA  0EFE               	movlw	-2
 22971  017ABC  6AE3               	clrf	plusw1,c
 22972                           
 22973                           ;stkvar	_divisor @ sp[(-10)+-16]
 22974  017ABE  0EED               	movlw	-19
 22975  017AC0  AEE3               	btfss	plusw1,7,c
 22976  017AC2  D028               	goto	l8475
 22977                           
 22978                           ;stkvar	_divisor @ sp[(-10)+-16]
 22979                           ;stkvar	_divisor @ sp[(-10)+-16]
 22980  017AC4  0EE6               	movlw	-26
 22981  017AC6  6CE3               	negf	plusw1,c
 22982  017AC8  0EE7               	movlw	-25
 22983  017ACA  1EE3               	comf	plusw1,f,c
 22984  017ACC  0EE8               	movlw	-24
 22985  017ACE  1EE3               	comf	plusw1,f,c
 22986  017AD0  0EE9               	movlw	-23
 22987  017AD2  1EE3               	comf	plusw1,f,c
 22988  017AD4  0EEA               	movlw	-22
 22989  017AD6  1EE3               	comf	plusw1,f,c
 22990  017AD8  0EEB               	movlw	-21
 22991  017ADA  1EE3               	comf	plusw1,f,c
 22992  017ADC  0EEC               	movlw	-20
 22993  017ADE  1EE3               	comf	plusw1,f,c
 22994  017AE0  0EED               	movlw	-19
 22995  017AE2  1EE3               	comf	plusw1,f,c
 22996  017AE4  E314               	bnc	u6540
 22997  017AE6  0EE7               	movlw	-25
 22998  017AE8  2AE3               	incf	plusw1,f,c
 22999  017AEA  E311               	bnc	u6540
 23000  017AEC  0EE8               	movlw	-24
 23001  017AEE  2AE3               	incf	plusw1,f,c
 23002  017AF0  E30E               	bnc	u6540
 23003  017AF2  0EE9               	movlw	-23
 23004  017AF4  2AE3               	incf	plusw1,f,c
 23005  017AF6  E30B               	bnc	u6540
 23006  017AF8  0EEA               	movlw	-22
 23007  017AFA  2AE3               	incf	plusw1,f,c
 23008  017AFC  E308               	bnc	u6540
 23009  017AFE  0EEB               	movlw	-21
 23010  017B00  2AE3               	incf	plusw1,f,c
 23011  017B02  E305               	bnc	u6540
 23012  017B04  0EEC               	movlw	-20
 23013  017B06  2AE3               	incf	plusw1,f,c
 23014  017B08  E302               	bnc	u6540
 23015  017B0A  0EED               	movlw	-19
 23016  017B0C  2AE3               	incf	plusw1,f,c
 23017  017B0E                     u6540:
 23018                           
 23019                           ;stkvar	_sign @ sp[(-10)+8]
 23020  017B0E  0EFE               	movlw	-2
 23021  017B10  6AE3               	clrf	plusw1,c
 23022  017B12  2AE3               	incf	plusw1,f,c
 23023  017B14                     l8475:
 23024                           
 23025                           ;stkvar	_dividend @ sp[(-10)+-8]
 23026  017B14  0EF5               	movlw	-11
 23027  017B16  AEE3               	btfss	plusw1,7,c
 23028  017B18  D027               	goto	l8481
 23029                           
 23030                           ;stkvar	_dividend @ sp[(-10)+-8]
 23031                           ;stkvar	_dividend @ sp[(-10)+-8]
 23032  017B1A  0EEE               	movlw	-18
 23033  017B1C  6CE3               	negf	plusw1,c
 23034  017B1E  0EEF               	movlw	-17
 23035  017B20  1EE3               	comf	plusw1,f,c
 23036  017B22  0EF0               	movlw	-16
 23037  017B24  1EE3               	comf	plusw1,f,c
 23038  017B26  0EF1               	movlw	-15
 23039  017B28  1EE3               	comf	plusw1,f,c
 23040  017B2A  0EF2               	movlw	-14
 23041  017B2C  1EE3               	comf	plusw1,f,c
 23042  017B2E  0EF3               	movlw	-13
 23043  017B30  1EE3               	comf	plusw1,f,c
 23044  017B32  0EF4               	movlw	-12
 23045  017B34  1EE3               	comf	plusw1,f,c
 23046  017B36  0EF5               	movlw	-11
 23047  017B38  1EE3               	comf	plusw1,f,c
 23048  017B3A  E314               	bnc	u6560
 23049  017B3C  0EEF               	movlw	-17
 23050  017B3E  2AE3               	incf	plusw1,f,c
 23051  017B40  E311               	bnc	u6560
 23052  017B42  0EF0               	movlw	-16
 23053  017B44  2AE3               	incf	plusw1,f,c
 23054  017B46  E30E               	bnc	u6560
 23055  017B48  0EF1               	movlw	-15
 23056  017B4A  2AE3               	incf	plusw1,f,c
 23057  017B4C  E30B               	bnc	u6560
 23058  017B4E  0EF2               	movlw	-14
 23059  017B50  2AE3               	incf	plusw1,f,c
 23060  017B52  E308               	bnc	u6560
 23061  017B54  0EF3               	movlw	-13
 23062  017B56  2AE3               	incf	plusw1,f,c
 23063  017B58  E305               	bnc	u6560
 23064  017B5A  0EF4               	movlw	-12
 23065  017B5C  2AE3               	incf	plusw1,f,c
 23066  017B5E  E302               	bnc	u6560
 23067  017B60  0EF5               	movlw	-11
 23068  017B62  2AE3               	incf	plusw1,f,c
 23069  017B64                     u6560:
 23070                           
 23071                           ;stkvar	_sign @ sp[(-10)+8]
 23072  017B64  0EFE               	movlw	-2
 23073  017B66  70E3               	btg	plusw1,0,c
 23074  017B68                     l8481:
 23075                           
 23076                           ;stkvar	_quotient @ sp[(-10)+0]
 23077  017B68  0E07               	movlw	7
 23078  017B6A  6E01               	movwf	btemp^0,c
 23079  017B6C  0EF6               	movlw	-10
 23080  017B6E                     u6571:
 23081  017B6E  6AE3               	clrf	plusw1,c
 23082  017B70  2AE8               	incf	wreg,f,c
 23083  017B72  0601               	decf	btemp^0,f,c
 23084  017B74  E2FC               	bc	u6571
 23085                           
 23086                           ;stkvar	_divisor @ sp[(-10)+-16]
 23087  017B76  0EE6               	movlw	-26
 23088  017B78  50E3               	movf	plusw1,w,c
 23089  017B7A  E116               	bnz	u6580
 23090  017B7C  0EE7               	movlw	-25
 23091  017B7E  50E3               	movf	plusw1,w,c
 23092  017B80  E113               	bnz	u6580
 23093  017B82  0EE8               	movlw	-24
 23094  017B84  50E3               	movf	plusw1,w,c
 23095  017B86  E110               	bnz	u6580
 23096  017B88  0EE9               	movlw	-23
 23097  017B8A  50E3               	movf	plusw1,w,c
 23098  017B8C  E10D               	bnz	u6580
 23099  017B8E  0EEA               	movlw	-22
 23100  017B90  50E3               	movf	plusw1,w,c
 23101  017B92  E10A               	bnz	u6580
 23102  017B94  0EEB               	movlw	-21
 23103  017B96  50E3               	movf	plusw1,w,c
 23104  017B98  E107               	bnz	u6580
 23105  017B9A  0EEC               	movlw	-20
 23106  017B9C  50E3               	movf	plusw1,w,c
 23107  017B9E  E104               	bnz	u6580
 23108  017BA0  0EED               	movlw	-19
 23109  017BA2  50E3               	movf	plusw1,w,c
 23110  017BA4  B4D8               	btfsc	status,2,c
 23111  017BA6  D088               	goto	u6610
 23112  017BA8                     u6580:
 23113                           
 23114                           ;stkvar	_counter @ sp[(-10)+9]
 23115  017BA8  0EFF               	movlw	-1
 23116  017BAA  6AE3               	clrf	plusw1,c
 23117  017BAC  D012               	goto	L29
 23118  017BAE                     l8487:
 23119                           
 23120                           ;stkvar	_divisor @ sp[(-10)+-16]
 23121  017BAE  90D8               	bcf	status,0,c
 23122  017BB0  0EE6               	movlw	-26
 23123  017BB2  36E3               	rlcf	plusw1,f,c
 23124  017BB4  0EE7               	movlw	-25
 23125  017BB6  36E3               	rlcf	plusw1,f,c
 23126  017BB8  0EE8               	movlw	-24
 23127  017BBA  36E3               	rlcf	plusw1,f,c
 23128  017BBC  0EE9               	movlw	-23
 23129  017BBE  36E3               	rlcf	plusw1,f,c
 23130  017BC0  0EEA               	movlw	-22
 23131  017BC2  36E3               	rlcf	plusw1,f,c
 23132  017BC4  0EEB               	movlw	-21
 23133  017BC6  36E3               	rlcf	plusw1,f,c
 23134  017BC8  0EEC               	movlw	-20
 23135  017BCA  36E3               	rlcf	plusw1,f,c
 23136  017BCC  0EED               	movlw	-19
 23137  017BCE  36E3               	rlcf	plusw1,f,c
 23138                           
 23139                           ;stkvar	_counter @ sp[(-10)+9]
 23140  017BD0  0EFF               	movlw	-1
 23141  017BD2                     L29:
 23142  017BD2  2AE3               	incf	plusw1,f,c
 23143                           
 23144                           ;stkvar	_divisor @ sp[(-10)+-16]
 23145  017BD4  0EED               	movlw	-19
 23146  017BD6  AEE3               	btfss	plusw1,7,c
 23147  017BD8  D7EA               	goto	l8487
 23148  017BDA                     u6590:
 23149                           
 23150                           ;stkvar	_quotient @ sp[(-10)+0]
 23151  017BDA  90D8               	bcf	status,0,c
 23152  017BDC  0EF6               	movlw	-10
 23153  017BDE  36E3               	rlcf	plusw1,f,c
 23154  017BE0  0EF7               	movlw	-9
 23155  017BE2  36E3               	rlcf	plusw1,f,c
 23156  017BE4  0EF8               	movlw	-8
 23157  017BE6  36E3               	rlcf	plusw1,f,c
 23158  017BE8  0EF9               	movlw	-7
 23159  017BEA  36E3               	rlcf	plusw1,f,c
 23160  017BEC  0EFA               	movlw	-6
 23161  017BEE  36E3               	rlcf	plusw1,f,c
 23162  017BF0  0EFB               	movlw	-5
 23163  017BF2  36E3               	rlcf	plusw1,f,c
 23164  017BF4  0EFC               	movlw	-4
 23165  017BF6  36E3               	rlcf	plusw1,f,c
 23166  017BF8  0EFD               	movlw	-3
 23167  017BFA  36E3               	rlcf	plusw1,f,c
 23168                           
 23169                           ;stkvar	_divisor @ sp[(-10)+-16]
 23170                           ;stkvar	_dividend @ sp[(-10)+-8]
 23171  017BFC  50E1               	movf	fsr1l,w,c
 23172  017BFE  0FEE               	addlw	-18
 23173  017C00  6ED9               	movwf	fsr2l,c
 23174  017C02  50E2               	movf	fsr1h,w,c
 23175  017C04  6EDA               	movwf	fsr2h,c
 23176  017C06  0EFF               	movlw	255
 23177  017C08  22DA               	addwfc	fsr2h,f,c
 23178  017C0A  0EE6               	movlw	-26
 23179  017C0C  50E3               	movf	plusw1,w,c
 23180  017C0E  5CDE               	subwf	postinc2,w,c
 23181  017C10  0EE7               	movlw	-25
 23182  017C12  50E3               	movf	plusw1,w,c
 23183  017C14  58DE               	subwfb	postinc2,w,c
 23184  017C16  0EE8               	movlw	-24
 23185  017C18  50E3               	movf	plusw1,w,c
 23186  017C1A  58DE               	subwfb	postinc2,w,c
 23187  017C1C  0EE9               	movlw	-23
 23188  017C1E  50E3               	movf	plusw1,w,c
 23189  017C20  58DE               	subwfb	postinc2,w,c
 23190  017C22  0EEA               	movlw	-22
 23191  017C24  50E3               	movf	plusw1,w,c
 23192  017C26  58DE               	subwfb	postinc2,w,c
 23193  017C28  0EEB               	movlw	-21
 23194  017C2A  50E3               	movf	plusw1,w,c
 23195  017C2C  58DE               	subwfb	postinc2,w,c
 23196  017C2E  0EEC               	movlw	-20
 23197  017C30  50E3               	movf	plusw1,w,c
 23198  017C32  58DE               	subwfb	postinc2,w,c
 23199  017C34  0EED               	movlw	-19
 23200  017C36  50E3               	movf	plusw1,w,c
 23201  017C38  58DE               	subwfb	postinc2,w,c
 23202  017C3A  A0D8               	btfss	status,0,c
 23203  017C3C  D021               	goto	l8499
 23204                           
 23205                           ;stkvar	_divisor @ sp[(-10)+-16]
 23206                           ;stkvar	_dividend @ sp[(-10)+-8]
 23207  017C3E  50E1               	movf	fsr1l,w,c
 23208  017C40  0FEE               	addlw	-18
 23209  017C42  6ED9               	movwf	fsr2l,c
 23210  017C44  50E2               	movf	fsr1h,w,c
 23211  017C46  6EDA               	movwf	fsr2h,c
 23212  017C48  0EFF               	movlw	255
 23213  017C4A  22DA               	addwfc	fsr2h,f,c
 23214  017C4C  0EE6               	movlw	-26
 23215  017C4E  50E3               	movf	plusw1,w,c
 23216  017C50  5EDE               	subwf	postinc2,f,c
 23217  017C52  0EE7               	movlw	-25
 23218  017C54  50E3               	movf	plusw1,w,c
 23219  017C56  5ADE               	subwfb	postinc2,f,c
 23220  017C58  0EE8               	movlw	-24
 23221  017C5A  50E3               	movf	plusw1,w,c
 23222  017C5C  5ADE               	subwfb	postinc2,f,c
 23223  017C5E  0EE9               	movlw	-23
 23224  017C60  50E3               	movf	plusw1,w,c
 23225  017C62  5ADE               	subwfb	postinc2,f,c
 23226  017C64  0EEA               	movlw	-22
 23227  017C66  50E3               	movf	plusw1,w,c
 23228  017C68  5ADE               	subwfb	postinc2,f,c
 23229  017C6A  0EEB               	movlw	-21
 23230  017C6C  50E3               	movf	plusw1,w,c
 23231  017C6E  5ADE               	subwfb	postinc2,f,c
 23232  017C70  0EEC               	movlw	-20
 23233  017C72  50E3               	movf	plusw1,w,c
 23234  017C74  5ADE               	subwfb	postinc2,f,c
 23235  017C76  0EED               	movlw	-19
 23236  017C78  50E3               	movf	plusw1,w,c
 23237  017C7A  5ADE               	subwfb	postinc2,f,c
 23238                           
 23239                           ;stkvar	_quotient @ sp[(-10)+0]
 23240  017C7C  0EF6               	movlw	-10
 23241  017C7E  80E3               	bsf	plusw1,0,c
 23242  017C80                     l8499:
 23243                           
 23244                           ;stkvar	_divisor @ sp[(-10)+-16]
 23245  017C80  90D8               	bcf	status,0,c
 23246  017C82  0EED               	movlw	-19
 23247  017C84  32E3               	rrcf	plusw1,f,c
 23248  017C86  0EEC               	movlw	-20
 23249  017C88  32E3               	rrcf	plusw1,f,c
 23250  017C8A  0EEB               	movlw	-21
 23251  017C8C  32E3               	rrcf	plusw1,f,c
 23252  017C8E  0EEA               	movlw	-22
 23253  017C90  32E3               	rrcf	plusw1,f,c
 23254  017C92  0EE9               	movlw	-23
 23255  017C94  32E3               	rrcf	plusw1,f,c
 23256  017C96  0EE8               	movlw	-24
 23257  017C98  32E3               	rrcf	plusw1,f,c
 23258  017C9A  0EE7               	movlw	-25
 23259  017C9C  32E3               	rrcf	plusw1,f,c
 23260  017C9E  0EE6               	movlw	-26
 23261  017CA0  32E3               	rrcf	plusw1,f,c
 23262                           
 23263                           ;stkvar	_counter @ sp[(-10)+9]
 23264  017CA2  0EFF               	movlw	-1
 23265  017CA4  50E3               	movf	plusw1,w,c
 23266  017CA6  6E01               	movwf	btemp^0,c
 23267  017CA8  0E01               	movlw	1
 23268  017CAA  5E01               	subwf	btemp^0,f,c
 23269  017CAC  0EFF               	movlw	-1
 23270  017CAE  0060  F007  FFE3   	movff	btemp,plusw1
 23271  017CB4  A4D8               	btfss	status,2,c
 23272  017CB6  D791               	goto	u6590
 23273  017CB8                     u6610:
 23274                           
 23275                           ;stkvar	_sign @ sp[(-10)+8]
 23276  017CB8  0EFE               	movlw	-2
 23277  017CBA  50E3               	movf	plusw1,w,c
 23278  017CBC  B4D8               	btfsc	status,2,c
 23279  017CBE  D025               	goto	u6630
 23280                           
 23281                           ;stkvar	_quotient @ sp[(-10)+0]
 23282                           ;stkvar	_quotient @ sp[(-10)+0]
 23283  017CC0  0EF6               	movlw	-10
 23284  017CC2  6CE3               	negf	plusw1,c
 23285  017CC4  0EF7               	movlw	-9
 23286  017CC6  1EE3               	comf	plusw1,f,c
 23287  017CC8  0EF8               	movlw	-8
 23288  017CCA  1EE3               	comf	plusw1,f,c
 23289  017CCC  0EF9               	movlw	-7
 23290  017CCE  1EE3               	comf	plusw1,f,c
 23291  017CD0  0EFA               	movlw	-6
 23292  017CD2  1EE3               	comf	plusw1,f,c
 23293  017CD4  0EFB               	movlw	-5
 23294  017CD6  1EE3               	comf	plusw1,f,c
 23295  017CD8  0EFC               	movlw	-4
 23296  017CDA  1EE3               	comf	plusw1,f,c
 23297  017CDC  0EFD               	movlw	-3
 23298  017CDE  1EE3               	comf	plusw1,f,c
 23299  017CE0  E314               	bnc	u6630
 23300  017CE2  0EF7               	movlw	-9
 23301  017CE4  2AE3               	incf	plusw1,f,c
 23302  017CE6  E311               	bnc	u6630
 23303  017CE8  0EF8               	movlw	-8
 23304  017CEA  2AE3               	incf	plusw1,f,c
 23305  017CEC  E30E               	bnc	u6630
 23306  017CEE  0EF9               	movlw	-7
 23307  017CF0  2AE3               	incf	plusw1,f,c
 23308  017CF2  E30B               	bnc	u6630
 23309  017CF4  0EFA               	movlw	-6
 23310  017CF6  2AE3               	incf	plusw1,f,c
 23311  017CF8  E308               	bnc	u6630
 23312  017CFA  0EFB               	movlw	-5
 23313  017CFC  2AE3               	incf	plusw1,f,c
 23314  017CFE  E305               	bnc	u6630
 23315  017D00  0EFC               	movlw	-4
 23316  017D02  2AE3               	incf	plusw1,f,c
 23317  017D04  E302               	bnc	u6630
 23318  017D06  0EFD               	movlw	-3
 23319  017D08  2AE3               	incf	plusw1,f,c
 23320  017D0A                     u6630:
 23321                           
 23322                           ;stkvar	_quotient @ sp[(-10)+0]
 23323  017D0A  0EF6               	movlw	246
 23324  017D0C  24E1               	addwf	fsr1l,w,c
 23325  017D0E  6ED9               	movwf	fsr2l,c
 23326  017D10  0EFF               	movlw	255
 23327  017D12  20E2               	addwfc	fsr1h,w,c
 23328  017D14  6EDA               	movwf	fsr2h,c
 23329                           
 23330                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 23331  017D16  0E08               	movlw	8
 23332  017D18  6E01               	movwf	btemp^0,c
 23333  017D1A  0EEE               	movlw	-18
 23334  017D1C                     us664999:
 23335  017D1C  006F FF7B FFE3     	movff	postinc2,plusw1
 23336  017D22  28E8               	incf	wreg,w,c
 23337  017D24  2E01               	decfsz	btemp^0,f,c
 23338  017D26  D7FA               	bra	us664999
 23339                           
 23340                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 23341  017D28  0EF6               	movlw	246
 23342  017D2A  26E1               	addwf	fsr1l,f,c
 23343  017D2C  0EFF               	movlw	255
 23344  017D2E  22E2               	addwfc	fsr1h,f,c
 23345  017D30  0012               	return		;funcret
 23346  017D32                     __end_of___aodiv:
 23347                           	opt callstack 0
 23348                           
 23349 ;; *************** function _ctoa *****************
 23350 ;; Defined at:
 23351 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 23352 ;; Parameters:    Size  Location     Type
 23353 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23354 ;;		 -> f(6), NULL(0), 
 23355 ;;  c               1  [STACK] unsigned char 
 23356 ;; Auto vars:     Size  Location     Type
 23357 ;;  w               2  [STACK] int 
 23358 ;;  l               2    0        int 
 23359 ;; Return value:  Size  Location     Type
 23360 ;;                  2  [STACK] int 
 23361 ;; Registers used:
 23362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 23363 ;; Tracked objects:
 23364 ;;		On entry : 0/0
 23365 ;;		On exit  : 0/0
 23366 ;;		Unchanged: 0/0
 23367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23372 ;;Total ram usage:        0 bytes
 23373 ;; Hardware stack levels used:    1
 23374 ;; Hardware stack levels required when called:   20
 23375 ;; This function calls:
 23376 ;;		_pad
 23377 ;; This function is called by:
 23378 ;;		_vfpfcnvrt
 23379 ;; This function uses a reentrant model
 23380 ;;
 23381                           
 23382                           	psect	text80
 23383  01B410                     __ptext80:
 23384                           	opt callstack 0
 23385  01B410                     _ctoa:
 23386                           	opt callstack 0
 23387                           
 23388                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23389  01B410  52E6               	movf	postinc1,f,c
 23390  01B412  52E6               	movf	postinc1,f,c
 23391                           
 23392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 23393                           
 23394                           ;incstack = 0
 23395 ;; hardware stack exceeded
 23396  01B414  503A               	movf	_width^0,w,c
 23397  01B416  103B               	iorwf	(_width+1)^0,w,c
 23398  01B418  A4D8               	btfss	status,2,c
 23399  01B41A  D009               	goto	l12511
 23400                           
 23401                           ;stkvar	_w @ sp[(-2)+0]
 23402  01B41C  0EFE               	movlw	-2
 23403  01B41E  0060  F0EB  FFE3   	movff	_width,plusw1
 23404  01B424  0EFF               	movlw	-1
 23405  01B426  0060  F0EF  FFE3   	movff	_width+1,plusw1
 23406  01B42C  D016               	goto	l12513
 23407  01B42E                     l12511:
 23408  01B42E  0EFF               	movlw	255
 23409  01B430  6E0B               	movwf	(btemp+10)^0,c
 23410  01B432  0EFF               	movlw	255
 23411  01B434  6E0C               	movwf	(btemp+11)^0,c
 23412  01B436  0060  F0E8  F009   	movff	_width,btemp+8
 23413  01B43C  0060  F0EC  F00A   	movff	_width+1,btemp+9
 23414  01B442  500B               	movf	(btemp+10)^0,w,c
 23415  01B444  2609               	addwf	(btemp+8)^0,f,c
 23416  01B446  500C               	movf	(btemp+11)^0,w,c
 23417  01B448  220A               	addwfc	(btemp+9)^0,f,c
 23418                           
 23419                           ;stkvar	_w @ sp[(-2)+0]
 23420  01B44A  0EFE               	movlw	-2
 23421  01B44C  0060  F027  FFE3   	movff	btemp+8,plusw1
 23422  01B452  0EFF               	movlw	-1
 23423  01B454  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23424  01B45A                     l12513:
 23425                           
 23426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 23427                           ;stkvar	_c @ sp[(-2)+-3]
 23428  01B45A  0EFB               	movlw	-5
 23429  01B45C  006F FF8C  F297    	movff	plusw1,_dbuf
 23430                           
 23431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 23432  01B462  0102               	movlb	2	; () banked
 23433  01B464  6B98               	clrf	(_dbuf+1)& (0+255),b
 23434                           
 23435                           ; BSR set to: 2
 23436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 23437                           ;stkvar	_w @ sp[(-2)+0]
 23438  01B466  0EFE               	movlw	-2
 23439  01B468  006F FF8F FFE6     	movff	plusw1,postinc1
 23440  01B46E  006F FF8F FFE6     	movff	plusw1,postinc1
 23441  01B474  0E97               	movlw	low _dbuf
 23442  01B476  6EE6               	movwf	postinc1,c
 23443  01B478  0E02               	movlw	high _dbuf
 23444  01B47A  6EE6               	movwf	postinc1,c
 23445                           
 23446                           ;stkvar	_fp @ sp[(-6)+-2]
 23447  01B47C  0EF8               	movlw	-8
 23448  01B47E  006F FF8F FFE6     	movff	plusw1,postinc1
 23449  01B484  006F FF8F FFE6     	movff	plusw1,postinc1
 23450  01B48A  EC1C  F0D1         	call	_pad	;wreg free
 23451                           
 23452                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 23453  01B48E  0EFB               	movlw	251
 23454  01B490  26E1               	addwf	fsr1l,f,c
 23455  01B492  0EFF               	movlw	255
 23456  01B494  22E2               	addwfc	fsr1h,f,c
 23457  01B496  0012               	return		;funcret
 23458  01B498                     __end_of_ctoa:
 23459                           	opt callstack 0
 23460                           
 23461 ;; *************** function _pad *****************
 23462 ;; Defined at:
 23463 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 23464 ;; Parameters:    Size  Location     Type
 23465 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23466 ;;		 -> f(6), NULL(0), 
 23467 ;;  buf             2  [STACK] PTR unsigned char 
 23468 ;;		 -> dbuf(80), 
 23469 ;;  p               2  [STACK] int 
 23470 ;; Auto vars:     Size  Location     Type
 23471 ;;  w               2  [STACK] int 
 23472 ;;  i               2  [STACK] int 
 23473 ;; Return value:  Size  Location     Type
 23474 ;;                  2  [STACK] int 
 23475 ;; Registers used:
 23476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 23477 ;; Tracked objects:
 23478 ;;		On entry : 0/2
 23479 ;;		On exit  : 0/0
 23480 ;;		Unchanged: 0/0
 23481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23486 ;;Total ram usage:        0 bytes
 23487 ;; Hardware stack levels used:    1
 23488 ;; Hardware stack levels required when called:   19
 23489 ;; This function calls:
 23490 ;;		_fputc
 23491 ;;		_fputs
 23492 ;;		_strlen
 23493 ;; This function is called by:
 23494 ;;		_ctoa
 23495 ;;		_dtoa
 23496 ;;		_efgtoa
 23497 ;;		_utoa
 23498 ;;		_xtoa
 23499 ;; This function uses a reentrant model
 23500 ;;
 23501                           
 23502                           	psect	text81
 23503  01A238                     __ptext81:
 23504                           	opt callstack 0
 23505  01A238                     _pad:
 23506                           	opt callstack 0
 23507                           
 23508                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23509  01A238  52E6               	movf	postinc1,f,c
 23510  01A23A  52E6               	movf	postinc1,f,c
 23511  01A23C  52E6               	movf	postinc1,f,c
 23512  01A23E  52E6               	movf	postinc1,f,c
 23513                           
 23514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 23515                           
 23516                           ;incstack = 0
 23517 ;; hardware stack exceeded
 23518  01A240  A03E               	btfss	_flags^0,0,c
 23519  01A242  D010               	goto	l12473
 23520                           
 23521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 23522                           ;stkvar	_fp @ sp[(-4)+-2]
 23523  01A244  0EFA               	movlw	-6
 23524  01A246  006F FF8F FFE6     	movff	plusw1,postinc1
 23525  01A24C  006F FF8F FFE6     	movff	plusw1,postinc1
 23526                           
 23527                           ;stkvar	_buf @ sp[(-6)+-4]
 23528  01A252  0EF6               	movlw	-10
 23529  01A254  006F FF8F FFE6     	movff	plusw1,postinc1
 23530  01A25A  006F FF8F FFE6     	movff	plusw1,postinc1
 23531  01A260  EC2A  F0D9         	call	_fputs	;wreg free
 23532  01A264                     l12473:
 23533                           
 23534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 23535                           ;stkvar	_p @ sp[(-4)+-6]
 23536  01A264  0EF7               	movlw	-9
 23537  01A266  BEE3               	btfsc	plusw1,7,c
 23538  01A268  D011               	goto	l12477
 23539                           
 23540                           ;stkvar	_p @ sp[(-4)+-6]
 23541                           ;stkvar	_w @ sp[(-4)+0]
 23542  01A26A  0EF6               	movlw	-10
 23543  01A26C  006F FF8C  F001    	movff	plusw1,btemp
 23544  01A272  0EFC               	movlw	-4
 23545  01A274  0060  F007  FFE3   	movff	btemp,plusw1
 23546  01A27A  0EF7               	movlw	-9
 23547  01A27C  006F FF8C  F001    	movff	plusw1,btemp
 23548  01A282  0EFD               	movlw	-3
 23549  01A284  0060  F007  FFE3   	movff	btemp,plusw1
 23550  01A28A  D004               	goto	l2261
 23551  01A28C                     l12477:
 23552                           
 23553                           ;stkvar	_w @ sp[(-4)+0]
 23554  01A28C  0EFC               	movlw	-4
 23555  01A28E  6AE3               	clrf	plusw1,c
 23556  01A290  0EFD               	movlw	-3
 23557  01A292  6AE3               	clrf	plusw1,c
 23558  01A294                     l2261:
 23559                           
 23560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 23561                           ;stkvar	_i @ sp[(-4)+2]
 23562  01A294  0EFE               	movlw	-2
 23563  01A296  6AE3               	clrf	plusw1,c
 23564  01A298  0EFF               	movlw	-1
 23565  01A29A  6AE3               	clrf	plusw1,c
 23566                           
 23567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 23568  01A29C  D01E               	goto	l12483
 23569  01A29E                     l12479:
 23570                           
 23571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 23572                           ;stkvar	_fp @ sp[(-4)+-2]
 23573  01A29E  0EFA               	movlw	-6
 23574  01A2A0  006F FF8F FFE6     	movff	plusw1,postinc1
 23575  01A2A6  006F FF8F FFE6     	movff	plusw1,postinc1
 23576  01A2AC  0E20               	movlw	32
 23577  01A2AE  6EE6               	movwf	postinc1,c
 23578  01A2B0  0E00               	movlw	0
 23579  01A2B2  6EE6               	movwf	postinc1,c
 23580  01A2B4  EC72  F0CF         	call	_fputc	;wreg free
 23581                           
 23582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 23583                           ;stkvar	_i @ sp[(-4)+2]
 23584  01A2B8  0EFE               	movlw	-2
 23585  01A2BA  50E3               	movf	plusw1,w,c
 23586  01A2BC  0F01               	addlw	1
 23587  01A2BE  6E01               	movwf	btemp^0,c
 23588  01A2C0  0EFE               	movlw	-2
 23589  01A2C2  0060  F007  FFE3   	movff	btemp,plusw1
 23590  01A2C8  6A01               	clrf	btemp^0,c
 23591  01A2CA  0EFF               	movlw	-1
 23592  01A2CC  50E3               	movf	plusw1,w,c
 23593  01A2CE  2001               	addwfc	btemp^0,w,c
 23594  01A2D0  6E01               	movwf	btemp^0,c
 23595  01A2D2  0EFF               	movlw	-1
 23596  01A2D4  0060  F007  FFE3   	movff	btemp,plusw1
 23597  01A2DA                     l12483:
 23598                           
 23599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 23600                           ;stkvar	_w @ sp[(-4)+0]
 23601                           ;stkvar	_i @ sp[(-4)+2]
 23602  01A2DA  50E1               	movf	fsr1l,w,c
 23603  01A2DC  0FFE               	addlw	-2
 23604  01A2DE  6ED9               	movwf	fsr2l,c
 23605  01A2E0  50E2               	movf	fsr1h,w,c
 23606  01A2E2  6EDA               	movwf	fsr2h,c
 23607  01A2E4  0EFF               	movlw	255
 23608  01A2E6  22DA               	addwfc	fsr2h,f,c
 23609  01A2E8  0EFC               	movlw	-4
 23610  01A2EA  50E3               	movf	plusw1,w,c
 23611  01A2EC  5CDE               	subwf	postinc2,w,c
 23612  01A2EE  50DE               	movf	postinc2,w,c
 23613  01A2F0  0A80               	xorlw	128
 23614  01A2F2  6E01               	movwf	btemp^0,c
 23615  01A2F4  0EFD               	movlw	-3
 23616  01A2F6  50E3               	movf	plusw1,w,c
 23617  01A2F8  0A80               	xorlw	128
 23618  01A2FA  5801               	subwfb	btemp^0,w,c
 23619  01A2FC  A0D8               	btfss	status,0,c
 23620  01A2FE  D7CF               	goto	l12479
 23621                           
 23622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 23623  01A300  B03E               	btfsc	_flags^0,0,c
 23624  01A302  D010               	goto	l12487
 23625                           
 23626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 23627                           ;stkvar	_fp @ sp[(-4)+-2]
 23628  01A304  0EFA               	movlw	-6
 23629  01A306  006F FF8F FFE6     	movff	plusw1,postinc1
 23630  01A30C  006F FF8F FFE6     	movff	plusw1,postinc1
 23631                           
 23632                           ;stkvar	_buf @ sp[(-6)+-4]
 23633  01A312  0EF6               	movlw	-10
 23634  01A314  006F FF8F FFE6     	movff	plusw1,postinc1
 23635  01A31A  006F FF8F FFE6     	movff	plusw1,postinc1
 23636  01A320  EC2A  F0D9         	call	_fputs	;wreg free
 23637  01A324                     l12487:
 23638                           
 23639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 23640                           ;stkvar	_w @ sp[(-4)+0]
 23641                           ;stkvar	_buf @ sp[(-4)+-4]
 23642  01A324  0EF8               	movlw	-8
 23643  01A326  006F FF8F FFE6     	movff	plusw1,postinc1
 23644  01A32C  006F FF8F FFE6     	movff	plusw1,postinc1
 23645  01A332  ECD9  F0D8         	call	_strlen	;wreg free
 23646  01A336  0EFC               	movlw	-4
 23647  01A338  50E3               	movf	plusw1,w,c
 23648  01A33A  2601               	addwf	btemp^0,f,c
 23649  01A33C  0EFD               	movlw	-3
 23650  01A33E  50E3               	movf	plusw1,w,c
 23651  01A340  2202               	addwfc	(btemp+1)^0,f,c
 23652                           
 23653                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 23654  01A342  0EF6               	movlw	246
 23655  01A344  26E1               	addwf	fsr1l,f,c
 23656  01A346  0EFF               	movlw	255
 23657  01A348  22E2               	addwfc	fsr1h,f,c
 23658  01A34A  0012               	return		;funcret
 23659  01A34C                     __end_of_pad:
 23660                           	opt callstack 0
 23661                           
 23662 ;; *************** function _strlen *****************
 23663 ;; Defined at:
 23664 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 23665 ;; Parameters:    Size  Location     Type
 23666 ;;  s               2  [STACK] PTR const unsigned char 
 23667 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 23668 ;;		 -> spin(120), STR_60(9), STR_59(12), D.lcd(480), 
 23669 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 23670 ;;		 -> V(192), 
 23671 ;; Auto vars:     Size  Location     Type
 23672 ;;  a               2  [STACK] PTR const unsigned char 
 23673 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 23674 ;;		 -> spin(120), STR_60(9), STR_59(12), D.lcd(480), 
 23675 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 23676 ;;		 -> V(192), 
 23677 ;; Return value:  Size  Location     Type
 23678 ;;                  2  [STACK] unsigned int 
 23679 ;; Registers used:
 23680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 23681 ;; Tracked objects:
 23682 ;;		On entry : 0/0
 23683 ;;		On exit  : 0/0
 23684 ;;		Unchanged: 0/0
 23685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23690 ;;Total ram usage:        0 bytes
 23691 ;; Hardware stack levels used:    1
 23692 ;; Hardware stack levels required when called:   15
 23693 ;; This function calls:
 23694 ;;		Nothing
 23695 ;; This function is called by:
 23696 ;;		_eaDogM_WriteString
 23697 ;;		_spinners
 23698 ;;		_calc_bsoc
 23699 ;;		_pad
 23700 ;;		_stoa
 23701 ;; This function uses a reentrant model
 23702 ;;
 23703                           
 23704                           	psect	text82
 23705  01B1B2                     __ptext82:
 23706                           	opt callstack 0
 23707  01B1B2                     _strlen:
 23708                           	opt callstack 0
 23709                           
 23710                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23711  01B1B2  52E6               	movf	postinc1,f,c
 23712  01B1B4  52E6               	movf	postinc1,f,c
 23713                           
 23714                           ;stkvar	_s @ sp[(-2)+-2]
 23715                           
 23716                           ;incstack = 0
 23717 ;; hardware stack exceeded
 23718  01B1B6  0EFC               	movlw	-4
 23719  01B1B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 23720  01B1BE  0EFD               	movlw	-3
 23721  01B1C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 23722                           
 23723                           ;stkvar	_a @ sp[(-2)+0]
 23724  01B1C6  0EFF               	movlw	-1
 23725  01B1C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 23726  01B1CE  0EFE               	movlw	-2
 23727  01B1D0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23728  01B1D6  D011               	goto	l8051
 23729  01B1D8                     l8049:
 23730                           
 23731                           ;stkvar	_s @ sp[(-2)+-2]
 23732  01B1D8  0EFC               	movlw	-4
 23733  01B1DA  50E3               	movf	plusw1,w,c
 23734  01B1DC  0F01               	addlw	1
 23735  01B1DE  6E01               	movwf	btemp^0,c
 23736  01B1E0  0EFC               	movlw	-4
 23737  01B1E2  0060  F007  FFE3   	movff	btemp,plusw1
 23738  01B1E8  6A01               	clrf	btemp^0,c
 23739  01B1EA  0EFD               	movlw	-3
 23740  01B1EC  50E3               	movf	plusw1,w,c
 23741  01B1EE  2001               	addwfc	btemp^0,w,c
 23742  01B1F0  6E01               	movwf	btemp^0,c
 23743  01B1F2  0EFD               	movlw	-3
 23744  01B1F4  0060  F007  FFE3   	movff	btemp,plusw1
 23745  01B1FA                     l8051:
 23746                           
 23747                           ;stkvar	_s @ sp[(-2)+-2]
 23748  01B1FA  0EFC               	movlw	-4
 23749  01B1FC  006F FF8F FFF6     	movff	plusw1,tblptrl
 23750  01B202  0EFD               	movlw	-3
 23751  01B204  006F FF8F FFF7     	movff	plusw1,tblptrh
 23752  01B20A  0E00               	movlw	low (__mediumconst shr (0+16))
 23753  01B20C  6EF8               	movwf	tblptru,c
 23754  01B20E  0E1F               	movlw	(high __ramtop+-1)
 23755  01B210  64F7               	cpfsgt	tblptrh,c
 23756  01B212  D003               	bra	u5657
 23757  01B214  0008               	tblrd		*
 23758  01B216  50F5               	movf	tablat,w,c
 23759  01B218  D007               	bra	u5650
 23760  01B21A                     u5657:
 23761  01B21A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 23762  01B220  006F FFDF FFEA     	movff	tblptrh,fsr0h
 23763  01B226  50EF               	movf	indf0,w,c
 23764  01B228                     u5650:
 23765  01B228  0900               	iorlw	0
 23766  01B22A  A4D8               	btfss	status,2,c
 23767  01B22C  D7D5               	goto	l8049
 23768                           
 23769                           ;stkvar	_a @ sp[(-2)+0]
 23770                           ;stkvar	_s @ sp[(-2)+-2]
 23771  01B22E  0EFC               	movlw	-4
 23772  01B230  006F FF8C  F001    	movff	plusw1,btemp
 23773  01B236  0EFD               	movlw	-3
 23774  01B238  006F FF8C  F002    	movff	plusw1,btemp+1
 23775  01B23E  0EFE               	movlw	-2
 23776  01B240  50E3               	movf	plusw1,w,c
 23777  01B242  5E01               	subwf	btemp^0,f,c
 23778  01B244  0EFF               	movlw	-1
 23779  01B246  50E3               	movf	plusw1,w,c
 23780  01B248  5A02               	subwfb	(btemp+1)^0,f,c
 23781                           
 23782                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 23783  01B24A  52E5               	movf	postdec1,f,c
 23784  01B24C  52E5               	movf	postdec1,f,c
 23785  01B24E  52E5               	movf	postdec1,f,c
 23786  01B250  52E5               	movf	postdec1,f,c
 23787  01B252  0012               	return		;funcret
 23788  01B254                     __end_of_strlen:
 23789                           	opt callstack 0
 23790                           
 23791 ;; *************** function _fputs *****************
 23792 ;; Defined at:
 23793 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 23794 ;; Parameters:    Size  Location     Type
 23795 ;;  s               2  [STACK] PTR const unsigned char 
 23796 ;;		 -> dbuf(80), 
 23797 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23798 ;;		 -> f(6), NULL(0), 
 23799 ;; Auto vars:     Size  Location     Type
 23800 ;;  i               2  [STACK] int 
 23801 ;;  c               1  [STACK] unsigned char 
 23802 ;; Return value:  Size  Location     Type
 23803 ;;                  2  [STACK] int 
 23804 ;; Registers used:
 23805 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 23806 ;; Tracked objects:
 23807 ;;		On entry : 0/2
 23808 ;;		On exit  : 0/0
 23809 ;;		Unchanged: 0/0
 23810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23815 ;;Total ram usage:        0 bytes
 23816 ;; Hardware stack levels used:    1
 23817 ;; Hardware stack levels required when called:   18
 23818 ;; This function calls:
 23819 ;;		_fputc
 23820 ;; This function is called by:
 23821 ;;		_pad
 23822 ;; This function uses a reentrant model
 23823 ;;
 23824                           
 23825                           	psect	text83
 23826  01B254                     __ptext83:
 23827                           	opt callstack 0
 23828  01B254                     _fputs:
 23829                           	opt callstack 0
 23830                           
 23831                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23832  01B254  52E6               	movf	postinc1,f,c
 23833  01B256  52E6               	movf	postinc1,f,c
 23834  01B258  52E6               	movf	postinc1,f,c
 23835                           
 23836                           ;stkvar	_i @ sp[(-3)+0]
 23837                           
 23838                           ;incstack = 0
 23839 ;; hardware stack exceeded
 23840  01B25A  0EFD               	movlw	-3
 23841  01B25C  6AE3               	clrf	plusw1,c
 23842  01B25E  0EFE               	movlw	-2
 23843  01B260  6AE3               	clrf	plusw1,c
 23844  01B262  D01F               	goto	l12425
 23845  01B264                     l12421:
 23846                           
 23847                           ;stkvar	_fp @ sp[(-3)+-4]
 23848  01B264  0EF9               	movlw	-7
 23849  01B266  006F FF8F FFE6     	movff	plusw1,postinc1
 23850  01B26C  006F FF8F FFE6     	movff	plusw1,postinc1
 23851                           
 23852                           ;stkvar	_c @ sp[(-5)+2]
 23853  01B272  0EFD               	movlw	-3
 23854  01B274  50E3               	movf	plusw1,w,c
 23855  01B276  6EE6               	movwf	postinc1,c
 23856  01B278  0E00               	movlw	0
 23857  01B27A  6EE6               	movwf	postinc1,c
 23858  01B27C  EC72  F0CF         	call	_fputc	;wreg free
 23859                           
 23860                           ;stkvar	_i @ sp[(-3)+0]
 23861  01B280  0EFD               	movlw	-3
 23862  01B282  50E3               	movf	plusw1,w,c
 23863  01B284  0F01               	addlw	1
 23864  01B286  6E01               	movwf	btemp^0,c
 23865  01B288  0EFD               	movlw	-3
 23866  01B28A  0060  F007  FFE3   	movff	btemp,plusw1
 23867  01B290  6A01               	clrf	btemp^0,c
 23868  01B292  0EFE               	movlw	-2
 23869  01B294  50E3               	movf	plusw1,w,c
 23870  01B296  2001               	addwfc	btemp^0,w,c
 23871  01B298  6E01               	movwf	btemp^0,c
 23872  01B29A  0EFE               	movlw	-2
 23873  01B29C  0060  F007  FFE3   	movff	btemp,plusw1
 23874  01B2A2                     l12425:
 23875                           
 23876                           ;stkvar	_i @ sp[(-3)+0]
 23877  01B2A2  0EFD               	movlw	-3
 23878  01B2A4  006F FF8C  F00B    	movff	plusw1,btemp+10
 23879  01B2AA  0EFE               	movlw	-2
 23880  01B2AC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23881                           
 23882                           ;stkvar	_s @ sp[(-3)+-2]
 23883  01B2B2  0EFB               	movlw	-5
 23884  01B2B4  006F FF8C  F009    	movff	plusw1,btemp+8
 23885  01B2BA  0EFC               	movlw	-4
 23886  01B2BC  006F FF8C  F00A    	movff	plusw1,btemp+9
 23887  01B2C2  500B               	movf	(btemp+10)^0,w,c
 23888  01B2C4  2409               	addwf	(btemp+8)^0,w,c
 23889  01B2C6  6ED9               	movwf	fsr2l,c
 23890  01B2C8  500C               	movf	(btemp+11)^0,w,c
 23891  01B2CA  200A               	addwfc	(btemp+9)^0,w,c
 23892  01B2CC  6EDA               	movwf	fsr2h,c
 23893  01B2CE  50DF               	movf	indf2,w,c
 23894  01B2D0  6E0C               	movwf	(btemp+11)^0,c
 23895                           
 23896                           ;stkvar	_c @ sp[(-3)+2]
 23897  01B2D2  0EFF               	movlw	-1
 23898  01B2D4  0060  F033  FFE3   	movff	btemp+11,plusw1
 23899  01B2DA  0EFF               	movlw	-1
 23900  01B2DC  50E3               	movf	plusw1,w,c
 23901  01B2DE  A4D8               	btfss	status,2,c
 23902  01B2E0  D7C1               	goto	l12421
 23903                           
 23904                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23905  01B2E2  0EF9               	movlw	249
 23906  01B2E4  26E1               	addwf	fsr1l,f,c
 23907  01B2E6  0EFF               	movlw	255
 23908  01B2E8  22E2               	addwfc	fsr1h,f,c
 23909  01B2EA  0012               	return		;funcret
 23910  01B2EC                     __end_of_fputs:
 23911                           	opt callstack 0
 23912                           
 23913 ;; *************** function _fputc *****************
 23914 ;; Defined at:
 23915 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 23916 ;; Parameters:    Size  Location     Type
 23917 ;;  c               2  [STACK] int 
 23918 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23919 ;;		 -> f(6), NULL(0), 
 23920 ;; Auto vars:     Size  Location     Type
 23921 ;;		None
 23922 ;; Return value:  Size  Location     Type
 23923 ;;                  2  [STACK] int 
 23924 ;; Registers used:
 23925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 23926 ;; Tracked objects:
 23927 ;;		On entry : 0/0
 23928 ;;		On exit  : 0/0
 23929 ;;		Unchanged: 0/0
 23930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23935 ;;Total ram usage:        0 bytes
 23936 ;; Hardware stack levels used:    1
 23937 ;; Hardware stack levels required when called:   17
 23938 ;; This function calls:
 23939 ;;		_putch
 23940 ;; This function is called by:
 23941 ;;		_pad
 23942 ;;		_stoa
 23943 ;;		_vfpfcnvrt
 23944 ;;		_fputs
 23945 ;; This function uses a reentrant model
 23946 ;;
 23947                           
 23948                           	psect	text84
 23949  019EE4                     __ptext84:
 23950                           	opt callstack 0
 23951  019EE4                     _fputc:
 23952                           	opt callstack 0
 23953                           
 23954                           ;stkvar	_fp @ sp[(0)+-4]
 23955                           
 23956                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23957                           ;incstack = 0
 23958 ;; hardware stack exceeded
 23959  019EE4  0EFC               	movlw	-4
 23960  019EE6  006F FF8C  F001    	movff	plusw1,btemp
 23961  019EEC  0EFD               	movlw	-3
 23962  019EEE  50E3               	movf	plusw1,w,c
 23963  019EF0  1001               	iorwf	btemp^0,w,c
 23964  019EF2  B4D8               	btfsc	status,2,c
 23965  019EF4  D009               	goto	u11210
 23966                           
 23967                           ;stkvar	_fp @ sp[(0)+-4]
 23968  019EF6  0EFC               	movlw	-4
 23969  019EF8  006F FF8C  F001    	movff	plusw1,btemp
 23970  019EFE  0EFD               	movlw	-3
 23971  019F00  50E3               	movf	plusw1,w,c
 23972  019F02  1001               	iorwf	btemp^0,w,c
 23973  019F04  A4D8               	btfss	status,2,c
 23974  019F06  D006               	goto	l12409
 23975  019F08                     u11210:
 23976                           
 23977                           ;stkvar	_c @ sp[(0)+-2]
 23978  019F08  0EFE               	movlw	-2
 23979  019F0A  50E3               	movf	plusw1,w,c
 23980  019F0C  6EE6               	movwf	postinc1,c
 23981  019F0E  ECE6  F0E4         	call	_putch	;wreg free
 23982  019F12  D075               	goto	l3307
 23983  019F14                     l12409:
 23984                           
 23985                           ;stkvar	_fp @ sp[(0)+-4]
 23986  019F14  0EFC               	movlw	-4
 23987  019F16  006F FF8C  F00B    	movff	plusw1,btemp+10
 23988  019F1C  0EFD               	movlw	-3
 23989  019F1E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23990  019F24  0E04               	movlw	4
 23991  019F26  240B               	addwf	(btemp+10)^0,w,c
 23992  019F28  6ED9               	movwf	fsr2l,c
 23993  019F2A  0E00               	movlw	0
 23994  019F2C  200C               	addwfc	(btemp+11)^0,w,c
 23995  019F2E  6EDA               	movwf	fsr2h,c
 23996  019F30  50DE               	movf	postinc2,w,c
 23997  019F32  10DE               	iorwf	postinc2,w,c
 23998  019F34  B4D8               	btfsc	status,2,c
 23999  019F36  D026               	goto	u11230
 24000                           
 24001                           ;stkvar	_fp @ sp[(0)+-4]
 24002  019F38  0EFC               	movlw	-4
 24003  019F3A  006F FF8C  F00B    	movff	plusw1,btemp+10
 24004  019F40  0EFD               	movlw	-3
 24005  019F42  006F FF8C  F00C    	movff	plusw1,btemp+11
 24006  019F48  0E04               	movlw	4
 24007  019F4A  240B               	addwf	(btemp+10)^0,w,c
 24008  019F4C  6ED9               	movwf	fsr2l,c
 24009  019F4E  0E00               	movlw	0
 24010  019F50  200C               	addwfc	(btemp+11)^0,w,c
 24011  019F52  6EDA               	movwf	fsr2h,c
 24012                           
 24013                           ;stkvar	_fp @ sp[(0)+-4]
 24014  019F54  0EFC               	movlw	-4
 24015  019F56  006F FF8C  F00B    	movff	plusw1,btemp+10
 24016  019F5C  0EFD               	movlw	-3
 24017  019F5E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24018  019F64  0E02               	movlw	2
 24019  019F66  240B               	addwf	(btemp+10)^0,w,c
 24020  019F68  6EE9               	movwf	fsr0l,c
 24021  019F6A  0E00               	movlw	0
 24022  019F6C  200C               	addwfc	(btemp+11)^0,w,c
 24023  019F6E  6EEA               	movwf	fsr0h,c
 24024  019F70  50DE               	movf	postinc2,w,c
 24025  019F72  5CEE               	subwf	postinc0,w,c
 24026  019F74  50EE               	movf	postinc0,w,c
 24027  019F76  0A80               	xorlw	128
 24028  019F78  6E01               	movwf	btemp^0,c
 24029  019F7A  50DE               	movf	postinc2,w,c
 24030  019F7C  0A80               	xorlw	128
 24031  019F7E  5801               	subwfb	btemp^0,w,c
 24032  019F80  B0D8               	btfsc	status,0,c
 24033  019F82  D03D               	goto	l3307
 24034  019F84                     u11230:
 24035                           
 24036                           ;stkvar	_c @ sp[(0)+-2]
 24037                           ;stkvar	_fp @ sp[(0)+-4]
 24038  019F84  0EFC               	movlw	-4
 24039  019F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 24040  019F8C  0EFD               	movlw	-3
 24041  019F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24042  019F94  0E02               	movlw	2
 24043  019F96  240B               	addwf	(btemp+10)^0,w,c
 24044  019F98  6ED9               	movwf	fsr2l,c
 24045  019F9A  0E00               	movlw	0
 24046  019F9C  200C               	addwfc	(btemp+11)^0,w,c
 24047  019F9E  6EDA               	movwf	fsr2h,c
 24048  019FA0  006F FF78  F00B    	movff	postinc2,btemp+10
 24049  019FA6  006F FF74  F00C    	movff	postdec2,btemp+11
 24050                           
 24051                           ;stkvar	_fp @ sp[(0)+-4]
 24052  019FAC  0EFC               	movlw	-4
 24053  019FAE  006F FF8F FFD9     	movff	plusw1,fsr2l
 24054  019FB4  0EFD               	movlw	-3
 24055  019FB6  006F FF8F FFDA     	movff	plusw1,fsr2h
 24056  019FBC  006F FF78  F009    	movff	postinc2,btemp+8
 24057  019FC2  006F FF74  F00A    	movff	postdec2,btemp+9
 24058  019FC8  500B               	movf	(btemp+10)^0,w,c
 24059  019FCA  2409               	addwf	(btemp+8)^0,w,c
 24060  019FCC  6ED9               	movwf	fsr2l,c
 24061  019FCE  500C               	movf	(btemp+11)^0,w,c
 24062  019FD0  200A               	addwfc	(btemp+9)^0,w,c
 24063  019FD2  6EDA               	movwf	fsr2h,c
 24064  019FD4  0EFE               	movlw	-2
 24065  019FD6  006F FF8F FFDF     	movff	plusw1,indf2
 24066                           
 24067                           ;stkvar	_fp @ sp[(0)+-4]
 24068  019FDC  0EFC               	movlw	-4
 24069  019FDE  006F FF8C  F00B    	movff	plusw1,btemp+10
 24070  019FE4  0EFD               	movlw	-3
 24071  019FE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 24072  019FEC  0E02               	movlw	2
 24073  019FEE  240B               	addwf	(btemp+10)^0,w,c
 24074  019FF0  6ED9               	movwf	fsr2l,c
 24075  019FF2  0E00               	movlw	0
 24076  019FF4  200C               	addwfc	(btemp+11)^0,w,c
 24077  019FF6  6EDA               	movwf	fsr2h,c
 24078  019FF8  2ADE               	incf	postinc2,f,c
 24079  019FFA  0E00               	movlw	0
 24080  019FFC  22DD               	addwfc	postdec2,f,c
 24081  019FFE                     l3307:
 24082                           
 24083                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 24084  019FFE  52E5               	movf	postdec1,f,c
 24085  01A000  52E5               	movf	postdec1,f,c
 24086  01A002  52E5               	movf	postdec1,f,c
 24087  01A004  52E5               	movf	postdec1,f,c
 24088  01A006  0012               	return		;funcret
 24089  01A008                     __end_of_fputc:
 24090                           	opt callstack 0
 24091                           
 24092 ;; *************** function _putch *****************
 24093 ;; Defined at:
 24094 ;;		line 421 in file "eadog.c"
 24095 ;; Parameters:    Size  Location     Type
 24096 ;;  c               1  [STACK] unsigned char 
 24097 ;; Auto vars:     Size  Location     Type
 24098 ;;		None
 24099 ;; Return value:  Size  Location     Type
 24100 ;;                  1  [STACK] void 
 24101 ;; Registers used:
 24102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 24103 ;; Tracked objects:
 24104 ;;		On entry : 0/0
 24105 ;;		On exit  : 0/0
 24106 ;;		Unchanged: 0/0
 24107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24112 ;;Total ram usage:        0 bytes
 24113 ;; Hardware stack levels used:    1
 24114 ;; Hardware stack levels required when called:   16
 24115 ;; This function calls:
 24116 ;;		_ringBufS_put_dma
 24117 ;; This function is called by:
 24118 ;;		_fputc
 24119 ;; This function uses a reentrant model
 24120 ;;
 24121                           
 24122                           	psect	text85
 24123  01C9CC                     __ptext85:
 24124                           	opt callstack 0
 24125  01C9CC                     _putch:
 24126                           	opt callstack 0
 24127                           
 24128                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 24129                           ;stkvar	_c @ sp[(0)+-1]
 24130                           
 24131                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24132                           ;incstack = 0
 24133 ;; hardware stack exceeded
 24134  01C9CC  0EFF               	movlw	-1
 24135  01C9CE  50E3               	movf	plusw1,w,c
 24136  01C9D0  6EE6               	movwf	postinc1,c
 24137  01C9D2  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 24138  01C9D8  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 24139  01C9DE  ECDD  F0D7         	call	_ringBufS_put_dma	;wreg free
 24140                           
 24141                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 24142  01C9E2  52E5               	movf	postdec1,f,c
 24143  01C9E4  0012               	return		;funcret
 24144  01C9E6                     __end_of_putch:
 24145                           	opt callstack 0
 24146                           
 24147 ;; *************** function _ringBufS_put_dma *****************
 24148 ;; Defined at:
 24149 ;;		line 67 in file "ringbufs.c"
 24150 ;; Parameters:    Size  Location     Type
 24151 ;;  _this           2  [STACK] PTR struct ringBufS_t
 24152 ;;		 -> ring_buf1(67), 
 24153 ;;  c               1  [STACK] const unsigned char 
 24154 ;; Auto vars:     Size  Location     Type
 24155 ;;		None
 24156 ;; Return value:  Size  Location     Type
 24157 ;;                  1  [STACK] void 
 24158 ;; Registers used:
 24159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 24160 ;; Tracked objects:
 24161 ;;		On entry : 0/0
 24162 ;;		On exit  : 0/0
 24163 ;;		Unchanged: 0/0
 24164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24169 ;;Total ram usage:        0 bytes
 24170 ;; Hardware stack levels used:    1
 24171 ;; Hardware stack levels required when called:   15
 24172 ;; This function calls:
 24173 ;;		Nothing
 24174 ;; This function is called by:
 24175 ;;		_putch
 24176 ;; This function uses a reentrant model
 24177 ;;
 24178                           
 24179                           	psect	text86
 24180  01AFBA                     __ptext86:
 24181                           	opt callstack 0
 24182  01AFBA                     _ringBufS_put_dma:
 24183                           	opt callstack 0
 24184                           
 24185                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 24186                           ;stkvar	__this @ sp[(0)+-2]
 24187                           
 24188                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24189                           ;incstack = 0
 24190 ;; hardware stack exceeded
 24191  01AFBA  0EFE               	movlw	-2
 24192  01AFBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 24193  01AFC2  0EFF               	movlw	-1
 24194  01AFC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 24195  01AFCA  0E42               	movlw	66
 24196  01AFCC  240B               	addwf	(btemp+10)^0,w,c
 24197  01AFCE  6ED9               	movwf	fsr2l,c
 24198  01AFD0  0E00               	movlw	0
 24199  01AFD2  200C               	addwfc	(btemp+11)^0,w,c
 24200  01AFD4  6EDA               	movwf	fsr2h,c
 24201  01AFD6  0E40               	movlw	64
 24202  01AFD8  60DF               	cpfslt	indf2,c
 24203  01AFDA  D040               	goto	l1612
 24204                           
 24205                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 24206                           ;stkvar	_c @ sp[(0)+-3]
 24207                           ;stkvar	__this @ sp[(0)+-2]
 24208  01AFDC  0EFE               	movlw	-2
 24209  01AFDE  006F FF8C  F00B    	movff	plusw1,btemp+10
 24210  01AFE4  0EFF               	movlw	-1
 24211  01AFE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 24212  01AFEC  0E40               	movlw	64
 24213  01AFEE  240B               	addwf	(btemp+10)^0,w,c
 24214  01AFF0  6ED9               	movwf	fsr2l,c
 24215  01AFF2  0E00               	movlw	0
 24216  01AFF4  200C               	addwfc	(btemp+11)^0,w,c
 24217  01AFF6  6EDA               	movwf	fsr2h,c
 24218  01AFF8  50DF               	movf	indf2,w,c
 24219  01AFFA  6E0C               	movwf	(btemp+11)^0,c
 24220                           
 24221                           ;stkvar	__this @ sp[(0)+-2]
 24222  01AFFC  0EFE               	movlw	-2
 24223  01AFFE  006F FF8C  F009    	movff	plusw1,btemp+8
 24224  01B004  0EFF               	movlw	-1
 24225  01B006  006F FF8C  F00A    	movff	plusw1,btemp+9
 24226  01B00C  500C               	movf	(btemp+11)^0,w,c
 24227  01B00E  2409               	addwf	(btemp+8)^0,w,c
 24228  01B010  6ED9               	movwf	fsr2l,c
 24229  01B012  0E00               	movlw	0
 24230  01B014  200A               	addwfc	(btemp+9)^0,w,c
 24231  01B016  6EDA               	movwf	fsr2h,c
 24232  01B018  0EFD               	movlw	-3
 24233  01B01A  006F FF8F FFDF     	movff	plusw1,indf2
 24234                           
 24235                           ;ringbufs.c: 71:   ++_this->head;
 24236                           ;stkvar	__this @ sp[(0)+-2]
 24237  01B020  0EFE               	movlw	-2
 24238  01B022  006F FF8C  F00B    	movff	plusw1,btemp+10
 24239  01B028  0EFF               	movlw	-1
 24240  01B02A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24241  01B030  0E40               	movlw	64
 24242  01B032  240B               	addwf	(btemp+10)^0,w,c
 24243  01B034  6ED9               	movwf	fsr2l,c
 24244  01B036  0E00               	movlw	0
 24245  01B038  200C               	addwfc	(btemp+11)^0,w,c
 24246  01B03A  6EDA               	movwf	fsr2h,c
 24247  01B03C  2ADF               	incf	indf2,f,c
 24248                           
 24249                           ;ringbufs.c: 72:   ++_this->count;
 24250                           ;stkvar	__this @ sp[(0)+-2]
 24251  01B03E  0EFE               	movlw	-2
 24252  01B040  006F FF8C  F00B    	movff	plusw1,btemp+10
 24253  01B046  0EFF               	movlw	-1
 24254  01B048  006F FF8C  F00C    	movff	plusw1,btemp+11
 24255  01B04E  0E42               	movlw	66
 24256  01B050  240B               	addwf	(btemp+10)^0,w,c
 24257  01B052  6ED9               	movwf	fsr2l,c
 24258  01B054  0E00               	movlw	0
 24259  01B056  200C               	addwfc	(btemp+11)^0,w,c
 24260  01B058  6EDA               	movwf	fsr2h,c
 24261  01B05A  2ADF               	incf	indf2,f,c
 24262  01B05C                     l1612:
 24263                           
 24264                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 24265  01B05C  52E5               	movf	postdec1,f,c
 24266  01B05E  52E5               	movf	postdec1,f,c
 24267  01B060  52E5               	movf	postdec1,f,c
 24268  01B062  0012               	return		;funcret
 24269  01B064                     __end_of_ringBufS_put_dma:
 24270                           	opt callstack 0
 24271                           
 24272 ;; *************** function _atoi *****************
 24273 ;; Defined at:
 24274 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 24275 ;; Parameters:    Size  Location     Type
 24276 ;;  s               2  [STACK] PTR const unsigned char 
 24277 ;;		 -> STR_78(127), STR_76(3), STR_75(3), STR_74(19), 
 24278 ;;		 -> STR_73(19), STR_72(19), STR_71(19), STR_70(19), 
 24279 ;;		 -> STR_69(19), STR_68(24), STR_67(15), STR_66(15), 
 24280 ;;		 -> STR_65(15), STR_64(10), STR_63(10), STR_62(19), 
 24281 ;;		 -> STR_61(19), STR_58(3), STR_57(3), STR_56(21), 
 24282 ;;		 -> STR_55(21), STR_54(21), STR_53(21), STR_52(21), 
 24283 ;;		 -> STR_51(21), STR_50(21), STR_49(21), STR_48(21), 
 24284 ;;		 -> STR_47(20), STR_46(20), STR_45(21), STR_44(21), 
 24285 ;;		 -> STR_43(21), STR_42(22), STR_41(22), STR_40(22), 
 24286 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(29), 
 24287 ;;		 -> STR_35(23), STR_34(23), STR_33(22), STR_32(22), 
 24288 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 24289 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(22), 
 24290 ;;		 -> STR_23(22), STR_22(22), STR_21(17), STR_20(16), 
 24291 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 24292 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
 24293 ;;		 -> STR_11(22), STR_10(22), STR_9(26), STR_8(21), 
 24294 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 24295 ;;		 -> STR_2(21), STR_1(21), 
 24296 ;; Auto vars:     Size  Location     Type
 24297 ;;  n               2  [STACK] int 
 24298 ;;  neg             2  [STACK] int 
 24299 ;; Return value:  Size  Location     Type
 24300 ;;                  2  [STACK] int 
 24301 ;; Registers used:
 24302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 24303 ;; Tracked objects:
 24304 ;;		On entry : 0/0
 24305 ;;		On exit  : 0/0
 24306 ;;		Unchanged: 0/0
 24307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24312 ;;Total ram usage:        0 bytes
 24313 ;; Hardware stack levels used:    1
 24314 ;; Hardware stack levels required when called:   16
 24315 ;; This function calls:
 24316 ;;		_isdigit
 24317 ;;		_isspace
 24318 ;; This function is called by:
 24319 ;;		_vfpfcnvrt
 24320 ;; This function uses a reentrant model
 24321 ;;
 24322                           
 24323                           	psect	text87
 24324  017D32                     __ptext87:
 24325                           	opt callstack 0
 24326  017D32                     _atoi:
 24327                           	opt callstack 0
 24328                           
 24329                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24330  017D32  0E09               	movlw	9
 24331  017D34  26E1               	addwf	fsr1l,f,c
 24332  017D36  0E00               	movlw	0
 24333  017D38  22E2               	addwfc	fsr1h,f,c
 24334                           
 24335                           ;stkvar	_n @ sp[(-9)+5]
 24336                           
 24337                           ;incstack = 0
 24338 ;; hardware stack exceeded
 24339  017D3A  0EFC               	movlw	-4
 24340  017D3C  6AE3               	clrf	plusw1,c
 24341  017D3E  0EFD               	movlw	-3
 24342  017D40  6AE3               	clrf	plusw1,c
 24343                           
 24344                           ;stkvar	_neg @ sp[(-9)+7]
 24345  017D42  0EFE               	movlw	-2
 24346  017D44  6AE3               	clrf	plusw1,c
 24347  017D46  0EFF               	movlw	-1
 24348  017D48  6AE3               	clrf	plusw1,c
 24349  017D4A  D011               	goto	l9675
 24350  017D4C                     l9673:
 24351                           
 24352                           ;stkvar	_s @ sp[(-9)+-2]
 24353  017D4C  0EF5               	movlw	-11
 24354  017D4E  50E3               	movf	plusw1,w,c
 24355  017D50  0F01               	addlw	1
 24356  017D52  6E01               	movwf	btemp^0,c
 24357  017D54  0EF5               	movlw	-11
 24358  017D56  0060  F007  FFE3   	movff	btemp,plusw1
 24359  017D5C  6A01               	clrf	btemp^0,c
 24360  017D5E  0EF6               	movlw	-10
 24361  017D60  50E3               	movf	plusw1,w,c
 24362  017D62  2001               	addwfc	btemp^0,w,c
 24363  017D64  6E01               	movwf	btemp^0,c
 24364  017D66  0EF6               	movlw	-10
 24365  017D68  0060  F007  FFE3   	movff	btemp,plusw1
 24366  017D6E                     l9675:
 24367                           
 24368                           ;stkvar	_atoi$6417 @ sp[(-9)+4]
 24369  017D6E  0EFB               	movlw	-5
 24370  017D70  6AE3               	clrf	plusw1,c
 24371  017D72  2AE3               	incf	plusw1,f,c
 24372                           
 24373                           ;stkvar	_s @ sp[(-9)+-2]
 24374  017D74  50E1               	movf	fsr1l,w,c
 24375  017D76  0FF5               	addlw	-11
 24376  017D78  6ED9               	movwf	fsr2l,c
 24377  017D7A  50E2               	movf	fsr1h,w,c
 24378  017D7C  6EDA               	movwf	fsr2h,c
 24379  017D7E  0EFF               	movlw	255
 24380  017D80  22DA               	addwfc	fsr2h,f,c
 24381  017D82  006F FF7B FFF6     	movff	postinc2,tblptrl
 24382  017D88  006F FF77 FFF7     	movff	postdec2,tblptrh
 24383  017D8E                     	if	0	;tblptru may be non-zero
 24384  017D8E                     	endif
 24385  017D8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24386  017D8E  0E00               	movlw	low (__mediumconst shr (0+16))
 24387  017D90  6EF8               	movwf	tblptru,c
 24388  017D92                     	endif
 24389  017D92  0008               	tblrd		*
 24390  017D94  50F5               	movf	tablat,w,c
 24391  017D96  0A20               	xorlw	32
 24392  017D98  B4D8               	btfsc	status,2,c
 24393  017D9A  D023               	goto	l9683
 24394  017D9C  0EF7               	movlw	247
 24395  017D9E  6E0B               	movwf	(btemp+10)^0,c
 24396  017DA0  0EFF               	movlw	255
 24397  017DA2  6E0C               	movwf	(btemp+11)^0,c
 24398                           
 24399                           ;stkvar	_s @ sp[(-9)+-2]
 24400  017DA4  50E1               	movf	fsr1l,w,c
 24401  017DA6  0FF5               	addlw	-11
 24402  017DA8  6ED9               	movwf	fsr2l,c
 24403  017DAA  50E2               	movf	fsr1h,w,c
 24404  017DAC  6EDA               	movwf	fsr2h,c
 24405  017DAE  0EFF               	movlw	255
 24406  017DB0  22DA               	addwfc	fsr2h,f,c
 24407  017DB2  006F FF7B FFF6     	movff	postinc2,tblptrl
 24408  017DB8  006F FF77 FFF7     	movff	postdec2,tblptrh
 24409  017DBE                     	if	0	;tblptru may be non-zero
 24410  017DBE                     	endif
 24411  017DBE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24412  017DBE  0E00               	movlw	low (__mediumconst shr (0+16))
 24413  017DC0  6EF8               	movwf	tblptru,c
 24414  017DC2                     	endif
 24415  017DC2  0008               	tblrd		*
 24416  017DC4  50F5               	movf	tablat,w,c
 24417  017DC6  6E09               	movwf	(btemp+8)^0,c
 24418  017DC8  6A0A               	clrf	(btemp+9)^0,c
 24419  017DCA  500B               	movf	(btemp+10)^0,w,c
 24420  017DCC  2609               	addwf	(btemp+8)^0,f,c
 24421  017DCE  500C               	movf	(btemp+11)^0,w,c
 24422  017DD0  220A               	addwfc	(btemp+9)^0,f,c
 24423  017DD2  500A               	movf	(btemp+9)^0,w,c
 24424  017DD4  E104               	bnz	u8770
 24425  017DD6  0E05               	movlw	5
 24426  017DD8  5C09               	subwf	(btemp+8)^0,w,c
 24427  017DDA  A0D8               	btfss	status,0,c
 24428  017DDC  D002               	goto	l9683
 24429  017DDE                     u8770:
 24430                           
 24431                           ;stkvar	_atoi$6417 @ sp[(-9)+4]
 24432  017DDE  0EFB               	movlw	-5
 24433  017DE0  6AE3               	clrf	plusw1,c
 24434  017DE2                     l9683:
 24435                           
 24436                           ;stkvar	_atoi$6417 @ sp[(-9)+4]
 24437  017DE2  0EFB               	movlw	-5
 24438  017DE4  50E3               	movf	plusw1,w,c
 24439  017DE6  6E0B               	movwf	(btemp+10)^0,c
 24440  017DE8  6A0C               	clrf	(btemp+11)^0,c
 24441                           
 24442                           ;stkvar	_atoi$6416 @ sp[(-9)+2]
 24443  017DEA  0EF9               	movlw	-7
 24444  017DEC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24445  017DF2  0EFA               	movlw	-6
 24446  017DF4  0060  F033  FFE3   	movff	btemp+11,plusw1
 24447                           
 24448                           ;stkvar	_atoi$6416 @ sp[(-9)+2]
 24449  017DFA  0EF9               	movlw	-7
 24450  017DFC  006F FF8C  F001    	movff	plusw1,btemp
 24451  017E02  0EFA               	movlw	-6
 24452  017E04  50E3               	movf	plusw1,w,c
 24453  017E06  1001               	iorwf	btemp^0,w,c
 24454  017E08  B4D8               	btfsc	status,2,c
 24455  017E0A  D01F               	goto	l9693
 24456  017E0C  D79F               	goto	l9673
 24457  017E0E                     l9689:
 24458  017E0E  0E01               	movlw	1
 24459  017E10  6E0B               	movwf	(btemp+10)^0,c
 24460  017E12  0E00               	movlw	0
 24461  017E14  6E0C               	movwf	(btemp+11)^0,c
 24462                           
 24463                           ;stkvar	_neg @ sp[(-9)+7]
 24464  017E16  0EFE               	movlw	-2
 24465  017E18  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24466  017E1E  0EFF               	movlw	-1
 24467  017E20  0060  F033  FFE3   	movff	btemp+11,plusw1
 24468  017E26                     l9691:
 24469                           
 24470                           ;stkvar	_s @ sp[(-9)+-2]
 24471  017E26  0EF5               	movlw	-11
 24472  017E28  50E3               	movf	plusw1,w,c
 24473  017E2A  0F01               	addlw	1
 24474  017E2C  6E01               	movwf	btemp^0,c
 24475  017E2E  0EF5               	movlw	-11
 24476  017E30  0060  F007  FFE3   	movff	btemp,plusw1
 24477  017E36  6A01               	clrf	btemp^0,c
 24478  017E38  0EF6               	movlw	-10
 24479  017E3A  50E3               	movf	plusw1,w,c
 24480  017E3C  2001               	addwfc	btemp^0,w,c
 24481  017E3E  6E01               	movwf	btemp^0,c
 24482  017E40  0EF6               	movlw	-10
 24483  017E42  0060  F007  FFE3   	movff	btemp,plusw1
 24484  017E48  D053               	goto	l9699
 24485  017E4A                     l9693:
 24486                           
 24487                           ;stkvar	_s @ sp[(-9)+-2]
 24488  017E4A  50E1               	movf	fsr1l,w,c
 24489  017E4C  0FF5               	addlw	-11
 24490  017E4E  6ED9               	movwf	fsr2l,c
 24491  017E50  50E2               	movf	fsr1h,w,c
 24492  017E52  6EDA               	movwf	fsr2h,c
 24493  017E54  0EFF               	movlw	255
 24494  017E56  22DA               	addwfc	fsr2h,f,c
 24495  017E58  006F FF7B FFF6     	movff	postinc2,tblptrl
 24496  017E5E  006F FF77 FFF7     	movff	postdec2,tblptrh
 24497  017E64                     	if	0	;tblptru may be non-zero
 24498  017E64                     	endif
 24499  017E64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24500  017E64  0E00               	movlw	low (__mediumconst shr (0+16))
 24501  017E66  6EF8               	movwf	tblptru,c
 24502  017E68                     	endif
 24503  017E68  0008               	tblrd		*
 24504  017E6A  50F5               	movf	tablat,w,c
 24505  017E6C  6E0B               	movwf	(btemp+10)^0,c
 24506  017E6E  6A0C               	clrf	(btemp+11)^0,c
 24507                           
 24508                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24509                           ; Switch size 1, requested type "simple"
 24510                           ; Number of cases is 1, Range of values is 0 to 0
 24511                           ; switch strategies available:
 24512                           ; Name         Instructions Cycles
 24513                           ; simple_byte            4     3 (average)
 24514                           ;	Chosen strategy is simple_byte
 24515  017E70  500C               	movf	(btemp+11)^0,w,c
 24516  017E72  0A00               	xorlw	0	; case 0
 24517  017E74  A4D8               	btfss	status,2,c
 24518  017E76  D03C               	goto	l9699
 24519                           
 24520                           ; Switch size 1, requested type "simple"
 24521                           ; Number of cases is 2, Range of values is 43 to 45
 24522                           ; switch strategies available:
 24523                           ; Name         Instructions Cycles
 24524                           ; simple_byte            7     4 (average)
 24525                           ;	Chosen strategy is simple_byte
 24526  017E78  500B               	movf	(btemp+10)^0,w,c
 24527  017E7A  0A2B               	xorlw	43	; case 43
 24528  017E7C  B4D8               	btfsc	status,2,c
 24529  017E7E  D7D3               	goto	l9691
 24530  017E80  0A06               	xorlw	6	; case 45
 24531  017E82  B4D8               	btfsc	status,2,c
 24532  017E84  D7C4               	goto	l9689
 24533  017E86  D034               	goto	l9699
 24534  017E88                     l9695:
 24535                           
 24536                           ;stkvar	_n @ sp[(-9)+5]
 24537  017E88  0EFC               	movlw	-4
 24538  017E8A  006F FF8C  F00B    	movff	plusw1,btemp+10
 24539  017E90  0EFD               	movlw	-3
 24540  017E92  006F FF8C  F00C    	movff	plusw1,btemp+11
 24541  017E98  0E0A               	movlw	10
 24542  017E9A  020B               	mulwf	(btemp+10)^0,c
 24543  017E9C  006F FFCC  F009    	movff	prodl,btemp+8
 24544  017EA2  006F FFD0  F00A    	movff	prodh,btemp+9
 24545  017EA8  020C               	mulwf	(btemp+11)^0,c
 24546  017EAA  50F3               	movf	prodl,w,c
 24547  017EAC  260A               	addwf	(btemp+9)^0,f,c
 24548                           
 24549                           ;stkvar	_s @ sp[(-9)+-2]
 24550  017EAE  50E1               	movf	fsr1l,w,c
 24551  017EB0  0FF5               	addlw	-11
 24552  017EB2  6ED9               	movwf	fsr2l,c
 24553  017EB4  50E2               	movf	fsr1h,w,c
 24554  017EB6  6EDA               	movwf	fsr2h,c
 24555  017EB8  0EFF               	movlw	255
 24556  017EBA  22DA               	addwfc	fsr2h,f,c
 24557  017EBC  006F FF7B FFF6     	movff	postinc2,tblptrl
 24558  017EC2  006F FF77 FFF7     	movff	postdec2,tblptrh
 24559  017EC8                     	if	0	;tblptru may be non-zero
 24560  017EC8                     	endif
 24561  017EC8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24562  017EC8  0E00               	movlw	low (__mediumconst shr (0+16))
 24563  017ECA  6EF8               	movwf	tblptru,c
 24564  017ECC                     	endif
 24565  017ECC  0008               	tblrd		*
 24566  017ECE  50F5               	movf	tablat,w,c
 24567  017ED0  5E09               	subwf	(btemp+8)^0,f,c
 24568  017ED2  0E00               	movlw	0
 24569  017ED4  5A0A               	subwfb	(btemp+9)^0,f,c
 24570  017ED6  0E30               	movlw	48
 24571  017ED8  2609               	addwf	(btemp+8)^0,f,c
 24572  017EDA  0E00               	movlw	0
 24573  017EDC  220A               	addwfc	(btemp+9)^0,f,c
 24574                           
 24575                           ;stkvar	_n @ sp[(-9)+5]
 24576  017EDE  0EFC               	movlw	-4
 24577  017EE0  0060  F027  FFE3   	movff	btemp+8,plusw1
 24578  017EE6  0EFD               	movlw	-3
 24579  017EE8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24580  017EEE  D79B               	goto	l9691
 24581  017EF0                     l9699:
 24582  017EF0  0ED0               	movlw	208
 24583  017EF2  6E0B               	movwf	(btemp+10)^0,c
 24584  017EF4  0EFF               	movlw	255
 24585  017EF6  6E0C               	movwf	(btemp+11)^0,c
 24586                           
 24587                           ;stkvar	_s @ sp[(-9)+-2]
 24588  017EF8  50E1               	movf	fsr1l,w,c
 24589  017EFA  0FF5               	addlw	-11
 24590  017EFC  6ED9               	movwf	fsr2l,c
 24591  017EFE  50E2               	movf	fsr1h,w,c
 24592  017F00  6EDA               	movwf	fsr2h,c
 24593  017F02  0EFF               	movlw	255
 24594  017F04  22DA               	addwfc	fsr2h,f,c
 24595  017F06  006F FF7B FFF6     	movff	postinc2,tblptrl
 24596  017F0C  006F FF77 FFF7     	movff	postdec2,tblptrh
 24597  017F12                     	if	0	;tblptru may be non-zero
 24598  017F12                     	endif
 24599  017F12                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24600  017F12  0E00               	movlw	low (__mediumconst shr (0+16))
 24601  017F14  6EF8               	movwf	tblptru,c
 24602  017F16                     	endif
 24603  017F16  0008               	tblrd		*
 24604  017F18  50F5               	movf	tablat,w,c
 24605  017F1A  6E09               	movwf	(btemp+8)^0,c
 24606  017F1C  6A0A               	clrf	(btemp+9)^0,c
 24607  017F1E  500B               	movf	(btemp+10)^0,w,c
 24608  017F20  2609               	addwf	(btemp+8)^0,f,c
 24609  017F22  500C               	movf	(btemp+11)^0,w,c
 24610  017F24  220A               	addwfc	(btemp+9)^0,f,c
 24611  017F26  500A               	movf	(btemp+9)^0,w,c
 24612  017F28  E106               	bnz	u8790
 24613  017F2A  0E0A               	movlw	10
 24614  017F2C  5C09               	subwf	(btemp+8)^0,w,c
 24615  017F2E  B0D8               	btfsc	status,0,c
 24616  017F30  D002               	goto	u8790
 24617  017F32  0E01               	movlw	1
 24618  017F34  D001               	goto	u8800
 24619  017F36                     u8790:
 24620  017F36  0E00               	movlw	0
 24621  017F38                     u8800:
 24622  017F38  6E0B               	movwf	(btemp+10)^0,c
 24623  017F3A  6A0C               	clrf	(btemp+11)^0,c
 24624                           
 24625                           ;stkvar	_atoi$6418 @ sp[(-9)+0]
 24626  017F3C  0EF7               	movlw	-9
 24627  017F3E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24628  017F44  0EF8               	movlw	-8
 24629  017F46  0060  F033  FFE3   	movff	btemp+11,plusw1
 24630                           
 24631                           ;stkvar	_atoi$6418 @ sp[(-9)+0]
 24632  017F4C  0EF7               	movlw	-9
 24633  017F4E  006F FF8C  F001    	movff	plusw1,btemp
 24634  017F54  0EF8               	movlw	-8
 24635  017F56  50E3               	movf	plusw1,w,c
 24636  017F58  1001               	iorwf	btemp^0,w,c
 24637  017F5A  A4D8               	btfss	status,2,c
 24638  017F5C  D795               	goto	l9695
 24639                           
 24640                           ;stkvar	_neg @ sp[(-9)+7]
 24641  017F5E  0EFE               	movlw	-2
 24642  017F60  006F FF8C  F001    	movff	plusw1,btemp
 24643  017F66  0EFF               	movlw	-1
 24644  017F68  50E3               	movf	plusw1,w,c
 24645  017F6A  1001               	iorwf	btemp^0,w,c
 24646  017F6C  A4D8               	btfss	status,2,c
 24647  017F6E  D00E               	goto	l9709
 24648                           
 24649                           ;stkvar	_n @ sp[(-9)+5]
 24650  017F70  0EFC               	movlw	-4
 24651  017F72  006F FF8C  F001    	movff	plusw1,btemp
 24652  017F78  1E01               	comf	btemp^0,f,c
 24653  017F7A  0EFD               	movlw	-3
 24654  017F7C  006F FF8C  F002    	movff	plusw1,btemp+1
 24655  017F82  1E02               	comf	(btemp+1)^0,f,c
 24656  017F84  2A01               	incf	btemp^0,f,c
 24657  017F86  B4D8               	btfsc	status,2,c
 24658  017F88  2A02               	incf	(btemp+1)^0,f,c
 24659  017F8A  D008               	goto	l3238
 24660  017F8C                     l9709:
 24661                           
 24662                           ;stkvar	_n @ sp[(-9)+5]
 24663  017F8C  0EFC               	movlw	-4
 24664  017F8E  006F FF8C  F001    	movff	plusw1,btemp
 24665  017F94  0EFD               	movlw	-3
 24666  017F96  006F FF8C  F002    	movff	plusw1,btemp+1
 24667  017F9C                     l3238:
 24668                           
 24669                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 24670  017F9C  0EF5               	movlw	245
 24671  017F9E  26E1               	addwf	fsr1l,f,c
 24672  017FA0  0EFF               	movlw	255
 24673  017FA2  22E2               	addwfc	fsr1h,f,c
 24674  017FA4  0012               	return		;funcret
 24675  017FA6                     __end_of_atoi:
 24676                           	opt callstack 0
 24677                           
 24678 ;; *************** function _isspace *****************
 24679 ;; Defined at:
 24680 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 24681 ;; Parameters:    Size  Location     Type
 24682 ;;  c               2  [STACK] int 
 24683 ;; Auto vars:     Size  Location     Type
 24684 ;;		None
 24685 ;; Return value:  Size  Location     Type
 24686 ;;                  2  [STACK] int 
 24687 ;; Registers used:
 24688 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 24689 ;; Tracked objects:
 24690 ;;		On entry : 0/0
 24691 ;;		On exit  : 0/0
 24692 ;;		Unchanged: 0/0
 24693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24698 ;;Total ram usage:        0 bytes
 24699 ;; Hardware stack levels used:    1
 24700 ;; Hardware stack levels required when called:   15
 24701 ;; This function calls:
 24702 ;;		Nothing
 24703 ;; This function is called by:
 24704 ;;		_atoi
 24705 ;; This function uses a reentrant model
 24706 ;;
 24707                           
 24708                           	psect	text88
 24709  01BCA4                     __ptext88:
 24710                           	opt callstack 0
 24711  01BCA4                     _isspace:
 24712                           	opt callstack 0
 24713                           
 24714                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24715  01BCA4  52E6               	movf	postinc1,f,c
 24716                           
 24717                           ;stkvar	_isspace$6467 @ sp[(-1)+0]
 24718                           
 24719                           ;incstack = 0
 24720 ;; hardware stack exceeded
 24721  01BCA6  0EFF               	movlw	-1
 24722  01BCA8  6AE3               	clrf	plusw1,c
 24723  01BCAA  2AE3               	incf	plusw1,f,c
 24724                           
 24725                           ;stkvar	_c @ sp[(-1)+-2]
 24726  01BCAC  0EFD               	movlw	-3
 24727  01BCAE  006F FF8C  F001    	movff	plusw1,btemp
 24728  01BCB4  0E20               	movlw	32
 24729  01BCB6  1801               	xorwf	btemp^0,w,c
 24730  01BCB8  E104               	bnz	u7660
 24731  01BCBA  0EFE               	movlw	-2
 24732  01BCBC  50E3               	movf	plusw1,w,c
 24733  01BCBE  B4D8               	btfsc	status,2,c
 24734  01BCC0  D012               	goto	l9093
 24735  01BCC2                     u7660:
 24736                           
 24737                           ;stkvar	_c @ sp[(-1)+-2]
 24738  01BCC2  0EFD               	movlw	-3
 24739  01BCC4  50E3               	movf	plusw1,w,c
 24740  01BCC6  0FF7               	addlw	247
 24741  01BCC8  6E0B               	movwf	(btemp+10)^0,c
 24742  01BCCA  0EFE               	movlw	-2
 24743  01BCCC  006F FF8C  F00C    	movff	plusw1,btemp+11
 24744  01BCD2  0EFF               	movlw	255
 24745  01BCD4  220C               	addwfc	(btemp+11)^0,f,c
 24746  01BCD6  500C               	movf	(btemp+11)^0,w,c
 24747  01BCD8  E104               	bnz	u7670
 24748  01BCDA  0E05               	movlw	5
 24749  01BCDC  5C0B               	subwf	(btemp+10)^0,w,c
 24750  01BCDE  A0D8               	btfss	status,0,c
 24751  01BCE0  D002               	goto	l9093
 24752  01BCE2                     u7670:
 24753                           
 24754                           ;stkvar	_isspace$6467 @ sp[(-1)+0]
 24755  01BCE2  0EFF               	movlw	-1
 24756  01BCE4  6AE3               	clrf	plusw1,c
 24757  01BCE6                     l9093:
 24758                           
 24759                           ;stkvar	_isspace$6467 @ sp[(-1)+0]
 24760  01BCE6  0EFF               	movlw	-1
 24761  01BCE8  50E3               	movf	plusw1,w,c
 24762  01BCEA  6E01               	movwf	btemp^0,c
 24763  01BCEC  6A02               	clrf	(btemp+1)^0,c
 24764                           
 24765                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 24766  01BCEE  52E5               	movf	postdec1,f,c
 24767  01BCF0  52E5               	movf	postdec1,f,c
 24768  01BCF2  52E5               	movf	postdec1,f,c
 24769  01BCF4  0012               	return		;funcret
 24770  01BCF6                     __end_of_isspace:
 24771                           	opt callstack 0
 24772                           
 24773 ;; *************** function _isdigit *****************
 24774 ;; Defined at:
 24775 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 24776 ;; Parameters:    Size  Location     Type
 24777 ;;  c               2  [STACK] int 
 24778 ;; Auto vars:     Size  Location     Type
 24779 ;;		None
 24780 ;; Return value:  Size  Location     Type
 24781 ;;                  2  [STACK] int 
 24782 ;; Registers used:
 24783 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 24784 ;; Tracked objects:
 24785 ;;		On entry : 0/0
 24786 ;;		On exit  : 0/0
 24787 ;;		Unchanged: 0/0
 24788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24793 ;;Total ram usage:        0 bytes
 24794 ;; Hardware stack levels used:    1
 24795 ;; Hardware stack levels required when called:   15
 24796 ;; This function calls:
 24797 ;;		Nothing
 24798 ;; This function is called by:
 24799 ;;		_vfpfcnvrt
 24800 ;;		_atoi
 24801 ;; This function uses a reentrant model
 24802 ;;
 24803                           
 24804                           	psect	text89
 24805  01C450                     __ptext89:
 24806                           	opt callstack 0
 24807  01C450                     _isdigit:
 24808                           	opt callstack 0
 24809                           
 24810                           ;stkvar	_c @ sp[(0)+-2]
 24811                           
 24812                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24813                           ;incstack = 0
 24814 ;; hardware stack exceeded
 24815  01C450  0EFE               	movlw	-2
 24816  01C452  50E3               	movf	plusw1,w,c
 24817  01C454  0FD0               	addlw	208
 24818  01C456  6E0B               	movwf	(btemp+10)^0,c
 24819  01C458  0EFF               	movlw	-1
 24820  01C45A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24821  01C460  0EFF               	movlw	255
 24822  01C462  220C               	addwfc	(btemp+11)^0,f,c
 24823  01C464  500C               	movf	(btemp+11)^0,w,c
 24824  01C466  E106               	bnz	u6510
 24825  01C468  0E0A               	movlw	10
 24826  01C46A  5C0B               	subwf	(btemp+10)^0,w,c
 24827  01C46C  B0D8               	btfsc	status,0,c
 24828  01C46E  D002               	goto	u6510
 24829  01C470  0E01               	movlw	1
 24830  01C472  D001               	goto	u6520
 24831  01C474                     u6510:
 24832  01C474  0E00               	movlw	0
 24833  01C476                     u6520:
 24834  01C476  6E01               	movwf	btemp^0,c
 24835  01C478  6A02               	clrf	(btemp+1)^0,c
 24836                           
 24837                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 24838  01C47A  52E5               	movf	postdec1,f,c
 24839  01C47C  52E5               	movf	postdec1,f,c
 24840  01C47E  0012               	return		;funcret
 24841  01C480                     __end_of_isdigit:
 24842                           	opt callstack 0
 24843                           
 24844 ;; *************** function _set_vterm *****************
 24845 ;; Defined at:
 24846 ;;		line 107 in file "mconfig.c"
 24847 ;; Parameters:    Size  Location     Type
 24848 ;;  vterm           1  [STACK] const unsigned char 
 24849 ;; Auto vars:     Size  Location     Type
 24850 ;;		None
 24851 ;; Return value:  Size  Location     Type
 24852 ;;                  1  [STACK] unsigned char 
 24853 ;; Registers used:
 24854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 24855 ;; Tracked objects:
 24856 ;;		On entry : 0/1
 24857 ;;		On exit  : 0/0
 24858 ;;		Unchanged: 0/0
 24859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24864 ;;Total ram usage:        0 bytes
 24865 ;; Hardware stack levels used:    1
 24866 ;; Hardware stack levels required when called:   15
 24867 ;; This function calls:
 24868 ;;		Nothing
 24869 ;; This function is called by:
 24870 ;;		_main
 24871 ;;		_check_help
 24872 ;; This function uses a reentrant model
 24873 ;;
 24874                           
 24875                           	psect	text90
 24876  01C972                     __ptext90:
 24877                           	opt callstack 0
 24878  01C972                     _set_vterm:
 24879                           	opt callstack 15
 24880                           
 24881                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 24882                           ;stkvar	_vterm @ sp[(0)+-1]
 24883                           
 24884                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24885                           ;incstack = 0
 24886  01C972  0EFF               	movlw	-1
 24887  01C974  006F FF8C  F00C    	movff	plusw1,btemp+11
 24888  01C97A  0E03               	movlw	3
 24889  01C97C  160C               	andwf	(btemp+11)^0,f,c
 24890  01C97E  EE22  F20A         	lfsr	2,_D+480
 24891  01C982  50DF               	movf	223,w,c
 24892  01C984  180C               	xorwf	(btemp+11)^0,w,c
 24893  01C986  0BFE               	andlw	-2
 24894  01C988  180C               	xorwf	(btemp+11)^0,w,c
 24895  01C98A  6EDF               	movwf	223,c
 24896                           
 24897                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 24898  01C98C  52E5               	movf	postdec1,f,c
 24899  01C98E  0012               	return		;funcret
 24900  01C990                     __end_of_set_vterm:
 24901                           	opt callstack 0
 24902                           
 24903 ;; *************** function _set_temp_display_help *****************
 24904 ;; Defined at:
 24905 ;;		line 211 in file "mconfig.c"
 24906 ;; Parameters:    Size  Location     Type
 24907 ;;  new_response    1  [STACK] const enum E16509
 24908 ;; Auto vars:     Size  Location     Type
 24909 ;;		None
 24910 ;; Return value:  Size  Location     Type
 24911 ;;                  1  [STACK] enum E16509
 24912 ;; Registers used:
 24913 ;;		wreg, fsr1l, fsr1h
 24914 ;; Tracked objects:
 24915 ;;		On entry : 0/1
 24916 ;;		On exit  : 3F/1
 24917 ;;		Unchanged: 0/0
 24918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24923 ;;Total ram usage:        0 bytes
 24924 ;; Hardware stack levels used:    1
 24925 ;; Hardware stack levels required when called:   15
 24926 ;; This function calls:
 24927 ;;		Nothing
 24928 ;; This function is called by:
 24929 ;;		_check_help
 24930 ;; This function uses a reentrant model
 24931 ;;
 24932                           
 24933                           	psect	text91
 24934  01CABA                     __ptext91:
 24935                           	opt callstack 0
 24936  01CABA                     _set_temp_display_help:
 24937                           	opt callstack 14
 24938                           
 24939                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 24940                           
 24941                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24942                           ;incstack = 0
 24943  01CABA  0101               	movlb	1	; () banked
 24944  01CABC  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 24945                           
 24946                           ; BSR set to: 1
 24947                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 24948                           ;stkvar	_new_response_info @ sp[(0)+-1]
 24949  01CABE  0EFF               	movlw	-1
 24950  01CAC0  006F FF8C  F1AC    	movff	plusw1,_V+165	;volatile
 24951                           
 24952                           ; BSR set to: 1
 24953                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 24954  01CAC6  52E5               	movf	postdec1,f,c
 24955  01CAC8  0012               	return		;funcret
 24956  01CACA                     __end_of_set_temp_display_help:
 24957                           	opt callstack 0
 24958                           
 24959 ;; *************** function _set_display_info *****************
 24960 ;; Defined at:
 24961 ;;		line 200 in file "mconfig.c"
 24962 ;; Parameters:    Size  Location     Type
 24963 ;;  new_response    1  [STACK] const enum E16509
 24964 ;; Auto vars:     Size  Location     Type
 24965 ;;		None
 24966 ;; Return value:  Size  Location     Type
 24967 ;;                  1  [STACK] enum E16994
 24968 ;; Registers used:
 24969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 24970 ;; Tracked objects:
 24971 ;;		On entry : 0/1
 24972 ;;		On exit  : 0/0
 24973 ;;		Unchanged: 0/0
 24974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24979 ;;Total ram usage:        0 bytes
 24980 ;; Hardware stack levels used:    1
 24981 ;; Hardware stack levels required when called:   16
 24982 ;; This function calls:
 24983 ;;		_TimerDone
 24984 ;; This function is called by:
 24985 ;;		_main
 24986 ;;		_check_help
 24987 ;; This function uses a reentrant model
 24988 ;;
 24989                           
 24990                           	psect	text92
 24991  01C990                     __ptext92:
 24992                           	opt callstack 0
 24993  01C990                     _set_display_info:
 24994                           	opt callstack 14
 24995                           
 24996                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 24997                           
 24998                           ; BSR set to: 1
 24999                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25000                           ;incstack = 0
 25001  01C990  0E07               	movlw	7
 25002  01C992  6EE6               	movwf	postinc1,c
 25003  01C994  ECC3  F0E2         	call	_TimerDone	;wreg free
 25004  01C998  5001               	movf	btemp^0,w,c
 25005  01C99A  B4D8               	btfsc	status,2,c
 25006  01C99C  D006               	goto	l1747
 25007                           
 25008                           ;mconfig.c: 205:   old_info = V.response.info;
 25009  01C99E  0101               	movlb	1	; () banked
 25010  01C9A0  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 25011                           
 25012                           ; BSR set to: 1
 25013                           ;mconfig.c: 206:   V.response.info = new_response_info;
 25014                           ;stkvar	_new_response_info @ sp[(0)+-1]
 25015  01C9A2  0EFF               	movlw	-1
 25016  01C9A4  006F FF8C  F1AB    	movff	plusw1,_V+164	;volatile
 25017  01C9AA                     l1747:
 25018                           
 25019                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 25020  01C9AA  52E5               	movf	postdec1,f,c
 25021  01C9AC  0012               	return		;funcret
 25022  01C9AE                     __end_of_set_display_info:
 25023                           	opt callstack 0
 25024                           
 25025 ;; *************** function _mode_lamp_dim *****************
 25026 ;; Defined at:
 25027 ;;		line 13 in file "mconfig.c"
 25028 ;; Parameters:    Size  Location     Type
 25029 ;;  level           2  [STACK] const unsigned short 
 25030 ;; Auto vars:     Size  Location     Type
 25031 ;;		None
 25032 ;; Return value:  Size  Location     Type
 25033 ;;                  1  [STACK] void 
 25034 ;; Registers used:
 25035 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 25036 ;; Tracked objects:
 25037 ;;		On entry : 0/1
 25038 ;;		On exit  : 0/0
 25039 ;;		Unchanged: 0/0
 25040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25045 ;;Total ram usage:        0 bytes
 25046 ;; Hardware stack levels used:    1
 25047 ;; Hardware stack levels required when called:   16
 25048 ;; This function calls:
 25049 ;;		_PWM8_LoadDutyValue
 25050 ;; This function is called by:
 25051 ;;		_main
 25052 ;;		_check_help
 25053 ;; This function uses a reentrant model
 25054 ;;
 25055                           
 25056                           	psect	text93
 25057  01CA02                     __ptext93:
 25058                           	opt callstack 0
 25059  01CA02                     _mode_lamp_dim:
 25060                           	opt callstack 14
 25061                           
 25062                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 25063                           ;stkvar	_level @ sp[(0)+-2]
 25064                           
 25065                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25066                           ;incstack = 0
 25067  01CA02  0EFE               	movlw	-2
 25068  01CA04  006F FF8F FFE6     	movff	plusw1,postinc1
 25069  01CA0A  006F FF8F FFE6     	movff	plusw1,postinc1
 25070  01CA10  EC0D  F0E0         	call	_PWM8_LoadDutyValue	;wreg free
 25071                           
 25072                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 25073  01CA14  52E5               	movf	postdec1,f,c
 25074  01CA16  52E5               	movf	postdec1,f,c
 25075  01CA18  0012               	return		;funcret
 25076  01CA1A                     __end_of_mode_lamp_dim:
 25077                           	opt callstack 0
 25078                           
 25079 ;; *************** function _mode_lamp_bright *****************
 25080 ;; Defined at:
 25081 ;;		line 18 in file "mconfig.c"
 25082 ;; Parameters:    Size  Location     Type
 25083 ;;		None
 25084 ;; Auto vars:     Size  Location     Type
 25085 ;;		None
 25086 ;; Return value:  Size  Location     Type
 25087 ;;                  1  [STACK] void 
 25088 ;; Registers used:
 25089 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 25090 ;; Tracked objects:
 25091 ;;		On entry : 0/0
 25092 ;;		On exit  : 0/0
 25093 ;;		Unchanged: 0/0
 25094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25099 ;;Total ram usage:        0 bytes
 25100 ;; Hardware stack levels used:    1
 25101 ;; Hardware stack levels required when called:   16
 25102 ;; This function calls:
 25103 ;;		_PWM8_LoadDutyValue
 25104 ;; This function is called by:
 25105 ;;		_check_help
 25106 ;; This function uses a reentrant model
 25107 ;;
 25108                           
 25109                           	psect	text94
 25110  01CAE8                     __ptext94:
 25111                           	opt callstack 0
 25112  01CAE8                     _mode_lamp_bright:
 25113                           	opt callstack 13
 25114                           
 25115                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 25116                           
 25117                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25118                           ;incstack = 0
 25119  01CAE8  0E2C               	movlw	44
 25120  01CAEA  6EE6               	movwf	postinc1,c
 25121  01CAEC  0E01               	movlw	1
 25122  01CAEE  6EE6               	movwf	postinc1,c
 25123  01CAF0  EC0D  F0E0         	call	_PWM8_LoadDutyValue	;wreg free
 25124                           
 25125                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 25126  01CAF4  0012               	return		;funcret
 25127  01CAF6                     __end_of_mode_lamp_bright:
 25128                           	opt callstack 0
 25129                           
 25130 ;; *************** function _PWM8_LoadDutyValue *****************
 25131 ;; Defined at:
 25132 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 25133 ;; Parameters:    Size  Location     Type
 25134 ;;  dutyValue       2  [STACK] unsigned short 
 25135 ;; Auto vars:     Size  Location     Type
 25136 ;;		None
 25137 ;; Return value:  Size  Location     Type
 25138 ;;                  1  [STACK] void 
 25139 ;; Registers used:
 25140 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 25141 ;; Tracked objects:
 25142 ;;		On entry : 0/1
 25143 ;;		On exit  : 0/0
 25144 ;;		Unchanged: 0/0
 25145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25150 ;;Total ram usage:        0 bytes
 25151 ;; Hardware stack levels used:    1
 25152 ;; Hardware stack levels required when called:   15
 25153 ;; This function calls:
 25154 ;;		Nothing
 25155 ;; This function is called by:
 25156 ;;		_mode_lamp_dim
 25157 ;;		_mode_lamp_bright
 25158 ;; This function uses a reentrant model
 25159 ;;
 25160                           
 25161                           	psect	text95
 25162  01C01A                     __ptext95:
 25163                           	opt callstack 0
 25164  01C01A                     _PWM8_LoadDutyValue:
 25165                           	opt callstack 14
 25166                           
 25167                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 25168                           ;stkvar	_dutyValue @ sp[(0)+-2]
 25169                           
 25170                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25171                           ;incstack = 0
 25172  01C01A  0EFE               	movlw	-2
 25173  01C01C  006F FF8C  F00B    	movff	plusw1,btemp+10
 25174  01C022  0EFF               	movlw	-1
 25175  01C024  006F FF8C  F00C    	movff	plusw1,btemp+11
 25176  01C02A  90D8               	bcf	status,0,c
 25177  01C02C  320C               	rrcf	(btemp+11)^0,f,c
 25178  01C02E  320B               	rrcf	(btemp+10)^0,f,c
 25179  01C030  90D8               	bcf	status,0,c
 25180  01C032  320C               	rrcf	(btemp+11)^0,f,c
 25181  01C034  320B               	rrcf	(btemp+10)^0,f,c
 25182  01C036  500B               	movf	(btemp+10)^0,w,c
 25183  01C038  6E61               	movwf	97,c	;volatile
 25184                           
 25185                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 25186                           ;stkvar	_dutyValue @ sp[(0)+-2]
 25187  01C03A  0EFE               	movlw	-2
 25188  01C03C  006F FF8C  F00C    	movff	plusw1,btemp+11
 25189  01C042  0E03               	movlw	3
 25190  01C044  160C               	andwf	(btemp+11)^0,f,c
 25191  01C046  0E06               	movlw	6
 25192  01C048  6E01               	movwf	btemp^0,c
 25193  01C04A                     u9615:
 25194  01C04A  90D8               	bcf	status,0,c
 25195  01C04C  360C               	rlcf	(btemp+11)^0,f,c
 25196  01C04E  2E01               	decfsz	btemp^0,f,c
 25197  01C050  D7FC               	goto	u9615
 25198  01C052  500C               	movf	(btemp+11)^0,w,c
 25199  01C054  6E60               	movwf	96,c	;volatile
 25200                           
 25201                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 25202  01C056  52E5               	movf	postdec1,f,c
 25203  01C058  52E5               	movf	postdec1,f,c
 25204  01C05A  0012               	return		;funcret
 25205  01C05C                     __end_of_PWM8_LoadDutyValue:
 25206                           	opt callstack 0
 25207                           
 25208 ;; *************** function _help_button *****************
 25209 ;; Defined at:
 25210 ;;		line 26 in file "mconfig.c"
 25211 ;; Parameters:    Size  Location     Type
 25212 ;;		None
 25213 ;; Auto vars:     Size  Location     Type
 25214 ;;		None
 25215 ;; Return value:  Size  Location     Type
 25216 ;;                  1  [STACK] _Bool 
 25217 ;; Registers used:
 25218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25219 ;; Tracked objects:
 25220 ;;		On entry : 0/1
 25221 ;;		On exit  : 0/0
 25222 ;;		Unchanged: 0/0
 25223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25228 ;;Total ram usage:        0 bytes
 25229 ;; Hardware stack levels used:    1
 25230 ;; Hardware stack levels required when called:   16
 25231 ;; This function calls:
 25232 ;;		_StartTimer
 25233 ;;		_TimerDone
 25234 ;; This function is called by:
 25235 ;;		_check_help
 25236 ;; This function uses a reentrant model
 25237 ;;
 25238                           
 25239                           	psect	text96
 25240  01C214                     __ptext96:
 25241                           	opt callstack 0
 25242  01C214                     _help_button:
 25243                           	opt callstack 13
 25244                           
 25245                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 25246                           
 25247                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25248                           ;incstack = 0
 25249  01C214  B0CB               	btfsc	203,0,c	;volatile
 25250  01C216  D00C               	goto	l1690
 25251                           
 25252                           ;mconfig.c: 29:   V.help = 1;
 25253  01C218  0101               	movlb	1	; () banked
 25254  01C21A  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 25255                           
 25256                           ; BSR set to: 1
 25257                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 25258  01C21C  0E08               	movlw	8
 25259  01C21E  6EE6               	movwf	postinc1,c
 25260  01C220  ECC3  F0E2         	call	_TimerDone	;wreg free
 25261  01C224  5001               	movf	btemp^0,w,c
 25262  01C226  B4D8               	btfsc	status,2,c
 25263  01C228  D003               	goto	l1690
 25264                           
 25265                           ;mconfig.c: 31:    return 1;
 25266  01C22A  0E01               	movlw	1
 25267  01C22C  6E01               	movwf	btemp^0,c
 25268  01C22E  0012               	return	
 25269  01C230                     l1690:
 25270                           
 25271                           ;mconfig.c: 34:  if (!V.help)
 25272  01C230  0101               	movlb	1	; () banked
 25273  01C232  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 25274  01C234  D008               	goto	l10881
 25275                           
 25276                           ; BSR set to: 1
 25277                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 25278  01C236  0E2C               	movlw	44
 25279  01C238  6EE6               	movwf	postinc1,c
 25280  01C23A  0E01               	movlw	1
 25281  01C23C  6EE6               	movwf	postinc1,c
 25282  01C23E  0E08               	movlw	8
 25283  01C240  6EE6               	movwf	postinc1,c
 25284  01C242  EC6E  F0E0         	call	_StartTimer	;wreg free
 25285  01C246                     l10881:
 25286                           
 25287                           ;mconfig.c: 37:  return 0;
 25288  01C246  0E00               	movlw	0
 25289  01C248  6E01               	movwf	btemp^0,c
 25290                           
 25291                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 25292  01C24A  0012               	return		;funcret
 25293  01C24C                     __end_of_help_button:
 25294                           	opt callstack 0
 25295                           
 25296 ;; *************** function _TimerDone *****************
 25297 ;; Defined at:
 25298 ;;		line 20 in file "timers.c"
 25299 ;; Parameters:    Size  Location     Type
 25300 ;;  timer           1  [STACK] const unsigned char 
 25301 ;; Auto vars:     Size  Location     Type
 25302 ;;		None
 25303 ;; Return value:  Size  Location     Type
 25304 ;;                  1  [STACK] _Bool 
 25305 ;; Registers used:
 25306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 25307 ;; Tracked objects:
 25308 ;;		On entry : 0/1
 25309 ;;		On exit  : 0/0
 25310 ;;		Unchanged: 0/0
 25311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25316 ;;Total ram usage:        0 bytes
 25317 ;; Hardware stack levels used:    1
 25318 ;; Hardware stack levels required when called:   15
 25319 ;; This function calls:
 25320 ;;		Nothing
 25321 ;; This function is called by:
 25322 ;;		_main
 25323 ;;		_WaitMs
 25324 ;;		_help_button
 25325 ;;		_check_help
 25326 ;;		_set_display_info
 25327 ;;		_update_adc_result
 25328 ;;		_esr_check
 25329 ;; This function uses a reentrant model
 25330 ;;
 25331                           
 25332                           	psect	text97
 25333  01C586                     __ptext97:
 25334                           	opt callstack 0
 25335  01C586                     _TimerDone:
 25336                           	opt callstack 14
 25337                           
 25338                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25339                           ;incstack = 0
 25340  01C586  0004               	clrwdt		;# 
 25341                           
 25342                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 25343                           ;stkvar	_timer @ sp[(0)+-1]
 25344  01C588  0EFF               	movlw	-1
 25345  01C58A  50E3               	movf	plusw1,w,c
 25346  01C58C  0D02               	mullw	2
 25347  01C58E  0E7D               	movlw	low _tickCount
 25348  01C590  24F3               	addwf	243,w,c
 25349  01C592  6ED9               	movwf	fsr2l,c
 25350  01C594  0E02               	movlw	high _tickCount
 25351  01C596  20F4               	addwfc	prodh,w,c
 25352  01C598  6EDA               	movwf	fsr2h,c
 25353  01C59A  50DE               	movf	postinc2,w,c
 25354  01C59C  10DE               	iorwf	postinc2,w,c
 25355  01C59E  A4D8               	btfss	status,2,c
 25356  01C5A0  D002               	goto	l10107
 25357                           
 25358                           ;timers.c: 24:   return 1;
 25359  01C5A2  0E01               	movlw	1
 25360  01C5A4  D001               	goto	L30
 25361  01C5A6                     l10107:
 25362                           
 25363                           ;timers.c: 26:  return 0;
 25364  01C5A6  0E00               	movlw	0
 25365  01C5A8                     L30:
 25366  01C5A8  6E01               	movwf	btemp^0,c
 25367                           
 25368                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 25369  01C5AA  52E5               	movf	postdec1,f,c
 25370  01C5AC  0012               	return		;funcret
 25371  01C5AE                     __end_of_TimerDone:
 25372                           	opt callstack 0
 25373                           
 25374 ;; *************** function _StartTimer *****************
 25375 ;; Defined at:
 25376 ;;		line 12 in file "timers.c"
 25377 ;; Parameters:    Size  Location     Type
 25378 ;;  timer           1  [STACK] const unsigned char 
 25379 ;;  count           2  [STACK] const unsigned short 
 25380 ;; Auto vars:     Size  Location     Type
 25381 ;;		None
 25382 ;; Return value:  Size  Location     Type
 25383 ;;                  1  [STACK] void 
 25384 ;; Registers used:
 25385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25386 ;; Tracked objects:
 25387 ;;		On entry : 0/0
 25388 ;;		On exit  : 0/0
 25389 ;;		Unchanged: 0/0
 25390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25395 ;;Total ram usage:        0 bytes
 25396 ;; Hardware stack levels used:    1
 25397 ;; Hardware stack levels required when called:   15
 25398 ;; This function calls:
 25399 ;;		Nothing
 25400 ;; This function is called by:
 25401 ;;		_main
 25402 ;;		_WaitMs
 25403 ;;		_help_button
 25404 ;;		_check_help
 25405 ;;		_update_adc_result
 25406 ;;		_calc_bsoc
 25407 ;;		_esr_check
 25408 ;; This function uses a reentrant model
 25409 ;;
 25410                           
 25411                           	psect	text98
 25412  01C0DC                     __ptext98:
 25413                           	opt callstack 0
 25414  01C0DC                     _StartTimer:
 25415                           	opt callstack 0
 25416                           
 25417                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 25418                           ;stkvar	_count @ sp[(0)+-3]
 25419                           
 25420                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25421                           ;incstack = 0
 25422 ;; hardware stack exceeded
 25423  01C0DC  0EFD               	movlw	-3
 25424  01C0DE  006F FF8C  F00B    	movff	plusw1,btemp+10
 25425  01C0E4  0EFE               	movlw	-2
 25426  01C0E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 25427  01C0EC  90D8               	bcf	status,0,c
 25428  01C0EE  340B               	rlcf	(btemp+10)^0,w,c
 25429  01C0F0  6E09               	movwf	(btemp+8)^0,c
 25430  01C0F2  340C               	rlcf	(btemp+11)^0,w,c
 25431  01C0F4  6E0A               	movwf	(btemp+9)^0,c
 25432                           
 25433                           ;stkvar	_timer @ sp[(0)+-1]
 25434  01C0F6  0EFF               	movlw	-1
 25435  01C0F8  50E3               	movf	plusw1,w,c
 25436  01C0FA  0D02               	mullw	2
 25437  01C0FC  0E7D               	movlw	low _tickCount
 25438  01C0FE  24F3               	addwf	243,w,c
 25439  01C100  6ED9               	movwf	fsr2l,c
 25440  01C102  0E02               	movlw	high _tickCount
 25441  01C104  20F4               	addwfc	prodh,w,c
 25442  01C106  6EDA               	movwf	fsr2h,c
 25443  01C108  0060  F027  FFDE   	movff	btemp+8,postinc2
 25444  01C10E  0060  F02B  FFDD   	movff	btemp+9,postdec2
 25445                           
 25446                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 25447  01C114  52E5               	movf	postdec1,f,c
 25448  01C116  52E5               	movf	postdec1,f,c
 25449  01C118  52E5               	movf	postdec1,f,c
 25450  01C11A  0012               	return		;funcret
 25451  01C11C                     __end_of_StartTimer:
 25452                           	opt callstack 0
 25453                           
 25454 ;; *************** function _display_info *****************
 25455 ;; Defined at:
 25456 ;;		line 190 in file "mconfig.c"
 25457 ;; Parameters:    Size  Location     Type
 25458 ;;		None
 25459 ;; Auto vars:     Size  Location     Type
 25460 ;;		None
 25461 ;; Return value:  Size  Location     Type
 25462 ;;                  1  [STACK] enum E16509
 25463 ;; Registers used:
 25464 ;;		btemp
 25465 ;; Tracked objects:
 25466 ;;		On entry : 0/1
 25467 ;;		On exit  : 0/0
 25468 ;;		Unchanged: 0/0
 25469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25474 ;;Total ram usage:        0 bytes
 25475 ;; Hardware stack levels used:    1
 25476 ;; Hardware stack levels required when called:   15
 25477 ;; This function calls:
 25478 ;;		Nothing
 25479 ;; This function is called by:
 25480 ;;		_check_help
 25481 ;; This function uses a reentrant model
 25482 ;;
 25483                           
 25484                           	psect	text99
 25485  01CB6A                     __ptext99:
 25486                           	opt callstack 0
 25487  01CB6A                     _display_info:
 25488                           	opt callstack 14
 25489                           
 25490                           ;mconfig.c: 192:  return V.response.info;
 25491                           
 25492                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25493                           ;incstack = 0
 25494  01CB6A  0060  F6AC  F001   	movff	_V+164,btemp	;volatile
 25495                           
 25496                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 25497  01CB70  0012               	return		;funcret
 25498  01CB72                     __end_of_display_info:
 25499                           	opt callstack 0
 25500                           
 25501 ;; *************** function _display_help *****************
 25502 ;; Defined at:
 25503 ;;		line 195 in file "mconfig.c"
 25504 ;; Parameters:    Size  Location     Type
 25505 ;;		None
 25506 ;; Auto vars:     Size  Location     Type
 25507 ;;		None
 25508 ;; Return value:  Size  Location     Type
 25509 ;;                  1  [STACK] enum E16509
 25510 ;; Registers used:
 25511 ;;		btemp
 25512 ;; Tracked objects:
 25513 ;;		On entry : 3F/1
 25514 ;;		On exit  : 0/0
 25515 ;;		Unchanged: 0/0
 25516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25521 ;;Total ram usage:        0 bytes
 25522 ;; Hardware stack levels used:    1
 25523 ;; Hardware stack levels required when called:   15
 25524 ;; This function calls:
 25525 ;;		Nothing
 25526 ;; This function is called by:
 25527 ;;		_check_help
 25528 ;; This function uses a reentrant model
 25529 ;;
 25530                           
 25531                           	psect	text100
 25532  01CB72                     __ptext100:
 25533                           	opt callstack 0
 25534  01CB72                     _display_help:
 25535                           	opt callstack 14
 25536                           
 25537                           ;mconfig.c: 197:  return V.response.help_temp;
 25538                           
 25539                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25540                           ;incstack = 0
 25541  01CB72  0060  F6B0  F001   	movff	_V+165,btemp	;volatile
 25542                           
 25543                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 25544  01CB78  0012               	return		;funcret
 25545  01CB7A                     __end_of_display_help:
 25546                           	opt callstack 0
 25547                           
 25548 ;; *************** function _check_enter_button *****************
 25549 ;; Defined at:
 25550 ;;		line 49 in file "hid.c"
 25551 ;; Parameters:    Size  Location     Type
 25552 ;;  h               2  [STACK] PTR struct H_data
 25553 ;;		 -> H(9), 
 25554 ;; Auto vars:     Size  Location     Type
 25555 ;;		None
 25556 ;; Return value:  Size  Location     Type
 25557 ;;                  1  [STACK] _Bool 
 25558 ;; Registers used:
 25559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 25560 ;; Tracked objects:
 25561 ;;		On entry : 0/0
 25562 ;;		On exit  : 0/0
 25563 ;;		Unchanged: 0/0
 25564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25569 ;;Total ram usage:        0 bytes
 25570 ;; Hardware stack levels used:    1
 25571 ;; Hardware stack levels required when called:   15
 25572 ;; This function calls:
 25573 ;;		Nothing
 25574 ;; This function is called by:
 25575 ;;		_main
 25576 ;; This function uses a reentrant model
 25577 ;;
 25578                           
 25579                           	psect	text101
 25580  01B790                     __ptext101:
 25581                           	opt callstack 0
 25582  01B790                     _check_enter_button:
 25583                           	opt callstack 15
 25584                           
 25585                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 25586                           ;stkvar	_h @ sp[(0)+-2]
 25587                           
 25588                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25589                           ;incstack = 0
 25590  01B790  0EFE               	movlw	-2
 25591  01B792  006F FF8C  F00B    	movff	plusw1,btemp+10
 25592  01B798  0EFF               	movlw	-1
 25593  01B79A  006F FF8C  F00C    	movff	plusw1,btemp+11
 25594  01B7A0  0E04               	movlw	4
 25595  01B7A2  240B               	addwf	(btemp+10)^0,w,c
 25596  01B7A4  6ED9               	movwf	fsr2l,c
 25597  01B7A6  0E00               	movlw	0
 25598  01B7A8  200C               	addwfc	(btemp+11)^0,w,c
 25599  01B7AA  6EDA               	movwf	fsr2h,c
 25600  01B7AC  50DF               	movf	indf2,w,c
 25601  01B7AE  A4D8               	btfss	status,2,c
 25602  01B7B0  D023               	goto	l13683
 25603                           
 25604                           ;stkvar	_h @ sp[(0)+-2]
 25605  01B7B2  0EFE               	movlw	-2
 25606  01B7B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 25607  01B7BA  0EFF               	movlw	-1
 25608  01B7BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 25609  01B7C2  0E05               	movlw	5
 25610  01B7C4  240B               	addwf	(btemp+10)^0,w,c
 25611  01B7C6  6ED9               	movwf	fsr2l,c
 25612  01B7C8  0E00               	movlw	0
 25613  01B7CA  200C               	addwfc	(btemp+11)^0,w,c
 25614  01B7CC  6EDA               	movwf	fsr2h,c
 25615  01B7CE  50DF               	movf	indf2,w,c
 25616  01B7D0  A4D8               	btfss	status,2,c
 25617  01B7D2  D012               	goto	l13683
 25618                           
 25619                           ;hid.c: 52:   h->wait_enter = 1;
 25620                           ;stkvar	_h @ sp[(0)+-2]
 25621  01B7D4  0EFE               	movlw	-2
 25622  01B7D6  006F FF8C  F00B    	movff	plusw1,btemp+10
 25623  01B7DC  0EFF               	movlw	-1
 25624  01B7DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 25625  01B7E4  0E04               	movlw	4
 25626  01B7E6  240B               	addwf	(btemp+10)^0,w,c
 25627  01B7E8  6ED9               	movwf	fsr2l,c
 25628  01B7EA  0E00               	movlw	0
 25629  01B7EC  200C               	addwfc	(btemp+11)^0,w,c
 25630  01B7EE  6EDA               	movwf	fsr2h,c
 25631  01B7F0  0E01               	movlw	1
 25632  01B7F2  6EDF               	movwf	indf2,c
 25633                           
 25634                           ;hid.c: 53:   return 1;
 25635  01B7F4  0E01               	movlw	1
 25636  01B7F6  D001               	goto	L31
 25637  01B7F8                     l13683:
 25638                           
 25639                           ;hid.c: 55:  return 0;
 25640  01B7F8  0E00               	movlw	0
 25641  01B7FA                     L31:
 25642  01B7FA  6E01               	movwf	btemp^0,c
 25643                           
 25644                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 25645  01B7FC  52E5               	movf	postdec1,f,c
 25646  01B7FE  52E5               	movf	postdec1,f,c
 25647  01B800  0012               	return		;funcret
 25648  01B802                     __end_of_check_enter_button:
 25649                           	opt callstack 0
 25650                           
 25651 ;; *************** function _calc_ror_data *****************
 25652 ;; Defined at:
 25653 ;;		line 102 in file "mbmc.c"
 25654 ;; Parameters:    Size  Location     Type
 25655 ;;		None
 25656 ;; Auto vars:     Size  Location     Type
 25657 ;;		None
 25658 ;; Return value:  Size  Location     Type
 25659 ;;                  1  [STACK] void 
 25660 ;; Registers used:
 25661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25662 ;; Tracked objects:
 25663 ;;		On entry : 0/39
 25664 ;;		On exit  : 0/0
 25665 ;;		Unchanged: 0/0
 25666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25671 ;;Total ram usage:        0 bytes
 25672 ;; Hardware stack levels used:    1
 25673 ;; Hardware stack levels required when called:   18
 25674 ;; This function calls:
 25675 ;;		___flge
 25676 ;;		___flsub
 25677 ;;		_conv_raw_result
 25678 ;;		_fabsf
 25679 ;; This function is called by:
 25680 ;;		_main
 25681 ;; This function uses a reentrant model
 25682 ;;
 25683                           
 25684                           	psect	text102
 25685  019170                     __ptext102:
 25686                           	opt callstack 0
 25687  019170                     _calc_ror_data:
 25688                           	opt callstack 12
 25689                           
 25690                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 25691                           
 25692                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25693                           ;incstack = 0
 25694  019170  0060  F1A3  FFE6   	movff	calc_ror_data@bcror,postinc1
 25695  019176  0060  F1A7  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 25696  01917C  0060  F1AB  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 25697  019182  0060  F1AF  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 25698  019188  0E00               	movlw	0
 25699  01918A  6EE6               	movwf	postinc1,c
 25700  01918C  0E00               	movlw	0
 25701  01918E  6EE6               	movwf	postinc1,c
 25702  019190  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 25703  019194  0060  F007  FFE6   	movff	btemp,postinc1
 25704  01919A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25705  0191A0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25706  0191A6  0060  F013  FFE6   	movff	btemp+3,postinc1
 25707  0191AC  ECC8  F0DF         	call	___flsub	;wreg free
 25708  0191B0  0060  F007  FFE6   	movff	btemp,postinc1
 25709  0191B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25710  0191BC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25711  0191C2  0060  F013  FFE6   	movff	btemp+3,postinc1
 25712  0191C8  EC30  F0D7         	call	_fabsf	;wreg free
 25713  0191CC  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 25714  0191D2  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 25715  0191D8  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 25716  0191DE  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 25717                           
 25718                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 25719  0191E4  0E00               	movlw	0
 25720  0191E6  6EE6               	movwf	postinc1,c
 25721  0191E8  0E00               	movlw	0
 25722  0191EA  6EE6               	movwf	postinc1,c
 25723  0191EC  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 25724  0191F0  0060  F004  F068   	movff	btemp,calc_ror_data@bcror
 25725  0191F6  0060  F008  F069   	movff	btemp+1,calc_ror_data@bcror+1
 25726  0191FC  0060  F00C  F06A   	movff	btemp+2,calc_ror_data@bcror+2
 25727  019202  0060  F010  F06B   	movff	btemp+3,calc_ror_data@bcror+3
 25728                           
 25729                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 25730  019208  0060  F1B3  FFE6   	movff	calc_ror_data@bvror,postinc1
 25731  01920E  0060  F1B7  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 25732  019214  0060  F1BB  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 25733  01921A  0060  F1BF  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 25734  019220  0E00               	movlw	0
 25735  019222  6EE6               	movwf	postinc1,c
 25736  019224  0E04               	movlw	4
 25737  019226  6EE6               	movwf	postinc1,c
 25738  019228  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 25739  01922C  0060  F007  FFE6   	movff	btemp,postinc1
 25740  019232  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25741  019238  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25742  01923E  0060  F013  FFE6   	movff	btemp+3,postinc1
 25743  019244  ECC8  F0DF         	call	___flsub	;wreg free
 25744  019248  0060  F007  FFE6   	movff	btemp,postinc1
 25745  01924E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25746  019254  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25747  01925A  0060  F013  FFE6   	movff	btemp+3,postinc1
 25748  019260  EC30  F0D7         	call	_fabsf	;wreg free
 25749  019264  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 25750  01926A  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 25751  019270  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 25752  019276  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 25753                           
 25754                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 25755  01927C  0EE7               	movlw	231
 25756  01927E  6EE6               	movwf	postinc1,c
 25757  019280  0E1D               	movlw	29
 25758  019282  6EE6               	movwf	postinc1,c
 25759  019284  0EA7               	movlw	167
 25760  019286  6EE6               	movwf	postinc1,c
 25761  019288  0E3B               	movlw	59
 25762  01928A  6EE6               	movwf	postinc1,c
 25763  01928C  EE21  F36B         	lfsr	2,_C+108	;volatile
 25764  019290  006F FF7B FFE6     	movff	postinc2,postinc1
 25765  019296  006F FF7B FFE6     	movff	postinc2,postinc1
 25766  01929C  006F FF7B FFE6     	movff	postinc2,postinc1
 25767  0192A2  006F FF7B FFE6     	movff	postinc2,postinc1
 25768  0192A8  ECF4  F0CA         	call	___flge	;wreg free
 25769  0192AC  B001               	btfsc	btemp& (0+255),0,c
 25770  0192AE  D010               	goto	l11387
 25771                           
 25772                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 25773  0192B0  0EB0               	movlw	176
 25774  0192B2  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 25775  0192B8  0E03               	movlw	3
 25776  0192BA  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 25777  0192C0  0E67               	movlw	103
 25778  0192C2  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 25779  0192C8  0E3C               	movlw	60
 25780  0192CA  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 25781  0192D0                     l11387:
 25782                           
 25783                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 25784  0192D0  0E00               	movlw	0
 25785  0192D2  6EE6               	movwf	postinc1,c
 25786  0192D4  0E04               	movlw	4
 25787  0192D6  6EE6               	movwf	postinc1,c
 25788  0192D8  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 25789  0192DC  0060  F004  F06C   	movff	btemp,calc_ror_data@bvror
 25790  0192E2  0060  F008  F06D   	movff	btemp+1,calc_ror_data@bvror+1
 25791  0192E8  0060  F00C  F06E   	movff	btemp+2,calc_ror_data@bvror+2
 25792  0192EE  0060  F010  F06F   	movff	btemp+3,calc_ror_data@bvror+3
 25793                           
 25794                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 25795  0192F4  0012               	return		;funcret
 25796  0192F6                     __end_of_calc_ror_data:
 25797                           	opt callstack 0
 25798                           
 25799 ;; *************** function _fabsf *****************
 25800 ;; Defined at:
 25801 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 25802 ;; Parameters:    Size  Location     Type
 25803 ;;  x               4  [STACK] float 
 25804 ;; Auto vars:     Size  Location     Type
 25805 ;;  u               4  [STACK] struct .
 25806 ;; Return value:  Size  Location     Type
 25807 ;;                  4  [STACK] float 
 25808 ;; Registers used:
 25809 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 25810 ;; Tracked objects:
 25811 ;;		On entry : 0/0
 25812 ;;		On exit  : 0/0
 25813 ;;		Unchanged: 0/0
 25814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25819 ;;Total ram usage:        0 bytes
 25820 ;; Hardware stack levels used:    1
 25821 ;; Hardware stack levels required when called:   15
 25822 ;; This function calls:
 25823 ;;		Nothing
 25824 ;; This function is called by:
 25825 ;;		_main
 25826 ;;		_calc_ror_data
 25827 ;;		_calc_bsoc
 25828 ;;		_esr_check
 25829 ;; This function uses a reentrant model
 25830 ;;
 25831                           
 25832                           	psect	text103
 25833  01AE60                     __ptext103:
 25834                           	opt callstack 0
 25835  01AE60                     _fabsf:
 25836                           	opt callstack 0
 25837                           
 25838                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25839  01AE60  52E6               	movf	postinc1,f,c
 25840  01AE62  52E6               	movf	postinc1,f,c
 25841  01AE64  52E6               	movf	postinc1,f,c
 25842  01AE66  52E6               	movf	postinc1,f,c
 25843                           
 25844                           ;incstack = 0
 25845 ;; hardware stack exceeded
 25846  01AE68  0060  F180  F009   	movff	fabsf@F463,btemp+8
 25847  01AE6E  0060  F184  F00A   	movff	fabsf@F463+1,btemp+9
 25848  01AE74  0060  F188  F00B   	movff	fabsf@F463+2,btemp+10
 25849  01AE7A  0060  F18C  F00C   	movff	fabsf@F463+3,btemp+11
 25850                           
 25851                           ;stkvar	_u @ sp[(-4)+0]
 25852  01AE80  0EFC               	movlw	-4
 25853  01AE82  0060  F027  FFE3   	movff	btemp+8,plusw1
 25854  01AE88  0EFD               	movlw	-3
 25855  01AE8A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25856  01AE90  0EFE               	movlw	-2
 25857  01AE92  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25858  01AE98  0EFF               	movlw	-1
 25859  01AE9A  0060  F033  FFE3   	movff	btemp+11,plusw1
 25860                           
 25861                           ;stkvar	_x @ sp[(-4)+-4]
 25862  01AEA0  0EF8               	movlw	-8
 25863  01AEA2  006F FF8C  F009    	movff	plusw1,btemp+8
 25864  01AEA8  0EF9               	movlw	-7
 25865  01AEAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 25866  01AEB0  0EFA               	movlw	-6
 25867  01AEB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 25868  01AEB8  0EFB               	movlw	-5
 25869  01AEBA  006F FF8C  F00C    	movff	plusw1,btemp+11
 25870                           
 25871                           ;stkvar	_u @ sp[(-4)+0]
 25872  01AEC0  0EFC               	movlw	-4
 25873  01AEC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 25874  01AEC8  0EFD               	movlw	-3
 25875  01AECA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25876  01AED0  0EFE               	movlw	-2
 25877  01AED2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25878  01AED8  0EFF               	movlw	-1
 25879  01AEDA  0060  F033  FFE3   	movff	btemp+11,plusw1
 25880                           
 25881                           ;stkvar	_u @ sp[(-4)+0]
 25882  01AEE0  0EFF               	movlw	-1
 25883  01AEE2  9EE3               	bcf	plusw1,7,c
 25884                           
 25885                           ;stkvar	_u @ sp[(-4)+0]
 25886  01AEE4  0EFC               	movlw	-4
 25887  01AEE6  006F FF8C  F001    	movff	plusw1,btemp
 25888  01AEEC  0EFD               	movlw	-3
 25889  01AEEE  006F FF8C  F002    	movff	plusw1,btemp+1
 25890  01AEF4  0EFE               	movlw	-2
 25891  01AEF6  006F FF8C  F003    	movff	plusw1,btemp+2
 25892  01AEFC  0EFF               	movlw	-1
 25893  01AEFE  006F FF8C  F004    	movff	plusw1,btemp+3
 25894                           
 25895                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 25896  01AF04  0EF8               	movlw	248
 25897  01AF06  26E1               	addwf	fsr1l,f,c
 25898  01AF08  0EFF               	movlw	255
 25899  01AF0A  22E2               	addwfc	fsr1h,f,c
 25900  01AF0C  0012               	return		;funcret
 25901  01AF0E                     __end_of_fabsf:
 25902                           	opt callstack 0
 25903                           
 25904 ;; *************** function _conv_raw_result *****************
 25905 ;; Defined at:
 25906 ;;		line 123 in file "daq.c"
 25907 ;; Parameters:    Size  Location     Type
 25908 ;;  chan            1  [STACK] const enum E16590
 25909 ;;  to_what         1  [STACK] const enum E16652
 25910 ;; Auto vars:     Size  Location     Type
 25911 ;;		None
 25912 ;; Return value:  Size  Location     Type
 25913 ;;                  4  [STACK] float 
 25914 ;; Registers used:
 25915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25916 ;; Tracked objects:
 25917 ;;		On entry : 0/39
 25918 ;;		On exit  : 0/0
 25919 ;;		Unchanged: 0/0
 25920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25925 ;;Total ram usage:        0 bytes
 25926 ;; Hardware stack levels used:    1
 25927 ;; Hardware stack levels required when called:   17
 25928 ;; This function calls:
 25929 ;;		___fldiv
 25930 ;;		___flmul
 25931 ;;		___flsub
 25932 ;;		___xxtofl
 25933 ;;		_get_raw_result
 25934 ;;		_nanf
 25935 ;; This function is called by:
 25936 ;;		_main
 25937 ;;		_convert_adc_data
 25938 ;;		_calc_ror_data
 25939 ;;		_check_day_time
 25940 ;;		_init_bsoc
 25941 ;;		_esr_check
 25942 ;; This function uses a reentrant model
 25943 ;;
 25944                           
 25945                           	psect	text104
 25946  0153A0                     __ptext104:
 25947                           	opt callstack 0
 25948  0153A0                     _conv_raw_result:
 25949                           	opt callstack 0
 25950                           
 25951                           ;daq.c: 123: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 124: {;daq.c: 126:  switch (to_what) {
 25952                           
 25953                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25954                           ;incstack = 0
 25955 ;; hardware stack exceeded
 25956  0153A0  D24A               	goto	l10089
 25957  0153A2                     l10035:
 25958                           
 25959                           ;daq.c: 128:   if (!(0b0011110001110111 >> chan & 0x1))
 25960                           ;stkvar	_chan @ sp[(0)+-1]
 25961  0153A2  0EFF               	movlw	-1
 25962  0153A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 25963  0153AA  0E77               	movlw	119
 25964  0153AC  6E09               	movwf	(btemp+8)^0,c
 25965  0153AE  0E3C               	movlw	60
 25966  0153B0  6E0A               	movwf	(btemp+9)^0,c
 25967  0153B2  2A0C               	incf	(btemp+11)^0,f,c
 25968  0153B4  D003               	goto	u9334
 25969  0153B6                     u9335:
 25970  0153B6  340A               	rlcf	(btemp+9)^0,w,c
 25971  0153B8  320A               	rrcf	(btemp+9)^0,f,c
 25972  0153BA  3209               	rrcf	(btemp+8)^0,f,c
 25973  0153BC                     u9334:
 25974  0153BC  2E0C               	decfsz	(btemp+11)^0,f,c
 25975  0153BE  D7FB               	goto	u9335
 25976  0153C0  B009               	btfsc	(btemp+8)^0,0,c
 25977  0153C2  D007               	goto	l10041
 25978                           
 25979                           ;daq.c: 129:    return nanf("");
 25980  0153C4  0E77               	movlw	low (STR_78+126)
 25981  0153C6  6EE6               	movwf	postinc1,c
 25982  0153C8  0EFB               	movlw	high (STR_78+126)
 25983  0153CA  6EE6               	movwf	postinc1,c
 25984  0153CC  EC6A  F0DD         	call	_nanf	;wreg free
 25985  0153D0  D242               	goto	l1831
 25986  0153D2                     l10041:
 25987                           
 25988                           ;daq.c: 131:   if (0b0000000000000011 >> chan & 0x1) {
 25989                           ;stkvar	_chan @ sp[(0)+-1]
 25990  0153D2  0EFF               	movlw	-1
 25991  0153D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 25992  0153DA  0E03               	movlw	3
 25993  0153DC  6E09               	movwf	(btemp+8)^0,c
 25994  0153DE  0E00               	movlw	0
 25995  0153E0  6E0A               	movwf	(btemp+9)^0,c
 25996  0153E2  2A0C               	incf	(btemp+11)^0,f,c
 25997  0153E4  D003               	goto	u9354
 25998  0153E6                     u9355:
 25999  0153E6  340A               	rlcf	(btemp+9)^0,w,c
 26000  0153E8  320A               	rrcf	(btemp+9)^0,f,c
 26001  0153EA  3209               	rrcf	(btemp+8)^0,f,c
 26002  0153EC                     u9354:
 26003  0153EC  2E0C               	decfsz	(btemp+11)^0,f,c
 26004  0153EE  D7FB               	goto	u9355
 26005  0153F0  A009               	btfss	(btemp+8)^0,0,c
 26006  0153F2  D0F3               	goto	l10055
 26007                           
 26008                           ;daq.c: 132:    if (0b0000000000000001 >> chan & 0x1) {
 26009                           ;stkvar	_chan @ sp[(0)+-1]
 26010  0153F4  0EFF               	movlw	-1
 26011  0153F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 26012  0153FC  0E01               	movlw	1
 26013  0153FE  6E09               	movwf	(btemp+8)^0,c
 26014  015400  0E00               	movlw	0
 26015  015402  6E0A               	movwf	(btemp+9)^0,c
 26016  015404  2A0C               	incf	(btemp+11)^0,f,c
 26017  015406  D003               	goto	u9374
 26018  015408                     u9375:
 26019  015408  340A               	rlcf	(btemp+9)^0,w,c
 26020  01540A  320A               	rrcf	(btemp+9)^0,f,c
 26021  01540C  3209               	rrcf	(btemp+8)^0,f,c
 26022  01540E                     u9374:
 26023  01540E  2E0C               	decfsz	(btemp+11)^0,f,c
 26024  015410  D7FB               	goto	u9375
 26025  015412  A009               	btfss	(btemp+8)^0,0,c
 26026  015414  D071               	goto	l10051
 26027                           
 26028                           ;daq.c: 133:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 26029  015416  0060  F367  FFE6   	movff	_R+42,postinc1
 26030  01541C  0060  F36B  FFE6   	movff	_R+43,postinc1
 26031  015422  0060  F36F  FFE6   	movff	_R+44,postinc1
 26032  015428  0060  F373  FFE6   	movff	_R+45,postinc1
 26033  01542E  0060  F354  F009   	movff	_R+38,btemp+8	;volatile
 26034  015434  0060  F358  F00A   	movff	_R+39,btemp+9	;volatile
 26035  01543A  0E00               	movlw	0
 26036  01543C  BE0A               	btfsc	(btemp+9)^0,7,c
 26037  01543E  0EFF               	movlw	255
 26038  015440  6E0B               	movwf	(btemp+10)^0,c
 26039  015442  6E0C               	movwf	(btemp+11)^0,c
 26040  015444  0060  F027  FFE6   	movff	btemp+8,postinc1
 26041  01544A  0060  F02B  FFE6   	movff	btemp+9,postinc1
 26042  015450  0060  F02F  FFE6   	movff	btemp+10,postinc1
 26043  015456  0060  F033  FFE6   	movff	btemp+11,postinc1
 26044  01545C  0E01               	movlw	1
 26045  01545E  6EE6               	movwf	postinc1,c
 26046  015460  EC3D  F0C5         	call	___xxtofl	;wreg free
 26047  015464  0060  F007  FFE6   	movff	btemp,postinc1
 26048  01546A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26049  015470  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26050  015476  0060  F013  FFE6   	movff	btemp+3,postinc1
 26051                           
 26052                           ;stkvar	_chan @ sp[(-8)+-1]
 26053  01547C  0EF7               	movlw	-9
 26054  01547E  50E3               	movf	plusw1,w,c
 26055  015480  6EE6               	movwf	postinc1,c
 26056  015482  ECD7  F0E4         	call	_get_raw_result	;wreg free
 26057  015486  0060  F004  F00B   	movff	btemp,btemp+10
 26058  01548C  0060  F008  F00C   	movff	btemp+1,btemp+11
 26059  015492  500B               	movf	(btemp+10)^0,w,c
 26060  015494  6E05               	movwf	(btemp+4)^0,c
 26061  015496  500C               	movf	(btemp+11)^0,w,c
 26062  015498  6E06               	movwf	(btemp+5)^0,c
 26063  01549A  6A07               	clrf	(btemp+6)^0,c
 26064  01549C  6A08               	clrf	(btemp+7)^0,c
 26065  01549E  0060  F017  FFE6   	movff	btemp+4,postinc1
 26066  0154A4  0060  F01B  FFE6   	movff	btemp+5,postinc1
 26067  0154AA  0060  F01F  FFE6   	movff	btemp+6,postinc1
 26068  0154B0  0060  F023  FFE6   	movff	btemp+7,postinc1
 26069  0154B6  0E00               	movlw	0
 26070  0154B8  6EE6               	movwf	postinc1,c
 26071  0154BA  EC3D  F0C5         	call	___xxtofl	;wreg free
 26072  0154BE  0060  F007  FFE6   	movff	btemp,postinc1
 26073  0154C4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26074  0154CA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26075  0154D0  0060  F013  FFE6   	movff	btemp+3,postinc1
 26076  0154D6  ECC8  F0DF         	call	___flsub	;wreg free
 26077  0154DA  0060  F007  FFE6   	movff	btemp,postinc1
 26078  0154E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26079  0154E6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26080  0154EC  0060  F013  FFE6   	movff	btemp+3,postinc1
 26081  0154F2  EC20  F09F         	call	___flmul	;wreg free
 26082  0154F6  D1AF               	goto	l1831
 26083  0154F8                     l10051:
 26084                           
 26085                           ;daq.c: 135:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 26086  0154F8  0060  F377  FFE6   	movff	_R+46,postinc1
 26087  0154FE  0060  F37B  FFE6   	movff	_R+47,postinc1
 26088  015504  0060  F37F  FFE6   	movff	_R+48,postinc1
 26089  01550A  0060  F383  FFE6   	movff	_R+49,postinc1
 26090  015510  0060  F35C  F009   	movff	_R+40,btemp+8	;volatile
 26091  015516  0060  F360  F00A   	movff	_R+41,btemp+9	;volatile
 26092  01551C  0E00               	movlw	0
 26093  01551E  BE0A               	btfsc	(btemp+9)^0,7,c
 26094  015520  0EFF               	movlw	255
 26095  015522  6E0B               	movwf	(btemp+10)^0,c
 26096  015524  6E0C               	movwf	(btemp+11)^0,c
 26097  015526  0060  F027  FFE6   	movff	btemp+8,postinc1
 26098  01552C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 26099  015532  0060  F02F  FFE6   	movff	btemp+10,postinc1
 26100  015538  0060  F033  FFE6   	movff	btemp+11,postinc1
 26101  01553E  0E01               	movlw	1
 26102  015540  6EE6               	movwf	postinc1,c
 26103  015542  EC3D  F0C5         	call	___xxtofl	;wreg free
 26104  015546  0060  F007  FFE6   	movff	btemp,postinc1
 26105  01554C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26106  015552  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26107  015558  0060  F013  FFE6   	movff	btemp+3,postinc1
 26108                           
 26109                           ;stkvar	_chan @ sp[(-8)+-1]
 26110  01555E  0EF7               	movlw	-9
 26111  015560  50E3               	movf	plusw1,w,c
 26112  015562  6EE6               	movwf	postinc1,c
 26113  015564  ECD7  F0E4         	call	_get_raw_result	;wreg free
 26114  015568  0060  F004  F00B   	movff	btemp,btemp+10
 26115  01556E  0060  F008  F00C   	movff	btemp+1,btemp+11
 26116  015574  500B               	movf	(btemp+10)^0,w,c
 26117  015576  6E05               	movwf	(btemp+4)^0,c
 26118  015578  500C               	movf	(btemp+11)^0,w,c
 26119  01557A  6E06               	movwf	(btemp+5)^0,c
 26120  01557C  6A07               	clrf	(btemp+6)^0,c
 26121  01557E  6A08               	clrf	(btemp+7)^0,c
 26122  015580  0060  F017  FFE6   	movff	btemp+4,postinc1
 26123  015586  0060  F01B  FFE6   	movff	btemp+5,postinc1
 26124  01558C  0060  F01F  FFE6   	movff	btemp+6,postinc1
 26125  015592  0060  F023  FFE6   	movff	btemp+7,postinc1
 26126  015598  0E00               	movlw	0
 26127  01559A  6EE6               	movwf	postinc1,c
 26128  01559C  EC3D  F0C5         	call	___xxtofl	;wreg free
 26129  0155A0  0060  F007  FFE6   	movff	btemp,postinc1
 26130  0155A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26131  0155AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26132  0155B2  0060  F013  FFE6   	movff	btemp+3,postinc1
 26133  0155B8  ECC8  F0DF         	call	___flsub	;wreg free
 26134  0155BC  0060  F007  FFE6   	movff	btemp,postinc1
 26135  0155C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26136  0155C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26137  0155CE  0060  F013  FFE6   	movff	btemp+3,postinc1
 26138  0155D4  EC20  F09F         	call	___flmul	;wreg free
 26139  0155D8  D13E               	goto	l1831
 26140  0155DA                     l10055:
 26141                           
 26142                           ;daq.c: 138:    if (0b0000100000000000 >> chan & 0x1) {
 26143                           ;stkvar	_chan @ sp[(0)+-1]
 26144  0155DA  0EFF               	movlw	-1
 26145  0155DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 26146  0155E2  0E00               	movlw	0
 26147  0155E4  6E09               	movwf	(btemp+8)^0,c
 26148  0155E6  0E08               	movlw	8
 26149  0155E8  6E0A               	movwf	(btemp+9)^0,c
 26150  0155EA  2A0C               	incf	(btemp+11)^0,f,c
 26151  0155EC  D003               	goto	u9394
 26152  0155EE                     u9395:
 26153  0155EE  340A               	rlcf	(btemp+9)^0,w,c
 26154  0155F0  320A               	rrcf	(btemp+9)^0,f,c
 26155  0155F2  3209               	rrcf	(btemp+8)^0,f,c
 26156  0155F4                     u9394:
 26157  0155F4  2E0C               	decfsz	(btemp+11)^0,f,c
 26158  0155F6  D7FB               	goto	u9395
 26159  0155F8  A009               	btfss	(btemp+8)^0,0,c
 26160  0155FA  D008               	goto	l10063
 26161                           
 26162                           ;daq.c: 139:     return 25.0;
 26163  0155FC  0E00               	movlw	0
 26164  0155FE  6E01               	movwf	btemp^0,c
 26165  015600  0E00               	movlw	0
 26166  015602  6E02               	movwf	(btemp+1)^0,c
 26167  015604  0EC8               	movlw	200
 26168  015606  6E03               	movwf	(btemp+2)^0,c
 26169  015608  0E41               	movlw	65
 26170  01560A  D113               	goto	L32
 26171  01560C                     l10063:
 26172                           
 26173                           ;daq.c: 141:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 26174  01560C  0E00               	movlw	0
 26175  01560E  6EE6               	movwf	postinc1,c
 26176  015610  0E00               	movlw	0
 26177  015612  6EE6               	movwf	postinc1,c
 26178  015614  0E7A               	movlw	122
 26179  015616  6EE6               	movwf	postinc1,c
 26180  015618  0E44               	movlw	68
 26181  01561A  6EE6               	movwf	postinc1,c
 26182  01561C  0E61               	movlw	97
 26183  01561E  6EE6               	movwf	postinc1,c
 26184  015620  0E03               	movlw	3
 26185  015622  6EE6               	movwf	postinc1,c
 26186  015624  0E84               	movlw	132
 26187  015626  6EE6               	movwf	postinc1,c
 26188  015628  0E40               	movlw	64
 26189  01562A  6EE6               	movwf	postinc1,c
 26190                           
 26191                           ;stkvar	_chan @ sp[(-8)+-1]
 26192  01562C  0EF7               	movlw	-9
 26193  01562E  50E3               	movf	plusw1,w,c
 26194  015630  6EE6               	movwf	postinc1,c
 26195  015632  ECD7  F0E4         	call	_get_raw_result	;wreg free
 26196  015636  0060  F004  F00B   	movff	btemp,btemp+10
 26197  01563C  0060  F008  F00C   	movff	btemp+1,btemp+11
 26198  015642  500B               	movf	(btemp+10)^0,w,c
 26199  015644  6E05               	movwf	(btemp+4)^0,c
 26200  015646  500C               	movf	(btemp+11)^0,w,c
 26201  015648  6E06               	movwf	(btemp+5)^0,c
 26202  01564A  6A07               	clrf	(btemp+6)^0,c
 26203  01564C  6A08               	clrf	(btemp+7)^0,c
 26204  01564E  0060  F017  FFE6   	movff	btemp+4,postinc1
 26205  015654  0060  F01B  FFE6   	movff	btemp+5,postinc1
 26206  01565A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 26207  015660  0060  F023  FFE6   	movff	btemp+7,postinc1
 26208  015666  0E00               	movlw	0
 26209  015668  6EE6               	movwf	postinc1,c
 26210  01566A  EC3D  F0C5         	call	___xxtofl	;wreg free
 26211  01566E  0060  F007  FFE6   	movff	btemp,postinc1
 26212  015674  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26213  01567A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26214  015680  0060  F013  FFE6   	movff	btemp+3,postinc1
 26215  015686  EC20  F09F         	call	___flmul	;wreg free
 26216  01568A  0060  F007  FFE6   	movff	btemp,postinc1
 26217  015690  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26218  015696  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26219  01569C  0060  F013  FFE6   	movff	btemp+3,postinc1
 26220  0156A2  EC13  F0A7         	call	___fldiv	;wreg free
 26221  0156A6  D0D7               	goto	l1831
 26222  0156A8                     l10067:
 26223                           
 26224                           ;daq.c: 146:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 26225                           ;stkvar	_chan @ sp[(0)+-1]
 26226  0156A8  0EFF               	movlw	-1
 26227  0156AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 26228  0156B0  0E03               	movlw	3
 26229  0156B2  6E09               	movwf	(btemp+8)^0,c
 26230  0156B4  0E00               	movlw	0
 26231  0156B6  6E0A               	movwf	(btemp+9)^0,c
 26232  0156B8  2A0C               	incf	(btemp+11)^0,f,c
 26233  0156BA  D003               	goto	u9414
 26234  0156BC                     u9415:
 26235  0156BC  340A               	rlcf	(btemp+9)^0,w,c
 26236  0156BE  320A               	rrcf	(btemp+9)^0,f,c
 26237  0156C0  3209               	rrcf	(btemp+8)^0,f,c
 26238  0156C2                     u9414:
 26239  0156C2  2E0C               	decfsz	(btemp+11)^0,f,c
 26240  0156C4  D7FB               	goto	u9415
 26241  0156C6  B009               	btfsc	(btemp+8)^0,0,c
 26242  0156C8  D011               	goto	u9440
 26243                           
 26244                           ;stkvar	_chan @ sp[(0)+-1]
 26245  0156CA  0EFF               	movlw	-1
 26246  0156CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 26247  0156D2  0E00               	movlw	0
 26248  0156D4  6E09               	movwf	(btemp+8)^0,c
 26249  0156D6  0E08               	movlw	8
 26250  0156D8  6E0A               	movwf	(btemp+9)^0,c
 26251  0156DA  2A0C               	incf	(btemp+11)^0,f,c
 26252  0156DC  D003               	goto	u9434
 26253  0156DE                     u9435:
 26254  0156DE  340A               	rlcf	(btemp+9)^0,w,c
 26255  0156E0  320A               	rrcf	(btemp+9)^0,f,c
 26256  0156E2  3209               	rrcf	(btemp+8)^0,f,c
 26257  0156E4                     u9434:
 26258  0156E4  2E0C               	decfsz	(btemp+11)^0,f,c
 26259  0156E6  D7FB               	goto	u9435
 26260  0156E8  A009               	btfss	(btemp+8)^0,0,c
 26261  0156EA  D04E               	goto	l10075
 26262  0156EC                     u9440:
 26263                           
 26264                           ;daq.c: 147:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 26265  0156EC  0E00               	movlw	0
 26266  0156EE  6EE6               	movwf	postinc1,c
 26267  0156F0  0E00               	movlw	0
 26268  0156F2  6EE6               	movwf	postinc1,c
 26269  0156F4  0E7A               	movlw	122
 26270  0156F6  6EE6               	movwf	postinc1,c
 26271  0156F8  0E44               	movlw	68
 26272  0156FA  6EE6               	movwf	postinc1,c
 26273  0156FC  0E00               	movlw	0
 26274  0156FE  6EE6               	movwf	postinc1,c
 26275  015700  0E00               	movlw	0
 26276  015702  6EE6               	movwf	postinc1,c
 26277  015704  0E20               	movlw	32
 26278  015706  6EE6               	movwf	postinc1,c
 26279  015708  0E3F               	movlw	63
 26280  01570A  6EE6               	movwf	postinc1,c
 26281                           
 26282                           ;stkvar	_chan @ sp[(-8)+-1]
 26283  01570C  0EF7               	movlw	-9
 26284  01570E  50E3               	movf	plusw1,w,c
 26285  015710  6EE6               	movwf	postinc1,c
 26286  015712  ECD7  F0E4         	call	_get_raw_result	;wreg free
 26287  015716  0060  F004  F00B   	movff	btemp,btemp+10
 26288  01571C  0060  F008  F00C   	movff	btemp+1,btemp+11
 26289  015722  500B               	movf	(btemp+10)^0,w,c
 26290  015724  6E05               	movwf	(btemp+4)^0,c
 26291  015726  500C               	movf	(btemp+11)^0,w,c
 26292  015728  6E06               	movwf	(btemp+5)^0,c
 26293  01572A  6A07               	clrf	(btemp+6)^0,c
 26294  01572C  6A08               	clrf	(btemp+7)^0,c
 26295  01572E  0060  F017  FFE6   	movff	btemp+4,postinc1
 26296  015734  0060  F01B  FFE6   	movff	btemp+5,postinc1
 26297  01573A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 26298  015740  0060  F023  FFE6   	movff	btemp+7,postinc1
 26299  015746  0E00               	movlw	0
 26300  015748  6EE6               	movwf	postinc1,c
 26301  01574A  EC3D  F0C5         	call	___xxtofl	;wreg free
 26302  01574E  0060  F007  FFE6   	movff	btemp,postinc1
 26303  015754  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26304  01575A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26305  015760  0060  F013  FFE6   	movff	btemp+3,postinc1
 26306  015766  EC20  F09F         	call	___flmul	;wreg free
 26307  01576A  0060  F007  FFE6   	movff	btemp,postinc1
 26308  015770  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26309  015776  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26310  01577C  0060  F013  FFE6   	movff	btemp+3,postinc1
 26311  015782  EC13  F0A7         	call	___fldiv	;wreg free
 26312  015786  D067               	goto	l1831
 26313  015788                     l10075:
 26314                           
 26315                           ;daq.c: 149:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 26316  015788  0E00               	movlw	0
 26317  01578A  6EE6               	movwf	postinc1,c
 26318  01578C  0E00               	movlw	0
 26319  01578E  6EE6               	movwf	postinc1,c
 26320  015790  0E7A               	movlw	122
 26321  015792  6EE6               	movwf	postinc1,c
 26322  015794  0E44               	movlw	68
 26323  015796  6EE6               	movwf	postinc1,c
 26324  015798  0E61               	movlw	97
 26325  01579A  6EE6               	movwf	postinc1,c
 26326  01579C  0E03               	movlw	3
 26327  01579E  6EE6               	movwf	postinc1,c
 26328  0157A0  0E84               	movlw	132
 26329  0157A2  6EE6               	movwf	postinc1,c
 26330  0157A4  0E40               	movlw	64
 26331  0157A6  6EE6               	movwf	postinc1,c
 26332                           
 26333                           ;stkvar	_chan @ sp[(-8)+-1]
 26334  0157A8  0EF7               	movlw	-9
 26335  0157AA  50E3               	movf	plusw1,w,c
 26336  0157AC  6EE6               	movwf	postinc1,c
 26337  0157AE  ECD7  F0E4         	call	_get_raw_result	;wreg free
 26338  0157B2  0060  F004  F00B   	movff	btemp,btemp+10
 26339  0157B8  0060  F008  F00C   	movff	btemp+1,btemp+11
 26340  0157BE  500B               	movf	(btemp+10)^0,w,c
 26341  0157C0  6E05               	movwf	(btemp+4)^0,c
 26342  0157C2  500C               	movf	(btemp+11)^0,w,c
 26343  0157C4  6E06               	movwf	(btemp+5)^0,c
 26344  0157C6  6A07               	clrf	(btemp+6)^0,c
 26345  0157C8  6A08               	clrf	(btemp+7)^0,c
 26346  0157CA  0060  F017  FFE6   	movff	btemp+4,postinc1
 26347  0157D0  0060  F01B  FFE6   	movff	btemp+5,postinc1
 26348  0157D6  0060  F01F  FFE6   	movff	btemp+6,postinc1
 26349  0157DC  0060  F023  FFE6   	movff	btemp+7,postinc1
 26350  0157E2  0E00               	movlw	0
 26351  0157E4  6EE6               	movwf	postinc1,c
 26352  0157E6  EC3D  F0C5         	call	___xxtofl	;wreg free
 26353  0157EA  0060  F007  FFE6   	movff	btemp,postinc1
 26354  0157F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26355  0157F6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26356  0157FC  0060  F013  FFE6   	movff	btemp+3,postinc1
 26357  015802  EC20  F09F         	call	___flmul	;wreg free
 26358  015806  0060  F007  FFE6   	movff	btemp,postinc1
 26359  01580C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26360  015812  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26361  015818  0060  F013  FFE6   	movff	btemp+3,postinc1
 26362  01581E  EC13  F0A7         	call	___fldiv	;wreg free
 26363  015822  D019               	goto	l1831
 26364  015824                     l10081:
 26365                           
 26366                           ;daq.c: 152:   return 0.0;
 26367  015824  0E00               	movlw	0
 26368  015826  6E01               	movwf	btemp^0,c
 26369  015828  0E00               	movlw	0
 26370  01582A  6E02               	movwf	(btemp+1)^0,c
 26371  01582C  0E00               	movlw	0
 26372  01582E  6E03               	movwf	(btemp+2)^0,c
 26373  015830  0E00               	movlw	0
 26374  015832                     L32:
 26375  015832  6E04               	movwf	(btemp+3)^0,c
 26376  015834  D010               	goto	l1831
 26377  015836                     l10089:
 26378                           
 26379                           ;stkvar	_to_what @ sp[(0)+-2]
 26380  015836  0EFE               	movlw	-2
 26381  015838  50E3               	movf	plusw1,w,c
 26382  01583A  6E0B               	movwf	(btemp+10)^0,c
 26383  01583C  6A0C               	clrf	(btemp+11)^0,c
 26384                           
 26385                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26386                           ; Switch size 1, requested type "simple"
 26387                           ; Number of cases is 1, Range of values is 0 to 0
 26388                           ; switch strategies available:
 26389                           ; Name         Instructions Cycles
 26390                           ; simple_byte            4     3 (average)
 26391                           ;	Chosen strategy is simple_byte
 26392  01583E  500C               	movf	(btemp+11)^0,w,c
 26393  015840  0A00               	xorlw	0	; case 0
 26394  015842  A4D8               	btfss	status,2,c
 26395  015844  D7EF               	goto	l10081
 26396                           
 26397                           ; Switch size 1, requested type "simple"
 26398                           ; Number of cases is 2, Range of values is 0 to 1
 26399                           ; switch strategies available:
 26400                           ; Name         Instructions Cycles
 26401                           ; simple_byte            7     4 (average)
 26402                           ;	Chosen strategy is simple_byte
 26403  015846  500B               	movf	(btemp+10)^0,w,c
 26404  015848  0A00               	xorlw	0	; case 0
 26405  01584A  B4D8               	btfsc	status,2,c
 26406  01584C  D5AA               	goto	l10035
 26407  01584E  0A01               	xorlw	1	; case 1
 26408  015850  B4D8               	btfsc	status,2,c
 26409  015852  D72A               	goto	l10067
 26410  015854  D7E7               	goto	l10081
 26411  015856                     l1831:
 26412                           
 26413                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 26414  015856  52E5               	movf	postdec1,f,c
 26415  015858  52E5               	movf	postdec1,f,c
 26416  01585A  0012               	return		;funcret
 26417  01585C                     __end_of_conv_raw_result:
 26418                           	opt callstack 0
 26419                           
 26420 ;; *************** function _nanf *****************
 26421 ;; Defined at:
 26422 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 26423 ;; Parameters:    Size  Location     Type
 26424 ;;  s               2  [STACK] PTR const unsigned char 
 26425 ;;		 -> STR_115(1), STR_77(1), 
 26426 ;; Auto vars:     Size  Location     Type
 26427 ;;  u               4  [STACK] struct .
 26428 ;; Return value:  Size  Location     Type
 26429 ;;                  4  [STACK] float 
 26430 ;; Registers used:
 26431 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 26432 ;; Tracked objects:
 26433 ;;		On entry : 0/39
 26434 ;;		On exit  : 0/0
 26435 ;;		Unchanged: 0/0
 26436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26441 ;;Total ram usage:        0 bytes
 26442 ;; Hardware stack levels used:    1
 26443 ;; Hardware stack levels required when called:   15
 26444 ;; This function calls:
 26445 ;;		Nothing
 26446 ;; This function is called by:
 26447 ;;		_conv_raw_result
 26448 ;; This function uses a reentrant model
 26449 ;;
 26450                           
 26451                           	psect	text105
 26452  01BAD4                     __ptext105:
 26453                           	opt callstack 0
 26454  01BAD4                     _nanf:
 26455                           	opt callstack 0
 26456                           
 26457                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26458  01BAD4  52E6               	movf	postinc1,f,c
 26459  01BAD6  52E6               	movf	postinc1,f,c
 26460  01BAD8  52E6               	movf	postinc1,f,c
 26461  01BADA  52E6               	movf	postinc1,f,c
 26462                           
 26463                           ;incstack = 0
 26464 ;; hardware stack exceeded
 26465  01BADC  0EFF               	movlw	255
 26466  01BADE  6E09               	movwf	(btemp+8)^0,c
 26467  01BAE0  0EFF               	movlw	255
 26468  01BAE2  6E0A               	movwf	(btemp+9)^0,c
 26469  01BAE4  0EFF               	movlw	255
 26470  01BAE6  6E0B               	movwf	(btemp+10)^0,c
 26471  01BAE8  0E7F               	movlw	127
 26472  01BAEA  6E0C               	movwf	(btemp+11)^0,c
 26473                           
 26474                           ;stkvar	_u @ sp[(-4)+0]
 26475  01BAEC  0EFC               	movlw	-4
 26476  01BAEE  0060  F027  FFE3   	movff	btemp+8,plusw1
 26477  01BAF4  0EFD               	movlw	-3
 26478  01BAF6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26479  01BAFC  0EFE               	movlw	-2
 26480  01BAFE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26481  01BB04  0EFF               	movlw	-1
 26482  01BB06  0060  F033  FFE3   	movff	btemp+11,plusw1
 26483                           
 26484                           ;stkvar	_u @ sp[(-4)+0]
 26485  01BB0C  0EFC               	movlw	-4
 26486  01BB0E  006F FF8C  F001    	movff	plusw1,btemp
 26487  01BB14  0EFD               	movlw	-3
 26488  01BB16  006F FF8C  F002    	movff	plusw1,btemp+1
 26489  01BB1C  0EFE               	movlw	-2
 26490  01BB1E  006F FF8C  F003    	movff	plusw1,btemp+2
 26491  01BB24  0EFF               	movlw	-1
 26492  01BB26  006F FF8C  F004    	movff	plusw1,btemp+3
 26493                           
 26494                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 26495  01BB2C  0EFA               	movlw	250
 26496  01BB2E  26E1               	addwf	fsr1l,f,c
 26497  01BB30  0EFF               	movlw	255
 26498  01BB32  22E2               	addwfc	fsr1h,f,c
 26499  01BB34  0012               	return		;funcret
 26500  01BB36                     __end_of_nanf:
 26501                           	opt callstack 0
 26502                           
 26503 ;; *************** function _get_raw_result *****************
 26504 ;; Defined at:
 26505 ;;		line 115 in file "daq.c"
 26506 ;; Parameters:    Size  Location     Type
 26507 ;;  index           1  [STACK] const enum E16590
 26508 ;; Auto vars:     Size  Location     Type
 26509 ;;		None
 26510 ;; Return value:  Size  Location     Type
 26511 ;;                  2  [STACK] unsigned short 
 26512 ;; Registers used:
 26513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 26514 ;; Tracked objects:
 26515 ;;		On entry : 0/1
 26516 ;;		On exit  : 0/0
 26517 ;;		Unchanged: 0/0
 26518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26523 ;;Total ram usage:        0 bytes
 26524 ;; Hardware stack levels used:    1
 26525 ;; Hardware stack levels required when called:   15
 26526 ;; This function calls:
 26527 ;;		Nothing
 26528 ;; This function is called by:
 26529 ;;		_main
 26530 ;;		_current_sensor_cal
 26531 ;;		_conv_raw_result
 26532 ;;		_cal_current_zero
 26533 ;; This function uses a reentrant model
 26534 ;;
 26535                           
 26536                           	psect	text106
 26537  01C9AE                     __ptext106:
 26538                           	opt callstack 0
 26539  01C9AE                     _get_raw_result:
 26540                           	opt callstack 0
 26541                           
 26542                           ;daq.c: 115: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 116: {;daq.c
      +                          : 117:  return R.raw_adc[index];
 26543                           ;stkvar	_index @ sp[(0)+-1]
 26544                           
 26545                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26546                           ;incstack = 0
 26547 ;; hardware stack exceeded
 26548  01C9AE  0EFF               	movlw	-1
 26549  01C9B0  50E3               	movf	plusw1,w,c
 26550  01C9B2  0D02               	mullw	2
 26551  01C9B4  50F3               	movf	243,w,c
 26552  01C9B6  0FAF               	addlw	low _R
 26553  01C9B8  6ED9               	movwf	fsr2l,c
 26554  01C9BA  6ADA               	clrf	fsr2h,c
 26555  01C9BC  006F FF78  F001    	movff	postinc2,btemp
 26556  01C9C2  006F FF74  F002    	movff	postdec2,btemp+1
 26557                           
 26558                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 26559  01C9C8  52E5               	movf	postdec1,f,c
 26560  01C9CA  0012               	return		;funcret
 26561  01C9CC                     __end_of_get_raw_result:
 26562                           	opt callstack 0
 26563                           
 26564 ;; *************** function ___xxtofl *****************
 26565 ;; Defined at:
 26566 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 26567 ;; Parameters:    Size  Location     Type
 26568 ;;  sign            1  [STACK] unsigned char 
 26569 ;;  val             4  [STACK] long 
 26570 ;; Auto vars:     Size  Location     Type
 26571 ;;  arg             4  [STACK] unsigned long 
 26572 ;;  exp             1  [STACK] unsigned char 
 26573 ;; Return value:  Size  Location     Type
 26574 ;;                  4  [STACK] unsigned char 
 26575 ;; Registers used:
 26576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26577 ;; Tracked objects:
 26578 ;;		On entry : 0/0
 26579 ;;		On exit  : 0/0
 26580 ;;		Unchanged: 0/0
 26581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26586 ;;Total ram usage:        0 bytes
 26587 ;; Hardware stack levels used:    1
 26588 ;; Hardware stack levels required when called:   15
 26589 ;; This function calls:
 26590 ;;		Nothing
 26591 ;; This function is called by:
 26592 ;;		_conv_raw_result
 26593 ;;		_init_bsoc
 26594 ;; This function uses a reentrant model
 26595 ;;
 26596                           
 26597                           	psect	text107
 26598  018A7A                     __ptext107:
 26599                           	opt callstack 0
 26600  018A7A                     ___xxtofl:
 26601                           	opt callstack 0
 26602                           
 26603                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26604  018A7A  0E05               	movlw	5
 26605  018A7C  26E1               	addwf	fsr1l,f,c
 26606  018A7E  0E00               	movlw	0
 26607  018A80  22E2               	addwfc	fsr1h,f,c
 26608                           
 26609                           ;stkvar	_sign @ sp[(-5)+-1]
 26610                           
 26611                           ;incstack = 0
 26612 ;; hardware stack exceeded
 26613  018A82  0EFA               	movlw	-6
 26614  018A84  50E3               	movf	plusw1,w,c
 26615  018A86  B4D8               	btfsc	status,2,c
 26616  018A88  D01D               	goto	l9983
 26617                           
 26618                           ;stkvar	_val @ sp[(-5)+-5]
 26619  018A8A  0EF9               	movlw	-7
 26620  018A8C  AEE3               	btfss	plusw1,7,c
 26621  018A8E  D01A               	goto	l9983
 26622                           
 26623                           ;stkvar	_val @ sp[(-5)+-5]
 26624  018A90  0EF6               	movlw	-10
 26625  018A92  006F FF8C  F009    	movff	plusw1,btemp+8
 26626  018A98  0EF7               	movlw	-9
 26627  018A9A  006F FF8C  F00A    	movff	plusw1,btemp+9
 26628  018AA0  0EF8               	movlw	-8
 26629  018AA2  006F FF8C  F00B    	movff	plusw1,btemp+10
 26630  018AA8  0EF9               	movlw	-7
 26631  018AAA  006F FF8C  F00C    	movff	plusw1,btemp+11
 26632  018AB0  1E09               	comf	(btemp+8)^0,f,c
 26633  018AB2  1E0A               	comf	(btemp+9)^0,f,c
 26634  018AB4  1E0B               	comf	(btemp+10)^0,f,c
 26635  018AB6  1E0C               	comf	(btemp+11)^0,f,c
 26636  018AB8  2A09               	incf	(btemp+8)^0,f,c
 26637  018ABA  0E00               	movlw	0
 26638  018ABC  220A               	addwfc	(btemp+9)^0,f,c
 26639  018ABE  220B               	addwfc	(btemp+10)^0,f,c
 26640  018AC0  220C               	addwfc	(btemp+11)^0,f,c
 26641  018AC2  D010               	goto	L33
 26642  018AC4                     l9983:
 26643                           
 26644                           ;stkvar	_val @ sp[(-5)+-5]
 26645  018AC4  0EF6               	movlw	-10
 26646  018AC6  006F FF8C  F009    	movff	plusw1,btemp+8
 26647  018ACC  0EF7               	movlw	-9
 26648  018ACE  006F FF8C  F00A    	movff	plusw1,btemp+9
 26649  018AD4  0EF8               	movlw	-8
 26650  018AD6  006F FF8C  F00B    	movff	plusw1,btemp+10
 26651  018ADC  0EF9               	movlw	-7
 26652  018ADE  006F FF8C  F00C    	movff	plusw1,btemp+11
 26653  018AE4                     L33:
 26654                           
 26655                           ;stkvar	_arg @ sp[(-5)+0]
 26656  018AE4  0EFB               	movlw	-5
 26657  018AE6  0060  F027  FFE3   	movff	btemp+8,plusw1
 26658  018AEC  0EFC               	movlw	-4
 26659  018AEE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26660  018AF4  0EFD               	movlw	-3
 26661  018AF6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26662  018AFC  0EFE               	movlw	-2
 26663  018AFE  0060  F033  FFE3   	movff	btemp+11,plusw1
 26664                           
 26665                           ;stkvar	_val @ sp[(-5)+-5]
 26666  018B04  0EF6               	movlw	-10
 26667  018B06  50E3               	movf	plusw1,w,c
 26668  018B08  E113               	bnz	l9991
 26669  018B0A  0EF7               	movlw	-9
 26670  018B0C  50E3               	movf	plusw1,w,c
 26671  018B0E  E110               	bnz	l9991
 26672  018B10  0EF8               	movlw	-8
 26673  018B12  50E3               	movf	plusw1,w,c
 26674  018B14  E10D               	bnz	l9991
 26675  018B16  0EF9               	movlw	-7
 26676  018B18  50E3               	movf	plusw1,w,c
 26677  018B1A  A4D8               	btfss	status,2,c
 26678  018B1C  D009               	goto	l9991
 26679  018B1E  0E00               	movlw	0
 26680  018B20  6E01               	movwf	btemp^0,c
 26681  018B22  0E00               	movlw	0
 26682  018B24  6E02               	movwf	(btemp+1)^0,c
 26683  018B26  0E00               	movlw	0
 26684  018B28  6E03               	movwf	(btemp+2)^0,c
 26685  018B2A  0E00               	movlw	0
 26686  018B2C  6E04               	movwf	(btemp+3)^0,c
 26687  018B2E  D0A2               	goto	l3176
 26688  018B30                     l9991:
 26689  018B30  0E96               	movlw	150
 26690  018B32  6E0C               	movwf	(btemp+11)^0,c
 26691                           
 26692                           ;stkvar	_exp @ sp[(-5)+4]
 26693  018B34  0EFF               	movlw	-1
 26694  018B36  0060  F033  FFE3   	movff	btemp+11,plusw1
 26695  018B3C  D00B               	goto	l9995
 26696  018B3E                     l9993:
 26697                           
 26698                           ;stkvar	_exp @ sp[(-5)+4]
 26699  018B3E  0EFF               	movlw	-1
 26700  018B40  2AE3               	incf	plusw1,f,c
 26701                           
 26702                           ;stkvar	_arg @ sp[(-5)+0]
 26703  018B42  90D8               	bcf	status,0,c
 26704  018B44  0EFE               	movlw	-2
 26705  018B46  32E3               	rrcf	plusw1,f,c
 26706  018B48  0EFD               	movlw	-3
 26707  018B4A  32E3               	rrcf	plusw1,f,c
 26708  018B4C  0EFC               	movlw	-4
 26709  018B4E  32E3               	rrcf	plusw1,f,c
 26710  018B50  0EFB               	movlw	-5
 26711  018B52  32E3               	rrcf	plusw1,f,c
 26712  018B54                     l9995:
 26713                           
 26714                           ;stkvar	_arg @ sp[(-5)+0]
 26715  018B54  50E1               	movf	fsr1l,w,c
 26716  018B56  0FFB               	addlw	-5
 26717  018B58  6ED9               	movwf	fsr2l,c
 26718  018B5A  50E2               	movf	fsr1h,w,c
 26719  018B5C  6EDA               	movwf	fsr2h,c
 26720  018B5E  0EFF               	movlw	255
 26721  018B60  22DA               	addwfc	fsr2h,f,c
 26722  018B62  52DE               	movf	postinc2,f,c
 26723  018B64  52DE               	movf	postinc2,f,c
 26724  018B66  52DE               	movf	postinc2,f,c
 26725  018B68  0EFE               	movlw	254
 26726  018B6A  14DD               	andwf	postdec2,w,c
 26727  018B6C  B4D8               	btfsc	status,2,c
 26728  018B6E  D018               	goto	l10003
 26729  018B70  D7E6               	goto	l9993
 26730  018B72                     l9997:
 26731                           
 26732                           ;stkvar	_exp @ sp[(-5)+4]
 26733  018B72  0EFF               	movlw	-1
 26734  018B74  2AE3               	incf	plusw1,f,c
 26735                           
 26736                           ;stkvar	_arg @ sp[(-5)+0]
 26737  018B76  50E1               	movf	fsr1l,w,c
 26738  018B78  0FFB               	addlw	-5
 26739  018B7A  6ED9               	movwf	fsr2l,c
 26740  018B7C  50E2               	movf	fsr1h,w,c
 26741  018B7E  6EDA               	movwf	fsr2h,c
 26742  018B80  0EFF               	movlw	255
 26743  018B82  22DA               	addwfc	fsr2h,f,c
 26744  018B84  2ADE               	incf	postinc2,f,c
 26745  018B86  0E00               	movlw	0
 26746  018B88  22DE               	addwfc	postinc2,f,c
 26747  018B8A  22DE               	addwfc	postinc2,f,c
 26748  018B8C  22DE               	addwfc	postinc2,f,c
 26749                           
 26750                           ;stkvar	_arg @ sp[(-5)+0]
 26751  018B8E  90D8               	bcf	status,0,c
 26752  018B90  0EFE               	movlw	-2
 26753  018B92  32E3               	rrcf	plusw1,f,c
 26754  018B94  0EFD               	movlw	-3
 26755  018B96  32E3               	rrcf	plusw1,f,c
 26756  018B98  0EFC               	movlw	-4
 26757  018B9A  32E3               	rrcf	plusw1,f,c
 26758  018B9C  0EFB               	movlw	-5
 26759  018B9E  32E3               	rrcf	plusw1,f,c
 26760  018BA0                     l10003:
 26761                           
 26762                           ;stkvar	_arg @ sp[(-5)+0]
 26763  018BA0  50E1               	movf	fsr1l,w,c
 26764  018BA2  0FFB               	addlw	-5
 26765  018BA4  6ED9               	movwf	fsr2l,c
 26766  018BA6  50E2               	movf	fsr1h,w,c
 26767  018BA8  6EDA               	movwf	fsr2h,c
 26768  018BAA  0EFF               	movlw	255
 26769  018BAC  22DA               	addwfc	fsr2h,f,c
 26770  018BAE  52DE               	movf	postinc2,f,c
 26771  018BB0  52DE               	movf	postinc2,f,c
 26772  018BB2  52DE               	movf	postinc2,f,c
 26773  018BB4  0EFF               	movlw	255
 26774  018BB6  14DD               	andwf	postdec2,w,c
 26775  018BB8  B4D8               	btfsc	status,2,c
 26776  018BBA  D00C               	goto	l10007
 26777  018BBC  D7DA               	goto	l9997
 26778  018BBE                     l10005:
 26779                           
 26780                           ;stkvar	_exp @ sp[(-5)+4]
 26781  018BBE  0EFF               	movlw	-1
 26782  018BC0  06E3               	decf	plusw1,f,c
 26783                           
 26784                           ;stkvar	_arg @ sp[(-5)+0]
 26785  018BC2  90D8               	bcf	status,0,c
 26786  018BC4  0EFB               	movlw	-5
 26787  018BC6  36E3               	rlcf	plusw1,f,c
 26788  018BC8  0EFC               	movlw	-4
 26789  018BCA  36E3               	rlcf	plusw1,f,c
 26790  018BCC  0EFD               	movlw	-3
 26791  018BCE  36E3               	rlcf	plusw1,f,c
 26792  018BD0  0EFE               	movlw	-2
 26793  018BD2  36E3               	rlcf	plusw1,f,c
 26794  018BD4                     l10007:
 26795                           
 26796                           ;stkvar	_arg @ sp[(-5)+0]
 26797  018BD4  0EFD               	movlw	-3
 26798  018BD6  BEE3               	btfsc	plusw1,7,c
 26799  018BD8  D007               	goto	u9290
 26800                           
 26801                           ;stkvar	_exp @ sp[(-5)+4]
 26802  018BDA  0EFF               	movlw	-1
 26803  018BDC  006F FF8C  F001    	movff	plusw1,btemp
 26804  018BE2  0E02               	movlw	2
 26805  018BE4  6001               	cpfslt	btemp^0,c
 26806  018BE6  D7EB               	goto	l10005
 26807  018BE8                     u9290:
 26808                           
 26809                           ;stkvar	_exp @ sp[(-5)+4]
 26810  018BE8  0EFF               	movlw	-1
 26811  018BEA  B0E3               	btfsc	plusw1,0,c
 26812  018BEC  D002               	goto	l10015
 26813                           
 26814                           ;stkvar	_arg @ sp[(-5)+0]
 26815  018BEE  0EFD               	movlw	-3
 26816  018BF0  9EE3               	bcf	plusw1,7,c
 26817  018BF2                     l10015:
 26818                           
 26819                           ;stkvar	_exp @ sp[(-5)+4]
 26820  018BF2  50E1               	movf	fsr1l,w,c
 26821  018BF4  0FFF               	addlw	-1
 26822  018BF6  6ED9               	movwf	fsr2l,c
 26823  018BF8  50E2               	movf	fsr1h,w,c
 26824  018BFA  6EDA               	movwf	fsr2h,c
 26825  018BFC  0EFF               	movlw	255
 26826  018BFE  22DA               	addwfc	fsr2h,f,c
 26827  018C00  90D8               	bcf	status,0,c
 26828  018C02  32DF               	rrcf	indf2,f,c
 26829                           
 26830                           ;stkvar	_exp @ sp[(-5)+4]
 26831  018C04  0EFF               	movlw	-1
 26832  018C06  006F FF8C  F00C    	movff	plusw1,btemp+11
 26833  018C0C  0060  F030  F005   	movff	btemp+11,btemp+4
 26834  018C12  6A06               	clrf	(btemp+5)^0,c
 26835  018C14  6A07               	clrf	(btemp+6)^0,c
 26836  018C16  6A08               	clrf	(btemp+7)^0,c
 26837  018C18  0060  F014  F008   	movff	btemp+4,btemp+7
 26838  018C1E  6A07               	clrf	(btemp+6)^0,c
 26839  018C20  6A06               	clrf	(btemp+5)^0,c
 26840  018C22  6A05               	clrf	(btemp+4)^0,c
 26841                           
 26842                           ;stkvar	_arg @ sp[(-5)+0]
 26843  018C24  50E1               	movf	fsr1l,w,c
 26844  018C26  0FFB               	addlw	-5
 26845  018C28  6ED9               	movwf	fsr2l,c
 26846  018C2A  50E2               	movf	fsr1h,w,c
 26847  018C2C  6EDA               	movwf	fsr2h,c
 26848  018C2E  0EFF               	movlw	255
 26849  018C30  22DA               	addwfc	fsr2h,f,c
 26850  018C32  5005               	movf	(btemp+4)^0,w,c
 26851  018C34  12DE               	iorwf	postinc2,f,c
 26852  018C36  5006               	movf	(btemp+5)^0,w,c
 26853  018C38  12DE               	iorwf	postinc2,f,c
 26854  018C3A  5007               	movf	(btemp+6)^0,w,c
 26855  018C3C  12DE               	iorwf	postinc2,f,c
 26856  018C3E  5008               	movf	(btemp+7)^0,w,c
 26857  018C40  12DE               	iorwf	postinc2,f,c
 26858                           
 26859                           ;stkvar	_sign @ sp[(-5)+-1]
 26860  018C42  0EFA               	movlw	-6
 26861  018C44  50E3               	movf	plusw1,w,c
 26862  018C46  B4D8               	btfsc	status,2,c
 26863  018C48  D005               	goto	l10025
 26864                           
 26865                           ;stkvar	_val @ sp[(-5)+-5]
 26866  018C4A  0EF9               	movlw	-7
 26867  018C4C  AEE3               	btfss	plusw1,7,c
 26868  018C4E  D002               	goto	l10025
 26869                           
 26870                           ;stkvar	_arg @ sp[(-5)+0]
 26871  018C50  0EFE               	movlw	-2
 26872  018C52  8EE3               	bsf	plusw1,7,c
 26873  018C54                     l10025:
 26874                           
 26875                           ;stkvar	_arg @ sp[(-5)+0]
 26876  018C54  0EFB               	movlw	-5
 26877  018C56  006F FF8C  F001    	movff	plusw1,btemp
 26878  018C5C  0EFC               	movlw	-4
 26879  018C5E  006F FF8C  F002    	movff	plusw1,btemp+1
 26880  018C64  0EFD               	movlw	-3
 26881  018C66  006F FF8C  F003    	movff	plusw1,btemp+2
 26882  018C6C  0EFE               	movlw	-2
 26883  018C6E  006F FF8C  F004    	movff	plusw1,btemp+3
 26884  018C74                     l3176:
 26885                           
 26886                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 26887  018C74  0EF6               	movlw	246
 26888  018C76  26E1               	addwf	fsr1l,f,c
 26889  018C78  0EFF               	movlw	255
 26890  018C7A  22E2               	addwfc	fsr1h,f,c
 26891  018C7C  0012               	return		;funcret
 26892  018C7E                     __end_of___xxtofl:
 26893                           	opt callstack 0
 26894                           
 26895 ;; *************** function ___fldiv *****************
 26896 ;; Defined at:
 26897 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 26898 ;; Parameters:    Size  Location     Type
 26899 ;;  b               4  [STACK] unsigned char 
 26900 ;;  a               4  [STACK] unsigned char 
 26901 ;; Auto vars:     Size  Location     Type
 26902 ;;  grs             4  [STACK] unsigned long 
 26903 ;;  rem             4  [STACK] unsigned long 
 26904 ;;  new_exp         2  [STACK] short 
 26905 ;;  aexp            1  [STACK] unsigned char 
 26906 ;;  bexp            1  [STACK] unsigned char 
 26907 ;;  sign            1  [STACK] unsigned char 
 26908 ;; Return value:  Size  Location     Type
 26909 ;;                  4  [STACK] unsigned char 
 26910 ;; Registers used:
 26911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 26912 ;; Tracked objects:
 26913 ;;		On entry : 0/0
 26914 ;;		On exit  : 0/0
 26915 ;;		Unchanged: 0/0
 26916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26921 ;;Total ram usage:        0 bytes
 26922 ;; Hardware stack levels used:    1
 26923 ;; Hardware stack levels required when called:   15
 26924 ;; This function calls:
 26925 ;;		Nothing
 26926 ;; This function is called by:
 26927 ;;		_conv_raw_result
 26928 ;;		_convert_dac_raw
 26929 ;;		_calc_bsoc
 26930 ;;		_init_bsoc
 26931 ;;		_esr_check
 26932 ;;		_efgtoa
 26933 ;; This function uses a reentrant model
 26934 ;;
 26935                           
 26936                           	psect	text108
 26937  014E26                     __ptext108:
 26938                           	opt callstack 0
 26939  014E26                     ___fldiv:
 26940                           	opt callstack 0
 26941                           
 26942                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 26943  014E26  0E0D               	movlw	13
 26944  014E28  26E1               	addwf	fsr1l,f,c
 26945  014E2A  0E00               	movlw	0
 26946  014E2C  22E2               	addwfc	fsr1h,f,c
 26947                           
 26948                           ;stkvar	_b @ sp[(-13)+-4]
 26949                           
 26950                           ;incstack = 0
 26951 ;; hardware stack exceeded
 26952  014E2E  0EF2               	movlw	242
 26953  014E30  24E1               	addwf	fsr1l,w,c
 26954  014E32  6ED9               	movwf	fsr2l,c
 26955  014E34  0EFF               	movlw	255
 26956  014E36  20E2               	addwfc	fsr1h,w,c
 26957  014E38  6EDA               	movwf	fsr2h,c
 26958  014E3A  50DF               	movf	indf2,w,c
 26959  014E3C  6E0C               	movwf	(btemp+11)^0,c
 26960  014E3E  0E80               	movlw	128
 26961  014E40  160C               	andwf	(btemp+11)^0,f,c
 26962                           
 26963                           ;stkvar	_sign @ sp[(-13)+12]
 26964  014E42  0EFF               	movlw	-1
 26965  014E44  0060  F033  FFE3   	movff	btemp+11,plusw1
 26966                           
 26967                           ;stkvar	_b @ sp[(-13)+-4]
 26968  014E4A  0EF2               	movlw	242
 26969  014E4C  24E1               	addwf	fsr1l,w,c
 26970  014E4E  6ED9               	movwf	fsr2l,c
 26971  014E50  0EFF               	movlw	255
 26972  014E52  20E2               	addwfc	fsr1h,w,c
 26973  014E54  6EDA               	movwf	fsr2h,c
 26974  014E56  50DF               	movf	indf2,w,c
 26975  014E58  6E0C               	movwf	(btemp+11)^0,c
 26976  014E5A  90D8               	bcf	status,0,c
 26977  014E5C  340C               	rlcf	(btemp+11)^0,w,c
 26978  014E5E  6E0B               	movwf	(btemp+10)^0,c
 26979                           
 26980                           ;stkvar	_bexp @ sp[(-13)+11]
 26981  014E60  0EFE               	movlw	-2
 26982  014E62  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26983                           
 26984                           ;stkvar	_b @ sp[(-13)+-4]
 26985  014E68  0EF1               	movlw	241
 26986  014E6A  24E1               	addwf	fsr1l,w,c
 26987  014E6C  6ED9               	movwf	fsr2l,c
 26988  014E6E  0EFF               	movlw	255
 26989  014E70  20E2               	addwfc	fsr1h,w,c
 26990  014E72  6EDA               	movwf	fsr2h,c
 26991  014E74  AEDF               	btfss	indf2,7,c
 26992  014E76  D002               	goto	l8555
 26993                           
 26994                           ;stkvar	_bexp @ sp[(-13)+11]
 26995  014E78  0EFE               	movlw	-2
 26996  014E7A  80E3               	bsf	plusw1,0,c
 26997  014E7C                     l8555:
 26998                           
 26999                           ;stkvar	_bexp @ sp[(-13)+11]
 27000  014E7C  0EFE               	movlw	-2
 27001  014E7E  50E3               	movf	plusw1,w,c
 27002  014E80  B4D8               	btfsc	status,2,c
 27003  014E82  D027               	goto	l8565
 27004                           
 27005                           ;stkvar	_bexp @ sp[(-13)+11]
 27006  014E84  0EFE               	movlw	-2
 27007  014E86  28E3               	incf	plusw1,w,c
 27008  014E88  A4D8               	btfss	status,2,c
 27009  014E8A  D018               	goto	l8561
 27010  014E8C  0E00               	movlw	0
 27011  014E8E  6E09               	movwf	(btemp+8)^0,c
 27012  014E90  0E00               	movlw	0
 27013  014E92  6E0A               	movwf	(btemp+9)^0,c
 27014  014E94  0E00               	movlw	0
 27015  014E96  6E0B               	movwf	(btemp+10)^0,c
 27016  014E98  0E00               	movlw	0
 27017  014E9A  6E0C               	movwf	(btemp+11)^0,c
 27018                           
 27019                           ;stkvar	_b @ sp[(-13)+-4]
 27020  014E9C  0EEF               	movlw	-17
 27021  014E9E  0060  F027  FFE3   	movff	btemp+8,plusw1
 27022  014EA4  0EF0               	movlw	-16
 27023  014EA6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27024  014EAC  0EF1               	movlw	-15
 27025  014EAE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27026  014EB4  0EF2               	movlw	-14
 27027  014EB6  0060  F033  FFE3   	movff	btemp+11,plusw1
 27028  014EBC                     l8561:
 27029                           
 27030                           ;stkvar	_b @ sp[(-13)+-4]
 27031  014EBC  0EF1               	movlw	-15
 27032  014EBE  8EE3               	bsf	plusw1,7,c
 27033                           
 27034                           ;stkvar	_b @ sp[(-13)+-4]
 27035  014EC0  0EF2               	movlw	242
 27036  014EC2  24E1               	addwf	fsr1l,w,c
 27037  014EC4  6ED9               	movwf	fsr2l,c
 27038  014EC6  0EFF               	movlw	255
 27039  014EC8  20E2               	addwfc	fsr1h,w,c
 27040  014ECA  6EDA               	movwf	fsr2h,c
 27041  014ECC  0E00               	movlw	0
 27042  014ECE  6EDF               	movwf	indf2,c
 27043  014ED0  D018               	goto	l8567
 27044  014ED2                     l8565:
 27045  014ED2  0E00               	movlw	0
 27046  014ED4  6E09               	movwf	(btemp+8)^0,c
 27047  014ED6  0E00               	movlw	0
 27048  014ED8  6E0A               	movwf	(btemp+9)^0,c
 27049  014EDA  0E00               	movlw	0
 27050  014EDC  6E0B               	movwf	(btemp+10)^0,c
 27051  014EDE  0E00               	movlw	0
 27052  014EE0  6E0C               	movwf	(btemp+11)^0,c
 27053                           
 27054                           ;stkvar	_b @ sp[(-13)+-4]
 27055  014EE2  0EEF               	movlw	-17
 27056  014EE4  0060  F027  FFE3   	movff	btemp+8,plusw1
 27057  014EEA  0EF0               	movlw	-16
 27058  014EEC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27059  014EF2  0EF1               	movlw	-15
 27060  014EF4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27061  014EFA  0EF2               	movlw	-14
 27062  014EFC  0060  F033  FFE3   	movff	btemp+11,plusw1
 27063  014F02                     l8567:
 27064                           
 27065                           ;stkvar	_a @ sp[(-13)+-8]
 27066  014F02  0EEE               	movlw	238
 27067  014F04  24E1               	addwf	fsr1l,w,c
 27068  014F06  6ED9               	movwf	fsr2l,c
 27069  014F08  0EFF               	movlw	255
 27070  014F0A  20E2               	addwfc	fsr1h,w,c
 27071  014F0C  6EDA               	movwf	fsr2h,c
 27072  014F0E  50DF               	movf	indf2,w,c
 27073  014F10  6E0C               	movwf	(btemp+11)^0,c
 27074  014F12  0E80               	movlw	128
 27075  014F14  160C               	andwf	(btemp+11)^0,f,c
 27076                           
 27077                           ;stkvar	_sign @ sp[(-13)+12]
 27078  014F16  50E1               	movf	fsr1l,w,c
 27079  014F18  0FFF               	addlw	-1
 27080  014F1A  6ED9               	movwf	fsr2l,c
 27081  014F1C  50E2               	movf	fsr1h,w,c
 27082  014F1E  6EDA               	movwf	fsr2h,c
 27083  014F20  0EFF               	movlw	255
 27084  014F22  22DA               	addwfc	fsr2h,f,c
 27085  014F24  500C               	movf	(btemp+11)^0,w,c
 27086  014F26  1ADF               	xorwf	indf2,f,c
 27087                           
 27088                           ;stkvar	_a @ sp[(-13)+-8]
 27089  014F28  0EEE               	movlw	238
 27090  014F2A  24E1               	addwf	fsr1l,w,c
 27091  014F2C  6ED9               	movwf	fsr2l,c
 27092  014F2E  0EFF               	movlw	255
 27093  014F30  20E2               	addwfc	fsr1h,w,c
 27094  014F32  6EDA               	movwf	fsr2h,c
 27095  014F34  50DF               	movf	indf2,w,c
 27096  014F36  6E0C               	movwf	(btemp+11)^0,c
 27097  014F38  90D8               	bcf	status,0,c
 27098  014F3A  340C               	rlcf	(btemp+11)^0,w,c
 27099  014F3C  6E0B               	movwf	(btemp+10)^0,c
 27100                           
 27101                           ;stkvar	_aexp @ sp[(-13)+10]
 27102  014F3E  0EFD               	movlw	-3
 27103  014F40  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27104                           
 27105                           ;stkvar	_a @ sp[(-13)+-8]
 27106  014F46  0EED               	movlw	237
 27107  014F48  24E1               	addwf	fsr1l,w,c
 27108  014F4A  6ED9               	movwf	fsr2l,c
 27109  014F4C  0EFF               	movlw	255
 27110  014F4E  20E2               	addwfc	fsr1h,w,c
 27111  014F50  6EDA               	movwf	fsr2h,c
 27112  014F52  AEDF               	btfss	indf2,7,c
 27113  014F54  D002               	goto	l8575
 27114                           
 27115                           ;stkvar	_aexp @ sp[(-13)+10]
 27116  014F56  0EFD               	movlw	-3
 27117  014F58  80E3               	bsf	plusw1,0,c
 27118  014F5A                     l8575:
 27119                           
 27120                           ;stkvar	_aexp @ sp[(-13)+10]
 27121  014F5A  0EFD               	movlw	-3
 27122  014F5C  50E3               	movf	plusw1,w,c
 27123  014F5E  B4D8               	btfsc	status,2,c
 27124  014F60  D027               	goto	l8585
 27125                           
 27126                           ;stkvar	_aexp @ sp[(-13)+10]
 27127  014F62  0EFD               	movlw	-3
 27128  014F64  28E3               	incf	plusw1,w,c
 27129  014F66  A4D8               	btfss	status,2,c
 27130  014F68  D018               	goto	l8581
 27131  014F6A  0E00               	movlw	0
 27132  014F6C  6E09               	movwf	(btemp+8)^0,c
 27133  014F6E  0E00               	movlw	0
 27134  014F70  6E0A               	movwf	(btemp+9)^0,c
 27135  014F72  0E00               	movlw	0
 27136  014F74  6E0B               	movwf	(btemp+10)^0,c
 27137  014F76  0E00               	movlw	0
 27138  014F78  6E0C               	movwf	(btemp+11)^0,c
 27139                           
 27140                           ;stkvar	_a @ sp[(-13)+-8]
 27141  014F7A  0EEB               	movlw	-21
 27142  014F7C  0060  F027  FFE3   	movff	btemp+8,plusw1
 27143  014F82  0EEC               	movlw	-20
 27144  014F84  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27145  014F8A  0EED               	movlw	-19
 27146  014F8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27147  014F92  0EEE               	movlw	-18
 27148  014F94  0060  F033  FFE3   	movff	btemp+11,plusw1
 27149  014F9A                     l8581:
 27150                           
 27151                           ;stkvar	_a @ sp[(-13)+-8]
 27152  014F9A  0EED               	movlw	-19
 27153  014F9C  8EE3               	bsf	plusw1,7,c
 27154                           
 27155                           ;stkvar	_a @ sp[(-13)+-8]
 27156  014F9E  0EEE               	movlw	238
 27157  014FA0  24E1               	addwf	fsr1l,w,c
 27158  014FA2  6ED9               	movwf	fsr2l,c
 27159  014FA4  0EFF               	movlw	255
 27160  014FA6  20E2               	addwfc	fsr1h,w,c
 27161  014FA8  6EDA               	movwf	fsr2h,c
 27162  014FAA  0E00               	movlw	0
 27163  014FAC  6EDF               	movwf	indf2,c
 27164  014FAE  D018               	goto	l8587
 27165  014FB0                     l8585:
 27166  014FB0  0E00               	movlw	0
 27167  014FB2  6E09               	movwf	(btemp+8)^0,c
 27168  014FB4  0E00               	movlw	0
 27169  014FB6  6E0A               	movwf	(btemp+9)^0,c
 27170  014FB8  0E00               	movlw	0
 27171  014FBA  6E0B               	movwf	(btemp+10)^0,c
 27172  014FBC  0E00               	movlw	0
 27173  014FBE  6E0C               	movwf	(btemp+11)^0,c
 27174                           
 27175                           ;stkvar	_a @ sp[(-13)+-8]
 27176  014FC0  0EEB               	movlw	-21
 27177  014FC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 27178  014FC8  0EEC               	movlw	-20
 27179  014FCA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27180  014FD0  0EED               	movlw	-19
 27181  014FD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27182  014FD8  0EEE               	movlw	-18
 27183  014FDA  0060  F033  FFE3   	movff	btemp+11,plusw1
 27184  014FE0                     l8587:
 27185                           
 27186                           ;stkvar	_a @ sp[(-13)+-8]
 27187  014FE0  0EEB               	movlw	-21
 27188  014FE2  50E3               	movf	plusw1,w,c
 27189  014FE4  E139               	bnz	l8599
 27190  014FE6  0EEC               	movlw	-20
 27191  014FE8  50E3               	movf	plusw1,w,c
 27192  014FEA  E136               	bnz	l8599
 27193  014FEC  0EED               	movlw	-19
 27194  014FEE  50E3               	movf	plusw1,w,c
 27195  014FF0  E133               	bnz	l8599
 27196  014FF2  0EEE               	movlw	-18
 27197  014FF4  50E3               	movf	plusw1,w,c
 27198  014FF6  A4D8               	btfss	status,2,c
 27199  014FF8  D02F               	goto	l8599
 27200                           
 27201                           ;stkvar	_b @ sp[(-13)+-4]
 27202  014FFA  0EEF               	movlw	-17
 27203  014FFC  6AE3               	clrf	plusw1,c
 27204  014FFE  0EF0               	movlw	-16
 27205  015000  6AE3               	clrf	plusw1,c
 27206  015002  0EF1               	movlw	-15
 27207  015004  6AE3               	clrf	plusw1,c
 27208  015006  0EF2               	movlw	-14
 27209  015008  6AE3               	clrf	plusw1,c
 27210                           
 27211                           ;stkvar	_b @ sp[(-13)+-4]
 27212  01500A  0EF1               	movlw	241
 27213  01500C  24E1               	addwf	fsr1l,w,c
 27214  01500E  6ED9               	movwf	fsr2l,c
 27215  015010  0EFF               	movlw	255
 27216  015012  20E2               	addwfc	fsr1h,w,c
 27217  015014  6EDA               	movwf	fsr2h,c
 27218  015016  0E80               	movlw	128
 27219  015018  12DE               	iorwf	postinc2,f,c
 27220  01501A  0E7F               	movlw	127
 27221  01501C  12DD               	iorwf	postdec2,f,c
 27222  01501E                     l8593:
 27223                           
 27224                           ;stkvar	_sign @ sp[(-13)+12]
 27225  01501E  0EFF               	movlw	-1
 27226  015020  006F FF8C  F00C    	movff	plusw1,btemp+11
 27227                           
 27228                           ;stkvar	_b @ sp[(-13)+-4]
 27229  015026  0EF2               	movlw	242
 27230  015028  24E1               	addwf	fsr1l,w,c
 27231  01502A  6ED9               	movwf	fsr2l,c
 27232  01502C  0EFF               	movlw	255
 27233  01502E  20E2               	addwfc	fsr1h,w,c
 27234  015030  6EDA               	movwf	fsr2h,c
 27235  015032  500C               	movf	(btemp+11)^0,w,c
 27236  015034  12DF               	iorwf	indf2,f,c
 27237                           
 27238                           ;stkvar	_b @ sp[(-13)+-4]
 27239  015036  0EEF               	movlw	-17
 27240  015038  006F FF8C  F001    	movff	plusw1,btemp
 27241  01503E  0EF0               	movlw	-16
 27242  015040  006F FF8C  F002    	movff	plusw1,btemp+1
 27243  015046  0EF1               	movlw	-15
 27244  015048  006F FF8C  F003    	movff	plusw1,btemp+2
 27245  01504E  0EF2               	movlw	-14
 27246  015050  006F FF8C  F004    	movff	plusw1,btemp+3
 27247  015056  D19F               	goto	l3100
 27248  015058                     l8599:
 27249                           
 27250                           ;stkvar	_bexp @ sp[(-13)+11]
 27251  015058  0EFE               	movlw	-2
 27252  01505A  50E3               	movf	plusw1,w,c
 27253  01505C  A4D8               	btfss	status,2,c
 27254  01505E  D009               	goto	l8607
 27255  015060  0E00               	movlw	0
 27256  015062  6E01               	movwf	btemp^0,c
 27257  015064  0E00               	movlw	0
 27258  015066  6E02               	movwf	(btemp+1)^0,c
 27259  015068  0E00               	movlw	0
 27260  01506A  6E03               	movwf	(btemp+2)^0,c
 27261  01506C  0E00               	movlw	0
 27262  01506E  6E04               	movwf	(btemp+3)^0,c
 27263  015070  D192               	goto	l3100
 27264  015072                     l8607:
 27265                           
 27266                           ;stkvar	_bexp @ sp[(-13)+11]
 27267  015072  0EFE               	movlw	-2
 27268  015074  50E3               	movf	plusw1,w,c
 27269  015076  6E0B               	movwf	(btemp+10)^0,c
 27270  015078  6A0C               	clrf	(btemp+11)^0,c
 27271                           
 27272                           ;stkvar	_aexp @ sp[(-13)+10]
 27273  01507A  0EFD               	movlw	-3
 27274  01507C  50E3               	movf	plusw1,w,c
 27275  01507E  5E0B               	subwf	(btemp+10)^0,f,c
 27276  015080  0E00               	movlw	0
 27277  015082  5A0C               	subwfb	(btemp+11)^0,f,c
 27278  015084  0E7F               	movlw	127
 27279  015086  260B               	addwf	(btemp+10)^0,f,c
 27280  015088  0E00               	movlw	0
 27281  01508A  220C               	addwfc	(btemp+11)^0,f,c
 27282                           
 27283                           ;stkvar	_new_exp @ sp[(-13)+8]
 27284  01508C  0EFB               	movlw	-5
 27285  01508E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27286  015094  0EFC               	movlw	-4
 27287  015096  0060  F033  FFE3   	movff	btemp+11,plusw1
 27288                           
 27289                           ;stkvar	_b @ sp[(-13)+-4]
 27290  01509C  0EEF               	movlw	-17
 27291  01509E  006F FF8C  F009    	movff	plusw1,btemp+8
 27292  0150A4  0EF0               	movlw	-16
 27293  0150A6  006F FF8C  F00A    	movff	plusw1,btemp+9
 27294  0150AC  0EF1               	movlw	-15
 27295  0150AE  006F FF8C  F00B    	movff	plusw1,btemp+10
 27296  0150B4  0EF2               	movlw	-14
 27297  0150B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 27298                           
 27299                           ;stkvar	_rem @ sp[(-13)+4]
 27300  0150BC  0EF7               	movlw	-9
 27301  0150BE  0060  F027  FFE3   	movff	btemp+8,plusw1
 27302  0150C4  0EF8               	movlw	-8
 27303  0150C6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27304  0150CC  0EF9               	movlw	-7
 27305  0150CE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27306  0150D4  0EFA               	movlw	-6
 27307  0150D6  0060  F033  FFE3   	movff	btemp+11,plusw1
 27308                           
 27309                           ;stkvar	_b @ sp[(-13)+-4]
 27310  0150DC  0EEF               	movlw	-17
 27311  0150DE  6AE3               	clrf	plusw1,c
 27312  0150E0  0EF0               	movlw	-16
 27313  0150E2  6AE3               	clrf	plusw1,c
 27314  0150E4  0EF1               	movlw	-15
 27315  0150E6  6AE3               	clrf	plusw1,c
 27316  0150E8  0EF2               	movlw	-14
 27317  0150EA  6AE3               	clrf	plusw1,c
 27318                           
 27319                           ;stkvar	_grs @ sp[(-13)+0]
 27320  0150EC  0EF3               	movlw	-13
 27321  0150EE  6AE3               	clrf	plusw1,c
 27322  0150F0  0EF4               	movlw	-12
 27323  0150F2  6AE3               	clrf	plusw1,c
 27324  0150F4  0EF5               	movlw	-11
 27325  0150F6  6AE3               	clrf	plusw1,c
 27326  0150F8  0EF6               	movlw	-10
 27327  0150FA  6AE3               	clrf	plusw1,c
 27328                           
 27329                           ;stkvar	_aexp @ sp[(-13)+10]
 27330  0150FC  0EFD               	movlw	-3
 27331  0150FE  6AE3               	clrf	plusw1,c
 27332  015100  D050               	goto	l8635
 27333  015102                     l8617:
 27334                           
 27335                           ;stkvar	_aexp @ sp[(-13)+10]
 27336  015102  0EFD               	movlw	-3
 27337  015104  50E3               	movf	plusw1,w,c
 27338  015106  B4D8               	btfsc	status,2,c
 27339  015108  D020               	goto	l8627
 27340                           
 27341                           ;stkvar	_rem @ sp[(-13)+4]
 27342  01510A  90D8               	bcf	status,0,c
 27343  01510C  0EF7               	movlw	-9
 27344  01510E  36E3               	rlcf	plusw1,f,c
 27345  015110  0EF8               	movlw	-8
 27346  015112  36E3               	rlcf	plusw1,f,c
 27347  015114  0EF9               	movlw	-7
 27348  015116  36E3               	rlcf	plusw1,f,c
 27349  015118  0EFA               	movlw	-6
 27350  01511A  36E3               	rlcf	plusw1,f,c
 27351                           
 27352                           ;stkvar	_b @ sp[(-13)+-4]
 27353  01511C  90D8               	bcf	status,0,c
 27354  01511E  0EEF               	movlw	-17
 27355  015120  36E3               	rlcf	plusw1,f,c
 27356  015122  0EF0               	movlw	-16
 27357  015124  36E3               	rlcf	plusw1,f,c
 27358  015126  0EF1               	movlw	-15
 27359  015128  36E3               	rlcf	plusw1,f,c
 27360  01512A  0EF2               	movlw	-14
 27361  01512C  36E3               	rlcf	plusw1,f,c
 27362                           
 27363                           ;stkvar	_grs @ sp[(-13)+0]
 27364  01512E  0EF6               	movlw	-10
 27365  015130  AEE3               	btfss	plusw1,7,c
 27366  015132  D002               	goto	l8625
 27367                           
 27368                           ;stkvar	_b @ sp[(-13)+-4]
 27369  015134  0EEF               	movlw	-17
 27370  015136  80E3               	bsf	plusw1,0,c
 27371  015138                     l8625:
 27372                           
 27373                           ;stkvar	_grs @ sp[(-13)+0]
 27374  015138  90D8               	bcf	status,0,c
 27375  01513A  0EF3               	movlw	-13
 27376  01513C  36E3               	rlcf	plusw1,f,c
 27377  01513E  0EF4               	movlw	-12
 27378  015140  36E3               	rlcf	plusw1,f,c
 27379  015142  0EF5               	movlw	-11
 27380  015144  36E3               	rlcf	plusw1,f,c
 27381  015146  0EF6               	movlw	-10
 27382  015148  36E3               	rlcf	plusw1,f,c
 27383  01514A                     l8627:
 27384                           
 27385                           ;stkvar	_a @ sp[(-13)+-8]
 27386                           ;stkvar	_rem @ sp[(-13)+4]
 27387  01514A  50E1               	movf	fsr1l,w,c
 27388  01514C  0FF7               	addlw	-9
 27389  01514E  6ED9               	movwf	fsr2l,c
 27390  015150  50E2               	movf	fsr1h,w,c
 27391  015152  6EDA               	movwf	fsr2h,c
 27392  015154  0EFF               	movlw	255
 27393  015156  22DA               	addwfc	fsr2h,f,c
 27394  015158  0EEB               	movlw	-21
 27395  01515A  50E3               	movf	plusw1,w,c
 27396  01515C  5CDE               	subwf	postinc2,w,c
 27397  01515E  0EEC               	movlw	-20
 27398  015160  50E3               	movf	plusw1,w,c
 27399  015162  58DE               	subwfb	postinc2,w,c
 27400  015164  0EED               	movlw	-19
 27401  015166  50E3               	movf	plusw1,w,c
 27402  015168  58DE               	subwfb	postinc2,w,c
 27403  01516A  0EEE               	movlw	-18
 27404  01516C  50E3               	movf	plusw1,w,c
 27405  01516E  58DE               	subwfb	postinc2,w,c
 27406  015170  A0D8               	btfss	status,0,c
 27407  015172  D015               	goto	l8633
 27408                           
 27409                           ;stkvar	_grs @ sp[(-13)+0]
 27410  015174  0EF6               	movlw	-10
 27411  015176  8CE3               	bsf	plusw1,6,c
 27412                           
 27413                           ;stkvar	_a @ sp[(-13)+-8]
 27414                           ;stkvar	_rem @ sp[(-13)+4]
 27415  015178  50E1               	movf	fsr1l,w,c
 27416  01517A  0FF7               	addlw	-9
 27417  01517C  6ED9               	movwf	fsr2l,c
 27418  01517E  50E2               	movf	fsr1h,w,c
 27419  015180  6EDA               	movwf	fsr2h,c
 27420  015182  0EFF               	movlw	255
 27421  015184  22DA               	addwfc	fsr2h,f,c
 27422  015186  0EEB               	movlw	-21
 27423  015188  50E3               	movf	plusw1,w,c
 27424  01518A  5EDE               	subwf	postinc2,f,c
 27425  01518C  0EEC               	movlw	-20
 27426  01518E  50E3               	movf	plusw1,w,c
 27427  015190  5ADE               	subwfb	postinc2,f,c
 27428  015192  0EED               	movlw	-19
 27429  015194  50E3               	movf	plusw1,w,c
 27430  015196  5ADE               	subwfb	postinc2,f,c
 27431  015198  0EEE               	movlw	-18
 27432  01519A  50E3               	movf	plusw1,w,c
 27433  01519C  5ADE               	subwfb	postinc2,f,c
 27434  01519E                     l8633:
 27435                           
 27436                           ;stkvar	_aexp @ sp[(-13)+10]
 27437  01519E  0EFD               	movlw	-3
 27438  0151A0  2AE3               	incf	plusw1,f,c
 27439  0151A2                     l8635:
 27440                           
 27441                           ;stkvar	_aexp @ sp[(-13)+10]
 27442  0151A2  0EFD               	movlw	-3
 27443  0151A4  006F FF8C  F001    	movff	plusw1,btemp
 27444  0151AA  0E19               	movlw	25
 27445  0151AC  6401               	cpfsgt	btemp^0,c
 27446  0151AE  D7A9               	goto	l8617
 27447                           
 27448                           ;stkvar	_rem @ sp[(-13)+4]
 27449  0151B0  0EF7               	movlw	-9
 27450  0151B2  50E3               	movf	plusw1,w,c
 27451  0151B4  E10A               	bnz	u6880
 27452  0151B6  0EF8               	movlw	-8
 27453  0151B8  50E3               	movf	plusw1,w,c
 27454  0151BA  E107               	bnz	u6880
 27455  0151BC  0EF9               	movlw	-7
 27456  0151BE  50E3               	movf	plusw1,w,c
 27457  0151C0  E104               	bnz	u6880
 27458  0151C2  0EFA               	movlw	-6
 27459  0151C4  50E3               	movf	plusw1,w,c
 27460  0151C6  B4D8               	btfsc	status,2,c
 27461  0151C8  D024               	goto	l8651
 27462  0151CA                     u6880:
 27463                           
 27464                           ;stkvar	_grs @ sp[(-13)+0]
 27465  0151CA  0EF3               	movlw	-13
 27466  0151CC  80E3               	bsf	plusw1,0,c
 27467  0151CE  D021               	goto	l8651
 27468  0151D0                     l8641:
 27469                           
 27470                           ;stkvar	_b @ sp[(-13)+-4]
 27471  0151D0  90D8               	bcf	status,0,c
 27472  0151D2  0EEF               	movlw	-17
 27473  0151D4  36E3               	rlcf	plusw1,f,c
 27474  0151D6  0EF0               	movlw	-16
 27475  0151D8  36E3               	rlcf	plusw1,f,c
 27476  0151DA  0EF1               	movlw	-15
 27477  0151DC  36E3               	rlcf	plusw1,f,c
 27478  0151DE  0EF2               	movlw	-14
 27479  0151E0  36E3               	rlcf	plusw1,f,c
 27480                           
 27481                           ;stkvar	_grs @ sp[(-13)+0]
 27482  0151E2  0EF6               	movlw	-10
 27483  0151E4  AEE3               	btfss	plusw1,7,c
 27484  0151E6  D002               	goto	l8647
 27485                           
 27486                           ;stkvar	_b @ sp[(-13)+-4]
 27487  0151E8  0EEF               	movlw	-17
 27488  0151EA  80E3               	bsf	plusw1,0,c
 27489  0151EC                     l8647:
 27490                           
 27491                           ;stkvar	_grs @ sp[(-13)+0]
 27492  0151EC  90D8               	bcf	status,0,c
 27493  0151EE  0EF3               	movlw	-13
 27494  0151F0  36E3               	rlcf	plusw1,f,c
 27495  0151F2  0EF4               	movlw	-12
 27496  0151F4  36E3               	rlcf	plusw1,f,c
 27497  0151F6  0EF5               	movlw	-11
 27498  0151F8  36E3               	rlcf	plusw1,f,c
 27499  0151FA  0EF6               	movlw	-10
 27500  0151FC  36E3               	rlcf	plusw1,f,c
 27501                           
 27502                           ;stkvar	_new_exp @ sp[(-13)+8]
 27503  0151FE  50E1               	movf	fsr1l,w,c
 27504  015200  0FFB               	addlw	-5
 27505  015202  6ED9               	movwf	fsr2l,c
 27506  015204  50E2               	movf	fsr1h,w,c
 27507  015206  6EDA               	movwf	fsr2h,c
 27508  015208  0EFF               	movlw	255
 27509  01520A  22DA               	addwfc	fsr2h,f,c
 27510  01520C  06DE               	decf	postinc2,f,c
 27511  01520E  0E00               	movlw	0
 27512  015210  5ADD               	subwfb	postdec2,f,c
 27513  015212                     l8651:
 27514                           
 27515                           ;stkvar	_b @ sp[(-13)+-4]
 27516  015212  0EF1               	movlw	-15
 27517  015214  AEE3               	btfss	plusw1,7,c
 27518  015216  D7DC               	goto	l8641
 27519                           
 27520                           ;stkvar	_aexp @ sp[(-13)+10]
 27521  015218  0EFD               	movlw	-3
 27522  01521A  6AE3               	clrf	plusw1,c
 27523                           
 27524                           ;stkvar	_grs @ sp[(-13)+0]
 27525  01521C  0EF6               	movlw	-10
 27526  01521E  AEE3               	btfss	plusw1,7,c
 27527  015220  D020               	goto	l8665
 27528                           
 27529                           ;stkvar	_grs @ sp[(-13)+0]
 27530  015222  50E1               	movf	fsr1l,w,c
 27531  015224  0FF3               	addlw	-13
 27532  015226  6ED9               	movwf	fsr2l,c
 27533  015228  50E2               	movf	fsr1h,w,c
 27534  01522A  6EDA               	movwf	fsr2h,c
 27535  01522C  0EFF               	movlw	255
 27536  01522E  22DA               	addwfc	fsr2h,f,c
 27537  015230  0EFF               	movlw	255
 27538  015232  14DE               	andwf	postinc2,w,c
 27539  015234  6E09               	movwf	(btemp+8)^0,c
 27540  015236  0EFF               	movlw	255
 27541  015238  14DE               	andwf	postinc2,w,c
 27542  01523A  6E0A               	movwf	(btemp+9)^0,c
 27543  01523C  0EFF               	movlw	255
 27544  01523E  14DE               	andwf	postinc2,w,c
 27545  015240  6E0B               	movwf	(btemp+10)^0,c
 27546  015242  0E7F               	movlw	127
 27547  015244  14DE               	andwf	postinc2,w,c
 27548  015246  6E0C               	movwf	(btemp+11)^0,c
 27549  015248  5009               	movf	(btemp+8)^0,w,c
 27550  01524A  100A               	iorwf	(btemp+9)^0,w,c
 27551  01524C  100B               	iorwf	(btemp+10)^0,w,c
 27552  01524E  100C               	iorwf	(btemp+11)^0,w,c
 27553  015250  B4D8               	btfsc	status,2,c
 27554  015252  D004               	goto	l8661
 27555  015254                     u6920:
 27556                           
 27557                           ;stkvar	_aexp @ sp[(-13)+10]
 27558  015254  0EFD               	movlw	-3
 27559  015256  6AE3               	clrf	plusw1,c
 27560  015258  2AE3               	incf	plusw1,f,c
 27561  01525A  D003               	goto	l8665
 27562  01525C                     l8661:
 27563                           
 27564                           ;stkvar	_b @ sp[(-13)+-4]
 27565  01525C  0EEF               	movlw	-17
 27566  01525E  B0E3               	btfsc	plusw1,0,c
 27567  015260  D7F9               	goto	u6920
 27568  015262                     l8665:
 27569                           
 27570                           ;stkvar	_aexp @ sp[(-13)+10]
 27571  015262  0EFD               	movlw	-3
 27572  015264  50E3               	movf	plusw1,w,c
 27573  015266  B4D8               	btfsc	status,2,c
 27574  015268  D036               	goto	l8675
 27575                           
 27576                           ;stkvar	_b @ sp[(-13)+-4]
 27577  01526A  50E1               	movf	fsr1l,w,c
 27578  01526C  0FEF               	addlw	-17
 27579  01526E  6ED9               	movwf	fsr2l,c
 27580  015270  50E2               	movf	fsr1h,w,c
 27581  015272  6EDA               	movwf	fsr2h,c
 27582  015274  0EFF               	movlw	255
 27583  015276  22DA               	addwfc	fsr2h,f,c
 27584  015278  2ADE               	incf	postinc2,f,c
 27585  01527A  0E00               	movlw	0
 27586  01527C  22DE               	addwfc	postinc2,f,c
 27587  01527E  22DE               	addwfc	postinc2,f,c
 27588  015280  22DE               	addwfc	postinc2,f,c
 27589                           
 27590                           ;stkvar	_b @ sp[(-13)+-4]
 27591  015282  0EF2               	movlw	-14
 27592  015284  A0E3               	btfss	plusw1,0,c
 27593  015286  D027               	goto	l8675
 27594  015288  0E01               	movlw	1
 27595  01528A  6E0C               	movwf	(btemp+11)^0,c
 27596                           
 27597                           ;stkvar	_b @ sp[(-13)+-4]
 27598  01528C  50E1               	movf	fsr1l,w,c
 27599  01528E  0FEF               	addlw	-17
 27600  015290  6ED9               	movwf	fsr2l,c
 27601  015292  50E2               	movf	fsr1h,w,c
 27602  015294  6EDA               	movwf	fsr2h,c
 27603  015296  0EFF               	movlw	255
 27604  015298  22DA               	addwfc	fsr2h,f,c
 27605  01529A  280C               	incf	(btemp+11)^0,w,c
 27606  01529C  52DE               	movf	postinc2,f,c
 27607  01529E  D008               	goto	u6960
 27608  0152A0                     u6965:
 27609  0152A0  52DE               	movf	postinc2,f,c
 27610  0152A2  90D8               	bcf	status,0,c
 27611  0152A4  BEDC               	btfsc	preinc2,7,c
 27612  0152A6  80D8               	bsf	status,0,c
 27613  0152A8  32DD               	rrcf	postdec2,f,c
 27614  0152AA  32DD               	rrcf	postdec2,f,c
 27615  0152AC  32DD               	rrcf	postdec2,f,c
 27616  0152AE  32DE               	rrcf	postinc2,f,c
 27617  0152B0                     u6960:
 27618  0152B0  2EE8               	decfsz	wreg,f,c
 27619  0152B2  D7F6               	goto	u6965
 27620                           
 27621                           ;stkvar	_new_exp @ sp[(-13)+8]
 27622  0152B4  0EFB               	movlw	-5
 27623  0152B6  50E3               	movf	plusw1,w,c
 27624  0152B8  0F01               	addlw	1
 27625  0152BA  6E01               	movwf	btemp^0,c
 27626  0152BC  0EFB               	movlw	-5
 27627  0152BE  0060  F007  FFE3   	movff	btemp,plusw1
 27628  0152C4  6A01               	clrf	btemp^0,c
 27629  0152C6  0EFC               	movlw	-4
 27630  0152C8  50E3               	movf	plusw1,w,c
 27631  0152CA  2001               	addwfc	btemp^0,w,c
 27632  0152CC  6E01               	movwf	btemp^0,c
 27633  0152CE  0EFC               	movlw	-4
 27634  0152D0  0060  F007  FFE3   	movff	btemp,plusw1
 27635  0152D6                     l8675:
 27636                           
 27637                           ;stkvar	_new_exp @ sp[(-13)+8]
 27638  0152D6  0EFC               	movlw	-4
 27639  0152D8  BEE3               	btfsc	plusw1,7,c
 27640  0152DA  D01B               	goto	l8681
 27641  0152DC  0EFC               	movlw	-4
 27642  0152DE  50E3               	movf	plusw1,w,c
 27643  0152E0  E104               	bnz	u6970
 27644  0152E2  0EFB               	movlw	-5
 27645  0152E4  28E3               	incf	plusw1,w,c
 27646  0152E6  A0D8               	btfss	status,0,c
 27647  0152E8  D014               	goto	l8681
 27648  0152EA                     u6970:
 27649  0152EA  0EFF               	movlw	255
 27650  0152EC  6E0B               	movwf	(btemp+10)^0,c
 27651  0152EE  0E00               	movlw	0
 27652  0152F0  6E0C               	movwf	(btemp+11)^0,c
 27653                           
 27654                           ;stkvar	_new_exp @ sp[(-13)+8]
 27655  0152F2  0EFB               	movlw	-5
 27656  0152F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27657  0152FA  0EFC               	movlw	-4
 27658  0152FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 27659                           
 27660                           ;stkvar	_b @ sp[(-13)+-4]
 27661  015302  0EEF               	movlw	-17
 27662  015304  6AE3               	clrf	plusw1,c
 27663  015306  0EF0               	movlw	-16
 27664  015308  6AE3               	clrf	plusw1,c
 27665  01530A  0EF1               	movlw	-15
 27666  01530C  6AE3               	clrf	plusw1,c
 27667  01530E  0EF2               	movlw	-14
 27668  015310  6AE3               	clrf	plusw1,c
 27669  015312                     l8681:
 27670                           
 27671                           ;stkvar	_new_exp @ sp[(-13)+8]
 27672  015312  0EFC               	movlw	-4
 27673  015314  BEE3               	btfsc	plusw1,7,c
 27674  015316  D007               	goto	u6980
 27675  015318  0EFC               	movlw	-4
 27676  01531A  50E3               	movf	plusw1,w,c
 27677  01531C  E112               	bnz	l8687
 27678  01531E  0EFB               	movlw	-5
 27679  015320  04E3               	decf	plusw1,w,c
 27680  015322  B0D8               	btfsc	status,0,c
 27681  015324  D00E               	goto	l8687
 27682  015326                     u6980:
 27683                           
 27684                           ;stkvar	_new_exp @ sp[(-13)+8]
 27685  015326  0EFB               	movlw	-5
 27686  015328  6AE3               	clrf	plusw1,c
 27687  01532A  0EFC               	movlw	-4
 27688  01532C  6AE3               	clrf	plusw1,c
 27689                           
 27690                           ;stkvar	_b @ sp[(-13)+-4]
 27691  01532E  0EEF               	movlw	-17
 27692  015330  6AE3               	clrf	plusw1,c
 27693  015332  0EF0               	movlw	-16
 27694  015334  6AE3               	clrf	plusw1,c
 27695  015336  0EF1               	movlw	-15
 27696  015338  6AE3               	clrf	plusw1,c
 27697  01533A  0EF2               	movlw	-14
 27698  01533C  6AE3               	clrf	plusw1,c
 27699                           
 27700                           ;stkvar	_sign @ sp[(-13)+12]
 27701  01533E  0EFF               	movlw	-1
 27702  015340  6AE3               	clrf	plusw1,c
 27703  015342                     l8687:
 27704                           
 27705                           ;stkvar	_new_exp @ sp[(-13)+8]
 27706                           ;stkvar	_bexp @ sp[(-13)+11]
 27707  015342  0EFB               	movlw	-5
 27708  015344  006F FF8C  F001    	movff	plusw1,btemp
 27709  01534A  0EFE               	movlw	-2
 27710  01534C  0060  F007  FFE3   	movff	btemp,plusw1
 27711                           
 27712                           ;stkvar	_bexp @ sp[(-13)+11]
 27713  015352  0EFE               	movlw	-2
 27714  015354  A0E3               	btfss	plusw1,0,c
 27715  015356  D009               	goto	l8693
 27716                           
 27717                           ;stkvar	_b @ sp[(-13)+-4]
 27718  015358  0EF1               	movlw	241
 27719  01535A  24E1               	addwf	fsr1l,w,c
 27720  01535C  6ED9               	movwf	fsr2l,c
 27721  01535E  0EFF               	movlw	255
 27722  015360  20E2               	addwfc	fsr1h,w,c
 27723  015362  6EDA               	movwf	fsr2h,c
 27724  015364  0E00               	movlw	0
 27725  015366  8EDB               	bsf	plusw2,7,c
 27726  015368  D008               	goto	l8695
 27727  01536A                     l8693:
 27728                           
 27729                           ;stkvar	_b @ sp[(-13)+-4]
 27730  01536A  0EF1               	movlw	241
 27731  01536C  24E1               	addwf	fsr1l,w,c
 27732  01536E  6ED9               	movwf	fsr2l,c
 27733  015370  0EFF               	movlw	255
 27734  015372  20E2               	addwfc	fsr1h,w,c
 27735  015374  6EDA               	movwf	fsr2h,c
 27736  015376  0E7F               	movlw	127
 27737  015378  16DF               	andwf	indf2,f,c
 27738  01537A                     l8695:
 27739                           
 27740                           ;stkvar	_b @ sp[(-13)+-4]
 27741  01537A  0EF2               	movlw	242
 27742  01537C  24E1               	addwf	fsr1l,w,c
 27743  01537E  6ED9               	movwf	fsr2l,c
 27744  015380  0EFF               	movlw	255
 27745  015382  20E2               	addwfc	fsr1h,w,c
 27746  015384  6EDA               	movwf	fsr2h,c
 27747                           
 27748                           ;stkvar	_bexp @ sp[(-13)+11]
 27749  015386  0EFE               	movlw	-2
 27750  015388  006F FF8C  F00C    	movff	plusw1,btemp+11
 27751  01538E  90D8               	bcf	status,0,c
 27752  015390  300C               	rrcf	(btemp+11)^0,w,c
 27753  015392  6EDF               	movwf	indf2,c
 27754  015394  D644               	goto	l8593
 27755  015396                     l3100:
 27756                           
 27757                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 27758  015396  0EEB               	movlw	235
 27759  015398  26E1               	addwf	fsr1l,f,c
 27760  01539A  0EFF               	movlw	255
 27761  01539C  22E2               	addwfc	fsr1h,f,c
 27762  01539E  0012               	return		;funcret
 27763  0153A0                     __end_of___fldiv:
 27764                           	opt callstack 0
 27765                           
 27766 ;; *************** function ___flge *****************
 27767 ;; Defined at:
 27768 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 27769 ;; Parameters:    Size  Location     Type
 27770 ;;  ff1             4  [STACK] unsigned char 
 27771 ;;  ff2             4  [STACK] unsigned char 
 27772 ;; Auto vars:     Size  Location     Type
 27773 ;;		None
 27774 ;; Return value:  Size  Location     Type
 27775 ;;		None               void
 27776 ;; Registers used:
 27777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 27778 ;; Tracked objects:
 27779 ;;		On entry : 0/0
 27780 ;;		On exit  : 0/0
 27781 ;;		Unchanged: 0/0
 27782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27787 ;;Total ram usage:        0 bytes
 27788 ;; Hardware stack levels used:    1
 27789 ;; Hardware stack levels required when called:   15
 27790 ;; This function calls:
 27791 ;;		Nothing
 27792 ;; This function is called by:
 27793 ;;		_main
 27794 ;;		_convert_dac_raw
 27795 ;;		_calc_ror_data
 27796 ;;		_check_day_time
 27797 ;;		_calc_bsoc
 27798 ;;		_efgtoa
 27799 ;; This function uses a reentrant model
 27800 ;;
 27801                           
 27802                           	psect	text109
 27803  0195E8                     __ptext109:
 27804                           	opt callstack 0
 27805  0195E8                     ___flge:
 27806                           	opt callstack 0
 27807                           
 27808                           ;stkvar	_ff1 @ sp[(0)+-4]
 27809                           
 27810                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27811                           ;incstack = 0
 27812 ;; hardware stack exceeded
 27813  0195E8  50E1               	movf	fsr1l,w,c
 27814  0195EA  0FFC               	addlw	-4
 27815  0195EC  6ED9               	movwf	fsr2l,c
 27816  0195EE  50E2               	movf	fsr1h,w,c
 27817  0195F0  6EDA               	movwf	fsr2h,c
 27818  0195F2  0EFF               	movlw	255
 27819  0195F4  22DA               	addwfc	fsr2h,f,c
 27820  0195F6  0E00               	movlw	0
 27821  0195F8  14DE               	andwf	postinc2,w,c
 27822  0195FA  6E09               	movwf	(btemp+8)^0,c
 27823  0195FC  0E00               	movlw	0
 27824  0195FE  14DE               	andwf	postinc2,w,c
 27825  019600  6E0A               	movwf	(btemp+9)^0,c
 27826  019602  0E80               	movlw	128
 27827  019604  14DE               	andwf	postinc2,w,c
 27828  019606  6E0B               	movwf	(btemp+10)^0,c
 27829  019608  0E7F               	movlw	127
 27830  01960A  14DE               	andwf	postinc2,w,c
 27831  01960C  6E0C               	movwf	(btemp+11)^0,c
 27832  01960E  5009               	movf	(btemp+8)^0,w,c
 27833  019610  100A               	iorwf	(btemp+9)^0,w,c
 27834  019612  100B               	iorwf	(btemp+10)^0,w,c
 27835  019614  100C               	iorwf	(btemp+11)^0,w,c
 27836  019616  A4D8               	btfss	status,2,c
 27837  019618  D008               	goto	l8969
 27838                           
 27839                           ;stkvar	_ff1 @ sp[(0)+-4]
 27840  01961A  0EFC               	movlw	-4
 27841  01961C  6AE3               	clrf	plusw1,c
 27842  01961E  0EFD               	movlw	-3
 27843  019620  6AE3               	clrf	plusw1,c
 27844  019622  0EFE               	movlw	-2
 27845  019624  6AE3               	clrf	plusw1,c
 27846  019626  0EFF               	movlw	-1
 27847  019628  6AE3               	clrf	plusw1,c
 27848  01962A                     l8969:
 27849                           
 27850                           ;stkvar	_ff2 @ sp[(0)+-8]
 27851  01962A  50E1               	movf	fsr1l,w,c
 27852  01962C  0FF8               	addlw	-8
 27853  01962E  6ED9               	movwf	fsr2l,c
 27854  019630  50E2               	movf	fsr1h,w,c
 27855  019632  6EDA               	movwf	fsr2h,c
 27856  019634  0EFF               	movlw	255
 27857  019636  22DA               	addwfc	fsr2h,f,c
 27858  019638  0E00               	movlw	0
 27859  01963A  14DE               	andwf	postinc2,w,c
 27860  01963C  6E09               	movwf	(btemp+8)^0,c
 27861  01963E  0E00               	movlw	0
 27862  019640  14DE               	andwf	postinc2,w,c
 27863  019642  6E0A               	movwf	(btemp+9)^0,c
 27864  019644  0E80               	movlw	128
 27865  019646  14DE               	andwf	postinc2,w,c
 27866  019648  6E0B               	movwf	(btemp+10)^0,c
 27867  01964A  0E7F               	movlw	127
 27868  01964C  14DE               	andwf	postinc2,w,c
 27869  01964E  6E0C               	movwf	(btemp+11)^0,c
 27870  019650  5009               	movf	(btemp+8)^0,w,c
 27871  019652  100A               	iorwf	(btemp+9)^0,w,c
 27872  019654  100B               	iorwf	(btemp+10)^0,w,c
 27873  019656  100C               	iorwf	(btemp+11)^0,w,c
 27874  019658  A4D8               	btfss	status,2,c
 27875  01965A  D008               	goto	l2781
 27876                           
 27877                           ;stkvar	_ff2 @ sp[(0)+-8]
 27878  01965C  0EF8               	movlw	-8
 27879  01965E  6AE3               	clrf	plusw1,c
 27880  019660  0EF9               	movlw	-7
 27881  019662  6AE3               	clrf	plusw1,c
 27882  019664  0EFA               	movlw	-6
 27883  019666  6AE3               	clrf	plusw1,c
 27884  019668  0EFB               	movlw	-5
 27885  01966A  6AE3               	clrf	plusw1,c
 27886  01966C                     l2781:
 27887                           
 27888                           ;stkvar	_ff1 @ sp[(0)+-4]
 27889  01966C  0EFF               	movlw	-1
 27890  01966E  AEE3               	btfss	plusw1,7,c
 27891  019670  D024               	goto	l8975
 27892                           
 27893                           ;stkvar	_ff1 @ sp[(0)+-4]
 27894  019672  0E00               	movlw	0
 27895  019674  6E09               	movwf	(btemp+8)^0,c
 27896  019676  0E00               	movlw	0
 27897  019678  6E0A               	movwf	(btemp+9)^0,c
 27898  01967A  0E00               	movlw	0
 27899  01967C  6E0B               	movwf	(btemp+10)^0,c
 27900  01967E  0E80               	movlw	128
 27901  019680  6E0C               	movwf	(btemp+11)^0,c
 27902  019682  0EFC               	movlw	-4
 27903  019684  50E3               	movf	plusw1,w,c
 27904  019686  5E09               	subwf	(btemp+8)^0,f,c
 27905  019688  0EFD               	movlw	-3
 27906  01968A  50E3               	movf	plusw1,w,c
 27907  01968C  5A0A               	subwfb	(btemp+9)^0,f,c
 27908  01968E  0EFE               	movlw	-2
 27909  019690  50E3               	movf	plusw1,w,c
 27910  019692  5A0B               	subwfb	(btemp+10)^0,f,c
 27911  019694  0EFF               	movlw	-1
 27912  019696  50E3               	movf	plusw1,w,c
 27913  019698  5A0C               	subwfb	(btemp+11)^0,f,c
 27914                           
 27915                           ;stkvar	_ff1 @ sp[(0)+-4]
 27916  01969A  0EFC               	movlw	-4
 27917  01969C  0060  F027  FFE3   	movff	btemp+8,plusw1
 27918  0196A2  0EFD               	movlw	-3
 27919  0196A4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27920  0196AA  0EFE               	movlw	-2
 27921  0196AC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27922  0196B2  0EFF               	movlw	-1
 27923  0196B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 27924  0196BA                     l8975:
 27925                           
 27926                           ;stkvar	_ff2 @ sp[(0)+-8]
 27927  0196BA  0EFB               	movlw	-5
 27928  0196BC  AEE3               	btfss	plusw1,7,c
 27929  0196BE  D024               	goto	l8979
 27930                           
 27931                           ;stkvar	_ff2 @ sp[(0)+-8]
 27932  0196C0  0E00               	movlw	0
 27933  0196C2  6E09               	movwf	(btemp+8)^0,c
 27934  0196C4  0E00               	movlw	0
 27935  0196C6  6E0A               	movwf	(btemp+9)^0,c
 27936  0196C8  0E00               	movlw	0
 27937  0196CA  6E0B               	movwf	(btemp+10)^0,c
 27938  0196CC  0E80               	movlw	128
 27939  0196CE  6E0C               	movwf	(btemp+11)^0,c
 27940  0196D0  0EF8               	movlw	-8
 27941  0196D2  50E3               	movf	plusw1,w,c
 27942  0196D4  5E09               	subwf	(btemp+8)^0,f,c
 27943  0196D6  0EF9               	movlw	-7
 27944  0196D8  50E3               	movf	plusw1,w,c
 27945  0196DA  5A0A               	subwfb	(btemp+9)^0,f,c
 27946  0196DC  0EFA               	movlw	-6
 27947  0196DE  50E3               	movf	plusw1,w,c
 27948  0196E0  5A0B               	subwfb	(btemp+10)^0,f,c
 27949  0196E2  0EFB               	movlw	-5
 27950  0196E4  50E3               	movf	plusw1,w,c
 27951  0196E6  5A0C               	subwfb	(btemp+11)^0,f,c
 27952                           
 27953                           ;stkvar	_ff2 @ sp[(0)+-8]
 27954  0196E8  0EF8               	movlw	-8
 27955  0196EA  0060  F027  FFE3   	movff	btemp+8,plusw1
 27956  0196F0  0EF9               	movlw	-7
 27957  0196F2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27958  0196F8  0EFA               	movlw	-6
 27959  0196FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27960  019700  0EFB               	movlw	-5
 27961  019702  0060  F033  FFE3   	movff	btemp+11,plusw1
 27962  019708                     l8979:
 27963                           
 27964                           ;stkvar	_ff1 @ sp[(0)+-4]
 27965  019708  0EFF               	movlw	-1
 27966  01970A  7EE3               	btg	plusw1,7,c
 27967                           
 27968                           ;stkvar	_ff2 @ sp[(0)+-8]
 27969  01970C  0EFB               	movlw	-5
 27970  01970E  7EE3               	btg	plusw1,7,c
 27971                           
 27972                           ;stkvar	_ff2 @ sp[(0)+-8]
 27973                           ;stkvar	_ff1 @ sp[(0)+-4]
 27974  019710  50E1               	movf	fsr1l,w,c
 27975  019712  0FFC               	addlw	-4
 27976  019714  6ED9               	movwf	fsr2l,c
 27977  019716  50E2               	movf	fsr1h,w,c
 27978  019718  6EDA               	movwf	fsr2h,c
 27979  01971A  0EFF               	movlw	255
 27980  01971C  22DA               	addwfc	fsr2h,f,c
 27981  01971E  0EF8               	movlw	-8
 27982  019720  50E3               	movf	plusw1,w,c
 27983  019722  5CDE               	subwf	postinc2,w,c
 27984  019724  0EF9               	movlw	-7
 27985  019726  50E3               	movf	plusw1,w,c
 27986  019728  58DE               	subwfb	postinc2,w,c
 27987  01972A  0EFA               	movlw	-6
 27988  01972C  50E3               	movf	plusw1,w,c
 27989  01972E  58DE               	subwfb	postinc2,w,c
 27990  019730  0EFB               	movlw	-5
 27991  019732  50E3               	movf	plusw1,w,c
 27992  019734  58DE               	subwfb	postinc2,w,c
 27993  019736  B0D8               	btfsc	status,0,c
 27994  019738  D002               	goto	l8987
 27995  01973A  9001               	bcf	btemp& (0+255),0,c
 27996  01973C  D001               	goto	l2788
 27997  01973E                     l8987:
 27998  01973E  8001               	bsf	btemp& (0+255),0,c
 27999  019740                     l2788:
 28000                           
 28001                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 28002  019740  0EF8               	movlw	248
 28003  019742  26E1               	addwf	fsr1l,f,c
 28004  019744  0EFF               	movlw	255
 28005  019746  22E2               	addwfc	fsr1h,f,c
 28006  019748  0012               	return		;funcret
 28007  01974A                     __end_of___flge:
 28008                           	opt callstack 0
 28009                           
 28010 ;; *************** function _calc_model_data *****************
 28011 ;; Defined at:
 28012 ;;		line 67 in file "mbmc.c"
 28013 ;; Parameters:    Size  Location     Type
 28014 ;;		None
 28015 ;; Auto vars:     Size  Location     Type
 28016 ;;		None
 28017 ;; Return value:  Size  Location     Type
 28018 ;;                  1  [STACK] void 
 28019 ;; Registers used:
 28020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28021 ;; Tracked objects:
 28022 ;;		On entry : 0/1
 28023 ;;		On exit  : 3F/39
 28024 ;;		Unchanged: 0/0
 28025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28030 ;;Total ram usage:        0 bytes
 28031 ;; Hardware stack levels used:    1
 28032 ;; Hardware stack levels required when called:   18
 28033 ;; This function calls:
 28034 ;;		___fladd
 28035 ;;		___flmul
 28036 ;;		___flsub
 28037 ;;		_lp_filter
 28038 ;;		_start_bsoc
 28039 ;;		_stop_bsoc
 28040 ;; This function is called by:
 28041 ;;		_main
 28042 ;; This function uses a reentrant model
 28043 ;;
 28044                           
 28045                           	psect	text110
 28046  015CDC                     __ptext110:
 28047                           	opt callstack 0
 28048  015CDC                     _calc_model_data:
 28049                           	opt callstack 12
 28050                           
 28051                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 28052                           
 28053                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28054                           ;incstack = 0
 28055  015CDC  ECCA  F0E5         	call	_stop_bsoc	;wreg free
 28056                           
 28057                           ; BSR set to: 57
 28058                           ;mbmc.c: 72:  if (!V.calib) {
 28059  015CE0  0101               	movlb	1	; () banked
 28060  015CE2  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 28061  015CE4  A4D8               	btfss	status,2,c
 28062  015CE6  D219               	goto	l11601
 28063                           
 28064                           ; BSR set to: 1
 28065                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 28066  015CE8  EE21  F2FF         	lfsr	2,_C
 28067  015CEC  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 28068  015CF2  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 28069  015CF8  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 28070  015CFE  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 28071                           
 28072                           ; BSR set to: 1
 28073                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 28074  015D04  0060  F1C3  FFE6   	movff	calc_model_data@bcror,postinc1
 28075  015D0A  0060  F1C7  FFE6   	movff	calc_model_data@bcror+1,postinc1
 28076  015D10  0060  F1CB  FFE6   	movff	calc_model_data@bcror+2,postinc1
 28077  015D16  0060  F1CF  FFE6   	movff	calc_model_data@bcror+3,postinc1
 28078  015D1C  EE21  F343         	lfsr	2,_C+68	;volatile
 28079  015D20  006F FF7B FFE6     	movff	postinc2,postinc1
 28080  015D26  006F FF7B FFE6     	movff	postinc2,postinc1
 28081  015D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 28082  015D32  006F FF7B FFE6     	movff	postinc2,postinc1
 28083  015D38  ECC8  F0DF         	call	___flsub	;wreg free
 28084  015D3C  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 28085  015D42  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 28086  015D48  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 28087  015D4E  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 28088                           
 28089                           ;mbmc.c: 75:   bcror = C.c_bat;
 28090  015D54  C743  F070         	movff	_C+68,calc_model_data@bcror	;volatile
 28091  015D58  C744  F071         	movff	_C+69,calc_model_data@bcror+1	;volatile
 28092  015D5C  C745  F072         	movff	_C+70,calc_model_data@bcror+2	;volatile
 28093  015D60  C746  F073         	movff	_C+71,calc_model_data@bcror+3	;volatile
 28094                           
 28095                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 28096  015D64  EE21  F303         	lfsr	2,_C+4	;volatile
 28097  015D68  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 28098  015D6E  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 28099  015D74  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 28100  015D7A  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 28101                           
 28102                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 28103  015D80  EE21  F30F         	lfsr	2,_C+16	;volatile
 28104  015D84  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 28105  015D8A  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 28106  015D90  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 28107  015D96  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 28108                           
 28109                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 28110  015D9C  EE21  F333         	lfsr	2,_C+52	;volatile
 28111  015DA0  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 28112  015DA6  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 28113  015DAC  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 28114  015DB2  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 28115                           
 28116                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 28117  015DB8  0060  F1D3  FFE6   	movff	calc_model_data@bvror,postinc1
 28118  015DBE  0060  F1D7  FFE6   	movff	calc_model_data@bvror+1,postinc1
 28119  015DC4  0060  F1DB  FFE6   	movff	calc_model_data@bvror+2,postinc1
 28120  015DCA  0060  F1DF  FFE6   	movff	calc_model_data@bvror+3,postinc1
 28121  015DD0  EE21  F353         	lfsr	2,_C+84	;volatile
 28122  015DD4  006F FF7B FFE6     	movff	postinc2,postinc1
 28123  015DDA  006F FF7B FFE6     	movff	postinc2,postinc1
 28124  015DE0  006F FF7B FFE6     	movff	postinc2,postinc1
 28125  015DE6  006F FF7B FFE6     	movff	postinc2,postinc1
 28126  015DEC  ECC8  F0DF         	call	___flsub	;wreg free
 28127  015DF0  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 28128  015DF6  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 28129  015DFC  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 28130  015E02  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 28131                           
 28132                           ;mbmc.c: 80:   bvror = C.v_bat;
 28133  015E08  C753  F074         	movff	_C+84,calc_model_data@bvror	;volatile
 28134  015E0C  C754  F075         	movff	_C+85,calc_model_data@bvror+1	;volatile
 28135  015E10  C755  F076         	movff	_C+86,calc_model_data@bvror+2	;volatile
 28136  015E14  C756  F077         	movff	_C+87,calc_model_data@bvror+3	;volatile
 28137                           
 28138                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 28139  015E18  EE21  F313         	lfsr	2,_C+20	;volatile
 28140  015E1C  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 28141  015E22  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 28142  015E28  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 28143  015E2E  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 28144                           
 28145                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 28146  015E34  EE21  F307         	lfsr	2,_C+8	;volatile
 28147  015E38  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 28148  015E3E  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 28149  015E44  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 28150  015E4A  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 28151                           
 28152                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 28153  015E50  EE21  F32F         	lfsr	2,_C+48	;volatile
 28154  015E54  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 28155  015E5A  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 28156  015E60  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 28157  015E66  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 28158                           
 28159                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 28160  015E6C  0E01               	movlw	1
 28161  015E6E  6EE6               	movwf	postinc1,c
 28162  015E70  0E10               	movlw	16
 28163  015E72  6EE6               	movwf	postinc1,c
 28164  015E74  EE21  F2FF         	lfsr	2,_C
 28165  015E78  006F FF7B FFE6     	movff	postinc2,postinc1
 28166  015E7E  006F FF7B FFE6     	movff	postinc2,postinc1
 28167  015E84  006F FF7B FFE6     	movff	postinc2,postinc1
 28168  015E8A  006F FF7B FFE6     	movff	postinc2,postinc1
 28169  015E90  EE21  F303         	lfsr	2,_C+4	;volatile
 28170  015E94  006F FF7B FFE6     	movff	postinc2,postinc1
 28171  015E9A  006F FF7B FFE6     	movff	postinc2,postinc1
 28172  015EA0  006F FF7B FFE6     	movff	postinc2,postinc1
 28173  015EA6  006F FF7B FFE6     	movff	postinc2,postinc1
 28174  015EAC  ECC8  F0DF         	call	___flsub	;wreg free
 28175  015EB0  0060  F007  FFE6   	movff	btemp,postinc1
 28176  015EB6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28177  015EBC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28178  015EC2  0060  F013  FFE6   	movff	btemp+3,postinc1
 28179  015EC8  EC3F  F0C6         	call	_lp_filter	;wreg free
 28180  015ECC  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 28181  015ED2  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 28182  015ED8  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 28183  015EDE  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 28184                           
 28185                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 28186  015EE4  0E01               	movlw	1
 28187  015EE6  6EE6               	movwf	postinc1,c
 28188  015EE8  0E11               	movlw	17
 28189  015EEA  6EE6               	movwf	postinc1,c
 28190  015EEC  EE21  F353         	lfsr	2,_C+84	;volatile
 28191  015EF0  006F FF7B FFE6     	movff	postinc2,postinc1
 28192  015EF6  006F FF7B FFE6     	movff	postinc2,postinc1
 28193  015EFC  006F FF7B FFE6     	movff	postinc2,postinc1
 28194  015F02  006F FF7B FFE6     	movff	postinc2,postinc1
 28195  015F08  EE21  F33F         	lfsr	2,_C+64	;volatile
 28196  015F0C  006F FF7B FFE6     	movff	postinc2,postinc1
 28197  015F12  006F FF7B FFE6     	movff	postinc2,postinc1
 28198  015F18  006F FF7B FFE6     	movff	postinc2,postinc1
 28199  015F1E  006F FF7B FFE6     	movff	postinc2,postinc1
 28200  015F24  EC20  F09F         	call	___flmul	;wreg free
 28201  015F28  0060  F007  FFE6   	movff	btemp,postinc1
 28202  015F2E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28203  015F34  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28204  015F3A  0060  F013  FFE6   	movff	btemp+3,postinc1
 28205  015F40  EC3F  F0C6         	call	_lp_filter	;wreg free
 28206  015F44  0060  F004  F773   	movff	btemp,_C+116	;volatile
 28207  015F4A  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 28208  015F50  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 28209  015F56  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 28210                           
 28211                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 28212  015F5C  0E01               	movlw	1
 28213  015F5E  6EE6               	movwf	postinc1,c
 28214  015F60  0E12               	movlw	18
 28215  015F62  6EE6               	movwf	postinc1,c
 28216  015F64  EE21  F34F         	lfsr	2,_C+80	;volatile
 28217  015F68  006F FF7B FFE6     	movff	postinc2,postinc1
 28218  015F6E  006F FF7B FFE6     	movff	postinc2,postinc1
 28219  015F74  006F FF7B FFE6     	movff	postinc2,postinc1
 28220  015F7A  006F FF7B FFE6     	movff	postinc2,postinc1
 28221  015F80  EE21  F347         	lfsr	2,_C+72	;volatile
 28222  015F84  006F FF7B FFE6     	movff	postinc2,postinc1
 28223  015F8A  006F FF7B FFE6     	movff	postinc2,postinc1
 28224  015F90  006F FF7B FFE6     	movff	postinc2,postinc1
 28225  015F96  006F FF7B FFE6     	movff	postinc2,postinc1
 28226  015F9C  EC20  F09F         	call	___flmul	;wreg free
 28227  015FA0  0060  F007  FFE6   	movff	btemp,postinc1
 28228  015FA6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28229  015FAC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28230  015FB2  0060  F013  FFE6   	movff	btemp+3,postinc1
 28231  015FB8  EC3F  F0C6         	call	_lp_filter	;wreg free
 28232  015FBC  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 28233  015FC2  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 28234  015FC8  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 28235  015FCE  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 28236                           
 28237                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 28238  015FD4  0E01               	movlw	1
 28239  015FD6  6EE6               	movwf	postinc1,c
 28240  015FD8  0E13               	movlw	19
 28241  015FDA  6EE6               	movwf	postinc1,c
 28242  015FDC  0E00               	movlw	0
 28243  015FDE  6EE6               	movwf	postinc1,c
 28244  015FE0  0E00               	movlw	0
 28245  015FE2  6EE6               	movwf	postinc1,c
 28246  015FE4  0E60               	movlw	96
 28247  015FE6  6EE6               	movwf	postinc1,c
 28248  015FE8  0EC1               	movlw	193
 28249  015FEA  6EE6               	movwf	postinc1,c
 28250  015FEC  EE21  F363         	lfsr	2,_C+100	;volatile
 28251  015FF0  006F FF7B FFE6     	movff	postinc2,postinc1
 28252  015FF6  006F FF7B FFE6     	movff	postinc2,postinc1
 28253  015FFC  006F FF7B FFE6     	movff	postinc2,postinc1
 28254  016002  006F FF7B FFE6     	movff	postinc2,postinc1
 28255  016008  EE21  F33F         	lfsr	2,_C+64	;volatile
 28256  01600C  006F FF7B FFE6     	movff	postinc2,postinc1
 28257  016012  006F FF7B FFE6     	movff	postinc2,postinc1
 28258  016018  006F FF7B FFE6     	movff	postinc2,postinc1
 28259  01601E  006F FF7B FFE6     	movff	postinc2,postinc1
 28260  016024  EC20  F09F         	call	___flmul	;wreg free
 28261  016028  0060  F007  FFE6   	movff	btemp,postinc1
 28262  01602E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28263  016034  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28264  01603A  0060  F013  FFE6   	movff	btemp+3,postinc1
 28265  016040  EC35  F0A3         	call	___fladd	;wreg free
 28266  016044  0060  F007  FFE6   	movff	btemp,postinc1
 28267  01604A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28268  016050  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28269  016056  0060  F013  FFE6   	movff	btemp+3,postinc1
 28270  01605C  EC3F  F0C6         	call	_lp_filter	;wreg free
 28271  016060  0060  F004  F777   	movff	btemp,_C+120	;volatile
 28272  016066  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 28273  01606C  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 28274  016072  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 28275                           
 28276                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 28277  016078  0E01               	movlw	1
 28278  01607A  6EE6               	movwf	postinc1,c
 28279  01607C  0E14               	movlw	20
 28280  01607E  6EE6               	movwf	postinc1,c
 28281  016080  EE21  F353         	lfsr	2,_C+84	;volatile
 28282  016084  006F FF7B FFE6     	movff	postinc2,postinc1
 28283  01608A  006F FF7B FFE6     	movff	postinc2,postinc1
 28284  016090  006F FF7B FFE6     	movff	postinc2,postinc1
 28285  016096  006F FF7B FFE6     	movff	postinc2,postinc1
 28286  01609C  EE21  F343         	lfsr	2,_C+68	;volatile
 28287  0160A0  006F FF7B FFE6     	movff	postinc2,postinc1
 28288  0160A6  006F FF7B FFE6     	movff	postinc2,postinc1
 28289  0160AC  006F FF7B FFE6     	movff	postinc2,postinc1
 28290  0160B2  006F FF7B FFE6     	movff	postinc2,postinc1
 28291  0160B8  EC20  F09F         	call	___flmul	;wreg free
 28292  0160BC  0060  F007  FFE6   	movff	btemp,postinc1
 28293  0160C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28294  0160C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28295  0160CE  0060  F013  FFE6   	movff	btemp+3,postinc1
 28296  0160D4  EC3F  F0C6         	call	_lp_filter	;wreg free
 28297  0160D8  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 28298  0160DE  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 28299  0160E4  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 28300  0160EA  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 28301                           
 28302                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 28303  0160F0  EE21  F377         	lfsr	2,_C+120	;volatile
 28304  0160F4  0E03               	movlw	3
 28305  0160F6  AEDB               	btfss	plusw2,7,c
 28306  0160F8  D010               	goto	l11601
 28307                           
 28308                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 28309  0160FA  0E17               	movlw	23
 28310  0160FC  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 28311  016102  0EB7               	movlw	183
 28312  016104  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 28313  01610A  0ED1               	movlw	209
 28314  01610C  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 28315  016112  0E38               	movlw	56
 28316  016114  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 28317  01611A                     l11601:
 28318                           
 28319                           ;mbmc.c: 95:  start_bsoc();
 28320  01611A  EC59  F0E4         	call	_start_bsoc	;wreg free
 28321                           
 28322                           ; BSR set to: 57
 28323                           ;mbmc.c: 96:  C.update = 1;
 28324  01611E  0E01               	movlw	1
 28325  016120  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 28326                           
 28327                           ; BSR set to: 57
 28328                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28329  016126  0012               	return		;funcret
 28330  016128                     __end_of_calc_model_data:
 28331                           	opt callstack 0
 28332                           
 28333 ;; *************** function _stop_bsoc *****************
 28334 ;; Defined at:
 28335 ;;		line 130 in file "bsoc.c"
 28336 ;; Parameters:    Size  Location     Type
 28337 ;;		None
 28338 ;; Auto vars:     Size  Location     Type
 28339 ;;		None
 28340 ;; Return value:  Size  Location     Type
 28341 ;;                  1  [STACK] void 
 28342 ;; Registers used:
 28343 ;;		None
 28344 ;; Tracked objects:
 28345 ;;		On entry : 0/1
 28346 ;;		On exit  : 3F/39
 28347 ;;		Unchanged: 0/0
 28348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28353 ;;Total ram usage:        0 bytes
 28354 ;; Hardware stack levels used:    1
 28355 ;; Hardware stack levels required when called:   15
 28356 ;; This function calls:
 28357 ;;		Nothing
 28358 ;; This function is called by:
 28359 ;;		_calc_model_data
 28360 ;; This function uses a reentrant model
 28361 ;;
 28362                           
 28363                           	psect	text111
 28364  01CB94                     __ptext111:
 28365                           	opt callstack 0
 28366  01CB94                     _stop_bsoc:
 28367                           	opt callstack 14
 28368                           
 28369                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 28370                           
 28371                           ; BSR set to: 57
 28372                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28373                           ;incstack = 0
 28374  01CB94  0139               	movlb	57	; () banked
 28375  01CB96  9D96               	bcf	150,6,b	;volatile
 28376                           
 28377                           ; BSR set to: 57
 28378                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 28379  01CB98  0012               	return		;funcret
 28380  01CB9A                     __end_of_stop_bsoc:
 28381                           	opt callstack 0
 28382                           
 28383 ;; *************** function _start_bsoc *****************
 28384 ;; Defined at:
 28385 ;;		line 121 in file "bsoc.c"
 28386 ;; Parameters:    Size  Location     Type
 28387 ;;		None
 28388 ;; Auto vars:     Size  Location     Type
 28389 ;;		None
 28390 ;; Return value:  Size  Location     Type
 28391 ;;                  1  [STACK] void 
 28392 ;; Registers used:
 28393 ;;		wreg, status,2, status,0, btemp+11
 28394 ;; Tracked objects:
 28395 ;;		On entry : 0/1
 28396 ;;		On exit  : 3F/39
 28397 ;;		Unchanged: 0/0
 28398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28403 ;;Total ram usage:        0 bytes
 28404 ;; Hardware stack levels used:    1
 28405 ;; Hardware stack levels required when called:   15
 28406 ;; This function calls:
 28407 ;;		Nothing
 28408 ;; This function is called by:
 28409 ;;		_calc_model_data
 28410 ;; This function uses a reentrant model
 28411 ;;
 28412                           
 28413                           	psect	text112
 28414  01C8B2                     __ptext112:
 28415                           	opt callstack 0
 28416  01C8B2                     _start_bsoc:
 28417                           	opt callstack 14
 28418                           
 28419                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 28420                           
 28421                           ; BSR set to: 57
 28422                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28423                           ;incstack = 0
 28424  01C8B2  0139               	movlb	57	; () banked
 28425  01C8B4  8D96               	bsf	150,6,b	;volatile
 28426                           
 28427                           ; BSR set to: 57
 28428  01C8B6  A4BE               	btfss	190,2,c	;volatile
 28429  01C8B8  D002               	goto	u10010
 28430  01C8BA  0E01               	movlw	1
 28431  01C8BC  D001               	goto	u10016
 28432  01C8BE                     u10010:
 28433  01C8BE  0E00               	movlw	0
 28434  01C8C0                     u10016:
 28435  01C8C0  0AFF               	xorlw	255
 28436  01C8C2  6E0C               	movwf	(btemp+11)^0,c
 28437  01C8C4  460C               	rlncf	(btemp+11)^0,f,c
 28438  01C8C6  460C               	rlncf	(btemp+11)^0,f,c
 28439  01C8C8  50BE               	movf	190,w,c	;volatile
 28440  01C8CA  180C               	xorwf	(btemp+11)^0,w,c
 28441  01C8CC  0BFB               	andlw	-5
 28442  01C8CE  180C               	xorwf	(btemp+11)^0,w,c
 28443  01C8D0  6EBE               	movwf	190,c	;volatile
 28444                           
 28445                           ; BSR set to: 57
 28446                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 28447  01C8D2  0012               	return		;funcret
 28448  01C8D4                     __end_of_start_bsoc:
 28449                           	opt callstack 0
 28450                           
 28451 ;; *************** function _lp_filter *****************
 28452 ;; Defined at:
 28453 ;;		line 29 in file "mbmc.c"
 28454 ;; Parameters:    Size  Location     Type
 28455 ;;  new             4  [STACK] const float 
 28456 ;;  bn              1  [STACK] const unsigned char 
 28457 ;;  slow            1  [STACK] const char 
 28458 ;; Auto vars:     Size  Location     Type
 28459 ;;  lp_speed        4  [STACK] float 
 28460 ;; Return value:  Size  Location     Type
 28461 ;;                  4  [STACK] float 
 28462 ;; Registers used:
 28463 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28464 ;; Tracked objects:
 28465 ;;		On entry : 0/1
 28466 ;;		On exit  : 0/0
 28467 ;;		Unchanged: 0/0
 28468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28473 ;;Total ram usage:        0 bytes
 28474 ;; Hardware stack levels used:    1
 28475 ;; Hardware stack levels required when called:   17
 28476 ;; This function calls:
 28477 ;;		___fladd
 28478 ;;		___flmul
 28479 ;;		___flsub
 28480 ;; This function is called by:
 28481 ;;		_main
 28482 ;;		_convert_adc_data
 28483 ;;		_calc_model_data
 28484 ;; This function uses a reentrant model
 28485 ;;
 28486                           
 28487                           	psect	text113
 28488  018C7E                     __ptext113:
 28489                           	opt callstack 0
 28490  018C7E                     _lp_filter:
 28491                           	opt callstack 0
 28492                           
 28493                           ; BSR set to: 57
 28494                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28495  018C7E  52E6               	movf	postinc1,f,c
 28496  018C80  52E6               	movf	postinc1,f,c
 28497  018C82  52E6               	movf	postinc1,f,c
 28498  018C84  52E6               	movf	postinc1,f,c
 28499                           
 28500                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 28501                           ;stkvar	_bn @ sp[(-4)+-5]
 28502                           
 28503                           ;incstack = 0
 28504  018C86  0EF7               	movlw	-9
 28505  018C88  006F FF8C  F001    	movff	plusw1,btemp
 28506  018C8E  0E14               	movlw	20
 28507  018C90  6401               	cpfsgt	btemp^0,c
 28508  018C92  D011               	goto	l10803
 28509  018C94                     u9840:
 28510                           
 28511                           ;mbmc.c: 35:   return new;
 28512                           ;stkvar	_new @ sp[(-4)+-4]
 28513  018C94  0EF8               	movlw	-8
 28514  018C96  006F FF8C  F001    	movff	plusw1,btemp
 28515  018C9C  0EF9               	movlw	-7
 28516  018C9E  006F FF8C  F002    	movff	plusw1,btemp+1
 28517  018CA4  0EFA               	movlw	-6
 28518  018CA6  006F FF8C  F003    	movff	plusw1,btemp+2
 28519  018CAC  0EFB               	movlw	-5
 28520  018CAE  006F FF8C  F004    	movff	plusw1,btemp+3
 28521  018CB4  D0BD               	goto	l1947
 28522  018CB6                     l10803:
 28523                           
 28524                           ;mbmc.c: 37:  if (slow == (-1)) {
 28525                           ;stkvar	_slow @ sp[(-4)+-6]
 28526  018CB6  0EF6               	movlw	-10
 28527  018CB8  28E3               	incf	plusw1,w,c
 28528  018CBA  A4D8               	btfss	status,2,c
 28529  018CBC  D012               	goto	l10811
 28530                           
 28531                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 28532                           ;stkvar	_bn @ sp[(-4)+-5]
 28533  018CBE  0EF7               	movlw	-9
 28534  018CC0  50E3               	movf	plusw1,w,c
 28535  018CC2  0D04               	mullw	4
 28536  018CC4  0E00               	movlw	low lp_filter@smooth
 28537  018CC6  24F3               	addwf	243,w,c
 28538  018CC8  6ED9               	movwf	fsr2l,c
 28539  018CCA  0E02               	movlw	high lp_filter@smooth
 28540  018CCC  20F4               	addwfc	prodh,w,c
 28541  018CCE  6EDA               	movwf	fsr2h,c
 28542  018CD0  0E00               	movlw	0
 28543  018CD2  6EDE               	movwf	postinc2,c
 28544  018CD4  0E00               	movlw	0
 28545  018CD6  6EDE               	movwf	postinc2,c
 28546  018CD8  0E00               	movlw	0
 28547  018CDA  6EDE               	movwf	postinc2,c
 28548  018CDC  0E00               	movlw	0
 28549  018CDE  6EDD               	movwf	postdec2,c
 28550  018CE0  D7D9               	goto	u9840
 28551  018CE2                     l10811:
 28552                           
 28553                           ;mbmc.c: 42:  if (slow) {
 28554                           ;stkvar	_slow @ sp[(-4)+-6]
 28555  018CE2  0EF6               	movlw	-10
 28556  018CE4  50E3               	movf	plusw1,w,c
 28557  018CE6  B4D8               	btfsc	status,2,c
 28558  018CE8  D006               	goto	l10815
 28559                           
 28560                           ;mbmc.c: 43:   lp_speed = 0.033;
 28561  018CEA  0E02               	movlw	2
 28562  018CEC  6E09               	movwf	(btemp+8)^0,c
 28563  018CEE  0E2B               	movlw	43
 28564  018CF0  6E0A               	movwf	(btemp+9)^0,c
 28565  018CF2  0E07               	movlw	7
 28566  018CF4  D005               	goto	L34
 28567  018CF6                     l10815:
 28568                           
 28569                           ;mbmc.c: 45:   lp_speed = 0.066;
 28570  018CF6  0E02               	movlw	2
 28571  018CF8  6E09               	movwf	(btemp+8)^0,c
 28572  018CFA  0E2B               	movlw	43
 28573  018CFC  6E0A               	movwf	(btemp+9)^0,c
 28574  018CFE  0E87               	movlw	135
 28575  018D00                     L34:
 28576  018D00  6E0B               	movwf	(btemp+10)^0,c
 28577  018D02  0E3D               	movlw	61
 28578  018D04  6E0C               	movwf	(btemp+11)^0,c
 28579                           
 28580                           ;stkvar	_lp_speed @ sp[(-4)+0]
 28581  018D06  0EFC               	movlw	-4
 28582  018D08  0060  F027  FFE3   	movff	btemp+8,plusw1
 28583  018D0E  0EFD               	movlw	-3
 28584  018D10  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28585  018D16  0EFE               	movlw	-2
 28586  018D18  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28587  018D1E  0EFF               	movlw	-1
 28588  018D20  0060  F033  FFE3   	movff	btemp+11,plusw1
 28589                           
 28590                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 28591                           ;stkvar	_bn @ sp[(-4)+-5]
 28592  018D26  0EF7               	movlw	-9
 28593  018D28  50E3               	movf	plusw1,w,c
 28594  018D2A  0D04               	mullw	4
 28595  018D2C  0E00               	movlw	low lp_filter@smooth
 28596  018D2E  24F3               	addwf	243,w,c
 28597  018D30  6ED9               	movwf	fsr2l,c
 28598  018D32  0E02               	movlw	high lp_filter@smooth
 28599  018D34  20F4               	addwfc	prodh,w,c
 28600  018D36  6EDA               	movwf	fsr2h,c
 28601  018D38  006F FF7B FFE6     	movff	postinc2,postinc1
 28602  018D3E  006F FF7B FFE6     	movff	postinc2,postinc1
 28603  018D44  006F FF7B FFE6     	movff	postinc2,postinc1
 28604  018D4A  006F FF7B FFE6     	movff	postinc2,postinc1
 28605                           
 28606                           ;stkvar	_lp_speed @ sp[(-8)+0]
 28607  018D50  0EF8               	movlw	-8
 28608  018D52  006F FF8F FFE6     	movff	plusw1,postinc1
 28609  018D58  006F FF8F FFE6     	movff	plusw1,postinc1
 28610  018D5E  006F FF8F FFE6     	movff	plusw1,postinc1
 28611  018D64  006F FF8F FFE6     	movff	plusw1,postinc1
 28612                           
 28613                           ;stkvar	_bn @ sp[(-12)+-5]
 28614  018D6A  0EEF               	movlw	-17
 28615  018D6C  50E3               	movf	plusw1,w,c
 28616  018D6E  0D04               	mullw	4
 28617  018D70  0E00               	movlw	low lp_filter@smooth
 28618  018D72  24F3               	addwf	243,w,c
 28619  018D74  6ED9               	movwf	fsr2l,c
 28620  018D76  0E02               	movlw	high lp_filter@smooth
 28621  018D78  20F4               	addwfc	prodh,w,c
 28622  018D7A  6EDA               	movwf	fsr2h,c
 28623  018D7C  006F FF7B FFE6     	movff	postinc2,postinc1
 28624  018D82  006F FF7B FFE6     	movff	postinc2,postinc1
 28625  018D88  006F FF7B FFE6     	movff	postinc2,postinc1
 28626  018D8E  006F FF7B FFE6     	movff	postinc2,postinc1
 28627                           
 28628                           ;stkvar	_new @ sp[(-16)+-4]
 28629  018D94  0EEC               	movlw	-20
 28630  018D96  006F FF8F FFE6     	movff	plusw1,postinc1
 28631  018D9C  006F FF8F FFE6     	movff	plusw1,postinc1
 28632  018DA2  006F FF8F FFE6     	movff	plusw1,postinc1
 28633  018DA8  006F FF8F FFE6     	movff	plusw1,postinc1
 28634  018DAE  ECC8  F0DF         	call	___flsub	;wreg free
 28635  018DB2  0060  F007  FFE6   	movff	btemp,postinc1
 28636  018DB8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28637  018DBE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28638  018DC4  0060  F013  FFE6   	movff	btemp+3,postinc1
 28639  018DCA  EC20  F09F         	call	___flmul	;wreg free
 28640  018DCE  0060  F007  FFE6   	movff	btemp,postinc1
 28641  018DD4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28642  018DDA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28643  018DE0  0060  F013  FFE6   	movff	btemp+3,postinc1
 28644  018DE6  EC35  F0A3         	call	___fladd	;wreg free
 28645                           
 28646                           ;stkvar	_bn @ sp[(-4)+-5]
 28647  018DEA  0EF7               	movlw	-9
 28648  018DEC  50E3               	movf	plusw1,w,c
 28649  018DEE  0D04               	mullw	4
 28650  018DF0  0E00               	movlw	low lp_filter@smooth
 28651  018DF2  24F3               	addwf	243,w,c
 28652  018DF4  6ED9               	movwf	fsr2l,c
 28653  018DF6  0E02               	movlw	high lp_filter@smooth
 28654  018DF8  20F4               	addwfc	prodh,w,c
 28655  018DFA  6EDA               	movwf	fsr2h,c
 28656  018DFC  0060  F007  FFDE   	movff	btemp,postinc2
 28657  018E02  0060  F00B  FFDE   	movff	btemp+1,postinc2
 28658  018E08  0060  F00F  FFDE   	movff	btemp+2,postinc2
 28659  018E0E  0060  F013  FFDD   	movff	btemp+3,postdec2
 28660  018E14  52DD               	movf	postdec2,f,c
 28661  018E16  52DD               	movf	postdec2,f,c
 28662  018E18  006F FF78  F001    	movff	postinc2,btemp
 28663  018E1E  006F FF78  F002    	movff	postinc2,btemp+1
 28664  018E24  006F FF78  F003    	movff	postinc2,btemp+2
 28665  018E2A  006F FF78  F004    	movff	postinc2,btemp+3
 28666  018E30                     l1947:
 28667                           
 28668                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 28669  018E30  0EF6               	movlw	246
 28670  018E32  26E1               	addwf	fsr1l,f,c
 28671  018E34  0EFF               	movlw	255
 28672  018E36  22E2               	addwfc	fsr1h,f,c
 28673  018E38  0012               	return		;funcret
 28674  018E3A                     __end_of_lp_filter:
 28675                           	opt callstack 0
 28676                           
 28677 ;; *************** function ___flsub *****************
 28678 ;; Defined at:
 28679 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 28680 ;; Parameters:    Size  Location     Type
 28681 ;;  b               4  [STACK] float 
 28682 ;;  a               4  [STACK] float 
 28683 ;; Auto vars:     Size  Location     Type
 28684 ;;		None
 28685 ;; Return value:  Size  Location     Type
 28686 ;;                  4  [STACK] float 
 28687 ;; Registers used:
 28688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 28689 ;; Tracked objects:
 28690 ;;		On entry : 0/0
 28691 ;;		On exit  : 0/0
 28692 ;;		Unchanged: 0/0
 28693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28698 ;;Total ram usage:        0 bytes
 28699 ;; Hardware stack levels used:    1
 28700 ;; Hardware stack levels required when called:   16
 28701 ;; This function calls:
 28702 ;;		___fladd
 28703 ;; This function is called by:
 28704 ;;		_conv_raw_result
 28705 ;;		_lp_filter
 28706 ;;		_calc_model_data
 28707 ;;		_calc_ror_data
 28708 ;;		_esr_check
 28709 ;;		_efgtoa
 28710 ;; This function uses a reentrant model
 28711 ;;
 28712                           
 28713                           	psect	text114
 28714  01BF90                     __ptext114:
 28715                           	opt callstack 0
 28716  01BF90                     ___flsub:
 28717                           	opt callstack 0
 28718                           
 28719                           ;stkvar	_a @ sp[(0)+-8]
 28720                           
 28721                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28722                           ;incstack = 0
 28723 ;; hardware stack exceeded
 28724  01BF90  0EFB               	movlw	-5
 28725  01BF92  7EE3               	btg	plusw1,7,c
 28726                           
 28727                           ;stkvar	_a @ sp[(0)+-8]
 28728  01BF94  0EF8               	movlw	-8
 28729  01BF96  006F FF8F FFE6     	movff	plusw1,postinc1
 28730  01BF9C  006F FF8F FFE6     	movff	plusw1,postinc1
 28731  01BFA2  006F FF8F FFE6     	movff	plusw1,postinc1
 28732  01BFA8  006F FF8F FFE6     	movff	plusw1,postinc1
 28733                           
 28734                           ;stkvar	_b @ sp[(-4)+-4]
 28735  01BFAE  0EF8               	movlw	-8
 28736  01BFB0  006F FF8F FFE6     	movff	plusw1,postinc1
 28737  01BFB6  006F FF8F FFE6     	movff	plusw1,postinc1
 28738  01BFBC  006F FF8F FFE6     	movff	plusw1,postinc1
 28739  01BFC2  006F FF8F FFE6     	movff	plusw1,postinc1
 28740  01BFC8  EC35  F0A3         	call	___fladd	;wreg free
 28741                           
 28742                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 28743  01BFCC  0EF8               	movlw	248
 28744  01BFCE  26E1               	addwf	fsr1l,f,c
 28745  01BFD0  0EFF               	movlw	255
 28746  01BFD2  22E2               	addwfc	fsr1h,f,c
 28747  01BFD4  0012               	return		;funcret
 28748  01BFD6                     __end_of___flsub:
 28749                           	opt callstack 0
 28750                           
 28751 ;; *************** function ___fladd *****************
 28752 ;; Defined at:
 28753 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 28754 ;; Parameters:    Size  Location     Type
 28755 ;;  b               4  [STACK] float 
 28756 ;;  a               4  [STACK] float 
 28757 ;; Auto vars:     Size  Location     Type
 28758 ;;  grs             1  [STACK] unsigned char 
 28759 ;;  bexp            1  [STACK] unsigned char 
 28760 ;;  aexp            1  [STACK] unsigned char 
 28761 ;;  signs           1  [STACK] unsigned char 
 28762 ;; Return value:  Size  Location     Type
 28763 ;;                  4  [STACK] unsigned char 
 28764 ;; Registers used:
 28765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 28766 ;; Tracked objects:
 28767 ;;		On entry : 0/0
 28768 ;;		On exit  : 0/0
 28769 ;;		Unchanged: 0/0
 28770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28775 ;;Total ram usage:        0 bytes
 28776 ;; Hardware stack levels used:    1
 28777 ;; Hardware stack levels required when called:   15
 28778 ;; This function calls:
 28779 ;;		Nothing
 28780 ;; This function is called by:
 28781 ;;		_main
 28782 ;;		_lp_filter
 28783 ;;		_calc_model_data
 28784 ;;		_efgtoa
 28785 ;;		___asfladd
 28786 ;;		___flsub
 28787 ;; This function uses a reentrant model
 28788 ;;
 28789                           
 28790                           	psect	text115
 28791  01466A                     __ptext115:
 28792                           	opt callstack 0
 28793  01466A                     ___fladd:
 28794                           	opt callstack 0
 28795                           
 28796                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28797  01466A  52E6               	movf	postinc1,f,c
 28798  01466C  52E6               	movf	postinc1,f,c
 28799  01466E  52E6               	movf	postinc1,f,c
 28800  014670  52E6               	movf	postinc1,f,c
 28801                           
 28802                           ;stkvar	_b @ sp[(-4)+-4]
 28803                           
 28804                           ;incstack = 0
 28805 ;; hardware stack exceeded
 28806  014672  0EFB               	movlw	251
 28807  014674  24E1               	addwf	fsr1l,w,c
 28808  014676  6ED9               	movwf	fsr2l,c
 28809  014678  0EFF               	movlw	255
 28810  01467A  20E2               	addwfc	fsr1h,w,c
 28811  01467C  6EDA               	movwf	fsr2h,c
 28812  01467E  50DF               	movf	indf2,w,c
 28813  014680  6E0C               	movwf	(btemp+11)^0,c
 28814  014682  0E80               	movlw	128
 28815  014684  160C               	andwf	(btemp+11)^0,f,c
 28816                           
 28817                           ;stkvar	_signs @ sp[(-4)+3]
 28818  014686  0EFF               	movlw	-1
 28819  014688  0060  F033  FFE3   	movff	btemp+11,plusw1
 28820                           
 28821                           ;stkvar	_b @ sp[(-4)+-4]
 28822  01468E  0EFB               	movlw	251
 28823  014690  24E1               	addwf	fsr1l,w,c
 28824  014692  6ED9               	movwf	fsr2l,c
 28825  014694  0EFF               	movlw	255
 28826  014696  20E2               	addwfc	fsr1h,w,c
 28827  014698  6EDA               	movwf	fsr2h,c
 28828  01469A  50DF               	movf	indf2,w,c
 28829  01469C  6E0C               	movwf	(btemp+11)^0,c
 28830  01469E  90D8               	bcf	status,0,c
 28831  0146A0  340C               	rlcf	(btemp+11)^0,w,c
 28832  0146A2  6E0B               	movwf	(btemp+10)^0,c
 28833                           
 28834                           ;stkvar	_bexp @ sp[(-4)+1]
 28835  0146A4  0EFD               	movlw	-3
 28836  0146A6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28837                           
 28838                           ;stkvar	_b @ sp[(-4)+-4]
 28839  0146AC  0EFA               	movlw	250
 28840  0146AE  24E1               	addwf	fsr1l,w,c
 28841  0146B0  6ED9               	movwf	fsr2l,c
 28842  0146B2  0EFF               	movlw	255
 28843  0146B4  20E2               	addwfc	fsr1h,w,c
 28844  0146B6  6EDA               	movwf	fsr2h,c
 28845  0146B8  AEDF               	btfss	indf2,7,c
 28846  0146BA  D002               	goto	l8077
 28847                           
 28848                           ;stkvar	_bexp @ sp[(-4)+1]
 28849  0146BC  0EFD               	movlw	-3
 28850  0146BE  80E3               	bsf	plusw1,0,c
 28851  0146C0                     l8077:
 28852                           
 28853                           ;stkvar	_bexp @ sp[(-4)+1]
 28854  0146C0  0EFD               	movlw	-3
 28855  0146C2  50E3               	movf	plusw1,w,c
 28856  0146C4  B4D8               	btfsc	status,2,c
 28857  0146C6  D027               	goto	l8087
 28858                           
 28859                           ;stkvar	_bexp @ sp[(-4)+1]
 28860  0146C8  0EFD               	movlw	-3
 28861  0146CA  28E3               	incf	plusw1,w,c
 28862  0146CC  A4D8               	btfss	status,2,c
 28863  0146CE  D018               	goto	l8083
 28864  0146D0  0E00               	movlw	0
 28865  0146D2  6E09               	movwf	(btemp+8)^0,c
 28866  0146D4  0E00               	movlw	0
 28867  0146D6  6E0A               	movwf	(btemp+9)^0,c
 28868  0146D8  0E00               	movlw	0
 28869  0146DA  6E0B               	movwf	(btemp+10)^0,c
 28870  0146DC  0E00               	movlw	0
 28871  0146DE  6E0C               	movwf	(btemp+11)^0,c
 28872                           
 28873                           ;stkvar	_b @ sp[(-4)+-4]
 28874  0146E0  0EF8               	movlw	-8
 28875  0146E2  0060  F027  FFE3   	movff	btemp+8,plusw1
 28876  0146E8  0EF9               	movlw	-7
 28877  0146EA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28878  0146F0  0EFA               	movlw	-6
 28879  0146F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28880  0146F8  0EFB               	movlw	-5
 28881  0146FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 28882  014700                     l8083:
 28883                           
 28884                           ;stkvar	_b @ sp[(-4)+-4]
 28885  014700  0EFA               	movlw	-6
 28886  014702  8EE3               	bsf	plusw1,7,c
 28887                           
 28888                           ;stkvar	_b @ sp[(-4)+-4]
 28889  014704  0EFB               	movlw	251
 28890  014706  24E1               	addwf	fsr1l,w,c
 28891  014708  6ED9               	movwf	fsr2l,c
 28892  01470A  0EFF               	movlw	255
 28893  01470C  20E2               	addwfc	fsr1h,w,c
 28894  01470E  6EDA               	movwf	fsr2h,c
 28895  014710  0E00               	movlw	0
 28896  014712  6EDF               	movwf	indf2,c
 28897  014714  D018               	goto	l8089
 28898  014716                     l8087:
 28899  014716  0E00               	movlw	0
 28900  014718  6E09               	movwf	(btemp+8)^0,c
 28901  01471A  0E00               	movlw	0
 28902  01471C  6E0A               	movwf	(btemp+9)^0,c
 28903  01471E  0E00               	movlw	0
 28904  014720  6E0B               	movwf	(btemp+10)^0,c
 28905  014722  0E00               	movlw	0
 28906  014724  6E0C               	movwf	(btemp+11)^0,c
 28907                           
 28908                           ;stkvar	_b @ sp[(-4)+-4]
 28909  014726  0EF8               	movlw	-8
 28910  014728  0060  F027  FFE3   	movff	btemp+8,plusw1
 28911  01472E  0EF9               	movlw	-7
 28912  014730  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28913  014736  0EFA               	movlw	-6
 28914  014738  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28915  01473E  0EFB               	movlw	-5
 28916  014740  0060  F033  FFE3   	movff	btemp+11,plusw1
 28917  014746                     l8089:
 28918                           
 28919                           ;stkvar	_a @ sp[(-4)+-8]
 28920  014746  0EF7               	movlw	247
 28921  014748  24E1               	addwf	fsr1l,w,c
 28922  01474A  6ED9               	movwf	fsr2l,c
 28923  01474C  0EFF               	movlw	255
 28924  01474E  20E2               	addwfc	fsr1h,w,c
 28925  014750  6EDA               	movwf	fsr2h,c
 28926  014752  50DF               	movf	indf2,w,c
 28927  014754  6E0C               	movwf	(btemp+11)^0,c
 28928  014756  0E80               	movlw	128
 28929  014758  160C               	andwf	(btemp+11)^0,f,c
 28930                           
 28931                           ;stkvar	_aexp @ sp[(-4)+2]
 28932  01475A  0EFE               	movlw	-2
 28933  01475C  0060  F033  FFE3   	movff	btemp+11,plusw1
 28934                           
 28935                           ;stkvar	_signs @ sp[(-4)+3]
 28936                           ;stkvar	_aexp @ sp[(-4)+2]
 28937  014762  50E1               	movf	fsr1l,w,c
 28938  014764  0FFE               	addlw	-2
 28939  014766  6ED9               	movwf	fsr2l,c
 28940  014768  50E2               	movf	fsr1h,w,c
 28941  01476A  6EDA               	movwf	fsr2h,c
 28942  01476C  0EFF               	movlw	255
 28943  01476E  22DA               	addwfc	fsr2h,f,c
 28944  014770  0EFF               	movlw	-1
 28945  014772  50E3               	movf	plusw1,w,c
 28946  014774  18DE               	xorwf	postinc2,w,c
 28947  014776  B4D8               	btfsc	status,2,c
 28948  014778  D002               	goto	l8095
 28949                           
 28950                           ;stkvar	_signs @ sp[(-4)+3]
 28951  01477A  0EFF               	movlw	-1
 28952  01477C  8CE3               	bsf	plusw1,6,c
 28953  01477E                     l8095:
 28954                           
 28955                           ;stkvar	_a @ sp[(-4)+-8]
 28956  01477E  0EF7               	movlw	247
 28957  014780  24E1               	addwf	fsr1l,w,c
 28958  014782  6ED9               	movwf	fsr2l,c
 28959  014784  0EFF               	movlw	255
 28960  014786  20E2               	addwfc	fsr1h,w,c
 28961  014788  6EDA               	movwf	fsr2h,c
 28962  01478A  50DF               	movf	indf2,w,c
 28963  01478C  6E0C               	movwf	(btemp+11)^0,c
 28964  01478E  90D8               	bcf	status,0,c
 28965  014790  340C               	rlcf	(btemp+11)^0,w,c
 28966  014792  6E0B               	movwf	(btemp+10)^0,c
 28967                           
 28968                           ;stkvar	_aexp @ sp[(-4)+2]
 28969  014794  0EFE               	movlw	-2
 28970  014796  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28971                           
 28972                           ;stkvar	_a @ sp[(-4)+-8]
 28973  01479C  0EF6               	movlw	246
 28974  01479E  24E1               	addwf	fsr1l,w,c
 28975  0147A0  6ED9               	movwf	fsr2l,c
 28976  0147A2  0EFF               	movlw	255
 28977  0147A4  20E2               	addwfc	fsr1h,w,c
 28978  0147A6  6EDA               	movwf	fsr2h,c
 28979  0147A8  AEDF               	btfss	indf2,7,c
 28980  0147AA  D002               	goto	l8101
 28981                           
 28982                           ;stkvar	_aexp @ sp[(-4)+2]
 28983  0147AC  0EFE               	movlw	-2
 28984  0147AE  80E3               	bsf	plusw1,0,c
 28985  0147B0                     l8101:
 28986                           
 28987                           ;stkvar	_aexp @ sp[(-4)+2]
 28988  0147B0  0EFE               	movlw	-2
 28989  0147B2  50E3               	movf	plusw1,w,c
 28990  0147B4  B4D8               	btfsc	status,2,c
 28991  0147B6  D027               	goto	l8111
 28992                           
 28993                           ;stkvar	_aexp @ sp[(-4)+2]
 28994  0147B8  0EFE               	movlw	-2
 28995  0147BA  28E3               	incf	plusw1,w,c
 28996  0147BC  A4D8               	btfss	status,2,c
 28997  0147BE  D018               	goto	l8107
 28998  0147C0  0E00               	movlw	0
 28999  0147C2  6E09               	movwf	(btemp+8)^0,c
 29000  0147C4  0E00               	movlw	0
 29001  0147C6  6E0A               	movwf	(btemp+9)^0,c
 29002  0147C8  0E00               	movlw	0
 29003  0147CA  6E0B               	movwf	(btemp+10)^0,c
 29004  0147CC  0E00               	movlw	0
 29005  0147CE  6E0C               	movwf	(btemp+11)^0,c
 29006                           
 29007                           ;stkvar	_a @ sp[(-4)+-8]
 29008  0147D0  0EF4               	movlw	-12
 29009  0147D2  0060  F027  FFE3   	movff	btemp+8,plusw1
 29010  0147D8  0EF5               	movlw	-11
 29011  0147DA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29012  0147E0  0EF6               	movlw	-10
 29013  0147E2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29014  0147E8  0EF7               	movlw	-9
 29015  0147EA  0060  F033  FFE3   	movff	btemp+11,plusw1
 29016  0147F0                     l8107:
 29017                           
 29018                           ;stkvar	_a @ sp[(-4)+-8]
 29019  0147F0  0EF6               	movlw	-10
 29020  0147F2  8EE3               	bsf	plusw1,7,c
 29021                           
 29022                           ;stkvar	_a @ sp[(-4)+-8]
 29023  0147F4  0EF7               	movlw	247
 29024  0147F6  24E1               	addwf	fsr1l,w,c
 29025  0147F8  6ED9               	movwf	fsr2l,c
 29026  0147FA  0EFF               	movlw	255
 29027  0147FC  20E2               	addwfc	fsr1h,w,c
 29028  0147FE  6EDA               	movwf	fsr2h,c
 29029  014800  0E00               	movlw	0
 29030  014802  6EDF               	movwf	indf2,c
 29031  014804  D018               	goto	l8113
 29032  014806                     l8111:
 29033  014806  0E00               	movlw	0
 29034  014808  6E09               	movwf	(btemp+8)^0,c
 29035  01480A  0E00               	movlw	0
 29036  01480C  6E0A               	movwf	(btemp+9)^0,c
 29037  01480E  0E00               	movlw	0
 29038  014810  6E0B               	movwf	(btemp+10)^0,c
 29039  014812  0E00               	movlw	0
 29040  014814  6E0C               	movwf	(btemp+11)^0,c
 29041                           
 29042                           ;stkvar	_a @ sp[(-4)+-8]
 29043  014816  0EF4               	movlw	-12
 29044  014818  0060  F027  FFE3   	movff	btemp+8,plusw1
 29045  01481E  0EF5               	movlw	-11
 29046  014820  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29047  014826  0EF6               	movlw	-10
 29048  014828  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29049  01482E  0EF7               	movlw	-9
 29050  014830  0060  F033  FFE3   	movff	btemp+11,plusw1
 29051  014836                     l8113:
 29052                           
 29053                           ;stkvar	_bexp @ sp[(-4)+1]
 29054                           ;stkvar	_aexp @ sp[(-4)+2]
 29055  014836  50E1               	movf	fsr1l,w,c
 29056  014838  0FFE               	addlw	-2
 29057  01483A  6ED9               	movwf	fsr2l,c
 29058  01483C  50E2               	movf	fsr1h,w,c
 29059  01483E  6EDA               	movwf	fsr2h,c
 29060  014840  0EFF               	movlw	255
 29061  014842  22DA               	addwfc	fsr2h,f,c
 29062  014844  0EFD               	movlw	-3
 29063  014846  50E3               	movf	plusw1,w,c
 29064  014848  5CDE               	subwf	postinc2,w,c
 29065  01484A  B0D8               	btfsc	status,0,c
 29066  01484C  D0A4               	goto	l8149
 29067                           
 29068                           ;stkvar	_signs @ sp[(-4)+3]
 29069  01484E  0EFF               	movlw	-1
 29070  014850  ACE3               	btfss	plusw1,6,c
 29071  014852  D002               	goto	l8119
 29072                           
 29073                           ;stkvar	_signs @ sp[(-4)+3]
 29074  014854  0EFF               	movlw	-1
 29075  014856  7EE3               	btg	plusw1,7,c
 29076  014858                     l8119:
 29077                           
 29078                           ;stkvar	_bexp @ sp[(-4)+1]
 29079                           ;stkvar	_grs @ sp[(-4)+0]
 29080  014858  0EFD               	movlw	-3
 29081  01485A  006F FF8C  F001    	movff	plusw1,btemp
 29082  014860  0EFC               	movlw	-4
 29083  014862  0060  F007  FFE3   	movff	btemp,plusw1
 29084                           
 29085                           ;stkvar	_aexp @ sp[(-4)+2]
 29086                           ;stkvar	_bexp @ sp[(-4)+1]
 29087  014868  0EFE               	movlw	-2
 29088  01486A  006F FF8C  F001    	movff	plusw1,btemp
 29089  014870  0EFD               	movlw	-3
 29090  014872  0060  F007  FFE3   	movff	btemp,plusw1
 29091                           
 29092                           ;stkvar	_grs @ sp[(-4)+0]
 29093                           ;stkvar	_aexp @ sp[(-4)+2]
 29094  014878  0EFC               	movlw	-4
 29095  01487A  006F FF8C  F001    	movff	plusw1,btemp
 29096  014880  0EFE               	movlw	-2
 29097  014882  0060  F007  FFE3   	movff	btemp,plusw1
 29098                           
 29099                           ;stkvar	_b @ sp[(-4)+-4]
 29100                           ;stkvar	_grs @ sp[(-4)+0]
 29101  014888  0EF8               	movlw	-8
 29102  01488A  006F FF8C  F001    	movff	plusw1,btemp
 29103  014890  0EFC               	movlw	-4
 29104  014892  0060  F007  FFE3   	movff	btemp,plusw1
 29105                           
 29106                           ;stkvar	_a @ sp[(-4)+-8]
 29107                           ;stkvar	_b @ sp[(-4)+-4]
 29108  014898  0EF4               	movlw	-12
 29109  01489A  006F FF8C  F001    	movff	plusw1,btemp
 29110  0148A0  0EF8               	movlw	-8
 29111  0148A2  0060  F007  FFE3   	movff	btemp,plusw1
 29112                           
 29113                           ;stkvar	_grs @ sp[(-4)+0]
 29114                           ;stkvar	_a @ sp[(-4)+-8]
 29115  0148A8  0EFC               	movlw	-4
 29116  0148AA  006F FF8C  F001    	movff	plusw1,btemp
 29117  0148B0  0EF4               	movlw	-12
 29118  0148B2  0060  F007  FFE3   	movff	btemp,plusw1
 29119                           
 29120                           ;stkvar	_b @ sp[(-4)+-4]
 29121  0148B8  0EF9               	movlw	249
 29122  0148BA  24E1               	addwf	fsr1l,w,c
 29123  0148BC  6ED9               	movwf	fsr2l,c
 29124  0148BE  0EFF               	movlw	255
 29125  0148C0  20E2               	addwfc	fsr1h,w,c
 29126  0148C2  6EDA               	movwf	fsr2h,c
 29127  0148C4  50DF               	movf	indf2,w,c
 29128  0148C6  6E0C               	movwf	(btemp+11)^0,c
 29129                           
 29130                           ;stkvar	_grs @ sp[(-4)+0]
 29131  0148C8  0EFC               	movlw	-4
 29132  0148CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 29133                           
 29134                           ;stkvar	_a @ sp[(-4)+-8]
 29135  0148D0  0EF5               	movlw	245
 29136  0148D2  24E1               	addwf	fsr1l,w,c
 29137  0148D4  6ED9               	movwf	fsr2l,c
 29138  0148D6  0EFF               	movlw	255
 29139  0148D8  20E2               	addwfc	fsr1h,w,c
 29140  0148DA  6EDA               	movwf	fsr2h,c
 29141                           
 29142                           ;stkvar	_b @ sp[(-4)+-4]
 29143  0148DC  0EF9               	movlw	249
 29144  0148DE  24E1               	addwf	fsr1l,w,c
 29145  0148E0  6EE9               	movwf	fsr0l,c
 29146  0148E2  0EFF               	movlw	255
 29147  0148E4  20E2               	addwfc	fsr1h,w,c
 29148  0148E6  6EEA               	movwf	fsr0h,c
 29149  0148E8  006F FF7F FFEF     	movff	indf2,indf0
 29150                           
 29151                           ;stkvar	_grs @ sp[(-4)+0]
 29152                           ;stkvar	_a @ sp[(-4)+-8]
 29153  0148EE  0EF5               	movlw	245
 29154  0148F0  24E1               	addwf	fsr1l,w,c
 29155  0148F2  6ED9               	movwf	fsr2l,c
 29156  0148F4  0EFF               	movlw	255
 29157  0148F6  20E2               	addwfc	fsr1h,w,c
 29158  0148F8  6EDA               	movwf	fsr2h,c
 29159  0148FA  0EFC               	movlw	-4
 29160  0148FC  006F FF8F FFDF     	movff	plusw1,indf2
 29161                           
 29162                           ;stkvar	_b @ sp[(-4)+-4]
 29163  014902  0EFA               	movlw	250
 29164  014904  24E1               	addwf	fsr1l,w,c
 29165  014906  6ED9               	movwf	fsr2l,c
 29166  014908  0EFF               	movlw	255
 29167  01490A  20E2               	addwfc	fsr1h,w,c
 29168  01490C  6EDA               	movwf	fsr2h,c
 29169  01490E  50DF               	movf	indf2,w,c
 29170  014910  6E0C               	movwf	(btemp+11)^0,c
 29171                           
 29172                           ;stkvar	_grs @ sp[(-4)+0]
 29173  014912  0EFC               	movlw	-4
 29174  014914  0060  F033  FFE3   	movff	btemp+11,plusw1
 29175                           
 29176                           ;stkvar	_a @ sp[(-4)+-8]
 29177  01491A  0EF6               	movlw	246
 29178  01491C  24E1               	addwf	fsr1l,w,c
 29179  01491E  6ED9               	movwf	fsr2l,c
 29180  014920  0EFF               	movlw	255
 29181  014922  20E2               	addwfc	fsr1h,w,c
 29182  014924  6EDA               	movwf	fsr2h,c
 29183                           
 29184                           ;stkvar	_b @ sp[(-4)+-4]
 29185  014926  0EFA               	movlw	250
 29186  014928  24E1               	addwf	fsr1l,w,c
 29187  01492A  6EE9               	movwf	fsr0l,c
 29188  01492C  0EFF               	movlw	255
 29189  01492E  20E2               	addwfc	fsr1h,w,c
 29190  014930  6EEA               	movwf	fsr0h,c
 29191  014932  006F FF7F FFEF     	movff	indf2,indf0
 29192                           
 29193                           ;stkvar	_grs @ sp[(-4)+0]
 29194                           ;stkvar	_a @ sp[(-4)+-8]
 29195  014938  0EF6               	movlw	246
 29196  01493A  24E1               	addwf	fsr1l,w,c
 29197  01493C  6ED9               	movwf	fsr2l,c
 29198  01493E  0EFF               	movlw	255
 29199  014940  20E2               	addwfc	fsr1h,w,c
 29200  014942  6EDA               	movwf	fsr2h,c
 29201  014944  0EFC               	movlw	-4
 29202  014946  006F FF8F FFDF     	movff	plusw1,indf2
 29203                           
 29204                           ;stkvar	_b @ sp[(-4)+-4]
 29205  01494C  0EFB               	movlw	251
 29206  01494E  24E1               	addwf	fsr1l,w,c
 29207  014950  6ED9               	movwf	fsr2l,c
 29208  014952  0EFF               	movlw	255
 29209  014954  20E2               	addwfc	fsr1h,w,c
 29210  014956  6EDA               	movwf	fsr2h,c
 29211  014958  50DF               	movf	indf2,w,c
 29212  01495A  6E0C               	movwf	(btemp+11)^0,c
 29213                           
 29214                           ;stkvar	_grs @ sp[(-4)+0]
 29215  01495C  0EFC               	movlw	-4
 29216  01495E  0060  F033  FFE3   	movff	btemp+11,plusw1
 29217                           
 29218                           ;stkvar	_a @ sp[(-4)+-8]
 29219  014964  0EF7               	movlw	247
 29220  014966  24E1               	addwf	fsr1l,w,c
 29221  014968  6ED9               	movwf	fsr2l,c
 29222  01496A  0EFF               	movlw	255
 29223  01496C  20E2               	addwfc	fsr1h,w,c
 29224  01496E  6EDA               	movwf	fsr2h,c
 29225                           
 29226                           ;stkvar	_b @ sp[(-4)+-4]
 29227  014970  0EFB               	movlw	251
 29228  014972  24E1               	addwf	fsr1l,w,c
 29229  014974  6EE9               	movwf	fsr0l,c
 29230  014976  0EFF               	movlw	255
 29231  014978  20E2               	addwfc	fsr1h,w,c
 29232  01497A  6EEA               	movwf	fsr0h,c
 29233  01497C  006F FF7F FFEF     	movff	indf2,indf0
 29234                           
 29235                           ;stkvar	_grs @ sp[(-4)+0]
 29236                           ;stkvar	_a @ sp[(-4)+-8]
 29237  014982  0EF7               	movlw	247
 29238  014984  24E1               	addwf	fsr1l,w,c
 29239  014986  6ED9               	movwf	fsr2l,c
 29240  014988  0EFF               	movlw	255
 29241  01498A  20E2               	addwfc	fsr1h,w,c
 29242  01498C  6EDA               	movwf	fsr2h,c
 29243  01498E  0EFC               	movlw	-4
 29244  014990  006F FF8F FFDF     	movff	plusw1,indf2
 29245  014996                     l8149:
 29246                           
 29247                           ;stkvar	_grs @ sp[(-4)+0]
 29248  014996  0EFC               	movlw	-4
 29249  014998  6AE3               	clrf	plusw1,c
 29250                           
 29251                           ;stkvar	_aexp @ sp[(-4)+2]
 29252  01499A  0EFE               	movlw	-2
 29253  01499C  50E3               	movf	plusw1,w,c
 29254  01499E  6E0B               	movwf	(btemp+10)^0,c
 29255  0149A0  6A0C               	clrf	(btemp+11)^0,c
 29256                           
 29257                           ;stkvar	_bexp @ sp[(-4)+1]
 29258  0149A2  0EFD               	movlw	-3
 29259  0149A4  50E3               	movf	plusw1,w,c
 29260  0149A6  5E0B               	subwf	(btemp+10)^0,f,c
 29261  0149A8  0E00               	movlw	0
 29262  0149AA  5A0C               	subwfb	(btemp+11)^0,f,c
 29263  0149AC  BE0C               	btfsc	(btemp+11)^0,7,c
 29264  0149AE  D062               	goto	l8173
 29265  0149B0  500C               	movf	(btemp+11)^0,w,c
 29266  0149B2  E104               	bnz	u5790
 29267  0149B4  0E1A               	movlw	26
 29268  0149B6  5C0B               	subwf	(btemp+10)^0,w,c
 29269  0149B8  A0D8               	btfss	status,0,c
 29270  0149BA  D05C               	goto	l8173
 29271  0149BC                     u5790:
 29272                           
 29273                           ;stkvar	_b @ sp[(-4)+-4]
 29274  0149BC  0EF8               	movlw	-8
 29275  0149BE  50E3               	movf	plusw1,w,c
 29276  0149C0  E10A               	bnz	u5801
 29277  0149C2  0EF9               	movlw	-7
 29278  0149C4  50E3               	movf	plusw1,w,c
 29279  0149C6  E107               	bnz	u5801
 29280  0149C8  0EFA               	movlw	-6
 29281  0149CA  50E3               	movf	plusw1,w,c
 29282  0149CC  E104               	bnz	u5801
 29283  0149CE  0EFB               	movlw	-5
 29284  0149D0  50E3               	movf	plusw1,w,c
 29285  0149D2  B4D8               	btfsc	status,2,c
 29286  0149D4  D003               	goto	u5800
 29287  0149D6                     u5801:
 29288  0149D6  6A0C               	clrf	(btemp+11)^0,c
 29289  0149D8  2A0C               	incf	(btemp+11)^0,f,c
 29290  0149DA  D001               	goto	u5818
 29291  0149DC                     u5800:
 29292  0149DC  6A0C               	clrf	(btemp+11)^0,c
 29293  0149DE                     u5818:
 29294                           
 29295                           ;stkvar	_grs @ sp[(-4)+0]
 29296  0149DE  0EFC               	movlw	-4
 29297  0149E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 29298                           
 29299                           ;stkvar	_b @ sp[(-4)+-4]
 29300  0149E6  0EF8               	movlw	-8
 29301  0149E8  6AE3               	clrf	plusw1,c
 29302  0149EA  0EF9               	movlw	-7
 29303  0149EC  6AE3               	clrf	plusw1,c
 29304  0149EE  0EFA               	movlw	-6
 29305  0149F0  6AE3               	clrf	plusw1,c
 29306  0149F2  0EFB               	movlw	-5
 29307  0149F4  6AE3               	clrf	plusw1,c
 29308                           
 29309                           ;stkvar	_aexp @ sp[(-4)+2]
 29310                           ;stkvar	_bexp @ sp[(-4)+1]
 29311  0149F6  0EFE               	movlw	-2
 29312  0149F8  006F FF8C  F001    	movff	plusw1,btemp
 29313  0149FE  0EFD               	movlw	-3
 29314  014A00  0060  F007  FFE3   	movff	btemp,plusw1
 29315  014A06  D042               	goto	u5850
 29316  014A08                     l8159:
 29317                           
 29318                           ;stkvar	_grs @ sp[(-4)+0]
 29319  014A08  0EFC               	movlw	-4
 29320  014A0A  A0E3               	btfss	plusw1,0,c
 29321  014A0C  D00D               	goto	l8163
 29322                           
 29323                           ;stkvar	_grs @ sp[(-4)+0]
 29324  014A0E  0EFC               	movlw	-4
 29325  014A10  006F FF8C  F00C    	movff	plusw1,btemp+11
 29326  014A16  90D8               	bcf	status,0,c
 29327  014A18  320C               	rrcf	(btemp+11)^0,f,c
 29328  014A1A  0E01               	movlw	1
 29329  014A1C  120C               	iorwf	(btemp+11)^0,f,c
 29330                           
 29331                           ;stkvar	_grs @ sp[(-4)+0]
 29332  014A1E  0EFC               	movlw	-4
 29333  014A20  0060  F033  FFE3   	movff	btemp+11,plusw1
 29334  014A26  D009               	goto	l8165
 29335  014A28                     l8163:
 29336                           
 29337                           ;stkvar	_grs @ sp[(-4)+0]
 29338  014A28  50E1               	movf	fsr1l,w,c
 29339  014A2A  0FFC               	addlw	-4
 29340  014A2C  6ED9               	movwf	fsr2l,c
 29341  014A2E  50E2               	movf	fsr1h,w,c
 29342  014A30  6EDA               	movwf	fsr2h,c
 29343  014A32  0EFF               	movlw	255
 29344  014A34  22DA               	addwfc	fsr2h,f,c
 29345  014A36  90D8               	bcf	status,0,c
 29346  014A38  32DF               	rrcf	indf2,f,c
 29347  014A3A                     l8165:
 29348                           
 29349                           ;stkvar	_b @ sp[(-4)+-4]
 29350  014A3A  0EF8               	movlw	-8
 29351  014A3C  A0E3               	btfss	plusw1,0,c
 29352  014A3E  D002               	goto	l8169
 29353                           
 29354                           ;stkvar	_grs @ sp[(-4)+0]
 29355  014A40  0EFC               	movlw	-4
 29356  014A42  8EE3               	bsf	plusw1,7,c
 29357  014A44                     l8169:
 29358  014A44  0E01               	movlw	1
 29359  014A46  6E0C               	movwf	(btemp+11)^0,c
 29360                           
 29361                           ;stkvar	_b @ sp[(-4)+-4]
 29362  014A48  50E1               	movf	fsr1l,w,c
 29363  014A4A  0FF8               	addlw	-8
 29364  014A4C  6ED9               	movwf	fsr2l,c
 29365  014A4E  50E2               	movf	fsr1h,w,c
 29366  014A50  6EDA               	movwf	fsr2h,c
 29367  014A52  0EFF               	movlw	255
 29368  014A54  22DA               	addwfc	fsr2h,f,c
 29369  014A56  280C               	incf	(btemp+11)^0,w,c
 29370  014A58  52DE               	movf	postinc2,f,c
 29371  014A5A  D008               	goto	u5840
 29372  014A5C                     u5845:
 29373  014A5C  52DE               	movf	postinc2,f,c
 29374  014A5E  90D8               	bcf	status,0,c
 29375  014A60  BEDC               	btfsc	preinc2,7,c
 29376  014A62  80D8               	bsf	status,0,c
 29377  014A64  32DD               	rrcf	postdec2,f,c
 29378  014A66  32DD               	rrcf	postdec2,f,c
 29379  014A68  32DD               	rrcf	postdec2,f,c
 29380  014A6A  32DE               	rrcf	postinc2,f,c
 29381  014A6C                     u5840:
 29382  014A6C  2EE8               	decfsz	wreg,f,c
 29383  014A6E  D7F6               	goto	u5845
 29384                           
 29385                           ;stkvar	_bexp @ sp[(-4)+1]
 29386  014A70  0EFD               	movlw	-3
 29387  014A72  2AE3               	incf	plusw1,f,c
 29388  014A74                     l8173:
 29389                           
 29390                           ;stkvar	_aexp @ sp[(-4)+2]
 29391                           ;stkvar	_bexp @ sp[(-4)+1]
 29392  014A74  50E1               	movf	fsr1l,w,c
 29393  014A76  0FFD               	addlw	-3
 29394  014A78  6ED9               	movwf	fsr2l,c
 29395  014A7A  50E2               	movf	fsr1h,w,c
 29396  014A7C  6EDA               	movwf	fsr2h,c
 29397  014A7E  0EFF               	movlw	255
 29398  014A80  22DA               	addwfc	fsr2h,f,c
 29399  014A82  0EFE               	movlw	-2
 29400  014A84  50E3               	movf	plusw1,w,c
 29401  014A86  5CDE               	subwf	postinc2,w,c
 29402  014A88  A0D8               	btfss	status,0,c
 29403  014A8A  D7BE               	goto	l8159
 29404  014A8C                     u5850:
 29405                           
 29406                           ;stkvar	_signs @ sp[(-4)+3]
 29407  014A8C  0EFF               	movlw	-1
 29408  014A8E  BCE3               	btfsc	plusw1,6,c
 29409  014A90  D066               	goto	l8201
 29410                           
 29411                           ;stkvar	_bexp @ sp[(-4)+1]
 29412  014A92  0EFD               	movlw	-3
 29413  014A94  50E3               	movf	plusw1,w,c
 29414  014A96  B4D8               	btfsc	status,2,c
 29415  014A98  D0F2               	goto	u5950
 29416                           
 29417                           ;stkvar	_a @ sp[(-4)+-8]
 29418                           ;stkvar	_b @ sp[(-4)+-4]
 29419  014A9A  0EF8               	movlw	-8
 29420  014A9C  50E3               	movf	plusw1,w,c
 29421  014A9E  6E01               	movwf	btemp^0,c
 29422  014AA0  0EF4               	movlw	-12
 29423  014AA2  50E3               	movf	plusw1,w,c
 29424  014AA4  2601               	addwf	btemp^0,f,c
 29425  014AA6  0EF8               	movlw	-8
 29426  014AA8  0060  F007  FFE3   	movff	btemp,plusw1
 29427  014AAE  0EF9               	movlw	-7
 29428  014AB0  50E3               	movf	plusw1,w,c
 29429  014AB2  6E01               	movwf	btemp^0,c
 29430  014AB4  0EF5               	movlw	-11
 29431  014AB6  50E3               	movf	plusw1,w,c
 29432  014AB8  2201               	addwfc	btemp^0,f,c
 29433  014ABA  0EF9               	movlw	-7
 29434  014ABC  0060  F007  FFE3   	movff	btemp,plusw1
 29435  014AC2  0EFA               	movlw	-6
 29436  014AC4  50E3               	movf	plusw1,w,c
 29437  014AC6  6E01               	movwf	btemp^0,c
 29438  014AC8  0EF6               	movlw	-10
 29439  014ACA  50E3               	movf	plusw1,w,c
 29440  014ACC  2201               	addwfc	btemp^0,f,c
 29441  014ACE  0EFA               	movlw	-6
 29442  014AD0  0060  F007  FFE3   	movff	btemp,plusw1
 29443  014AD6  0EFB               	movlw	-5
 29444  014AD8  50E3               	movf	plusw1,w,c
 29445  014ADA  6E01               	movwf	btemp^0,c
 29446  014ADC  0EF7               	movlw	-9
 29447  014ADE  50E3               	movf	plusw1,w,c
 29448  014AE0  2201               	addwfc	btemp^0,f,c
 29449  014AE2  0EFB               	movlw	-5
 29450  014AE4  0060  F007  FFE3   	movff	btemp,plusw1
 29451                           
 29452                           ;stkvar	_b @ sp[(-4)+-4]
 29453  014AEA  0EFB               	movlw	-5
 29454  014AEC  A0E3               	btfss	plusw1,0,c
 29455  014AEE  D101               	goto	u5990
 29456                           
 29457                           ;stkvar	_grs @ sp[(-4)+0]
 29458  014AF0  0EFC               	movlw	-4
 29459  014AF2  A0E3               	btfss	plusw1,0,c
 29460  014AF4  D00D               	goto	l8191
 29461                           
 29462                           ;stkvar	_grs @ sp[(-4)+0]
 29463  014AF6  0EFC               	movlw	-4
 29464  014AF8  006F FF8C  F00C    	movff	plusw1,btemp+11
 29465  014AFE  90D8               	bcf	status,0,c
 29466  014B00  320C               	rrcf	(btemp+11)^0,f,c
 29467  014B02  0E01               	movlw	1
 29468  014B04  120C               	iorwf	(btemp+11)^0,f,c
 29469                           
 29470                           ;stkvar	_grs @ sp[(-4)+0]
 29471  014B06  0EFC               	movlw	-4
 29472  014B08  0060  F033  FFE3   	movff	btemp+11,plusw1
 29473  014B0E  D009               	goto	l8193
 29474  014B10                     l8191:
 29475                           
 29476                           ;stkvar	_grs @ sp[(-4)+0]
 29477  014B10  50E1               	movf	fsr1l,w,c
 29478  014B12  0FFC               	addlw	-4
 29479  014B14  6ED9               	movwf	fsr2l,c
 29480  014B16  50E2               	movf	fsr1h,w,c
 29481  014B18  6EDA               	movwf	fsr2h,c
 29482  014B1A  0EFF               	movlw	255
 29483  014B1C  22DA               	addwfc	fsr2h,f,c
 29484  014B1E  90D8               	bcf	status,0,c
 29485  014B20  32DF               	rrcf	indf2,f,c
 29486  014B22                     l8193:
 29487                           
 29488                           ;stkvar	_b @ sp[(-4)+-4]
 29489  014B22  0EF8               	movlw	-8
 29490  014B24  A0E3               	btfss	plusw1,0,c
 29491  014B26  D002               	goto	l8197
 29492                           
 29493                           ;stkvar	_grs @ sp[(-4)+0]
 29494  014B28  0EFC               	movlw	-4
 29495  014B2A  8EE3               	bsf	plusw1,7,c
 29496  014B2C                     l8197:
 29497  014B2C  0E01               	movlw	1
 29498  014B2E  6E0C               	movwf	(btemp+11)^0,c
 29499                           
 29500                           ;stkvar	_b @ sp[(-4)+-4]
 29501  014B30  50E1               	movf	fsr1l,w,c
 29502  014B32  0FF8               	addlw	-8
 29503  014B34  6ED9               	movwf	fsr2l,c
 29504  014B36  50E2               	movf	fsr1h,w,c
 29505  014B38  6EDA               	movwf	fsr2h,c
 29506  014B3A  0EFF               	movlw	255
 29507  014B3C  22DA               	addwfc	fsr2h,f,c
 29508  014B3E  280C               	incf	(btemp+11)^0,w,c
 29509  014B40  52DE               	movf	postinc2,f,c
 29510  014B42  D008               	goto	u5910
 29511  014B44                     u5915:
 29512  014B44  52DE               	movf	postinc2,f,c
 29513  014B46  90D8               	bcf	status,0,c
 29514  014B48  BEDC               	btfsc	preinc2,7,c
 29515  014B4A  80D8               	bsf	status,0,c
 29516  014B4C  32DD               	rrcf	postdec2,f,c
 29517  014B4E  32DD               	rrcf	postdec2,f,c
 29518  014B50  32DD               	rrcf	postdec2,f,c
 29519  014B52  32DE               	rrcf	postinc2,f,c
 29520  014B54                     u5910:
 29521  014B54  2EE8               	decfsz	wreg,f,c
 29522  014B56  D7F6               	goto	u5915
 29523                           
 29524                           ;stkvar	_bexp @ sp[(-4)+1]
 29525  014B58  0EFD               	movlw	-3
 29526  014B5A  2AE3               	incf	plusw1,f,c
 29527  014B5C  D0CA               	goto	u5990
 29528  014B5E                     l8201:
 29529                           
 29530                           ;stkvar	_a @ sp[(-4)+-8]
 29531                           ;stkvar	_b @ sp[(-4)+-4]
 29532  014B5E  50E1               	movf	fsr1l,w,c
 29533  014B60  0FF8               	addlw	-8
 29534  014B62  6ED9               	movwf	fsr2l,c
 29535  014B64  50E2               	movf	fsr1h,w,c
 29536  014B66  6EDA               	movwf	fsr2h,c
 29537  014B68  0EFF               	movlw	255
 29538  014B6A  22DA               	addwfc	fsr2h,f,c
 29539  014B6C  0EF4               	movlw	-12
 29540  014B6E  50E3               	movf	plusw1,w,c
 29541  014B70  5CDE               	subwf	postinc2,w,c
 29542  014B72  0EF5               	movlw	-11
 29543  014B74  50E3               	movf	plusw1,w,c
 29544  014B76  58DE               	subwfb	postinc2,w,c
 29545  014B78  0EF6               	movlw	-10
 29546  014B7A  50E3               	movf	plusw1,w,c
 29547  014B7C  58DE               	subwfb	postinc2,w,c
 29548  014B7E  50DE               	movf	postinc2,w,c
 29549  014B80  0A80               	xorlw	128
 29550  014B82  6E01               	movwf	btemp^0,c
 29551  014B84  0EF7               	movlw	-9
 29552  014B86  50E3               	movf	plusw1,w,c
 29553  014B88  0A80               	xorlw	128
 29554  014B8A  5801               	subwfb	btemp^0,w,c
 29555  014B8C  B0D8               	btfsc	status,0,c
 29556  014B8E  D053               	goto	l8213
 29557                           
 29558                           ;stkvar	_b @ sp[(-4)+-4]
 29559                           ;stkvar	_a @ sp[(-4)+-8]
 29560  014B90  0EF4               	movlw	-12
 29561  014B92  006F FF8C  F009    	movff	plusw1,btemp+8
 29562  014B98  0EF5               	movlw	-11
 29563  014B9A  006F FF8C  F00A    	movff	plusw1,btemp+9
 29564  014BA0  0EF6               	movlw	-10
 29565  014BA2  006F FF8C  F00B    	movff	plusw1,btemp+10
 29566  014BA8  0EF7               	movlw	-9
 29567  014BAA  006F FF8C  F00C    	movff	plusw1,btemp+11
 29568  014BB0  0EF8               	movlw	-8
 29569  014BB2  50E3               	movf	plusw1,w,c
 29570  014BB4  5E09               	subwf	(btemp+8)^0,f,c
 29571  014BB6  0EF9               	movlw	-7
 29572  014BB8  50E3               	movf	plusw1,w,c
 29573  014BBA  5A0A               	subwfb	(btemp+9)^0,f,c
 29574  014BBC  0EFA               	movlw	-6
 29575  014BBE  50E3               	movf	plusw1,w,c
 29576  014BC0  5A0B               	subwfb	(btemp+10)^0,f,c
 29577  014BC2  0EFB               	movlw	-5
 29578  014BC4  50E3               	movf	plusw1,w,c
 29579  014BC6  5A0C               	subwfb	(btemp+11)^0,f,c
 29580  014BC8  0EFF               	movlw	255
 29581  014BCA  2409               	addwf	(btemp+8)^0,w,c
 29582  014BCC  6E05               	movwf	(btemp+4)^0,c
 29583  014BCE  0EFF               	movlw	255
 29584  014BD0  200A               	addwfc	(btemp+9)^0,w,c
 29585  014BD2  6E06               	movwf	(btemp+5)^0,c
 29586  014BD4  0EFF               	movlw	255
 29587  014BD6  200B               	addwfc	(btemp+10)^0,w,c
 29588  014BD8  6E07               	movwf	(btemp+6)^0,c
 29589  014BDA  0EFF               	movlw	255
 29590  014BDC  200C               	addwfc	(btemp+11)^0,w,c
 29591  014BDE  6E08               	movwf	(btemp+7)^0,c
 29592                           
 29593                           ;stkvar	_b @ sp[(-4)+-4]
 29594  014BE0  0EF8               	movlw	-8
 29595  014BE2  0060  F017  FFE3   	movff	btemp+4,plusw1
 29596  014BE8  0EF9               	movlw	-7
 29597  014BEA  0060  F01B  FFE3   	movff	btemp+5,plusw1
 29598  014BF0  0EFA               	movlw	-6
 29599  014BF2  0060  F01F  FFE3   	movff	btemp+6,plusw1
 29600  014BF8  0EFB               	movlw	-5
 29601  014BFA  0060  F023  FFE3   	movff	btemp+7,plusw1
 29602                           
 29603                           ;stkvar	_signs @ sp[(-4)+3]
 29604  014C00  0EFF               	movlw	-1
 29605  014C02  7EE3               	btg	plusw1,7,c
 29606                           
 29607                           ;stkvar	_grs @ sp[(-4)+0]
 29608  014C04  0EFC               	movlw	-4
 29609  014C06  50E3               	movf	plusw1,w,c
 29610  014C08  0800               	sublw	0
 29611  014C0A  6E0C               	movwf	(btemp+11)^0,c
 29612                           
 29613                           ;stkvar	_grs @ sp[(-4)+0]
 29614  014C0C  0EFC               	movlw	-4
 29615  014C0E  0060  F033  FFE3   	movff	btemp+11,plusw1
 29616                           
 29617                           ;stkvar	_grs @ sp[(-4)+0]
 29618  014C14  0EFC               	movlw	-4
 29619  014C16  50E3               	movf	plusw1,w,c
 29620  014C18  A4D8               	btfss	status,2,c
 29621  014C1A  D020               	goto	l8215
 29622                           
 29623                           ;stkvar	_b @ sp[(-4)+-4]
 29624  014C1C  50E1               	movf	fsr1l,w,c
 29625  014C1E  0FF8               	addlw	-8
 29626  014C20  6ED9               	movwf	fsr2l,c
 29627  014C22  50E2               	movf	fsr1h,w,c
 29628  014C24  6EDA               	movwf	fsr2h,c
 29629  014C26  0EFF               	movlw	255
 29630  014C28  22DA               	addwfc	fsr2h,f,c
 29631  014C2A  2ADE               	incf	postinc2,f,c
 29632  014C2C  0E00               	movlw	0
 29633  014C2E  22DE               	addwfc	postinc2,f,c
 29634  014C30  22DE               	addwfc	postinc2,f,c
 29635  014C32  22DE               	addwfc	postinc2,f,c
 29636  014C34  D013               	goto	l8215
 29637  014C36                     l8213:
 29638                           
 29639                           ;stkvar	_a @ sp[(-4)+-8]
 29640                           ;stkvar	_b @ sp[(-4)+-4]
 29641  014C36  50E1               	movf	fsr1l,w,c
 29642  014C38  0FF8               	addlw	-8
 29643  014C3A  6ED9               	movwf	fsr2l,c
 29644  014C3C  50E2               	movf	fsr1h,w,c
 29645  014C3E  6EDA               	movwf	fsr2h,c
 29646  014C40  0EFF               	movlw	255
 29647  014C42  22DA               	addwfc	fsr2h,f,c
 29648  014C44  0EF4               	movlw	-12
 29649  014C46  50E3               	movf	plusw1,w,c
 29650  014C48  5EDE               	subwf	postinc2,f,c
 29651  014C4A  0EF5               	movlw	-11
 29652  014C4C  50E3               	movf	plusw1,w,c
 29653  014C4E  5ADE               	subwfb	postinc2,f,c
 29654  014C50  0EF6               	movlw	-10
 29655  014C52  50E3               	movf	plusw1,w,c
 29656  014C54  5ADE               	subwfb	postinc2,f,c
 29657  014C56  0EF7               	movlw	-9
 29658  014C58  50E3               	movf	plusw1,w,c
 29659  014C5A  5ADE               	subwfb	postinc2,f,c
 29660  014C5C                     l8215:
 29661                           
 29662                           ;stkvar	_b @ sp[(-4)+-4]
 29663  014C5C  0EF8               	movlw	-8
 29664  014C5E  50E3               	movf	plusw1,w,c
 29665  014C60  E145               	bnz	l8237
 29666  014C62  0EF9               	movlw	-7
 29667  014C64  50E3               	movf	plusw1,w,c
 29668  014C66  E142               	bnz	l8237
 29669  014C68  0EFA               	movlw	-6
 29670  014C6A  50E3               	movf	plusw1,w,c
 29671  014C6C  E13F               	bnz	l8237
 29672  014C6E  0EFB               	movlw	-5
 29673  014C70  50E3               	movf	plusw1,w,c
 29674  014C72  A4D8               	btfss	status,2,c
 29675  014C74  D03B               	goto	l8237
 29676                           
 29677                           ;stkvar	_grs @ sp[(-4)+0]
 29678  014C76  0EFC               	movlw	-4
 29679  014C78  50E3               	movf	plusw1,w,c
 29680  014C7A  A4D8               	btfss	status,2,c
 29681  014C7C  D037               	goto	l8237
 29682  014C7E                     u5950:
 29683  014C7E  0E00               	movlw	0
 29684  014C80  6E01               	movwf	btemp^0,c
 29685  014C82  0E00               	movlw	0
 29686  014C84  6E02               	movwf	(btemp+1)^0,c
 29687  014C86  0E00               	movlw	0
 29688  014C88  6E03               	movwf	(btemp+2)^0,c
 29689  014C8A  0E00               	movlw	0
 29690  014C8C  6E04               	movwf	(btemp+3)^0,c
 29691  014C8E  D0C6               	goto	l3055
 29692  014C90                     l8223:
 29693                           
 29694                           ;stkvar	_b @ sp[(-4)+-4]
 29695  014C90  90D8               	bcf	status,0,c
 29696  014C92  0EF8               	movlw	-8
 29697  014C94  36E3               	rlcf	plusw1,f,c
 29698  014C96  0EF9               	movlw	-7
 29699  014C98  36E3               	rlcf	plusw1,f,c
 29700  014C9A  0EFA               	movlw	-6
 29701  014C9C  36E3               	rlcf	plusw1,f,c
 29702  014C9E  0EFB               	movlw	-5
 29703  014CA0  36E3               	rlcf	plusw1,f,c
 29704                           
 29705                           ;stkvar	_grs @ sp[(-4)+0]
 29706  014CA2  0EFC               	movlw	-4
 29707  014CA4  AEE3               	btfss	plusw1,7,c
 29708  014CA6  D002               	goto	l3067
 29709                           
 29710                           ;stkvar	_b @ sp[(-4)+-4]
 29711  014CA8  0EF8               	movlw	-8
 29712  014CAA  80E3               	bsf	plusw1,0,c
 29713  014CAC                     l3067:
 29714                           
 29715                           ;stkvar	_grs @ sp[(-4)+0]
 29716  014CAC  0EFC               	movlw	-4
 29717  014CAE  A0E3               	btfss	plusw1,0,c
 29718  014CB0  D00E               	goto	l8231
 29719                           
 29720                           ;stkvar	_grs @ sp[(-4)+0]
 29721  014CB2  0EFC               	movlw	-4
 29722  014CB4  006F FF8C  F00C    	movff	plusw1,btemp+11
 29723  014CBA  90D8               	bcf	status,0,c
 29724  014CBC  340C               	rlcf	(btemp+11)^0,w,c
 29725  014CBE  6E0B               	movwf	(btemp+10)^0,c
 29726  014CC0  0E01               	movlw	1
 29727  014CC2  120B               	iorwf	(btemp+10)^0,f,c
 29728                           
 29729                           ;stkvar	_grs @ sp[(-4)+0]
 29730  014CC4  0EFC               	movlw	-4
 29731  014CC6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29732  014CCC  D009               	goto	l8233
 29733  014CCE                     l8231:
 29734                           
 29735                           ;stkvar	_grs @ sp[(-4)+0]
 29736  014CCE  50E1               	movf	fsr1l,w,c
 29737  014CD0  0FFC               	addlw	-4
 29738  014CD2  6ED9               	movwf	fsr2l,c
 29739  014CD4  50E2               	movf	fsr1h,w,c
 29740  014CD6  6EDA               	movwf	fsr2h,c
 29741  014CD8  0EFF               	movlw	255
 29742  014CDA  22DA               	addwfc	fsr2h,f,c
 29743  014CDC  90D8               	bcf	status,0,c
 29744  014CDE  36DF               	rlcf	indf2,f,c
 29745  014CE0                     l8233:
 29746                           
 29747                           ;stkvar	_bexp @ sp[(-4)+1]
 29748  014CE0  0EFD               	movlw	-3
 29749  014CE2  50E3               	movf	plusw1,w,c
 29750  014CE4  B4D8               	btfsc	status,2,c
 29751  014CE6  D002               	goto	l8237
 29752                           
 29753                           ;stkvar	_bexp @ sp[(-4)+1]
 29754  014CE8  0EFD               	movlw	-3
 29755  014CEA  06E3               	decf	plusw1,f,c
 29756  014CEC                     l8237:
 29757                           
 29758                           ;stkvar	_b @ sp[(-4)+-4]
 29759  014CEC  0EFA               	movlw	-6
 29760  014CEE  AEE3               	btfss	plusw1,7,c
 29761  014CF0  D7CF               	goto	l8223
 29762  014CF2                     u5990:
 29763                           
 29764                           ;stkvar	_aexp @ sp[(-4)+2]
 29765  014CF2  0EFE               	movlw	-2
 29766  014CF4  6AE3               	clrf	plusw1,c
 29767                           
 29768                           ;stkvar	_grs @ sp[(-4)+0]
 29769  014CF6  0EFC               	movlw	-4
 29770  014CF8  AEE3               	btfss	plusw1,7,c
 29771  014CFA  D00F               	goto	l8251
 29772                           
 29773                           ;stkvar	_grs @ sp[(-4)+0]
 29774  014CFC  0EFC               	movlw	-4
 29775  014CFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 29776  014D04  0E7F               	movlw	127
 29777  014D06  160C               	andwf	(btemp+11)^0,f,c
 29778  014D08  B4D8               	btfsc	status,2,c
 29779  014D0A  D004               	goto	l8247
 29780  014D0C                     u6010:
 29781                           
 29782                           ;stkvar	_aexp @ sp[(-4)+2]
 29783  014D0C  0EFE               	movlw	-2
 29784  014D0E  6AE3               	clrf	plusw1,c
 29785  014D10  2AE3               	incf	plusw1,f,c
 29786  014D12  D003               	goto	l8251
 29787  014D14                     l8247:
 29788                           
 29789                           ;stkvar	_b @ sp[(-4)+-4]
 29790  014D14  0EF8               	movlw	-8
 29791  014D16  B0E3               	btfsc	plusw1,0,c
 29792  014D18  D7F9               	goto	u6010
 29793  014D1A                     l8251:
 29794                           
 29795                           ;stkvar	_aexp @ sp[(-4)+2]
 29796  014D1A  0EFE               	movlw	-2
 29797  014D1C  50E3               	movf	plusw1,w,c
 29798  014D1E  B4D8               	btfsc	status,2,c
 29799  014D20  D02B               	goto	l8263
 29800                           
 29801                           ;stkvar	_b @ sp[(-4)+-4]
 29802  014D22  50E1               	movf	fsr1l,w,c
 29803  014D24  0FF8               	addlw	-8
 29804  014D26  6ED9               	movwf	fsr2l,c
 29805  014D28  50E2               	movf	fsr1h,w,c
 29806  014D2A  6EDA               	movwf	fsr2h,c
 29807  014D2C  0EFF               	movlw	255
 29808  014D2E  22DA               	addwfc	fsr2h,f,c
 29809  014D30  2ADE               	incf	postinc2,f,c
 29810  014D32  0E00               	movlw	0
 29811  014D34  22DE               	addwfc	postinc2,f,c
 29812  014D36  22DE               	addwfc	postinc2,f,c
 29813  014D38  22DE               	addwfc	postinc2,f,c
 29814                           
 29815                           ;stkvar	_b @ sp[(-4)+-4]
 29816  014D3A  0EFB               	movlw	-5
 29817  014D3C  A0E3               	btfss	plusw1,0,c
 29818  014D3E  D01C               	goto	l8263
 29819  014D40  0E01               	movlw	1
 29820  014D42  6E0C               	movwf	(btemp+11)^0,c
 29821                           
 29822                           ;stkvar	_b @ sp[(-4)+-4]
 29823  014D44  50E1               	movf	fsr1l,w,c
 29824  014D46  0FF8               	addlw	-8
 29825  014D48  6ED9               	movwf	fsr2l,c
 29826  014D4A  50E2               	movf	fsr1h,w,c
 29827  014D4C  6EDA               	movwf	fsr2h,c
 29828  014D4E  0EFF               	movlw	255
 29829  014D50  22DA               	addwfc	fsr2h,f,c
 29830  014D52  280C               	incf	(btemp+11)^0,w,c
 29831  014D54  52DE               	movf	postinc2,f,c
 29832  014D56  D008               	goto	u6050
 29833  014D58                     u6055:
 29834  014D58  52DE               	movf	postinc2,f,c
 29835  014D5A  90D8               	bcf	status,0,c
 29836  014D5C  BEDC               	btfsc	preinc2,7,c
 29837  014D5E  80D8               	bsf	status,0,c
 29838  014D60  32DD               	rrcf	postdec2,f,c
 29839  014D62  32DD               	rrcf	postdec2,f,c
 29840  014D64  32DD               	rrcf	postdec2,f,c
 29841  014D66  32DE               	rrcf	postinc2,f,c
 29842  014D68                     u6050:
 29843  014D68  2EE8               	decfsz	wreg,f,c
 29844  014D6A  D7F6               	goto	u6055
 29845                           
 29846                           ;stkvar	_bexp @ sp[(-4)+1]
 29847  014D6C  0EFD               	movlw	-3
 29848  014D6E  28E3               	incf	plusw1,w,c
 29849  014D70  B4D8               	btfsc	status,2,c
 29850  014D72  D002               	goto	l8263
 29851                           
 29852                           ;stkvar	_bexp @ sp[(-4)+1]
 29853  014D74  0EFD               	movlw	-3
 29854  014D76  2AE3               	incf	plusw1,f,c
 29855  014D78                     l8263:
 29856                           
 29857                           ;stkvar	_bexp @ sp[(-4)+1]
 29858  014D78  0EFD               	movlw	-3
 29859  014D7A  28E3               	incf	plusw1,w,c
 29860  014D7C  B4D8               	btfsc	status,2,c
 29861  014D7E  D004               	goto	u6080
 29862                           
 29863                           ;stkvar	_bexp @ sp[(-4)+1]
 29864  014D80  0EFD               	movlw	-3
 29865  014D82  50E3               	movf	plusw1,w,c
 29866  014D84  A4D8               	btfss	status,2,c
 29867  014D86  D00E               	goto	l8273
 29868  014D88                     u6080:
 29869                           
 29870                           ;stkvar	_b @ sp[(-4)+-4]
 29871  014D88  0EF8               	movlw	-8
 29872  014D8A  6AE3               	clrf	plusw1,c
 29873  014D8C  0EF9               	movlw	-7
 29874  014D8E  6AE3               	clrf	plusw1,c
 29875  014D90  0EFA               	movlw	-6
 29876  014D92  6AE3               	clrf	plusw1,c
 29877  014D94  0EFB               	movlw	-5
 29878  014D96  6AE3               	clrf	plusw1,c
 29879                           
 29880                           ;stkvar	_bexp @ sp[(-4)+1]
 29881  014D98  0EFD               	movlw	-3
 29882  014D9A  50E3               	movf	plusw1,w,c
 29883  014D9C  A4D8               	btfss	status,2,c
 29884  014D9E  D002               	goto	l8273
 29885                           
 29886                           ;stkvar	_signs @ sp[(-4)+3]
 29887  014DA0  0EFF               	movlw	-1
 29888  014DA2  6AE3               	clrf	plusw1,c
 29889  014DA4                     l8273:
 29890                           
 29891                           ;stkvar	_bexp @ sp[(-4)+1]
 29892  014DA4  0EFD               	movlw	-3
 29893  014DA6  A0E3               	btfss	plusw1,0,c
 29894  014DA8  D009               	goto	l8277
 29895                           
 29896                           ;stkvar	_b @ sp[(-4)+-4]
 29897  014DAA  0EFA               	movlw	250
 29898  014DAC  24E1               	addwf	fsr1l,w,c
 29899  014DAE  6ED9               	movwf	fsr2l,c
 29900  014DB0  0EFF               	movlw	255
 29901  014DB2  20E2               	addwfc	fsr1h,w,c
 29902  014DB4  6EDA               	movwf	fsr2h,c
 29903  014DB6  0E00               	movlw	0
 29904  014DB8  8EDB               	bsf	plusw2,7,c
 29905  014DBA  D008               	goto	l8279
 29906  014DBC                     l8277:
 29907                           
 29908                           ;stkvar	_b @ sp[(-4)+-4]
 29909  014DBC  0EFA               	movlw	250
 29910  014DBE  24E1               	addwf	fsr1l,w,c
 29911  014DC0  6ED9               	movwf	fsr2l,c
 29912  014DC2  0EFF               	movlw	255
 29913  014DC4  20E2               	addwfc	fsr1h,w,c
 29914  014DC6  6EDA               	movwf	fsr2h,c
 29915  014DC8  0E7F               	movlw	127
 29916  014DCA  16DF               	andwf	indf2,f,c
 29917  014DCC                     l8279:
 29918                           
 29919                           ;stkvar	_b @ sp[(-4)+-4]
 29920  014DCC  0EFB               	movlw	251
 29921  014DCE  24E1               	addwf	fsr1l,w,c
 29922  014DD0  6ED9               	movwf	fsr2l,c
 29923  014DD2  0EFF               	movlw	255
 29924  014DD4  20E2               	addwfc	fsr1h,w,c
 29925  014DD6  6EDA               	movwf	fsr2h,c
 29926                           
 29927                           ;stkvar	_bexp @ sp[(-4)+1]
 29928  014DD8  0EFD               	movlw	-3
 29929  014DDA  006F FF8C  F00C    	movff	plusw1,btemp+11
 29930  014DE0  90D8               	bcf	status,0,c
 29931  014DE2  300C               	rrcf	(btemp+11)^0,w,c
 29932  014DE4  6EDF               	movwf	indf2,c
 29933                           
 29934                           ;stkvar	_signs @ sp[(-4)+3]
 29935  014DE6  0EFF               	movlw	-1
 29936  014DE8  AEE3               	btfss	plusw1,7,c
 29937  014DEA  D008               	goto	l8285
 29938                           
 29939                           ;stkvar	_b @ sp[(-4)+-4]
 29940  014DEC  0EFB               	movlw	251
 29941  014DEE  24E1               	addwf	fsr1l,w,c
 29942  014DF0  6ED9               	movwf	fsr2l,c
 29943  014DF2  0EFF               	movlw	255
 29944  014DF4  20E2               	addwfc	fsr1h,w,c
 29945  014DF6  6EDA               	movwf	fsr2h,c
 29946  014DF8  0E00               	movlw	0
 29947  014DFA  8EDB               	bsf	plusw2,7,c
 29948  014DFC                     l8285:
 29949                           
 29950                           ;stkvar	_b @ sp[(-4)+-4]
 29951  014DFC  0EF8               	movlw	-8
 29952  014DFE  006F FF8C  F001    	movff	plusw1,btemp
 29953  014E04  0EF9               	movlw	-7
 29954  014E06  006F FF8C  F002    	movff	plusw1,btemp+1
 29955  014E0C  0EFA               	movlw	-6
 29956  014E0E  006F FF8C  F003    	movff	plusw1,btemp+2
 29957  014E14  0EFB               	movlw	-5
 29958  014E16  006F FF8C  F004    	movff	plusw1,btemp+3
 29959  014E1C                     l3055:
 29960                           
 29961                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 29962  014E1C  0EF4               	movlw	244
 29963  014E1E  26E1               	addwf	fsr1l,f,c
 29964  014E20  0EFF               	movlw	255
 29965  014E22  22E2               	addwfc	fsr1h,f,c
 29966  014E24  0012               	return		;funcret
 29967  014E26                     __end_of___fladd:
 29968                           	opt callstack 0
 29969                           
 29970 ;; *************** function ___flmul *****************
 29971 ;; Defined at:
 29972 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 29973 ;; Parameters:    Size  Location     Type
 29974 ;;  b               4  [STACK] unsigned char 
 29975 ;;  a               4  [STACK] unsigned char 
 29976 ;; Auto vars:     Size  Location     Type
 29977 ;;  prod            4  [STACK] struct .
 29978 ;;  grs             4  [STACK] unsigned long 
 29979 ;;  temp            2  [STACK] struct .
 29980 ;;  bexp            1  [STACK] unsigned char 
 29981 ;;  aexp            1  [STACK] unsigned char 
 29982 ;;  sign            1  [STACK] unsigned char 
 29983 ;; Return value:  Size  Location     Type
 29984 ;;                  4  [STACK] unsigned char 
 29985 ;; Registers used:
 29986 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 29987 ;; Tracked objects:
 29988 ;;		On entry : 0/0
 29989 ;;		On exit  : 0/0
 29990 ;;		Unchanged: 0/0
 29991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29996 ;;Total ram usage:        0 bytes
 29997 ;; Hardware stack levels used:    1
 29998 ;; Hardware stack levels required when called:   15
 29999 ;; This function calls:
 30000 ;;		Nothing
 30001 ;; This function is called by:
 30002 ;;		_conv_raw_result
 30003 ;;		_lp_filter
 30004 ;;		_calc_model_data
 30005 ;;		_calc_bsoc
 30006 ;;		_init_bsoc
 30007 ;;		_efgtoa
 30008 ;; This function uses a reentrant model
 30009 ;;
 30010                           
 30011                           	psect	text116
 30012  013E40                     __ptext116:
 30013                           	opt callstack 0
 30014  013E40                     ___flmul:
 30015                           	opt callstack 0
 30016                           
 30017                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 30018  013E40  0E0D               	movlw	13
 30019  013E42  26E1               	addwf	fsr1l,f,c
 30020  013E44  0E00               	movlw	0
 30021  013E46  22E2               	addwfc	fsr1h,f,c
 30022                           
 30023                           ;stkvar	_b @ sp[(-13)+-4]
 30024                           
 30025                           ;incstack = 0
 30026 ;; hardware stack exceeded
 30027  013E48  0EF2               	movlw	242
 30028  013E4A  24E1               	addwf	fsr1l,w,c
 30029  013E4C  6ED9               	movwf	fsr2l,c
 30030  013E4E  0EFF               	movlw	255
 30031  013E50  20E2               	addwfc	fsr1h,w,c
 30032  013E52  6EDA               	movwf	fsr2h,c
 30033  013E54  50DF               	movf	indf2,w,c
 30034  013E56  6E0C               	movwf	(btemp+11)^0,c
 30035  013E58  0E80               	movlw	128
 30036  013E5A  160C               	andwf	(btemp+11)^0,f,c
 30037                           
 30038                           ;stkvar	_sign @ sp[(-13)+12]
 30039  013E5C  0EFF               	movlw	-1
 30040  013E5E  0060  F033  FFE3   	movff	btemp+11,plusw1
 30041                           
 30042                           ;stkvar	_b @ sp[(-13)+-4]
 30043  013E64  0EF2               	movlw	242
 30044  013E66  24E1               	addwf	fsr1l,w,c
 30045  013E68  6ED9               	movwf	fsr2l,c
 30046  013E6A  0EFF               	movlw	255
 30047  013E6C  20E2               	addwfc	fsr1h,w,c
 30048  013E6E  6EDA               	movwf	fsr2h,c
 30049  013E70  50DF               	movf	indf2,w,c
 30050  013E72  6E0C               	movwf	(btemp+11)^0,c
 30051  013E74  90D8               	bcf	status,0,c
 30052  013E76  340C               	rlcf	(btemp+11)^0,w,c
 30053  013E78  6E0B               	movwf	(btemp+10)^0,c
 30054                           
 30055                           ;stkvar	_bexp @ sp[(-13)+10]
 30056  013E7A  0EFD               	movlw	-3
 30057  013E7C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30058                           
 30059                           ;stkvar	_b @ sp[(-13)+-4]
 30060  013E82  0EF1               	movlw	241
 30061  013E84  24E1               	addwf	fsr1l,w,c
 30062  013E86  6ED9               	movwf	fsr2l,c
 30063  013E88  0EFF               	movlw	255
 30064  013E8A  20E2               	addwfc	fsr1h,w,c
 30065  013E8C  6EDA               	movwf	fsr2h,c
 30066  013E8E  AEDF               	btfss	indf2,7,c
 30067  013E90  D002               	goto	l8711
 30068                           
 30069                           ;stkvar	_bexp @ sp[(-13)+10]
 30070  013E92  0EFD               	movlw	-3
 30071  013E94  80E3               	bsf	plusw1,0,c
 30072  013E96                     l8711:
 30073                           
 30074                           ;stkvar	_bexp @ sp[(-13)+10]
 30075  013E96  0EFD               	movlw	-3
 30076  013E98  50E3               	movf	plusw1,w,c
 30077  013E9A  B4D8               	btfsc	status,2,c
 30078  013E9C  D01F               	goto	l8719
 30079                           
 30080                           ;stkvar	_bexp @ sp[(-13)+10]
 30081  013E9E  0EFD               	movlw	-3
 30082  013EA0  28E3               	incf	plusw1,w,c
 30083  013EA2  A4D8               	btfss	status,2,c
 30084  013EA4  D018               	goto	l8717
 30085  013EA6  0E00               	movlw	0
 30086  013EA8  6E09               	movwf	(btemp+8)^0,c
 30087  013EAA  0E00               	movlw	0
 30088  013EAC  6E0A               	movwf	(btemp+9)^0,c
 30089  013EAE  0E00               	movlw	0
 30090  013EB0  6E0B               	movwf	(btemp+10)^0,c
 30091  013EB2  0E00               	movlw	0
 30092  013EB4  6E0C               	movwf	(btemp+11)^0,c
 30093                           
 30094                           ;stkvar	_b @ sp[(-13)+-4]
 30095  013EB6  0EEF               	movlw	-17
 30096  013EB8  0060  F027  FFE3   	movff	btemp+8,plusw1
 30097  013EBE  0EF0               	movlw	-16
 30098  013EC0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30099  013EC6  0EF1               	movlw	-15
 30100  013EC8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30101  013ECE  0EF2               	movlw	-14
 30102  013ED0  0060  F033  FFE3   	movff	btemp+11,plusw1
 30103  013ED6                     l8717:
 30104                           
 30105                           ;stkvar	_b @ sp[(-13)+-4]
 30106  013ED6  0EF1               	movlw	-15
 30107  013ED8  8EE3               	bsf	plusw1,7,c
 30108  013EDA  D018               	goto	l8721
 30109  013EDC                     l8719:
 30110  013EDC  0E00               	movlw	0
 30111  013EDE  6E09               	movwf	(btemp+8)^0,c
 30112  013EE0  0E00               	movlw	0
 30113  013EE2  6E0A               	movwf	(btemp+9)^0,c
 30114  013EE4  0E00               	movlw	0
 30115  013EE6  6E0B               	movwf	(btemp+10)^0,c
 30116  013EE8  0E00               	movlw	0
 30117  013EEA  6E0C               	movwf	(btemp+11)^0,c
 30118                           
 30119                           ;stkvar	_b @ sp[(-13)+-4]
 30120  013EEC  0EEF               	movlw	-17
 30121  013EEE  0060  F027  FFE3   	movff	btemp+8,plusw1
 30122  013EF4  0EF0               	movlw	-16
 30123  013EF6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30124  013EFC  0EF1               	movlw	-15
 30125  013EFE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30126  013F04  0EF2               	movlw	-14
 30127  013F06  0060  F033  FFE3   	movff	btemp+11,plusw1
 30128  013F0C                     l8721:
 30129                           
 30130                           ;stkvar	_a @ sp[(-13)+-8]
 30131  013F0C  0EEE               	movlw	238
 30132  013F0E  24E1               	addwf	fsr1l,w,c
 30133  013F10  6ED9               	movwf	fsr2l,c
 30134  013F12  0EFF               	movlw	255
 30135  013F14  20E2               	addwfc	fsr1h,w,c
 30136  013F16  6EDA               	movwf	fsr2h,c
 30137  013F18  50DF               	movf	indf2,w,c
 30138  013F1A  6E0C               	movwf	(btemp+11)^0,c
 30139  013F1C  0E80               	movlw	128
 30140  013F1E  160C               	andwf	(btemp+11)^0,f,c
 30141                           
 30142                           ;stkvar	_sign @ sp[(-13)+12]
 30143  013F20  50E1               	movf	fsr1l,w,c
 30144  013F22  0FFF               	addlw	-1
 30145  013F24  6ED9               	movwf	fsr2l,c
 30146  013F26  50E2               	movf	fsr1h,w,c
 30147  013F28  6EDA               	movwf	fsr2h,c
 30148  013F2A  0EFF               	movlw	255
 30149  013F2C  22DA               	addwfc	fsr2h,f,c
 30150  013F2E  500C               	movf	(btemp+11)^0,w,c
 30151  013F30  1ADF               	xorwf	indf2,f,c
 30152                           
 30153                           ;stkvar	_a @ sp[(-13)+-8]
 30154  013F32  0EEE               	movlw	238
 30155  013F34  24E1               	addwf	fsr1l,w,c
 30156  013F36  6ED9               	movwf	fsr2l,c
 30157  013F38  0EFF               	movlw	255
 30158  013F3A  20E2               	addwfc	fsr1h,w,c
 30159  013F3C  6EDA               	movwf	fsr2h,c
 30160  013F3E  50DF               	movf	indf2,w,c
 30161  013F40  6E0C               	movwf	(btemp+11)^0,c
 30162  013F42  90D8               	bcf	status,0,c
 30163  013F44  340C               	rlcf	(btemp+11)^0,w,c
 30164  013F46  6E0B               	movwf	(btemp+10)^0,c
 30165                           
 30166                           ;stkvar	_aexp @ sp[(-13)+11]
 30167  013F48  0EFE               	movlw	-2
 30168  013F4A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30169                           
 30170                           ;stkvar	_a @ sp[(-13)+-8]
 30171  013F50  0EED               	movlw	237
 30172  013F52  24E1               	addwf	fsr1l,w,c
 30173  013F54  6ED9               	movwf	fsr2l,c
 30174  013F56  0EFF               	movlw	255
 30175  013F58  20E2               	addwfc	fsr1h,w,c
 30176  013F5A  6EDA               	movwf	fsr2h,c
 30177  013F5C  AEDF               	btfss	indf2,7,c
 30178  013F5E  D002               	goto	l8729
 30179                           
 30180                           ;stkvar	_aexp @ sp[(-13)+11]
 30181  013F60  0EFE               	movlw	-2
 30182  013F62  80E3               	bsf	plusw1,0,c
 30183  013F64                     l8729:
 30184                           
 30185                           ;stkvar	_aexp @ sp[(-13)+11]
 30186  013F64  0EFE               	movlw	-2
 30187  013F66  50E3               	movf	plusw1,w,c
 30188  013F68  B4D8               	btfsc	status,2,c
 30189  013F6A  D01F               	goto	l8737
 30190                           
 30191                           ;stkvar	_aexp @ sp[(-13)+11]
 30192  013F6C  0EFE               	movlw	-2
 30193  013F6E  28E3               	incf	plusw1,w,c
 30194  013F70  A4D8               	btfss	status,2,c
 30195  013F72  D018               	goto	l8735
 30196  013F74  0E00               	movlw	0
 30197  013F76  6E09               	movwf	(btemp+8)^0,c
 30198  013F78  0E00               	movlw	0
 30199  013F7A  6E0A               	movwf	(btemp+9)^0,c
 30200  013F7C  0E00               	movlw	0
 30201  013F7E  6E0B               	movwf	(btemp+10)^0,c
 30202  013F80  0E00               	movlw	0
 30203  013F82  6E0C               	movwf	(btemp+11)^0,c
 30204                           
 30205                           ;stkvar	_a @ sp[(-13)+-8]
 30206  013F84  0EEB               	movlw	-21
 30207  013F86  0060  F027  FFE3   	movff	btemp+8,plusw1
 30208  013F8C  0EEC               	movlw	-20
 30209  013F8E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30210  013F94  0EED               	movlw	-19
 30211  013F96  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30212  013F9C  0EEE               	movlw	-18
 30213  013F9E  0060  F033  FFE3   	movff	btemp+11,plusw1
 30214  013FA4                     l8735:
 30215                           
 30216                           ;stkvar	_a @ sp[(-13)+-8]
 30217  013FA4  0EED               	movlw	-19
 30218  013FA6  8EE3               	bsf	plusw1,7,c
 30219  013FA8  D018               	goto	l8739
 30220  013FAA                     l8737:
 30221  013FAA  0E00               	movlw	0
 30222  013FAC  6E09               	movwf	(btemp+8)^0,c
 30223  013FAE  0E00               	movlw	0
 30224  013FB0  6E0A               	movwf	(btemp+9)^0,c
 30225  013FB2  0E00               	movlw	0
 30226  013FB4  6E0B               	movwf	(btemp+10)^0,c
 30227  013FB6  0E00               	movlw	0
 30228  013FB8  6E0C               	movwf	(btemp+11)^0,c
 30229                           
 30230                           ;stkvar	_a @ sp[(-13)+-8]
 30231  013FBA  0EEB               	movlw	-21
 30232  013FBC  0060  F027  FFE3   	movff	btemp+8,plusw1
 30233  013FC2  0EEC               	movlw	-20
 30234  013FC4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30235  013FCA  0EED               	movlw	-19
 30236  013FCC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30237  013FD2  0EEE               	movlw	-18
 30238  013FD4  0060  F033  FFE3   	movff	btemp+11,plusw1
 30239  013FDA                     l8739:
 30240                           
 30241                           ;stkvar	_aexp @ sp[(-13)+11]
 30242  013FDA  0EFE               	movlw	-2
 30243  013FDC  50E3               	movf	plusw1,w,c
 30244  013FDE  B4D8               	btfsc	status,2,c
 30245  013FE0  D004               	goto	u7070
 30246                           
 30247                           ;stkvar	_bexp @ sp[(-13)+10]
 30248  013FE2  0EFD               	movlw	-3
 30249  013FE4  50E3               	movf	plusw1,w,c
 30250  013FE6  A4D8               	btfss	status,2,c
 30251  013FE8  D009               	goto	l8747
 30252  013FEA                     u7070:
 30253  013FEA  0E00               	movlw	0
 30254  013FEC  6E01               	movwf	btemp^0,c
 30255  013FEE  0E00               	movlw	0
 30256  013FF0  6E02               	movwf	(btemp+1)^0,c
 30257  013FF2  0E00               	movlw	0
 30258  013FF4  6E03               	movwf	(btemp+2)^0,c
 30259  013FF6  0E00               	movlw	0
 30260  013FF8  6E04               	movwf	(btemp+3)^0,c
 30261  013FFA  D332               	goto	l3136
 30262  013FFC                     l8747:
 30263                           
 30264                           ;stkvar	_b @ sp[(-13)+-4]
 30265  013FFC  0EEF               	movlw	-17
 30266  013FFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 30267                           
 30268                           ;stkvar	_a @ sp[(-13)+-8]
 30269  014004  0EED               	movlw	237
 30270  014006  24E1               	addwf	fsr1l,w,c
 30271  014008  6ED9               	movwf	fsr2l,c
 30272  01400A  0EFF               	movlw	255
 30273  01400C  20E2               	addwfc	fsr1h,w,c
 30274  01400E  6EDA               	movwf	fsr2h,c
 30275  014010  50DF               	movf	indf2,w,c
 30276  014012  020C               	mulwf	(btemp+11)^0,c
 30277                           
 30278                           ;stkvar	_temp @ sp[(-13)+8]
 30279  014014  0EFB               	movlw	-5
 30280  014016  006F FFCF FFE3     	movff	prodl,plusw1
 30281  01401C  0EFC               	movlw	-4
 30282  01401E  006F FFD3 FFE3     	movff	prodh,plusw1
 30283                           
 30284                           ;stkvar	_temp @ sp[(-13)+8]
 30285  014024  0EFB               	movlw	-5
 30286  014026  006F FF8C  F00C    	movff	plusw1,btemp+11
 30287  01402C  0060  F030  F005   	movff	btemp+11,btemp+4
 30288  014032  6A06               	clrf	(btemp+5)^0,c
 30289  014034  6A07               	clrf	(btemp+6)^0,c
 30290  014036  6A08               	clrf	(btemp+7)^0,c
 30291                           
 30292                           ;stkvar	_grs @ sp[(-13)+4]
 30293  014038  0EF7               	movlw	-9
 30294  01403A  0060  F017  FFE3   	movff	btemp+4,plusw1
 30295  014040  0EF8               	movlw	-8
 30296  014042  0060  F01B  FFE3   	movff	btemp+5,plusw1
 30297  014048  0EF9               	movlw	-7
 30298  01404A  0060  F01F  FFE3   	movff	btemp+6,plusw1
 30299  014050  0EFA               	movlw	-6
 30300  014052  0060  F023  FFE3   	movff	btemp+7,plusw1
 30301                           
 30302                           ;stkvar	_temp @ sp[(-13)+8]
 30303  014058  0EFC               	movlw	252
 30304  01405A  24E1               	addwf	fsr1l,w,c
 30305  01405C  6ED9               	movwf	fsr2l,c
 30306  01405E  0EFF               	movlw	255
 30307  014060  20E2               	addwfc	fsr1h,w,c
 30308  014062  6EDA               	movwf	fsr2h,c
 30309  014064  50DF               	movf	indf2,w,c
 30310  014066  6E0C               	movwf	(btemp+11)^0,c
 30311  014068  0060  F030  F005   	movff	btemp+11,btemp+4
 30312  01406E  6A06               	clrf	(btemp+5)^0,c
 30313  014070  6A07               	clrf	(btemp+6)^0,c
 30314  014072  6A08               	clrf	(btemp+7)^0,c
 30315                           
 30316                           ;stkvar	_prod @ sp[(-13)+0]
 30317  014074  0EF3               	movlw	-13
 30318  014076  0060  F017  FFE3   	movff	btemp+4,plusw1
 30319  01407C  0EF4               	movlw	-12
 30320  01407E  0060  F01B  FFE3   	movff	btemp+5,plusw1
 30321  014084  0EF5               	movlw	-11
 30322  014086  0060  F01F  FFE3   	movff	btemp+6,plusw1
 30323  01408C  0EF6               	movlw	-10
 30324  01408E  0060  F023  FFE3   	movff	btemp+7,plusw1
 30325                           
 30326                           ;stkvar	_b @ sp[(-13)+-4]
 30327  014094  0EF0               	movlw	240
 30328  014096  24E1               	addwf	fsr1l,w,c
 30329  014098  6ED9               	movwf	fsr2l,c
 30330  01409A  0EFF               	movlw	255
 30331  01409C  20E2               	addwfc	fsr1h,w,c
 30332  01409E  6EDA               	movwf	fsr2h,c
 30333  0140A0  50DF               	movf	indf2,w,c
 30334  0140A2  6E0C               	movwf	(btemp+11)^0,c
 30335                           
 30336                           ;stkvar	_a @ sp[(-13)+-8]
 30337  0140A4  0EEC               	movlw	236
 30338  0140A6  24E1               	addwf	fsr1l,w,c
 30339  0140A8  6ED9               	movwf	fsr2l,c
 30340  0140AA  0EFF               	movlw	255
 30341  0140AC  20E2               	addwfc	fsr1h,w,c
 30342  0140AE  6EDA               	movwf	fsr2h,c
 30343  0140B0  50DF               	movf	indf2,w,c
 30344  0140B2  020C               	mulwf	(btemp+11)^0,c
 30345                           
 30346                           ;stkvar	_temp @ sp[(-13)+8]
 30347  0140B4  0EFB               	movlw	-5
 30348  0140B6  006F FFCF FFE3     	movff	prodl,plusw1
 30349  0140BC  0EFC               	movlw	-4
 30350  0140BE  006F FFD3 FFE3     	movff	prodh,plusw1
 30351                           
 30352                           ;stkvar	_grs @ sp[(-13)+4]
 30353  0140C4  50E1               	movf	fsr1l,w,c
 30354  0140C6  0FF7               	addlw	-9
 30355  0140C8  6ED9               	movwf	fsr2l,c
 30356  0140CA  50E2               	movf	fsr1h,w,c
 30357  0140CC  6EDA               	movwf	fsr2h,c
 30358  0140CE  0EFF               	movlw	255
 30359  0140D0  22DA               	addwfc	fsr2h,f,c
 30360                           
 30361                           ;stkvar	_temp @ sp[(-13)+8]
 30362  0140D2  0EFB               	movlw	-5
 30363  0140D4  50E3               	movf	plusw1,w,c
 30364  0140D6  26DE               	addwf	postinc2,f,c
 30365  0140D8  0E00               	movlw	0
 30366  0140DA  22DE               	addwfc	postinc2,f,c
 30367  0140DC  22DE               	addwfc	postinc2,f,c
 30368  0140DE  22DE               	addwfc	postinc2,f,c
 30369                           
 30370                           ;stkvar	_prod @ sp[(-13)+0]
 30371  0140E0  50E1               	movf	fsr1l,w,c
 30372  0140E2  0FF3               	addlw	-13
 30373  0140E4  6ED9               	movwf	fsr2l,c
 30374  0140E6  50E2               	movf	fsr1h,w,c
 30375  0140E8  6EDA               	movwf	fsr2h,c
 30376  0140EA  0EFF               	movlw	255
 30377  0140EC  22DA               	addwfc	fsr2h,f,c
 30378                           
 30379                           ;stkvar	_temp @ sp[(-13)+8]
 30380  0140EE  0EFC               	movlw	252
 30381  0140F0  24E1               	addwf	fsr1l,w,c
 30382  0140F2  6EE9               	movwf	fsr0l,c
 30383  0140F4  0EFF               	movlw	255
 30384  0140F6  20E2               	addwfc	fsr1h,w,c
 30385  0140F8  6EEA               	movwf	fsr0h,c
 30386  0140FA  50EF               	movf	indf0,w,c
 30387  0140FC  26DE               	addwf	postinc2,f,c
 30388  0140FE  0E00               	movlw	0
 30389  014100  22DE               	addwfc	postinc2,f,c
 30390  014102  22DE               	addwfc	postinc2,f,c
 30391  014104  22DE               	addwfc	postinc2,f,c
 30392                           
 30393                           ;stkvar	_b @ sp[(-13)+-4]
 30394  014106  0EF1               	movlw	241
 30395  014108  24E1               	addwf	fsr1l,w,c
 30396  01410A  6ED9               	movwf	fsr2l,c
 30397  01410C  0EFF               	movlw	255
 30398  01410E  20E2               	addwfc	fsr1h,w,c
 30399  014110  6EDA               	movwf	fsr2h,c
 30400  014112  50DF               	movf	indf2,w,c
 30401  014114  6E0C               	movwf	(btemp+11)^0,c
 30402                           
 30403                           ;stkvar	_a @ sp[(-13)+-8]
 30404  014116  0EEB               	movlw	-21
 30405  014118  50E3               	movf	plusw1,w,c
 30406  01411A  020C               	mulwf	(btemp+11)^0,c
 30407                           
 30408                           ;stkvar	_temp @ sp[(-13)+8]
 30409  01411C  0EFB               	movlw	-5
 30410  01411E  006F FFCF FFE3     	movff	prodl,plusw1
 30411  014124  0EFC               	movlw	-4
 30412  014126  006F FFD3 FFE3     	movff	prodh,plusw1
 30413                           
 30414                           ;stkvar	_grs @ sp[(-13)+4]
 30415  01412C  50E1               	movf	fsr1l,w,c
 30416  01412E  0FF7               	addlw	-9
 30417  014130  6ED9               	movwf	fsr2l,c
 30418  014132  50E2               	movf	fsr1h,w,c
 30419  014134  6EDA               	movwf	fsr2h,c
 30420  014136  0EFF               	movlw	255
 30421  014138  22DA               	addwfc	fsr2h,f,c
 30422                           
 30423                           ;stkvar	_temp @ sp[(-13)+8]
 30424  01413A  0EFB               	movlw	-5
 30425  01413C  50E3               	movf	plusw1,w,c
 30426  01413E  26DE               	addwf	postinc2,f,c
 30427  014140  0E00               	movlw	0
 30428  014142  22DE               	addwfc	postinc2,f,c
 30429  014144  22DE               	addwfc	postinc2,f,c
 30430  014146  22DE               	addwfc	postinc2,f,c
 30431                           
 30432                           ;stkvar	_prod @ sp[(-13)+0]
 30433  014148  50E1               	movf	fsr1l,w,c
 30434  01414A  0FF3               	addlw	-13
 30435  01414C  6ED9               	movwf	fsr2l,c
 30436  01414E  50E2               	movf	fsr1h,w,c
 30437  014150  6EDA               	movwf	fsr2h,c
 30438  014152  0EFF               	movlw	255
 30439  014154  22DA               	addwfc	fsr2h,f,c
 30440                           
 30441                           ;stkvar	_temp @ sp[(-13)+8]
 30442  014156  0EFC               	movlw	252
 30443  014158  24E1               	addwf	fsr1l,w,c
 30444  01415A  6EE9               	movwf	fsr0l,c
 30445  01415C  0EFF               	movlw	255
 30446  01415E  20E2               	addwfc	fsr1h,w,c
 30447  014160  6EEA               	movwf	fsr0h,c
 30448  014162  50EF               	movf	indf0,w,c
 30449  014164  26DE               	addwf	postinc2,f,c
 30450  014166  0E00               	movlw	0
 30451  014168  22DE               	addwfc	postinc2,f,c
 30452  01416A  22DE               	addwfc	postinc2,f,c
 30453  01416C  22DE               	addwfc	postinc2,f,c
 30454                           
 30455                           ;stkvar	_grs @ sp[(-13)+4]
 30456  01416E  50E1               	movf	fsr1l,w,c
 30457  014170  0FF7               	addlw	-9
 30458  014172  6ED9               	movwf	fsr2l,c
 30459  014174  50E2               	movf	fsr1h,w,c
 30460  014176  6EDA               	movwf	fsr2h,c
 30461  014178  0EFF               	movlw	255
 30462  01417A  22DA               	addwfc	fsr2h,f,c
 30463  01417C  0E08               	movlw	8
 30464  01417E                     u7085:
 30465  01417E  90D8               	bcf	status,0,c
 30466  014180  36DE               	rlcf	postinc2,f,c
 30467  014182  36DE               	rlcf	postinc2,f,c
 30468  014184  36DE               	rlcf	postinc2,f,c
 30469  014186  36DD               	rlcf	postdec2,f,c
 30470  014188  52DD               	movf	postdec2,f,c
 30471  01418A  52DD               	movf	postdec2,f,c
 30472  01418C  2EE8               	decfsz	wreg,f,c
 30473  01418E  D7F7               	goto	u7085
 30474                           
 30475                           ;stkvar	_b @ sp[(-13)+-4]
 30476  014190  0EF0               	movlw	240
 30477  014192  24E1               	addwf	fsr1l,w,c
 30478  014194  6ED9               	movwf	fsr2l,c
 30479  014196  0EFF               	movlw	255
 30480  014198  20E2               	addwfc	fsr1h,w,c
 30481  01419A  6EDA               	movwf	fsr2h,c
 30482  01419C  50DF               	movf	indf2,w,c
 30483  01419E  6E0C               	movwf	(btemp+11)^0,c
 30484                           
 30485                           ;stkvar	_a @ sp[(-13)+-8]
 30486  0141A0  0EEB               	movlw	-21
 30487  0141A2  50E3               	movf	plusw1,w,c
 30488  0141A4  020C               	mulwf	(btemp+11)^0,c
 30489                           
 30490                           ;stkvar	_temp @ sp[(-13)+8]
 30491  0141A6  0EFB               	movlw	-5
 30492  0141A8  006F FFCF FFE3     	movff	prodl,plusw1
 30493  0141AE  0EFC               	movlw	-4
 30494  0141B0  006F FFD3 FFE3     	movff	prodh,plusw1
 30495                           
 30496                           ;stkvar	_temp @ sp[(-13)+8]
 30497  0141B6  0EFB               	movlw	-5
 30498  0141B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 30499  0141BE  0EFC               	movlw	-4
 30500  0141C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 30501                           
 30502                           ;stkvar	_grs @ sp[(-13)+4]
 30503  0141C6  50E1               	movf	fsr1l,w,c
 30504  0141C8  0FF7               	addlw	-9
 30505  0141CA  6ED9               	movwf	fsr2l,c
 30506  0141CC  50E2               	movf	fsr1h,w,c
 30507  0141CE  6EDA               	movwf	fsr2h,c
 30508  0141D0  0EFF               	movlw	255
 30509  0141D2  22DA               	addwfc	fsr2h,f,c
 30510  0141D4  500B               	movf	(btemp+10)^0,w,c
 30511  0141D6  26DE               	addwf	postinc2,f,c
 30512  0141D8  500C               	movf	(btemp+11)^0,w,c
 30513  0141DA  22DE               	addwfc	postinc2,f,c
 30514  0141DC  0E00               	movlw	0
 30515  0141DE  22DE               	addwfc	postinc2,f,c
 30516  0141E0  22DE               	addwfc	postinc2,f,c
 30517                           
 30518                           ;stkvar	_b @ sp[(-13)+-4]
 30519  0141E2  0EEF               	movlw	-17
 30520  0141E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 30521                           
 30522                           ;stkvar	_a @ sp[(-13)+-8]
 30523  0141EA  0EEC               	movlw	236
 30524  0141EC  24E1               	addwf	fsr1l,w,c
 30525  0141EE  6ED9               	movwf	fsr2l,c
 30526  0141F0  0EFF               	movlw	255
 30527  0141F2  20E2               	addwfc	fsr1h,w,c
 30528  0141F4  6EDA               	movwf	fsr2h,c
 30529  0141F6  50DF               	movf	indf2,w,c
 30530  0141F8  020C               	mulwf	(btemp+11)^0,c
 30531                           
 30532                           ;stkvar	_temp @ sp[(-13)+8]
 30533  0141FA  0EFB               	movlw	-5
 30534  0141FC  006F FFCF FFE3     	movff	prodl,plusw1
 30535  014202  0EFC               	movlw	-4
 30536  014204  006F FFD3 FFE3     	movff	prodh,plusw1
 30537                           
 30538                           ;stkvar	_temp @ sp[(-13)+8]
 30539  01420A  0EFB               	movlw	-5
 30540  01420C  006F FF8C  F00B    	movff	plusw1,btemp+10
 30541  014212  0EFC               	movlw	-4
 30542  014214  006F FF8C  F00C    	movff	plusw1,btemp+11
 30543                           
 30544                           ;stkvar	_grs @ sp[(-13)+4]
 30545  01421A  50E1               	movf	fsr1l,w,c
 30546  01421C  0FF7               	addlw	-9
 30547  01421E  6ED9               	movwf	fsr2l,c
 30548  014220  50E2               	movf	fsr1h,w,c
 30549  014222  6EDA               	movwf	fsr2h,c
 30550  014224  0EFF               	movlw	255
 30551  014226  22DA               	addwfc	fsr2h,f,c
 30552  014228  500B               	movf	(btemp+10)^0,w,c
 30553  01422A  26DE               	addwf	postinc2,f,c
 30554  01422C  500C               	movf	(btemp+11)^0,w,c
 30555  01422E  22DE               	addwfc	postinc2,f,c
 30556  014230  0E00               	movlw	0
 30557  014232  22DE               	addwfc	postinc2,f,c
 30558  014234  22DE               	addwfc	postinc2,f,c
 30559                           
 30560                           ;stkvar	_grs @ sp[(-13)+4]
 30561  014236  50E1               	movf	fsr1l,w,c
 30562  014238  0FF7               	addlw	-9
 30563  01423A  6ED9               	movwf	fsr2l,c
 30564  01423C  50E2               	movf	fsr1h,w,c
 30565  01423E  6EDA               	movwf	fsr2h,c
 30566  014240  0EFF               	movlw	255
 30567  014242  22DA               	addwfc	fsr2h,f,c
 30568  014244  0E08               	movlw	8
 30569  014246                     u7095:
 30570  014246  90D8               	bcf	status,0,c
 30571  014248  36DE               	rlcf	postinc2,f,c
 30572  01424A  36DE               	rlcf	postinc2,f,c
 30573  01424C  36DE               	rlcf	postinc2,f,c
 30574  01424E  36DD               	rlcf	postdec2,f,c
 30575  014250  52DD               	movf	postdec2,f,c
 30576  014252  52DD               	movf	postdec2,f,c
 30577  014254  2EE8               	decfsz	wreg,f,c
 30578  014256  D7F7               	goto	u7095
 30579                           
 30580                           ;stkvar	_b @ sp[(-13)+-4]
 30581  014258  0EEF               	movlw	-17
 30582  01425A  006F FF8C  F00C    	movff	plusw1,btemp+11
 30583                           
 30584                           ;stkvar	_a @ sp[(-13)+-8]
 30585  014260  0EEB               	movlw	-21
 30586  014262  50E3               	movf	plusw1,w,c
 30587  014264  020C               	mulwf	(btemp+11)^0,c
 30588                           
 30589                           ;stkvar	_temp @ sp[(-13)+8]
 30590  014266  0EFB               	movlw	-5
 30591  014268  006F FFCF FFE3     	movff	prodl,plusw1
 30592  01426E  0EFC               	movlw	-4
 30593  014270  006F FFD3 FFE3     	movff	prodh,plusw1
 30594                           
 30595                           ;stkvar	_temp @ sp[(-13)+8]
 30596  014276  0EFB               	movlw	-5
 30597  014278  006F FF8C  F00B    	movff	plusw1,btemp+10
 30598  01427E  0EFC               	movlw	-4
 30599  014280  006F FF8C  F00C    	movff	plusw1,btemp+11
 30600                           
 30601                           ;stkvar	_grs @ sp[(-13)+4]
 30602  014286  50E1               	movf	fsr1l,w,c
 30603  014288  0FF7               	addlw	-9
 30604  01428A  6ED9               	movwf	fsr2l,c
 30605  01428C  50E2               	movf	fsr1h,w,c
 30606  01428E  6EDA               	movwf	fsr2h,c
 30607  014290  0EFF               	movlw	255
 30608  014292  22DA               	addwfc	fsr2h,f,c
 30609  014294  500B               	movf	(btemp+10)^0,w,c
 30610  014296  26DE               	addwf	postinc2,f,c
 30611  014298  500C               	movf	(btemp+11)^0,w,c
 30612  01429A  22DE               	addwfc	postinc2,f,c
 30613  01429C  0E00               	movlw	0
 30614  01429E  22DE               	addwfc	postinc2,f,c
 30615  0142A0  22DE               	addwfc	postinc2,f,c
 30616                           
 30617                           ;stkvar	_b @ sp[(-13)+-4]
 30618  0142A2  0EF0               	movlw	240
 30619  0142A4  24E1               	addwf	fsr1l,w,c
 30620  0142A6  6ED9               	movwf	fsr2l,c
 30621  0142A8  0EFF               	movlw	255
 30622  0142AA  20E2               	addwfc	fsr1h,w,c
 30623  0142AC  6EDA               	movwf	fsr2h,c
 30624  0142AE  50DF               	movf	indf2,w,c
 30625  0142B0  6E0C               	movwf	(btemp+11)^0,c
 30626                           
 30627                           ;stkvar	_a @ sp[(-13)+-8]
 30628  0142B2  0EED               	movlw	237
 30629  0142B4  24E1               	addwf	fsr1l,w,c
 30630  0142B6  6ED9               	movwf	fsr2l,c
 30631  0142B8  0EFF               	movlw	255
 30632  0142BA  20E2               	addwfc	fsr1h,w,c
 30633  0142BC  6EDA               	movwf	fsr2h,c
 30634  0142BE  50DF               	movf	indf2,w,c
 30635  0142C0  020C               	mulwf	(btemp+11)^0,c
 30636                           
 30637                           ;stkvar	_temp @ sp[(-13)+8]
 30638  0142C2  0EFB               	movlw	-5
 30639  0142C4  006F FFCF FFE3     	movff	prodl,plusw1
 30640  0142CA  0EFC               	movlw	-4
 30641  0142CC  006F FFD3 FFE3     	movff	prodh,plusw1
 30642                           
 30643                           ;stkvar	_temp @ sp[(-13)+8]
 30644  0142D2  0EFB               	movlw	-5
 30645  0142D4  006F FF8C  F00B    	movff	plusw1,btemp+10
 30646  0142DA  0EFC               	movlw	-4
 30647  0142DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 30648                           
 30649                           ;stkvar	_prod @ sp[(-13)+0]
 30650  0142E2  50E1               	movf	fsr1l,w,c
 30651  0142E4  0FF3               	addlw	-13
 30652  0142E6  6ED9               	movwf	fsr2l,c
 30653  0142E8  50E2               	movf	fsr1h,w,c
 30654  0142EA  6EDA               	movwf	fsr2h,c
 30655  0142EC  0EFF               	movlw	255
 30656  0142EE  22DA               	addwfc	fsr2h,f,c
 30657  0142F0  500B               	movf	(btemp+10)^0,w,c
 30658  0142F2  26DE               	addwf	postinc2,f,c
 30659  0142F4  500C               	movf	(btemp+11)^0,w,c
 30660  0142F6  22DE               	addwfc	postinc2,f,c
 30661  0142F8  0E00               	movlw	0
 30662  0142FA  22DE               	addwfc	postinc2,f,c
 30663  0142FC  22DE               	addwfc	postinc2,f,c
 30664                           
 30665                           ;stkvar	_b @ sp[(-13)+-4]
 30666  0142FE  0EF1               	movlw	241
 30667  014300  24E1               	addwf	fsr1l,w,c
 30668  014302  6ED9               	movwf	fsr2l,c
 30669  014304  0EFF               	movlw	255
 30670  014306  20E2               	addwfc	fsr1h,w,c
 30671  014308  6EDA               	movwf	fsr2h,c
 30672  01430A  50DF               	movf	indf2,w,c
 30673  01430C  6E0C               	movwf	(btemp+11)^0,c
 30674                           
 30675                           ;stkvar	_a @ sp[(-13)+-8]
 30676  01430E  0EEC               	movlw	236
 30677  014310  24E1               	addwf	fsr1l,w,c
 30678  014312  6ED9               	movwf	fsr2l,c
 30679  014314  0EFF               	movlw	255
 30680  014316  20E2               	addwfc	fsr1h,w,c
 30681  014318  6EDA               	movwf	fsr2h,c
 30682  01431A  50DF               	movf	indf2,w,c
 30683  01431C  020C               	mulwf	(btemp+11)^0,c
 30684                           
 30685                           ;stkvar	_temp @ sp[(-13)+8]
 30686  01431E  0EFB               	movlw	-5
 30687  014320  006F FFCF FFE3     	movff	prodl,plusw1
 30688  014326  0EFC               	movlw	-4
 30689  014328  006F FFD3 FFE3     	movff	prodh,plusw1
 30690                           
 30691                           ;stkvar	_temp @ sp[(-13)+8]
 30692  01432E  0EFB               	movlw	-5
 30693  014330  006F FF8C  F00B    	movff	plusw1,btemp+10
 30694  014336  0EFC               	movlw	-4
 30695  014338  006F FF8C  F00C    	movff	plusw1,btemp+11
 30696                           
 30697                           ;stkvar	_prod @ sp[(-13)+0]
 30698  01433E  50E1               	movf	fsr1l,w,c
 30699  014340  0FF3               	addlw	-13
 30700  014342  6ED9               	movwf	fsr2l,c
 30701  014344  50E2               	movf	fsr1h,w,c
 30702  014346  6EDA               	movwf	fsr2h,c
 30703  014348  0EFF               	movlw	255
 30704  01434A  22DA               	addwfc	fsr2h,f,c
 30705  01434C  500B               	movf	(btemp+10)^0,w,c
 30706  01434E  26DE               	addwf	postinc2,f,c
 30707  014350  500C               	movf	(btemp+11)^0,w,c
 30708  014352  22DE               	addwfc	postinc2,f,c
 30709  014354  0E00               	movlw	0
 30710  014356  22DE               	addwfc	postinc2,f,c
 30711  014358  22DE               	addwfc	postinc2,f,c
 30712                           
 30713                           ;stkvar	_b @ sp[(-13)+-4]
 30714  01435A  0EF1               	movlw	241
 30715  01435C  24E1               	addwf	fsr1l,w,c
 30716  01435E  6ED9               	movwf	fsr2l,c
 30717  014360  0EFF               	movlw	255
 30718  014362  20E2               	addwfc	fsr1h,w,c
 30719  014364  6EDA               	movwf	fsr2h,c
 30720  014366  50DF               	movf	indf2,w,c
 30721  014368  6E0C               	movwf	(btemp+11)^0,c
 30722                           
 30723                           ;stkvar	_a @ sp[(-13)+-8]
 30724  01436A  0EED               	movlw	237
 30725  01436C  24E1               	addwf	fsr1l,w,c
 30726  01436E  6ED9               	movwf	fsr2l,c
 30727  014370  0EFF               	movlw	255
 30728  014372  20E2               	addwfc	fsr1h,w,c
 30729  014374  6EDA               	movwf	fsr2h,c
 30730  014376  50DF               	movf	indf2,w,c
 30731  014378  020C               	mulwf	(btemp+11)^0,c
 30732                           
 30733                           ;stkvar	_temp @ sp[(-13)+8]
 30734  01437A  0EFB               	movlw	-5
 30735  01437C  006F FFCF FFE3     	movff	prodl,plusw1
 30736  014382  0EFC               	movlw	-4
 30737  014384  006F FFD3 FFE3     	movff	prodh,plusw1
 30738                           
 30739                           ;stkvar	_temp @ sp[(-13)+8]
 30740  01438A  0EFB               	movlw	-5
 30741  01438C  006F FF8C  F00B    	movff	plusw1,btemp+10
 30742  014392  0EFC               	movlw	-4
 30743  014394  006F FF8C  F00C    	movff	plusw1,btemp+11
 30744  01439A  500B               	movf	(btemp+10)^0,w,c
 30745  01439C  6E05               	movwf	(btemp+4)^0,c
 30746  01439E  500C               	movf	(btemp+11)^0,w,c
 30747  0143A0  6E06               	movwf	(btemp+5)^0,c
 30748  0143A2  6A07               	clrf	(btemp+6)^0,c
 30749  0143A4  6A08               	clrf	(btemp+7)^0,c
 30750  0143A6  0060  F01C  F008   	movff	btemp+6,btemp+7
 30751  0143AC  0060  F018  F007   	movff	btemp+5,btemp+6
 30752  0143B2  0060  F014  F006   	movff	btemp+4,btemp+5
 30753  0143B8  6A05               	clrf	(btemp+4)^0,c
 30754                           
 30755                           ;stkvar	_prod @ sp[(-13)+0]
 30756  0143BA  50E1               	movf	fsr1l,w,c
 30757  0143BC  0FF3               	addlw	-13
 30758  0143BE  6ED9               	movwf	fsr2l,c
 30759  0143C0  50E2               	movf	fsr1h,w,c
 30760  0143C2  6EDA               	movwf	fsr2h,c
 30761  0143C4  0EFF               	movlw	255
 30762  0143C6  22DA               	addwfc	fsr2h,f,c
 30763  0143C8  5005               	movf	(btemp+4)^0,w,c
 30764  0143CA  26DE               	addwf	postinc2,f,c
 30765  0143CC  5006               	movf	(btemp+5)^0,w,c
 30766  0143CE  22DE               	addwfc	postinc2,f,c
 30767  0143D0  5007               	movf	(btemp+6)^0,w,c
 30768  0143D2  22DE               	addwfc	postinc2,f,c
 30769  0143D4  5008               	movf	(btemp+7)^0,w,c
 30770  0143D6  22DE               	addwfc	postinc2,f,c
 30771                           
 30772                           ;stkvar	_prod @ sp[(-13)+0]
 30773  0143D8  50E1               	movf	fsr1l,w,c
 30774  0143DA  0FF3               	addlw	-13
 30775  0143DC  6ED9               	movwf	fsr2l,c
 30776  0143DE  50E2               	movf	fsr1h,w,c
 30777  0143E0  6EDA               	movwf	fsr2h,c
 30778  0143E2  0EFF               	movlw	255
 30779  0143E4  22DA               	addwfc	fsr2h,f,c
 30780                           
 30781                           ;stkvar	_grs @ sp[(-13)+4]
 30782  0143E6  0EFA               	movlw	250
 30783  0143E8  24E1               	addwf	fsr1l,w,c
 30784  0143EA  6EE9               	movwf	fsr0l,c
 30785  0143EC  0EFF               	movlw	255
 30786  0143EE  20E2               	addwfc	fsr1h,w,c
 30787  0143F0  6EEA               	movwf	fsr0h,c
 30788  0143F2  50EF               	movf	indf0,w,c
 30789  0143F4  26DE               	addwf	postinc2,f,c
 30790  0143F6  0E00               	movlw	0
 30791  0143F8  22DE               	addwfc	postinc2,f,c
 30792  0143FA  22DE               	addwfc	postinc2,f,c
 30793  0143FC  22DE               	addwfc	postinc2,f,c
 30794                           
 30795                           ;stkvar	_grs @ sp[(-13)+4]
 30796  0143FE  50E1               	movf	fsr1l,w,c
 30797  014400  0FF7               	addlw	-9
 30798  014402  6ED9               	movwf	fsr2l,c
 30799  014404  50E2               	movf	fsr1h,w,c
 30800  014406  6EDA               	movwf	fsr2h,c
 30801  014408  0EFF               	movlw	255
 30802  01440A  22DA               	addwfc	fsr2h,f,c
 30803  01440C  0E08               	movlw	8
 30804  01440E                     u7105:
 30805  01440E  90D8               	bcf	status,0,c
 30806  014410  36DE               	rlcf	postinc2,f,c
 30807  014412  36DE               	rlcf	postinc2,f,c
 30808  014414  36DE               	rlcf	postinc2,f,c
 30809  014416  36DD               	rlcf	postdec2,f,c
 30810  014418  52DD               	movf	postdec2,f,c
 30811  01441A  52DD               	movf	postdec2,f,c
 30812  01441C  2EE8               	decfsz	wreg,f,c
 30813  01441E  D7F7               	goto	u7105
 30814  014420  0E82               	movlw	130
 30815  014422  6E0B               	movwf	(btemp+10)^0,c
 30816  014424  0EFF               	movlw	255
 30817  014426  6E0C               	movwf	(btemp+11)^0,c
 30818                           
 30819                           ;stkvar	_bexp @ sp[(-13)+10]
 30820  014428  0EFD               	movlw	-3
 30821  01442A  50E3               	movf	plusw1,w,c
 30822  01442C  6E09               	movwf	(btemp+8)^0,c
 30823  01442E  6A0A               	clrf	(btemp+9)^0,c
 30824                           
 30825                           ;stkvar	_aexp @ sp[(-13)+11]
 30826  014430  0EFE               	movlw	-2
 30827  014432  50E3               	movf	plusw1,w,c
 30828  014434  2609               	addwf	(btemp+8)^0,f,c
 30829  014436  0E00               	movlw	0
 30830  014438  220A               	addwfc	(btemp+9)^0,f,c
 30831  01443A  500B               	movf	(btemp+10)^0,w,c
 30832  01443C  2609               	addwf	(btemp+8)^0,f,c
 30833  01443E  500C               	movf	(btemp+11)^0,w,c
 30834  014440  220A               	addwfc	(btemp+9)^0,f,c
 30835                           
 30836                           ;stkvar	_temp @ sp[(-13)+8]
 30837  014442  0EFB               	movlw	-5
 30838  014444  0060  F027  FFE3   	movff	btemp+8,plusw1
 30839  01444A  0EFC               	movlw	-4
 30840  01444C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30841  014452  D021               	goto	l8809
 30842  014454                     l8799:
 30843                           
 30844                           ;stkvar	_prod @ sp[(-13)+0]
 30845  014454  90D8               	bcf	status,0,c
 30846  014456  0EF3               	movlw	-13
 30847  014458  36E3               	rlcf	plusw1,f,c
 30848  01445A  0EF4               	movlw	-12
 30849  01445C  36E3               	rlcf	plusw1,f,c
 30850  01445E  0EF5               	movlw	-11
 30851  014460  36E3               	rlcf	plusw1,f,c
 30852  014462  0EF6               	movlw	-10
 30853  014464  36E3               	rlcf	plusw1,f,c
 30854                           
 30855                           ;stkvar	_grs @ sp[(-13)+4]
 30856  014466  0EFA               	movlw	-6
 30857  014468  AEE3               	btfss	plusw1,7,c
 30858  01446A  D002               	goto	l8805
 30859                           
 30860                           ;stkvar	_prod @ sp[(-13)+0]
 30861  01446C  0EF3               	movlw	-13
 30862  01446E  80E3               	bsf	plusw1,0,c
 30863  014470                     l8805:
 30864                           
 30865                           ;stkvar	_grs @ sp[(-13)+4]
 30866  014470  90D8               	bcf	status,0,c
 30867  014472  0EF7               	movlw	-9
 30868  014474  36E3               	rlcf	plusw1,f,c
 30869  014476  0EF8               	movlw	-8
 30870  014478  36E3               	rlcf	plusw1,f,c
 30871  01447A  0EF9               	movlw	-7
 30872  01447C  36E3               	rlcf	plusw1,f,c
 30873  01447E  0EFA               	movlw	-6
 30874  014480  36E3               	rlcf	plusw1,f,c
 30875                           
 30876                           ;stkvar	_temp @ sp[(-13)+8]
 30877  014482  50E1               	movf	fsr1l,w,c
 30878  014484  0FFB               	addlw	-5
 30879  014486  6ED9               	movwf	fsr2l,c
 30880  014488  50E2               	movf	fsr1h,w,c
 30881  01448A  6EDA               	movwf	fsr2h,c
 30882  01448C  0EFF               	movlw	255
 30883  01448E  22DA               	addwfc	fsr2h,f,c
 30884  014490  06DE               	decf	postinc2,f,c
 30885  014492  0E00               	movlw	0
 30886  014494  5ADD               	subwfb	postdec2,f,c
 30887  014496                     l8809:
 30888                           
 30889                           ;stkvar	_prod @ sp[(-13)+0]
 30890  014496  0EF5               	movlw	-11
 30891  014498  AEE3               	btfss	plusw1,7,c
 30892  01449A  D7DC               	goto	l8799
 30893                           
 30894                           ;stkvar	_aexp @ sp[(-13)+11]
 30895  01449C  0EFE               	movlw	-2
 30896  01449E  6AE3               	clrf	plusw1,c
 30897                           
 30898                           ;stkvar	_grs @ sp[(-13)+4]
 30899  0144A0  0EFA               	movlw	-6
 30900  0144A2  AEE3               	btfss	plusw1,7,c
 30901  0144A4  D020               	goto	l8823
 30902                           
 30903                           ;stkvar	_grs @ sp[(-13)+4]
 30904  0144A6  50E1               	movf	fsr1l,w,c
 30905  0144A8  0FF7               	addlw	-9
 30906  0144AA  6ED9               	movwf	fsr2l,c
 30907  0144AC  50E2               	movf	fsr1h,w,c
 30908  0144AE  6EDA               	movwf	fsr2h,c
 30909  0144B0  0EFF               	movlw	255
 30910  0144B2  22DA               	addwfc	fsr2h,f,c
 30911  0144B4  0EFF               	movlw	255
 30912  0144B6  14DE               	andwf	postinc2,w,c
 30913  0144B8  6E09               	movwf	(btemp+8)^0,c
 30914  0144BA  0EFF               	movlw	255
 30915  0144BC  14DE               	andwf	postinc2,w,c
 30916  0144BE  6E0A               	movwf	(btemp+9)^0,c
 30917  0144C0  0EFF               	movlw	255
 30918  0144C2  14DE               	andwf	postinc2,w,c
 30919  0144C4  6E0B               	movwf	(btemp+10)^0,c
 30920  0144C6  0E7F               	movlw	127
 30921  0144C8  14DE               	andwf	postinc2,w,c
 30922  0144CA  6E0C               	movwf	(btemp+11)^0,c
 30923  0144CC  5009               	movf	(btemp+8)^0,w,c
 30924  0144CE  100A               	iorwf	(btemp+9)^0,w,c
 30925  0144D0  100B               	iorwf	(btemp+10)^0,w,c
 30926  0144D2  100C               	iorwf	(btemp+11)^0,w,c
 30927  0144D4  B4D8               	btfsc	status,2,c
 30928  0144D6  D004               	goto	l8819
 30929  0144D8                     u7140:
 30930                           
 30931                           ;stkvar	_aexp @ sp[(-13)+11]
 30932  0144D8  0EFE               	movlw	-2
 30933  0144DA  6AE3               	clrf	plusw1,c
 30934  0144DC  2AE3               	incf	plusw1,f,c
 30935  0144DE  D003               	goto	l8823
 30936  0144E0                     l8819:
 30937                           
 30938                           ;stkvar	_prod @ sp[(-13)+0]
 30939  0144E0  0EF3               	movlw	-13
 30940  0144E2  B0E3               	btfsc	plusw1,0,c
 30941  0144E4  D7F9               	goto	u7140
 30942  0144E6                     l8823:
 30943                           
 30944                           ;stkvar	_aexp @ sp[(-13)+11]
 30945  0144E6  0EFE               	movlw	-2
 30946  0144E8  50E3               	movf	plusw1,w,c
 30947  0144EA  B4D8               	btfsc	status,2,c
 30948  0144EC  D036               	goto	l8833
 30949                           
 30950                           ;stkvar	_prod @ sp[(-13)+0]
 30951  0144EE  50E1               	movf	fsr1l,w,c
 30952  0144F0  0FF3               	addlw	-13
 30953  0144F2  6ED9               	movwf	fsr2l,c
 30954  0144F4  50E2               	movf	fsr1h,w,c
 30955  0144F6  6EDA               	movwf	fsr2h,c
 30956  0144F8  0EFF               	movlw	255
 30957  0144FA  22DA               	addwfc	fsr2h,f,c
 30958  0144FC  2ADE               	incf	postinc2,f,c
 30959  0144FE  0E00               	movlw	0
 30960  014500  22DE               	addwfc	postinc2,f,c
 30961  014502  22DE               	addwfc	postinc2,f,c
 30962  014504  22DE               	addwfc	postinc2,f,c
 30963                           
 30964                           ;stkvar	_prod @ sp[(-13)+0]
 30965  014506  0EF6               	movlw	-10
 30966  014508  A0E3               	btfss	plusw1,0,c
 30967  01450A  D027               	goto	l8833
 30968  01450C  0E01               	movlw	1
 30969  01450E  6E0C               	movwf	(btemp+11)^0,c
 30970                           
 30971                           ;stkvar	_prod @ sp[(-13)+0]
 30972  014510  50E1               	movf	fsr1l,w,c
 30973  014512  0FF3               	addlw	-13
 30974  014514  6ED9               	movwf	fsr2l,c
 30975  014516  50E2               	movf	fsr1h,w,c
 30976  014518  6EDA               	movwf	fsr2h,c
 30977  01451A  0EFF               	movlw	255
 30978  01451C  22DA               	addwfc	fsr2h,f,c
 30979  01451E  280C               	incf	(btemp+11)^0,w,c
 30980  014520  52DE               	movf	postinc2,f,c
 30981  014522  D008               	goto	u7180
 30982  014524                     u7185:
 30983  014524  52DE               	movf	postinc2,f,c
 30984  014526  90D8               	bcf	status,0,c
 30985  014528  BEDC               	btfsc	preinc2,7,c
 30986  01452A  80D8               	bsf	status,0,c
 30987  01452C  32DD               	rrcf	postdec2,f,c
 30988  01452E  32DD               	rrcf	postdec2,f,c
 30989  014530  32DD               	rrcf	postdec2,f,c
 30990  014532  32DE               	rrcf	postinc2,f,c
 30991  014534                     u7180:
 30992  014534  2EE8               	decfsz	wreg,f,c
 30993  014536  D7F6               	goto	u7185
 30994                           
 30995                           ;stkvar	_temp @ sp[(-13)+8]
 30996  014538  0EFB               	movlw	-5
 30997  01453A  50E3               	movf	plusw1,w,c
 30998  01453C  0F01               	addlw	1
 30999  01453E  6E01               	movwf	btemp^0,c
 31000  014540  0EFB               	movlw	-5
 31001  014542  0060  F007  FFE3   	movff	btemp,plusw1
 31002  014548  6A01               	clrf	btemp^0,c
 31003  01454A  0EFC               	movlw	-4
 31004  01454C  50E3               	movf	plusw1,w,c
 31005  01454E  2001               	addwfc	btemp^0,w,c
 31006  014550  6E01               	movwf	btemp^0,c
 31007  014552  0EFC               	movlw	-4
 31008  014554  0060  F007  FFE3   	movff	btemp,plusw1
 31009  01455A                     l8833:
 31010                           
 31011                           ;stkvar	_temp @ sp[(-13)+8]
 31012  01455A  0EFC               	movlw	-4
 31013  01455C  BEE3               	btfsc	plusw1,7,c
 31014  01455E  D020               	goto	l8837
 31015  014560  0EFC               	movlw	-4
 31016  014562  50E3               	movf	plusw1,w,c
 31017  014564  E104               	bnz	u7190
 31018  014566  0EFB               	movlw	-5
 31019  014568  28E3               	incf	plusw1,w,c
 31020  01456A  A0D8               	btfss	status,0,c
 31021  01456C  D019               	goto	l8837
 31022  01456E                     u7190:
 31023  01456E  0E00               	movlw	0
 31024  014570  6E09               	movwf	(btemp+8)^0,c
 31025  014572  0E00               	movlw	0
 31026  014574  6E0A               	movwf	(btemp+9)^0,c
 31027  014576  0E80               	movlw	128
 31028  014578  6E0B               	movwf	(btemp+10)^0,c
 31029  01457A  0E7F               	movlw	127
 31030  01457C  6E0C               	movwf	(btemp+11)^0,c
 31031                           
 31032                           ;stkvar	_prod @ sp[(-13)+0]
 31033  01457E  0EF3               	movlw	-13
 31034  014580  0060  F027  FFE3   	movff	btemp+8,plusw1
 31035  014586  0EF4               	movlw	-12
 31036  014588  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31037  01458E  0EF5               	movlw	-11
 31038  014590  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31039  014596  0EF6               	movlw	-10
 31040  014598  0060  F033  FFE3   	movff	btemp+11,plusw1
 31041  01459E  D044               	goto	l8853
 31042  0145A0                     l8837:
 31043                           
 31044                           ;stkvar	_temp @ sp[(-13)+8]
 31045  0145A0  0EFC               	movlw	-4
 31046  0145A2  BEE3               	btfsc	plusw1,7,c
 31047  0145A4  D007               	goto	u7200
 31048  0145A6  0EFC               	movlw	-4
 31049  0145A8  50E3               	movf	plusw1,w,c
 31050  0145AA  E10F               	bnz	l8843
 31051  0145AC  0EFB               	movlw	-5
 31052  0145AE  04E3               	decf	plusw1,w,c
 31053  0145B0  B0D8               	btfsc	status,0,c
 31054  0145B2  D00B               	goto	l8843
 31055  0145B4                     u7200:
 31056                           
 31057                           ;stkvar	_prod @ sp[(-13)+0]
 31058  0145B4  0EF3               	movlw	-13
 31059  0145B6  6AE3               	clrf	plusw1,c
 31060  0145B8  0EF4               	movlw	-12
 31061  0145BA  6AE3               	clrf	plusw1,c
 31062  0145BC  0EF5               	movlw	-11
 31063  0145BE  6AE3               	clrf	plusw1,c
 31064  0145C0  0EF6               	movlw	-10
 31065  0145C2  6AE3               	clrf	plusw1,c
 31066                           
 31067                           ;stkvar	_sign @ sp[(-13)+12]
 31068  0145C4  0EFF               	movlw	-1
 31069  0145C6  6AE3               	clrf	plusw1,c
 31070  0145C8  D02F               	goto	l8853
 31071  0145CA                     l8843:
 31072                           
 31073                           ;stkvar	_temp @ sp[(-13)+8]
 31074                           ;stkvar	_bexp @ sp[(-13)+10]
 31075  0145CA  0EFB               	movlw	-5
 31076  0145CC  006F FF8C  F001    	movff	plusw1,btemp
 31077  0145D2  0EFD               	movlw	-3
 31078  0145D4  0060  F007  FFE3   	movff	btemp,plusw1
 31079                           
 31080                           ;stkvar	_prod @ sp[(-13)+0]
 31081  0145DA  50E1               	movf	fsr1l,w,c
 31082  0145DC  0FF3               	addlw	-13
 31083  0145DE  6ED9               	movwf	fsr2l,c
 31084  0145E0  50E2               	movf	fsr1h,w,c
 31085  0145E2  6EDA               	movwf	fsr2h,c
 31086  0145E4  0EFF               	movlw	255
 31087  0145E6  22DA               	addwfc	fsr2h,f,c
 31088  0145E8  0EFF               	movlw	255
 31089  0145EA  16DE               	andwf	postinc2,f,c
 31090  0145EC  0EFF               	movlw	255
 31091  0145EE  16DE               	andwf	postinc2,f,c
 31092  0145F0  0E7F               	movlw	127
 31093  0145F2  16DE               	andwf	postinc2,f,c
 31094  0145F4  0E00               	movlw	0
 31095  0145F6  16DE               	andwf	postinc2,f,c
 31096                           
 31097                           ;stkvar	_bexp @ sp[(-13)+10]
 31098  0145F8  0EFD               	movlw	-3
 31099  0145FA  A0E3               	btfss	plusw1,0,c
 31100  0145FC  D008               	goto	l8851
 31101                           
 31102                           ;stkvar	_prod @ sp[(-13)+0]
 31103  0145FE  0EF5               	movlw	245
 31104  014600  24E1               	addwf	fsr1l,w,c
 31105  014602  6ED9               	movwf	fsr2l,c
 31106  014604  0EFF               	movlw	255
 31107  014606  20E2               	addwfc	fsr1h,w,c
 31108  014608  6EDA               	movwf	fsr2h,c
 31109  01460A  0E00               	movlw	0
 31110  01460C  8EDB               	bsf	plusw2,7,c
 31111  01460E                     l8851:
 31112                           
 31113                           ;stkvar	_prod @ sp[(-13)+0]
 31114  01460E  0EF6               	movlw	246
 31115  014610  24E1               	addwf	fsr1l,w,c
 31116  014612  6ED9               	movwf	fsr2l,c
 31117  014614  0EFF               	movlw	255
 31118  014616  20E2               	addwfc	fsr1h,w,c
 31119  014618  6EDA               	movwf	fsr2h,c
 31120                           
 31121                           ;stkvar	_bexp @ sp[(-13)+10]
 31122  01461A  0EFD               	movlw	-3
 31123  01461C  006F FF8C  F00C    	movff	plusw1,btemp+11
 31124  014622  90D8               	bcf	status,0,c
 31125  014624  300C               	rrcf	(btemp+11)^0,w,c
 31126  014626  6EDF               	movwf	indf2,c
 31127  014628                     l8853:
 31128                           
 31129                           ;stkvar	_sign @ sp[(-13)+12]
 31130  014628  0EFF               	movlw	-1
 31131  01462A  006F FF8C  F00C    	movff	plusw1,btemp+11
 31132                           
 31133                           ;stkvar	_prod @ sp[(-13)+0]
 31134  014630  0EF6               	movlw	246
 31135  014632  24E1               	addwf	fsr1l,w,c
 31136  014634  6ED9               	movwf	fsr2l,c
 31137  014636  0EFF               	movlw	255
 31138  014638  20E2               	addwfc	fsr1h,w,c
 31139  01463A  6EDA               	movwf	fsr2h,c
 31140  01463C  500C               	movf	(btemp+11)^0,w,c
 31141  01463E  12DF               	iorwf	indf2,f,c
 31142                           
 31143                           ;stkvar	_prod @ sp[(-13)+0]
 31144  014640  0EF3               	movlw	-13
 31145  014642  006F FF8C  F001    	movff	plusw1,btemp
 31146  014648  0EF4               	movlw	-12
 31147  01464A  006F FF8C  F002    	movff	plusw1,btemp+1
 31148  014650  0EF5               	movlw	-11
 31149  014652  006F FF8C  F003    	movff	plusw1,btemp+2
 31150  014658  0EF6               	movlw	-10
 31151  01465A  006F FF8C  F004    	movff	plusw1,btemp+3
 31152  014660                     l3136:
 31153                           
 31154                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 31155  014660  0EEB               	movlw	235
 31156  014662  26E1               	addwf	fsr1l,f,c
 31157  014664  0EFF               	movlw	255
 31158  014666  22E2               	addwfc	fsr1h,f,c
 31159  014668  0012               	return		;funcret
 31160  01466A                     __end_of___flmul:
 31161                           	opt callstack 0
 31162                           
 31163 ;; *************** function _SYSTEM_Initialize *****************
 31164 ;; Defined at:
 31165 ;;		line 50 in file "mcc_generated_files/mcc.c"
 31166 ;; Parameters:    Size  Location     Type
 31167 ;;		None
 31168 ;; Auto vars:     Size  Location     Type
 31169 ;;		None
 31170 ;; Return value:  Size  Location     Type
 31171 ;;                  1  [STACK] void 
 31172 ;; Registers used:
 31173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 31174 ;; Tracked objects:
 31175 ;;		On entry : 0/0
 31176 ;;		On exit  : 3F/3C
 31177 ;;		Unchanged: 0/0
 31178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31183 ;;Total ram usage:        0 bytes
 31184 ;; Hardware stack levels used:    1
 31185 ;; Hardware stack levels required when called:   17
 31186 ;; This function calls:
 31187 ;;		_ADCC_Initialize
 31188 ;;		_CLKREF_Initialize
 31189 ;;		_DMA1_Initialize
 31190 ;;		_DMA2_Initialize
 31191 ;;		_EXT_INT_Initialize
 31192 ;;		_FVR_Initialize
 31193 ;;		_INTERRUPT_Initialize
 31194 ;;		_OSCILLATOR_Initialize
 31195 ;;		_PIN_MANAGER_Initialize
 31196 ;;		_PMD_Initialize
 31197 ;;		_PWM8_Initialize
 31198 ;;		_SPI1_Initialize
 31199 ;;		_TMR2_Initialize
 31200 ;;		_TMR3_Initialize
 31201 ;;		_TMR5_Initialize
 31202 ;;		_TMR6_Initialize
 31203 ;;		_UART1_Initialize
 31204 ;;		_UART2_Initialize
 31205 ;; This function is called by:
 31206 ;;		_main
 31207 ;; This function uses a reentrant model
 31208 ;;
 31209                           
 31210                           	psect	text117
 31211  01BDE0                     __ptext117:
 31212                           	opt callstack 0
 31213  01BDE0                     _SYSTEM_Initialize:
 31214                           	opt callstack 13
 31215                           
 31216                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 31217                           
 31218                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31219                           ;incstack = 0
 31220  01BDE0  ECD4  F0DC         	call	_INTERRUPT_Initialize	;wreg free
 31221                           
 31222                           ; BSR set to: 57
 31223                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 31224  01BDE4  EC3A  F0E5         	call	_PMD_Initialize	;wreg free
 31225                           
 31226                           ; BSR set to: 57
 31227                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 31228  01BDE8  ECBF  F0D9         	call	_PIN_MANAGER_Initialize	;wreg free
 31229                           
 31230                           ; BSR set to: 58
 31231                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 31232  01BDEC  EC2F  F0E5         	call	_OSCILLATOR_Initialize	;wreg free
 31233                           
 31234                           ; BSR set to: 57
 31235                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 31236  01BDF0  ECBD  F0E5         	call	_FVR_Initialize	;wreg free
 31237                           
 31238                           ; BSR set to: 62
 31239                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 31240  01BDF4  EC36  F0DC         	call	_ADCC_Initialize	;wreg free
 31241                           
 31242                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 31243  01BDF8  EC24  F0E5         	call	_PWM8_Initialize	;wreg free
 31244                           
 31245                           ; BSR set to: 63
 31246                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 31247  01BDFC  EC0D  F0E5         	call	_TMR2_Initialize	;wreg free
 31248                           
 31249                           ; BSR set to: 57
 31250                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 31251  01BE00  ECC6  F0E1         	call	_EXT_INT_Initialize	;wreg free
 31252                           
 31253                           ; BSR set to: 57
 31254                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 31255  01BE04  EC9A  F0E2         	call	_TMR6_Initialize	;wreg free
 31256                           
 31257                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 31258  01BE08  EC81  F0DF         	call	_TMR3_Initialize	;wreg free
 31259                           
 31260                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 31261  01BE0C  EC5D  F0DF         	call	_TMR5_Initialize	;wreg free
 31262                           
 31263                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 31264  01BE10  EC39  F0DF         	call	_UART1_Initialize	;wreg free
 31265                           
 31266                           ; BSR set to: 57
 31267                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 31268  01BE14  EC9B  F0DD         	call	_UART2_Initialize	;wreg free
 31269                           
 31270                           ; BSR set to: 57
 31271                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 31272  01BE18  EC19  F0E5         	call	_SPI1_Initialize	;wreg free
 31273                           
 31274                           ; BSR set to: 61
 31275                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 31276  01BE1C  EC25  F0DE         	call	_DMA2_Initialize	;wreg free
 31277                           
 31278                           ; BSR set to: 59
 31279                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 31280  01BE20  EC01  F0DC         	call	_DMA1_Initialize	;wreg free
 31281                           
 31282                           ; BSR set to: 59
 31283                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 31284  01BE24  EC91  F0E5         	call	_CLKREF_Initialize	;wreg free
 31285                           
 31286                           ; BSR set to: 60
 31287                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31288  01BE28  0012               	return		;funcret
 31289  01BE2A                     __end_of_SYSTEM_Initialize:
 31290                           	opt callstack 0
 31291                           
 31292 ;; *************** function _UART2_Initialize *****************
 31293 ;; Defined at:
 31294 ;;		line 78 in file "mcc_generated_files/uart2.c"
 31295 ;; Parameters:    Size  Location     Type
 31296 ;;		None
 31297 ;; Auto vars:     Size  Location     Type
 31298 ;;		None
 31299 ;; Return value:  Size  Location     Type
 31300 ;;                  1  [STACK] void 
 31301 ;; Registers used:
 31302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31303 ;; Tracked objects:
 31304 ;;		On entry : 3F/39
 31305 ;;		On exit  : 3F/39
 31306 ;;		Unchanged: 0/0
 31307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31312 ;;Total ram usage:        0 bytes
 31313 ;; Hardware stack levels used:    1
 31314 ;; Hardware stack levels required when called:   16
 31315 ;; This function calls:
 31316 ;;		_UART2_SetRxInterruptHandler
 31317 ;;		_UART2_SetTxInterruptHandler
 31318 ;; This function is called by:
 31319 ;;		_SYSTEM_Initialize
 31320 ;; This function uses a reentrant model
 31321 ;;
 31322                           
 31323                           	psect	text118
 31324  01BB36                     __ptext118:
 31325                           	opt callstack 0
 31326  01BB36                     _UART2_Initialize:
 31327                           	opt callstack 13
 31328                           
 31329                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 31330                           
 31331                           ; BSR set to: 60
 31332                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31333                           ;incstack = 0
 31334  01BB36  0139               	movlb	57	; () banked
 31335  01BB38  9596               	bcf	150,2,b	;volatile
 31336                           
 31337                           ; BSR set to: 57
 31338                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 31339  01BB3A  0E16               	movlw	low _UART2_Receive_ISR
 31340  01BB3C  6EE6               	movwf	postinc1,c
 31341  01BB3E  0EC9               	movlw	high _UART2_Receive_ISR
 31342  01BB40  6EE6               	movwf	postinc1,c
 31343  01BB42  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 31344  01BB44  6EE6               	movwf	postinc1,c
 31345  01BB46  ECEB  F0E2         	call	_UART2_SetRxInterruptHandler	;wreg free
 31346                           
 31347                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 31348  01BB4A  0139               	movlb	57	; () banked
 31349  01BB4C  9796               	bcf	150,3,b	;volatile
 31350                           
 31351                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 31352  01BB4E  0E08               	movlw	low _UART2_Transmit_ISR
 31353  01BB50  6EE6               	movwf	postinc1,c
 31354  01BB52  0EC5               	movlw	high _UART2_Transmit_ISR
 31355  01BB54  6EE6               	movwf	postinc1,c
 31356  01BB56  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 31357  01BB58  6EE6               	movwf	postinc1,c
 31358  01BB5A  ECD7  F0E2         	call	_UART2_SetTxInterruptHandler	;wreg free
 31359                           
 31360                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 31361  01BB5E  013D               	movlb	61	; () banked
 31362  01BB60  6BD4               	clrf	212,b	;volatile
 31363                           
 31364                           ; BSR set to: 61
 31365                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 31366  01BB62  6BD6               	clrf	214,b	;volatile
 31367                           
 31368                           ; BSR set to: 61
 31369                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 31370  01BB64  6BD8               	clrf	216,b	;volatile
 31371                           
 31372                           ; BSR set to: 61
 31373                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 31374  01BB66  0EB0               	movlw	176
 31375  01BB68  6FDA               	movwf	218,b	;volatile
 31376                           
 31377                           ; BSR set to: 61
 31378                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 31379  01BB6A  0E80               	movlw	128
 31380  01BB6C  6FDB               	movwf	219,b	;volatile
 31381                           
 31382                           ; BSR set to: 61
 31383                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 31384  01BB6E  6BDC               	clrf	220,b	;volatile
 31385                           
 31386                           ; BSR set to: 61
 31387                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 31388  01BB70  0E82               	movlw	130
 31389  01BB72  6FDD               	movwf	221,b	;volatile
 31390                           
 31391                           ; BSR set to: 61
 31392                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 31393  01BB74  0E06               	movlw	6
 31394  01BB76  6FDE               	movwf	222,b	;volatile
 31395                           
 31396                           ; BSR set to: 61
 31397                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 31398  01BB78  6BDF               	clrf	223,b	;volatile
 31399                           
 31400                           ; BSR set to: 61
 31401                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 31402  01BB7A  6BE0               	clrf	224,b	;volatile
 31403                           
 31404                           ; BSR set to: 61
 31405                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 31406  01BB7C  6BE1               	clrf	225,b	;volatile
 31407                           
 31408                           ; BSR set to: 61
 31409                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 31410  01BB7E  6BE2               	clrf	226,b	;volatile
 31411                           
 31412                           ; BSR set to: 61
 31413                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 31414  01BB80  0100               	movlb	0	; () banked
 31415  01BB82  6BAC               	clrf	_uart2TxHead& (0+255),b	;volatile
 31416                           
 31417                           ; BSR set to: 0
 31418                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 31419  01BB84  6A46               	clrf	_uart2TxTail^0,c	;volatile
 31420                           
 31421                           ; BSR set to: 0
 31422                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 31423  01BB86  0E40               	movlw	64
 31424  01BB88  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 31425                           
 31426                           ; BSR set to: 0
 31427                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 31428  01BB8A  6A44               	clrf	_uart2RxHead^0,c	;volatile
 31429                           
 31430                           ; BSR set to: 0
 31431                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 31432  01BB8C  6BAB               	clrf	_uart2RxTail& (0+255),b	;volatile
 31433                           
 31434                           ; BSR set to: 0
 31435                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 31436  01BB8E  6BAA               	clrf	_uart2RxCount& (0+255),b	;volatile
 31437                           
 31438                           ; BSR set to: 0
 31439                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 31440  01BB90  0139               	movlb	57	; () banked
 31441  01BB92  8596               	bsf	150,2,b	;volatile
 31442                           
 31443                           ; BSR set to: 57
 31444                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 31445  01BB94  0012               	return		;funcret
 31446  01BB96                     __end_of_UART2_Initialize:
 31447                           	opt callstack 0
 31448                           
 31449 ;; *************** function _UART2_SetTxInterruptHandler *****************
 31450 ;; Defined at:
 31451 ;;		line 252 in file "mcc_generated_files/uart2.c"
 31452 ;; Parameters:    Size  Location     Type
 31453 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31454 ;;		 -> UART2_Transmit_ISR(1), 
 31455 ;; Auto vars:     Size  Location     Type
 31456 ;;		None
 31457 ;; Return value:  Size  Location     Type
 31458 ;;                  1  [STACK] void 
 31459 ;; Registers used:
 31460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31461 ;; Tracked objects:
 31462 ;;		On entry : 3F/39
 31463 ;;		On exit  : 0/0
 31464 ;;		Unchanged: 0/0
 31465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31470 ;;Total ram usage:        0 bytes
 31471 ;; Hardware stack levels used:    1
 31472 ;; Hardware stack levels required when called:   15
 31473 ;; This function calls:
 31474 ;;		Nothing
 31475 ;; This function is called by:
 31476 ;;		_UART2_Initialize
 31477 ;; This function uses a reentrant model
 31478 ;;
 31479                           
 31480                           	psect	text119
 31481  01C5AE                     __ptext119:
 31482                           	opt callstack 0
 31483  01C5AE                     _UART2_SetTxInterruptHandler:
 31484                           	opt callstack 13
 31485                           
 31486                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 31487                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31488                           
 31489                           ; BSR set to: 57
 31490                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31491                           ;incstack = 0
 31492  01C5AE  50E1               	movf	fsr1l,w,c
 31493  01C5B0  0FFD               	addlw	-3
 31494  01C5B2  6ED9               	movwf	fsr2l,c
 31495  01C5B4  50E2               	movf	fsr1h,w,c
 31496  01C5B6  6EDA               	movwf	fsr2h,c
 31497  01C5B8  0EFF               	movlw	255
 31498  01C5BA  22DA               	addwfc	fsr2h,f,c
 31499  01C5BC  006F FF78  F08E    	movff	postinc2,_UART2_TxInterruptHandler
 31500  01C5C2  006F FF78  F08F    	movff	postinc2,_UART2_TxInterruptHandler+1
 31501  01C5C8  006F FF74  F090    	movff	postdec2,_UART2_TxInterruptHandler+2
 31502                           
 31503                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31504  01C5CE  52E5               	movf	postdec1,f,c
 31505  01C5D0  52E5               	movf	postdec1,f,c
 31506  01C5D2  52E5               	movf	postdec1,f,c
 31507  01C5D4  0012               	return		;funcret
 31508  01C5D6                     __end_of_UART2_SetTxInterruptHandler:
 31509                           	opt callstack 0
 31510                           
 31511 ;; *************** function _UART2_SetRxInterruptHandler *****************
 31512 ;; Defined at:
 31513 ;;		line 248 in file "mcc_generated_files/uart2.c"
 31514 ;; Parameters:    Size  Location     Type
 31515 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31516 ;;		 -> UART2_Receive_ISR(1), 
 31517 ;; Auto vars:     Size  Location     Type
 31518 ;;		None
 31519 ;; Return value:  Size  Location     Type
 31520 ;;                  1  [STACK] void 
 31521 ;; Registers used:
 31522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31523 ;; Tracked objects:
 31524 ;;		On entry : 3F/39
 31525 ;;		On exit  : 0/0
 31526 ;;		Unchanged: 0/0
 31527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31532 ;;Total ram usage:        0 bytes
 31533 ;; Hardware stack levels used:    1
 31534 ;; Hardware stack levels required when called:   15
 31535 ;; This function calls:
 31536 ;;		Nothing
 31537 ;; This function is called by:
 31538 ;;		_UART2_Initialize
 31539 ;; This function uses a reentrant model
 31540 ;;
 31541                           
 31542                           	psect	text120
 31543  01C5D6                     __ptext120:
 31544                           	opt callstack 0
 31545  01C5D6                     _UART2_SetRxInterruptHandler:
 31546                           	opt callstack 13
 31547                           
 31548                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 31549                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31550                           
 31551                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31552                           ;incstack = 0
 31553  01C5D6  50E1               	movf	fsr1l,w,c
 31554  01C5D8  0FFD               	addlw	-3
 31555  01C5DA  6ED9               	movwf	fsr2l,c
 31556  01C5DC  50E2               	movf	fsr1h,w,c
 31557  01C5DE  6EDA               	movwf	fsr2h,c
 31558  01C5E0  0EFF               	movlw	255
 31559  01C5E2  22DA               	addwfc	fsr2h,f,c
 31560  01C5E4  006F FF78  F091    	movff	postinc2,_UART2_RxInterruptHandler
 31561  01C5EA  006F FF78  F092    	movff	postinc2,_UART2_RxInterruptHandler+1
 31562  01C5F0  006F FF74  F093    	movff	postdec2,_UART2_RxInterruptHandler+2
 31563                           
 31564                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31565  01C5F6  52E5               	movf	postdec1,f,c
 31566  01C5F8  52E5               	movf	postdec1,f,c
 31567  01C5FA  52E5               	movf	postdec1,f,c
 31568  01C5FC  0012               	return		;funcret
 31569  01C5FE                     __end_of_UART2_SetRxInterruptHandler:
 31570                           	opt callstack 0
 31571                           
 31572 ;; *************** function _UART1_Initialize *****************
 31573 ;; Defined at:
 31574 ;;		line 75 in file "mcc_generated_files/uart1.c"
 31575 ;; Parameters:    Size  Location     Type
 31576 ;;		None
 31577 ;; Auto vars:     Size  Location     Type
 31578 ;;		None
 31579 ;; Return value:  Size  Location     Type
 31580 ;;                  1  [STACK] void 
 31581 ;; Registers used:
 31582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31583 ;; Tracked objects:
 31584 ;;		On entry : 0/39
 31585 ;;		On exit  : 3F/39
 31586 ;;		Unchanged: 0/0
 31587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31592 ;;Total ram usage:        0 bytes
 31593 ;; Hardware stack levels used:    1
 31594 ;; Hardware stack levels required when called:   16
 31595 ;; This function calls:
 31596 ;;		_UART1_SetRxInterruptHandler
 31597 ;; This function is called by:
 31598 ;;		_SYSTEM_Initialize
 31599 ;; This function uses a reentrant model
 31600 ;;
 31601                           
 31602                           	psect	text121
 31603  01BE72                     __ptext121:
 31604                           	opt callstack 0
 31605  01BE72                     _UART1_Initialize:
 31606                           	opt callstack 13
 31607                           
 31608                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 31609                           
 31610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31611                           ;incstack = 0
 31612  01BE72  0139               	movlb	57	; () banked
 31613  01BE74  9793               	bcf	147,3,b	;volatile
 31614                           
 31615                           ; BSR set to: 57
 31616                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 31617  01BE76  0ED4               	movlw	low _UART1_Receive_ISR
 31618  01BE78  6EE6               	movwf	postinc1,c
 31619  01BE7A  0EC8               	movlw	high _UART1_Receive_ISR
 31620  01BE7C  6EE6               	movwf	postinc1,c
 31621  01BE7E  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 31622  01BE80  6EE6               	movwf	postinc1,c
 31623  01BE82  ECFF  F0E2         	call	_UART1_SetRxInterruptHandler	;wreg free
 31624                           
 31625                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 31626  01BE86  013D               	movlb	61	; () banked
 31627  01BE88  6BEC               	clrf	236,b	;volatile
 31628                           
 31629                           ; BSR set to: 61
 31630                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 31631  01BE8A  6BED               	clrf	237,b	;volatile
 31632                           
 31633                           ; BSR set to: 61
 31634                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 31635  01BE8C  6BEE               	clrf	238,b	;volatile
 31636                           
 31637                           ; BSR set to: 61
 31638                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 31639  01BE8E  6BEF               	clrf	239,b	;volatile
 31640                           
 31641                           ; BSR set to: 61
 31642                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 31643  01BE90  6BF0               	clrf	240,b	;volatile
 31644                           
 31645                           ; BSR set to: 61
 31646                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 31647  01BE92  6BF1               	clrf	241,b	;volatile
 31648                           
 31649                           ; BSR set to: 61
 31650                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 31651  01BE94  0EB0               	movlw	176
 31652  01BE96  6FF2               	movwf	242,b	;volatile
 31653                           
 31654                           ; BSR set to: 61
 31655                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 31656  01BE98  0E80               	movlw	128
 31657  01BE9A  6FF3               	movwf	243,b	;volatile
 31658                           
 31659                           ; BSR set to: 61
 31660                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 31661  01BE9C  6BF4               	clrf	244,b	;volatile
 31662                           
 31663                           ; BSR set to: 61
 31664                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 31665  01BE9E  0E8A               	movlw	138
 31666  01BEA0  6FF5               	movwf	245,b	;volatile
 31667                           
 31668                           ; BSR set to: 61
 31669                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 31670  01BEA2  6BF6               	clrf	246,b	;volatile
 31671                           
 31672                           ; BSR set to: 61
 31673                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 31674  01BEA4  6BF7               	clrf	247,b	;volatile
 31675                           
 31676                           ; BSR set to: 61
 31677                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 31678  01BEA6  6BF8               	clrf	248,b	;volatile
 31679                           
 31680                           ; BSR set to: 61
 31681                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 31682  01BEA8  6BF9               	clrf	249,b	;volatile
 31683                           
 31684                           ; BSR set to: 61
 31685                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 31686  01BEAA  6BFA               	clrf	250,b	;volatile
 31687                           
 31688                           ; BSR set to: 61
 31689                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 31690  01BEAC  6A47               	clrf	_uart1RxHead^0,c	;volatile
 31691                           
 31692                           ; BSR set to: 61
 31693                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 31694  01BEAE  0100               	movlb	0	; () banked
 31695  01BEB0  6BAE               	clrf	_uart1RxTail& (0+255),b	;volatile
 31696                           
 31697                           ; BSR set to: 0
 31698                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 31699  01BEB2  6BAD               	clrf	_uart1RxCount& (0+255),b	;volatile
 31700                           
 31701                           ; BSR set to: 0
 31702                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 31703  01BEB4  0139               	movlb	57	; () banked
 31704  01BEB6  8793               	bsf	147,3,b	;volatile
 31705                           
 31706                           ; BSR set to: 57
 31707                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 31708  01BEB8  0012               	return		;funcret
 31709  01BEBA                     __end_of_UART1_Initialize:
 31710                           	opt callstack 0
 31711                           
 31712 ;; *************** function _UART1_SetRxInterruptHandler *****************
 31713 ;; Defined at:
 31714 ;;		line 207 in file "mcc_generated_files/uart1.c"
 31715 ;; Parameters:    Size  Location     Type
 31716 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31717 ;;		 -> UART1_Receive_ISR(1), 
 31718 ;; Auto vars:     Size  Location     Type
 31719 ;;		None
 31720 ;; Return value:  Size  Location     Type
 31721 ;;                  1  [STACK] void 
 31722 ;; Registers used:
 31723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31724 ;; Tracked objects:
 31725 ;;		On entry : 3F/39
 31726 ;;		On exit  : 0/0
 31727 ;;		Unchanged: 0/0
 31728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31733 ;;Total ram usage:        0 bytes
 31734 ;; Hardware stack levels used:    1
 31735 ;; Hardware stack levels required when called:   15
 31736 ;; This function calls:
 31737 ;;		Nothing
 31738 ;; This function is called by:
 31739 ;;		_UART1_Initialize
 31740 ;; This function uses a reentrant model
 31741 ;;
 31742                           
 31743                           	psect	text122
 31744  01C5FE                     __ptext122:
 31745                           	opt callstack 0
 31746  01C5FE                     _UART1_SetRxInterruptHandler:
 31747                           	opt callstack 13
 31748                           
 31749                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 31750                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31751                           
 31752                           ; BSR set to: 57
 31753                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31754                           ;incstack = 0
 31755  01C5FE  50E1               	movf	fsr1l,w,c
 31756  01C600  0FFD               	addlw	-3
 31757  01C602  6ED9               	movwf	fsr2l,c
 31758  01C604  50E2               	movf	fsr1h,w,c
 31759  01C606  6EDA               	movwf	fsr2h,c
 31760  01C608  0EFF               	movlw	255
 31761  01C60A  22DA               	addwfc	fsr2h,f,c
 31762  01C60C  006F FF78  F08B    	movff	postinc2,_UART1_RxInterruptHandler
 31763  01C612  006F FF78  F08C    	movff	postinc2,_UART1_RxInterruptHandler+1
 31764  01C618  006F FF74  F08D    	movff	postdec2,_UART1_RxInterruptHandler+2
 31765                           
 31766                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31767  01C61E  52E5               	movf	postdec1,f,c
 31768  01C620  52E5               	movf	postdec1,f,c
 31769  01C622  52E5               	movf	postdec1,f,c
 31770  01C624  0012               	return		;funcret
 31771  01C626                     __end_of_UART1_SetRxInterruptHandler:
 31772                           	opt callstack 0
 31773                           
 31774 ;; *************** function _TMR6_Initialize *****************
 31775 ;; Defined at:
 31776 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 31777 ;; Parameters:    Size  Location     Type
 31778 ;;		None
 31779 ;; Auto vars:     Size  Location     Type
 31780 ;;		None
 31781 ;; Return value:  Size  Location     Type
 31782 ;;                  1  [STACK] void 
 31783 ;; Registers used:
 31784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31785 ;; Tracked objects:
 31786 ;;		On entry : 3F/39
 31787 ;;		On exit  : 0/0
 31788 ;;		Unchanged: 0/0
 31789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31794 ;;Total ram usage:        0 bytes
 31795 ;; Hardware stack levels used:    1
 31796 ;; Hardware stack levels required when called:   16
 31797 ;; This function calls:
 31798 ;;		_TMR6_SetInterruptHandler
 31799 ;; This function is called by:
 31800 ;;		_SYSTEM_Initialize
 31801 ;; This function uses a reentrant model
 31802 ;;
 31803                           
 31804                           	psect	text123
 31805  01C534                     __ptext123:
 31806                           	opt callstack 0
 31807  01C534                     _TMR6_Initialize:
 31808                           	opt callstack 13
 31809                           
 31810                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 31811                           
 31812                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31813                           ;incstack = 0
 31814  01C534  0E01               	movlw	1
 31815  01C536  6E96               	movwf	150,c	;volatile
 31816                           
 31817                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 31818  01C538  6A95               	clrf	149,c	;volatile
 31819                           
 31820                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 31821  01C53A  6A97               	clrf	151,c	;volatile
 31822                           
 31823                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 31824  01C53C  0E7C               	movlw	124
 31825  01C53E  6E93               	movwf	147,c	;volatile
 31826                           
 31827                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 31828  01C540  6A92               	clrf	146,c	;volatile
 31829                           
 31830                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 31831  01C542  0139               	movlb	57	; () banked
 31832  01C544  91A9               	bcf	169,0,b	;volatile
 31833                           
 31834                           ; BSR set to: 57
 31835                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 31836  01C546  8199               	bsf	153,0,b	;volatile
 31837                           
 31838                           ; BSR set to: 57
 31839                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 31840  01C548  0E48               	movlw	low _TMR6_DefaultInterruptHandler
 31841  01C54A  6EE6               	movwf	postinc1,c
 31842  01C54C  0EBD               	movlw	high _TMR6_DefaultInterruptHandler
 31843  01C54E  6EE6               	movwf	postinc1,c
 31844  01C550  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 31845  01C552  6EE6               	movwf	postinc1,c
 31846  01C554  EC13  F0E3         	call	_TMR6_SetInterruptHandler	;wreg free
 31847                           
 31848                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 31849  01C558  0EE0               	movlw	224
 31850  01C55A  6E94               	movwf	148,c	;volatile
 31851                           
 31852                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31853  01C55C  0012               	return		;funcret
 31854  01C55E                     __end_of_TMR6_Initialize:
 31855                           	opt callstack 0
 31856                           
 31857 ;; *************** function _TMR6_SetInterruptHandler *****************
 31858 ;; Defined at:
 31859 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 31860 ;; Parameters:    Size  Location     Type
 31861 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31862 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 31863 ;; Auto vars:     Size  Location     Type
 31864 ;;		None
 31865 ;; Return value:  Size  Location     Type
 31866 ;;                  1  [STACK] void 
 31867 ;; Registers used:
 31868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31869 ;; Tracked objects:
 31870 ;;		On entry : 3F/39
 31871 ;;		On exit  : 0/0
 31872 ;;		Unchanged: 0/0
 31873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31878 ;;Total ram usage:        0 bytes
 31879 ;; Hardware stack levels used:    1
 31880 ;; Hardware stack levels required when called:   15
 31881 ;; This function calls:
 31882 ;;		Nothing
 31883 ;; This function is called by:
 31884 ;;		_TMR6_Initialize
 31885 ;; This function uses a reentrant model
 31886 ;;
 31887                           
 31888                           	psect	text124
 31889  01C626                     __ptext124:
 31890                           	opt callstack 0
 31891  01C626                     _TMR6_SetInterruptHandler:
 31892                           	opt callstack 13
 31893                           
 31894                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 31895                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31896                           
 31897                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31898                           ;incstack = 0
 31899  01C626  50E1               	movf	fsr1l,w,c
 31900  01C628  0FFD               	addlw	-3
 31901  01C62A  6ED9               	movwf	fsr2l,c
 31902  01C62C  50E2               	movf	fsr1h,w,c
 31903  01C62E  6EDA               	movwf	fsr2h,c
 31904  01C630  0EFF               	movlw	255
 31905  01C632  22DA               	addwfc	fsr2h,f,c
 31906  01C634  006F FF78  F082    	movff	postinc2,_TMR6_InterruptHandler
 31907  01C63A  006F FF78  F083    	movff	postinc2,_TMR6_InterruptHandler+1
 31908  01C640  006F FF74  F084    	movff	postdec2,_TMR6_InterruptHandler+2
 31909                           
 31910                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31911  01C646  52E5               	movf	postdec1,f,c
 31912  01C648  52E5               	movf	postdec1,f,c
 31913  01C64A  52E5               	movf	postdec1,f,c
 31914  01C64C  0012               	return		;funcret
 31915  01C64E                     __end_of_TMR6_SetInterruptHandler:
 31916                           	opt callstack 0
 31917                           
 31918 ;; *************** function _TMR5_Initialize *****************
 31919 ;; Defined at:
 31920 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 31921 ;; Parameters:    Size  Location     Type
 31922 ;;		None
 31923 ;; Auto vars:     Size  Location     Type
 31924 ;;		None
 31925 ;; Return value:  Size  Location     Type
 31926 ;;                  1  [STACK] void 
 31927 ;; Registers used:
 31928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 31929 ;; Tracked objects:
 31930 ;;		On entry : 0/39
 31931 ;;		On exit  : 0/0
 31932 ;;		Unchanged: 0/0
 31933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31938 ;;Total ram usage:        0 bytes
 31939 ;; Hardware stack levels used:    1
 31940 ;; Hardware stack levels required when called:   16
 31941 ;; This function calls:
 31942 ;;		_TMR5_SetInterruptHandler
 31943 ;; This function is called by:
 31944 ;;		_SYSTEM_Initialize
 31945 ;; This function uses a reentrant model
 31946 ;;
 31947                           
 31948                           	psect	text125
 31949  01BEBA                     __ptext125:
 31950                           	opt callstack 0
 31951  01BEBA                     _TMR5_Initialize:
 31952                           	opt callstack 13
 31953                           
 31954                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 31955                           
 31956                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31957                           ;incstack = 0
 31958  01BEBA  6A9B               	clrf	155,c	;volatile
 31959                           
 31960                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 31961  01BEBC  6A9C               	clrf	156,c	;volatile
 31962                           
 31963                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 31964  01BEBE  0E01               	movlw	1
 31965  01BEC0  6E9D               	movwf	157,c	;volatile
 31966                           
 31967                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 31968  01BEC2  0E63               	movlw	99
 31969  01BEC4  6E99               	movwf	153,c	;volatile
 31970                           
 31971                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 31972  01BEC6  0EC0               	movlw	192
 31973  01BEC8  6E98               	movwf	152,c	;volatile
 31974                           
 31975                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 31976  01BECA  5098               	movf	152,w,c	;volatile
 31977  01BECC  006F FE64  F001    	movff	16281,btemp	;volatile
 31978  01BED2  6A02               	clrf	(btemp+1)^0,c
 31979  01BED4  0060  F004  F002   	movff	btemp,btemp+1
 31980  01BEDA  6A01               	clrf	btemp^0,c
 31981  01BEDC  1001               	iorwf	btemp^0,w,c
 31982  01BEDE  0100               	movlb	0	; () banked
 31983  01BEE0  6FA2               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 31984  01BEE2  5002               	movf	(btemp+1)^0,w,c
 31985  01BEE4  6FA3               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 31986                           
 31987                           ; BSR set to: 0
 31988                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 31989  01BEE6  0139               	movlb	57	; () banked
 31990  01BEE8  9DA8               	bcf	168,6,b	;volatile
 31991                           
 31992                           ; BSR set to: 57
 31993                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 31994  01BEEA  8D98               	bsf	152,6,b	;volatile
 31995                           
 31996                           ; BSR set to: 57
 31997                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 31998  01BEEC  0E4C               	movlw	low _TMR5_DefaultInterruptHandler
 31999  01BEEE  6EE6               	movwf	postinc1,c
 32000  01BEF0  0EC2               	movlw	high _TMR5_DefaultInterruptHandler
 32001  01BEF2  6EE6               	movwf	postinc1,c
 32002  01BEF4  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 32003  01BEF6  6EE6               	movwf	postinc1,c
 32004  01BEF8  EC27  F0E3         	call	_TMR5_SetInterruptHandler	;wreg free
 32005                           
 32006                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 32007  01BEFC  0E31               	movlw	49
 32008  01BEFE  6E9A               	movwf	154,c	;volatile
 32009                           
 32010                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32011  01BF00  0012               	return		;funcret
 32012  01BF02                     __end_of_TMR5_Initialize:
 32013                           	opt callstack 0
 32014                           
 32015 ;; *************** function _TMR5_SetInterruptHandler *****************
 32016 ;; Defined at:
 32017 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 32018 ;; Parameters:    Size  Location     Type
 32019 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32020 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 32021 ;; Auto vars:     Size  Location     Type
 32022 ;;		None
 32023 ;; Return value:  Size  Location     Type
 32024 ;;                  1  [STACK] void 
 32025 ;; Registers used:
 32026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32027 ;; Tracked objects:
 32028 ;;		On entry : 3F/39
 32029 ;;		On exit  : 0/0
 32030 ;;		Unchanged: 0/0
 32031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32036 ;;Total ram usage:        0 bytes
 32037 ;; Hardware stack levels used:    1
 32038 ;; Hardware stack levels required when called:   15
 32039 ;; This function calls:
 32040 ;;		Nothing
 32041 ;; This function is called by:
 32042 ;;		_TMR5_Initialize
 32043 ;; This function uses a reentrant model
 32044 ;;
 32045                           
 32046                           	psect	text126
 32047  01C64E                     __ptext126:
 32048                           	opt callstack 0
 32049  01C64E                     _TMR5_SetInterruptHandler:
 32050                           	opt callstack 13
 32051                           
 32052                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 32053                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32054                           
 32055                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32056                           ;incstack = 0
 32057  01C64E  50E1               	movf	fsr1l,w,c
 32058  01C650  0FFD               	addlw	-3
 32059  01C652  6ED9               	movwf	fsr2l,c
 32060  01C654  50E2               	movf	fsr1h,w,c
 32061  01C656  6EDA               	movwf	fsr2h,c
 32062  01C658  0EFF               	movlw	255
 32063  01C65A  22DA               	addwfc	fsr2h,f,c
 32064  01C65C  006F FF78  F07F    	movff	postinc2,_TMR5_InterruptHandler
 32065  01C662  006F FF78  F080    	movff	postinc2,_TMR5_InterruptHandler+1
 32066  01C668  006F FF74  F081    	movff	postdec2,_TMR5_InterruptHandler+2
 32067                           
 32068                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32069  01C66E  52E5               	movf	postdec1,f,c
 32070  01C670  52E5               	movf	postdec1,f,c
 32071  01C672  52E5               	movf	postdec1,f,c
 32072  01C674  0012               	return		;funcret
 32073  01C676                     __end_of_TMR5_SetInterruptHandler:
 32074                           	opt callstack 0
 32075                           
 32076 ;; *************** function _TMR3_Initialize *****************
 32077 ;; Defined at:
 32078 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 32079 ;; Parameters:    Size  Location     Type
 32080 ;;		None
 32081 ;; Auto vars:     Size  Location     Type
 32082 ;;		None
 32083 ;; Return value:  Size  Location     Type
 32084 ;;                  1  [STACK] void 
 32085 ;; Registers used:
 32086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 32087 ;; Tracked objects:
 32088 ;;		On entry : 0/39
 32089 ;;		On exit  : 0/0
 32090 ;;		Unchanged: 0/0
 32091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32096 ;;Total ram usage:        0 bytes
 32097 ;; Hardware stack levels used:    1
 32098 ;; Hardware stack levels required when called:   16
 32099 ;; This function calls:
 32100 ;;		_TMR3_SetInterruptHandler
 32101 ;; This function is called by:
 32102 ;;		_SYSTEM_Initialize
 32103 ;; This function uses a reentrant model
 32104 ;;
 32105                           
 32106                           	psect	text127
 32107  01BF02                     __ptext127:
 32108                           	opt callstack 0
 32109  01BF02                     _TMR3_Initialize:
 32110                           	opt callstack 13
 32111                           
 32112                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 32113                           
 32114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32115                           ;incstack = 0
 32116  01BF02  6AA7               	clrf	167,c	;volatile
 32117                           
 32118                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 32119  01BF04  6AA8               	clrf	168,c	;volatile
 32120                           
 32121                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 32122  01BF06  0E01               	movlw	1
 32123  01BF08  6EA9               	movwf	169,c	;volatile
 32124                           
 32125                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 32126  01BF0A  0E3C               	movlw	60
 32127  01BF0C  6EA5               	movwf	165,c	;volatile
 32128                           
 32129                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 32130  01BF0E  0EB0               	movlw	176
 32131  01BF10  6EA4               	movwf	164,c	;volatile
 32132                           
 32133                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 32134  01BF12  50A4               	movf	164,w,c	;volatile
 32135  01BF14  006F FE94  F001    	movff	16293,btemp	;volatile
 32136  01BF1A  6A02               	clrf	(btemp+1)^0,c
 32137  01BF1C  0060  F004  F002   	movff	btemp,btemp+1
 32138  01BF22  6A01               	clrf	btemp^0,c
 32139  01BF24  1001               	iorwf	btemp^0,w,c
 32140  01BF26  0100               	movlb	0	; () banked
 32141  01BF28  6F9E               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 32142  01BF2A  5002               	movf	(btemp+1)^0,w,c
 32143  01BF2C  6F9F               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 32144                           
 32145                           ; BSR set to: 0
 32146                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 32147  01BF2E  0139               	movlb	57	; () banked
 32148  01BF30  9DA6               	bcf	166,6,b	;volatile
 32149                           
 32150                           ; BSR set to: 57
 32151                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 32152  01BF32  8D96               	bsf	150,6,b	;volatile
 32153                           
 32154                           ; BSR set to: 57
 32155                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 32156  01BF34  0EA4               	movlw	low _TMR3_DefaultInterruptHandler
 32157  01BF36  6EE6               	movwf	postinc1,c
 32158  01BF38  0ECB               	movlw	high _TMR3_DefaultInterruptHandler
 32159  01BF3A  6EE6               	movwf	postinc1,c
 32160  01BF3C  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 32161  01BF3E  6EE6               	movwf	postinc1,c
 32162  01BF40  EC3B  F0E3         	call	_TMR3_SetInterruptHandler	;wreg free
 32163                           
 32164                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 32165  01BF44  0E31               	movlw	49
 32166  01BF46  6EA6               	movwf	166,c	;volatile
 32167                           
 32168                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32169  01BF48  0012               	return		;funcret
 32170  01BF4A                     __end_of_TMR3_Initialize:
 32171                           	opt callstack 0
 32172                           
 32173 ;; *************** function _TMR3_SetInterruptHandler *****************
 32174 ;; Defined at:
 32175 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 32176 ;; Parameters:    Size  Location     Type
 32177 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32178 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 32179 ;; Auto vars:     Size  Location     Type
 32180 ;;		None
 32181 ;; Return value:  Size  Location     Type
 32182 ;;                  1  [STACK] void 
 32183 ;; Registers used:
 32184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32185 ;; Tracked objects:
 32186 ;;		On entry : 0/0
 32187 ;;		On exit  : 0/0
 32188 ;;		Unchanged: 0/0
 32189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32194 ;;Total ram usage:        0 bytes
 32195 ;; Hardware stack levels used:    1
 32196 ;; Hardware stack levels required when called:   15
 32197 ;; This function calls:
 32198 ;;		Nothing
 32199 ;; This function is called by:
 32200 ;;		_TMR3_Initialize
 32201 ;;		_init_bsoc
 32202 ;; This function uses a reentrant model
 32203 ;;
 32204                           
 32205                           	psect	text128
 32206  01C676                     __ptext128:
 32207                           	opt callstack 0
 32208  01C676                     _TMR3_SetInterruptHandler:
 32209                           	opt callstack 14
 32210                           
 32211                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 32212                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32213                           
 32214                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32215                           ;incstack = 0
 32216  01C676  50E1               	movf	fsr1l,w,c
 32217  01C678  0FFD               	addlw	-3
 32218  01C67A  6ED9               	movwf	fsr2l,c
 32219  01C67C  50E2               	movf	fsr1h,w,c
 32220  01C67E  6EDA               	movwf	fsr2h,c
 32221  01C680  0EFF               	movlw	255
 32222  01C682  22DA               	addwfc	fsr2h,f,c
 32223  01C684  006F FF78  F07C    	movff	postinc2,_TMR3_InterruptHandler
 32224  01C68A  006F FF78  F07D    	movff	postinc2,_TMR3_InterruptHandler+1
 32225  01C690  006F FF74  F07E    	movff	postdec2,_TMR3_InterruptHandler+2
 32226                           
 32227                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32228  01C696  52E5               	movf	postdec1,f,c
 32229  01C698  52E5               	movf	postdec1,f,c
 32230  01C69A  52E5               	movf	postdec1,f,c
 32231  01C69C  0012               	return		;funcret
 32232  01C69E                     __end_of_TMR3_SetInterruptHandler:
 32233                           	opt callstack 0
 32234                           
 32235 ;; *************** function _TMR2_Initialize *****************
 32236 ;; Defined at:
 32237 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 32238 ;; Parameters:    Size  Location     Type
 32239 ;;		None
 32240 ;; Auto vars:     Size  Location     Type
 32241 ;;		None
 32242 ;; Return value:  Size  Location     Type
 32243 ;;                  1  [STACK] void 
 32244 ;; Registers used:
 32245 ;;		wreg, status,2
 32246 ;; Tracked objects:
 32247 ;;		On entry : 3F/3F
 32248 ;;		On exit  : 3F/39
 32249 ;;		Unchanged: 0/0
 32250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32255 ;;Total ram usage:        0 bytes
 32256 ;; Hardware stack levels used:    1
 32257 ;; Hardware stack levels required when called:   15
 32258 ;; This function calls:
 32259 ;;		Nothing
 32260 ;; This function is called by:
 32261 ;;		_SYSTEM_Initialize
 32262 ;; This function uses a reentrant model
 32263 ;;
 32264                           
 32265                           	psect	text129
 32266  01CA1A                     __ptext129:
 32267                           	opt callstack 0
 32268  01CA1A                     _TMR2_Initialize:
 32269                           	opt callstack 14
 32270                           
 32271                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 32272                           
 32273                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32274                           ;incstack = 0
 32275  01CA1A  0E01               	movlw	1
 32276  01CA1C  6EAE               	movwf	174,c	;volatile
 32277                           
 32278                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 32279  01CA1E  6AAD               	clrf	173,c	;volatile
 32280                           
 32281                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 32282  01CA20  6AAF               	clrf	175,c	;volatile
 32283                           
 32284                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 32285  01CA22  0E63               	movlw	99
 32286  01CA24  6EAB               	movwf	171,c	;volatile
 32287                           
 32288                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 32289  01CA26  6AAA               	clrf	170,c	;volatile
 32290                           
 32291                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 32292  01CA28  0139               	movlb	57	; () banked
 32293  01CA2A  95A4               	bcf	164,2,b	;volatile
 32294                           
 32295                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 32296  01CA2C  0EC0               	movlw	192
 32297  01CA2E  6EAC               	movwf	172,c	;volatile
 32298                           
 32299                           ; BSR set to: 57
 32300                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32301  01CA30  0012               	return		;funcret
 32302  01CA32                     __end_of_TMR2_Initialize:
 32303                           	opt callstack 0
 32304                           
 32305 ;; *************** function _SPI1_Initialize *****************
 32306 ;; Defined at:
 32307 ;;		line 64 in file "mcc_generated_files/spi1.c"
 32308 ;; Parameters:    Size  Location     Type
 32309 ;;		None
 32310 ;; Auto vars:     Size  Location     Type
 32311 ;;		None
 32312 ;; Return value:  Size  Location     Type
 32313 ;;                  1  [STACK] void 
 32314 ;; Registers used:
 32315 ;;		wreg, status,2
 32316 ;; Tracked objects:
 32317 ;;		On entry : 3F/39
 32318 ;;		On exit  : 3F/3D
 32319 ;;		Unchanged: 0/0
 32320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32325 ;;Total ram usage:        0 bytes
 32326 ;; Hardware stack levels used:    1
 32327 ;; Hardware stack levels required when called:   15
 32328 ;; This function calls:
 32329 ;;		Nothing
 32330 ;; This function is called by:
 32331 ;;		_SYSTEM_Initialize
 32332 ;; This function uses a reentrant model
 32333 ;;
 32334                           
 32335                           	psect	text130
 32336  01CA32                     __ptext130:
 32337                           	opt callstack 0
 32338  01CA32                     _SPI1_Initialize:
 32339                           	opt callstack 14
 32340                           
 32341                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 32342                           
 32343                           ; BSR set to: 57
 32344                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32345                           ;incstack = 0
 32346  01CA32  0E40               	movlw	64
 32347  01CA34  013D               	movlb	61	; () banked
 32348  01CA36  6F15               	movwf	21,b	;volatile
 32349                           
 32350                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 32351  01CA38  0E03               	movlw	3
 32352  01CA3A  6F16               	movwf	22,b	;volatile
 32353                           
 32354                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 32355  01CA3C  0E4F               	movlw	79
 32356  01CA3E  6F19               	movwf	25,b	;volatile
 32357                           
 32358                           ; BSR set to: 61
 32359                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 32360  01CA40  6B1C               	clrf	28,b	;volatile
 32361                           
 32362                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 32363  01CA42  0E83               	movlw	131
 32364  01CA44  6F14               	movwf	20,b	;volatile
 32365                           
 32366                           ; BSR set to: 61
 32367                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32368  01CA46  0012               	return		;funcret
 32369  01CA48                     __end_of_SPI1_Initialize:
 32370                           	opt callstack 0
 32371                           
 32372 ;; *************** function _PWM8_Initialize *****************
 32373 ;; Defined at:
 32374 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 32375 ;; Parameters:    Size  Location     Type
 32376 ;;		None
 32377 ;; Auto vars:     Size  Location     Type
 32378 ;;		None
 32379 ;; Return value:  Size  Location     Type
 32380 ;;                  1  [STACK] void 
 32381 ;; Registers used:
 32382 ;;		wreg, status,2
 32383 ;; Tracked objects:
 32384 ;;		On entry : 0/3E
 32385 ;;		On exit  : 3F/3F
 32386 ;;		Unchanged: 0/0
 32387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32392 ;;Total ram usage:        0 bytes
 32393 ;; Hardware stack levels used:    1
 32394 ;; Hardware stack levels required when called:   15
 32395 ;; This function calls:
 32396 ;;		Nothing
 32397 ;; This function is called by:
 32398 ;;		_SYSTEM_Initialize
 32399 ;; This function uses a reentrant model
 32400 ;;
 32401                           
 32402                           	psect	text131
 32403  01CA48                     __ptext131:
 32404                           	opt callstack 0
 32405  01CA48                     _PWM8_Initialize:
 32406                           	opt callstack 14
 32407                           
 32408                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 32409                           
 32410                           ; BSR set to: 61
 32411                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32412                           ;incstack = 0
 32413  01CA48  0E80               	movlw	128
 32414  01CA4A  6E62               	movwf	98,c	;volatile
 32415                           
 32416                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 32417  01CA4C  6A61               	clrf	97,c	;volatile
 32418                           
 32419                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 32420  01CA4E  0E40               	movlw	64
 32421  01CA50  6E60               	movwf	96,c	;volatile
 32422                           
 32423                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 32424  01CA52  013F               	movlb	63	; () banked
 32425  01CA54  515F               	movf	95,w,b	;volatile
 32426  01CA56  0B3F               	andlw	-193
 32427  01CA58  0940               	iorlw	64
 32428  01CA5A  6F5F               	movwf	95,b	;volatile
 32429                           
 32430                           ; BSR set to: 63
 32431                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32432  01CA5C  0012               	return		;funcret
 32433  01CA5E                     __end_of_PWM8_Initialize:
 32434                           	opt callstack 0
 32435                           
 32436 ;; *************** function _PMD_Initialize *****************
 32437 ;; Defined at:
 32438 ;;		line 90 in file "mcc_generated_files/mcc.c"
 32439 ;; Parameters:    Size  Location     Type
 32440 ;;		None
 32441 ;; Auto vars:     Size  Location     Type
 32442 ;;		None
 32443 ;; Return value:  Size  Location     Type
 32444 ;;                  1  [STACK] void 
 32445 ;; Registers used:
 32446 ;;		None
 32447 ;; Tracked objects:
 32448 ;;		On entry : 3F/39
 32449 ;;		On exit  : 3F/39
 32450 ;;		Unchanged: 0/0
 32451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32456 ;;Total ram usage:        0 bytes
 32457 ;; Hardware stack levels used:    1
 32458 ;; Hardware stack levels required when called:   15
 32459 ;; This function calls:
 32460 ;;		Nothing
 32461 ;; This function is called by:
 32462 ;;		_SYSTEM_Initialize
 32463 ;; This function uses a reentrant model
 32464 ;;
 32465                           
 32466                           	psect	text132
 32467  01CA74                     __ptext132:
 32468                           	opt callstack 0
 32469  01CA74                     _PMD_Initialize:
 32470                           	opt callstack 14
 32471                           
 32472                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 32473                           
 32474                           ; BSR set to: 63
 32475                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32476                           ;incstack = 0
 32477  01CA74  0139               	movlb	57	; () banked
 32478  01CA76  6BC0               	clrf	192,b	;volatile
 32479                           
 32480                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 32481  01CA78  6BC1               	clrf	193,b	;volatile
 32482                           
 32483                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 32484  01CA7A  6BC2               	clrf	194,b	;volatile
 32485                           
 32486                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 32487  01CA7C  6BC3               	clrf	195,b	;volatile
 32488                           
 32489                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 32490  01CA7E  6BC4               	clrf	196,b	;volatile
 32491                           
 32492                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 32493  01CA80  6BC5               	clrf	197,b	;volatile
 32494                           
 32495                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 32496  01CA82  6BC6               	clrf	198,b	;volatile
 32497                           
 32498                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 32499  01CA84  6BC7               	clrf	199,b	;volatile
 32500                           
 32501                           ; BSR set to: 57
 32502                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32503  01CA86  0012               	return		;funcret
 32504  01CA88                     __end_of_PMD_Initialize:
 32505                           	opt callstack 0
 32506                           
 32507 ;; *************** function _PIN_MANAGER_Initialize *****************
 32508 ;; Defined at:
 32509 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 32510 ;; Parameters:    Size  Location     Type
 32511 ;;		None
 32512 ;; Auto vars:     Size  Location     Type
 32513 ;;		None
 32514 ;; Return value:  Size  Location     Type
 32515 ;;                  1  [STACK] void 
 32516 ;; Registers used:
 32517 ;;		wreg, status,2
 32518 ;; Tracked objects:
 32519 ;;		On entry : 3F/39
 32520 ;;		On exit  : 3F/3A
 32521 ;;		Unchanged: 0/0
 32522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32527 ;;Total ram usage:        0 bytes
 32528 ;; Hardware stack levels used:    1
 32529 ;; Hardware stack levels required when called:   15
 32530 ;; This function calls:
 32531 ;;		Nothing
 32532 ;; This function is called by:
 32533 ;;		_SYSTEM_Initialize
 32534 ;; This function uses a reentrant model
 32535 ;;
 32536                           
 32537                           	psect	text133
 32538  01B37E                     __ptext133:
 32539                           	opt callstack 0
 32540  01B37E                     _PIN_MANAGER_Initialize:
 32541                           	opt callstack 14
 32542                           
 32543                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 32544                           
 32545                           ; BSR set to: 57
 32546                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32547                           ;incstack = 0
 32548  01B37E  0E07               	movlw	7
 32549  01B380  6EBE               	movwf	190,c	;volatile
 32550                           
 32551                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 32552  01B382  6ABD               	clrf	189,c	;volatile
 32553                           
 32554                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 32555  01B384  6ABA               	clrf	186,c	;volatile
 32556                           
 32557                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 32558  01B386  0E23               	movlw	35
 32559  01B388  6EBF               	movwf	191,c	;volatile
 32560                           
 32561                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 32562  01B38A  6ABB               	clrf	187,c	;volatile
 32563                           
 32564                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 32565  01B38C  0E07               	movlw	7
 32566  01B38E  6EBC               	movwf	188,c	;volatile
 32567                           
 32568                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 32569  01B390  6AC6               	clrf	198,c	;volatile
 32570                           
 32571                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 32572  01B392  0E0C               	movlw	12
 32573  01B394  6EC7               	movwf	199,c	;volatile
 32574                           
 32575                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 32576  01B396  68C2               	setf	194,c	;volatile
 32577                           
 32578                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 32579  01B398  0EBF               	movlw	191
 32580  01B39A  6EC3               	movwf	195,c	;volatile
 32581                           
 32582                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 32583  01B39C  0E90               	movlw	144
 32584  01B39E  6EC4               	movwf	196,c	;volatile
 32585                           
 32586                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 32587  01B3A0  0E0C               	movlw	12
 32588  01B3A2  6EC5               	movwf	197,c	;volatile
 32589                           
 32590                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 32591  01B3A4  013A               	movlb	58	; () banked
 32592  01B3A6  6B70               	clrf	112,b	;volatile
 32593                           
 32594                           ; BSR set to: 58
 32595                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 32596  01B3A8  6B60               	clrf	96,b	;volatile
 32597                           
 32598                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 32599  01B3AA  0E3C               	movlw	60
 32600  01B3AC  6F50               	movwf	80,b	;volatile
 32601                           
 32602                           ; BSR set to: 58
 32603                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 32604  01B3AE  6B80               	clrf	128,b	;volatile
 32605                           
 32606                           ; BSR set to: 58
 32607                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 32608  01B3B0  6B90               	clrf	144,b	;volatile
 32609                           
 32610                           ; BSR set to: 58
 32611                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 32612  01B3B2  6940               	setf	64,b	;volatile
 32613                           
 32614                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 32615  01B3B4  0E0C               	movlw	12
 32616  01B3B6  6F71               	movwf	113,b	;volatile
 32617                           
 32618                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 32619  01B3B8  0E0C               	movlw	12
 32620  01B3BA  6F91               	movwf	145,b	;volatile
 32621                           
 32622                           ; BSR set to: 58
 32623                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 32624  01B3BC  6B81               	clrf	129,b	;volatile
 32625                           
 32626                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 32627  01B3BE  0E83               	movlw	131
 32628  01B3C0  6F51               	movwf	81,b	;volatile
 32629                           
 32630                           ; BSR set to: 58
 32631                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 32632  01B3C2  6B41               	clrf	65,b	;volatile
 32633                           
 32634                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 32635  01B3C4  0E97               	movlw	151
 32636  01B3C6  6F61               	movwf	97,b	;volatile
 32637                           
 32638                           ; BSR set to: 58
 32639                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 32640  01B3C8  6B82               	clrf	130,b	;volatile
 32641                           
 32642                           ; BSR set to: 58
 32643                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 32644  01B3CA  6B92               	clrf	146,b	;volatile
 32645                           
 32646                           ; BSR set to: 58
 32647                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 32648  01B3CC  6B42               	clrf	66,b	;volatile
 32649                           
 32650                           ; BSR set to: 58
 32651                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 32652  01B3CE  6B52               	clrf	82,b	;volatile
 32653                           
 32654                           ; BSR set to: 58
 32655                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 32656  01B3D0  6B62               	clrf	98,b	;volatile
 32657                           
 32658                           ; BSR set to: 58
 32659                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 32660  01B3D2  6B72               	clrf	114,b	;volatile
 32661                           
 32662                           ; BSR set to: 58
 32663                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 32664  01B3D4  6943               	setf	67,b	;volatile
 32665                           
 32666                           ; BSR set to: 58
 32667                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 32668  01B3D6  6953               	setf	83,b	;volatile
 32669                           
 32670                           ; BSR set to: 58
 32671                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 32672  01B3D8  6963               	setf	99,b	;volatile
 32673                           
 32674                           ; BSR set to: 58
 32675                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 32676  01B3DA  6973               	setf	115,b	;volatile
 32677                           
 32678                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 32679  01B3DC  0E07               	movlw	7
 32680  01B3DE  6F83               	movwf	131,b	;volatile
 32681                           
 32682                           ; BSR set to: 58
 32683                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 32684  01B3E0  6993               	setf	147,b	;volatile
 32685                           
 32686                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 32687  01B3E2  0E0F               	movlw	15
 32688  01B3E4  6FE8               	movwf	232,b	;volatile
 32689                           
 32690                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 32691  01B3E6  0E13               	movlw	19
 32692  01B3E8  6FDE               	movwf	222,b	;volatile
 32693                           
 32694                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 32695  01B3EA  0E16               	movlw	22
 32696  01B3EC  6F0E               	movwf	14,b	;volatile
 32697                           
 32698                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 32699  01B3EE  0E1E               	movlw	30
 32700  01B3F0  6F13               	movwf	19,b	;volatile
 32701                           
 32702                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 32703  01B3F2  0E08               	movlw	8
 32704  01B3F4  6FC0               	movwf	192,b	;volatile
 32705                           
 32706                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 32707  01B3F6  0E10               	movlw	16
 32708  01B3F8  6F19               	movwf	25,b	;volatile
 32709                           
 32710                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 32711  01B3FA  0E09               	movlw	9
 32712  01B3FC  6FC1               	movwf	193,b	;volatile
 32713                           
 32714                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 32715  01B3FE  0E1F               	movlw	31
 32716  01B400  6F15               	movwf	21,b	;volatile
 32717                           
 32718                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 32719  01B402  0E13               	movlw	19
 32720  01B404  6F16               	movwf	22,b	;volatile
 32721                           
 32722                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 32723  01B406  0E17               	movlw	23
 32724  01B408  6FE5               	movwf	229,b	;volatile
 32725                           
 32726                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 32727  01B40A  0E14               	movlw	20
 32728  01B40C  6FDF               	movwf	223,b	;volatile
 32729                           
 32730                           ; BSR set to: 58
 32731                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 32732  01B40E  0012               	return		;funcret
 32733  01B410                     __end_of_PIN_MANAGER_Initialize:
 32734                           	opt callstack 0
 32735                           
 32736 ;; *************** function _OSCILLATOR_Initialize *****************
 32737 ;; Defined at:
 32738 ;;		line 72 in file "mcc_generated_files/mcc.c"
 32739 ;; Parameters:    Size  Location     Type
 32740 ;;		None
 32741 ;; Auto vars:     Size  Location     Type
 32742 ;;		None
 32743 ;; Return value:  Size  Location     Type
 32744 ;;                  1  [STACK] void 
 32745 ;; Registers used:
 32746 ;;		wreg, status,2
 32747 ;; Tracked objects:
 32748 ;;		On entry : 3F/3A
 32749 ;;		On exit  : 3F/39
 32750 ;;		Unchanged: 0/0
 32751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32756 ;;Total ram usage:        0 bytes
 32757 ;; Hardware stack levels used:    1
 32758 ;; Hardware stack levels required when called:   15
 32759 ;; This function calls:
 32760 ;;		Nothing
 32761 ;; This function is called by:
 32762 ;;		_SYSTEM_Initialize
 32763 ;; This function uses a reentrant model
 32764 ;;
 32765                           
 32766                           	psect	text134
 32767  01CA5E                     __ptext134:
 32768                           	opt callstack 0
 32769  01CA5E                     _OSCILLATOR_Initialize:
 32770                           	opt callstack 14
 32771                           
 32772                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 32773                           
 32774                           ; BSR set to: 58
 32775                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32776                           ;incstack = 0
 32777  01CA5E  0E20               	movlw	32
 32778  01CA60  0139               	movlb	57	; () banked
 32779  01CA62  6FD9               	movwf	217,b	;volatile
 32780                           
 32781                           ; BSR set to: 57
 32782                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 32783  01CA64  6BDB               	clrf	219,b	;volatile
 32784                           
 32785                           ; BSR set to: 57
 32786                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 32787  01CA66  6BDD               	clrf	221,b	;volatile
 32788                           
 32789                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 32790  01CA68  0E02               	movlw	2
 32791  01CA6A  6FDF               	movwf	223,b	;volatile
 32792                           
 32793                           ; BSR set to: 57
 32794                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 32795  01CA6C  6BDE               	clrf	222,b	;volatile
 32796  01CA6E                     l169:
 32797                           
 32798                           ; BSR set to: 57
 32799                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 32800  01CA6E  B1DC               	btfsc	220,0,b	;volatile
 32801  01CA70  0012               	return	
 32802  01CA72  D7FD               	goto	l169
 32803  01CA74                     __end_of_OSCILLATOR_Initialize:
 32804                           	opt callstack 0
 32805                           
 32806 ;; *************** function _INTERRUPT_Initialize *****************
 32807 ;; Defined at:
 32808 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 32809 ;; Parameters:    Size  Location     Type
 32810 ;;		None
 32811 ;; Auto vars:     Size  Location     Type
 32812 ;;  state           1  [STACK] _Bool 
 32813 ;; Return value:  Size  Location     Type
 32814 ;;                  1  [STACK] void 
 32815 ;; Registers used:
 32816 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 32817 ;; Tracked objects:
 32818 ;;		On entry : 0/0
 32819 ;;		On exit  : 3F/39
 32820 ;;		Unchanged: 0/0
 32821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32826 ;;Total ram usage:        0 bytes
 32827 ;; Hardware stack levels used:    1
 32828 ;; Hardware stack levels required when called:   15
 32829 ;; This function calls:
 32830 ;;		Nothing
 32831 ;; This function is called by:
 32832 ;;		_SYSTEM_Initialize
 32833 ;; This function uses a reentrant model
 32834 ;;
 32835                           
 32836                           	psect	text135
 32837  01B9A8                     __ptext135:
 32838                           	opt callstack 0
 32839  01B9A8                     _INTERRUPT_Initialize:
 32840                           	opt callstack 0
 32841                           
 32842                           ; BSR set to: 57
 32843                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32844  01B9A8  52E6               	movf	postinc1,f,c
 32845                           
 32846                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 32847                           
 32848                           ;incstack = 0
 32849  01B9AA  8AD2               	bsf	210,5,c	;volatile
 32850                           
 32851                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 32852  01B9AC  AED2               	btfss	16338,7,c	;volatile
 32853  01B9AE  D003               	goto	u9690
 32854  01B9B0  6A0C               	clrf	(btemp+11)^0,c
 32855  01B9B2  2A0C               	incf	(btemp+11)^0,f,c
 32856  01B9B4  D001               	goto	u9708
 32857  01B9B6                     u9690:
 32858  01B9B6  6A0C               	clrf	(btemp+11)^0,c
 32859  01B9B8                     u9708:
 32860                           
 32861                           ;stkvar	_state @ sp[(-1)+0]
 32862  01B9B8  0EFF               	movlw	-1
 32863  01B9BA  0060  F033  FFE3   	movff	btemp+11,plusw1
 32864                           
 32865                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 32866  01B9C0  9ED2               	bcf	16338,7,c	;volatile
 32867                           
 32868                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 32869  01B9C2  0E55               	movlw	85
 32870  01B9C4  6ED4               	movwf	212,c	;volatile
 32871                           
 32872                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 32873  01B9C6  0EAA               	movlw	170
 32874  01B9C8  6ED4               	movwf	212,c	;volatile
 32875                           
 32876                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 32877  01B9CA  90D4               	bcf	212,0,c	;volatile
 32878                           
 32879                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 32880  01B9CC  0138               	movlb	56	; () banked
 32881  01B9CE  6B9F               	clrf	159,b	;volatile
 32882                           
 32883                           ; BSR set to: 56
 32884                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 32885  01B9D0  6B9E               	clrf	158,b	;volatile
 32886                           
 32887                           ; BSR set to: 56
 32888                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 32889  01B9D2  0E08               	movlw	8
 32890  01B9D4  6F9D               	movwf	157,b	;volatile
 32891                           
 32892                           ; BSR set to: 56
 32893                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 32894  01B9D6  0E55               	movlw	85
 32895  01B9D8  6ED4               	movwf	212,c	;volatile
 32896                           
 32897                           ; BSR set to: 56
 32898                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 32899  01B9DA  0EAA               	movlw	170
 32900  01B9DC  6ED4               	movwf	212,c	;volatile
 32901                           
 32902                           ; BSR set to: 56
 32903                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 32904  01B9DE  80D4               	bsf	212,0,c	;volatile
 32905                           
 32906                           ; BSR set to: 56
 32907                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 32908                           ;stkvar	_state @ sp[(-1)+0]
 32909  01B9E0  0EFF               	movlw	-1
 32910  01B9E2  B0E3               	btfsc	plusw1,0,c
 32911  01B9E4  D002               	bra	u9715
 32912  01B9E6  9ED2               	bcf	16338,7,c	;volatile
 32913  01B9E8  D001               	bra	u9716
 32914  01B9EA                     u9715:
 32915  01B9EA  8ED2               	bsf	16338,7,c	;volatile
 32916  01B9EC                     u9716:
 32917                           
 32918                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 32919  01B9EC  0139               	movlb	57	; () banked
 32920  01B9EE  8782               	bsf	130,3,b	;volatile
 32921                           
 32922                           ; BSR set to: 57
 32923                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 32924  01B9F0  8382               	bsf	130,1,b	;volatile
 32925                           
 32926                           ; BSR set to: 57
 32927                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 32928  01B9F2  8182               	bsf	130,0,b	;volatile
 32929                           
 32930                           ; BSR set to: 57
 32931                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 32932  01B9F4  8582               	bsf	130,2,b	;volatile
 32933                           
 32934                           ; BSR set to: 57
 32935                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 32936  01B9F6  8786               	bsf	134,3,b	;volatile
 32937                           
 32938                           ; BSR set to: 57
 32939                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 32940  01B9F8  8586               	bsf	134,2,b	;volatile
 32941                           
 32942                           ; BSR set to: 57
 32943                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 32944  01B9FA  8783               	bsf	131,3,b	;volatile
 32945                           
 32946                           ; BSR set to: 57
 32947                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 32948  01B9FC  8181               	bsf	129,0,b	;volatile
 32949                           
 32950                           ; BSR set to: 57
 32951                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 32952  01B9FE  9185               	bcf	133,0,b	;volatile
 32953                           
 32954                           ; BSR set to: 57
 32955                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 32956  01BA00  8189               	bsf	137,0,b	;volatile
 32957                           
 32958                           ; BSR set to: 57
 32959                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 32960  01BA02  9D88               	bcf	136,6,b	;volatile
 32961                           
 32962                           ; BSR set to: 57
 32963                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 32964  01BA04  9D86               	bcf	134,6,b	;volatile
 32965                           
 32966                           ; BSR set to: 57
 32967                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 32968  01BA06  8581               	bsf	129,2,b	;volatile
 32969                           
 32970                           ; BSR set to: 57
 32971                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 32972  01BA08  8781               	bsf	129,3,b	;volatile
 32973                           
 32974                           ; BSR set to: 57
 32975                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 32976  01BA0A  52E5               	movf	postdec1,f,c
 32977  01BA0C  0012               	return		;funcret
 32978  01BA0E                     __end_of_INTERRUPT_Initialize:
 32979                           	opt callstack 0
 32980                           
 32981 ;; *************** function _FVR_Initialize *****************
 32982 ;; Defined at:
 32983 ;;		line 58 in file "mcc_generated_files/fvr.c"
 32984 ;; Parameters:    Size  Location     Type
 32985 ;;		None
 32986 ;; Auto vars:     Size  Location     Type
 32987 ;;		None
 32988 ;; Return value:  Size  Location     Type
 32989 ;;                  1  [STACK] void 
 32990 ;; Registers used:
 32991 ;;		wreg, status,2
 32992 ;; Tracked objects:
 32993 ;;		On entry : 3F/39
 32994 ;;		On exit  : 3F/3E
 32995 ;;		Unchanged: 0/0
 32996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33001 ;;Total ram usage:        0 bytes
 33002 ;; Hardware stack levels used:    1
 33003 ;; Hardware stack levels required when called:   15
 33004 ;; This function calls:
 33005 ;;		Nothing
 33006 ;; This function is called by:
 33007 ;;		_SYSTEM_Initialize
 33008 ;; This function uses a reentrant model
 33009 ;;
 33010                           
 33011                           	psect	text136
 33012  01CB7A                     __ptext136:
 33013                           	opt callstack 0
 33014  01CB7A                     _FVR_Initialize:
 33015                           	opt callstack 14
 33016                           
 33017                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 33018                           
 33019                           ; BSR set to: 57
 33020                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33021                           ;incstack = 0
 33022  01CB7A  0EAF               	movlw	175
 33023  01CB7C  013E               	movlb	62	; () banked
 33024  01CB7E  6FC1               	movwf	193,b	;volatile
 33025                           
 33026                           ; BSR set to: 62
 33027                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 33028  01CB80  0012               	return		;funcret
 33029  01CB82                     __end_of_FVR_Initialize:
 33030                           	opt callstack 0
 33031                           
 33032 ;; *************** function _EXT_INT_Initialize *****************
 33033 ;; Defined at:
 33034 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 33035 ;; Parameters:    Size  Location     Type
 33036 ;;		None
 33037 ;; Auto vars:     Size  Location     Type
 33038 ;;		None
 33039 ;; Return value:  Size  Location     Type
 33040 ;;                  1  [STACK] void 
 33041 ;; Registers used:
 33042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33043 ;; Tracked objects:
 33044 ;;		On entry : 3F/39
 33045 ;;		On exit  : 3F/39
 33046 ;;		Unchanged: 0/0
 33047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33052 ;;Total ram usage:        0 bytes
 33053 ;; Hardware stack levels used:    1
 33054 ;; Hardware stack levels required when called:   16
 33055 ;; This function calls:
 33056 ;;		_INT0_SetInterruptHandler
 33057 ;;		_INT1_SetInterruptHandler
 33058 ;; This function is called by:
 33059 ;;		_SYSTEM_Initialize
 33060 ;; This function uses a reentrant model
 33061 ;;
 33062                           
 33063                           	psect	text137
 33064  01C38C                     __ptext137:
 33065                           	opt callstack 0
 33066  01C38C                     _EXT_INT_Initialize:
 33067                           	opt callstack 13
 33068                           
 33069                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 33070                           
 33071                           ; BSR set to: 62
 33072                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33073                           ;incstack = 0
 33074  01C38C  0139               	movlb	57	; () banked
 33075  01C38E  91A1               	bcf	161,0,b	;volatile
 33076                           
 33077                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 33078  01C390  90D2               	bcf	210,0,c	;volatile
 33079                           
 33080                           ; BSR set to: 57
 33081                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 33082  01C392  0EA6               	movlw	low _INT0_DefaultInterruptHandler
 33083  01C394  6EE6               	movwf	postinc1,c
 33084  01C396  0ECB               	movlw	high _INT0_DefaultInterruptHandler
 33085  01C398  6EE6               	movwf	postinc1,c
 33086  01C39A  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 33087  01C39C  6EE6               	movwf	postinc1,c
 33088  01C39E  EC63  F0E3         	call	_INT0_SetInterruptHandler	;wreg free
 33089                           
 33090                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 33091  01C3A2  0139               	movlb	57	; () banked
 33092  01C3A4  8191               	bsf	145,0,b	;volatile
 33093                           
 33094                           ; BSR set to: 57
 33095                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 33096  01C3A6  91A5               	bcf	165,0,b	;volatile
 33097                           
 33098                           ; BSR set to: 57
 33099                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 33100  01C3A8  92D2               	bcf	210,1,c	;volatile
 33101                           
 33102                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 33103  01C3AA  0EA2               	movlw	low _INT1_DefaultInterruptHandler
 33104  01C3AC  6EE6               	movwf	postinc1,c
 33105  01C3AE  0ECB               	movlw	high _INT1_DefaultInterruptHandler
 33106  01C3B0  6EE6               	movwf	postinc1,c
 33107  01C3B2  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 33108  01C3B4  6EE6               	movwf	postinc1,c
 33109  01C3B6  EC4F  F0E3         	call	_INT1_SetInterruptHandler	;wreg free
 33110                           
 33111                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 33112  01C3BA  0139               	movlb	57	; () banked
 33113  01C3BC  8195               	bsf	149,0,b	;volatile
 33114                           
 33115                           ; BSR set to: 57
 33116                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 33117  01C3BE  0012               	return		;funcret
 33118  01C3C0                     __end_of_EXT_INT_Initialize:
 33119                           	opt callstack 0
 33120                           
 33121 ;; *************** function _INT1_SetInterruptHandler *****************
 33122 ;; Defined at:
 33123 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 33124 ;; Parameters:    Size  Location     Type
 33125 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33126 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 33127 ;; Auto vars:     Size  Location     Type
 33128 ;;		None
 33129 ;; Return value:  Size  Location     Type
 33130 ;;                  1  [STACK] void 
 33131 ;; Registers used:
 33132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33133 ;; Tracked objects:
 33134 ;;		On entry : 3F/39
 33135 ;;		On exit  : 0/0
 33136 ;;		Unchanged: 0/0
 33137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33142 ;;Total ram usage:        0 bytes
 33143 ;; Hardware stack levels used:    1
 33144 ;; Hardware stack levels required when called:   15
 33145 ;; This function calls:
 33146 ;;		Nothing
 33147 ;; This function is called by:
 33148 ;;		_EXT_INT_Initialize
 33149 ;;		_start_switch_handler
 33150 ;; This function uses a reentrant model
 33151 ;;
 33152                           
 33153                           	psect	text138
 33154  01C69E                     __ptext138:
 33155                           	opt callstack 0
 33156  01C69E                     _INT1_SetInterruptHandler:
 33157                           	opt callstack 14
 33158                           
 33159                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 33160                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33161                           
 33162                           ; BSR set to: 57
 33163                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33164                           ;incstack = 0
 33165  01C69E  50E1               	movf	fsr1l,w,c
 33166  01C6A0  0FFD               	addlw	-3
 33167  01C6A2  6ED9               	movwf	fsr2l,c
 33168  01C6A4  50E2               	movf	fsr1h,w,c
 33169  01C6A6  6EDA               	movwf	fsr2h,c
 33170  01C6A8  0EFF               	movlw	255
 33171  01C6AA  22DA               	addwfc	fsr2h,f,c
 33172  01C6AC  006F FF78  F094    	movff	postinc2,_INT1_InterruptHandler
 33173  01C6B2  006F FF78  F095    	movff	postinc2,_INT1_InterruptHandler+1
 33174  01C6B8  006F FF74  F096    	movff	postdec2,_INT1_InterruptHandler+2
 33175                           
 33176                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 33177  01C6BE  52E5               	movf	postdec1,f,c
 33178  01C6C0  52E5               	movf	postdec1,f,c
 33179  01C6C2  52E5               	movf	postdec1,f,c
 33180  01C6C4  0012               	return		;funcret
 33181  01C6C6                     __end_of_INT1_SetInterruptHandler:
 33182                           	opt callstack 0
 33183                           
 33184 ;; *************** function _INT0_SetInterruptHandler *****************
 33185 ;; Defined at:
 33186 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 33187 ;; Parameters:    Size  Location     Type
 33188 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33189 ;;		 -> INT0_DefaultInterruptHandler(1), 
 33190 ;; Auto vars:     Size  Location     Type
 33191 ;;		None
 33192 ;; Return value:  Size  Location     Type
 33193 ;;                  1  [STACK] void 
 33194 ;; Registers used:
 33195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33196 ;; Tracked objects:
 33197 ;;		On entry : 3F/39
 33198 ;;		On exit  : 0/0
 33199 ;;		Unchanged: 0/0
 33200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33205 ;;Total ram usage:        0 bytes
 33206 ;; Hardware stack levels used:    1
 33207 ;; Hardware stack levels required when called:   15
 33208 ;; This function calls:
 33209 ;;		Nothing
 33210 ;; This function is called by:
 33211 ;;		_EXT_INT_Initialize
 33212 ;; This function uses a reentrant model
 33213 ;;
 33214                           
 33215                           	psect	text139
 33216  01C6C6                     __ptext139:
 33217                           	opt callstack 0
 33218  01C6C6                     _INT0_SetInterruptHandler:
 33219                           	opt callstack 13
 33220                           
 33221                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 33222                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33223                           
 33224                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33225                           ;incstack = 0
 33226  01C6C6  50E1               	movf	fsr1l,w,c
 33227  01C6C8  0FFD               	addlw	-3
 33228  01C6CA  6ED9               	movwf	fsr2l,c
 33229  01C6CC  50E2               	movf	fsr1h,w,c
 33230  01C6CE  6EDA               	movwf	fsr2h,c
 33231  01C6D0  0EFF               	movlw	255
 33232  01C6D2  22DA               	addwfc	fsr2h,f,c
 33233  01C6D4  006F FF78  F097    	movff	postinc2,_INT0_InterruptHandler
 33234  01C6DA  006F FF78  F098    	movff	postinc2,_INT0_InterruptHandler+1
 33235  01C6E0  006F FF74  F099    	movff	postdec2,_INT0_InterruptHandler+2
 33236                           
 33237                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 33238  01C6E6  52E5               	movf	postdec1,f,c
 33239  01C6E8  52E5               	movf	postdec1,f,c
 33240  01C6EA  52E5               	movf	postdec1,f,c
 33241  01C6EC  0012               	return		;funcret
 33242  01C6EE                     __end_of_INT0_SetInterruptHandler:
 33243                           	opt callstack 0
 33244                           
 33245 ;; *************** function _DMA2_Initialize *****************
 33246 ;; Defined at:
 33247 ;;		line 61 in file "mcc_generated_files/dma2.c"
 33248 ;; Parameters:    Size  Location     Type
 33249 ;;		None
 33250 ;; Auto vars:     Size  Location     Type
 33251 ;;		None
 33252 ;; Return value:  Size  Location     Type
 33253 ;;                  1  [STACK] void 
 33254 ;; Registers used:
 33255 ;;		wreg, status,2
 33256 ;; Tracked objects:
 33257 ;;		On entry : 3F/3D
 33258 ;;		On exit  : 3F/3B
 33259 ;;		Unchanged: 0/0
 33260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33265 ;;Total ram usage:        0 bytes
 33266 ;; Hardware stack levels used:    1
 33267 ;; Hardware stack levels required when called:   15
 33268 ;; This function calls:
 33269 ;;		Nothing
 33270 ;; This function is called by:
 33271 ;;		_SYSTEM_Initialize
 33272 ;; This function uses a reentrant model
 33273 ;;
 33274                           
 33275                           	psect	text140
 33276  01BC4A                     __ptext140:
 33277                           	opt callstack 0
 33278  01BC4A                     _DMA2_Initialize:
 33279                           	opt callstack 14
 33280                           
 33281                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 33282                           
 33283                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33284                           ;incstack = 0
 33285  01BC4A  0E00               	movlw	0
 33286  01BC4C  013B               	movlb	59	; () banked
 33287  01BC4E  6FD9               	movwf	217,b	;volatile
 33288  01BC50  0E10               	movlw	16
 33289  01BC52  6FDA               	movwf	218,b	;volatile
 33290  01BC54  0E00               	movlw	0
 33291  01BC56  6FDB               	movwf	219,b	;volatile
 33292                           
 33293                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 33294  01BC58  0E3F               	movlw	63
 33295  01BC5A  6FD1               	movwf	209,b	;volatile
 33296  01BC5C  0EBB               	movlw	187
 33297  01BC5E  6FD0               	movwf	208,b	;volatile
 33298                           
 33299                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 33300  01BC60  0E03               	movlw	3
 33301  01BC62  6FDD               	movwf	221,b	;volatile
 33302                           
 33303                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 33304  01BC64  0E00               	movlw	0
 33305  01BC66  6FD8               	movwf	216,b	;volatile
 33306  01BC68  0E01               	movlw	1
 33307  01BC6A  6FD7               	movwf	215,b	;volatile
 33308                           
 33309                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 33310  01BC6C  0E00               	movlw	0
 33311  01BC6E  6FCF               	movwf	207,b	;volatile
 33312  01BC70  0E01               	movlw	1
 33313  01BC72  6FCE               	movwf	206,b	;volatile
 33314                           
 33315                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 33316  01BC74  0E1C               	movlw	28
 33317  01BC76  6FDF               	movwf	223,b	;volatile
 33318                           
 33319                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 33320  01BC78  0E3D               	movlw	61
 33321  01BC7A  6FDE               	movwf	222,b	;volatile
 33322                           
 33323                           ; BSR set to: 59
 33324                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 33325  01BC7C  0139               	movlb	57	; () banked
 33326  01BC7E  97A5               	bcf	165,3,b	;volatile
 33327                           
 33328                           ; BSR set to: 57
 33329                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 33330  01BC80  95A5               	bcf	165,2,b	;volatile
 33331                           
 33332                           ; BSR set to: 57
 33333                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 33334  01BC82  9BA5               	bcf	165,5,b	;volatile
 33335                           
 33336                           ; BSR set to: 57
 33337                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 33338  01BC84  99A5               	bcf	165,4,b	;volatile
 33339                           
 33340                           ; BSR set to: 57
 33341                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 33342  01BC86  9795               	bcf	149,3,b	;volatile
 33343                           
 33344                           ; BSR set to: 57
 33345                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 33346  01BC88  9595               	bcf	149,2,b	;volatile
 33347                           
 33348                           ; BSR set to: 57
 33349                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 33350  01BC8A  9B95               	bcf	149,5,b	;volatile
 33351                           
 33352                           ; BSR set to: 57
 33353                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 33354  01BC8C  9995               	bcf	149,4,b	;volatile
 33355  01BC8E  9ED2               	bcf	16338,7,c	;# 
 33356  01BC90  0139               	banksel	14831	;# 
 33357  01BC92  0E55               	movlw	85	;# 
 33358  01BC94  6FEF               	movwf	14831,b	;# 
 33359  01BC96  0EAA               	movlw	170	;# 
 33360  01BC98  6FEF               	movwf	14831,b	;# 
 33361  01BC9A  81EF               	bsf	14831,0,b	;# 
 33362  01BC9C  8ED2               	bsf	16338,7,c	;# 
 33363                           
 33364                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 33365  01BC9E  013B               	movlb	59	; () banked
 33366  01BCA0  6BDC               	clrf	220,b	;volatile
 33367                           
 33368                           ; BSR set to: 59
 33369                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33370  01BCA2  0012               	return		;funcret
 33371  01BCA4                     __end_of_DMA2_Initialize:
 33372                           	opt callstack 0
 33373                           
 33374 ;; *************** function _DMA1_Initialize *****************
 33375 ;; Defined at:
 33376 ;;		line 86 in file "mcc_generated_files/dma1.c"
 33377 ;; Parameters:    Size  Location     Type
 33378 ;;		None
 33379 ;; Auto vars:     Size  Location     Type
 33380 ;;		None
 33381 ;; Return value:  Size  Location     Type
 33382 ;;                  1  [STACK] void 
 33383 ;; Registers used:
 33384 ;;		wreg, status,2
 33385 ;; Tracked objects:
 33386 ;;		On entry : 3F/3B
 33387 ;;		On exit  : 3F/3B
 33388 ;;		Unchanged: 0/0
 33389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33394 ;;Total ram usage:        0 bytes
 33395 ;; Hardware stack levels used:    1
 33396 ;; Hardware stack levels required when called:   15
 33397 ;; This function calls:
 33398 ;;		Nothing
 33399 ;; This function is called by:
 33400 ;;		_SYSTEM_Initialize
 33401 ;; This function uses a reentrant model
 33402 ;;
 33403                           
 33404                           	psect	text141
 33405  01B802                     __ptext141:
 33406                           	opt callstack 0
 33407  01B802                     _DMA1_Initialize:
 33408                           	opt callstack 14
 33409                           
 33410                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 33411                           
 33412                           ; BSR set to: 59
 33413                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33414                           ;incstack = 0
 33415  01B802  0E00               	movlw	0
 33416  01B804  013B               	movlb	59	; () banked
 33417  01B806  6FF9               	movwf	249,b	;volatile
 33418  01B808  0E10               	movlw	16
 33419  01B80A  6FFA               	movwf	250,b	;volatile
 33420  01B80C  0E00               	movlw	0
 33421  01B80E  6FFB               	movwf	251,b	;volatile
 33422                           
 33423                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 33424  01B810  0E3D               	movlw	61
 33425  01B812  6FF1               	movwf	241,b	;volatile
 33426  01B814  0E11               	movlw	17
 33427  01B816  6FF0               	movwf	240,b	;volatile
 33428                           
 33429                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 33430  01B818  0E03               	movlw	3
 33431  01B81A  6FFD               	movwf	253,b	;volatile
 33432                           
 33433                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 33434  01B81C  0E00               	movlw	0
 33435  01B81E  6FF8               	movwf	248,b	;volatile
 33436  01B820  0E01               	movlw	1
 33437  01B822  6FF7               	movwf	247,b	;volatile
 33438                           
 33439                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 33440  01B824  0E00               	movlw	0
 33441  01B826  6FEF               	movwf	239,b	;volatile
 33442  01B828  0E01               	movlw	1
 33443  01B82A  6FEE               	movwf	238,b	;volatile
 33444                           
 33445                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 33446  01B82C  0E15               	movlw	21
 33447  01B82E  6FFF               	movwf	255,b	;volatile
 33448                           
 33449                           ; BSR set to: 59
 33450                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 33451  01B830  6BFE               	clrf	254,b	;volatile
 33452                           
 33453                           ; BSR set to: 59
 33454                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 33455  01B832  0139               	movlb	57	; () banked
 33456  01B834  93A2               	bcf	162,1,b	;volatile
 33457                           
 33458                           ; BSR set to: 57
 33459                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 33460  01B836  91A2               	bcf	162,0,b	;volatile
 33461                           
 33462                           ; BSR set to: 57
 33463                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 33464  01B838  97A2               	bcf	162,3,b	;volatile
 33465                           
 33466                           ; BSR set to: 57
 33467                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 33468  01B83A  95A2               	bcf	162,2,b	;volatile
 33469                           
 33470                           ; BSR set to: 57
 33471                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 33472  01B83C  8392               	bsf	146,1,b	;volatile
 33473                           
 33474                           ; BSR set to: 57
 33475                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 33476  01B83E  8192               	bsf	146,0,b	;volatile
 33477                           
 33478                           ; BSR set to: 57
 33479                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 33480  01B840  8792               	bsf	146,3,b	;volatile
 33481                           
 33482                           ; BSR set to: 57
 33483                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 33484  01B842  8592               	bsf	146,2,b	;volatile
 33485                           
 33486                           ; BSR set to: 57
 33487                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 33488  01B844  6BF1               	clrf	241,b	;volatile
 33489                           
 33490                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 33491  01B846  0E01               	movlw	1
 33492  01B848  6FF2               	movwf	242,b	;volatile
 33493                           
 33494                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 33495  01B84A  0E04               	movlw	4
 33496  01B84C  6FF3               	movwf	243,b	;volatile
 33497                           
 33498                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 33499  01B84E  0E02               	movlw	2
 33500  01B850  6FF4               	movwf	244,b	;volatile
 33501                           
 33502                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 33503  01B852  0E03               	movlw	3
 33504  01B854  6FF7               	movwf	247,b	;volatile
 33505  01B856  9ED2               	bcf	16338,7,c	;# 
 33506  01B858  0139               	banksel	14831	;# 
 33507  01B85A  0E55               	movlw	85	;# 
 33508  01B85C  6FEF               	movwf	14831,b	;# 
 33509  01B85E  0EAA               	movlw	170	;# 
 33510  01B860  6FEF               	movwf	14831,b	;# 
 33511  01B862  81EF               	bsf	14831,0,b	;# 
 33512  01B864  8ED2               	bsf	16338,7,c	;# 
 33513                           
 33514                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 33515  01B866  013B               	movlb	59	; () banked
 33516  01B868  6BFC               	clrf	252,b	;volatile
 33517                           
 33518                           ; BSR set to: 59
 33519                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33520  01B86A  0012               	return		;funcret
 33521  01B86C                     __end_of_DMA1_Initialize:
 33522                           	opt callstack 0
 33523                           
 33524 ;; *************** function _CLKREF_Initialize *****************
 33525 ;; Defined at:
 33526 ;;		line 58 in file "mcc_generated_files/clkref.c"
 33527 ;; Parameters:    Size  Location     Type
 33528 ;;		None
 33529 ;; Auto vars:     Size  Location     Type
 33530 ;;		None
 33531 ;; Return value:  Size  Location     Type
 33532 ;;                  1  [STACK] void 
 33533 ;; Registers used:
 33534 ;;		wreg, status,2
 33535 ;; Tracked objects:
 33536 ;;		On entry : 3F/3B
 33537 ;;		On exit  : 3F/3C
 33538 ;;		Unchanged: 0/0
 33539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33544 ;;Total ram usage:        0 bytes
 33545 ;; Hardware stack levels used:    1
 33546 ;; Hardware stack levels required when called:   15
 33547 ;; This function calls:
 33548 ;;		Nothing
 33549 ;; This function is called by:
 33550 ;;		_SYSTEM_Initialize
 33551 ;; This function uses a reentrant model
 33552 ;;
 33553                           
 33554                           	psect	text142
 33555  01CB22                     __ptext142:
 33556                           	opt callstack 0
 33557  01CB22                     _CLKREF_Initialize:
 33558                           	opt callstack 14
 33559                           
 33560                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 33561                           
 33562                           ; BSR set to: 59
 33563                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33564                           ;incstack = 0
 33565  01CB22  013C               	movlb	60	; () banked
 33566  01CB24  6BE6               	clrf	230,b	;volatile
 33567                           
 33568                           ; BSR set to: 60
 33569                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 33570  01CB26  0E94               	movlw	148
 33571  01CB28  6FE5               	movwf	229,b	;volatile
 33572                           
 33573                           ; BSR set to: 60
 33574                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33575  01CB2A  0012               	return		;funcret
 33576  01CB2C                     __end_of_CLKREF_Initialize:
 33577                           	opt callstack 0
 33578                           
 33579 ;; *************** function _ADCC_Initialize *****************
 33580 ;; Defined at:
 33581 ;;		line 65 in file "mcc_generated_files/adcc.c"
 33582 ;; Parameters:    Size  Location     Type
 33583 ;;		None
 33584 ;; Auto vars:     Size  Location     Type
 33585 ;;		None
 33586 ;; Return value:  Size  Location     Type
 33587 ;;                  1  [STACK] void 
 33588 ;; Registers used:
 33589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 33590 ;; Tracked objects:
 33591 ;;		On entry : 3F/3E
 33592 ;;		On exit  : 0/0
 33593 ;;		Unchanged: 0/0
 33594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33599 ;;Total ram usage:        0 bytes
 33600 ;; Hardware stack levels used:    1
 33601 ;; Hardware stack levels required when called:   16
 33602 ;; This function calls:
 33603 ;;		_ADCC_SetADIInterruptHandler
 33604 ;;		_ADCC_SetADTIInterruptHandler
 33605 ;; This function is called by:
 33606 ;;		_SYSTEM_Initialize
 33607 ;; This function uses a reentrant model
 33608 ;;
 33609                           
 33610                           	psect	text143
 33611  01B86C                     __ptext143:
 33612                           	opt callstack 0
 33613  01B86C                     _ADCC_Initialize:
 33614                           	opt callstack 13
 33615                           
 33616                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 33617                           
 33618                           ; BSR set to: 60
 33619                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33620                           ;incstack = 0
 33621  01B86C  013E               	movlb	62	; () banked
 33622  01B86E  6BDE               	clrf	222,b	;volatile
 33623                           
 33624                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 33625  01B870  6BDF               	clrf	223,b	;volatile
 33626                           
 33627                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 33628  01B872  6BE0               	clrf	224,b	;volatile
 33629                           
 33630                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 33631  01B874  6BE1               	clrf	225,b	;volatile
 33632                           
 33633                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 33634  01B876  6BE4               	clrf	228,b	;volatile
 33635                           
 33636                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 33637  01B878  6BE5               	clrf	229,b	;volatile
 33638                           
 33639                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 33640  01B87A  6BEA               	clrf	234,b	;volatile
 33641                           
 33642                           ; BSR set to: 62
 33643                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 33644  01B87C  0E40               	movlw	64
 33645  01B87E  6FEC               	movwf	236,b	;volatile
 33646                           
 33647                           ; BSR set to: 62
 33648                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 33649  01B880  6BF1               	clrf	241,b	;volatile
 33650                           
 33651                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 33652  01B882  0E20               	movlw	32
 33653  01B884  6FF3               	movwf	243,b	;volatile
 33654                           
 33655                           ; BSR set to: 62
 33656                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 33657  01B886  6BF4               	clrf	244,b	;volatile
 33658                           
 33659                           ; BSR set to: 62
 33660                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 33661  01B888  6BF5               	clrf	245,b	;volatile
 33662                           
 33663                           ; BSR set to: 62
 33664                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 33665  01B88A  6BF6               	clrf	246,b	;volatile
 33666                           
 33667                           ; BSR set to: 62
 33668                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 33669  01B88C  6BF7               	clrf	247,b	;volatile
 33670                           
 33671                           ; BSR set to: 62
 33672                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 33673  01B88E  6BF9               	clrf	249,b	;volatile
 33674                           
 33675                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 33676  01B890  0E5B               	movlw	91
 33677  01B892  6FFA               	movwf	250,b	;volatile
 33678                           
 33679                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 33680  01B894  0E27               	movlw	39
 33681  01B896  6FFB               	movwf	251,b	;volatile
 33682                           
 33683                           ; BSR set to: 62
 33684                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 33685  01B898  6BFC               	clrf	252,b	;volatile
 33686                           
 33687                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 33688  01B89A  0E02               	movlw	2
 33689  01B89C  6FFD               	movwf	253,b	;volatile
 33690                           
 33691                           ; BSR set to: 62
 33692                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 33693  01B89E  6BFE               	clrf	254,b	;volatile
 33694                           
 33695                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 33696  01B8A0  0E07               	movlw	7
 33697  01B8A2  6FFF               	movwf	255,b	;volatile
 33698                           
 33699                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 33700  01B8A4  0E84               	movlw	132
 33701  01B8A6  6FF8               	movwf	248,b	;volatile
 33702                           
 33703                           ; BSR set to: 62
 33704                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 33705  01B8A8  0139               	movlb	57	; () banked
 33706  01B8AA  95A1               	bcf	161,2,b	;volatile
 33707                           
 33708                           ; BSR set to: 57
 33709                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 33710  01B8AC  8591               	bsf	145,2,b	;volatile
 33711                           
 33712                           ; BSR set to: 57
 33713                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 33714  01B8AE  0EA8               	movlw	low _ADCC_DefaultInterruptHandler
 33715  01B8B0  6EE6               	movwf	postinc1,c
 33716  01B8B2  0ECB               	movlw	high _ADCC_DefaultInterruptHandler
 33717  01B8B4  6EE6               	movwf	postinc1,c
 33718  01B8B6  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 33719  01B8B8  6EE6               	movwf	postinc1,c
 33720  01B8BA  EC8B  F0E3         	call	_ADCC_SetADIInterruptHandler	;wreg free
 33721                           
 33722                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 33723  01B8BE  0139               	movlb	57	; () banked
 33724  01B8C0  97A1               	bcf	161,3,b	;volatile
 33725                           
 33726                           ; BSR set to: 57
 33727                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 33728  01B8C2  8791               	bsf	145,3,b	;volatile
 33729                           
 33730                           ; BSR set to: 57
 33731                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 33732  01B8C4  0EA8               	movlw	low _ADCC_DefaultInterruptHandler
 33733  01B8C6  6EE6               	movwf	postinc1,c
 33734  01B8C8  0ECB               	movlw	high _ADCC_DefaultInterruptHandler
 33735  01B8CA  6EE6               	movwf	postinc1,c
 33736  01B8CC  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 33737  01B8CE  6EE6               	movwf	postinc1,c
 33738  01B8D0  EC77  F0E3         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 33739                           
 33740                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33741  01B8D4  0012               	return		;funcret
 33742  01B8D6                     __end_of_ADCC_Initialize:
 33743                           	opt callstack 0
 33744                           
 33745 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 33746 ;; Defined at:
 33747 ;;		line 336 in file "mcc_generated_files/adcc.c"
 33748 ;; Parameters:    Size  Location     Type
 33749 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33750 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 33751 ;; Auto vars:     Size  Location     Type
 33752 ;;		None
 33753 ;; Return value:  Size  Location     Type
 33754 ;;                  1  [STACK] void 
 33755 ;; Registers used:
 33756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33757 ;; Tracked objects:
 33758 ;;		On entry : 0/0
 33759 ;;		On exit  : 0/0
 33760 ;;		Unchanged: 0/0
 33761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33766 ;;Total ram usage:        0 bytes
 33767 ;; Hardware stack levels used:    1
 33768 ;; Hardware stack levels required when called:   15
 33769 ;; This function calls:
 33770 ;;		Nothing
 33771 ;; This function is called by:
 33772 ;;		_ADCC_Initialize
 33773 ;;		_start_adc_scan
 33774 ;; This function uses a reentrant model
 33775 ;;
 33776                           
 33777                           	psect	text144
 33778  01C6EE                     __ptext144:
 33779                           	opt callstack 0
 33780  01C6EE                     _ADCC_SetADTIInterruptHandler:
 33781                           	opt callstack 14
 33782                           
 33783                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 33784                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33785                           
 33786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33787                           ;incstack = 0
 33788  01C6EE  50E1               	movf	fsr1l,w,c
 33789  01C6F0  0FFD               	addlw	-3
 33790  01C6F2  6ED9               	movwf	fsr2l,c
 33791  01C6F4  50E2               	movf	fsr1h,w,c
 33792  01C6F6  6EDA               	movwf	fsr2h,c
 33793  01C6F8  0EFF               	movlw	255
 33794  01C6FA  22DA               	addwfc	fsr2h,f,c
 33795  01C6FC  006F FF78  F085    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 33796  01C702  006F FF78  F086    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 33797  01C708  006F FF74  F087    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 33798                           
 33799                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 33800  01C70E  52E5               	movf	postdec1,f,c
 33801  01C710  52E5               	movf	postdec1,f,c
 33802  01C712  52E5               	movf	postdec1,f,c
 33803  01C714  0012               	return		;funcret
 33804  01C716                     __end_of_ADCC_SetADTIInterruptHandler:
 33805                           	opt callstack 0
 33806                           
 33807 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 33808 ;; Defined at:
 33809 ;;		line 323 in file "mcc_generated_files/adcc.c"
 33810 ;; Parameters:    Size  Location     Type
 33811 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33812 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 33813 ;; Auto vars:     Size  Location     Type
 33814 ;;		None
 33815 ;; Return value:  Size  Location     Type
 33816 ;;                  1  [STACK] void 
 33817 ;; Registers used:
 33818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33819 ;; Tracked objects:
 33820 ;;		On entry : 6/0
 33821 ;;		On exit  : 0/0
 33822 ;;		Unchanged: 0/0
 33823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33828 ;;Total ram usage:        0 bytes
 33829 ;; Hardware stack levels used:    1
 33830 ;; Hardware stack levels required when called:   15
 33831 ;; This function calls:
 33832 ;;		Nothing
 33833 ;; This function is called by:
 33834 ;;		_ADCC_Initialize
 33835 ;;		_start_adc_scan
 33836 ;; This function uses a reentrant model
 33837 ;;
 33838                           
 33839                           	psect	text145
 33840  01C716                     __ptext145:
 33841                           	opt callstack 0
 33842  01C716                     _ADCC_SetADIInterruptHandler:
 33843                           	opt callstack 14
 33844                           
 33845                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 33846                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33847                           
 33848                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33849                           ;incstack = 0
 33850  01C716  50E1               	movf	fsr1l,w,c
 33851  01C718  0FFD               	addlw	-3
 33852  01C71A  6ED9               	movwf	fsr2l,c
 33853  01C71C  50E2               	movf	fsr1h,w,c
 33854  01C71E  6EDA               	movwf	fsr2h,c
 33855  01C720  0EFF               	movlw	255
 33856  01C722  22DA               	addwfc	fsr2h,f,c
 33857  01C724  006F FF78  F088    	movff	postinc2,_ADCC_ADI_InterruptHandler
 33858  01C72A  006F FF78  F089    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 33859  01C730  006F FF74  F08A    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 33860                           
 33861                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 33862  01C736  52E5               	movf	postdec1,f,c
 33863  01C738  52E5               	movf	postdec1,f,c
 33864  01C73A  52E5               	movf	postdec1,f,c
 33865  01C73C  0012               	return		;funcret
 33866  01C73E                     __end_of_ADCC_SetADIInterruptHandler:
 33867                           	opt callstack 0
 33868                           
 33869 ;; *************** function _INT1_ISR *****************
 33870 ;; Defined at:
 33871 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 33872 ;; Parameters:    Size  Location     Type
 33873 ;;		None
 33874 ;; Auto vars:     Size  Location     Type
 33875 ;;		None
 33876 ;; Return value:  Size  Location     Type
 33877 ;;                  1    wreg      void 
 33878 ;; Registers used:
 33879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 33880 ;; Tracked objects:
 33881 ;;		On entry : 0/0
 33882 ;;		On exit  : 0/0
 33883 ;;		Unchanged: 0/0
 33884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33887 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33888 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33889 ;;Total ram usage:        4 bytes
 33890 ;; Hardware stack levels used:    1
 33891 ;; Hardware stack levels required when called:    5
 33892 ;; This function calls:
 33893 ;;		_INT1_CallBack
 33894 ;; This function is called by:
 33895 ;;		Interrupt level 1
 33896 ;; This function uses a non-reentrant model
 33897 ;;
 33898                           
 33899                           	psect	text146
 33900  01C19C                     __ptext146:
 33901                           	opt callstack 0
 33902  01C19C                     _INT1_ISR:
 33903                           	opt callstack 11
 33904                           
 33905                           ;incstack = 0
 33906  01C19C  006F FF60  F027    	movff	status,??_INT1_ISR
 33907  01C1A2  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 33908  01C1A8  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 33909  01C1AE  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 33910  01C1B4  EE16  F0AF         	lfsr	1,___intlo_sp
 33911                           
 33912                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 33913  01C1B8  0139               	movlb	57	; () banked
 33914  01C1BA  91A5               	bcf	165,0,b	;volatile
 33915                           
 33916                           ; BSR set to: 57
 33917                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 33918  01C1BC  ECEE  F0E3         	call	_INT1_CallBack	;wreg free
 33919  01C1C0  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 33920  01C1C6  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 33921  01C1CC  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 33922  01C1D2  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 33923  01C1D8  0011               	retfie		f
 33924  01C1DA                     __end_of_INT1_ISR:
 33925                           	opt callstack 0
 33926                           
 33927 ;; *************** function _INT1_CallBack *****************
 33928 ;; Defined at:
 33929 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 33930 ;; Parameters:    Size  Location     Type
 33931 ;;		None
 33932 ;; Auto vars:     Size  Location     Type
 33933 ;;		None
 33934 ;; Return value:  Size  Location     Type
 33935 ;;                  1  [STACK] void 
 33936 ;; Registers used:
 33937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 33938 ;; Tracked objects:
 33939 ;;		On entry : 3F/39
 33940 ;;		On exit  : 0/0
 33941 ;;		Unchanged: 0/0
 33942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33947 ;;Total ram usage:        0 bytes
 33948 ;; Hardware stack levels used:    1
 33949 ;; Hardware stack levels required when called:    4
 33950 ;; This function calls:
 33951 ;;		Absolute function
 33952 ;;		_INT1_DefaultInterruptHandler
 33953 ;;		_switch_handler
 33954 ;; This function is called by:
 33955 ;;		_INT1_ISR
 33956 ;; This function uses a reentrant model
 33957 ;;
 33958                           
 33959                           	psect	text147
 33960  01C7DC                     __ptext147:
 33961                           	opt callstack 0
 33962  01C7DC                     _INT1_CallBack:
 33963                           	opt callstack 11
 33964                           
 33965                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 33966                           
 33967                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33968                           ;incstack = 0
 33969  01C7DC  0100               	movlb	0	; () banked
 33970  01C7DE  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 33971  01C7E0  1195               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 33972  01C7E2  1196               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 33973  01C7E4  B4D8               	btfsc	status,2,c
 33974  01C7E6  0012               	return	
 33975                           
 33976                           ; BSR set to: 0
 33977                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 33978  01C7E8  D801               	call	u1038_28
 33979  01C7EA  0012               	return	
 33980  01C7EC                     u1038_28:
 33981  01C7EC  0005               	push	
 33982  01C7EE  6EFA               	movwf	pclath,c
 33983  01C7F0  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 33984  01C7F2  6EFD               	movwf	tosl,c
 33985  01C7F4  5195               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 33986  01C7F6  6EFE               	movwf	tosh,c
 33987  01C7F8  5196               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 33988  01C7FA  6EFF               	movwf	tosu,c
 33989  01C7FC  50FA               	movf	pclath,w,c
 33990  01C7FE  0012               	return		;indir
 33991  01C800                     __end_of_INT1_CallBack:
 33992                           	opt callstack 0
 33993                           
 33994 ;; *************** function _INT1_DefaultInterruptHandler *****************
 33995 ;; Defined at:
 33996 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 33997 ;; Parameters:    Size  Location     Type
 33998 ;;		None
 33999 ;; Auto vars:     Size  Location     Type
 34000 ;;		None
 34001 ;; Return value:  Size  Location     Type
 34002 ;;                  1  [STACK] void 
 34003 ;; Registers used:
 34004 ;;		None
 34005 ;; Tracked objects:
 34006 ;;		On entry : 3F/0
 34007 ;;		On exit  : 0/0
 34008 ;;		Unchanged: 0/0
 34009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34014 ;;Total ram usage:        0 bytes
 34015 ;; Hardware stack levels used:    1
 34016 ;; Hardware stack levels required when called:    3
 34017 ;; This function calls:
 34018 ;;		Nothing
 34019 ;; This function is called by:
 34020 ;;		_EXT_INT_Initialize
 34021 ;;		_INT1_CallBack
 34022 ;; This function uses a reentrant model
 34023 ;;
 34024                           
 34025                           	psect	text148
 34026  01CBA2                     __ptext148:
 34027                           	opt callstack 0
 34028  01CBA2                     _INT1_DefaultInterruptHandler:
 34029                           	opt callstack 11
 34030                           
 34031                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34032                           
 34033                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34034                           ;incstack = 0
 34035  01CBA2  0012               	return		;funcret
 34036  01CBA4                     __end_of_INT1_DefaultInterruptHandler:
 34037                           	opt callstack 0
 34038                           
 34039 ;; *************** function _switch_handler *****************
 34040 ;; Defined at:
 34041 ;;		line 58 in file "dio.c"
 34042 ;; Parameters:    Size  Location     Type
 34043 ;;		None
 34044 ;; Auto vars:     Size  Location     Type
 34045 ;;  i               1  [STACK] unsigned char 
 34046 ;;  sw_value        1  [STACK] unsigned char 
 34047 ;; Return value:  Size  Location     Type
 34048 ;;                  1  [STACK] void 
 34049 ;; Registers used:
 34050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 34051 ;; Tracked objects:
 34052 ;;		On entry : 3F/0
 34053 ;;		On exit  : 0/0
 34054 ;;		Unchanged: 0/0
 34055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34060 ;;Total ram usage:        0 bytes
 34061 ;; Hardware stack levels used:    1
 34062 ;; Hardware stack levels required when called:    3
 34063 ;; This function calls:
 34064 ;;		Nothing
 34065 ;; This function is called by:
 34066 ;;		_start_switch_handler
 34067 ;;		_INT1_CallBack
 34068 ;; This function uses a reentrant model
 34069 ;;
 34070                           
 34071                           	psect	text149
 34072  0199FC                     __ptext149:
 34073                           	opt callstack 0
 34074  0199FC                     _switch_handler:
 34075                           	opt callstack 0
 34076                           
 34077                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34078  0199FC  52E6               	movf	postinc1,f,c
 34079  0199FE  52E6               	movf	postinc1,f,c
 34080                           
 34081                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 34082                           ;stkvar	_i @ sp[(-2)+0]
 34083                           
 34084                           ;incstack = 0
 34085  019A00  0EFE               	movlw	-2
 34086  019A02  6AE3               	clrf	plusw1,c
 34087  019A04  9ABF               	bcf	191,5,c	;volatile
 34088                           
 34089                           ;dio.c: 72:  __nop();
 34090  019A06  F000               	nop	
 34091                           
 34092                           ;dio.c: 73:  __nop();
 34093  019A08  F000               	nop	
 34094                           
 34095                           ;dio.c: 74:  __nop();
 34096  019A0A  F000               	nop	
 34097                           
 34098                           ;dio.c: 75:  __nop();
 34099  019A0C  F000               	nop	
 34100                           
 34101                           ;dio.c: 76:  __nop();
 34102  019A0E  F000               	nop	
 34103                           
 34104                           ;dio.c: 77:  __nop();
 34105  019A10  F000               	nop	
 34106  019A12  D016               	goto	l11011
 34107  019A14                     l10997:
 34108                           
 34109                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 34110  019A14  A6CF               	btfss	207,3,c	;volatile
 34111  019A16  D00E               	goto	u1004_20
 34112  019A18  D00A               	goto	u1004_21
 34113  019A1A                     u1002_28:
 34114                           
 34115                           ;stkvar	_sw_value @ sp[(-2)+1]
 34116  019A1A  0EFF               	movlw	-1
 34117  019A1C  0060  F033  FFE3   	movff	btemp+11,plusw1
 34118                           
 34119                           ;dio.c: 83:    break;
 34120  019A22  D027               	goto	l11013
 34121  019A24                     l10999:
 34122                           
 34123                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 34124  019A24  A4CF               	btfss	207,2,c	;volatile
 34125  019A26  D006               	goto	u1004_20
 34126  019A28  D002               	goto	u1004_21
 34127  019A2A                     l11001:
 34128                           
 34129                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 34130  019A2A  A6CD               	btfss	205,3,c	;volatile
 34131  019A2C  D003               	goto	u1004_20
 34132  019A2E                     u1004_21:
 34133  019A2E  6A0C               	clrf	(btemp+11)^0,c
 34134  019A30  2A0C               	incf	(btemp+11)^0,f,c
 34135  019A32  D7F3               	goto	u1002_28
 34136  019A34                     u1004_20:
 34137  019A34  6A0C               	clrf	(btemp+11)^0,c
 34138  019A36  D7F1               	goto	u1002_28
 34139  019A38                     l11003:
 34140                           
 34141                           ;dio.c: 91:    sw_value = 1;
 34142                           ;stkvar	_sw_value @ sp[(-2)+1]
 34143  019A38  0EFF               	movlw	-1
 34144  019A3A  6AE3               	clrf	plusw1,c
 34145  019A3C  2AE3               	incf	plusw1,f,c
 34146                           
 34147                           ;dio.c: 92:    break;
 34148  019A3E  D019               	goto	l11013
 34149  019A40                     l11011:
 34150                           
 34151                           ;stkvar	_i @ sp[(-2)+0]
 34152  019A40  0EFE               	movlw	-2
 34153  019A42  50E3               	movf	plusw1,w,c
 34154  019A44  6E0B               	movwf	(btemp+10)^0,c
 34155  019A46  6A0C               	clrf	(btemp+11)^0,c
 34156                           
 34157                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34158                           ; Switch size 1, requested type "simple"
 34159                           ; Number of cases is 1, Range of values is 0 to 0
 34160                           ; switch strategies available:
 34161                           ; Name         Instructions Cycles
 34162                           ; simple_byte            4     3 (average)
 34163                           ;	Chosen strategy is simple_byte
 34164  019A48  500C               	movf	(btemp+11)^0,w,c
 34165  019A4A  0A00               	xorlw	0	; case 0
 34166  019A4C  A4D8               	btfss	status,2,c
 34167  019A4E  D7F4               	goto	l11003
 34168                           
 34169                           ; Switch size 1, requested type "simple"
 34170                           ; Number of cases is 5, Range of values is 0 to 4
 34171                           ; switch strategies available:
 34172                           ; Name         Instructions Cycles
 34173                           ; simple_byte           16     9 (average)
 34174                           ;	Chosen strategy is simple_byte
 34175  019A50  500B               	movf	(btemp+10)^0,w,c
 34176  019A52  0A00               	xorlw	0	; case 0
 34177  019A54  B4D8               	btfsc	status,2,c
 34178  019A56  D7F0               	goto	l11003
 34179  019A58  0A01               	xorlw	1	; case 1
 34180  019A5A  B4D8               	btfsc	status,2,c
 34181  019A5C  D7ED               	goto	l11003
 34182  019A5E  0A03               	xorlw	3	; case 2
 34183  019A60  B4D8               	btfsc	status,2,c
 34184  019A62  D7E0               	goto	l10999
 34185  019A64  0A01               	xorlw	1	; case 3
 34186  019A66  B4D8               	btfsc	status,2,c
 34187  019A68  D7D5               	goto	l10997
 34188  019A6A  0A07               	xorlw	7	; case 4
 34189  019A6C  B4D8               	btfsc	status,2,c
 34190  019A6E  D7DD               	goto	l11001
 34191  019A70  D7E3               	goto	l11003
 34192  019A72                     l11013:
 34193                           
 34194                           ;dio.c: 102:   if (sw_value) {
 34195                           ;stkvar	_sw_value @ sp[(-2)+1]
 34196  019A72  0EFF               	movlw	-1
 34197  019A74  50E3               	movf	plusw1,w,c
 34198  019A76  B4D8               	btfsc	status,2,c
 34199  019A78  D018               	goto	l11019
 34200                           
 34201                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 34202                           ;stkvar	_i @ sp[(-2)+0]
 34203  019A7A  0EFE               	movlw	-2
 34204  019A7C  50E3               	movf	plusw1,w,c
 34205  019A7E  0D05               	mullw	5
 34206  019A80  0E54               	movlw	low _S
 34207  019A82  24F3               	addwf	243,w,c
 34208  019A84  6ED9               	movwf	fsr2l,c
 34209  019A86  0E02               	movlw	high _S
 34210  019A88  20F4               	addwfc	prodh,w,c
 34211  019A8A  6EDA               	movwf	fsr2h,c
 34212  019A8C  04DE               	decf	postinc2,w,c
 34213  019A8E  A4D8               	btfss	status,2,c
 34214  019A90  D049               	goto	l11027
 34215                           
 34216                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 34217                           ;stkvar	_i @ sp[(-2)+0]
 34218  019A92  0EFE               	movlw	-2
 34219  019A94  50E3               	movf	plusw1,w,c
 34220  019A96  0D05               	mullw	5
 34221  019A98  0E54               	movlw	low _S
 34222  019A9A  24F3               	addwf	243,w,c
 34223  019A9C  6ED9               	movwf	fsr2l,c
 34224  019A9E  0E02               	movlw	high _S
 34225  019AA0  20F4               	addwfc	prodh,w,c
 34226  019AA2  6EDA               	movwf	fsr2h,c
 34227  019AA4  0E00               	movlw	0
 34228  019AA6  6EDF               	movwf	indf2,c
 34229  019AA8  D03D               	goto	l11027
 34230  019AAA                     l11019:
 34231                           
 34232                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 34233                           ;stkvar	_i @ sp[(-2)+0]
 34234  019AAA  0EFE               	movlw	-2
 34235  019AAC  50E3               	movf	plusw1,w,c
 34236  019AAE  0D05               	mullw	5
 34237  019AB0  0E54               	movlw	low _S
 34238  019AB2  24F3               	addwf	243,w,c
 34239  019AB4  6ED9               	movwf	fsr2l,c
 34240  019AB6  0E02               	movlw	high _S
 34241  019AB8  20F4               	addwfc	prodh,w,c
 34242  019ABA  6EDA               	movwf	fsr2h,c
 34243  019ABC  50DF               	movf	indf2,w,c
 34244  019ABE  A4D8               	btfss	status,2,c
 34245  019AC0  D031               	goto	l11027
 34246                           
 34247                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 34248                           ;stkvar	_i @ sp[(-2)+0]
 34249  019AC2  0EFE               	movlw	-2
 34250  019AC4  50E3               	movf	plusw1,w,c
 34251  019AC6  0D05               	mullw	5
 34252  019AC8  0E54               	movlw	low _S
 34253  019ACA  24F3               	addwf	243,w,c
 34254  019ACC  6ED9               	movwf	fsr2l,c
 34255  019ACE  0E02               	movlw	high _S
 34256  019AD0  20F4               	addwfc	prodh,w,c
 34257  019AD2  6EDA               	movwf	fsr2h,c
 34258  019AD4  0E01               	movlw	1
 34259  019AD6  6EDF               	movwf	indf2,c
 34260                           
 34261                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 34262  019AD8  EE20  F1C3         	lfsr	2,_V+188	;volatile
 34263                           
 34264                           ;stkvar	_i @ sp[(-2)+0]
 34265  019ADC  0EFE               	movlw	-2
 34266  019ADE  50E3               	movf	plusw1,w,c
 34267  019AE0  0D05               	mullw	5
 34268  019AE2  0E55               	movlw	low (_S+1)
 34269  019AE4  24F3               	addwf	243,w,c
 34270  019AE6  6EE9               	movwf	fsr0l,c
 34271  019AE8  0E02               	movlw	high (_S+1)
 34272  019AEA  20F4               	addwfc	prodh,w,c
 34273  019AEC  6EEA               	movwf	fsr0h,c
 34274  019AEE  006F FF7B FFEE     	movff	postinc2,postinc0
 34275  019AF4  006F FF7B FFEE     	movff	postinc2,postinc0
 34276  019AFA  006F FF7B FFEE     	movff	postinc2,postinc0
 34277  019B00  006F FF7B FFEE     	movff	postinc2,postinc0
 34278                           
 34279                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 34280                           ;stkvar	_i @ sp[(-2)+0]
 34281  019B06  0EFE               	movlw	-2
 34282  019B08  006F FF8C  F00C    	movff	plusw1,btemp+11
 34283  019B0E  0E01               	movlw	1
 34284  019B10  6E0B               	movwf	(btemp+10)^0,c
 34285  019B12  2A0C               	incf	(btemp+11)^0,f,c
 34286  019B14  D002               	goto	u1008_24
 34287  019B16                     u1008_25:
 34288  019B16  90D8               	bcf	status,0,c
 34289  019B18  360B               	rlcf	(btemp+10)^0,f,c
 34290  019B1A                     u1008_24:
 34291  019B1A  2E0C               	decfsz	(btemp+11)^0,f,c
 34292  019B1C  D7FC               	goto	u1008_25
 34293  019B1E  500B               	movf	(btemp+10)^0,w,c
 34294  019B20  0102               	movlb	2	; () banked
 34295  019B22  137C               	iorwf	(_S+40)& (0+255),f,b	;volatile
 34296  019B24                     l11027:
 34297                           
 34298                           ;dio.c: 113:  } while (++i < 6);
 34299                           ;stkvar	_i @ sp[(-2)+0]
 34300  019B24  0EFE               	movlw	-2
 34301  019B26  2AE3               	incf	plusw1,f,c
 34302  019B28  0EFE               	movlw	-2
 34303  019B2A  006F FF8C  F001    	movff	plusw1,btemp
 34304  019B30  0E05               	movlw	5
 34305  019B32  6401               	cpfsgt	btemp^0,c
 34306  019B34  D785               	goto	l11011
 34307                           
 34308                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 34309  019B36  8ABF               	bsf	191,5,c	;volatile
 34310                           
 34311                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 34312  019B38  52E5               	movf	postdec1,f,c
 34313  019B3A  52E5               	movf	postdec1,f,c
 34314  019B3C  0012               	return		;funcret
 34315  019B3E                     __end_of_switch_handler:
 34316                           	opt callstack 0
 34317                           
 34318 ;; *************** function _TMR5_ISR *****************
 34319 ;; Defined at:
 34320 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 34321 ;; Parameters:    Size  Location     Type
 34322 ;;		None
 34323 ;; Auto vars:     Size  Location     Type
 34324 ;;		None
 34325 ;; Return value:  Size  Location     Type
 34326 ;;                  1    wreg      void 
 34327 ;; Registers used:
 34328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 34329 ;; Tracked objects:
 34330 ;;		On entry : 0/0
 34331 ;;		On exit  : 3F/0
 34332 ;;		Unchanged: 0/0
 34333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34336 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34337 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34338 ;;Total ram usage:       15 bytes
 34339 ;; Hardware stack levels used:    1
 34340 ;; Hardware stack levels required when called:    9
 34341 ;; This function calls:
 34342 ;;		_TMR5_CallBack
 34343 ;;		_TMR5_WriteTimer
 34344 ;; This function is called by:
 34345 ;;		Interrupt level 1
 34346 ;; This function uses a non-reentrant model
 34347 ;;
 34348                           
 34349                           	psect	text150
 34350  01A748                     __ptext150:
 34351                           	opt callstack 0
 34352  01A748                     _TMR5_ISR:
 34353                           	opt callstack 7
 34354                           
 34355                           ;incstack = 0
 34356  01A748  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 34357  01A74E  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 34358  01A754  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 34359  01A75A  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 34360  01A760  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 34361  01A766  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 34362  01A76C  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 34363  01A772  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 34364  01A778  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 34365  01A77E  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 34366  01A784  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 34367  01A78A  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 34368  01A790  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 34369  01A796  EE16  F0AF         	lfsr	1,___intlo_sp
 34370                           
 34371                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 34372  01A79A  0139               	movlb	57	; () banked
 34373  01A79C  9DA8               	bcf	168,6,b	;volatile
 34374                           
 34375                           ; BSR set to: 57
 34376                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 34377  01A79E  0060  F28B  FFE6   	movff	_timer5ReloadVal,postinc1
 34378  01A7A4  0060  F28F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 34379  01A7AA  EC8E  F0E0         	call	_TMR5_WriteTimer	;wreg free
 34380                           
 34381                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 34382  01A7AE  0101               	movlb	1	; () banked
 34383  01A7B0  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 34384  01A7B2  6E2B               	movwf	??_TMR5_ISR^0,c
 34385  01A7B4  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 34386  01A7B6  0E05               	movlw	5
 34387  01A7B8  262B               	addwf	??_TMR5_ISR^0,f,c
 34388  01A7BA  0E00               	movlw	0
 34389  01A7BC  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 34390  01A7BE  0100               	movlb	0	; () banked
 34391  01A7C0  4BA0               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 34392  01A7C2  2BA1               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 34393  01A7C4  502B               	movf	??_TMR5_ISR^0,w,c
 34394  01A7C6  5DA0               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 34395  01A7C8  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 34396  01A7CA  59A1               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 34397  01A7CC  A0D8               	btfss	status,0,c
 34398  01A7CE  D005               	goto	i1l1019
 34399                           
 34400                           ; BSR set to: 0
 34401                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 34402  01A7D0  EC00  F0E4         	call	_TMR5_CallBack	;wreg free
 34403                           
 34404                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 34405  01A7D4  0100               	movlb	0	; () banked
 34406  01A7D6  6BA0               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 34407  01A7D8  6BA1               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 34408  01A7DA                     i1l1019:
 34409                           
 34410                           ; BSR set to: 0
 34411  01A7DA  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 34412  01A7E0  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 34413  01A7E6  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 34414  01A7EC  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 34415  01A7F2  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 34416  01A7F8  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 34417  01A7FE  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 34418  01A804  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 34419  01A80A  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 34420  01A810  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 34421  01A816  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 34422  01A81C  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 34423  01A822  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 34424  01A828  0011               	retfie		f
 34425  01A82A                     __end_of_TMR5_ISR:
 34426                           	opt callstack 0
 34427                           
 34428 ;; *************** function _TMR5_WriteTimer *****************
 34429 ;; Defined at:
 34430 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 34431 ;; Parameters:    Size  Location     Type
 34432 ;;  timerVal        2  [STACK] unsigned short 
 34433 ;; Auto vars:     Size  Location     Type
 34434 ;;		None
 34435 ;; Return value:  Size  Location     Type
 34436 ;;                  1  [STACK] void 
 34437 ;; Registers used:
 34438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 34439 ;; Tracked objects:
 34440 ;;		On entry : 3F/39
 34441 ;;		On exit  : 0/0
 34442 ;;		Unchanged: 0/0
 34443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34448 ;;Total ram usage:        0 bytes
 34449 ;; Hardware stack levels used:    1
 34450 ;; Hardware stack levels required when called:    3
 34451 ;; This function calls:
 34452 ;;		Nothing
 34453 ;; This function is called by:
 34454 ;;		_TMR5_ISR
 34455 ;; This function uses a reentrant model
 34456 ;;
 34457                           
 34458                           	psect	text151
 34459  01C11C                     __ptext151:
 34460                           	opt callstack 0
 34461  01C11C                     _TMR5_WriteTimer:
 34462                           	opt callstack 12
 34463                           
 34464                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 34465                           
 34466                           ; BSR set to: 0
 34467                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34468                           ;incstack = 0
 34469  01C11C  A49A               	btfss	154,2,c	;volatile
 34470  01C11E  D00F               	goto	l11237
 34471                           
 34472                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 34473  01C120  909A               	bcf	154,0,c	;volatile
 34474                           
 34475                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 34476                           ;stkvar	_timerVal @ sp[(0)+-2]
 34477  01C122  0EFF               	movlw	255
 34478  01C124  24E1               	addwf	fsr1l,w,c
 34479  01C126  6ED9               	movwf	fsr2l,c
 34480  01C128  0EFF               	movlw	255
 34481  01C12A  20E2               	addwfc	fsr1h,w,c
 34482  01C12C  6EDA               	movwf	fsr2h,c
 34483  01C12E  50DF               	movf	indf2,w,c
 34484  01C130  6E99               	movwf	153,c	;volatile
 34485                           
 34486                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 34487                           ;stkvar	_timerVal @ sp[(0)+-2]
 34488  01C132  0EFE               	movlw	-2
 34489  01C134  006F FF8F FF98     	movff	plusw1,16280	;volatile
 34490                           
 34491                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 34492  01C13A  809A               	bsf	154,0,c	;volatile
 34493                           
 34494                           ;mcc_generated_files/tmr5.c: 144:  } else {
 34495  01C13C  D00C               	goto	l1002
 34496  01C13E                     l11237:
 34497                           
 34498                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 34499                           ;stkvar	_timerVal @ sp[(0)+-2]
 34500  01C13E  0EFF               	movlw	255
 34501  01C140  24E1               	addwf	fsr1l,w,c
 34502  01C142  6ED9               	movwf	fsr2l,c
 34503  01C144  0EFF               	movlw	255
 34504  01C146  20E2               	addwfc	fsr1h,w,c
 34505  01C148  6EDA               	movwf	fsr2h,c
 34506  01C14A  50DF               	movf	indf2,w,c
 34507  01C14C  6E99               	movwf	153,c	;volatile
 34508                           
 34509                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 34510                           ;stkvar	_timerVal @ sp[(0)+-2]
 34511  01C14E  0EFE               	movlw	-2
 34512  01C150  006F FF8F FF98     	movff	plusw1,16280	;volatile
 34513  01C156                     l1002:
 34514                           
 34515                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 34516  01C156  52E5               	movf	postdec1,f,c
 34517  01C158  52E5               	movf	postdec1,f,c
 34518  01C15A  0012               	return		;funcret
 34519  01C15C                     __end_of_TMR5_WriteTimer:
 34520                           	opt callstack 0
 34521                           
 34522 ;; *************** function _TMR5_CallBack *****************
 34523 ;; Defined at:
 34524 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 34525 ;; Parameters:    Size  Location     Type
 34526 ;;		None
 34527 ;; Auto vars:     Size  Location     Type
 34528 ;;		None
 34529 ;; Return value:  Size  Location     Type
 34530 ;;                  1  [STACK] void 
 34531 ;; Registers used:
 34532 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 34533 ;; Tracked objects:
 34534 ;;		On entry : 3F/0
 34535 ;;		On exit  : 0/0
 34536 ;;		Unchanged: 0/0
 34537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34542 ;;Total ram usage:        0 bytes
 34543 ;; Hardware stack levels used:    1
 34544 ;; Hardware stack levels required when called:    8
 34545 ;; This function calls:
 34546 ;;		Absolute function
 34547 ;;		_TMR5_DefaultInterruptHandler
 34548 ;; This function is called by:
 34549 ;;		_TMR5_ISR
 34550 ;; This function uses a reentrant model
 34551 ;;
 34552                           
 34553                           	psect	text152
 34554  01C800                     __ptext152:
 34555                           	opt callstack 0
 34556  01C800                     _TMR5_CallBack:
 34557                           	opt callstack 7
 34558                           
 34559                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 34560                           
 34561                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34562                           ;incstack = 0
 34563  01C800  0100               	movlb	0	; () banked
 34564  01C802  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 34565  01C804  1180               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 34566  01C806  1181               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 34567  01C808  B4D8               	btfsc	status,2,c
 34568  01C80A  0012               	return	
 34569                           
 34570                           ; BSR set to: 0
 34571                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 34572  01C80C  D801               	call	u1047_28
 34573  01C80E  0012               	return	
 34574  01C810                     u1047_28:
 34575  01C810  0005               	push	
 34576  01C812  6EFA               	movwf	pclath,c
 34577  01C814  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 34578  01C816  6EFD               	movwf	tosl,c
 34579  01C818  5180               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 34580  01C81A  6EFE               	movwf	tosh,c
 34581  01C81C  5181               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 34582  01C81E  6EFF               	movwf	tosu,c
 34583  01C820  50FA               	movf	pclath,w,c
 34584  01C822  0012               	return		;indir
 34585  01C824                     __end_of_TMR5_CallBack:
 34586                           	opt callstack 0
 34587                           
 34588 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 34589 ;; Defined at:
 34590 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 34591 ;; Parameters:    Size  Location     Type
 34592 ;;		None
 34593 ;; Auto vars:     Size  Location     Type
 34594 ;;		None
 34595 ;; Return value:  Size  Location     Type
 34596 ;;                  1  [STACK] void 
 34597 ;; Registers used:
 34598 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 34599 ;; Tracked objects:
 34600 ;;		On entry : 3F/0
 34601 ;;		On exit  : 0/0
 34602 ;;		Unchanged: 0/0
 34603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34608 ;;Total ram usage:        0 bytes
 34609 ;; Hardware stack levels used:    1
 34610 ;; Hardware stack levels required when called:    7
 34611 ;; This function calls:
 34612 ;;		_check_day_time
 34613 ;; This function is called by:
 34614 ;;		_TMR5_Initialize
 34615 ;;		_TMR5_CallBack
 34616 ;; This function uses a reentrant model
 34617 ;;
 34618                           
 34619                           	psect	text153
 34620  01C24C                     __ptext153:
 34621                           	opt callstack 0
 34622  01C24C                     _TMR5_DefaultInterruptHandler:
 34623                           	opt callstack 7
 34624                           
 34625                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 34626                           
 34627                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34628                           ;incstack = 0
 34629  01C24C  A0BE               	btfss	190,0,c	;volatile
 34630  01C24E  D002               	goto	u975_20
 34631  01C250  0E01               	movlw	1
 34632  01C252  D001               	goto	u975_26
 34633  01C254                     u975_20:
 34634  01C254  0E00               	movlw	0
 34635  01C256                     u975_26:
 34636  01C256  0AFF               	xorlw	255
 34637  01C258  6E0C               	movwf	(btemp+11)^0,c
 34638  01C25A  50BE               	movf	190,w,c	;volatile
 34639  01C25C  180C               	xorwf	(btemp+11)^0,w,c
 34640  01C25E  0BFE               	andlw	-2
 34641  01C260  180C               	xorwf	(btemp+11)^0,w,c
 34642  01C262  6EBE               	movwf	190,c	;volatile
 34643                           
 34644                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 34645  01C264  0E01               	movlw	1
 34646  01C266  0101               	movlb	1	; () banked
 34647  01C268  27C3               	addwf	(_V+188)& (0+255),f,b	;volatile
 34648  01C26A  0E00               	movlw	0
 34649  01C26C  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 34650  01C26E  23C5               	addwfc	(_V+190)& (0+255),f,b	;volatile
 34651  01C270  23C6               	addwfc	(_V+191)& (0+255),f,b	;volatile
 34652                           
 34653                           ; BSR set to: 1
 34654                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 34655  01C272  0E01               	movlw	1
 34656  01C274  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 34657  01C276  0E00               	movlw	0
 34658  01C278  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 34659  01C27A  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 34660  01C27C  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 34661                           
 34662                           ; BSR set to: 1
 34663                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 34664  01C27E  EC1D  F0C7         	call	_check_day_time	;wreg free
 34665                           
 34666                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34667  01C282  0012               	return		;funcret
 34668  01C284                     __end_of_TMR5_DefaultInterruptHandler:
 34669                           	opt callstack 0
 34670                           
 34671 ;; *************** function _check_day_time *****************
 34672 ;; Defined at:
 34673 ;;		line 165 in file "mbmc.c"
 34674 ;; Parameters:    Size  Location     Type
 34675 ;;		None
 34676 ;; Auto vars:     Size  Location     Type
 34677 ;;  light           4  [STACK] float 
 34678 ;; Return value:  Size  Location     Type
 34679 ;;                  1  [STACK] _Bool 
 34680 ;; Registers used:
 34681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 34682 ;; Tracked objects:
 34683 ;;		On entry : 3F/1
 34684 ;;		On exit  : 0/0
 34685 ;;		Unchanged: 0/0
 34686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34691 ;;Total ram usage:        0 bytes
 34692 ;; Hardware stack levels used:    1
 34693 ;; Hardware stack levels required when called:    6
 34694 ;; This function calls:
 34695 ;;		___flge
 34696 ;;		_conv_raw_result
 34697 ;;		_get_ac_charger_relay
 34698 ;;		_set_ac_charger_relay
 34699 ;; This function is called by:
 34700 ;;		_TMR5_DefaultInterruptHandler
 34701 ;; This function uses a reentrant model
 34702 ;;
 34703                           
 34704                           	psect	text154
 34705  018E3A                     __ptext154:
 34706                           	opt callstack 0
 34707  018E3A                     _check_day_time:
 34708                           	opt callstack 0
 34709                           
 34710                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34711  018E3A  52E6               	movf	postinc1,f,c
 34712  018E3C  52E6               	movf	postinc1,f,c
 34713  018E3E  52E6               	movf	postinc1,f,c
 34714  018E40  52E6               	movf	postinc1,f,c
 34715                           
 34716                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 34717                           
 34718                           ;incstack = 0
 34719  018E42  0E00               	movlw	0
 34720  018E44  6EE6               	movwf	postinc1,c
 34721  018E46  0E0D               	movlw	13
 34722  018E48  6EE6               	movwf	postinc1,c
 34723  018E4A  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 34724                           
 34725                           ;stkvar	_light @ sp[(-4)+0]
 34726  018E4E  0EFC               	movlw	-4
 34727  018E50  0060  F007  FFE3   	movff	btemp,plusw1
 34728  018E56  0EFD               	movlw	-3
 34729  018E58  0060  F00B  FFE3   	movff	btemp+1,plusw1
 34730  018E5E  0EFE               	movlw	-2
 34731  018E60  0060  F00F  FFE3   	movff	btemp+2,plusw1
 34732  018E66  0EFF               	movlw	-1
 34733  018E68  0060  F013  FFE3   	movff	btemp+3,plusw1
 34734                           
 34735                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 34736  018E6E  2A41               	incf	check_day_time@day_delay^0,f,c
 34737  018E70  0441               	decf	check_day_time@day_delay^0,w,c
 34738  018E72  A4D8               	btfss	status,2,c
 34739  018E74  D0A9               	goto	l2011
 34740  018E76  0101               	movlb	1	; () banked
 34741  018E78  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 34742  018E7A  B4D8               	btfsc	status,2,c
 34743  018E7C  D0A5               	goto	l2011
 34744                           
 34745                           ; BSR set to: 1
 34746                           ;mbmc.c: 173:   if (C.soc > 3) {
 34747  018E7E  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34748  018E82  0E01               	movlw	1
 34749  018E84  50DB               	movf	plusw2,w,c
 34750  018E86  E104               	bnz	u952_20
 34751  018E88  0E04               	movlw	4
 34752  018E8A  5CDE               	subwf	postinc2,w,c
 34753  018E8C  A0D8               	btfss	status,0,c
 34754  018E8E  D073               	goto	l10207
 34755  018E90                     u952_20:
 34756                           
 34757                           ; BSR set to: 1
 34758                           ;mbmc.c: 174:    if (!C.day) {
 34759  018E90  EE22  F021         	lfsr	2,_C+290	;volatile
 34760  018E94  50DF               	movf	indf2,w,c
 34761  018E96  A4D8               	btfss	status,2,c
 34762  018E98  D035               	goto	l10195
 34763                           
 34764                           ; BSR set to: 1
 34765                           ;mbmc.c: 175:     if (light > 22.0) {
 34766                           ;stkvar	_light @ sp[(-4)+0]
 34767  018E9A  0EFC               	movlw	-4
 34768  018E9C  006F FF8F FFE6     	movff	plusw1,postinc1
 34769  018EA2  006F FF8F FFE6     	movff	plusw1,postinc1
 34770  018EA8  006F FF8F FFE6     	movff	plusw1,postinc1
 34771  018EAE  006F FF8F FFE6     	movff	plusw1,postinc1
 34772  018EB4  0E00               	movlw	0
 34773  018EB6  6EE6               	movwf	postinc1,c
 34774  018EB8  0E00               	movlw	0
 34775  018EBA  6EE6               	movwf	postinc1,c
 34776  018EBC  0EB0               	movlw	176
 34777  018EBE  6EE6               	movwf	postinc1,c
 34778  018EC0  0E41               	movlw	65
 34779  018EC2  6EE6               	movwf	postinc1,c
 34780  018EC4  ECF4  F0CA         	call	___flge	;wreg free
 34781  018EC8  B001               	btfsc	btemp& (0+255),0,c
 34782  018ECA  D07E               	goto	l2011
 34783                           
 34784                           ;mbmc.c: 176:      C.day = 1;
 34785  018ECC  0E01               	movlw	1
 34786  018ECE  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 34787                           
 34788                           ;mbmc.c: 177:      C.day_start = V.ticks;
 34789  018ED4  EE20  F188         	lfsr	2,_V+129	;volatile
 34790  018ED8  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 34791  018EDE  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 34792  018EE4  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 34793  018EEA  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 34794                           
 34795                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 34796  018EF0  EC7B  F0E5         	call	_get_ac_charger_relay	;wreg free
 34797  018EF4  5001               	movf	btemp^0,w,c
 34798  018EF6  B4D8               	btfsc	status,2,c
 34799  018EF8  D06B               	goto	l2007
 34800                           
 34801                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 34802  018EFA  0E00               	movlw	0
 34803  018EFC  6EE6               	movwf	postinc1,c
 34804  018EFE  EC65  F0E5         	call	_set_ac_charger_relay	;wreg free
 34805  018F02  D066               	goto	l2007
 34806  018F04                     l10195:
 34807                           
 34808                           ; BSR set to: 1
 34809                           ;mbmc.c: 184:     if (light < 12.0) {
 34810  018F04  0E00               	movlw	0
 34811  018F06  6EE6               	movwf	postinc1,c
 34812  018F08  0E00               	movlw	0
 34813  018F0A  6EE6               	movwf	postinc1,c
 34814  018F0C  0E40               	movlw	64
 34815  018F0E  6EE6               	movwf	postinc1,c
 34816  018F10  0E41               	movlw	65
 34817  018F12  6EE6               	movwf	postinc1,c
 34818                           
 34819                           ;stkvar	_light @ sp[(-8)+0]
 34820  018F14  0EF8               	movlw	-8
 34821  018F16  006F FF8F FFE6     	movff	plusw1,postinc1
 34822  018F1C  006F FF8F FFE6     	movff	plusw1,postinc1
 34823  018F22  006F FF8F FFE6     	movff	plusw1,postinc1
 34824  018F28  006F FF8F FFE6     	movff	plusw1,postinc1
 34825  018F2E  ECF4  F0CA         	call	___flge	;wreg free
 34826  018F32  B001               	btfsc	btemp& (0+255),0,c
 34827  018F34  D049               	goto	l2011
 34828                           
 34829                           ;mbmc.c: 185:      C.day = 0;
 34830  018F36  0E00               	movlw	0
 34831  018F38  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 34832                           
 34833                           ;mbmc.c: 186:      C.day_end = V.ticks;
 34834  018F3E  EE20  F188         	lfsr	2,_V+129	;volatile
 34835  018F42  006F FF78  F826    	movff	postinc2,_C+295	;volatile
 34836  018F48  006F FF78  F827    	movff	postinc2,_C+296	;volatile
 34837  018F4E  006F FF78  F828    	movff	postinc2,_C+297	;volatile
 34838  018F54  006F FF74  F829    	movff	postdec2,_C+298	;volatile
 34839                           
 34840                           ;mbmc.c: 190:      if ((C.soc < 20)) {
 34841  018F5A  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34842  018F5E  0E01               	movlw	1
 34843  018F60  50DB               	movf	plusw2,w,c
 34844  018F62  E136               	bnz	l2007
 34845  018F64  0E14               	movlw	20
 34846  018F66  5CDE               	subwf	postinc2,w,c
 34847  018F68  B0D8               	btfsc	status,0,c
 34848  018F6A  D032               	goto	l2007
 34849                           
 34850                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 34851  018F6C  0E01               	movlw	1
 34852  018F6E  6EE6               	movwf	postinc1,c
 34853  018F70  EC65  F0E5         	call	_set_ac_charger_relay	;wreg free
 34854  018F74  D02D               	goto	l2007
 34855  018F76                     l10207:
 34856                           
 34857                           ; BSR set to: 1
 34858                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 34859  018F76  EE21  F377         	lfsr	2,_C+120	;volatile
 34860  018F7A  006F FF7B FFE6     	movff	postinc2,postinc1
 34861  018F80  006F FF7B FFE6     	movff	postinc2,postinc1
 34862  018F86  006F FF7B FFE6     	movff	postinc2,postinc1
 34863  018F8C  006F FF7B FFE6     	movff	postinc2,postinc1
 34864  018F92  EE21  F37B         	lfsr	2,_C+124	;volatile
 34865  018F96  006F FF7B FFE6     	movff	postinc2,postinc1
 34866  018F9C  006F FF7B FFE6     	movff	postinc2,postinc1
 34867  018FA2  006F FF7B FFE6     	movff	postinc2,postinc1
 34868  018FA8  006F FF7B FFE6     	movff	postinc2,postinc1
 34869  018FAE  ECF4  F0CA         	call	___flge	;wreg free
 34870  018FB2  B001               	btfsc	btemp& (0+255),0,c
 34871  018FB4  D009               	goto	l2011
 34872                           
 34873                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 34874  018FB6  EC7B  F0E5         	call	_get_ac_charger_relay	;wreg free
 34875  018FBA  5001               	movf	btemp^0,w,c
 34876  018FBC  A4D8               	btfss	status,2,c
 34877  018FBE  D004               	goto	l2011
 34878                           
 34879                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 34880  018FC0  0E01               	movlw	1
 34881  018FC2  6EE6               	movwf	postinc1,c
 34882  018FC4  EC65  F0E5         	call	_set_ac_charger_relay	;wreg free
 34883  018FC8                     l2011:
 34884                           
 34885                           ;mbmc.c: 204:  if (day_delay >= 240)
 34886  018FC8  0EEF               	movlw	239
 34887  018FCA  6441               	cpfsgt	check_day_time@day_delay^0,c
 34888  018FCC  D001               	goto	l2007
 34889                           
 34890                           ;mbmc.c: 205:   day_delay = 0;
 34891  018FCE  6A41               	clrf	check_day_time@day_delay^0,c
 34892  018FD0                     l2007:
 34893                           
 34894                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 34895  018FD0  52E5               	movf	postdec1,f,c
 34896  018FD2  52E5               	movf	postdec1,f,c
 34897  018FD4  52E5               	movf	postdec1,f,c
 34898  018FD6  52E5               	movf	postdec1,f,c
 34899  018FD8  0012               	return		;funcret
 34900  018FDA                     __end_of_check_day_time:
 34901                           	opt callstack 0
 34902                           
 34903 ;; *************** function _set_ac_charger_relay *****************
 34904 ;; Defined at:
 34905 ;;		line 135 in file "mbmc.c"
 34906 ;; Parameters:    Size  Location     Type
 34907 ;;  mode            1  [STACK] const _Bool 
 34908 ;; Auto vars:     Size  Location     Type
 34909 ;;		None
 34910 ;; Return value:  Size  Location     Type
 34911 ;;                  1  [STACK] void 
 34912 ;; Registers used:
 34913 ;;		wreg, fsr1l, fsr1h
 34914 ;; Tracked objects:
 34915 ;;		On entry : 0/1
 34916 ;;		On exit  : 0/0
 34917 ;;		Unchanged: 0/0
 34918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34923 ;;Total ram usage:        0 bytes
 34924 ;; Hardware stack levels used:    1
 34925 ;; Hardware stack levels required when called:    3
 34926 ;; This function calls:
 34927 ;;		Nothing
 34928 ;; This function is called by:
 34929 ;;		_check_day_time
 34930 ;; This function uses a reentrant model
 34931 ;;
 34932                           
 34933                           	psect	text155
 34934  01CACA                     __ptext155:
 34935                           	opt callstack 0
 34936  01CACA                     _set_ac_charger_relay:
 34937                           	opt callstack 9
 34938                           
 34939                           ;mbmc.c: 135: void set_ac_charger_relay(const _Bool mode);mbmc.c: 136: {;mbmc.c: 137:  L
      +                          ATDbits.LATD6 = mode;
 34940                           ;stkvar	_mode @ sp[(0)+-1]
 34941                           
 34942                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34943                           ;incstack = 0
 34944  01CACA  0EFF               	movlw	-1
 34945  01CACC  B0E3               	btfsc	plusw1,0,c
 34946  01CACE  D002               	bra	u947_25
 34947  01CAD0  9CBD               	bcf	189,6,c	;volatile
 34948  01CAD2  D001               	bra	u947_26
 34949  01CAD4                     u947_25:
 34950  01CAD4  8CBD               	bsf	189,6,c	;volatile
 34951  01CAD6                     u947_26:
 34952                           
 34953                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 34954  01CAD6  52E5               	movf	postdec1,f,c
 34955  01CAD8  0012               	return		;funcret
 34956  01CADA                     __end_of_set_ac_charger_relay:
 34957                           	opt callstack 0
 34958                           
 34959 ;; *************** function _get_ac_charger_relay *****************
 34960 ;; Defined at:
 34961 ;;		line 140 in file "mbmc.c"
 34962 ;; Parameters:    Size  Location     Type
 34963 ;;		None
 34964 ;; Auto vars:     Size  Location     Type
 34965 ;;		None
 34966 ;; Return value:  Size  Location     Type
 34967 ;;                  1  [STACK] _Bool 
 34968 ;; Registers used:
 34969 ;;		btemp
 34970 ;; Tracked objects:
 34971 ;;		On entry : 0/1
 34972 ;;		On exit  : 0/0
 34973 ;;		Unchanged: 0/0
 34974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34979 ;;Total ram usage:        0 bytes
 34980 ;; Hardware stack levels used:    1
 34981 ;; Hardware stack levels required when called:    3
 34982 ;; This function calls:
 34983 ;;		Nothing
 34984 ;; This function is called by:
 34985 ;;		_check_day_time
 34986 ;;		_calc_bsoc
 34987 ;; This function uses a reentrant model
 34988 ;;
 34989                           
 34990                           	psect	text156
 34991  01CAF6                     __ptext156:
 34992                           	opt callstack 0
 34993  01CAF6                     _get_ac_charger_relay:
 34994                           	opt callstack 10
 34995                           
 34996                           ;mbmc.c: 142:  return LATDbits.LATD6;
 34997                           
 34998                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34999                           ;incstack = 0
 35000  01CAF6  ACBD               	btfss	189,6,c	;volatile
 35001  01CAF8  D003               	goto	u968_20
 35002  01CAFA  6A01               	clrf	btemp^0,c
 35003  01CAFC  2A01               	incf	btemp^0,f,c
 35004  01CAFE  0012               	return	
 35005  01CB00                     u968_20:
 35006  01CB00  6A01               	clrf	btemp^0,c
 35007                           
 35008                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 35009  01CB02  0012               	return		;funcret
 35010  01CB04                     __end_of_get_ac_charger_relay:
 35011                           	opt callstack 0
 35012                           
 35013 ;; *************** function _TMR3_ISR *****************
 35014 ;; Defined at:
 35015 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 35016 ;; Parameters:    Size  Location     Type
 35017 ;;		None
 35018 ;; Auto vars:     Size  Location     Type
 35019 ;;		None
 35020 ;; Return value:  Size  Location     Type
 35021 ;;                  1    wreg      void 
 35022 ;; Registers used:
 35023 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 35024 ;; Tracked objects:
 35025 ;;		On entry : 0/0
 35026 ;;		On exit  : 3F/0
 35027 ;;		Unchanged: 0/0
 35028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35031 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35032 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35033 ;;Total ram usage:       25 bytes
 35034 ;; Hardware stack levels used:    1
 35035 ;; Hardware stack levels required when called:   14
 35036 ;; This function calls:
 35037 ;;		_TMR3_CallBack
 35038 ;;		_TMR3_WriteTimer
 35039 ;; This function is called by:
 35040 ;;		Interrupt level 1
 35041 ;; This function uses a non-reentrant model
 35042 ;;
 35043                           
 35044                           	psect	text157
 35045  01974C                     __ptext157:
 35046                           	opt callstack 0
 35047  01974C                     _TMR3_ISR:
 35048                           	opt callstack 2
 35049                           
 35050                           ;incstack = 0
 35051  01974C  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 35052  019752  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 35053  019758  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 35054  01975E  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 35055  019764  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 35056  01976A  0060  F004  F0EA   	movff	btemp,??_TMR3_ISR+5
 35057  019770  0060  F008  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 35058  019776  0060  F00C  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 35059  01977C  0060  F010  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 35060  019782  0060  F014  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 35061  019788  0060  F018  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 35062  01978E  0060  F01C  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 35063  019794  0060  F020  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 35064  01979A  0060  F024  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 35065  0197A0  0060  F028  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 35066  0197A6  0060  F02C  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 35067  0197AC  0060  F030  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 35068  0197B2  0060  F044  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 35069  0197B8  0060  F048  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 35070  0197BE  0060  F04C  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 35071  0197C4  0060  F050  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 35072  0197CA  0060  F054  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 35073  0197D0  0060  F058  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 35074  0197D6  0060  F05C  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 35075  0197DC  0060  F060  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 35076  0197E2  EE16  F0AF         	lfsr	1,___intlo_sp
 35077                           
 35078                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 35079  0197E6  0139               	movlb	57	; () banked
 35080  0197E8  9DA6               	bcf	166,6,b	;volatile
 35081                           
 35082                           ; BSR set to: 57
 35083                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 35084  0197EA  0060  F27B  FFE6   	movff	_timer3ReloadVal,postinc1
 35085  0197F0  0060  F27F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 35086  0197F6  ECAE  F0E0         	call	_TMR3_WriteTimer	;wreg free
 35087                           
 35088                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 35089  0197FA  0100               	movlb	0	; () banked
 35090  0197FC  4B9C               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 35091  0197FE  2B9D               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 35092  019800  519D               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 35093  019802  E104               	bnz	i1u1319_20
 35094  019804  0E28               	movlw	40
 35095  019806  5D9C               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 35096  019808  A0D8               	btfss	status,0,c
 35097  01980A  D005               	goto	i1l1207
 35098  01980C                     i1u1319_20:
 35099                           
 35100                           ; BSR set to: 0
 35101                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 35102  01980C  EC12  F0E4         	call	_TMR3_CallBack	;wreg free
 35103                           
 35104                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 35105  019810  0100               	movlb	0	; () banked
 35106  019812  6B9C               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 35107  019814  6B9D               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 35108  019816                     i1l1207:
 35109                           
 35110                           ; BSR set to: 0
 35111  019816  0060  F3F4  F018   	movff	??_TMR3_ISR+24,btemp+23
 35112  01981C  0060  F3F0  F017   	movff	??_TMR3_ISR+23,btemp+22
 35113  019822  0060  F3EC  F016   	movff	??_TMR3_ISR+22,btemp+21
 35114  019828  0060  F3E8  F015   	movff	??_TMR3_ISR+21,btemp+20
 35115  01982E  0060  F3E4  F014   	movff	??_TMR3_ISR+20,btemp+19
 35116  019834  0060  F3E0  F013   	movff	??_TMR3_ISR+19,btemp+18
 35117  01983A  0060  F3DC  F012   	movff	??_TMR3_ISR+18,btemp+17
 35118  019840  0060  F3D8  F011   	movff	??_TMR3_ISR+17,btemp+16
 35119  019846  0060  F3D4  F00C   	movff	??_TMR3_ISR+16,btemp+11
 35120  01984C  0060  F3D0  F00B   	movff	??_TMR3_ISR+15,btemp+10
 35121  019852  0060  F3CC  F00A   	movff	??_TMR3_ISR+14,btemp+9
 35122  019858  0060  F3C8  F009   	movff	??_TMR3_ISR+13,btemp+8
 35123  01985E  0060  F3C4  F008   	movff	??_TMR3_ISR+12,btemp+7
 35124  019864  0060  F3C0  F007   	movff	??_TMR3_ISR+11,btemp+6
 35125  01986A  0060  F3BC  F006   	movff	??_TMR3_ISR+10,btemp+5
 35126  019870  0060  F3B8  F005   	movff	??_TMR3_ISR+9,btemp+4
 35127  019876  0060  F3B4  F004   	movff	??_TMR3_ISR+8,btemp+3
 35128  01987C  0060  F3B0  F003   	movff	??_TMR3_ISR+7,btemp+2
 35129  019882  0060  F3AC  F002   	movff	??_TMR3_ISR+6,btemp+1
 35130  019888  0060  F3A8  F001   	movff	??_TMR3_ISR+5,btemp
 35131  01988E  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 35132  019894  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 35133  01989A  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 35134  0198A0  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 35135  0198A6  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 35136  0198AC  0011               	retfie		f
 35137  0198AE                     __end_of_TMR3_ISR:
 35138                           	opt callstack 0
 35139                           
 35140 ;; *************** function _TMR3_WriteTimer *****************
 35141 ;; Defined at:
 35142 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 35143 ;; Parameters:    Size  Location     Type
 35144 ;;  timerVal        2  [STACK] unsigned short 
 35145 ;; Auto vars:     Size  Location     Type
 35146 ;;		None
 35147 ;; Return value:  Size  Location     Type
 35148 ;;                  1  [STACK] void 
 35149 ;; Registers used:
 35150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 35151 ;; Tracked objects:
 35152 ;;		On entry : 3F/39
 35153 ;;		On exit  : 0/0
 35154 ;;		Unchanged: 0/0
 35155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35160 ;;Total ram usage:        0 bytes
 35161 ;; Hardware stack levels used:    1
 35162 ;; Hardware stack levels required when called:    3
 35163 ;; This function calls:
 35164 ;;		Nothing
 35165 ;; This function is called by:
 35166 ;;		_TMR3_ISR
 35167 ;; This function uses a reentrant model
 35168 ;;
 35169                           
 35170                           	psect	text158
 35171  01C15C                     __ptext158:
 35172                           	opt callstack 0
 35173  01C15C                     _TMR3_WriteTimer:
 35174                           	opt callstack 12
 35175                           
 35176                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 35177                           
 35178                           ; BSR set to: 0
 35179                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35180                           ;incstack = 0
 35181  01C15C  A4A6               	btfss	166,2,c	;volatile
 35182  01C15E  D00F               	goto	l11255
 35183                           
 35184                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 35185  01C160  90A6               	bcf	166,0,c	;volatile
 35186                           
 35187                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 35188                           ;stkvar	_timerVal @ sp[(0)+-2]
 35189  01C162  0EFF               	movlw	255
 35190  01C164  24E1               	addwf	fsr1l,w,c
 35191  01C166  6ED9               	movwf	fsr2l,c
 35192  01C168  0EFF               	movlw	255
 35193  01C16A  20E2               	addwfc	fsr1h,w,c
 35194  01C16C  6EDA               	movwf	fsr2h,c
 35195  01C16E  50DF               	movf	indf2,w,c
 35196  01C170  6EA5               	movwf	165,c	;volatile
 35197                           
 35198                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 35199                           ;stkvar	_timerVal @ sp[(0)+-2]
 35200  01C172  0EFE               	movlw	-2
 35201  01C174  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 35202                           
 35203                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 35204  01C17A  80A6               	bsf	166,0,c	;volatile
 35205                           
 35206                           ;mcc_generated_files/tmr3.c: 141:     }
 35207  01C17C  D00C               	goto	l1190
 35208  01C17E                     l11255:
 35209                           
 35210                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 35211                           ;stkvar	_timerVal @ sp[(0)+-2]
 35212  01C17E  0EFF               	movlw	255
 35213  01C180  24E1               	addwf	fsr1l,w,c
 35214  01C182  6ED9               	movwf	fsr2l,c
 35215  01C184  0EFF               	movlw	255
 35216  01C186  20E2               	addwfc	fsr1h,w,c
 35217  01C188  6EDA               	movwf	fsr2h,c
 35218  01C18A  50DF               	movf	indf2,w,c
 35219  01C18C  6EA5               	movwf	165,c	;volatile
 35220                           
 35221                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 35222                           ;stkvar	_timerVal @ sp[(0)+-2]
 35223  01C18E  0EFE               	movlw	-2
 35224  01C190  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 35225  01C196                     l1190:
 35226                           
 35227                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 35228  01C196  52E5               	movf	postdec1,f,c
 35229  01C198  52E5               	movf	postdec1,f,c
 35230  01C19A  0012               	return		;funcret
 35231  01C19C                     __end_of_TMR3_WriteTimer:
 35232                           	opt callstack 0
 35233                           
 35234 ;; *************** function _TMR3_CallBack *****************
 35235 ;; Defined at:
 35236 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 35237 ;; Parameters:    Size  Location     Type
 35238 ;;		None
 35239 ;; Auto vars:     Size  Location     Type
 35240 ;;		None
 35241 ;; Return value:  Size  Location     Type
 35242 ;;                  1  [STACK] void 
 35243 ;; Registers used:
 35244 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 35245 ;; Tracked objects:
 35246 ;;		On entry : 3F/0
 35247 ;;		On exit  : 0/0
 35248 ;;		Unchanged: 0/0
 35249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35254 ;;Total ram usage:        0 bytes
 35255 ;; Hardware stack levels used:    1
 35256 ;; Hardware stack levels required when called:   13
 35257 ;; This function calls:
 35258 ;;		Absolute function
 35259 ;;		_TMR3_DefaultInterruptHandler
 35260 ;;		_calc_bsoc
 35261 ;; This function is called by:
 35262 ;;		_TMR3_ISR
 35263 ;; This function uses a reentrant model
 35264 ;;
 35265                           
 35266                           	psect	text159
 35267  01C824                     __ptext159:
 35268                           	opt callstack 0
 35269  01C824                     _TMR3_CallBack:
 35270                           	opt callstack 2
 35271                           
 35272                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 35273                           
 35274                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35275                           ;incstack = 0
 35276  01C824  0100               	movlb	0	; () banked
 35277  01C826  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 35278  01C828  117D               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 35279  01C82A  117E               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 35280  01C82C  B4D8               	btfsc	status,2,c
 35281  01C82E  0012               	return	
 35282                           
 35283                           ; BSR set to: 0
 35284                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 35285  01C830  D801               	call	u1302_28
 35286  01C832  0012               	return	
 35287  01C834                     u1302_28:
 35288  01C834  0005               	push	
 35289  01C836  6EFA               	movwf	pclath,c
 35290  01C838  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 35291  01C83A  6EFD               	movwf	tosl,c
 35292  01C83C  517D               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 35293  01C83E  6EFE               	movwf	tosh,c
 35294  01C840  517E               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 35295  01C842  6EFF               	movwf	tosu,c
 35296  01C844  50FA               	movf	pclath,w,c
 35297  01C846  0012               	return		;indir
 35298  01C848                     __end_of_TMR3_CallBack:
 35299                           	opt callstack 0
 35300                           
 35301 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 35302 ;; Defined at:
 35303 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 35304 ;; Parameters:    Size  Location     Type
 35305 ;;		None
 35306 ;; Auto vars:     Size  Location     Type
 35307 ;;		None
 35308 ;; Return value:  Size  Location     Type
 35309 ;;                  1  [STACK] void 
 35310 ;; Registers used:
 35311 ;;		None
 35312 ;; Tracked objects:
 35313 ;;		On entry : 3F/0
 35314 ;;		On exit  : 0/0
 35315 ;;		Unchanged: 0/0
 35316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35321 ;;Total ram usage:        0 bytes
 35322 ;; Hardware stack levels used:    1
 35323 ;; Hardware stack levels required when called:    3
 35324 ;; This function calls:
 35325 ;;		Nothing
 35326 ;; This function is called by:
 35327 ;;		_TMR3_Initialize
 35328 ;;		_TMR3_CallBack
 35329 ;; This function uses a reentrant model
 35330 ;;
 35331                           
 35332                           	psect	text160
 35333  01CBA4                     __ptext160:
 35334                           	opt callstack 0
 35335  01CBA4                     _TMR3_DefaultInterruptHandler:
 35336                           	opt callstack 11
 35337                           
 35338                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35339                           
 35340                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35341                           ;incstack = 0
 35342  01CBA4  0012               	return		;funcret
 35343  01CBA6                     __end_of_TMR3_DefaultInterruptHandler:
 35344                           	opt callstack 0
 35345                           
 35346 ;; *************** function _calc_bsoc *****************
 35347 ;; Defined at:
 35348 ;;		line 39 in file "bsoc.c"
 35349 ;; Parameters:    Size  Location     Type
 35350 ;;		None
 35351 ;; Auto vars:     Size  Location     Type
 35352 ;;  adj             4  [STACK] float 
 35353 ;;  log_ptr         2  [STACK] PTR unsigned char 
 35354 ;;		 -> port_data(512), 
 35355 ;; Return value:  Size  Location     Type
 35356 ;;                  1  [STACK] void 
 35357 ;; Registers used:
 35358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 35359 ;; Tracked objects:
 35360 ;;		On entry : 3F/0
 35361 ;;		On exit  : 5/1
 35362 ;;		Unchanged: 0/0
 35363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35368 ;;Total ram usage:        0 bytes
 35369 ;; Hardware stack levels used:    1
 35370 ;; Hardware stack levels required when called:   12
 35371 ;; This function calls:
 35372 ;;		_StartTimer
 35373 ;;		___asfladd
 35374 ;;		___fldiv
 35375 ;;		___flge
 35376 ;;		___flmul
 35377 ;;		___flneg
 35378 ;;		___fltol
 35379 ;;		_fabsf
 35380 ;;		_get_ac_charger_relay
 35381 ;;		_port_data_dma_ptr
 35382 ;;		_send_port_data_dma
 35383 ;;		_sprintf
 35384 ;;		_strlen
 35385 ;; This function is called by:
 35386 ;;		_init_bsoc
 35387 ;;		_TMR3_CallBack
 35388 ;; This function uses a reentrant model
 35389 ;;
 35390                           
 35391                           	psect	text161
 35392  0133D2                     __ptext161:
 35393                           	opt callstack 0
 35394  0133D2                     _calc_bsoc:
 35395                           	opt callstack 0
 35396                           
 35397                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35398  0133D2  0E06               	movlw	6
 35399  0133D4  26E1               	addwf	fsr1l,f,c
 35400  0133D6  0E00               	movlw	0
 35401  0133D8  22E2               	addwfc	fsr1h,f,c
 35402                           
 35403                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 35404                           
 35405                           ;incstack = 0
 35406  0133DA  0E00               	movlw	0
 35407  0133DC  6E09               	movwf	(btemp+8)^0,c
 35408  0133DE  0E00               	movlw	0
 35409  0133E0  6E0A               	movwf	(btemp+9)^0,c
 35410  0133E2  0E80               	movlw	128
 35411  0133E4  6E0B               	movwf	(btemp+10)^0,c
 35412  0133E6  0E3F               	movlw	63
 35413  0133E8  6E0C               	movwf	(btemp+11)^0,c
 35414                           
 35415                           ;stkvar	_adj @ sp[(-6)+0]
 35416  0133EA  0EFA               	movlw	-6
 35417  0133EC  0060  F027  FFE3   	movff	btemp+8,plusw1
 35418  0133F2  0EFB               	movlw	-5
 35419  0133F4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 35420  0133FA  0EFC               	movlw	-4
 35421  0133FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35422  013402  0EFD               	movlw	-3
 35423  013404  0060  F033  FFE3   	movff	btemp+11,plusw1
 35424  01340A  82BE               	bsf	190,1,c	;volatile
 35425                           
 35426                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 35427  01340C  0E00               	movlw	0
 35428  01340E  6EE6               	movwf	postinc1,c
 35429  013410  0E00               	movlw	0
 35430  013412  6EE6               	movwf	postinc1,c
 35431  013414  0E61               	movlw	97
 35432  013416  6EE6               	movwf	postinc1,c
 35433  013418  0E45               	movlw	69
 35434  01341A  6EE6               	movwf	postinc1,c
 35435  01341C  EE21  F343         	lfsr	2,_C+68	;volatile
 35436  013420  006F FF7B FFE6     	movff	postinc2,postinc1
 35437  013426  006F FF7B FFE6     	movff	postinc2,postinc1
 35438  01342C  006F FF7B FFE6     	movff	postinc2,postinc1
 35439  013432  006F FF7B FFE6     	movff	postinc2,postinc1
 35440  013438  EC13  F0A7         	call	___fldiv	;wreg free
 35441  01343C  0060  F007  FFE6   	movff	btemp,postinc1
 35442  013442  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35443  013448  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35444  01344E  0060  F013  FFE6   	movff	btemp+3,postinc1
 35445  013454  0E8F               	movlw	low (_C+144)
 35446  013456  6EE6               	movwf	postinc1,c
 35447  013458  0E07               	movlw	high (_C+144)
 35448  01345A  6EE6               	movwf	postinc1,c
 35449  01345C  EC8C  F0DB         	call	___asfladd	;wreg free
 35450                           
 35451                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 35452  013460  EE21  F38F         	lfsr	2,_C+144	;volatile
 35453  013464  006F FF7B FFE6     	movff	postinc2,postinc1
 35454  01346A  006F FF7B FFE6     	movff	postinc2,postinc1
 35455  013470  006F FF7B FFE6     	movff	postinc2,postinc1
 35456  013476  006F FF7B FFE6     	movff	postinc2,postinc1
 35457  01347C  EE21  F38B         	lfsr	2,_C+140	;volatile
 35458  013480  006F FF7B FFE6     	movff	postinc2,postinc1
 35459  013486  006F FF7B FFE6     	movff	postinc2,postinc1
 35460  01348C  006F FF7B FFE6     	movff	postinc2,postinc1
 35461  013492  006F FF7B FFE6     	movff	postinc2,postinc1
 35462  013498  ECF4  F0CA         	call	___flge	;wreg free
 35463  01349C  B001               	btfsc	btemp& (0+255),0,c
 35464  01349E  D00E               	goto	l13433
 35465                           
 35466                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 35467  0134A0  EE21  F38B         	lfsr	2,_C+140	;volatile
 35468  0134A4  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 35469  0134AA  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 35470  0134B0  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 35471  0134B6  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 35472  0134BC                     l13433:
 35473                           
 35474                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 35475  0134BC  0ECD               	movlw	205
 35476  0134BE  6EE6               	movwf	postinc1,c
 35477  0134C0  0ECC               	movlw	204
 35478  0134C2  6EE6               	movwf	postinc1,c
 35479  0134C4  0ECC               	movlw	204
 35480  0134C6  6EE6               	movwf	postinc1,c
 35481  0134C8  0E3D               	movlw	61
 35482  0134CA  6EE6               	movwf	postinc1,c
 35483  0134CC  EE21  F38F         	lfsr	2,_C+144	;volatile
 35484  0134D0  006F FF7B FFE6     	movff	postinc2,postinc1
 35485  0134D6  006F FF7B FFE6     	movff	postinc2,postinc1
 35486  0134DC  006F FF7B FFE6     	movff	postinc2,postinc1
 35487  0134E2  006F FF7B FFE6     	movff	postinc2,postinc1
 35488  0134E8  ECF4  F0CA         	call	___flge	;wreg free
 35489  0134EC  B001               	btfsc	btemp& (0+255),0,c
 35490  0134EE  D010               	goto	l13437
 35491                           
 35492                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 35493  0134F0  0ECD               	movlw	205
 35494  0134F2  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 35495  0134F8  0ECC               	movlw	204
 35496  0134FA  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 35497  013500  0ECC               	movlw	204
 35498  013502  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 35499  013508  0E3D               	movlw	61
 35500  01350A  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 35501  013510                     l13437:
 35502                           
 35503                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 35504  013510  EE21  F343         	lfsr	2,_C+68	;volatile
 35505  013514  006F FF7B FFE6     	movff	postinc2,postinc1
 35506  01351A  006F FF7B FFE6     	movff	postinc2,postinc1
 35507  013520  006F FF7B FFE6     	movff	postinc2,postinc1
 35508  013526  006F FF7B FFE6     	movff	postinc2,postinc1
 35509  01352C  0E0A               	movlw	10
 35510  01352E  6EE6               	movwf	postinc1,c
 35511  013530  0ED7               	movlw	215
 35512  013532  6EE6               	movwf	postinc1,c
 35513  013534  0E23               	movlw	35
 35514  013536  6EE6               	movwf	postinc1,c
 35515  013538  0E3C               	movlw	60
 35516  01353A  6EE6               	movwf	postinc1,c
 35517  01353C  ECF4  F0CA         	call	___flge	;wreg free
 35518  013540  B001               	btfsc	btemp& (0+255),0,c
 35519  013542  D01C               	goto	l13441
 35520                           
 35521                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 35522  013544  0061  FEF4  F009   	movff	_C+190,btemp+8	;volatile
 35523  01354A  0061  FEF8  F00A   	movff	_C+191,btemp+9	;volatile
 35524  013550  0061  FEFC  F00B   	movff	_C+192,btemp+10	;volatile
 35525  013556  0061  FF00  F00C   	movff	_C+193,btemp+11	;volatile
 35526                           
 35527                           ;stkvar	_adj @ sp[(-6)+0]
 35528  01355C  0EFA               	movlw	-6
 35529  01355E  0060  F027  FFE3   	movff	btemp+8,plusw1
 35530  013564  0EFB               	movlw	-5
 35531  013566  0060  F02B  FFE3   	movff	btemp+9,plusw1
 35532  01356C  0EFC               	movlw	-4
 35533  01356E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35534  013574  0EFD               	movlw	-3
 35535  013576  0060  F033  FFE3   	movff	btemp+11,plusw1
 35536  01357C                     l13441:
 35537                           
 35538                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 35539  01357C  0E0A               	movlw	10
 35540  01357E  6EE6               	movwf	postinc1,c
 35541  013580  0ED7               	movlw	215
 35542  013582  6EE6               	movwf	postinc1,c
 35543  013584  0E23               	movlw	35
 35544  013586  6EE6               	movwf	postinc1,c
 35545  013588  0E3C               	movlw	60
 35546  01358A  6EE6               	movwf	postinc1,c
 35547  01358C  EE21  F343         	lfsr	2,_C+68	;volatile
 35548  013590  006F FF7B FFE6     	movff	postinc2,postinc1
 35549  013596  006F FF7B FFE6     	movff	postinc2,postinc1
 35550  01359C  006F FF7B FFE6     	movff	postinc2,postinc1
 35551  0135A2  006F FF7B FFE6     	movff	postinc2,postinc1
 35552  0135A8  ECF4  F0CA         	call	___flge	;wreg free
 35553  0135AC  B001               	btfsc	btemp& (0+255),0,c
 35554  0135AE  D01C               	goto	l13445
 35555                           
 35556                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 35557  0135B0  0061  FEE4  F009   	movff	_C+186,btemp+8	;volatile
 35558  0135B6  0061  FEE8  F00A   	movff	_C+187,btemp+9	;volatile
 35559  0135BC  0061  FEEC  F00B   	movff	_C+188,btemp+10	;volatile
 35560  0135C2  0061  FEF0  F00C   	movff	_C+189,btemp+11	;volatile
 35561                           
 35562                           ;stkvar	_adj @ sp[(-6)+0]
 35563  0135C8  0EFA               	movlw	-6
 35564  0135CA  0060  F027  FFE3   	movff	btemp+8,plusw1
 35565  0135D0  0EFB               	movlw	-5
 35566  0135D2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 35567  0135D8  0EFC               	movlw	-4
 35568  0135DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35569  0135E0  0EFD               	movlw	-3
 35570  0135E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 35571  0135E8                     l13445:
 35572                           
 35573                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 35574  0135E8  0E00               	movlw	0
 35575  0135EA  6EE6               	movwf	postinc1,c
 35576  0135EC  0E00               	movlw	0
 35577  0135EE  6EE6               	movwf	postinc1,c
 35578  0135F0  0E61               	movlw	97
 35579  0135F2  6EE6               	movwf	postinc1,c
 35580  0135F4  0E45               	movlw	69
 35581  0135F6  6EE6               	movwf	postinc1,c
 35582                           
 35583                           ;stkvar	_adj @ sp[(-10)+0]
 35584  0135F8  0EF6               	movlw	-10
 35585  0135FA  006F FF8F FFE6     	movff	plusw1,postinc1
 35586  013600  006F FF8F FFE6     	movff	plusw1,postinc1
 35587  013606  006F FF8F FFE6     	movff	plusw1,postinc1
 35588  01360C  006F FF8F FFE6     	movff	plusw1,postinc1
 35589  013612  EE21  F343         	lfsr	2,_C+68	;volatile
 35590  013616  006F FF7B FFE6     	movff	postinc2,postinc1
 35591  01361C  006F FF7B FFE6     	movff	postinc2,postinc1
 35592  013622  006F FF7B FFE6     	movff	postinc2,postinc1
 35593  013628  006F FF7B FFE6     	movff	postinc2,postinc1
 35594  01362E  EC20  F09F         	call	___flmul	;wreg free
 35595  013632  0060  F007  FFE6   	movff	btemp,postinc1
 35596  013638  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35597  01363E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35598  013644  0060  F013  FFE6   	movff	btemp+3,postinc1
 35599  01364A  EC13  F0A7         	call	___fldiv	;wreg free
 35600  01364E  0060  F007  FFE6   	movff	btemp,postinc1
 35601  013654  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35602  01365A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35603  013660  0060  F013  FFE6   	movff	btemp+3,postinc1
 35604  013666  0E8F               	movlw	low (_C+144)
 35605  013668  6EE6               	movwf	postinc1,c
 35606  01366A  0E07               	movlw	high (_C+144)
 35607  01366C  6EE6               	movwf	postinc1,c
 35608  01366E  EC8C  F0DB         	call	___asfladd	;wreg free
 35609                           
 35610                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 35611  013672  EE21  F38F         	lfsr	2,_C+144	;volatile
 35612  013676  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 35613  01367C  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 35614  013682  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 35615  013688  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 35616                           
 35617                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 35618  01368E  EE21  F39B         	lfsr	2,_C+156	;volatile
 35619  013692  006F FF7B FFE6     	movff	postinc2,postinc1
 35620  013698  006F FF7B FFE6     	movff	postinc2,postinc1
 35621  01369E  006F FF7B FFE6     	movff	postinc2,postinc1
 35622  0136A4  006F FF7B FFE6     	movff	postinc2,postinc1
 35623  0136AA  EE21  F38B         	lfsr	2,_C+140	;volatile
 35624  0136AE  006F FF7B FFE6     	movff	postinc2,postinc1
 35625  0136B4  006F FF7B FFE6     	movff	postinc2,postinc1
 35626  0136BA  006F FF7B FFE6     	movff	postinc2,postinc1
 35627  0136C0  006F FF7B FFE6     	movff	postinc2,postinc1
 35628  0136C6  ECF4  F0CA         	call	___flge	;wreg free
 35629  0136CA  B001               	btfsc	btemp& (0+255),0,c
 35630  0136CC  D00E               	goto	l13453
 35631                           
 35632                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 35633  0136CE  EE21  F38B         	lfsr	2,_C+140	;volatile
 35634  0136D2  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 35635  0136D8  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 35636  0136DE  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 35637  0136E4  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 35638  0136EA                     l13453:
 35639                           
 35640                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 35641  0136EA  0ECD               	movlw	205
 35642  0136EC  6EE6               	movwf	postinc1,c
 35643  0136EE  0ECC               	movlw	204
 35644  0136F0  6EE6               	movwf	postinc1,c
 35645  0136F2  0ECC               	movlw	204
 35646  0136F4  6EE6               	movwf	postinc1,c
 35647  0136F6  0E3D               	movlw	61
 35648  0136F8  6EE6               	movwf	postinc1,c
 35649  0136FA  EE21  F39B         	lfsr	2,_C+156	;volatile
 35650  0136FE  006F FF7B FFE6     	movff	postinc2,postinc1
 35651  013704  006F FF7B FFE6     	movff	postinc2,postinc1
 35652  01370A  006F FF7B FFE6     	movff	postinc2,postinc1
 35653  013710  006F FF7B FFE6     	movff	postinc2,postinc1
 35654  013716  ECF4  F0CA         	call	___flge	;wreg free
 35655  01371A  B001               	btfsc	btemp& (0+255),0,c
 35656  01371C  D010               	goto	l13457
 35657                           
 35658                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 35659  01371E  0ECD               	movlw	205
 35660  013720  006F FFA0  F79B    	movff	wreg,_C+156	;volatile
 35661  013726  0ECC               	movlw	204
 35662  013728  006F FFA0  F79C    	movff	wreg,_C+157	;volatile
 35663  01372E  0ECC               	movlw	204
 35664  013730  006F FFA0  F79D    	movff	wreg,_C+158	;volatile
 35665  013736  0E3D               	movlw	61
 35666  013738  006F FFA0  F79E    	movff	wreg,_C+159	;volatile
 35667  01373E                     l13457:
 35668                           
 35669                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 35670  01373E  0E00               	movlw	0
 35671  013740  6EE6               	movwf	postinc1,c
 35672  013742  0E00               	movlw	0
 35673  013744  6EE6               	movwf	postinc1,c
 35674  013746  0E61               	movlw	97
 35675  013748  6EE6               	movwf	postinc1,c
 35676  01374A  0E45               	movlw	69
 35677  01374C  6EE6               	movwf	postinc1,c
 35678  01374E  EE21  F347         	lfsr	2,_C+72	;volatile
 35679  013752  006F FF7B FFE6     	movff	postinc2,postinc1
 35680  013758  006F FF7B FFE6     	movff	postinc2,postinc1
 35681  01375E  006F FF7B FFE6     	movff	postinc2,postinc1
 35682  013764  006F FF7B FFE6     	movff	postinc2,postinc1
 35683  01376A  EC13  F0A7         	call	___fldiv	;wreg free
 35684  01376E  0060  F007  FFE6   	movff	btemp,postinc1
 35685  013774  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35686  01377A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35687  013780  0060  F013  FFE6   	movff	btemp+3,postinc1
 35688  013786  0E93               	movlw	low (_C+148)
 35689  013788  6EE6               	movwf	postinc1,c
 35690  01378A  0E07               	movlw	high (_C+148)
 35691  01378C  6EE6               	movwf	postinc1,c
 35692  01378E  EC8C  F0DB         	call	___asfladd	;wreg free
 35693                           
 35694                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 35695  013792  0E00               	movlw	0
 35696  013794  6EE6               	movwf	postinc1,c
 35697  013796  0E00               	movlw	0
 35698  013798  6EE6               	movwf	postinc1,c
 35699  01379A  0E61               	movlw	97
 35700  01379C  6EE6               	movwf	postinc1,c
 35701  01379E  0E45               	movlw	69
 35702  0137A0  6EE6               	movwf	postinc1,c
 35703  0137A2  EE21  F37B         	lfsr	2,_C+124	;volatile
 35704  0137A6  006F FF7B FFE6     	movff	postinc2,postinc1
 35705  0137AC  006F FF7B FFE6     	movff	postinc2,postinc1
 35706  0137B2  006F FF7B FFE6     	movff	postinc2,postinc1
 35707  0137B8  006F FF7B FFE6     	movff	postinc2,postinc1
 35708  0137BE  EC13  F0A7         	call	___fldiv	;wreg free
 35709  0137C2  0060  F007  FFE6   	movff	btemp,postinc1
 35710  0137C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35711  0137CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35712  0137D4  0060  F013  FFE6   	movff	btemp+3,postinc1
 35713  0137DA  0EA7               	movlw	low (_C+168)
 35714  0137DC  6EE6               	movwf	postinc1,c
 35715  0137DE  0E07               	movlw	high (_C+168)
 35716  0137E0  6EE6               	movwf	postinc1,c
 35717  0137E2  EC8C  F0DB         	call	___asfladd	;wreg free
 35718                           
 35719                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 35720  0137E6  0E00               	movlw	0
 35721  0137E8  6EE6               	movwf	postinc1,c
 35722  0137EA  0E00               	movlw	0
 35723  0137EC  6EE6               	movwf	postinc1,c
 35724  0137EE  0E61               	movlw	97
 35725  0137F0  6EE6               	movwf	postinc1,c
 35726  0137F2  0E45               	movlw	69
 35727  0137F4  6EE6               	movwf	postinc1,c
 35728  0137F6  EE21  F377         	lfsr	2,_C+120	;volatile
 35729  0137FA  006F FF7B FFE6     	movff	postinc2,postinc1
 35730  013800  006F FF7B FFE6     	movff	postinc2,postinc1
 35731  013806  006F FF7B FFE6     	movff	postinc2,postinc1
 35732  01380C  006F FF7B FFE6     	movff	postinc2,postinc1
 35733  013812  EC13  F0A7         	call	___fldiv	;wreg free
 35734  013816  0060  F007  FFE6   	movff	btemp,postinc1
 35735  01381C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35736  013822  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35737  013828  0060  F013  FFE6   	movff	btemp+3,postinc1
 35738  01382E  0EAB               	movlw	low (_C+172)
 35739  013830  6EE6               	movwf	postinc1,c
 35740  013832  0E07               	movlw	high (_C+172)
 35741  013834  6EE6               	movwf	postinc1,c
 35742  013836  EC8C  F0DB         	call	___asfladd	;wreg free
 35743                           
 35744                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 35745  01383A  0E00               	movlw	0
 35746  01383C  6EE6               	movwf	postinc1,c
 35747  01383E  0E00               	movlw	0
 35748  013840  6EE6               	movwf	postinc1,c
 35749  013842  0E61               	movlw	97
 35750  013844  6EE6               	movwf	postinc1,c
 35751  013846  0E45               	movlw	69
 35752  013848  6EE6               	movwf	postinc1,c
 35753  01384A  EE21  F373         	lfsr	2,_C+116	;volatile
 35754  01384E  006F FF7B FFE6     	movff	postinc2,postinc1
 35755  013854  006F FF7B FFE6     	movff	postinc2,postinc1
 35756  01385A  006F FF7B FFE6     	movff	postinc2,postinc1
 35757  013860  006F FF7B FFE6     	movff	postinc2,postinc1
 35758  013866  EC13  F0A7         	call	___fldiv	;wreg free
 35759  01386A  0060  F007  FFE6   	movff	btemp,postinc1
 35760  013870  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35761  013876  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35762  01387C  0060  F013  FFE6   	movff	btemp+3,postinc1
 35763  013882  0EAF               	movlw	low (_C+176)
 35764  013884  6EE6               	movwf	postinc1,c
 35765  013886  0E07               	movlw	high (_C+176)
 35766  013888  6EE6               	movwf	postinc1,c
 35767  01388A  EC8C  F0DB         	call	___asfladd	;wreg free
 35768                           
 35769                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 35770  01388E  EE21  F37F         	lfsr	2,_C+128	;volatile
 35771  013892  006F FF7B FFE6     	movff	postinc2,postinc1
 35772  013898  006F FF7B FFE6     	movff	postinc2,postinc1
 35773  01389E  006F FF7B FFE6     	movff	postinc2,postinc1
 35774  0138A4  006F FF7B FFE6     	movff	postinc2,postinc1
 35775  0138AA  0E00               	movlw	0
 35776  0138AC  6EE6               	movwf	postinc1,c
 35777  0138AE  0E00               	movlw	0
 35778  0138B0  6EE6               	movwf	postinc1,c
 35779  0138B2  0E00               	movlw	0
 35780  0138B4  6EE6               	movwf	postinc1,c
 35781  0138B6  0E00               	movlw	0
 35782  0138B8  6EE6               	movwf	postinc1,c
 35783  0138BA  ECF4  F0CA         	call	___flge	;wreg free
 35784  0138BE  B001               	btfsc	btemp& (0+255),0,c
 35785  0138C0  D02A               	goto	l13463
 35786                           
 35787                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 35788  0138C2  0E00               	movlw	0
 35789  0138C4  6EE6               	movwf	postinc1,c
 35790  0138C6  0E00               	movlw	0
 35791  0138C8  6EE6               	movwf	postinc1,c
 35792  0138CA  0E61               	movlw	97
 35793  0138CC  6EE6               	movwf	postinc1,c
 35794  0138CE  0E45               	movlw	69
 35795  0138D0  6EE6               	movwf	postinc1,c
 35796  0138D2  EE21  F37F         	lfsr	2,_C+128	;volatile
 35797  0138D6  006F FF7B FFE6     	movff	postinc2,postinc1
 35798  0138DC  006F FF7B FFE6     	movff	postinc2,postinc1
 35799  0138E2  006F FF7B FFE6     	movff	postinc2,postinc1
 35800  0138E8  006F FF7B FFE6     	movff	postinc2,postinc1
 35801  0138EE  EC13  F0A7         	call	___fldiv	;wreg free
 35802  0138F2  0060  F007  FFE6   	movff	btemp,postinc1
 35803  0138F8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35804  0138FE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35805  013904  0060  F013  FFE6   	movff	btemp+3,postinc1
 35806  01390A  0E9F               	movlw	low (_C+160)
 35807  01390C  6EE6               	movwf	postinc1,c
 35808  01390E  0E07               	movlw	high (_C+160)
 35809  013910  6EE6               	movwf	postinc1,c
 35810  013912  EC8C  F0DB         	call	___asfladd	;wreg free
 35811  013916                     l13463:
 35812                           
 35813                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 35814  013916  EE21  F37F         	lfsr	2,_C+128	;volatile
 35815  01391A  0E03               	movlw	3
 35816  01391C  AEDB               	btfss	plusw2,7,c
 35817  01391E  D038               	goto	l13467
 35818                           
 35819                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 35820  013920  0E00               	movlw	0
 35821  013922  6EE6               	movwf	postinc1,c
 35822  013924  0E00               	movlw	0
 35823  013926  6EE6               	movwf	postinc1,c
 35824  013928  0E61               	movlw	97
 35825  01392A  6EE6               	movwf	postinc1,c
 35826  01392C  0E45               	movlw	69
 35827  01392E  6EE6               	movwf	postinc1,c
 35828  013930  EE21  F37F         	lfsr	2,_C+128	;volatile
 35829  013934  006F FF7B FFE6     	movff	postinc2,postinc1
 35830  01393A  006F FF7B FFE6     	movff	postinc2,postinc1
 35831  013940  006F FF7B FFE6     	movff	postinc2,postinc1
 35832  013946  006F FF7B FFE6     	movff	postinc2,postinc1
 35833  01394C  EC13  F0A7         	call	___fldiv	;wreg free
 35834  013950  0060  F007  FFE6   	movff	btemp,postinc1
 35835  013956  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35836  01395C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35837  013962  0060  F013  FFE6   	movff	btemp+3,postinc1
 35838  013968  EC30  F0D7         	call	_fabsf	;wreg free
 35839  01396C  0060  F007  FFE6   	movff	btemp,postinc1
 35840  013972  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35841  013978  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35842  01397E  0060  F013  FFE6   	movff	btemp+3,postinc1
 35843  013984  0EA3               	movlw	low (_C+164)
 35844  013986  6EE6               	movwf	postinc1,c
 35845  013988  0E07               	movlw	high (_C+164)
 35846  01398A  6EE6               	movwf	postinc1,c
 35847  01398C  EC8C  F0DB         	call	___asfladd	;wreg free
 35848  013990                     l13467:
 35849                           
 35850                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 35851  013990  0E00               	movlw	0
 35852  013992  6EE6               	movwf	postinc1,c
 35853  013994  0E00               	movlw	0
 35854  013996  6EE6               	movwf	postinc1,c
 35855  013998  0EC8               	movlw	200
 35856  01399A  6EE6               	movwf	postinc1,c
 35857  01399C  0E42               	movlw	66
 35858  01399E  6EE6               	movwf	postinc1,c
 35859  0139A0  EE21  F38B         	lfsr	2,_C+140	;volatile
 35860  0139A4  006F FF7B FFE6     	movff	postinc2,postinc1
 35861  0139AA  006F FF7B FFE6     	movff	postinc2,postinc1
 35862  0139B0  006F FF7B FFE6     	movff	postinc2,postinc1
 35863  0139B6  006F FF7B FFE6     	movff	postinc2,postinc1
 35864  0139BC  EE21  F39B         	lfsr	2,_C+156	;volatile
 35865  0139C0  006F FF7B FFE6     	movff	postinc2,postinc1
 35866  0139C6  006F FF7B FFE6     	movff	postinc2,postinc1
 35867  0139CC  006F FF7B FFE6     	movff	postinc2,postinc1
 35868  0139D2  006F FF7B FFE6     	movff	postinc2,postinc1
 35869  0139D8  EC13  F0A7         	call	___fldiv	;wreg free
 35870  0139DC  0060  F007  FFE6   	movff	btemp,postinc1
 35871  0139E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35872  0139E8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35873  0139EE  0060  F013  FFE6   	movff	btemp+3,postinc1
 35874  0139F4  EC20  F09F         	call	___flmul	;wreg free
 35875  0139F8  0060  F007  FFE6   	movff	btemp,postinc1
 35876  0139FE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35877  013A04  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35878  013A0A  0060  F013  FFE6   	movff	btemp+3,postinc1
 35879  013A10  EC3B  F0CA         	call	___fltol	;wreg free
 35880  013A14  0060  F004  F00B   	movff	btemp,btemp+10
 35881  013A1A  0060  F008  F00C   	movff	btemp+1,btemp+11
 35882  013A20  0E01               	movlw	1
 35883  013A22  260B               	addwf	(btemp+10)^0,f,c
 35884  013A24  0E00               	movlw	0
 35885  013A26  220C               	addwfc	(btemp+11)^0,f,c
 35886  013A28  0060  F02C  F7B5   	movff	btemp+10,_C+182	;volatile
 35887  013A2E  0060  F030  F7B6   	movff	btemp+11,_C+183	;volatile
 35888                           
 35889                           ;bsoc.c: 76:  if (C.soc > 100)
 35890  013A34  EE21  F3B5         	lfsr	2,_C+182	;volatile
 35891  013A38  0E01               	movlw	1
 35892  013A3A  50DB               	movf	plusw2,w,c
 35893  013A3C  E104               	bnz	u1295_20
 35894  013A3E  0E65               	movlw	101
 35895  013A40  5CDE               	subwf	postinc2,w,c
 35896  013A42  A0D8               	btfss	status,0,c
 35897  013A44  D008               	goto	l13473
 35898  013A46                     u1295_20:
 35899                           
 35900                           ;bsoc.c: 77:   C.soc = 100;
 35901  013A46  0E64               	movlw	100
 35902  013A48  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
 35903  013A4E  0E00               	movlw	0
 35904  013A50  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
 35905  013A56                     l13473:
 35906                           
 35907                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 35908  013A56  EE21  F343         	lfsr	2,_C+68	;volatile
 35909  013A5A  0E03               	movlw	3
 35910  013A5C  AEDB               	btfss	plusw2,7,c
 35911  013A5E  D047               	goto	l2156
 35912                           
 35913                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 35914  013A60  EE21  F343         	lfsr	2,_C+68	;volatile
 35915  013A64  006F FF7B FFE6     	movff	postinc2,postinc1
 35916  013A6A  006F FF7B FFE6     	movff	postinc2,postinc1
 35917  013A70  006F FF7B FFE6     	movff	postinc2,postinc1
 35918  013A76  006F FF7B FFE6     	movff	postinc2,postinc1
 35919  013A7C  EE21  F39B         	lfsr	2,_C+156	;volatile
 35920  013A80  006F FF7B FFE6     	movff	postinc2,postinc1
 35921  013A86  006F FF7B FFE6     	movff	postinc2,postinc1
 35922  013A8C  006F FF7B FFE6     	movff	postinc2,postinc1
 35923  013A92  006F FF7B FFE6     	movff	postinc2,postinc1
 35924  013A98  EC13  F0A7         	call	___fldiv	;wreg free
 35925  013A9C  0060  F007  FFE6   	movff	btemp,postinc1
 35926  013AA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35927  013AA8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35928  013AAE  0060  F013  FFE6   	movff	btemp+3,postinc1
 35929  013AB4  EC15  F0DF         	call	___flneg	;wreg free
 35930  013AB8  0060  F007  FFE6   	movff	btemp,postinc1
 35931  013ABE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35932  013AC4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35933  013ACA  0060  F013  FFE6   	movff	btemp+3,postinc1
 35934  013AD0  EC3B  F0CA         	call	___fltol	;wreg free
 35935  013AD4  0060  F004  F00B   	movff	btemp,btemp+10
 35936  013ADA  0060  F008  F00C   	movff	btemp+1,btemp+11
 35937  013AE0  0060  F02C  F7B3   	movff	btemp+10,_C+180	;volatile
 35938  013AE6  0060  F030  F7B4   	movff	btemp+11,_C+181	;volatile
 35939                           
 35940                           ;bsoc.c: 81:  } else {
 35941  013AEC  D008               	goto	l13477
 35942  013AEE                     l2156:
 35943                           
 35944                           ;bsoc.c: 82:   C.runtime = 99;
 35945  013AEE  0E63               	movlw	99
 35946  013AF0  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 35947  013AF6  0E00               	movlw	0
 35948  013AF8  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 35949  013AFE                     l13477:
 35950                           
 35951                           ;bsoc.c: 84:  if (C.runtime > 99)
 35952  013AFE  EE21  F3B3         	lfsr	2,_C+180	;volatile
 35953  013B02  0E01               	movlw	1
 35954  013B04  50DB               	movf	plusw2,w,c
 35955  013B06  E104               	bnz	u1297_20
 35956  013B08  0E64               	movlw	100
 35957  013B0A  5CDE               	subwf	postinc2,w,c
 35958  013B0C  A0D8               	btfss	status,0,c
 35959  013B0E  D008               	goto	l13481
 35960  013B10                     u1297_20:
 35961                           
 35962                           ;bsoc.c: 85:   C.runtime = 99;
 35963  013B10  0E63               	movlw	99
 35964  013B12  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 35965  013B18  0E00               	movlw	0
 35966  013B1A  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 35967  013B20                     l13481:
 35968                           
 35969                           ;bsoc.c: 87:  V.lowint_count++;
 35970  013B20  0E01               	movlw	1
 35971  013B22  0101               	movlb	1	; () banked
 35972  013B24  27BB               	addwf	(_V+180)& (0+255),f,b	;volatile
 35973  013B26  0E00               	movlw	0
 35974  013B28  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 35975  013B2A  23BD               	addwfc	(_V+182)& (0+255),f,b	;volatile
 35976  013B2C  23BE               	addwfc	(_V+183)& (0+255),f,b	;volatile
 35977                           
 35978                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 35979  013B2E  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 35980  013B30  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 35981  013B32  A4D8               	btfss	status,2,c
 35982  013B34  D177               	goto	l13493
 35983                           
 35984                           ; BSR set to: 1
 35985  013B36  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 35986  013B38  B4D8               	btfsc	status,2,c
 35987  013B3A  D174               	goto	l13493
 35988                           
 35989                           ; BSR set to: 1
 35990                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 35991  013B3C  EC96  F0E5         	call	_port_data_dma_ptr	;wreg free
 35992                           
 35993                           ;stkvar	_log_ptr @ sp[(-6)+4]
 35994  013B40  0EFF               	movlw	-1
 35995  013B42  0060  F00B  FFE3   	movff	btemp+1,plusw1
 35996  013B48  0EFE               	movlw	-2
 35997  013B4A  0060  F007  FFE3   	movff	btemp,plusw1
 35998                           
 35999                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 36000  013B50  EE21  F3B9         	lfsr	2,_C+186	;volatile
 36001  013B54  006F FF7B FFE6     	movff	postinc2,postinc1
 36002  013B5A  006F FF7B FFE6     	movff	postinc2,postinc1
 36003  013B60  006F FF7B FFE6     	movff	postinc2,postinc1
 36004  013B66  006F FF7B FFE6     	movff	postinc2,postinc1
 36005  013B6C  EE21  F3BD         	lfsr	2,_C+190	;volatile
 36006  013B70  006F FF7B FFE6     	movff	postinc2,postinc1
 36007  013B76  006F FF7B FFE6     	movff	postinc2,postinc1
 36008  013B7C  006F FF7B FFE6     	movff	postinc2,postinc1
 36009  013B82  006F FF7B FFE6     	movff	postinc2,postinc1
 36010  013B88  EE21  F39B         	lfsr	2,_C+156	;volatile
 36011  013B8C  006F FF7B FFE6     	movff	postinc2,postinc1
 36012  013B92  006F FF7B FFE6     	movff	postinc2,postinc1
 36013  013B98  006F FF7B FFE6     	movff	postinc2,postinc1
 36014  013B9E  006F FF7B FFE6     	movff	postinc2,postinc1
 36015  013BA4  EE22  F026         	lfsr	2,_C+295	;volatile
 36016  013BA8  006F FF7B FFE6     	movff	postinc2,postinc1
 36017  013BAE  006F FF7B FFE6     	movff	postinc2,postinc1
 36018  013BB4  006F FF7B FFE6     	movff	postinc2,postinc1
 36019  013BBA  006F FF7B FFE6     	movff	postinc2,postinc1
 36020  013BC0  EE22  F022         	lfsr	2,_C+291	;volatile
 36021  013BC4  006F FF7B FFE6     	movff	postinc2,postinc1
 36022  013BCA  006F FF7B FFE6     	movff	postinc2,postinc1
 36023  013BD0  006F FF7B FFE6     	movff	postinc2,postinc1
 36024  013BD6  006F FF7B FFE6     	movff	postinc2,postinc1
 36025  013BDC  EE22  F021         	lfsr	2,_C+290	;volatile
 36026  013BE0  50DF               	movf	indf2,w,c
 36027  013BE2  6EE6               	movwf	postinc1,c
 36028  013BE4  0E00               	movlw	0
 36029  013BE6  6EE6               	movwf	postinc1,c
 36030  013BE8  EC7B  F0E5         	call	_get_ac_charger_relay	;wreg free
 36031  013BEC  5001               	movf	btemp^0,w,c
 36032  013BEE  6EE6               	movwf	postinc1,c
 36033  013BF0  0E00               	movlw	0
 36034  013BF2  6EE6               	movwf	postinc1,c
 36035  013BF4  EE21  F367         	lfsr	2,_C+104	;volatile
 36036  013BF8  006F FF7B FFE6     	movff	postinc2,postinc1
 36037  013BFE  006F FF7B FFE6     	movff	postinc2,postinc1
 36038  013C04  006F FF7B FFE6     	movff	postinc2,postinc1
 36039  013C0A  006F FF7B FFE6     	movff	postinc2,postinc1
 36040  013C10  EE21  F387         	lfsr	2,_C+136	;volatile
 36041  013C14  006F FF7B FFE6     	movff	postinc2,postinc1
 36042  013C1A  006F FF7B FFE6     	movff	postinc2,postinc1
 36043  013C20  006F FF7B FFE6     	movff	postinc2,postinc1
 36044  013C26  006F FF7B FFE6     	movff	postinc2,postinc1
 36045  013C2C  EE21  F3B3         	lfsr	2,_C+180	;volatile
 36046  013C30  006F FF78  F00B    	movff	postinc2,btemp+10
 36047  013C36  006F FF74  F00C    	movff	postdec2,btemp+11
 36048  013C3C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 36049  013C42  0060  F033  FFE6   	movff	btemp+11,postinc1
 36050  013C48  EE21  F3B5         	lfsr	2,_C+182	;volatile
 36051  013C4C  006F FF78  F00B    	movff	postinc2,btemp+10
 36052  013C52  006F FF74  F00C    	movff	postdec2,btemp+11
 36053  013C58  0060  F02F  FFE6   	movff	btemp+10,postinc1
 36054  013C5E  0060  F033  FFE6   	movff	btemp+11,postinc1
 36055  013C64  EE21  F393         	lfsr	2,_C+148	;volatile
 36056  013C68  006F FF7B FFE6     	movff	postinc2,postinc1
 36057  013C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 36058  013C74  006F FF7B FFE6     	movff	postinc2,postinc1
 36059  013C7A  006F FF7B FFE6     	movff	postinc2,postinc1
 36060  013C80  EE21  F38F         	lfsr	2,_C+144	;volatile
 36061  013C84  006F FF7B FFE6     	movff	postinc2,postinc1
 36062  013C8A  006F FF7B FFE6     	movff	postinc2,postinc1
 36063  013C90  006F FF7B FFE6     	movff	postinc2,postinc1
 36064  013C96  006F FF7B FFE6     	movff	postinc2,postinc1
 36065  013C9C  EE21  F377         	lfsr	2,_C+120	;volatile
 36066  013CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 36067  013CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 36068  013CAC  006F FF7B FFE6     	movff	postinc2,postinc1
 36069  013CB2  006F FF7B FFE6     	movff	postinc2,postinc1
 36070  013CB8  EE21  F373         	lfsr	2,_C+116	;volatile
 36071  013CBC  006F FF7B FFE6     	movff	postinc2,postinc1
 36072  013CC2  006F FF7B FFE6     	movff	postinc2,postinc1
 36073  013CC8  006F FF7B FFE6     	movff	postinc2,postinc1
 36074  013CCE  006F FF7B FFE6     	movff	postinc2,postinc1
 36075  013CD4  EE21  F37B         	lfsr	2,_C+124	;volatile
 36076  013CD8  006F FF7B FFE6     	movff	postinc2,postinc1
 36077  013CDE  006F FF7B FFE6     	movff	postinc2,postinc1
 36078  013CE4  006F FF7B FFE6     	movff	postinc2,postinc1
 36079  013CEA  006F FF7B FFE6     	movff	postinc2,postinc1
 36080  013CF0  EE21  F37F         	lfsr	2,_C+128	;volatile
 36081  013CF4  006F FF7B FFE6     	movff	postinc2,postinc1
 36082  013CFA  006F FF7B FFE6     	movff	postinc2,postinc1
 36083  013D00  006F FF7B FFE6     	movff	postinc2,postinc1
 36084  013D06  006F FF7B FFE6     	movff	postinc2,postinc1
 36085  013D0C  EE21  F347         	lfsr	2,_C+72	;volatile
 36086  013D10  006F FF7B FFE6     	movff	postinc2,postinc1
 36087  013D16  006F FF7B FFE6     	movff	postinc2,postinc1
 36088  013D1C  006F FF7B FFE6     	movff	postinc2,postinc1
 36089  013D22  006F FF7B FFE6     	movff	postinc2,postinc1
 36090  013D28  EE21  F343         	lfsr	2,_C+68	;volatile
 36091  013D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 36092  013D32  006F FF7B FFE6     	movff	postinc2,postinc1
 36093  013D38  006F FF7B FFE6     	movff	postinc2,postinc1
 36094  013D3E  006F FF7B FFE6     	movff	postinc2,postinc1
 36095  013D44  EE21  F363         	lfsr	2,_C+100	;volatile
 36096  013D48  006F FF7B FFE6     	movff	postinc2,postinc1
 36097  013D4E  006F FF7B FFE6     	movff	postinc2,postinc1
 36098  013D54  006F FF7B FFE6     	movff	postinc2,postinc1
 36099  013D5A  006F FF7B FFE6     	movff	postinc2,postinc1
 36100  013D60  EE21  F34B         	lfsr	2,_C+76	;volatile
 36101  013D64  006F FF7B FFE6     	movff	postinc2,postinc1
 36102  013D6A  006F FF7B FFE6     	movff	postinc2,postinc1
 36103  013D70  006F FF7B FFE6     	movff	postinc2,postinc1
 36104  013D76  006F FF7B FFE6     	movff	postinc2,postinc1
 36105  013D7C  EE21  F34F         	lfsr	2,_C+80	;volatile
 36106  013D80  006F FF7B FFE6     	movff	postinc2,postinc1
 36107  013D86  006F FF7B FFE6     	movff	postinc2,postinc1
 36108  013D8C  006F FF7B FFE6     	movff	postinc2,postinc1
 36109  013D92  006F FF7B FFE6     	movff	postinc2,postinc1
 36110  013D98  EE21  F353         	lfsr	2,_C+84	;volatile
 36111  013D9C  006F FF7B FFE6     	movff	postinc2,postinc1
 36112  013DA2  006F FF7B FFE6     	movff	postinc2,postinc1
 36113  013DA8  006F FF7B FFE6     	movff	postinc2,postinc1
 36114  013DAE  006F FF7B FFE6     	movff	postinc2,postinc1
 36115  013DB4  0060  F623  FFE6   	movff	_V+129,postinc1
 36116  013DBA  0060  F627  FFE6   	movff	_V+130,postinc1
 36117  013DC0  0060  F62B  FFE6   	movff	_V+131,postinc1
 36118  013DC6  0060  F62F  FFE6   	movff	_V+132,postinc1
 36119  013DCC  0E32               	movlw	50
 36120  013DCE  6EE6               	movwf	postinc1,c
 36121  013DD0  0E00               	movlw	0
 36122  013DD2  6EE6               	movwf	postinc1,c
 36123  013DD4  0EF9               	movlw	low STR_78
 36124  013DD6  6EE6               	movwf	postinc1,c
 36125  013DD8  0EFA               	movlw	high STR_78
 36126  013DDA  6EE6               	movwf	postinc1,c
 36127                           
 36128                           ;stkvar	_log_ptr @ sp[(-98)+4]
 36129  013DDC  0EA2               	movlw	-94
 36130  013DDE  006F FF8F FFE6     	movff	plusw1,postinc1
 36131  013DE4  006F FF8F FFE6     	movff	plusw1,postinc1
 36132  013DEA  0E5E               	movlw	94
 36133  013DEC  6EE6               	movwf	postinc1,c
 36134  013DEE  EC2E  F0D2         	call	_sprintf	;wreg free
 36135                           
 36136                           ; BSR set to: 0
 36137                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 36138  013DF2  0E7D               	movlw	125
 36139  013DF4  6EE6               	movwf	postinc1,c
 36140  013DF6  0E00               	movlw	0
 36141  013DF8  6EE6               	movwf	postinc1,c
 36142  013DFA  0E0A               	movlw	10
 36143  013DFC  6EE6               	movwf	postinc1,c
 36144  013DFE  EC6E  F0E0         	call	_StartTimer	;wreg free
 36145                           
 36146                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 36147                           ;stkvar	_log_ptr @ sp[(-6)+4]
 36148  013E02  0EFE               	movlw	-2
 36149  013E04  006F FF8F FFE6     	movff	plusw1,postinc1
 36150  013E0A  006F FF8F FFE6     	movff	plusw1,postinc1
 36151  013E10  ECD9  F0D8         	call	_strlen	;wreg free
 36152  013E14  0060  F007  FFE6   	movff	btemp,postinc1
 36153  013E1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36154  013E20  EC7B  F0DE         	call	_send_port_data_dma	;wreg free
 36155  013E24                     l13493:
 36156                           
 36157                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 36158  013E24  0E09               	movlw	9
 36159  013E26  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 36160  013E28  D001               	goto	l2160
 36161                           
 36162                           ;bsoc.c: 102:   log_update_wait = 0;
 36163  013E2A  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 36164  013E2C                     l2160:
 36165                           
 36166                           ;bsoc.c: 104:  C.update = 0;
 36167  013E2C  0E00               	movlw	0
 36168  013E2E  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 36169                           
 36170                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 36171  013E34  92BE               	bcf	190,1,c	;volatile
 36172                           
 36173                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 36174  013E36  0EFA               	movlw	250
 36175  013E38  26E1               	addwf	fsr1l,f,c
 36176  013E3A  0EFF               	movlw	255
 36177  013E3C  22E2               	addwfc	fsr1h,f,c
 36178  013E3E  0012               	return		;funcret
 36179  013E40                     __end_of_calc_bsoc:
 36180                           	opt callstack 0
 36181                           
 36182 ;; *************** function _send_port_data_dma *****************
 36183 ;; Defined at:
 36184 ;;		line 398 in file "eadog.c"
 36185 ;; Parameters:    Size  Location     Type
 36186 ;;  dsize           2  [STACK] unsigned short 
 36187 ;; Auto vars:     Size  Location     Type
 36188 ;;		None
 36189 ;; Return value:  Size  Location     Type
 36190 ;;                  1  [STACK] void 
 36191 ;; Registers used:
 36192 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 36193 ;; Tracked objects:
 36194 ;;		On entry : 0/0
 36195 ;;		On exit  : 3F/3B
 36196 ;;		Unchanged: 0/0
 36197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36202 ;;Total ram usage:        0 bytes
 36203 ;; Hardware stack levels used:    1
 36204 ;; Hardware stack levels required when called:    3
 36205 ;; This function calls:
 36206 ;;		Nothing
 36207 ;; This function is called by:
 36208 ;;		_calc_bsoc
 36209 ;; This function uses a reentrant model
 36210 ;;
 36211                           
 36212                           	psect	text162
 36213  01BCF6                     __ptext162:
 36214                           	opt callstack 0
 36215  01BCF6                     _send_port_data_dma:
 36216                           	opt callstack 10
 36217                           
 36218                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 36219                           ;stkvar	_dsize @ sp[(0)+-2]
 36220                           
 36221                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36222                           ;incstack = 0
 36223  01BCF6  0EFE               	movlw	-2
 36224  01BCF8  04E3               	decf	plusw1,w,c
 36225  01BCFA  0EFF               	movlw	-1
 36226  01BCFC  006F FF8C  F001    	movff	plusw1,btemp
 36227  01BD02  0E02               	movlw	2
 36228  01BD04  5A01               	subwfb	btemp^0,f,c
 36229  01BD06  A0D8               	btfss	status,0,c
 36230  01BD08  D00C               	goto	l10317
 36231                           
 36232                           ;eadog.c: 401:   dsize = 512;
 36233  01BD0A  0E00               	movlw	0
 36234  01BD0C  6E0B               	movwf	(btemp+10)^0,c
 36235  01BD0E  0E02               	movlw	2
 36236  01BD10  6E0C               	movwf	(btemp+11)^0,c
 36237                           
 36238                           ;stkvar	_dsize @ sp[(0)+-2]
 36239  01BD12  0EFE               	movlw	-2
 36240  01BD14  0060  F02F  FFE3   	movff	btemp+10,plusw1
 36241  01BD1A  0EFF               	movlw	-1
 36242  01BD1C  0060  F033  FFE3   	movff	btemp+11,plusw1
 36243  01BD22                     l10317:
 36244                           
 36245                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 36246  01BD22  013B               	movlb	59	; () banked
 36247  01BD24  9FDC               	bcf	220,7,b	;volatile
 36248                           
 36249                           ; BSR set to: 59
 36250                           ;eadog.c: 404:  DMA2SSZ = dsize;
 36251                           ;stkvar	_dsize @ sp[(0)+-2]
 36252  01BD26  0EFE               	movlw	-2
 36253  01BD28  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 36254  01BD2E  0EFF               	movlw	-1
 36255  01BD30  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 36256                           
 36257                           ; BSR set to: 59
 36258                           ;eadog.c: 405:  DMA2DSZ = 1;
 36259  01BD36  0E00               	movlw	0
 36260  01BD38  6FCF               	movwf	207,b	;volatile
 36261  01BD3A  0E01               	movlw	1
 36262  01BD3C  6FCE               	movwf	206,b	;volatile
 36263                           
 36264                           ; BSR set to: 59
 36265                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 36266  01BD3E  8FDC               	bsf	220,7,b	;volatile
 36267                           
 36268                           ; BSR set to: 59
 36269                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 36270  01BD40  8DDC               	bsf	220,6,b	;volatile
 36271                           
 36272                           ; BSR set to: 59
 36273                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 36274  01BD42  52E5               	movf	postdec1,f,c
 36275  01BD44  52E5               	movf	postdec1,f,c
 36276  01BD46  0012               	return		;funcret
 36277  01BD48                     __end_of_send_port_data_dma:
 36278                           	opt callstack 0
 36279                           
 36280 ;; *************** function _port_data_dma_ptr *****************
 36281 ;; Defined at:
 36282 ;;		line 413 in file "eadog.c"
 36283 ;; Parameters:    Size  Location     Type
 36284 ;;		None
 36285 ;; Auto vars:     Size  Location     Type
 36286 ;;		None
 36287 ;; Return value:  Size  Location     Type
 36288 ;;                  2  [STACK] PTR unsigned char 
 36289 ;; Registers used:
 36290 ;;		wreg, status,2, status,0, btemp, btemp+1
 36291 ;; Tracked objects:
 36292 ;;		On entry : 3F/1
 36293 ;;		On exit  : 0/0
 36294 ;;		Unchanged: 0/0
 36295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36300 ;;Total ram usage:        0 bytes
 36301 ;; Hardware stack levels used:    1
 36302 ;; Hardware stack levels required when called:    3
 36303 ;; This function calls:
 36304 ;;		Nothing
 36305 ;; This function is called by:
 36306 ;;		_calc_bsoc
 36307 ;; This function uses a reentrant model
 36308 ;;
 36309                           
 36310                           	psect	text163
 36311  01CB2C                     __ptext163:
 36312                           	opt callstack 0
 36313  01CB2C                     _port_data_dma_ptr:
 36314                           	opt callstack 10
 36315                           
 36316                           ;eadog.c: 415:  return port_data;
 36317                           
 36318                           ; BSR set to: 59
 36319                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36320                           ;incstack = 0
 36321  01CB2C  0EFF               	movlw	low _port_data
 36322  01CB2E  6E01               	movwf	btemp^0,c
 36323  01CB30  0E04               	movlw	high _port_data
 36324  01CB32  6E02               	movwf	(btemp+1)^0,c
 36325                           
 36326                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 36327  01CB34  0012               	return		;funcret
 36328  01CB36                     __end_of_port_data_dma_ptr:
 36329                           	opt callstack 0
 36330                           
 36331 ;; *************** function ___asfladd *****************
 36332 ;; Defined at:
 36333 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 36334 ;; Parameters:    Size  Location     Type
 36335 ;;  f1p             2  [STACK] PTR 
 36336 ;;		 -> C(299), 
 36337 ;;  f2              4  [STACK] PTR 
 36338 ;; Auto vars:     Size  Location     Type
 36339 ;;		None
 36340 ;; Return value:  Size  Location     Type
 36341 ;;                  4  [STACK] PTR 
 36342 ;; Registers used:
 36343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 36344 ;; Tracked objects:
 36345 ;;		On entry : 0/0
 36346 ;;		On exit  : 0/0
 36347 ;;		Unchanged: 0/0
 36348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36353 ;;Total ram usage:        0 bytes
 36354 ;; Hardware stack levels used:    1
 36355 ;; Hardware stack levels required when called:    4
 36356 ;; This function calls:
 36357 ;;		___fladd
 36358 ;; This function is called by:
 36359 ;;		_calc_bsoc
 36360 ;; This function uses a reentrant model
 36361 ;;
 36362                           
 36363                           	psect	text164
 36364  01B718                     __ptext164:
 36365                           	opt callstack 0
 36366  01B718                     ___asfladd:
 36367                           	opt callstack 9
 36368                           
 36369                           ;	Return value of ___asfladd is never used
 36370                           ;stkvar	_f2 @ sp[(0)+-6]
 36371                           
 36372                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36373                           ;incstack = 0
 36374  01B718  0EFA               	movlw	-6
 36375  01B71A  006F FF8F FFE6     	movff	plusw1,postinc1
 36376  01B720  006F FF8F FFE6     	movff	plusw1,postinc1
 36377  01B726  006F FF8F FFE6     	movff	plusw1,postinc1
 36378  01B72C  006F FF8F FFE6     	movff	plusw1,postinc1
 36379                           
 36380                           ;stkvar	_f1p @ sp[(-4)+-2]
 36381  01B732  0EFA               	movlw	-6
 36382  01B734  006F FF8F FFD9     	movff	plusw1,fsr2l
 36383  01B73A  0EFB               	movlw	-5
 36384  01B73C  006F FF8F FFDA     	movff	plusw1,fsr2h
 36385  01B742  006F FF7B FFE6     	movff	postinc2,postinc1
 36386  01B748  006F FF7B FFE6     	movff	postinc2,postinc1
 36387  01B74E  006F FF7B FFE6     	movff	postinc2,postinc1
 36388  01B754  006F FF7B FFE6     	movff	postinc2,postinc1
 36389  01B75A  EC35  F0A3         	call	___fladd	;wreg free
 36390                           
 36391                           ;stkvar	_f1p @ sp[(0)+-2]
 36392  01B75E  0EFE               	movlw	-2
 36393  01B760  006F FF8F FFD9     	movff	plusw1,fsr2l
 36394  01B766  0EFF               	movlw	-1
 36395  01B768  006F FF8F FFDA     	movff	plusw1,fsr2h
 36396  01B76E  0060  F007  FFDE   	movff	btemp,postinc2
 36397  01B774  0060  F00B  FFDE   	movff	btemp+1,postinc2
 36398  01B77A  0060  F00F  FFDE   	movff	btemp+2,postinc2
 36399  01B780  0060  F013  FFDE   	movff	btemp+3,postinc2
 36400                           
 36401                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 36402  01B786  0EFA               	movlw	250
 36403  01B788  26E1               	addwf	fsr1l,f,c
 36404  01B78A  0EFF               	movlw	255
 36405  01B78C  22E2               	addwfc	fsr1h,f,c
 36406  01B78E  0012               	return		;funcret
 36407  01B790                     __end_of___asfladd:
 36408                           	opt callstack 0
 36409                           
 36410 ;; *************** function _INT0_ISR *****************
 36411 ;; Defined at:
 36412 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 36413 ;; Parameters:    Size  Location     Type
 36414 ;;		None
 36415 ;; Auto vars:     Size  Location     Type
 36416 ;;		None
 36417 ;; Return value:  Size  Location     Type
 36418 ;;                  1    wreg      void 
 36419 ;; Registers used:
 36420 ;;		wreg, status,2, status,0, pclath, tosl
 36421 ;; Tracked objects:
 36422 ;;		On entry : 0/0
 36423 ;;		On exit  : 0/0
 36424 ;;		Unchanged: 0/0
 36425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36430 ;;Total ram usage:        0 bytes
 36431 ;; Hardware stack levels used:    1
 36432 ;; Hardware stack levels required when called:    2
 36433 ;; This function calls:
 36434 ;;		_INT0_CallBack
 36435 ;; This function is called by:
 36436 ;;		Interrupt level 2
 36437 ;; This function uses a non-reentrant model
 36438 ;;
 36439                           
 36440                           	psect	text165
 36441  01CB04                     __ptext165:
 36442                           	opt callstack 0
 36443  01CB04                     _INT0_ISR:
 36444                           	opt callstack 2
 36445                           
 36446                           ;incstack = 0
 36447  01CB04  EE14  F15E         	lfsr	1,___inthi_sp
 36448                           
 36449                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 36450  01CB08  0139               	movlb	57	; () banked
 36451  01CB0A  91A1               	bcf	161,0,b	;volatile
 36452                           
 36453                           ; BSR set to: 57
 36454                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 36455  01CB0C  EC24  F0E4         	call	_INT0_CallBack	;wreg free
 36456  01CB10  0011               	retfie		f
 36457  01CB12                     __end_of_INT0_ISR:
 36458                           	opt callstack 0
 36459                           
 36460 ;; *************** function _INT0_CallBack *****************
 36461 ;; Defined at:
 36462 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 36463 ;; Parameters:    Size  Location     Type
 36464 ;;		None
 36465 ;; Auto vars:     Size  Location     Type
 36466 ;;		None
 36467 ;; Return value:  Size  Location     Type
 36468 ;;                  1  [STACK] void 
 36469 ;; Registers used:
 36470 ;;		wreg, status,2, status,0, pclath, tosl
 36471 ;; Tracked objects:
 36472 ;;		On entry : 3F/39
 36473 ;;		On exit  : 0/0
 36474 ;;		Unchanged: 0/0
 36475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36480 ;;Total ram usage:        0 bytes
 36481 ;; Hardware stack levels used:    1
 36482 ;; Hardware stack levels required when called:    1
 36483 ;; This function calls:
 36484 ;;		Absolute function
 36485 ;;		_INT0_DefaultInterruptHandler
 36486 ;; This function is called by:
 36487 ;;		_INT0_ISR
 36488 ;; This function uses a reentrant model
 36489 ;;
 36490                           
 36491                           	psect	text166
 36492  01C848                     __ptext166:
 36493                           	opt callstack 0
 36494  01C848                     _INT0_CallBack:
 36495                           	opt callstack 2
 36496                           
 36497                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 36498                           
 36499                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36500                           ;incstack = 0
 36501  01C848  0100               	movlb	0	; () banked
 36502  01C84A  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 36503  01C84C  1198               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 36504  01C84E  1199               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 36505  01C850  B4D8               	btfsc	status,2,c
 36506  01C852  0012               	return	
 36507                           
 36508                           ; BSR set to: 0
 36509                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 36510  01C854  D801               	call	u1036_48
 36511  01C856  0012               	return	
 36512  01C858                     u1036_48:
 36513  01C858  0005               	push	
 36514  01C85A  6EFA               	movwf	pclath,c
 36515  01C85C  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 36516  01C85E  6EFD               	movwf	tosl,c
 36517  01C860  5198               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 36518  01C862  6EFE               	movwf	tosh,c
 36519  01C864  5199               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 36520  01C866  6EFF               	movwf	tosu,c
 36521  01C868  50FA               	movf	pclath,w,c
 36522  01C86A  0012               	return		;indir
 36523  01C86C                     __end_of_INT0_CallBack:
 36524                           	opt callstack 0
 36525                           
 36526 ;; *************** function _INT0_DefaultInterruptHandler *****************
 36527 ;; Defined at:
 36528 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 36529 ;; Parameters:    Size  Location     Type
 36530 ;;		None
 36531 ;; Auto vars:     Size  Location     Type
 36532 ;;		None
 36533 ;; Return value:  Size  Location     Type
 36534 ;;                  1  [STACK] void 
 36535 ;; Registers used:
 36536 ;;		None
 36537 ;; Tracked objects:
 36538 ;;		On entry : 3F/0
 36539 ;;		On exit  : 0/0
 36540 ;;		Unchanged: 0/0
 36541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36546 ;;Total ram usage:        0 bytes
 36547 ;; Hardware stack levels used:    1
 36548 ;; This function calls:
 36549 ;;		Nothing
 36550 ;; This function is called by:
 36551 ;;		_EXT_INT_Initialize
 36552 ;;		_INT0_CallBack
 36553 ;; This function uses a reentrant model
 36554 ;;
 36555                           
 36556                           	psect	text167
 36557  01CBA6                     __ptext167:
 36558                           	opt callstack 0
 36559  01CBA6                     _INT0_DefaultInterruptHandler:
 36560                           	opt callstack 2
 36561                           
 36562                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36563                           
 36564                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36565                           ;incstack = 0
 36566  01CBA6  0012               	return		;funcret
 36567  01CBA8                     __end_of_INT0_DefaultInterruptHandler:
 36568                           	opt callstack 0
 36569                           
 36570 ;; *************** function _Default_ISR *****************
 36571 ;; Defined at:
 36572 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 36573 ;; Parameters:    Size  Location     Type
 36574 ;;		None
 36575 ;; Auto vars:     Size  Location     Type
 36576 ;;		None
 36577 ;; Return value:  Size  Location     Type
 36578 ;;                  1    wreg      void 
 36579 ;; Registers used:
 36580 ;;		None
 36581 ;; Tracked objects:
 36582 ;;		On entry : 0/0
 36583 ;;		On exit  : 0/0
 36584 ;;		Unchanged: 0/0
 36585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36590 ;;Total ram usage:        0 bytes
 36591 ;; Hardware stack levels used:    1
 36592 ;; This function calls:
 36593 ;;		Nothing
 36594 ;; This function is called by:
 36595 ;;		Interrupt level 2
 36596 ;; This function uses a non-reentrant model
 36597 ;;
 36598                           
 36599                           	psect	text168
 36600  01CB9C                     __ptext168:
 36601                           	opt callstack 0
 36602  01CB9C                     _Default_ISR:
 36603                           	opt callstack 4
 36604                           
 36605                           ;incstack = 0
 36606  01CB9C  EE14  F15E         	lfsr	1,___inthi_sp
 36607  01CBA0  0011               	retfie		f
 36608  01CBA2                     __end_of_Default_ISR:
 36609                           	opt callstack 0
 36610                           
 36611 ;; *************** function _ADCC_ISR *****************
 36612 ;; Defined at:
 36613 ;;		line 314 in file "mcc_generated_files/adcc.c"
 36614 ;; Parameters:    Size  Location     Type
 36615 ;;		None
 36616 ;; Auto vars:     Size  Location     Type
 36617 ;;		None
 36618 ;; Return value:  Size  Location     Type
 36619 ;;                  1    wreg      void 
 36620 ;; Registers used:
 36621 ;;		wreg, status,2, status,0, pclath, tosl
 36622 ;; Tracked objects:
 36623 ;;		On entry : 0/0
 36624 ;;		On exit  : 0/0
 36625 ;;		Unchanged: 0/0
 36626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36631 ;;Total ram usage:        0 bytes
 36632 ;; Hardware stack levels used:    1
 36633 ;; Hardware stack levels required when called:    1
 36634 ;; This function calls:
 36635 ;;		Absolute function
 36636 ;;		_ADCC_DefaultInterruptHandler
 36637 ;;		_adc_int_handler
 36638 ;; This function is called by:
 36639 ;;		Interrupt level 2
 36640 ;; This function uses a non-reentrant model
 36641 ;;
 36642                           
 36643                           	psect	text169
 36644  01C4DC                     __ptext169:
 36645                           	opt callstack 0
 36646  01C4DC                     _ADCC_ISR:
 36647                           	opt callstack 3
 36648                           
 36649                           ;incstack = 0
 36650  01C4DC  EE14  F15E         	lfsr	1,___inthi_sp
 36651                           
 36652                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 36653  01C4E0  0139               	movlb	57	; () banked
 36654  01C4E2  95A1               	bcf	161,2,b	;volatile
 36655                           
 36656                           ; BSR set to: 57
 36657                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 36658  01C4E4  0100               	movlb	0	; () banked
 36659  01C4E6  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 36660  01C4E8  1189               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 36661  01C4EA  118A               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 36662  01C4EC  B4D8               	btfsc	status,2,c
 36663  01C4EE  0011               	retfie		f
 36664                           
 36665                           ; BSR set to: 0
 36666                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 36667  01C4F0  D801               	call	i2u1082_48
 36668  01C4F2  0011               	retfie		f
 36669  01C4F4                     i2u1082_48:
 36670  01C4F4  0005               	push	
 36671  01C4F6  6EFA               	movwf	pclath,c
 36672  01C4F8  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 36673  01C4FA  6EFD               	movwf	tosl,c
 36674  01C4FC  5189               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 36675  01C4FE  6EFE               	movwf	tosh,c
 36676  01C500  518A               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 36677  01C502  6EFF               	movwf	tosu,c
 36678  01C504  50FA               	movf	pclath,w,c
 36679  01C506  0012               	return		;indir
 36680  01C508                     __end_of_ADCC_ISR:
 36681                           	opt callstack 0
 36682                           
 36683 ;; *************** function _adc_int_t_handler *****************
 36684 ;; Defined at:
 36685 ;;		line 171 in file "daq.c"
 36686 ;; Parameters:    Size  Location     Type
 36687 ;;		None
 36688 ;; Auto vars:     Size  Location     Type
 36689 ;;		None
 36690 ;; Return value:  Size  Location     Type
 36691 ;;                  1  [STACK] void 
 36692 ;; Registers used:
 36693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 36694 ;; Tracked objects:
 36695 ;;		On entry : 3F/0
 36696 ;;		On exit  : 1/0
 36697 ;;		Unchanged: 0/0
 36698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36703 ;;Total ram usage:        0 bytes
 36704 ;; Hardware stack levels used:    1
 36705 ;; Hardware stack levels required when called:    1
 36706 ;; This function calls:
 36707 ;;		_ADCC_DischargeSampleCapacitor
 36708 ;;		_ADCC_StartConversion
 36709 ;; This function is called by:
 36710 ;;		_start_adc_scan
 36711 ;;		_ADCC_ThresholdISR
 36712 ;; This function uses a reentrant model
 36713 ;;
 36714                           
 36715                           	psect	text170
 36716  01B620                     __ptext170:
 36717                           	opt callstack 0
 36718  01B620                     _adc_int_t_handler:
 36719                           	opt callstack 2
 36720                           
 36721                           ;daq.c: 176:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 36722                           
 36723                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36724                           ;incstack = 0
 36725  01B620  013E               	movlb	62	; () banked
 36726  01B622  51E6               	movf	230,w,b	;volatile
 36727  01B624  006F FB9C  F001    	movff	16103,btemp	;volatile
 36728  01B62A  6A02               	clrf	(btemp+1)^0,c
 36729  01B62C  0060  F004  F002   	movff	btemp,btemp+1
 36730  01B632  6A01               	clrf	btemp^0,c
 36731  01B634  2601               	addwf	btemp^0,f,c
 36732  01B636  0E00               	movlw	0
 36733  01B638  2202               	addwfc	(btemp+1)^0,f,c
 36734  01B63A  0100               	movlb	0	; () banked
 36735  01B63C  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 36736  01B63E  0D02               	mullw	2
 36737  01B640  50F3               	movf	243,w,c
 36738  01B642  0FAF               	addlw	low _R
 36739  01B644  6ED9               	movwf	fsr2l,c
 36740  01B646  6ADA               	clrf	fsr2h,c
 36741  01B648  0060  F007  FFDE   	movff	btemp,postinc2
 36742  01B64E  0060  F00B  FFDD   	movff	btemp+1,postdec2
 36743  01B654                     l11723:
 36744                           
 36745                           ;daq.c: 178:   if (++R.scan_index > 0XD) {
 36746  01B654  0100               	movlb	0	; () banked
 36747  01B656  2BE1               	incf	(_R+50)& (0+255),f,b	;volatile
 36748  01B658  0E0D               	movlw	13
 36749  01B65A  65E1               	cpfsgt	(_R+50)& (0+255),b	;volatile
 36750  01B65C  D003               	goto	l11729
 36751                           
 36752                           ; BSR set to: 0
 36753                           ;daq.c: 179:    R.done = 1;
 36754  01B65E  0E01               	movlw	1
 36755  01B660  6FE4               	movwf	(_R+53)& (0+255),b	;volatile
 36756  01B662  0012               	return	
 36757  01B664                     l11729:
 36758                           
 36759                           ; BSR set to: 0
 36760                           ;daq.c: 185:  } while (!((R.scan_select >> R.scan_index) &0x1));
 36761  01B664  0060  F384  F00C   	movff	_R+50,btemp+11	;volatile
 36762  01B66A  EE20  F0E2         	lfsr	2,_R+51	;volatile
 36763  01B66E  006F FF78  F009    	movff	postinc2,btemp+8
 36764  01B674  006F FF74  F00A    	movff	postdec2,btemp+9
 36765  01B67A  2A0C               	incf	(btemp+11)^0,f,c
 36766  01B67C  D003               	goto	u1079_44
 36767  01B67E                     u1079_45:
 36768  01B67E  90D8               	bcf	status,0,c
 36769  01B680  320A               	rrcf	(btemp+9)^0,f,c
 36770  01B682  3209               	rrcf	(btemp+8)^0,f,c
 36771  01B684                     u1079_44:
 36772  01B684  2E0C               	decfsz	(btemp+11)^0,f,c
 36773  01B686  D7FB               	goto	u1079_45
 36774  01B688  A009               	btfss	(btemp+8)^0,0,c
 36775  01B68A  D7E4               	goto	l11723
 36776                           
 36777                           ;daq.c: 186:  ADCC_DischargeSampleCapacitor();
 36778  01B68C  ECB1  F0E5         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 36779                           
 36780                           ; BSR set to: 62
 36781                           ;daq.c: 187:  ADCC_StartConversion(R.scan_index & 0xf);
 36782  01B690  0100               	movlb	0	; () banked
 36783  01B692  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 36784  01B694  0B0F               	andlw	15
 36785  01B696  6EE6               	movwf	postinc1,c
 36786  01B698  EC44  F0E5         	call	_ADCC_StartConversion	;wreg free
 36787                           
 36788                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 36789  01B69C  0012               	return		;funcret
 36790  01B69E                     __end_of_adc_int_t_handler:
 36791                           	opt callstack 0
 36792                           
 36793 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 36794 ;; Defined at:
 36795 ;;		line 339 in file "mcc_generated_files/adcc.c"
 36796 ;; Parameters:    Size  Location     Type
 36797 ;;		None
 36798 ;; Auto vars:     Size  Location     Type
 36799 ;;		None
 36800 ;; Return value:  Size  Location     Type
 36801 ;;                  1  [STACK] void 
 36802 ;; Registers used:
 36803 ;;		None
 36804 ;; Tracked objects:
 36805 ;;		On entry : 3F/0
 36806 ;;		On exit  : 0/0
 36807 ;;		Unchanged: 0/0
 36808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36813 ;;Total ram usage:        0 bytes
 36814 ;; Hardware stack levels used:    1
 36815 ;; This function calls:
 36816 ;;		Nothing
 36817 ;; This function is called by:
 36818 ;;		_ADCC_Initialize
 36819 ;;		_ADCC_ISR
 36820 ;;		_ADCC_ThresholdISR
 36821 ;; This function uses a reentrant model
 36822 ;;
 36823                           
 36824                           	psect	text171
 36825  01CBA8                     __ptext171:
 36826                           	opt callstack 0
 36827  01CBA8                     _ADCC_DefaultInterruptHandler:
 36828                           	opt callstack 3
 36829                           
 36830                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36831                           
 36832                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36833                           ;incstack = 0
 36834  01CBA8  0012               	return		;funcret
 36835  01CBAA                     __end_of_ADCC_DefaultInterruptHandler:
 36836                           	opt callstack 0
 36837                           
 36838 ;; *************** function _adc_int_handler *****************
 36839 ;; Defined at:
 36840 ;;		line 161 in file "daq.c"
 36841 ;; Parameters:    Size  Location     Type
 36842 ;;		None
 36843 ;; Auto vars:     Size  Location     Type
 36844 ;;		None
 36845 ;; Return value:  Size  Location     Type
 36846 ;;                  1  [STACK] void 
 36847 ;; Registers used:
 36848 ;;		None
 36849 ;; Tracked objects:
 36850 ;;		On entry : 3F/0
 36851 ;;		On exit  : 0/0
 36852 ;;		Unchanged: 0/0
 36853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36858 ;;Total ram usage:        0 bytes
 36859 ;; Hardware stack levels used:    1
 36860 ;; This function calls:
 36861 ;;		Nothing
 36862 ;; This function is called by:
 36863 ;;		_start_adc_scan
 36864 ;;		_ADCC_ISR
 36865 ;; This function uses a reentrant model
 36866 ;;
 36867                           
 36868                           	psect	text172
 36869  01CBAA                     __ptext172:
 36870                           	opt callstack 0
 36871  01CBAA                     _adc_int_handler:
 36872                           	opt callstack 3
 36873                           
 36874                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36875                           
 36876                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36877                           ;incstack = 0
 36878  01CBAA  0012               	return		;funcret
 36879  01CBAC                     __end_of_adc_int_handler:
 36880                           	opt callstack 0
 36881                           
 36882 ;; *************** function _ADCC_ThresholdISR *****************
 36883 ;; Defined at:
 36884 ;;		line 327 in file "mcc_generated_files/adcc.c"
 36885 ;; Parameters:    Size  Location     Type
 36886 ;;		None
 36887 ;; Auto vars:     Size  Location     Type
 36888 ;;		None
 36889 ;; Return value:  Size  Location     Type
 36890 ;;                  1    wreg      void 
 36891 ;; Registers used:
 36892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 36893 ;; Tracked objects:
 36894 ;;		On entry : 0/0
 36895 ;;		On exit  : 0/0
 36896 ;;		Unchanged: 0/0
 36897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36900 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36901 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36902 ;;Total ram usage:        5 bytes
 36903 ;; Hardware stack levels used:    1
 36904 ;; Hardware stack levels required when called:    2
 36905 ;; This function calls:
 36906 ;;		Absolute function
 36907 ;;		_ADCC_DefaultInterruptHandler
 36908 ;;		_adc_int_t_handler
 36909 ;; This function is called by:
 36910 ;;		Interrupt level 2
 36911 ;; This function uses a non-reentrant model
 36912 ;;
 36913                           
 36914                           	psect	text173
 36915  01B8D8                     __ptext173:
 36916                           	opt callstack 0
 36917  01B8D8                     _ADCC_ThresholdISR:
 36918                           	opt callstack 2
 36919                           
 36920                           ;incstack = 0
 36921  01B8D8  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 36922  01B8DE  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 36923  01B8E4  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 36924  01B8EA  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 36925  01B8F0  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 36926  01B8F6  EE14  F15E         	lfsr	1,___inthi_sp
 36927                           
 36928                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 36929  01B8FA  0139               	movlb	57	; () banked
 36930  01B8FC  97A1               	bcf	161,3,b	;volatile
 36931                           
 36932                           ; BSR set to: 57
 36933                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 36934  01B8FE  0100               	movlb	0	; () banked
 36935  01B900  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 36936  01B902  1186               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 36937  01B904  1187               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 36938  01B906  B4D8               	btfsc	status,2,c
 36939  01B908  D00C               	goto	i2u1084_49
 36940                           
 36941                           ; BSR set to: 0
 36942                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 36943  01B90A  D801               	call	i2u1084_48
 36944  01B90C  D00A               	goto	i2u1084_49
 36945  01B90E                     i2u1084_48:
 36946  01B90E  0005               	push	
 36947  01B910  6EFA               	movwf	pclath,c
 36948  01B912  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 36949  01B914  6EFD               	movwf	tosl,c
 36950  01B916  5186               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 36951  01B918  6EFE               	movwf	tosh,c
 36952  01B91A  5187               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 36953  01B91C  6EFF               	movwf	tosu,c
 36954  01B91E  50FA               	movf	pclath,w,c
 36955  01B920  0012               	return		;indir
 36956  01B922                     i2u1084_49:
 36957  01B922  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 36958  01B928  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 36959  01B92E  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 36960  01B934  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 36961  01B93A  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 36962  01B940  0011               	retfie		f
 36963  01B942                     __end_of_ADCC_ThresholdISR:
 36964                           	opt callstack 0
 36965                           
 36966 ;; *************** function _UART1_rx_vect_isr *****************
 36967 ;; Defined at:
 36968 ;;		line 181 in file "mcc_generated_files/uart1.c"
 36969 ;; Parameters:    Size  Location     Type
 36970 ;;		None
 36971 ;; Auto vars:     Size  Location     Type
 36972 ;;		None
 36973 ;; Return value:  Size  Location     Type
 36974 ;;                  1    wreg      void 
 36975 ;; Registers used:
 36976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 36977 ;; Tracked objects:
 36978 ;;		On entry : 0/0
 36979 ;;		On exit  : 0/0
 36980 ;;		Unchanged: 0/0
 36981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36986 ;;Total ram usage:        0 bytes
 36987 ;; Hardware stack levels used:    1
 36988 ;; Hardware stack levels required when called:    1
 36989 ;; This function calls:
 36990 ;;		Absolute function
 36991 ;;		_UART1_Receive_ISR
 36992 ;; This function is called by:
 36993 ;;		Interrupt level 2
 36994 ;; This function uses a non-reentrant model
 36995 ;;
 36996                           
 36997                           	psect	text174
 36998  01C740                     __ptext174:
 36999                           	opt callstack 0
 37000  01C740                     _UART1_rx_vect_isr:
 37001                           	opt callstack 3
 37002                           
 37003                           ;incstack = 0
 37004  01C740  EE14  F15E         	lfsr	1,___inthi_sp
 37005                           
 37006                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 37007  01C744  0100               	movlb	0	; () banked
 37008  01C746  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 37009  01C748  118C               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 37010  01C74A  118D               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 37011  01C74C  B4D8               	btfsc	status,2,c
 37012  01C74E  0011               	retfie		f
 37013                           
 37014                           ; BSR set to: 0
 37015                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 37016  01C750  D801               	call	i2u1086_48
 37017  01C752  0011               	retfie		f
 37018  01C754                     i2u1086_48:
 37019  01C754  0005               	push	
 37020  01C756  6EFA               	movwf	pclath,c
 37021  01C758  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 37022  01C75A  6EFD               	movwf	tosl,c
 37023  01C75C  518C               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 37024  01C75E  6EFE               	movwf	tosh,c
 37025  01C760  518D               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 37026  01C762  6EFF               	movwf	tosu,c
 37027  01C764  50FA               	movf	pclath,w,c
 37028  01C766  0012               	return		;indir
 37029  01C768                     __end_of_UART1_rx_vect_isr:
 37030                           	opt callstack 0
 37031                           
 37032 ;; *************** function _UART1_Receive_ISR *****************
 37033 ;; Defined at:
 37034 ;;		line 192 in file "mcc_generated_files/uart1.c"
 37035 ;; Parameters:    Size  Location     Type
 37036 ;;		None
 37037 ;; Auto vars:     Size  Location     Type
 37038 ;;		None
 37039 ;; Return value:  Size  Location     Type
 37040 ;;                  1  [STACK] void 
 37041 ;; Registers used:
 37042 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37043 ;; Tracked objects:
 37044 ;;		On entry : 3F/0
 37045 ;;		On exit  : 3F/0
 37046 ;;		Unchanged: 0/0
 37047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37052 ;;Total ram usage:        0 bytes
 37053 ;; Hardware stack levels used:    1
 37054 ;; This function calls:
 37055 ;;		Nothing
 37056 ;; This function is called by:
 37057 ;;		_UART1_Initialize
 37058 ;;		_UART1_rx_vect_isr
 37059 ;; This function uses a reentrant model
 37060 ;;
 37061                           
 37062                           	psect	text175
 37063  01C8D4                     __ptext175:
 37064                           	opt callstack 0
 37065  01C8D4                     _UART1_Receive_ISR:
 37066                           	opt callstack 3
 37067                           
 37068                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 37069                           
 37070                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37071                           ;incstack = 0
 37072  01C8D4  0EDC               	movlw	low _uart1RxBuffer
 37073  01C8D6  2447               	addwf	_uart1RxHead^0,w,c	;volatile
 37074  01C8D8  6ED9               	movwf	fsr2l,c
 37075  01C8DA  6ADA               	clrf	fsr2h,c
 37076  01C8DC  0E01               	movlw	high _uart1RxBuffer
 37077  01C8DE  22DA               	addwfc	fsr2h,f,c
 37078  01C8E0  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 37079  01C8E6  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 37080                           
 37081                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 37082  01C8E8  0E07               	movlw	7
 37083  01C8EA  6447               	cpfsgt	_uart1RxHead^0,c
 37084  01C8EC  D001               	goto	l11199
 37085                           
 37086                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 37087  01C8EE  6A47               	clrf	_uart1RxHead^0,c	;volatile
 37088  01C8F0                     l11199:
 37089                           
 37090                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 37091  01C8F0  0100               	movlb	0	; () banked
 37092  01C8F2  2BAD               	incf	_uart1RxCount& (0+255),f,b	;volatile
 37093                           
 37094                           ; BSR set to: 0
 37095                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 37096  01C8F4  0012               	return		;funcret
 37097  01C8F6                     __end_of_UART1_Receive_ISR:
 37098                           	opt callstack 0
 37099                           
 37100 ;; *************** function _UART2_tx_vect_isr *****************
 37101 ;; Defined at:
 37102 ;;		line 195 in file "mcc_generated_files/uart2.c"
 37103 ;; Parameters:    Size  Location     Type
 37104 ;;		None
 37105 ;; Auto vars:     Size  Location     Type
 37106 ;;		None
 37107 ;; Return value:  Size  Location     Type
 37108 ;;                  1    wreg      void 
 37109 ;; Registers used:
 37110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 37111 ;; Tracked objects:
 37112 ;;		On entry : 0/0
 37113 ;;		On exit  : 0/0
 37114 ;;		Unchanged: 0/0
 37115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37120 ;;Total ram usage:        0 bytes
 37121 ;; Hardware stack levels used:    1
 37122 ;; Hardware stack levels required when called:    1
 37123 ;; This function calls:
 37124 ;;		Absolute function
 37125 ;;		_UART2_Transmit_ISR
 37126 ;; This function is called by:
 37127 ;;		Interrupt level 2
 37128 ;; This function uses a non-reentrant model
 37129 ;;
 37130                           
 37131                           	psect	text176
 37132  01C768                     __ptext176:
 37133                           	opt callstack 0
 37134  01C768                     _UART2_tx_vect_isr:
 37135                           	opt callstack 3
 37136                           
 37137                           ; BSR set to: 0
 37138                           ;incstack = 0
 37139  01C768  EE14  F15E         	lfsr	1,___inthi_sp
 37140                           
 37141                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 37142  01C76C  0100               	movlb	0	; () banked
 37143  01C76E  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 37144  01C770  118F               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 37145  01C772  1190               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 37146  01C774  B4D8               	btfsc	status,2,c
 37147  01C776  0011               	retfie		f
 37148                           
 37149                           ; BSR set to: 0
 37150                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 37151  01C778  D801               	call	i2u1088_48
 37152  01C77A  0011               	retfie		f
 37153  01C77C                     i2u1088_48:
 37154  01C77C  0005               	push	
 37155  01C77E  6EFA               	movwf	pclath,c
 37156  01C780  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 37157  01C782  6EFD               	movwf	tosl,c
 37158  01C784  518F               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 37159  01C786  6EFE               	movwf	tosh,c
 37160  01C788  5190               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 37161  01C78A  6EFF               	movwf	tosu,c
 37162  01C78C  50FA               	movf	pclath,w,c
 37163  01C78E  0012               	return		;indir
 37164  01C790                     __end_of_UART2_tx_vect_isr:
 37165                           	opt callstack 0
 37166                           
 37167 ;; *************** function _UART2_Transmit_ISR *****************
 37168 ;; Defined at:
 37169 ;;		line 213 in file "mcc_generated_files/uart2.c"
 37170 ;; Parameters:    Size  Location     Type
 37171 ;;		None
 37172 ;; Auto vars:     Size  Location     Type
 37173 ;;		None
 37174 ;; Return value:  Size  Location     Type
 37175 ;;                  1  [STACK] void 
 37176 ;; Registers used:
 37177 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37178 ;; Tracked objects:
 37179 ;;		On entry : 3F/0
 37180 ;;		On exit  : 3B/39
 37181 ;;		Unchanged: 0/0
 37182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37187 ;;Total ram usage:        0 bytes
 37188 ;; Hardware stack levels used:    1
 37189 ;; This function calls:
 37190 ;;		Nothing
 37191 ;; This function is called by:
 37192 ;;		_UART2_Initialize
 37193 ;;		_UART2_tx_vect_isr
 37194 ;; This function uses a reentrant model
 37195 ;;
 37196                           
 37197                           	psect	text177
 37198  01C508                     __ptext177:
 37199                           	opt callstack 0
 37200  01C508                     _UART2_Transmit_ISR:
 37201                           	opt callstack 3
 37202                           
 37203                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 37204                           
 37205                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37206                           ;incstack = 0
 37207  01C508  0E40               	movlw	64
 37208  01C50A  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 37209  01C50C  D010               	goto	l673
 37210                           
 37211                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 37212  01C50E  0E00               	movlw	low _uart2TxBuffer
 37213  01C510  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 37214  01C512  6ED9               	movwf	fsr2l,c
 37215  01C514  6ADA               	clrf	fsr2h,c
 37216  01C516  0E03               	movlw	high _uart2TxBuffer
 37217  01C518  22DA               	addwfc	fsr2h,f,c
 37218  01C51A  50DF               	movf	indf2,w,c
 37219  01C51C  013D               	movlb	61	; () banked
 37220  01C51E  6FD2               	movwf	210,b	;volatile
 37221                           
 37222                           ; BSR set to: 61
 37223  01C520  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 37224                           
 37225                           ; BSR set to: 61
 37226                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 37227  01C522  0E3F               	movlw	63
 37228  01C524  6446               	cpfsgt	_uart2TxTail^0,c
 37229  01C526  D001               	goto	l11211
 37230                           
 37231                           ; BSR set to: 61
 37232                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 37233  01C528  6A46               	clrf	_uart2TxTail^0,c	;volatile
 37234  01C52A                     l11211:
 37235                           
 37236                           ; BSR set to: 61
 37237                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 37238  01C52A  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 37239                           
 37240                           ;mcc_generated_files/uart2.c: 224:     }
 37241  01C52C  0012               	return	
 37242  01C52E                     l673:
 37243                           
 37244                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 37245  01C52E  0139               	movlb	57	; () banked
 37246  01C530  9796               	bcf	150,3,b	;volatile
 37247                           
 37248                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 37249  01C532  0012               	return		;funcret
 37250  01C534                     __end_of_UART2_Transmit_ISR:
 37251                           	opt callstack 0
 37252                           
 37253 ;; *************** function _UART2_rx_vect_isr *****************
 37254 ;; Defined at:
 37255 ;;		line 203 in file "mcc_generated_files/uart2.c"
 37256 ;; Parameters:    Size  Location     Type
 37257 ;;		None
 37258 ;; Auto vars:     Size  Location     Type
 37259 ;;		None
 37260 ;; Return value:  Size  Location     Type
 37261 ;;                  1    wreg      void 
 37262 ;; Registers used:
 37263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 37264 ;; Tracked objects:
 37265 ;;		On entry : 0/0
 37266 ;;		On exit  : 0/0
 37267 ;;		Unchanged: 0/0
 37268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37273 ;;Total ram usage:        0 bytes
 37274 ;; Hardware stack levels used:    1
 37275 ;; Hardware stack levels required when called:    1
 37276 ;; This function calls:
 37277 ;;		Absolute function
 37278 ;;		_UART2_Receive_ISR
 37279 ;; This function is called by:
 37280 ;;		Interrupt level 2
 37281 ;; This function uses a non-reentrant model
 37282 ;;
 37283                           
 37284                           	psect	text178
 37285  01C790                     __ptext178:
 37286                           	opt callstack 0
 37287  01C790                     _UART2_rx_vect_isr:
 37288                           	opt callstack 3
 37289                           
 37290                           ;incstack = 0
 37291  01C790  EE14  F15E         	lfsr	1,___inthi_sp
 37292                           
 37293                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 37294  01C794  0100               	movlb	0	; () banked
 37295  01C796  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 37296  01C798  1192               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 37297  01C79A  1193               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 37298  01C79C  B4D8               	btfsc	status,2,c
 37299  01C79E  0011               	retfie		f
 37300                           
 37301                           ; BSR set to: 0
 37302                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 37303  01C7A0  D801               	call	i2u1090_48
 37304  01C7A2  0011               	retfie		f
 37305  01C7A4                     i2u1090_48:
 37306  01C7A4  0005               	push	
 37307  01C7A6  6EFA               	movwf	pclath,c
 37308  01C7A8  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 37309  01C7AA  6EFD               	movwf	tosl,c
 37310  01C7AC  5192               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 37311  01C7AE  6EFE               	movwf	tosh,c
 37312  01C7B0  5193               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 37313  01C7B2  6EFF               	movwf	tosu,c
 37314  01C7B4  50FA               	movf	pclath,w,c
 37315  01C7B6  0012               	return		;indir
 37316  01C7B8                     __end_of_UART2_rx_vect_isr:
 37317                           	opt callstack 0
 37318                           
 37319 ;; *************** function _UART2_Receive_ISR *****************
 37320 ;; Defined at:
 37321 ;;		line 233 in file "mcc_generated_files/uart2.c"
 37322 ;; Parameters:    Size  Location     Type
 37323 ;;		None
 37324 ;; Auto vars:     Size  Location     Type
 37325 ;;		None
 37326 ;; Return value:  Size  Location     Type
 37327 ;;                  1  [STACK] void 
 37328 ;; Registers used:
 37329 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37330 ;; Tracked objects:
 37331 ;;		On entry : 3F/0
 37332 ;;		On exit  : 3F/0
 37333 ;;		Unchanged: 0/0
 37334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37339 ;;Total ram usage:        0 bytes
 37340 ;; Hardware stack levels used:    1
 37341 ;; This function calls:
 37342 ;;		Nothing
 37343 ;; This function is called by:
 37344 ;;		_UART2_Initialize
 37345 ;;		_UART2_rx_vect_isr
 37346 ;; This function uses a reentrant model
 37347 ;;
 37348                           
 37349                           	psect	text179
 37350  01C916                     __ptext179:
 37351                           	opt callstack 0
 37352  01C916                     _UART2_Receive_ISR:
 37353                           	opt callstack 3
 37354                           
 37355                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 37356                           
 37357                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37358                           ;incstack = 0
 37359  01C916  0E00               	movlw	low _uart2RxBuffer
 37360  01C918  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 37361  01C91A  6ED9               	movwf	fsr2l,c
 37362  01C91C  6ADA               	clrf	fsr2h,c
 37363  01C91E  0E04               	movlw	high _uart2RxBuffer
 37364  01C920  22DA               	addwfc	fsr2h,f,c
 37365  01C922  006F F743 FFDF     	movff	15824,indf2	;volatile
 37366  01C928  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 37367                           
 37368                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 37369  01C92A  2844               	incf	_uart2RxHead^0,w,c
 37370  01C92C  B4D8               	btfsc	status,2,c
 37371                           
 37372                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 37373  01C92E  6A44               	clrf	_uart2RxHead^0,c	;volatile
 37374                           
 37375                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 37376  01C930  0100               	movlb	0	; () banked
 37377  01C932  2BAA               	incf	_uart2RxCount& (0+255),f,b	;volatile
 37378                           
 37379                           ; BSR set to: 0
 37380                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 37381  01C934  0012               	return		;funcret
 37382  01C936                     __end_of_UART2_Receive_ISR:
 37383                           	opt callstack 0
 37384                           
 37385 ;; *************** function _TMR6_ISR *****************
 37386 ;; Defined at:
 37387 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 37388 ;; Parameters:    Size  Location     Type
 37389 ;;		None
 37390 ;; Auto vars:     Size  Location     Type
 37391 ;;		None
 37392 ;; Return value:  Size  Location     Type
 37393 ;;                  1    wreg      void 
 37394 ;; Registers used:
 37395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 37396 ;; Tracked objects:
 37397 ;;		On entry : 0/0
 37398 ;;		On exit  : 0/0
 37399 ;;		Unchanged: 0/0
 37400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37403 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37404 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37405 ;;Total ram usage:        1 bytes
 37406 ;; Hardware stack levels used:    1
 37407 ;; Hardware stack levels required when called:    2
 37408 ;; This function calls:
 37409 ;;		_TMR6_CallBack
 37410 ;; This function is called by:
 37411 ;;		Interrupt level 2
 37412 ;; This function uses a non-reentrant model
 37413 ;;
 37414                           
 37415                           	psect	text180
 37416  01C9E8                     __ptext180:
 37417                           	opt callstack 0
 37418  01C9E8                     _TMR6_ISR:
 37419                           	opt callstack 2
 37420                           
 37421                           ; BSR set to: 0
 37422                           ;incstack = 0
 37423  01C9E8  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 37424  01C9EE  EE14  F15E         	lfsr	1,___inthi_sp
 37425                           
 37426                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 37427  01C9F2  0139               	movlb	57	; () banked
 37428  01C9F4  91A9               	bcf	169,0,b	;volatile
 37429                           
 37430                           ; BSR set to: 57
 37431                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 37432  01C9F6  EC36  F0E4         	call	_TMR6_CallBack	;wreg free
 37433  01C9FA  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 37434  01CA00  0011               	retfie		f
 37435  01CA02                     __end_of_TMR6_ISR:
 37436                           	opt callstack 0
 37437                           
 37438 ;; *************** function _TMR6_CallBack *****************
 37439 ;; Defined at:
 37440 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 37441 ;; Parameters:    Size  Location     Type
 37442 ;;		None
 37443 ;; Auto vars:     Size  Location     Type
 37444 ;;		None
 37445 ;; Return value:  Size  Location     Type
 37446 ;;                  1  [STACK] void 
 37447 ;; Registers used:
 37448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 37449 ;; Tracked objects:
 37450 ;;		On entry : 3F/39
 37451 ;;		On exit  : 0/0
 37452 ;;		Unchanged: 0/0
 37453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37458 ;;Total ram usage:        0 bytes
 37459 ;; Hardware stack levels used:    1
 37460 ;; Hardware stack levels required when called:    1
 37461 ;; This function calls:
 37462 ;;		Absolute function
 37463 ;;		_TMR6_DefaultInterruptHandler
 37464 ;; This function is called by:
 37465 ;;		_TMR6_ISR
 37466 ;; This function uses a reentrant model
 37467 ;;
 37468                           
 37469                           	psect	text181
 37470  01C86C                     __ptext181:
 37471                           	opt callstack 0
 37472  01C86C                     _TMR6_CallBack:
 37473                           	opt callstack 2
 37474                           
 37475                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 37476                           
 37477                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37478                           ;incstack = 0
 37479  01C86C  0100               	movlb	0	; () banked
 37480  01C86E  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 37481  01C870  1183               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 37482  01C872  1184               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 37483  01C874  B4D8               	btfsc	status,2,c
 37484  01C876  0012               	return	
 37485                           
 37486                           ; BSR set to: 0
 37487                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 37488  01C878  D801               	call	u1044_48
 37489  01C87A  0012               	return	
 37490  01C87C                     u1044_48:
 37491  01C87C  0005               	push	
 37492  01C87E  6EFA               	movwf	pclath,c
 37493  01C880  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 37494  01C882  6EFD               	movwf	tosl,c
 37495  01C884  5183               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 37496  01C886  6EFE               	movwf	tosh,c
 37497  01C888  5184               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 37498  01C88A  6EFF               	movwf	tosu,c
 37499  01C88C  50FA               	movf	pclath,w,c
 37500  01C88E  0012               	return		;indir
 37501  01C890                     __end_of_TMR6_CallBack:
 37502                           	opt callstack 0
 37503                           
 37504 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 37505 ;; Defined at:
 37506 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 37507 ;; Parameters:    Size  Location     Type
 37508 ;;		None
 37509 ;; Auto vars:     Size  Location     Type
 37510 ;;  i               1  [STACK] unsigned char 
 37511 ;; Return value:  Size  Location     Type
 37512 ;;                  1  [STACK] void 
 37513 ;; Registers used:
 37514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 37515 ;; Tracked objects:
 37516 ;;		On entry : 3F/0
 37517 ;;		On exit  : 0/0
 37518 ;;		Unchanged: 0/0
 37519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37524 ;;Total ram usage:        0 bytes
 37525 ;; Hardware stack levels used:    1
 37526 ;; This function calls:
 37527 ;;		Nothing
 37528 ;; This function is called by:
 37529 ;;		_TMR6_Initialize
 37530 ;;		_TMR6_CallBack
 37531 ;; This function uses a reentrant model
 37532 ;;
 37533                           
 37534                           	psect	text182
 37535  01BD48                     __ptext182:
 37536                           	opt callstack 0
 37537  01BD48                     _TMR6_DefaultInterruptHandler:
 37538                           	opt callstack 0
 37539                           
 37540                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37541  01BD48  52E6               	movf	postinc1,f,c
 37542                           
 37543                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 37544                           ;stkvar	_i @ sp[(-1)+0]
 37545                           
 37546                           ;incstack = 0
 37547  01BD4A  0EFF               	movlw	-1
 37548  01BD4C  6AE3               	clrf	plusw1,c
 37549  01BD4E                     l10723:
 37550                           
 37551                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 37552                           ;stkvar	_i @ sp[(-1)+0]
 37553  01BD4E  0EFF               	movlw	-1
 37554  01BD50  50E3               	movf	plusw1,w,c
 37555  01BD52  0D02               	mullw	2
 37556  01BD54  0E7D               	movlw	low _tickCount
 37557  01BD56  24F3               	addwf	243,w,c
 37558  01BD58  6ED9               	movwf	fsr2l,c
 37559  01BD5A  0E02               	movlw	high _tickCount
 37560  01BD5C  20F4               	addwfc	prodh,w,c
 37561  01BD5E  6EDA               	movwf	fsr2h,c
 37562  01BD60  50DE               	movf	postinc2,w,c
 37563  01BD62  10DE               	iorwf	postinc2,w,c
 37564  01BD64  B4D8               	btfsc	status,2,c
 37565  01BD66  D00C               	goto	l10727
 37566                           
 37567                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 37568                           ;stkvar	_i @ sp[(-1)+0]
 37569  01BD68  0EFF               	movlw	-1
 37570  01BD6A  50E3               	movf	plusw1,w,c
 37571  01BD6C  0D02               	mullw	2
 37572  01BD6E  0E7D               	movlw	low _tickCount
 37573  01BD70  24F3               	addwf	243,w,c
 37574  01BD72  6ED9               	movwf	fsr2l,c
 37575  01BD74  0E02               	movlw	high _tickCount
 37576  01BD76  20F4               	addwfc	prodh,w,c
 37577  01BD78  6EDA               	movwf	fsr2h,c
 37578  01BD7A  06DE               	decf	postinc2,f,c
 37579  01BD7C  0E00               	movlw	0
 37580  01BD7E  5ADD               	subwfb	postdec2,f,c
 37581  01BD80                     l10727:
 37582                           
 37583                           ;mcc_generated_files/tmr6.c: 207:  }
 37584                           ;stkvar	_i @ sp[(-1)+0]
 37585  01BD80  0EFF               	movlw	-1
 37586  01BD82  2AE3               	incf	plusw1,f,c
 37587                           
 37588                           ;stkvar	_i @ sp[(-1)+0]
 37589  01BD84  0EFF               	movlw	-1
 37590  01BD86  006F FF8C  F001    	movff	plusw1,btemp
 37591  01BD8C  0E0C               	movlw	12
 37592  01BD8E  6401               	cpfsgt	btemp^0,c
 37593  01BD90  D7DE               	goto	l10723
 37594                           
 37595                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 37596  01BD92  52E5               	movf	postdec1,f,c
 37597  01BD94  0012               	return		;funcret
 37598  01BD96                     __end_of_TMR6_DefaultInterruptHandler:
 37599                           	opt callstack 0
 37600                           
 37601 ;; *************** function _DMA1_DMASCNT_ISR *****************
 37602 ;; Defined at:
 37603 ;;		line 126 in file "mcc_generated_files/dma1.c"
 37604 ;; Parameters:    Size  Location     Type
 37605 ;;		None
 37606 ;; Auto vars:     Size  Location     Type
 37607 ;;		None
 37608 ;; Return value:  Size  Location     Type
 37609 ;;                  1    wreg      void 
 37610 ;; Registers used:
 37611 ;;		None
 37612 ;; Tracked objects:
 37613 ;;		On entry : 0/0
 37614 ;;		On exit  : 3F/1
 37615 ;;		Unchanged: 0/0
 37616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37621 ;;Total ram usage:        0 bytes
 37622 ;; Hardware stack levels used:    1
 37623 ;; This function calls:
 37624 ;;		Nothing
 37625 ;; This function is called by:
 37626 ;;		Interrupt level 2
 37627 ;; This function uses a non-reentrant model
 37628 ;;
 37629                           
 37630                           	psect	text183
 37631  01CB14                     __ptext183:
 37632                           	opt callstack 0
 37633  01CB14                     _DMA1_DMASCNT_ISR:
 37634                           	opt callstack 4
 37635                           
 37636                           ;incstack = 0
 37637  01CB14  EE14  F15E         	lfsr	1,___inthi_sp
 37638                           
 37639                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 37640  01CB18  0139               	movlb	57	; () banked
 37641  01CB1A  91A2               	bcf	162,0,b	;volatile
 37642                           
 37643                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 37644  01CB1C  0101               	movlb	1	; () banked
 37645  01CB1E  97D0               	bcf	_spi_link& (0+255),3,b	;volatile
 37646                           
 37647                           ; BSR set to: 1
 37648  01CB20  0011               	retfie		f
 37649  01CB22                     __end_of_DMA1_DMASCNT_ISR:
 37650                           	opt callstack 0
 37651                           
 37652 ;; *************** function _DMA1_DMADCNT_ISR *****************
 37653 ;; Defined at:
 37654 ;;		line 133 in file "mcc_generated_files/dma1.c"
 37655 ;; Parameters:    Size  Location     Type
 37656 ;;		None
 37657 ;; Auto vars:     Size  Location     Type
 37658 ;;		None
 37659 ;; Return value:  Size  Location     Type
 37660 ;;                  1    wreg      void 
 37661 ;; Registers used:
 37662 ;;		None
 37663 ;; Tracked objects:
 37664 ;;		On entry : 0/0
 37665 ;;		On exit  : 3F/39
 37666 ;;		Unchanged: 0/0
 37667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37672 ;;Total ram usage:        0 bytes
 37673 ;; Hardware stack levels used:    1
 37674 ;; This function calls:
 37675 ;;		Nothing
 37676 ;; This function is called by:
 37677 ;;		Interrupt level 2
 37678 ;; This function uses a non-reentrant model
 37679 ;;
 37680                           
 37681                           	psect	text184
 37682  01CB38                     __ptext184:
 37683                           	opt callstack 0
 37684  01CB38                     _DMA1_DMADCNT_ISR:
 37685                           	opt callstack 4
 37686                           
 37687                           ; BSR set to: 1
 37688                           ;incstack = 0
 37689  01CB38  EE14  F15E         	lfsr	1,___inthi_sp
 37690                           
 37691                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 37692  01CB3C  0139               	movlb	57	; () banked
 37693  01CB3E  93A2               	bcf	162,1,b	;volatile
 37694                           
 37695                           ; BSR set to: 57
 37696  01CB40  0011               	retfie		f
 37697  01CB42                     __end_of_DMA1_DMADCNT_ISR:
 37698                           	opt callstack 0
 37699                           
 37700 ;; *************** function _DMA1_DMAA_ISR *****************
 37701 ;; Defined at:
 37702 ;;		line 143 in file "mcc_generated_files/dma1.c"
 37703 ;; Parameters:    Size  Location     Type
 37704 ;;		None
 37705 ;; Auto vars:     Size  Location     Type
 37706 ;;		None
 37707 ;; Return value:  Size  Location     Type
 37708 ;;                  1    wreg      void 
 37709 ;; Registers used:
 37710 ;;		None
 37711 ;; Tracked objects:
 37712 ;;		On entry : 0/0
 37713 ;;		On exit  : 3F/39
 37714 ;;		Unchanged: 0/0
 37715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37720 ;;Total ram usage:        0 bytes
 37721 ;; Hardware stack levels used:    1
 37722 ;; This function calls:
 37723 ;;		Nothing
 37724 ;; This function is called by:
 37725 ;;		Interrupt level 2
 37726 ;; This function uses a non-reentrant model
 37727 ;;
 37728                           
 37729                           	psect	text185
 37730  01CB44                     __ptext185:
 37731                           	opt callstack 0
 37732  01CB44                     _DMA1_DMAA_ISR:
 37733                           	opt callstack 4
 37734                           
 37735                           ; BSR set to: 57
 37736                           ;incstack = 0
 37737  01CB44  EE14  F15E         	lfsr	1,___inthi_sp
 37738                           
 37739                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 37740  01CB48  0139               	movlb	57	; () banked
 37741  01CB4A  97A2               	bcf	162,3,b	;volatile
 37742                           
 37743                           ; BSR set to: 57
 37744  01CB4C  0011               	retfie		f
 37745  01CB4E                     __end_of_DMA1_DMAA_ISR:
 37746                           	opt callstack 0
 37747                           
 37748 ;; *************** function _DMA1_DMAOR_ISR *****************
 37749 ;; Defined at:
 37750 ;;		line 154 in file "mcc_generated_files/dma1.c"
 37751 ;; Parameters:    Size  Location     Type
 37752 ;;		None
 37753 ;; Auto vars:     Size  Location     Type
 37754 ;;		None
 37755 ;; Return value:  Size  Location     Type
 37756 ;;                  1    wreg      void 
 37757 ;; Registers used:
 37758 ;;		None
 37759 ;; Tracked objects:
 37760 ;;		On entry : 0/0
 37761 ;;		On exit  : 3F/39
 37762 ;;		Unchanged: 0/0
 37763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37768 ;;Total ram usage:        0 bytes
 37769 ;; Hardware stack levels used:    1
 37770 ;; This function calls:
 37771 ;;		Nothing
 37772 ;; This function is called by:
 37773 ;;		Interrupt level 2
 37774 ;; This function uses a non-reentrant model
 37775 ;;
 37776                           
 37777                           	psect	text186
 37778  01CB50                     __ptext186:
 37779                           	opt callstack 0
 37780  01CB50                     _DMA1_DMAOR_ISR:
 37781                           	opt callstack 4
 37782                           
 37783                           ; BSR set to: 57
 37784                           ;incstack = 0
 37785  01CB50  EE14  F15E         	lfsr	1,___inthi_sp
 37786                           
 37787                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 37788  01CB54  0139               	movlb	57	; () banked
 37789  01CB56  95A2               	bcf	162,2,b	;volatile
 37790                           
 37791                           ; BSR set to: 57
 37792  01CB58  0011               	retfie		f
 37793  01CB5A                     __end_of_DMA1_DMAOR_ISR:
 37794                           	opt callstack 0
 37795                           
 37796                           ;
 37797                           ; Interrupt Vector Table @ 0x8
 37798                           ;
 37799                           
 37800                           	psect	ivt0x8
 37801  000008                     __pivt0x8:
 37802                           	opt callstack 0
 37803  000008                     ivt0x8_base:
 37804                           	opt callstack 0
 37805                           
 37806                           ; Vector 0 : SWINT
 37807  000008  72E7               	dw	_Default_ISR shr (0+2)
 37808                           
 37809                           ; Vector 1 : HLVD
 37810  00000A  72E7               	dw	_Default_ISR shr (0+2)
 37811                           
 37812                           ; Vector 2 : OSF
 37813  00000C  72E7               	dw	_Default_ISR shr (0+2)
 37814                           
 37815                           ; Vector 3 : CSW
 37816  00000E  72E7               	dw	_Default_ISR shr (0+2)
 37817                           
 37818                           ; Vector 4 : NVM
 37819  000010  72E7               	dw	_Default_ISR shr (0+2)
 37820                           
 37821                           ; Vector 5 : SCAN
 37822  000012  72E7               	dw	_Default_ISR shr (0+2)
 37823                           
 37824                           ; Vector 6 : CRC
 37825  000014  72E7               	dw	_Default_ISR shr (0+2)
 37826                           
 37827                           ; Vector 7 : IOC
 37828  000016  72E7               	dw	_Default_ISR shr (0+2)
 37829                           
 37830                           ; Vector 8 : INT0
 37831  000018  72C1               	dw	_INT0_ISR shr (0+2)
 37832                           
 37833                           ; Vector 9 : ZCD
 37834  00001A  72E7               	dw	_Default_ISR shr (0+2)
 37835                           
 37836                           ; Vector 10 : AD
 37837  00001C  7137               	dw	_ADCC_ISR shr (0+2)
 37838                           
 37839                           ; Vector 11 : ADT
 37840  00001E  6E36               	dw	_ADCC_ThresholdISR shr (0+2)
 37841                           
 37842                           ; Vector 12 : CMP1
 37843  000020  72E7               	dw	_Default_ISR shr (0+2)
 37844                           
 37845                           ; Vector 13 : SMT1
 37846  000022  72E7               	dw	_Default_ISR shr (0+2)
 37847                           
 37848                           ; Vector 14 : SMT1PRA
 37849  000024  72E7               	dw	_Default_ISR shr (0+2)
 37850                           
 37851                           ; Vector 15 : SMT1PRW
 37852  000026  72E7               	dw	_Default_ISR shr (0+2)
 37853                           
 37854                           ; Vector 16 : DMA1SCNT
 37855  000028  72C5               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 37856                           
 37857                           ; Vector 17 : DMA1DCNT
 37858  00002A  72CE               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 37859                           
 37860                           ; Vector 18 : DMA1OR
 37861  00002C  72D4               	dw	_DMA1_DMAOR_ISR shr (0+2)
 37862                           
 37863                           ; Vector 19 : DMA1A
 37864  00002E  72D1               	dw	_DMA1_DMAA_ISR shr (0+2)
 37865                           
 37866                           ; Vector 20 : SPI1RX
 37867  000030  72E7               	dw	_Default_ISR shr (0+2)
 37868                           
 37869                           ; Vector 21 : SPI1TX
 37870  000032  72E7               	dw	_Default_ISR shr (0+2)
 37871                           
 37872                           ; Vector 22 : SPI1
 37873  000034  72E7               	dw	_Default_ISR shr (0+2)
 37874                           
 37875                           ; Vector 23 : I2C1RX
 37876  000036  72E7               	dw	_Default_ISR shr (0+2)
 37877                           
 37878                           ; Vector 24 : I2C1TX
 37879  000038  72E7               	dw	_Default_ISR shr (0+2)
 37880                           
 37881                           ; Vector 25 : I2C1
 37882  00003A  72E7               	dw	_Default_ISR shr (0+2)
 37883                           
 37884                           ; Vector 26 : I2C1E
 37885  00003C  72E7               	dw	_Default_ISR shr (0+2)
 37886                           
 37887                           ; Vector 27 : U1RX
 37888  00003E  71D0               	dw	_UART1_rx_vect_isr shr (0+2)
 37889                           
 37890                           ; Vector 28 : U1TX
 37891  000040  72E7               	dw	_Default_ISR shr (0+2)
 37892                           
 37893                           ; Vector 29 : U1E
 37894  000042  72E7               	dw	_Default_ISR shr (0+2)
 37895                           
 37896                           ; Vector 30 : U1
 37897  000044  72E7               	dw	_Default_ISR shr (0+2)
 37898                           
 37899                           ; Vector 31 : TMR0
 37900  000046  72E7               	dw	_Default_ISR shr (0+2)
 37901                           
 37902                           ; Vector 32 : TMR1
 37903  000048  72E7               	dw	_Default_ISR shr (0+2)
 37904                           
 37905                           ; Vector 33 : TMR1G
 37906  00004A  72E7               	dw	_Default_ISR shr (0+2)
 37907                           
 37908                           ; Vector 34 : TMR2
 37909  00004C  72E7               	dw	_Default_ISR shr (0+2)
 37910                           
 37911                           ; Vector 35 : CCP1
 37912  00004E  72E7               	dw	_Default_ISR shr (0+2)
 37913                           
 37914                           ; Vector 36 : Undefined
 37915  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 37916                           
 37917                           ; Vector 37 : NCO1
 37918  000052  72E7               	dw	_Default_ISR shr (0+2)
 37919                           
 37920                           ; Vector 38 : CWG1
 37921  000054  72E7               	dw	_Default_ISR shr (0+2)
 37922                           
 37923                           ; Vector 39 : CLC1
 37924  000056  72E7               	dw	_Default_ISR shr (0+2)
 37925                           
 37926                           ; Vector 40 : INT1
 37927  000058  7067               	dw	_INT1_ISR shr (0+2)
 37928                           
 37929                           ; Vector 41 : CMP2
 37930  00005A  72E7               	dw	_Default_ISR shr (0+2)
 37931                           
 37932                           ; Vector 42 : DMA2SCNT
 37933  00005C  72E7               	dw	_Default_ISR shr (0+2)
 37934                           
 37935                           ; Vector 43 : DMA2DCNT
 37936  00005E  72E7               	dw	_Default_ISR shr (0+2)
 37937                           
 37938                           ; Vector 44 : DMA2OR
 37939  000060  72E7               	dw	_Default_ISR shr (0+2)
 37940                           
 37941                           ; Vector 45 : DMA2A
 37942  000062  72E7               	dw	_Default_ISR shr (0+2)
 37943                           
 37944                           ; Vector 46 : I2C2RX
 37945  000064  72E7               	dw	_Default_ISR shr (0+2)
 37946                           
 37947                           ; Vector 47 : I2C2TX
 37948  000066  72E7               	dw	_Default_ISR shr (0+2)
 37949                           
 37950                           ; Vector 48 : I2C2
 37951  000068  72E7               	dw	_Default_ISR shr (0+2)
 37952                           
 37953                           ; Vector 49 : I2C2E
 37954  00006A  72E7               	dw	_Default_ISR shr (0+2)
 37955                           
 37956                           ; Vector 50 : U2RX
 37957  00006C  71E4               	dw	_UART2_rx_vect_isr shr (0+2)
 37958                           
 37959                           ; Vector 51 : U2TX
 37960  00006E  71DA               	dw	_UART2_tx_vect_isr shr (0+2)
 37961                           
 37962                           ; Vector 52 : U2E
 37963  000070  72E7               	dw	_Default_ISR shr (0+2)
 37964                           
 37965                           ; Vector 53 : U2
 37966  000072  72E7               	dw	_Default_ISR shr (0+2)
 37967                           
 37968                           ; Vector 54 : TMR3
 37969  000074  65D3               	dw	_TMR3_ISR shr (0+2)
 37970                           
 37971                           ; Vector 55 : TMR3G
 37972  000076  72E7               	dw	_Default_ISR shr (0+2)
 37973                           
 37974                           ; Vector 56 : TMR4
 37975  000078  72E7               	dw	_Default_ISR shr (0+2)
 37976                           
 37977                           ; Vector 57 : CCP2
 37978  00007A  72E7               	dw	_Default_ISR shr (0+2)
 37979                           
 37980                           ; Vector 58 : Undefined
 37981  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 37982                           
 37983                           ; Vector 59 : CWG2
 37984  00007E  72E7               	dw	_Default_ISR shr (0+2)
 37985                           
 37986                           ; Vector 60 : CLC2
 37987  000080  72E7               	dw	_Default_ISR shr (0+2)
 37988                           
 37989                           ; Vector 61 : INT2
 37990  000082  72E7               	dw	_Default_ISR shr (0+2)
 37991                           
 37992                           ; Vector 62 : Undefined
 37993  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 37994                           
 37995                           ; Vector 63 : Undefined
 37996  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 37997                           
 37998                           ; Vector 64 : Undefined
 37999  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 38000                           
 38001                           ; Vector 65 : Undefined
 38002  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 38003                           
 38004                           ; Vector 66 : Undefined
 38005  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 38006                           
 38007                           ; Vector 67 : Undefined
 38008  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 38009                           
 38010                           ; Vector 68 : Undefined
 38011  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 38012                           
 38013                           ; Vector 69 : Undefined
 38014  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 38015                           
 38016                           ; Vector 70 : TMR5
 38017  000094  69D2               	dw	_TMR5_ISR shr (0+2)
 38018                           
 38019                           ; Vector 71 : TMR5G
 38020  000096  72E7               	dw	_Default_ISR shr (0+2)
 38021                           
 38022                           ; Vector 72 : TMR6
 38023  000098  727A               	dw	_TMR6_ISR shr (0+2)
 38024                           
 38025                           ; Vector 73 : CCP3
 38026  00009A  72E7               	dw	_Default_ISR shr (0+2)
 38027                           
 38028                           ; Vector 74 : CWG3
 38029  00009C  72E7               	dw	_Default_ISR shr (0+2)
 38030                           
 38031                           ; Vector 75 : CLC3
 38032  00009E  72E7               	dw	_Default_ISR shr (0+2)
 38033                           
 38034                           ; Vector 76 : Undefined
 38035  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 38036                           
 38037                           ; Vector 77 : Undefined
 38038  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 38039                           
 38040                           ; Vector 78 : Undefined
 38041  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 38042                           
 38043                           ; Vector 79 : Undefined
 38044  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 38045                           
 38046                           ; Vector 80 : CCP4
 38047  0000A8  72E7               	dw	_Default_ISR shr (0+2)
 38048                           
 38049                           ; Vector 81 : CLC4
 38050  0000AA  72E7               	dw	_Default_ISR shr (0+2)
 38051  0000AC                     ivt0x8_undefint:
 38052                           	opt callstack 0
 38053  0000AC  00FF               	reset	
 38054                           
 38055                           	psect	text187
 38056  000000                     __ptext187:
 38057                           	opt callstack 0
 38058                           
 38059                           	psect	rparam
 38060  0000                     
 38061                           	psect	temp
 38062  000001                     btemp:
 38063                           	opt callstack 0
 38064  000001                     	ds	32
 38065  0000                     wtemp0	set	btemp
 38066  0000                     wtemp1	set	btemp+2
 38067  0000                     wtemp2	set	btemp+4
 38068  0000                     wtemp3	set	btemp+6
 38069  0000                     wtemp4	set	btemp+8
 38070  0000                     wtemp5	set	btemp+10
 38071  0000                     wtemp8	set	btemp+1
 38072  0000                     ttemp0	set	btemp
 38073  0000                     ttemp1	set	btemp+3
 38074  0000                     ttemp2	set	btemp+6
 38075  0000                     ttemp3	set	btemp+9
 38076  0000                     ttemp5	set	btemp+1
 38077  0000                     ttemp6	set	btemp+4
 38078  0000                     ttemp7	set	btemp+8
 38079  0000                     ltemp0	set	btemp
 38080  0000                     ltemp1	set	btemp+4
 38081  0000                     ltemp2	set	btemp+8
 38082  0000                     lltemp0	set	btemp
 38083  0000                     lltemp1	set	btemp+8
 38084  0000                     lltemp2	set	btemp+16
 38085  0000                     lltemp3	set	btemp+24
 38086                           tosu	equ	0x3FFF
 38087                           tosh	equ	0x3FFE
 38088                           tosl	equ	0x3FFD
 38089                           stkptr	equ	0x3FFC
 38090                           pclatu	equ	0x3FFB
 38091                           pclath	equ	0x3FFA
 38092                           pcl	equ	0x3FF9
 38093                           tblptru	equ	0x3FF8
 38094                           tblptrh	equ	0x3FF7
 38095                           tblptrl	equ	0x3FF6
 38096                           tablat	equ	0x3FF5
 38097                           prodh	equ	0x3FF4
 38098                           prodl	equ	0x3FF3
 38099                           indf0	equ	0x3FEF
 38100                           postinc0	equ	0x3FEE
 38101                           postdec0	equ	0x3FED
 38102                           preinc0	equ	0x3FEC
 38103                           plusw0	equ	0x3FEB
 38104                           fsr0h	equ	0x3FEA
 38105                           fsr0l	equ	0x3FE9
 38106                           wreg	equ	0x3FE8
 38107                           indf1	equ	0x3FE7
 38108                           postinc1	equ	0x3FE6
 38109                           postdec1	equ	0x3FE5
 38110                           preinc1	equ	0x3FE4
 38111                           plusw1	equ	0x3FE3
 38112                           fsr1h	equ	0x3FE2
 38113                           fsr1l	equ	0x3FE1
 38114                           bsr	equ	0x3FE0
 38115                           indf2	equ	0x3FDF
 38116                           postinc2	equ	0x3FDE
 38117                           postdec2	equ	0x3FDD
 38118                           preinc2	equ	0x3FDC
 38119                           plusw2	equ	0x3FDB
 38120                           fsr2h	equ	0x3FDA
 38121                           fsr2l	equ	0x3FD9
 38122                           status	equ	0x3FD8


Data Sizes:
    Strings     1285
    Constant    492
    Data        1073
    BSS         1305
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     254
    BANK2           256      0     231
    BANK3           256      0     198
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_115(CODE[1]), STR_77(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_112(CODE[3]), STR_108(CODE[3]), STR_103(CODE[3]), STR_98(CODE[3]), 
		 -> STR_93(CODE[3]), STR_89(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_112(CODE[3]), STR_108(CODE[3]), STR_103(CODE[3]), STR_98(CODE[3]), 
		 -> STR_93(CODE[3]), STR_89(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_78(CODE[127]), STR_76(CODE[3]), STR_75(CODE[3]), 
		 -> STR_74(CODE[19]), STR_73(CODE[19]), STR_72(CODE[19]), STR_71(CODE[19]), 
		 -> STR_70(CODE[19]), STR_69(CODE[19]), STR_68(CODE[24]), STR_67(CODE[15]), 
		 -> STR_66(CODE[15]), STR_65(CODE[15]), STR_64(CODE[10]), STR_63(CODE[10]), 
		 -> STR_62(CODE[19]), STR_61(CODE[19]), STR_58(CODE[3]), STR_57(CODE[3]), 
		 -> STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[21]), 
		 -> STR_48(CODE[21]), STR_47(CODE[20]), STR_46(CODE[20]), STR_45(CODE[21]), 
		 -> STR_44(CODE[21]), STR_43(CODE[21]), STR_42(CODE[22]), STR_41(CODE[22]), 
		 -> STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_78(CODE[127]), STR_76(CODE[3]), STR_75(CODE[3]), 
		 -> STR_74(CODE[19]), STR_73(CODE[19]), STR_72(CODE[19]), STR_71(CODE[19]), 
		 -> STR_70(CODE[19]), STR_69(CODE[19]), STR_68(CODE[24]), STR_67(CODE[15]), 
		 -> STR_66(CODE[15]), STR_65(CODE[15]), STR_64(CODE[10]), STR_63(CODE[10]), 
		 -> STR_62(CODE[19]), STR_61(CODE[19]), STR_58(CODE[3]), STR_57(CODE[3]), 
		 -> STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[21]), 
		 -> STR_48(CODE[21]), STR_47(CODE[20]), STR_46(CODE[20]), STR_45(CODE[21]), 
		 -> STR_44(CODE[21]), STR_43(CODE[21]), STR_42(CODE[22]), STR_41(CODE[22]), 
		 -> STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_60(CODE[9]), STR_59(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_60(CODE[9]), STR_59(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_84(CODE[4]), STR_83(CODE[4]), STR_80(CODE[4]), STR_79(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_84(CODE[4]), STR_83(CODE[4]), STR_80(CODE[4]), STR_79(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_58(CODE[3]), STR_57(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_78(CODE[127]), STR_76(CODE[3]), STR_75(CODE[3]), STR_74(CODE[19]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_71(CODE[19]), STR_70(CODE[19]), 
		 -> STR_69(CODE[19]), STR_68(CODE[24]), STR_67(CODE[15]), STR_66(CODE[15]), 
		 -> STR_65(CODE[15]), STR_64(CODE[10]), STR_63(CODE[10]), STR_62(CODE[19]), 
		 -> STR_61(CODE[19]), STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), 
		 -> STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), 
		 -> STR_49(CODE[21]), STR_48(CODE[21]), STR_47(CODE[20]), STR_46(CODE[20]), 
		 -> STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[21]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6495_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_78(CODE[127]), STR_76(CODE[3]), STR_75(CODE[3]), STR_74(CODE[19]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_71(CODE[19]), STR_70(CODE[19]), 
		 -> STR_69(CODE[19]), STR_68(CODE[24]), STR_67(CODE[15]), STR_66(CODE[15]), 
		 -> STR_65(CODE[15]), STR_64(CODE[10]), STR_63(CODE[10]), STR_62(CODE[19]), 
		 -> STR_61(CODE[19]), STR_58(CODE[3]), STR_57(CODE[3]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[21]), STR_48(CODE[21]), 
		 -> STR_47(CODE[20]), STR_46(CODE[20]), STR_45(CODE[21]), STR_44(CODE[21]), 
		 -> STR_43(CODE[21]), STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), 
		 -> STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_78(CODE[127]), STR_76(CODE[3]), STR_75(CODE[3]), STR_74(CODE[19]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_71(CODE[19]), STR_70(CODE[19]), 
		 -> STR_69(CODE[19]), STR_68(CODE[24]), STR_67(CODE[15]), STR_66(CODE[15]), 
		 -> STR_65(CODE[15]), STR_64(CODE[10]), STR_63(CODE[10]), STR_62(CODE[19]), 
		 -> STR_61(CODE[19]), STR_58(CODE[3]), STR_57(CODE[3]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[21]), STR_48(CODE[21]), 
		 -> STR_47(CODE[20]), STR_46(CODE[20]), STR_45(CODE[21]), STR_44(CODE[21]), 
		 -> STR_43(CODE[21]), STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), 
		 -> STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_78(CODE[127]), STR_76(CODE[3]), STR_75(CODE[3]), STR_74(CODE[19]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_71(CODE[19]), STR_70(CODE[19]), 
		 -> STR_69(CODE[19]), STR_68(CODE[24]), STR_67(CODE[15]), STR_66(CODE[15]), 
		 -> STR_65(CODE[15]), STR_64(CODE[10]), STR_63(CODE[10]), STR_62(CODE[19]), 
		 -> STR_61(CODE[19]), STR_58(CODE[3]), STR_57(CODE[3]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[21]), STR_48(CODE[21]), 
		 -> STR_47(CODE[20]), STR_46(CODE[20]), STR_45(CODE[21]), STR_44(CODE[21]), 
		 -> STR_43(CODE[21]), STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), 
		 -> STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_60(CODE[9]), STR_59(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_60(CODE[9]), STR_59(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_60(CODE[9]), 
		 -> STR_59(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    S4899tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_60(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_59(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  596874
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                   1     1      0  125150
                             _WaitMs
                   _cal_current_zero
                     _clear_adc_scan
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     4      1     266
                        _check_range
                     _get_raw_result
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    5521
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    5431
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    5431
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    5431
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     _cal_current_zero
       _check_range
       _get_raw_result
     _clear_adc_scan
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FE       7       99.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     46F      58        0.0%
DATA                 0      0     97C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb  7 03:38:49 2020

                     _SPI1_Exchange8bit C936                __end_of_set_display_info C9AE  
                                     _C 06FF                                       _D 082A  
                                     _H 01C7                                       _P 01F2  
                                     _R 00AF                                       _S 0254  
                                     _T F9DD                                       _V 0107  
      __end_of_TMR5_SetInterruptHandler C676            __end_of_start_switch_handler C916  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FAE5                  __end_of_FVR_Initialize CB82  
                        _check_day_time 8E3A                             __CFG_LVP$ON 000000  
                                   l169 CA6E                                     l807 C944  
                                   l673 C52E                                     _GIE 01FE97  
                                   _abs BF4A                                     _pad A238  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize CA1A  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack C848  
                     _update_adc_result C1DA                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00BA                           _INT1_CallBack C7DC  
                          __CFG_ZCD$OFF 000000                                    l1002 C156  
                                  l2011 8FC8                                    l2007 8FD0  
                                  l2202 77F0                                    l3100 5396  
                                  l1190 C196                                    l2160 3E2C  
                                  l1336 12A2                                    l1353 194E  
                                  l1363 19F2                                    l1355 1952  
                       _timer3ReloadVal 009E                                    l2156 3AEE  
                                  l1612 B05C                                    l2420 6C08  
                                  l1700 8A76                                    l2261 A294  
                                  l2317 123A                                    l2077 9DB0  
                                  l1373 1BF6                                    l2086 8862  
                                  l1374 1E1E                                    l3055 4E1C  
                                  l3207 BF8A                                    l1631 C2D2  
                                  l3136 4660                                    l1616 B376  
                                  l2281 593A                                    l2361 0B1A  
                                  l2346 066A                                    l3067 4CAC  
                                  l3307 9FFE                                    l2435 616C  
                                  l1707 A458                                    l1379 23E6  
                                  l1484 BBFA                                    l3238 7F9C  
                                  l1398 6854                                    l1831 5856  
                                  l3176 8C74                                    l1912 AB6A  
                                  l1690 C230                                    l3602 B512  
                                  l1747 C9AA                                    l2485 33C8  
                  _ADCC_StartConversion CA88                                    l2815 95DE  
                                  l3199 9166                                    l2399 78DE  
                                  l1871 B714                                    l1947 8E30  
                                  l1699 891A                                    l2781 966C  
                                  l3574 8642                                    l1887 AE4E  
                                  l2777 AC2E                                    l1994 A57A  
                                  l2788 9740                                    l8101 47B0  
                                  l3589 B596                                    l8111 4806  
                                  l8201 4B5E                                    l8113 4836  
                                  l8107 47F0                                    l8051 B1FA  
                                  l8213 4C36                                    l9021 954A  
                                  l9005 94C8                                    l8231 4CCE  
                                  l8223 4C90                                    l8215 4C5C  
                                  l8119 4858                                    l9031 958C  
                                  l9023 9566                                    l8233 4CE0  
                                  l8049 B1D8                                    l8251 4D1A  
                                  l8163 4A28                                    l8083 4700  
                                  l8403 B586                                    l8237 4CEC  
                                  l8165 4A3A                                    l8173 4A74  
                                  l8149 4996                                    l8077 46C0  
                                  l9029 9576                                    l9045 9344  
                                  l8263 4D78                                    l8247 4D14  
                                  l8191 4B10                                    l8159 4A08  
                                  l8095 477E                                    l8087 4716  
                                  l8431 6A94                                    l8273 4DA4  
                                  l8193 4B22                                    l8169 4A44  
                                  l8089 4746                                    l8361 BF7A  
                                  l8441 6B9A                                    l8433 6AE4  
                                  l8417 6976                                    l9057 9416  
                                  l8285 4DFC                                    l8277 4DBC  
                                  l8197 4B2C                                    l9093 BCE6  
                                  l8437 6B2C                                    l9077 9C24  
                                  l9069 9B78                                    l8711 3E96  
                                  l8279 4DCC                                    l8607 5072  
                                  l8535 837E                                    l8527 82D2  
                                  l8519 824A                                    l8375 9104  
                                  l8721 3F0C                                    l8641 51D0  
                                  l8633 519E                                    l8625 5138  
                                  l8617 5102                                    l8561 4EBC  
                                  l8481 7B68                                    l8385 915E  
                                  l8651 5212                                    l8627 514A  
                                  l8635 51A2                                    l8555 4E7C  
                                  l8475 7B14                                    l8379 9108  
                                  l8459 B502                                    l8805 4470  
                                  l8717 3ED6                                    l8661 525C  
                                  l8581 4F9A                                    l8565 4ED2  
                                  l8823 44E6                                    l8735 3FA4  
                                  l8719 3EDC                                    l8647 51EC  
                                  l8575 4F5A                                    l8567 4F02  
                                  l8487 7BAE                                    l8833 455A  
                                  l8809 4496                                    l8737 3FAA  
                                  l8729 3F64                                    l8681 5312  
                                  l8665 5262                                    l8593 501E  
                                  l8585 4FB0                                    l8851 460E  
                                  l8843 45CA                                    l8819 44E0  
                                  l8747 3FFC                                    l8739 3FDA  
                                  l8675 52D6                                    l8587 4FE0  
                                  l8499 7C80                                    l8907 99E2  
                                  l8923 A152                                    l8853 4628  
                                  l8837 45A0                                    l8693 536A  
                                  l9709 7F8C                                    l9725 84B4  
                                  l8695 537A                                    l8687 5342  
                                  l8599 5058                                    l8927 A16A  
                                  l8919 A140                                    l9727 8520  
                                  l9673 7D4C                                    l8873 98D2  
                                  l8945 A21E                                    l8937 A1EA  
                                  l8961 AC2C                                    l8953 ABB6  
                                  l9691 7E26                                    l9683 7DE2  
                                  l9675 7D6E                                    l9693 7E4A  
                                  l8885 9908                                    l8957 ABF8  
                                  l8799 4454                                    l8975 96BA  
                                  l9695 7E88                                    l8879 98E8  
                                  STR_1 FECA                                    STR_2 FE8B  
                                  l8969 962A                                    l9689 7E0E  
                                  STR_3 FFD1                                    STR_4 FE37  
                                  l8987 973E                                    l8979 9708  
                                  l9699 7EF0                                    l8899 99AE  
                                  l8995 BE48                                    STR_5 FDCE  
                                  STR_6 FDCE                                    STR_7 FDCE  
                                  STR_8 FE22                                    l9991 8B30  
                                  l9983 8AC4                                    STR_9 FBC9  
                                  l9993 8B3E                                    l9995 8B54  
                                  l9997 8B72                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6010 4D0C                                    u6120 C414  
                                  u6050 4D68                                    u6130 C416  
                                  _T6PR 003F93                                    u6300 9158  
                                  _PMD0 0039C0                                    _PMD1 0039C1  
                                  u6230 BF5E                                    _PMD2 0039C2  
                                  u6055 4D58                                    _PMD3 0039C3  
                                  u7200 45B4                                    u6080 4D88  
                                  u6240 9088                                    _PMD4 0039C4  
                                  u7105 440E                                    _PMD5 0039C5  
                                  u6410 6A3A                                    u6330 B544  
                                  _PMD6 0039C6                                    _PMD7 0039C7  
                                  u7140 44D8                                    u6340 B546  
                                  u6245 907E                                    u7070 3FEA  
                                  u6510 C474                                    u6430 6B12  
                                  u6415 6A30                                    u5800 49DC  
                                  u6520 C476                                    u7320 A196  
                                  u6360 690E                                    u5801 49D6  
                                  u5650 B228                                    u6610 7CB8  
                                  u7250 9934                                    u6290 9156  
                                  u6370 695A                                    u6435 6B08  
                                  u7180 4534                                    u6540 7B0E  
                                  u6700 82FE                                    u7340 A20A  
                                  u6460 C00E                                    u7085 417E  
                                  u6285 9138                                    u6365 6904  
                                  u7190 456E                                    u5910 4B54  
                                  u6630 7D0A                                    u7270 99CE  
                                  u6470 C010                                    u7095 4246  
                                  u5840 4A6C                                    u6560 7B64  
                                  u6720 83B6                                    u7440 BE44  
                                  u7520 9594                                    u5680 C444  
                                  u6480 B4C0                                    u7185 4524  
                                  u5657 B21A                                    u5850 4A8C  
                                  u5818 49DE                                    u7450 94A8  
                                  u5690 C446                                    u7610 9B72  
                                  u6490 B4C2                                    u5915 4B44  
                                  u6571 7B6E                                    u6395 6994  
                                  u6580 7BA8                                    u6740 8408  
                                  u6660 8244                                    u7380 AC28  
                                  u7540 95BE                                    u7460 94BC  
                                  u6396 699A                                    u7620 9BA4  
                                  u5845 4A5C                                    u6397 69A8  
                                  u5950 4C7E                                    u5790 49BC  
                                  u6590 7BDA                                    u7470 94F6  
                                  u7455 949E                                    u7551 9304  
                                  u6920 5254                                    u6680 829A  
                                  u7560 933E                                    u7640 9C5C  
                                  u6690 82CC                                    u7570 9370  
                                  u7475 94EC                                    u7660 BCC2  
                                  u5990 4CF2                                    u9414 56C2  
                                  u9334 53BC                                    u7670 BCE2  
                                  u7590 944E                                    u9415 56BC  
                                  u9335 53B6                                    u6960 52B0  
                                  u6880 51CA                                    u9440 56EC  
                                  u8800 7F38                                    u6970 52EA  
                                  u9290 8BE8                                    u9434 56E4  
                                  u9354 53EC                                    u9435 56DE  
                                  u9355 53E6                                    u6980 5326  
                                  u8900 C896                                    u6965 52A0  
                                  u9374 540E                                    u9375 5408  
                                  u9615 C04A                                    u8840 854E  
                                  u9394 55F4                                    u8770 7DDE  
                                  _PLLR 01CEE0                                    u9715 B9EA  
                                  u9395 55EE                                    u9716 B9EC  
                                  u9708 B9B8                                    u9660 B5D4  
                                  u8790 7F36                                    u8847 8540  
                                  u9840 8C94                                    u8880 85E8  
                                  u9690 B9B6                                    u8890 8616  
                                  u8885 85E2                                    u9765 CAB4  
                                  u9870 AAF6                                    u9766 CAB6  
                                  u8887 85D4                                    u9775 CAA4  
                                  u9776 CAA6                                    u8897 8608  
                                  u9890 AB42                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR C508  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0297  
                                  _cp_h FAF5                                    _cp_l FAF1  
                                  _atoi 7D32                                    _ctoa B410  
                                  _main 1244                                    _dtoa 585C  
                                  _nanf BAD4                                    _seed 01F6  
                                  _prec 003C                                    _nout 009A  
                                  _spin FA6D                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 77F4                                    btemp 0001  
                                  _utoa 6BC4                                    _xtoa 6128  
                __end_of_check_adc_scan CB62                           ___fpclassifyf 8FDA  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 00A2  
             __end_of_SPI1_Exchange8bit C954               __size_of_clear_hid_pflags 0066  
                       _TMR3_Initialize BF02             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                        _SPI1STATUSbits 003D17                       _UART1_rx_vect_isr C740  
                          ___param_bank 000000                  __end_of_check_day_time 8FDA  
                    ?_UART1_rx_vect_isr 0021                        __end_of_INT0_ISR CB12  
                      __end_of_INT1_ISR C1DA          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma B064           __end_of_OSCILLATOR_Initialize CA74  
                                 l10003 8BA0                                   l10005 8BBE  
                                 l10015 8BF2                                   l10007 8BD4  
                                 l11001 9A2A                                   l10025 8C54  
                                 l10041 53D2                                   l11003 9A38  
                                 l11011 9A40                                   l10051 54F8  
                                 l10035 53A2                                   l10107 C5A6  
                                 l11013 9A72                                   l10207 8F76  
                                 l10063 560C                                   l10055 55DA  
                                 l10081 5824                                   l10225 C2DC  
                                 l11211 C52A                                   l11027 9B24  
                                 l11019 9AAA                                   l10075 5788  
                                 l10067 56A8                                   l10317 BD22  
                                 l11135 AC4A                                   l10089 5836  
                                 l10337 B5D8                                   l10195 8F04  
                                 l13011 6232                                   l13003 61D2  
                                 l11411 754E                                   l11139 ACC6  
                                 l11237 C13E                                   l11421 758A  
                                 l11255 C17E                                   l13111 268A  
                                 l10279 C4C0                                   l11407 7538  
                                 l11601 611A                                   l13113 26C4  
                                 l11433 75DC                                   l11417 757E  
                                 l11409 7548                                   l10723 BD4E  
                                 l10811 8CE2                                   l10803 8CB6  
                                 l13051 6498                                   l13027 6328  
                                 l13035 63AE                                   l13131 283E  
                                 l13115 26DA                                   l11427 75B4  
                                 l14011 2310                                   l12421 B264  
                                 l13141 28D6                                   l11453 765C  
                                 l11445 7636                                   l11437 75E8  
                                 l14021 234E                                   l10727 BD80  
                                 l11199 C8F0                                   l10815 8CF6  
                                 l12511 B42E                                   l13207 2E6A  
                                 l13311 AF7C                                   l12409 9F14  
                                 l12425 B2A2                                   l12513 B45A  
                                 l13241 31BE                                   l13217 2F8C  
                                 l13153 2A16                                   l12441 72C8  
                                 l11553 ACF8                                   l11723 B654  
                                 l11387 92D0                                   l13227 3042  
                                 l13091 2542                                   l10843 AB48  
                                 l10923 C1FA                                   l11475 77B6  
                                 l14035 2396                                   l14027 2360  
                                 l13261 3350                                   l13173 2C28  
                                 l13165 2B70                                   l13149 29C2  
                                 l13093 2558                                   l13309 AF3A  
                                 l12461 749E                                   l12453 73F0  
                                 l13333 B068                                   l11557 AD36  
                                 l10829 AAFA                                   l11477 77E0  
                                 l14029 2378                                   PRLOCK 0039EF  
                                 l12703 05F6                                   l12631 022C  
                                 l13255 32F6                                   l13271 3374  
                                 l12447 7386                                   l13335 B070  
                                 l13415 9D4A                                   l14039 23BC  
                                 l11729 B664                                   l13441 357C  
                                 l13433 34BC                                   l10881 C246  
                                 l12473 A264                                   l12545 5974  
                                 l12537 592A                                   l12721 06B8  
                                 l12705 0602                                   l12609 00F0  
                                 l12617 0146                                   l13265 3354  
                                 l13177 2C5C                                   l13089 2508  
                                 l13337 B07A                                   l13345 B090  
                                 l10785 A64C                                   l13601 662E  
                                 l13409 9CE4                                   l14049 2412  
                                 l12483 A2DA                                   l12731 077A  
                                 l12627 01EA                                   l12635 0258  
                                 l13339 B088                                   l13347 B0BC  
                                 l10779 A59A                                   l10947 B6D2  
                                 l10971 A0CC                                   l13453 36EA  
                                 l13445 35E8                                   l13437 3510  
                                 l12477 A28C                                   l12549 5992  
                                 l12493 A952                                   l12741 0926  
                                 l12725 06F0                                   l12661 0396  
                                 l12645 02FC                                   l12653 032A  
                                 l12629 0216                                   l13197 2DBC  
                                 l13463 3916                                   l12487 A324  
                                 l12479 A29E                                   l12583 5C92  
                                 l12559 5BA4                                   l12807 0D90  
                                 l12815 0EA2                                   l12671 04D2  
                                 l13631 67AA                                   l10959 B6EA  
                                 l10967 A06A                                   l13481 3B20  
                                 l13473 3A56                                   l13457 373E  
                                 l12841 0FD6                                   l12665 0406  
                                 l13289 B164                                   l13369 A370  
                                 l13467 3990                                   l12579 5C56  
                                 l12843 0FF0                                   l12827 0F3A  
                                 l12763 0B12                                   l12755 0A48  
                                 l12683 0554                                   l12667 0470  
                                 l12923 7980                                   l12915 7914  
                                 l13723 8A12                                   l13493 3E24  
                                 l13477 3AFE                                   l10997 9A14  
                                 l12853 1092                                   l12765 0B34  
                                 l12597 00AC                                   l12933 7A36  
                                 l13709 88EA                                   l13629 679C  
                                 l10999 9A24                                   l12863 10E2  
                                 l12791 0CBA                                   l12695 0594  
                                 l12687 057C                                   l12919 7950  
                                 l12951 6BF8                                   l13655 8754  
                                 l13639 8660                                   l13831 1472  
                                 l12689 058E                                   l12937 7A72  
                                 l12929 7A0A                                   l13593 65CC  
                                 l13665 882C                                   l13913 1956  
                                 l13683 B7F8                                   l12779 0C32  
                                 l13915 1984                                   l13907 1944  
                                 l13771 1284                                   l13589 65B8  
                                 l13773 128C                                   l12879 119A  
                                 l12799 0D24                                   l12959 6C54  
                                 l12991 615C                                   l13935 19DE  
                                 l13927 19B8                                   l12969 6E4A  
                                 l13945 1A02                                   l13777 12AA  
                                 l12899 7860                                   l13779 12BC  
                                 l12997 6196                                   l13973 20BA  
                                 l13957 1B02                                   l13877 16DA  
                                 l13983 223C                                   l13969 205A  
                                 l13985 2268                                   l13889 17B4  
                                 l13999 22BE                         __end_of___aodiv 7D32  
                          _Volts_to_SOC AC38                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 4E26  
                                 _ADCLK 003EFF                         __end_of___aomod 842C  
                                 _ADPCH 003EF1                         __end_of___fldiv 53A0  
                                 _ADREF 003EFD                         __end_of___awdiv 99FC  
                       __end_of___flneg BE72                                   STR_10 FC84  
                                 STR_11 FD60                                   STR_12 FE4C  
                                 STR_21 FF82                                   STR_13 FE61  
                                 STR_14 FF1E                                   STR_30 FD8C  
                                 STR_22 FD4A                                   STR_15 FEF4  
                                 STR_23 FD34                                   STR_31 FC9A  
                                 STR_40 FDB8                                   STR_24 FD1E  
                                 STR_32 FCB0                                   STR_16 FC6E  
                                 STR_41 FDB8                                   STR_25 FD08  
                                 STR_33 FCC6                                   STR_17 FB95  
                         __CFG_WDTE$OFF 000000                                   STR_42 FDB8  
                                 STR_50 FF33                                   STR_26 FCF2  
                                 STR_34 FC12                                   STR_18 FBAF  
                                 STR_51 FEDF                                   STR_19 FF93  
                                 STR_43 FEDF                                   STR_27 FCDC  
                                 STR_35 FC57                                   STR_60 FFC8  
                                 STR_52 FE0D                                   STR_44 FDF8  
                                 STR_28 FDA2                                   STR_36 FB78  
                       __end_of___awmod A238                                   STR_61 FF5C  
                                 STR_53 FEB5                                   STR_45 FE76  
                                 STR_29 FD76                                   STR_37 FBFB  
                                 STR_62 FF5C                                   STR_54 FEDF  
                                 STR_70 FF6F                                   STR_46 FF48  
                                 STR_38 FC29                                   STR_55 FDE3  
                                 STR_47 FF48                                   STR_63 FFBE  
                                 STR_39 FC40                                   STR_64 FFBE  
                                 STR_80 FFDE                                   STR_48 FF09  
                                 STR_56 FEA0                                   _ADRPT 003EEC  
                                 STR_57 FFFB                                   STR_65 FFA3  
                                 STR_49 FDE3                                   STR_66 FFA3  
                                 STR_58 FFF8                                   STR_67 FFA3  
                                 STR_91 FFEF                                   STR_83 FFDA  
                                 STR_59 FFB2                                   STR_84 FFE2  
                                 STR_68 FBE3                                   STR_77 FB77  
                                 STR_93 FFEF                                   STR_78 FAF9  
                                 STR_87 FFE9                                   STR_79 FFD6  
                                 STR_96 FFEC                         __end_of___flmul 466A  
                                 STR_89 FFE9                                   STR_98 FFEC  
                       __end_of___flsub BFD6                         __end_of___fltol 95E8  
                                 u10010 C8BE                                   u10016 C8C0  
                                 u11210 9F08                                   u12020 10B8  
                                 u11230 9F84                                   u11400 588E  
                                 u12040 116E                                   u12120 7976  
                                 u12050 1170                                   u12130 79BC  
                       __end_of___lodiv 9476                                   u12211 6E8C  
                                 u11500 5C12                                   u11420 58FE  
                                 u11340 A9CC                                   u12220 6EA2  
                                 u12300 627E                                   u12221 6EA0  
                                 u11510 5C16                                   u12230 6EB6  
                                 u12310 6280                                   u11440 5910  
                                 u11600 0194                                   u12160 7A98  
                                 u12240 6EBA                                   u12400 6424  
                                 u12137 79AE                                   u11530 5C2C  
                                 u11610 0196                                   u12410 6428  
                                 u12330 62DE                                   u11290 7512  
                                 _U1P1H 003DED                                   u11347 A9BE  
                                 u11460 5960                                   u12180 6BDE  
                                 u12340 62E0                                   u12260 6142  
                                 _U1P2H 003DEF                                   u11470 5BB8  
                                 u11390 588C                                   u12510 2722  
                                 u13230 158C                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T3CLK 003FA9  
                                 u11720 0562                                   u11640 02A6  
                                 u12360 63AA                                   u12600 2A9E  
                                 u12520 2724                                   u13400 22C6  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u11481 5BE8                                   u11490 5BFE  
                                 u11650 02A8                                   u11570 00DA  
                                 u12370 63CA                                   u12290 622A  
                                 u12530 274A                                   u13170 8A62  
                                 u13410 22D8                                   u13250 17E2  
                                 _U1P3L 003DF0                                   u11491 5BFC  
                                 u12700 3096                                   u12460 25A0  
                                 u13180 8A64                                   u13260 190C  
                                 u12381 63FA                                   u12365 638C  
                                 u11750 05C6                                   u12390 6410  
                                 u12630 2D16                                   u12470 25A2  
                                 u13406 22C8                                   u13270 190E  
                                 _U2P1L 003DD4                                   u12391 640E  
                                 u12720 3246                                   u12640 2D18  
                                 u12480 25C8                                   u13416 22DA  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u11690 050E                                   _U2P3L 003DD8  
                                 u11860 0A18                                   u12580 292A  
                                 u12740 B144                                   u12820 9D26  
                                 u11790 0648                                   u13390 22AE  
                                 _T5CLK 003F9D                                   u11960 0EE4  
                                 u12808 9CC2                         __end_of___lomod 9C7E  
                                 u12850 9D8C                                   u13396 22B0  
                                 _T2HLT 003FAD                                   u12838 9D28  
                                 u12790 9CC0                                   _T5CON 003F9A  
                                 u12868 9D8E                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 0085                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0026                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98               __end_of_update_adc_result C214  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR CB9C                 __size_of_clear_adc_scan 0006  
                    _current_sensor_cal 64E2       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 98AE                           __CFG_WRTC$OFF 000000  
                      _cal_current_zero AAAE                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR A82A                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR CA02                            _DMA1CON1bits 003BFD  
            __size_of_send_lcd_data_dma 004A                                   _fabsf AE60  
                                 _flags 003E                    __size_of_check_range 0080  
              __size_of_calc_model_data 044C                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD            __end_of_get_ac_charger_relay CB04  
                                 _fputc 9EE4              __size_of_send_lcd_cmd_long 0040  
                       __end_of_isalpha C01A                                   _fputs B254  
                       __end_of_isdigit C480                         __end_of_ivln2_h FAF1  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand C2F0  
                                 _width 003A                                   _putch C9CC  
          __end_of_set_ac_charger_relay CADA                         __end_of_islower C420  
                       __end_of_isspace BCF6                _INT1_SetInterruptHandler C69E  
                       __end_of_set_dac AE60                         __end_of_isupper C450  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler C626             _UART1_SetRxInterruptHandler C5FE  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf A566  
                       __end_of_tolower B5A0                         __end_of_strncmp 864C  
                       __end_of_toupper B51C               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr C768                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize BEBA                   __end_of_ringBufS_init C586  
                       __initialization A82A                       _UART2_rx_vect_isr C790  
                          __end_of_cp_h FAF9                            __end_of_cp_l FAF5  
                          __end_of_atoi 7FA6                            __end_of_ctoa B498  
                          __end_of_main 2426                            __end_of_dtoa 5CDC  
                          __end_of_nanf BB36                            __end_of_spin FAE5  
                          __end_of_stoa 7AB2                            __end_of_utoa 6F04  
                          __end_of_xtoa 64E2                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0021                 __end_of_TMR2_Initialize CA32  
                 __end_of_send_lcd_data C7DC                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button B802                _TMR5_SetInterruptHandler C64E  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 007C                       _port_data_dma_ptr CB2C  
                    esr_check@esr_state 00A4                     ??_UART2_rx_vect_isr 0026  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize C534  
                       _PWM8_Initialize CA48                        _UART1_Initialize BE72  
                     _UART2_tx_vect_isr C768                      _UART2_Transmit_ISR C508  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan BA0E  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                STR_101 FFF2                                  STR_110 FFE6  
                                STR_103 FFF2                                  STR_112 FFE6  
                                STR_106 FFF5                                  STR_108 FFF5  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue C01A  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0021                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1019 A7DA                                  _RB6PPS 003A0E  
                                i1l1207 9816                    _start_switch_handler C8F6  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize BF4A                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright CAE8  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u952_20 8E90                                  u947_25 CAD4  
                                u947_26 CAD6                    __size_of_hid_display 021C  
                                u975_20 C254                                  u975_26 C256  
                                u968_20 CB00                        __end_of___xxtofl 8C7E  
 __end_of_ADCC_DischargeSampleCapacitor CB6A  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor CB62                __end_of_send_lcd_cmd_dma C972  
                       _TMR3_WriteTimer C15C                     ??_UART2_tx_vect_isr 0026  
             __end_of_UART2_rx_vect_isr C7B8              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize CB22                        _UART2_Initialize BB36  
                                _WaitMs C2BA                         _conv_raw_result 53A0  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 95E8                                  ___fleq AB74  
                     _ADCC_ThresholdISR B8D8                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush B2EC                                  _efgtoa 0000  
                                _floorf 6858                       dac_spi_control@S0 0042  
                     dac_spi_control@S1 00A8                       dac_spi_control@S2 00A7  
                     dac_spi_control@SB 00A5                       dac_spi_control@SC 00A6  
                    ?_ADCC_ThresholdISR 0021                                  _memset 7230  
                  __size_of_help_button 0038                                  clear_0 A89C  
                                clear_1 A8B0                                  clear_2 A8C2  
                                clear_3 A8CE                                  clear_4 A8DA  
                                clear_5 A8E6                                  clear_6 A8F2  
             __end_of_port_data_dma_ptr CB36                                  _printf BA72  
                    _eaDogM_WriteString B10C                                  _strcpy A90A  
                             ?_ADCC_ISR 0021                                  _strlen B1B2  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 04FF  
                       _ADCC_Initialize B86C                          _PMD_Initialize CA74  
            __size_of_update_adc_result 003A               __end_of_UART2_tx_vect_isr C790  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0021                  __end_of_start_adc_scan BA72  
                          __mediumconst F90C                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay BC4A                        __end_of_spinners A65C  
                      __end_of_vfprintf AFBA                              _StartTimer C0DC  
                    __size_of___asfladd 0078           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize BF02                       _SYSTEM_Initialize BDE0  
                            __accesstop 0060                 __end_of__initialization A904  
                             ?_INT0_ISR 0021                               ?_INT1_ISR 0021  
                  __end_of_display_help CB7A                    __end_of_display_info CB72  
             __end_of_CLKREF_Initialize CB2C                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer C11C  
                 _set_temp_display_help CABA                        _clear_hid_pflags B942  
                 __end_of_TMR3_CallBack C848               __end_of_ADCC_ThresholdISR B942  
                    __size_of_calc_bsoc 0A6E                  __end_of_ringBufS_flush B37E  
                        __pcstackCOMRAM 0021                              ___inthi_sp 115E  
                            ___intlo_sp 18AF                            __pidataBANK0 C284  
                          __pidataBANK1 A9DE             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf AF0E                               ?_TMR3_ISR 0021  
                             ?_TMR5_ISR 0021                               ?_TMR6_ISR 0021  
                        ivt0x8_undefint 00AC                           __end_of_fputc A008  
                         __end_of_fputs B2EC                    _get_ac_charger_relay CAF6  
                         __end_of_srand C324                   __end_of_TMR5_CallBack C824  
                         __end_of_putch C9E6                    _set_ac_charger_relay CACA  
               __end_of_PWM8_Initialize CA5E                 __end_of_TMR6_Initialize C55E  
                     _adc_int_t_handler B620                  __end_of_PMD_Initialize CA88  
                            __end_of_bp FAED                              ??_ADCC_ISR 0021  
                 __end_of_TMR6_CallBack C890             __size_of_EXT_INT_Initialize 0034  
              calc_bsoc@log_update_wait 0040                  __size_of_calc_ror_data 0186  
                         _DMA1_DMAA_ISR CB44                   TMR3_ISR@CountCallBack 009C  
                        _clear_adc_scan CB82                      __size_of_hid_input 0138  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 0091  
             __end_of_SYSTEM_Initialize BE2A                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer C19C  
                            __pbssBANK0 0060                              __pbssBANK1 01D0  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              _check_help 8868  
               __end_of_conv_raw_result 585C                      __size_of_esr_check 02D8  
                 _INT0_InterruptHandler 0097                              ??_INT0_ISR 0021  
                            ??_INT1_ISR 0027                       __end_of_TimerDone C5AE  
                      _DMA1_DMADCNT_ISR CB38                         _convert_dac_raw A008  
                    __size_of_init_bsoc 0246              __size_of_UART2_rx_vect_isr 0028  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma C3C0                   __end_of_wait_lcd_done C8B2  
              __end_of_cal_current_zero AB74        __end_of_TMR3_SetInterruptHandler C69E  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler C64E  
                            ??_TMR3_ISR 00E5                 __end_of_ADCC_Initialize B8D6  
                            ??_TMR5_ISR 002B               __end_of_adc_int_t_handler B69E  
                            ??_TMR6_ISR 0026                       __end_of___asfladd B790  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
                    __size_of_set_dac_a 0034                      __size_of_set_dac_b 0034  
  __end_of_ADCC_SetADTIInterruptHandler C716   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler C6EE                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR C8D4                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan CB88  
                               u1002_28 9A1A                                 u1004_20 9A34  
                               u1004_21 9A2E                                 u1008_24 9B1A  
                               u1008_25 9B16                                 u1044_48 C87C  
                               u1036_48 C858                                 u1302_28 C834  
                               u1038_28 C7EC                          ?_DMA1_DMAA_ISR 0021  
                      _DMA1_DMASCNT_ISR CB14                                 u1047_28 C810  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 u1079_44 B684  
                               u1079_45 B67E                                 u1295_20 3A46  
                               u1297_20 3B10                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0021              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                       _dac_spi_control B69E                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 3E40  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch C4AE  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer C15C  
               __size_of_switch_handler 0142                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one CABA              __end_of_set_load_relay_two CAAA  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 9170                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim CA02                                 __Lparam 0000  
              __end_of_UART1_Initialize BEBA                       __end_of_hid_input 9DB6  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 7AB2  
                               ___fladd 466A                                 ___aomod 81EC  
                               ___fldiv 4E26                                 ___awdiv 98AE  
                               ___flneg BE2A                                 ___awmod A120  
                               ___flmul 3E40                                 ___flsub BF90  
                               ___fltol 9476                                 ___lodiv 92F6  
                               ___lomod 9B3E               __end_of_UART1_Receive_ISR C8F6  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display A746                                 __pcinit A82A  
              __end_of_mode_lamp_bright CAF6                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand CADA  
                               __ramtop 2000                                 __ptext0 1244  
                               __ptext1 BB96                                 __ptext2 C8F6  
                               __ptext3 C2F0                                 __ptext4 C324  
                               __ptext5 C358                                 __ptext6 A008  
                               __ptext7 ADAA                                 __ptext8 B69E  
                               __ptext9 C3C0                       __end_of_esr_check 77F4  
                     _UART2_Receive_ISR C916                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize CA5E  
                          __size_of_abs 0046                            __size_of_pad 0114  
                     __end_of_init_bsoc 81EC                                 _isalpha BFD6  
                               _isdigit C450                                 us664999 7D1C  
                               us760999 9460                                 _ivln2_h FAED  
                               us675999 841A                                 us765999 9C6E  
                             _T3CONbits 003FA6                                 _mode_sw 00A9  
                     __end_of_lp_filter 8E3A                                 _islower C3F0  
                               _isspace BCA4                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                                 _set_dac ADAA  
              __end_of_UART2_Initialize BB96                                 _isupper C420  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf A45C  
                               _tolower B51C                   __size_of_display_help 0008  
                               _utctime 01EE                 __end_of_convert_dac_raw A120  
                 __size_of_display_info 0008                                 _strncmp 842C  
                               _toupper B498                    end_of_initialization A904  
             __size_of_convert_adc_data 00B8                      _check_enter_button B790  
                     __end_of_set_dac_a C38C                       __end_of_set_dac_b C358  
                             i1u1319_20 980C     __end_of_UART2_SetRxInterruptHandler C5FE  
           _UART2_SetRxInterruptHandler C5D6                               i2u1090_48 C7A4  
                             i2u1082_48 C4F4                               i2u1084_48 B90E  
                             i2u1084_49 B922                 check_day_time@day_delay 0041  
                             i2u1086_48 C754                               i2u1088_48 C77C  
                     __end_of_set_vterm C990                       __end_of_vfpfcnvrt 33D2  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd CB94  
             __end_of_UART2_Receive_ISR C936                          wdtdelay@dcount 0078  
               __end_of_dac_spi_control B718             __size_of_current_sensor_cal 0376  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0027  
                 _INT1_InterruptHandler 0094                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc CB9A                               _PORTDbits 003FCD  
              _TMR3_SetInterruptHandler C676                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler C626                            _display_help CB72  
                 _TMR5_InterruptHandler 007F                            _display_info CB6A  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags B9A8  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler C73E  
           _ADCC_SetADIInterruptHandler C716                              _update_lcd A34C  
                       _calc_model_data 5CDC                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc BB96  
                       _DMA1_Initialize B802                     __end_of_check_range B620  
                            _start_bsoc C8B2                  __size_of_send_lcd_data 0024  
                       _SPI1_Initialize CA32                   __end_of_get_vterm_ptr C4AE  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs C2F0            __end_of_INTERRUPT_Initialize BA0E  
                            _vterm_dump 9DB6                          __end_of___flge 974A  
                        __end_of___fleq AC38    __end_of_INT0_DefaultInterruptHandler CBA8  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler CBA6  
            __size_of_UART1_Receive_ISR 0022                         _DMA2_Initialize BC4A  
                         __pidataBIGRAM 6F04                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 6BC4             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 01EA                          __end_of_memset 751C  
                        __end_of_printf BAD4                __end_of_DMA1_DMADCNT_ISR CB42  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack C86C  
                        __end_of_strcpy A9DE                          __end_of_strlen B254  
                   start_initialization A82A    __end_of_TMR5_DefaultInterruptHandler C284  
 __size_of_TMR5_DefaultInterruptHandler 0038            _TMR5_DefaultInterruptHandler C24C  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs BF90  
                 __end_of_INT1_CallBack C800               __size_of_set_display_info 001E  
                           __end_of_pad A34C                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd C0DC                          _switch_handler 99FC  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 01DC                   __end_of___fpclassifyf 9170  
                         _uart2RxBuffer 0400                __end_of_DMA1_DMASCNT_ISR CB22  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR CB50  
                   __end_of_hid_display 8868              __end_of_send_port_data_dma BD48  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone C586  
                         _ringBufS_init C55E                             __pdataBANK0 00AF  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize C3C0  
               __end_of_calc_model_data 6128                           _send_lcd_data C7B8  
                   __end_of_help_button C24C         __end_of_eaDogM_WriteStringAtPos B10C  
                   __end_of_BVSOC_TABLE F9DD                               ___asfladd B718  
                  calc_model_data@bcror 0070                             __pbssBIGRAM 082A  
               __end_of_DMA1_Initialize B86C                    calc_model_data@bvror 0074  
                           __pbssCOMRAM 003A                             _check_range B5A0  
      __end_of_INT0_SetInterruptHandler C6EE                           __pcstackBANK0 00E5  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 9B3E                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize CA48                _UART1_RxInterruptHandler 008B  
              _UART2_TxInterruptHandler 008E                               __end_of_T FA6D  
                      _convert_adc_data ACF2                               _calc_bsoc 33D2  
             __size_of_ringBufS_put_dma 00AA                            _init_display A65C  
                __end_of_DMA1_DMAOR_ISR CB5A                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 0082                      calc_ror_data@bcror 0068  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize BCA4  
                    calc_ror_data@bvror 006C                  _PIN_MANAGER_Initialize B37E  
              __size_of_TMR3_Initialize 0048                    __end_of_wait_lcd_set CB8E  
                         __pmediumconst F90C                               __ptext100 CB72  
                             __ptext101 B790                               __ptext110 5CDC  
                             __ptext102 9170                               __ptext111 CB94  
                             __ptext103 AE60                               __ptext120 C5D6  
                             __ptext112 C8B2                               __ptext104 53A0  
                             __ptext121 BE72                               __ptext113 8C7E  
                             __ptext105 BAD4                               __ptext130 CA32  
                             __ptext122 C5FE                               __ptext114 BF90  
                             __ptext106 C9AE                               __ptext131 CA48  
                             __ptext123 C534                               __ptext115 466A  
                             __ptext107 8A7A                               __ptext140 BC4A  
                             __ptext132 CA74                               __ptext124 C626  
                             __ptext116 3E40                               __ptext108 4E26  
                             __ptext141 B802                               __ptext133 B37E  
                             __ptext125 BEBA                               __ptext117 BDE0  
                             __ptext109 95E8                               __ptext150 A748  
                             __ptext142 CB22                               __ptext134 CA5E  
                             __ptext126 C64E                               __ptext118 BB36  
                             __ptext151 C11C                               __ptext143 B86C  
                             __ptext135 B9A8                               __ptext127 BF02  
                             __ptext119 C5AE                               __ptext160 CBA4  
                             __ptext152 C800                               __ptext144 C6EE  
                             __ptext136 CB7A                               __ptext128 C676  
                             __ptext161 33D2                               __ptext153 C24C  
                             __ptext145 C716                               __ptext137 C38C  
                             __ptext129 CA1A                               __ptext170 B620  
                             __ptext162 BCF6                               __ptext154 8E3A  
                             __ptext146 C19C                               __ptext138 C69E  
                             __ptext171 CBA8                               __ptext163 CB2C  
                             __ptext155 CACA                               __ptext147 C7DC  
                             __ptext139 C6C6                               __ptext180 C9E8  
                             __ptext172 CBAA                               __ptext164 B718  
                             __ptext156 CAF6                               __ptext148 CBA2  
                             __ptext181 C86C                               __ptext173 B8D8  
                             __ptext165 CB04                               __ptext157 974C  
                             __ptext149 99FC                               __ptext182 BD48  
                             __ptext174 C740                               __ptext166 C848  
                             __ptext158 C15C                               __ptext183 CB14  
                             __ptext175 C8D4                               __ptext167 CBA6  
                             __ptext159 C824                               __ptext184 CB38  
                             __ptext176 C768                               __ptext168 CB9C  
                             __ptext185 CB44                               __ptext177 C508  
                             __ptext169 C4DC                               __ptext186 CB50  
                             __ptext178 C790                               __ptext187 0000  
                             __ptext179 C916                               _hid_input 9C7E  
                    __end_of_StartTimer C11C                      _set_load_relay_one CAAA  
                    _set_load_relay_two CA9A                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00F6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR C4DC                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 0060                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 751C  
               __size_of_get_raw_result 001E                          __size_of_fabsf 00AE  
                             _init_bsoc 7FA6                  __size_of_wait_lcd_done 0022  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 8C7E  
                           _hid_display 864C                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize B9A8  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0021                                _INT0_ISR CB04  
                              _INT1_ISR C19C                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
                              _LATFbits 003FBF       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 027D  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                          _SPI1CON0bits 003D14                            _SPI1CON1bits 003D15  
                             _set_dac_a C358                               _set_dac_b C324  
                             _ring_buf1 0383                               _ring_buf2 0340  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack C824  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0048                               _set_vterm C972  
                   __size_of_update_lcd 0110                             _help_button C214  
                              _TMR3_ISR 974C                             _BVSOC_TABLE F90D  
                              _TMR5_ISR A748                                _TMR6_ISR C9E8  
                             _port_data 04FF                     __size_of_static_soc 005A  
                             _vfpfcnvrt 2426                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack C800  
                            _ADCON0bits 003EF8                      __end_of_check_help 8A7A  
                             _start_lcd CB8E                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 001E                           _TMR6_CallBack C86C  
                 __size_of_send_lcd_cmd 0040       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc CB94                        _set_display_info C990  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 A83E  
                             copy_data1 A864                               copy_data2 A886  
              _INT0_SetInterruptHandler C6C6                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler C5D6             _UART2_SetTxInterruptHandler C5AE  
                          _uart1RxCount 00AD                            _uart2RxCount 00AA  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 00A8  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000              __end_of_current_sensor_cal 6858  
              __size_of_conv_raw_result 04BC                           _wait_lcd_done C890  
                          _send_lcd_cmd C09C                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC           __size_of_get_ac_charger_relay 000E  
                      __size_of___aomod 0240                         _adc_int_handler CBAA  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140           __size_of_set_ac_charger_relay 0010  
                    __end_of_get_switch C4DA                 __size_of_check_day_time 01A0  
                 __end_of_DMA1_DMAA_ISR CB4E                      ___fpclassifyf@F463 0064  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0200  
                              ___xxtofl 8A7A                       ?_DMA1_DMADCNT_ISR 0021  
           __size_of_check_enter_button 0072                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand CAE8                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0027                        __size_of_set_dac 00B6  
                              __ptext10 A65C                                __ptext11 C7B8  
                              __ptext20 751C                                __ptext12 C05C  
                              __ptext21 C1DA                                __ptext13 C09C  
                              __ptext30 A566                                __ptext22 CB5A  
                              __ptext14 C936                                __ptext31 C4AE  
                              __ptext23 CA9A                                __ptext15 C55E  
                              __ptext40 C480                                __ptext32 CB82  
                              __ptext24 CAAA                                __ptext16 7FA6  
                              __ptext41 C2BA                                __ptext33 AAAE  
                              __ptext25 CADA                                __ptext17 AC38  
                              __ptext50 CB8E                                __ptext42 A34C  
                              __ptext34 B5A0                                __ptext26 64E2  
                              __ptext18 864C                                __ptext51 B2EC  
                              __ptext43 B064                                __ptext35 ACF2  
                              __ptext27 BA0E                                __ptext19 9C7E  
                              __ptext60 6BC4                                __ptext52 7230  
                              __ptext44 C954                                __ptext36 B942  
                              __ptext28 CA88                                __ptext61 9B3E  
                              __ptext53 BA72                                __ptext45 C890  
                              __ptext37 8868                                __ptext29 CB62  
                              __ptext70 8FDA                                __ptext62 92F6  
                              __ptext54 AF0E                                __ptext46 BBF0  
                              __ptext38 9DB6                                __ptext71 9476  
                              __ptext63 842C                                __ptext55 2426  
                              __ptext47 BD96                                __ptext39 A45C  
                              __ptext80 B410                                __ptext72 BE2A  
                              __ptext64 77F4                                __ptext56 6128  
                              __ptext48 B10C                                __ptext81 A238  
                              __ptext73 AB74                                __ptext65 0000  
                              __ptext57 B498                                __ptext49 CB88  
                              __ptext90 C972                                __ptext82 B1B2  
                              __ptext74 A120                                __ptext66 B51C  
                              __ptext58 C3F0                                __ptext91 CABA  
                              __ptext83 B254                                __ptext75 98AE  
                              __ptext67 C420                                __ptext59 BFD6  
                              __ptext92 C990                                __ptext84 9EE4  
                              __ptext76 585C                                __ptext68 A90A  
                              __ptext93 CA02                                __ptext85 C9CC  
                              __ptext77 BF4A                                __ptext69 6858  
                              __ptext94 CAE8                                __ptext86 AFBA  
                              __ptext78 81EC                                __ptext95 C01A  
                              __ptext87 7D32                                __ptext79 7AB2  
                              __ptext96 C214                                __ptext88 BCA4  
                              __ptext97 C586                                __ptext89 C450  
                              __ptext98 C0DC                                __ptext99 CB6A  
                      __size_of_isupper 0030                                us1207999 7806  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1138999 5876                                us1219999 6C2A  
                              us1228999 61A8                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma AFBA  
                  __end_of_Volts_to_SOC ACF2                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 11E2  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                   dac_spi_control@init 0043                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0021                   __end_of_init_port_dma C3F0  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 0088                               stoa@F1166 0100  
                    ??_DMA1_DMASCNT_ISR 0027            __end_of_ADCC_StartConversion CA9A  
                              _spi_link 01D0                                _wdtdelay BBF0  
            __end_of_UART2_Transmit_ISR C534                                _spinners A566  
                              _vfprintf AF0E                __end_of_convert_adc_data ADAA  
            __end_of_PWM8_LoadDutyValue C05C    __end_of_TMR3_DefaultInterruptHandler CBA6  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler CBA4  
  __end_of_INT1_DefaultInterruptHandler CBA4   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler CBA2                      _send_port_data_dma BCF6  
                         ??_Default_ISR 0021                             _uart1RxHead 0047  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0044  
                           _uart1RxTail 00AE                          _get_raw_result C9AE  
                           _uart2TxHead 00AC                             _uart2RxTail 00AB  
                             spinners@s 01E4                             _uart2TxTail 0046  
             __size_of_cal_current_zero 00C6                            _wait_lcd_set CB88  
                    _EXT_INT_Initialize C38C    __end_of_TMR6_DefaultInterruptHandler BD96  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler BD48  
                     _send_lcd_data_dma BD96    __end_of_ADCC_DefaultInterruptHandler CBAA  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler CBA8  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long C05C          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help CACA                   __end_of_calc_ror_data 92F6  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString B1B2  
                 __end_of_mode_lamp_dim CA1A                 __end_of_adc_int_handler CBAC  
              __size_of_convert_dac_raw 0118                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd A45C  
                _uart2TxBufferRemaining 0045                      __end_of_static_soc BBF0  
                    __end_of_start_bsoc C8D4                          _FVR_Initialize CB7A  
                __end_of_get_raw_result C9CC                        _send_lcd_cmd_dma C954  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 00A0  
      __end_of_INT1_SetInterruptHandler C6C6               __size_of_UART1_Initialize 0048  
              __size_of_dac_spi_control 007A               __end_of_send_lcd_data_dma BDE0  
                      ??_DMA1_DMAOR_ISR 0027               __end_of_send_lcd_cmd_long C09C  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR CBA2  
        __end_of_PIN_MANAGER_Initialize B410               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 9EE4                 _eaDogM_WriteStringAtPos B064  
                         _get_vterm_ptr C480                          _check_adc_scan CB5A  
             __size_of_UART2_Initialize 0060  
