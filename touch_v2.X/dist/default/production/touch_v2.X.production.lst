

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Jan 19 05:38:48 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=2
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1,inline
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1,inline
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=2
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=2
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=4,class=CODE,delta=1
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=4,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=4,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1,group=1
   184                           	psect	text162,global,reloc=4,class=CODE,delta=1
   185                           	psect	text163,global,reloc=2,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1
   187                           	psect	text165,global,reloc=4,class=CODE,delta=1
   188                           	psect	text166,global,reloc=4,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1
   190                           	psect	text168,global,reloc=2,class=CODE,delta=1
   191                           	psect	text169,global,reloc=2,class=CODE,delta=1
   192                           	psect	text170,global,reloc=4,class=CODE,delta=1
   193                           	psect	text171,global,reloc=4,class=CODE,delta=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1
   195                           	psect	text173,global,reloc=4,class=CODE,delta=1
   196                           	psect	text174,global,reloc=2,class=CODE,delta=1
   197                           	psect	text175,global,reloc=4,class=CODE,delta=1
   198                           	psect	text176,global,reloc=2,class=CODE,delta=1
   199                           	psect	text177,global,reloc=4,class=CODE,delta=1
   200                           	psect	text178,global,reloc=2,class=CODE,delta=1
   201                           	psect	text179,global,reloc=2,class=CODE,delta=1
   202                           	psect	text180,global,reloc=4,class=CODE,delta=1
   203                           	psect	text181,global,reloc=4,class=CODE,delta=1
   204                           	psect	text182,global,reloc=4,class=CODE,delta=1
   205                           	psect	text183,global,reloc=4,class=CODE,delta=1
   206                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   207                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   208                           	psect	text184,global,reloc=4,class=CODE,delta=1
   209                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   210                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   211  0000                     
   212                           ; Version 2.10
   213                           ; Generated 31/07/2019 GMT
   214                           ; 
   215                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   216                           ; All rights reserved.
   217                           ; 
   218                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   219                           ; 
   220                           ; Redistribution and use in source and binary forms, with or without modification, are
   221                           ; permitted provided that the following conditions are met:
   222                           ; 
   223                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   224                           ;        conditions and the following disclaimer.
   225                           ; 
   226                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   227                           ;        of conditions and the following disclaimer in the documentation and/or other
   228                           ;        materials provided with the distribution.
   229                           ; 
   230                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   231                           ;        software without specific prior written permission.
   232                           ; 
   233                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   234                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   235                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   236                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   237                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   238                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   239                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   240                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   241                           ; 
   242                           ; 
   243                           ; Code-generator required, PIC18F57K42 Definitions
   244                           ; 
   245                           ; SFR Addresses
   246  0000                     
   247 ;;_main$3774	offset	0
   248 ;;_main$3770	offset	2
   249 ;;_esr_temp	offset	4
   250 ;;_i_esr	offset	8
   251 ;;_shape	offset	10
   252 ;;_inp_index	offset	11
   253 ;;_k	offset	12
   254 ;;_j	offset	13
   255 ;;_i	offset	14
   256 ;;_mode	offset	15
   257 ;;_i_ror	offset	16
   258 ;;_s	offset=-2 (param)
   259 ;;_c	offset	0
   260 ;;_shape	offset=-1 (param)
   261 ;;_reset	offset=-2 (param)
   262 ;;_voltage	offset=-4 (param)
   263 ;;_voltage	offset=-4 (param)
   264 ;;_voltage	offset=-4 (param)
   265 ;;_set	offset=-1 (param)
   266 ;;_data	offset=-1 (param)
   267 ;;_cmd	offset=-1 (param)
   268 ;;_cmd	offset=-1 (param)
   269 ;;_data	offset=-1 (param)
   270 ;;__this	offset=-2 (param)
   271 ;;_soc	offset	0
   272 ;;_slot	offset	2
   273 ;;_cvoltage	offset=-4 (param)
   274 ;;_h	offset=-2 (param)
   275 ;;_h	offset=-2 (param)
   276 ;;_i	offset=-1 (param)
   277 ;;_fsm	offset=-1 (param)
   278 ;;_channel	offset=-1 (param)
   279 ;;_mode	offset=-1 (param)
   280 ;;_mode	offset=-1 (param)
   281 ;;_cmd	offset=-1 (param)
   282 ;;_i	offset	0
   283 ;;_h	offset=-2 (param)
   284 ;;_flipper	offset=-1 (param)
   285 ;;_f	offset	0
   286 ;;_ap	offset	6
   287 ;;_s	offset=-3 (param)
   288 ;;_fmt	offset=-5 (param)
   289 ;;_line	offset=-1 (param)
   290 ;;_vterm	offset=-2 (param)
   291 ;;_numMilliseconds	offset=-2 (param)
   292 ;;_vterm	offset=-1 (param)
   293 ;;_row	offset	0
   294 ;;_r	offset=-1 (param)
   295 ;;_c	offset=-2 (param)
   296 ;;_strPtr	offset=-4 (param)
   297 ;;_strPtr	offset=-1 (param)
   298 ;;_delay	offset=-4 (param)
   299 ;;_strPtr	offset=-1 (param)
   300 ;;_strPtr	offset=-2 (param)
   301 ;;__this	offset=-2 (param)
   302 ;;_clearBuffer	offset=-3 (param)
   303 ;;_s	offset	0
   304 ;;_k	offset	2
   305 ;;_dest	offset=-2 (param)
   306 ;;_c	offset=-4 (param)
   307 ;;_n	offset=-6 (param)
   308 ;;_ap	offset	0
   309 ;;_fmt	offset=-3 (param)
   310 ;;_cfmt	offset	0
   311 ;;_fp	offset=-2 (param)
   312 ;;_fmt	offset=-4 (param)
   313 ;;_ap	offset=-6 (param)
   314 ;;_vfpfcnvrt$5760	offset	0
   315 ;;_vfpfcnvrt$5771	offset	2
   316 ;;_vfpfcnvrt$5759	offset	4
   317 ;;_llu	offset	6
   318 ;;_ll	offset	14
   319 ;;_f	offset	22
   320 ;;_ct	offset	26
   321 ;;_cp	offset	29
   322 ;;_c	offset	31
   323 ;;_fp	offset=-2 (param)
   324 ;;_fmt	offset=-4 (param)
   325 ;;_ap	offset=-6 (param)
   326 ;;_xtoa$5745	offset	0
   327 ;;_xtoa$5744	offset	2
   328 ;;_n	offset	4
   329 ;;_c	offset	12
   330 ;;_i	offset	14
   331 ;;_w	offset	16
   332 ;;_p	offset	18
   333 ;;_fp	offset=-2 (param)
   334 ;;_d	offset=-10 (param)
   335 ;;_x	offset=-11 (param)
   336 ;;_toupper$6551	offset	0
   337 ;;_c	offset=-2 (param)
   338 ;;_c	offset=-2 (param)
   339 ;;_c	offset=-2 (param)
   340 ;;_n	offset	0
   341 ;;_i	offset	8
   342 ;;_w	offset	10
   343 ;;_p	offset	12
   344 ;;_fp	offset=-2 (param)
   345 ;;_d	offset=-10 (param)
   346 ;;_counter	offset	0
   347 ;;_dividend	offset=-8 (param)
   348 ;;_divisor	offset=-16 (param)
   349 ;;_quotient	offset	0
   350 ;;_counter	offset	8
   351 ;;_dividend	offset=-8 (param)
   352 ;;_divisor	offset=-16 (param)
   353 ;;_r	offset	0
   354 ;;_l	offset	2
   355 ;;__l	offset=-2 (param)
   356 ;;__r	offset=-4 (param)
   357 ;;_n	offset=-6 (param)
   358 ;;_nuls	offset	0
   359 ;;_l	offset	7
   360 ;;_p	offset	9
   361 ;;_cp	offset	11
   362 ;;_w	offset	13
   363 ;;_i	offset	15
   364 ;;_fp	offset=-2 (param)
   365 ;;_s	offset=-4 (param)
   366 ;;_efgtoa$5717	offset	0
   367 ;;_efgtoa$5716	offset	2
   368 ;;_efgtoa$5715	offset	4
   369 ;;_efgtoa$5711	offset	6
   370 ;;_efgtoa$5707	offset	8
   371 ;;_efgtoa$5706	offset	10
   372 ;;_u	offset	12
   373 ;;_g	offset	16
   374 ;;_l	offset	20
   375 ;;_h	offset	24
   376 ;;_ou	offset	28
   377 ;;_n	offset	32
   378 ;;_e	offset	34
   379 ;;_i	offset	36
   380 ;;_w	offset	38
   381 ;;_p	offset	40
   382 ;;_sign	offset	42
   383 ;;_d	offset	44
   384 ;;_ne	offset	46
   385 ;;_m	offset	48
   386 ;;_pp	offset	50
   387 ;;_t	offset	52
   388 ;;_mode	offset	54
   389 ;;_nmode	offset	55
   390 ;;_fp	offset=-2 (param)
   391 ;;_f	offset=-6 (param)
   392 ;;_c	offset=-7 (param)
   393 ;;_tolower$6536	offset	0
   394 ;;_c	offset=-2 (param)
   395 ;;_c	offset=-2 (param)
   396 ;;_d	offset	0
   397 ;;_s	offset	2
   398 ;;_dest	offset=-2 (param)
   399 ;;_src	offset=-4 (param)
   400 ;;_u	offset	0
   401 ;;_m	offset	4
   402 ;;_e	offset	8
   403 ;;_x	offset=-4 (param)
   404 ;;_u	offset	0
   405 ;;_e	offset	4
   406 ;;_x	offset=-4 (param)
   407 ;;_exp1	offset	0
   408 ;;_sign1	offset	1
   409 ;;_f1	offset=-4 (param)
   410 ;;_f1	offset=-4 (param)
   411 ;;_ff1	offset=-4 (param)
   412 ;;_ff2	offset=-8 (param)
   413 ;;_sign	offset	0
   414 ;;_counter	offset	1
   415 ;;_dividend	offset=-2 (param)
   416 ;;_divisor	offset=-4 (param)
   417 ;;_quotient	offset	0
   418 ;;_sign	offset	2
   419 ;;_counter	offset	3
   420 ;;_dividend	offset=-2 (param)
   421 ;;_divisor	offset=-4 (param)
   422 ;;_dtoa$5683	offset	0
   423 ;;_n	offset	2
   424 ;;_i	offset	10
   425 ;;_s	offset	12
   426 ;;_w	offset	14
   427 ;;_p	offset	16
   428 ;;_fp	offset=-2 (param)
   429 ;;_d	offset=-10 (param)
   430 ;;_a	offset=-2 (param)
   431 ;;_sign	offset	0
   432 ;;_counter	offset	1
   433 ;;_dividend	offset=-8 (param)
   434 ;;_divisor	offset=-16 (param)
   435 ;;_quotient	offset	0
   436 ;;_sign	offset	8
   437 ;;_counter	offset	9
   438 ;;_dividend	offset=-8 (param)
   439 ;;_divisor	offset=-16 (param)
   440 ;;_w	offset	0
   441 ;;_fp	offset=-2 (param)
   442 ;;_c	offset=-3 (param)
   443 ;;_w	offset	0
   444 ;;_i	offset	2
   445 ;;_fp	offset=-2 (param)
   446 ;;_buf	offset=-4 (param)
   447 ;;_p	offset=-6 (param)
   448 ;;_a	offset	0
   449 ;;_s	offset=-2 (param)
   450 ;;_i	offset	0
   451 ;;_c	offset	2
   452 ;;_s	offset=-2 (param)
   453 ;;_fp	offset=-4 (param)
   454 ;;_c	offset=-2 (param)
   455 ;;_fp	offset=-4 (param)
   456 ;;_c	offset=-1 (param)
   457 ;;__this	offset=-2 (param)
   458 ;;_c	offset=-3 (param)
   459 ;;_atoi$6267	offset	0
   460 ;;_atoi$6265	offset	2
   461 ;;_atoi$6266	offset	4
   462 ;;_n	offset	5
   463 ;;_neg	offset	7
   464 ;;_s	offset=-2 (param)
   465 ;;_isspace$6316	offset	0
   466 ;;_c	offset=-2 (param)
   467 ;;_c	offset=-2 (param)
   468 ;;_vterm	offset=-1 (param)
   469 ;;_new_response_info	offset=-1 (param)
   470 ;;_new_response_info	offset=-1 (param)
   471 ;;_level	offset=-2 (param)
   472 ;;_dutyValue	offset=-2 (param)
   473 ;;_timer	offset=-1 (param)
   474 ;;_timer	offset=-1 (param)
   475 ;;_count	offset=-3 (param)
   476 ;;_h	offset=-2 (param)
   477 ;;_u	offset	0
   478 ;;_x	offset=-4 (param)
   479 ;;_chan	offset=-1 (param)
   480 ;;_to_what	offset=-2 (param)
   481 ;;_u	offset	0
   482 ;;_s	offset=-2 (param)
   483 ;;_index	offset=-1 (param)
   484 ;;_arg	offset	0
   485 ;;_exp	offset	4
   486 ;;_sign	offset=-1 (param)
   487 ;;_val	offset=-5 (param)
   488 ;;_grs	offset	0
   489 ;;_rem	offset	4
   490 ;;_new_exp	offset	8
   491 ;;_aexp	offset	10
   492 ;;_bexp	offset	11
   493 ;;_sign	offset	12
   494 ;;_b	offset=-4 (param)
   495 ;;_a	offset=-8 (param)
   496 ;;_ff1	offset=-4 (param)
   497 ;;_ff2	offset=-8 (param)
   498 ;;_lp_speed	offset	0
   499 ;;_new	offset=-4 (param)
   500 ;;_bn	offset=-5 (param)
   501 ;;_slow	offset=-6 (param)
   502 ;;_b	offset=-4 (param)
   503 ;;_a	offset=-8 (param)
   504 ;;_grs	offset	0
   505 ;;_bexp	offset	1
   506 ;;_aexp	offset	2
   507 ;;_signs	offset	3
   508 ;;_b	offset=-4 (param)
   509 ;;_a	offset=-8 (param)
   510 ;;_prod	offset	0
   511 ;;_grs	offset	4
   512 ;;_temp	offset	8
   513 ;;_bexp	offset	10
   514 ;;_aexp	offset	11
   515 ;;_sign	offset	12
   516 ;;_b	offset=-4 (param)
   517 ;;_a	offset=-8 (param)
   518 ;;_InterruptHandler	offset=-3 (param)
   519 ;;_InterruptHandler	offset=-3 (param)
   520 ;;_InterruptHandler	offset=-3 (param)
   521 ;;_InterruptHandler	offset=-3 (param)
   522 ;;_InterruptHandler	offset=-3 (param)
   523 ;;_InterruptHandler	offset=-3 (param)
   524 ;;_state	offset	0
   525 ;;_InterruptHandler	offset=-3 (param)
   526 ;;_InterruptHandler	offset=-3 (param)
   527 ;;_InterruptHandler	offset=-3 (param)
   528 ;;_InterruptHandler	offset=-3 (param)
   529 ;;_i	offset	0
   530 ;;_sw_value	offset	1
   531 ;;_timerVal	offset=-2 (param)
   532 ;;_light	offset	0
   533 ;;_mode	offset=-1 (param)
   534 ;;_chan	offset=-1 (param)
   535 ;;_to_what	offset=-2 (param)
   536 ;;_u	offset	0
   537 ;;_s	offset=-2 (param)
   538 ;;_index	offset=-1 (param)
   539 ;;_arg	offset	0
   540 ;;_exp	offset	4
   541 ;;_sign	offset=-1 (param)
   542 ;;_val	offset=-5 (param)
   543 ;;_b	offset=-4 (param)
   544 ;;_a	offset=-8 (param)
   545 ;;_grs	offset	0
   546 ;;_bexp	offset	1
   547 ;;_aexp	offset	2
   548 ;;_signs	offset	3
   549 ;;_b	offset=-4 (param)
   550 ;;_a	offset=-8 (param)
   551 ;;_prod	offset	0
   552 ;;_grs	offset	4
   553 ;;_temp	offset	8
   554 ;;_bexp	offset	10
   555 ;;_aexp	offset	11
   556 ;;_sign	offset	12
   557 ;;_b	offset=-4 (param)
   558 ;;_a	offset=-8 (param)
   559 ;;_grs	offset	0
   560 ;;_rem	offset	4
   561 ;;_new_exp	offset	8
   562 ;;_aexp	offset	10
   563 ;;_bexp	offset	11
   564 ;;_sign	offset	12
   565 ;;_b	offset=-4 (param)
   566 ;;_a	offset=-8 (param)
   567 ;;_ff1	offset=-4 (param)
   568 ;;_ff2	offset=-8 (param)
   569 ;;_timerVal	offset=-2 (param)
   570 ;;_adj	offset	0
   571 ;;_log_ptr	offset	4
   572 ;;_f	offset	0
   573 ;;_ap	offset	6
   574 ;;_s	offset=-3 (param)
   575 ;;_fmt	offset=-5 (param)
   576 ;;_cfmt	offset	0
   577 ;;_fp	offset=-2 (param)
   578 ;;_fmt	offset=-4 (param)
   579 ;;_ap	offset=-6 (param)
   580 ;;_vfpfcnvrt$5760	offset	0
   581 ;;_vfpfcnvrt$5771	offset	2
   582 ;;_vfpfcnvrt$5759	offset	4
   583 ;;_llu	offset	6
   584 ;;_ll	offset	14
   585 ;;_f	offset	22
   586 ;;_ct	offset	26
   587 ;;_cp	offset	29
   588 ;;_c	offset	31
   589 ;;_fp	offset=-2 (param)
   590 ;;_fmt	offset=-4 (param)
   591 ;;_ap	offset=-6 (param)
   592 ;;_xtoa$5745	offset	0
   593 ;;_xtoa$5744	offset	2
   594 ;;_n	offset	4
   595 ;;_c	offset	12
   596 ;;_i	offset	14
   597 ;;_w	offset	16
   598 ;;_p	offset	18
   599 ;;_fp	offset=-2 (param)
   600 ;;_d	offset=-10 (param)
   601 ;;_x	offset=-11 (param)
   602 ;;_toupper$6551	offset	0
   603 ;;_c	offset=-2 (param)
   604 ;;_c	offset=-2 (param)
   605 ;;_c	offset=-2 (param)
   606 ;;_n	offset	0
   607 ;;_i	offset	8
   608 ;;_w	offset	10
   609 ;;_p	offset	12
   610 ;;_fp	offset=-2 (param)
   611 ;;_d	offset=-10 (param)
   612 ;;_counter	offset	0
   613 ;;_dividend	offset=-8 (param)
   614 ;;_divisor	offset=-16 (param)
   615 ;;_quotient	offset	0
   616 ;;_counter	offset	8
   617 ;;_dividend	offset=-8 (param)
   618 ;;_divisor	offset=-16 (param)
   619 ;;_r	offset	0
   620 ;;_l	offset	2
   621 ;;__l	offset=-2 (param)
   622 ;;__r	offset=-4 (param)
   623 ;;_n	offset=-6 (param)
   624 ;;_nuls	offset	0
   625 ;;_l	offset	7
   626 ;;_p	offset	9
   627 ;;_cp	offset	11
   628 ;;_w	offset	13
   629 ;;_i	offset	15
   630 ;;_fp	offset=-2 (param)
   631 ;;_s	offset=-4 (param)
   632 ;;_efgtoa$5717	offset	0
   633 ;;_efgtoa$5716	offset	2
   634 ;;_efgtoa$5715	offset	4
   635 ;;_efgtoa$5711	offset	6
   636 ;;_efgtoa$5707	offset	8
   637 ;;_efgtoa$5706	offset	10
   638 ;;_u	offset	12
   639 ;;_g	offset	16
   640 ;;_l	offset	20
   641 ;;_h	offset	24
   642 ;;_ou	offset	28
   643 ;;_n	offset	32
   644 ;;_e	offset	34
   645 ;;_i	offset	36
   646 ;;_w	offset	38
   647 ;;_p	offset	40
   648 ;;_sign	offset	42
   649 ;;_d	offset	44
   650 ;;_ne	offset	46
   651 ;;_m	offset	48
   652 ;;_pp	offset	50
   653 ;;_t	offset	52
   654 ;;_mode	offset	54
   655 ;;_nmode	offset	55
   656 ;;_fp	offset=-2 (param)
   657 ;;_f	offset=-6 (param)
   658 ;;_c	offset=-7 (param)
   659 ;;_tolower$6536	offset	0
   660 ;;_c	offset=-2 (param)
   661 ;;_c	offset=-2 (param)
   662 ;;_d	offset	0
   663 ;;_s	offset	2
   664 ;;_dest	offset=-2 (param)
   665 ;;_src	offset=-4 (param)
   666 ;;_u	offset	0
   667 ;;_m	offset	4
   668 ;;_e	offset	8
   669 ;;_x	offset=-4 (param)
   670 ;;_u	offset	0
   671 ;;_e	offset	4
   672 ;;_x	offset=-4 (param)
   673 ;;_exp1	offset	0
   674 ;;_sign1	offset	1
   675 ;;_f1	offset=-4 (param)
   676 ;;_f1	offset=-4 (param)
   677 ;;_ff1	offset=-4 (param)
   678 ;;_ff2	offset=-8 (param)
   679 ;;_sign	offset	0
   680 ;;_counter	offset	1
   681 ;;_dividend	offset=-2 (param)
   682 ;;_divisor	offset=-4 (param)
   683 ;;_quotient	offset	0
   684 ;;_sign	offset	2
   685 ;;_counter	offset	3
   686 ;;_dividend	offset=-2 (param)
   687 ;;_divisor	offset=-4 (param)
   688 ;;_dtoa$5683	offset	0
   689 ;;_n	offset	2
   690 ;;_i	offset	10
   691 ;;_s	offset	12
   692 ;;_w	offset	14
   693 ;;_p	offset	16
   694 ;;_fp	offset=-2 (param)
   695 ;;_d	offset=-10 (param)
   696 ;;_a	offset=-2 (param)
   697 ;;_sign	offset	0
   698 ;;_counter	offset	1
   699 ;;_dividend	offset=-8 (param)
   700 ;;_divisor	offset=-16 (param)
   701 ;;_quotient	offset	0
   702 ;;_sign	offset	8
   703 ;;_counter	offset	9
   704 ;;_dividend	offset=-8 (param)
   705 ;;_divisor	offset=-16 (param)
   706 ;;_w	offset	0
   707 ;;_fp	offset=-2 (param)
   708 ;;_c	offset=-3 (param)
   709 ;;_w	offset	0
   710 ;;_i	offset	2
   711 ;;_fp	offset=-2 (param)
   712 ;;_buf	offset=-4 (param)
   713 ;;_p	offset=-6 (param)
   714 ;;_a	offset	0
   715 ;;_s	offset=-2 (param)
   716 ;;_i	offset	0
   717 ;;_c	offset	2
   718 ;;_s	offset=-2 (param)
   719 ;;_fp	offset=-4 (param)
   720 ;;_c	offset=-2 (param)
   721 ;;_fp	offset=-4 (param)
   722 ;;_c	offset=-1 (param)
   723 ;;__this	offset=-2 (param)
   724 ;;_c	offset=-3 (param)
   725 ;;_atoi$6267	offset	0
   726 ;;_atoi$6265	offset	2
   727 ;;_atoi$6266	offset	4
   728 ;;_n	offset	5
   729 ;;_neg	offset	7
   730 ;;_s	offset=-2 (param)
   731 ;;_isspace$6316	offset	0
   732 ;;_c	offset=-2 (param)
   733 ;;_c	offset=-2 (param)
   734 ;;_dsize	offset=-2 (param)
   735 ;;_u	offset	0
   736 ;;_x	offset=-4 (param)
   737 ;;_f1p	offset=-2 (param)
   738 ;;_f2	offset=-6 (param)
   739 ;;_timer	offset=-1 (param)
   740 ;;_count	offset=-3 (param)
   741 ;;_channel	offset=-1 (param)
   742 ;;_i	offset	0
   743                           
   744                           	psect	idataBIGRAM
   745  016B70                     __pidataBIGRAM:
   746                           	opt callstack 0
   747                           
   748                           ;initializer for _port_data
   749  016B70  FF                 	db	255
   750  016B71  00                 	db	0
   751  016B72  FF                 	db	255
   752  016B73  00                 	db	0
   753  016B74  FF                 	db	255
   754  016B75  00                 	db	0
   755  016B76  FF                 	db	255
   756  016B77  00                 	db	0
   757  016B78  FF                 	db	255
   758  016B79  00                 	db	0
   759  016B7A  FF                 	db	255
   760  016B7B  00                 	db	0
   761  016B7C  FF                 	db	255
   762  016B7D  00                 	db	0
   763  016B7E  FF                 	db	255
   764  016B7F  00                 	db	0
   765  016B80  00                 	db	0
   766  016B81  00                 	db	0
   767  016B82  00                 	db	0
   768  016B83  00                 	db	0
   769  016B84  00                 	db	0
   770  016B85  00                 	db	0
   771  016B86  00                 	db	0
   772  016B87  00                 	db	0
   773  016B88  00                 	db	0
   774  016B89  00                 	db	0
   775  016B8A  00                 	db	0
   776  016B8B  00                 	db	0
   777  016B8C  00                 	db	0
   778  016B8D  00                 	db	0
   779  016B8E  00                 	db	0
   780  016B8F  00                 	db	0
   781  016B90  00                 	db	0
   782  016B91  00                 	db	0
   783  016B92  00                 	db	0
   784  016B93  00                 	db	0
   785  016B94  00                 	db	0
   786  016B95  00                 	db	0
   787  016B96  00                 	db	0
   788  016B97  00                 	db	0
   789  016B98  00                 	db	0
   790  016B99  00                 	db	0
   791  016B9A  00                 	db	0
   792  016B9B  00                 	db	0
   793  016B9C  00                 	db	0
   794  016B9D  00                 	db	0
   795  016B9E  00                 	db	0
   796  016B9F  00                 	db	0
   797  016BA0  00                 	db	0
   798  016BA1  00                 	db	0
   799  016BA2  00                 	db	0
   800  016BA3  00                 	db	0
   801  016BA4  00                 	db	0
   802  016BA5  00                 	db	0
   803  016BA6  00                 	db	0
   804  016BA7  00                 	db	0
   805  016BA8  00                 	db	0
   806  016BA9  00                 	db	0
   807  016BAA  00                 	db	0
   808  016BAB  00                 	db	0
   809  016BAC  00                 	db	0
   810  016BAD  00                 	db	0
   811  016BAE  00                 	db	0
   812  016BAF  00                 	db	0
   813  016BB0  00                 	db	0
   814  016BB1  00                 	db	0
   815  016BB2  00                 	db	0
   816  016BB3  00                 	db	0
   817  016BB4  00                 	db	0
   818  016BB5  00                 	db	0
   819  016BB6  00                 	db	0
   820  016BB7  00                 	db	0
   821  016BB8  00                 	db	0
   822  016BB9  00                 	db	0
   823  016BBA  00                 	db	0
   824  016BBB  00                 	db	0
   825  016BBC  00                 	db	0
   826  016BBD  00                 	db	0
   827  016BBE  00                 	db	0
   828  016BBF  00                 	db	0
   829  016BC0  00                 	db	0
   830  016BC1  00                 	db	0
   831  016BC2  00                 	db	0
   832  016BC3  00                 	db	0
   833  016BC4  00                 	db	0
   834  016BC5  00                 	db	0
   835  016BC6  00                 	db	0
   836  016BC7  00                 	db	0
   837  016BC8  00                 	db	0
   838  016BC9  00                 	db	0
   839  016BCA  00                 	db	0
   840  016BCB  00                 	db	0
   841  016BCC  00                 	db	0
   842  016BCD  00                 	db	0
   843  016BCE  00                 	db	0
   844  016BCF  00                 	db	0
   845  016BD0  00                 	db	0
   846  016BD1  00                 	db	0
   847  016BD2  00                 	db	0
   848  016BD3  00                 	db	0
   849  016BD4  00                 	db	0
   850  016BD5  00                 	db	0
   851  016BD6  00                 	db	0
   852  016BD7  00                 	db	0
   853  016BD8  00                 	db	0
   854  016BD9  00                 	db	0
   855  016BDA  00                 	db	0
   856  016BDB  00                 	db	0
   857  016BDC  00                 	db	0
   858  016BDD  00                 	db	0
   859  016BDE  00                 	db	0
   860  016BDF  00                 	db	0
   861  016BE0  00                 	db	0
   862  016BE1  00                 	db	0
   863  016BE2  00                 	db	0
   864  016BE3  00                 	db	0
   865  016BE4  00                 	db	0
   866  016BE5  00                 	db	0
   867  016BE6  00                 	db	0
   868  016BE7  00                 	db	0
   869  016BE8  00                 	db	0
   870  016BE9  00                 	db	0
   871  016BEA  00                 	db	0
   872  016BEB  00                 	db	0
   873  016BEC  00                 	db	0
   874  016BED  00                 	db	0
   875  016BEE  00                 	db	0
   876  016BEF  00                 	db	0
   877  016BF0  00                 	db	0
   878  016BF1  00                 	db	0
   879  016BF2  00                 	db	0
   880  016BF3  00                 	db	0
   881  016BF4  00                 	db	0
   882  016BF5  00                 	db	0
   883  016BF6  00                 	db	0
   884  016BF7  00                 	db	0
   885  016BF8  00                 	db	0
   886  016BF9  00                 	db	0
   887  016BFA  00                 	db	0
   888  016BFB  00                 	db	0
   889  016BFC  00                 	db	0
   890  016BFD  00                 	db	0
   891  016BFE  00                 	db	0
   892  016BFF  00                 	db	0
   893  016C00  00                 	db	0
   894  016C01  00                 	db	0
   895  016C02  00                 	db	0
   896  016C03  00                 	db	0
   897  016C04  00                 	db	0
   898  016C05  00                 	db	0
   899  016C06  00                 	db	0
   900  016C07  00                 	db	0
   901  016C08  00                 	db	0
   902  016C09  00                 	db	0
   903  016C0A  00                 	db	0
   904  016C0B  00                 	db	0
   905  016C0C  00                 	db	0
   906  016C0D  00                 	db	0
   907  016C0E  00                 	db	0
   908  016C0F  00                 	db	0
   909  016C10  00                 	db	0
   910  016C11  00                 	db	0
   911  016C12  00                 	db	0
   912  016C13  00                 	db	0
   913  016C14  00                 	db	0
   914  016C15  00                 	db	0
   915  016C16  00                 	db	0
   916  016C17  00                 	db	0
   917  016C18  00                 	db	0
   918  016C19  00                 	db	0
   919  016C1A  00                 	db	0
   920  016C1B  00                 	db	0
   921  016C1C  00                 	db	0
   922  016C1D  00                 	db	0
   923  016C1E  00                 	db	0
   924  016C1F  00                 	db	0
   925  016C20  00                 	db	0
   926  016C21  00                 	db	0
   927  016C22  00                 	db	0
   928  016C23  00                 	db	0
   929  016C24  00                 	db	0
   930  016C25  00                 	db	0
   931  016C26  00                 	db	0
   932  016C27  00                 	db	0
   933  016C28  00                 	db	0
   934  016C29  00                 	db	0
   935  016C2A  00                 	db	0
   936  016C2B  00                 	db	0
   937  016C2C  00                 	db	0
   938  016C2D  00                 	db	0
   939  016C2E  00                 	db	0
   940  016C2F  00                 	db	0
   941  016C30  00                 	db	0
   942  016C31  00                 	db	0
   943  016C32  00                 	db	0
   944  016C33  00                 	db	0
   945  016C34  00                 	db	0
   946  016C35  00                 	db	0
   947  016C36  00                 	db	0
   948  016C37  00                 	db	0
   949  016C38  00                 	db	0
   950  016C39  00                 	db	0
   951  016C3A  00                 	db	0
   952  016C3B  00                 	db	0
   953  016C3C  00                 	db	0
   954  016C3D  00                 	db	0
   955  016C3E  00                 	db	0
   956  016C3F  00                 	db	0
   957  016C40  00                 	db	0
   958  016C41  00                 	db	0
   959  016C42  00                 	db	0
   960  016C43  00                 	db	0
   961  016C44  00                 	db	0
   962  016C45  00                 	db	0
   963  016C46  00                 	db	0
   964  016C47  00                 	db	0
   965  016C48  00                 	db	0
   966  016C49  00                 	db	0
   967  016C4A  00                 	db	0
   968  016C4B  00                 	db	0
   969  016C4C  00                 	db	0
   970  016C4D  00                 	db	0
   971  016C4E  00                 	db	0
   972  016C4F  00                 	db	0
   973  016C50  00                 	db	0
   974  016C51  00                 	db	0
   975  016C52  00                 	db	0
   976  016C53  00                 	db	0
   977  016C54  00                 	db	0
   978  016C55  00                 	db	0
   979  016C56  00                 	db	0
   980  016C57  00                 	db	0
   981  016C58  00                 	db	0
   982  016C59  00                 	db	0
   983  016C5A  00                 	db	0
   984  016C5B  00                 	db	0
   985  016C5C  00                 	db	0
   986  016C5D  00                 	db	0
   987  016C5E  00                 	db	0
   988  016C5F  00                 	db	0
   989  016C60  00                 	db	0
   990  016C61  00                 	db	0
   991  016C62  00                 	db	0
   992  016C63  00                 	db	0
   993  016C64  00                 	db	0
   994  016C65  00                 	db	0
   995  016C66  00                 	db	0
   996  016C67  00                 	db	0
   997  016C68  00                 	db	0
   998  016C69  00                 	db	0
   999  016C6A  00                 	db	0
  1000  016C6B  00                 	db	0
  1001  016C6C  00                 	db	0
  1002  016C6D  00                 	db	0
  1003  016C6E  00                 	db	0
  1004  016C6F  00                 	db	0
  1005  016C70  00                 	db	0
  1006  016C71  00                 	db	0
  1007  016C72  00                 	db	0
  1008  016C73  00                 	db	0
  1009  016C74  00                 	db	0
  1010  016C75  00                 	db	0
  1011  016C76  00                 	db	0
  1012  016C77  00                 	db	0
  1013  016C78  00                 	db	0
  1014  016C79  00                 	db	0
  1015  016C7A  00                 	db	0
  1016  016C7B  00                 	db	0
  1017  016C7C  00                 	db	0
  1018  016C7D  00                 	db	0
  1019  016C7E  00                 	db	0
  1020  016C7F  00                 	db	0
  1021  016C80  00                 	db	0
  1022  016C81  00                 	db	0
  1023  016C82  00                 	db	0
  1024  016C83  00                 	db	0
  1025  016C84  00                 	db	0
  1026  016C85  00                 	db	0
  1027  016C86  00                 	db	0
  1028  016C87  00                 	db	0
  1029  016C88  00                 	db	0
  1030  016C89  00                 	db	0
  1031  016C8A  00                 	db	0
  1032  016C8B  00                 	db	0
  1033  016C8C  00                 	db	0
  1034  016C8D  00                 	db	0
  1035  016C8E  00                 	db	0
  1036  016C8F  00                 	db	0
  1037  016C90  00                 	db	0
  1038  016C91  00                 	db	0
  1039  016C92  00                 	db	0
  1040  016C93  00                 	db	0
  1041  016C94  00                 	db	0
  1042  016C95  00                 	db	0
  1043  016C96  00                 	db	0
  1044  016C97  00                 	db	0
  1045  016C98  00                 	db	0
  1046  016C99  00                 	db	0
  1047  016C9A  00                 	db	0
  1048  016C9B  00                 	db	0
  1049  016C9C  00                 	db	0
  1050  016C9D  00                 	db	0
  1051  016C9E  00                 	db	0
  1052  016C9F  00                 	db	0
  1053  016CA0  00                 	db	0
  1054  016CA1  00                 	db	0
  1055  016CA2  00                 	db	0
  1056  016CA3  00                 	db	0
  1057  016CA4  00                 	db	0
  1058  016CA5  00                 	db	0
  1059  016CA6  00                 	db	0
  1060  016CA7  00                 	db	0
  1061  016CA8  00                 	db	0
  1062  016CA9  00                 	db	0
  1063  016CAA  00                 	db	0
  1064  016CAB  00                 	db	0
  1065  016CAC  00                 	db	0
  1066  016CAD  00                 	db	0
  1067  016CAE  00                 	db	0
  1068  016CAF  00                 	db	0
  1069  016CB0  00                 	db	0
  1070  016CB1  00                 	db	0
  1071  016CB2  00                 	db	0
  1072  016CB3  00                 	db	0
  1073  016CB4  00                 	db	0
  1074  016CB5  00                 	db	0
  1075  016CB6  00                 	db	0
  1076  016CB7  00                 	db	0
  1077  016CB8  00                 	db	0
  1078  016CB9  00                 	db	0
  1079  016CBA  00                 	db	0
  1080  016CBB  00                 	db	0
  1081  016CBC  00                 	db	0
  1082  016CBD  00                 	db	0
  1083  016CBE  00                 	db	0
  1084  016CBF  00                 	db	0
  1085  016CC0  00                 	db	0
  1086  016CC1  00                 	db	0
  1087  016CC2  00                 	db	0
  1088  016CC3  00                 	db	0
  1089  016CC4  00                 	db	0
  1090  016CC5  00                 	db	0
  1091  016CC6  00                 	db	0
  1092  016CC7  00                 	db	0
  1093  016CC8  00                 	db	0
  1094  016CC9  00                 	db	0
  1095  016CCA  00                 	db	0
  1096  016CCB  00                 	db	0
  1097  016CCC  00                 	db	0
  1098  016CCD  00                 	db	0
  1099  016CCE  00                 	db	0
  1100  016CCF  00                 	db	0
  1101  016CD0  00                 	db	0
  1102  016CD1  00                 	db	0
  1103  016CD2  00                 	db	0
  1104  016CD3  00                 	db	0
  1105  016CD4  00                 	db	0
  1106  016CD5  00                 	db	0
  1107  016CD6  00                 	db	0
  1108  016CD7  00                 	db	0
  1109  016CD8  00                 	db	0
  1110  016CD9  00                 	db	0
  1111  016CDA  00                 	db	0
  1112  016CDB  00                 	db	0
  1113  016CDC  00                 	db	0
  1114  016CDD  00                 	db	0
  1115  016CDE  00                 	db	0
  1116  016CDF  00                 	db	0
  1117  016CE0  00                 	db	0
  1118  016CE1  00                 	db	0
  1119  016CE2  00                 	db	0
  1120  016CE3  00                 	db	0
  1121  016CE4  00                 	db	0
  1122  016CE5  00                 	db	0
  1123  016CE6  00                 	db	0
  1124  016CE7  00                 	db	0
  1125  016CE8  00                 	db	0
  1126  016CE9  00                 	db	0
  1127  016CEA  00                 	db	0
  1128  016CEB  00                 	db	0
  1129  016CEC  00                 	db	0
  1130  016CED  00                 	db	0
  1131  016CEE  00                 	db	0
  1132  016CEF  00                 	db	0
  1133  016CF0  00                 	db	0
  1134  016CF1  00                 	db	0
  1135  016CF2  00                 	db	0
  1136  016CF3  00                 	db	0
  1137  016CF4  00                 	db	0
  1138  016CF5  00                 	db	0
  1139  016CF6  00                 	db	0
  1140  016CF7  00                 	db	0
  1141  016CF8  00                 	db	0
  1142  016CF9  00                 	db	0
  1143  016CFA  00                 	db	0
  1144  016CFB  00                 	db	0
  1145  016CFC  00                 	db	0
  1146  016CFD  00                 	db	0
  1147  016CFE  00                 	db	0
  1148  016CFF  00                 	db	0
  1149  016D00  00                 	db	0
  1150  016D01  00                 	db	0
  1151  016D02  00                 	db	0
  1152  016D03  00                 	db	0
  1153  016D04  00                 	db	0
  1154  016D05  00                 	db	0
  1155  016D06  00                 	db	0
  1156  016D07  00                 	db	0
  1157  016D08  00                 	db	0
  1158  016D09  00                 	db	0
  1159  016D0A  00                 	db	0
  1160  016D0B  00                 	db	0
  1161  016D0C  00                 	db	0
  1162  016D0D  00                 	db	0
  1163  016D0E  00                 	db	0
  1164  016D0F  00                 	db	0
  1165  016D10  00                 	db	0
  1166  016D11  00                 	db	0
  1167  016D12  00                 	db	0
  1168  016D13  00                 	db	0
  1169  016D14  00                 	db	0
  1170  016D15  00                 	db	0
  1171  016D16  00                 	db	0
  1172  016D17  00                 	db	0
  1173  016D18  00                 	db	0
  1174  016D19  00                 	db	0
  1175  016D1A  00                 	db	0
  1176  016D1B  00                 	db	0
  1177  016D1C  00                 	db	0
  1178  016D1D  00                 	db	0
  1179  016D1E  00                 	db	0
  1180  016D1F  00                 	db	0
  1181  016D20  00                 	db	0
  1182  016D21  00                 	db	0
  1183  016D22  00                 	db	0
  1184  016D23  00                 	db	0
  1185  016D24  00                 	db	0
  1186  016D25  00                 	db	0
  1187  016D26  00                 	db	0
  1188  016D27  00                 	db	0
  1189  016D28  00                 	db	0
  1190  016D29  00                 	db	0
  1191  016D2A  00                 	db	0
  1192  016D2B  00                 	db	0
  1193  016D2C  00                 	db	0
  1194  016D2D  00                 	db	0
  1195  016D2E  00                 	db	0
  1196  016D2F  00                 	db	0
  1197  016D30  00                 	db	0
  1198  016D31  00                 	db	0
  1199  016D32  00                 	db	0
  1200  016D33  00                 	db	0
  1201  016D34  00                 	db	0
  1202  016D35  00                 	db	0
  1203  016D36  00                 	db	0
  1204  016D37  00                 	db	0
  1205  016D38  00                 	db	0
  1206  016D39  00                 	db	0
  1207  016D3A  00                 	db	0
  1208  016D3B  00                 	db	0
  1209  016D3C  00                 	db	0
  1210  016D3D  00                 	db	0
  1211  016D3E  00                 	db	0
  1212  016D3F  00                 	db	0
  1213  016D40  00                 	db	0
  1214  016D41  00                 	db	0
  1215  016D42  00                 	db	0
  1216  016D43  00                 	db	0
  1217  016D44  00                 	db	0
  1218  016D45  00                 	db	0
  1219  016D46  00                 	db	0
  1220  016D47  00                 	db	0
  1221  016D48  00                 	db	0
  1222  016D49  00                 	db	0
  1223  016D4A  00                 	db	0
  1224  016D4B  00                 	db	0
  1225  016D4C  00                 	db	0
  1226  016D4D  00                 	db	0
  1227  016D4E  00                 	db	0
  1228  016D4F  00                 	db	0
  1229  016D50  00                 	db	0
  1230  016D51  00                 	db	0
  1231  016D52  00                 	db	0
  1232  016D53  00                 	db	0
  1233  016D54  00                 	db	0
  1234  016D55  00                 	db	0
  1235  016D56  00                 	db	0
  1236  016D57  00                 	db	0
  1237  016D58  00                 	db	0
  1238  016D59  00                 	db	0
  1239  016D5A  00                 	db	0
  1240  016D5B  00                 	db	0
  1241  016D5C  00                 	db	0
  1242  016D5D  00                 	db	0
  1243  016D5E  00                 	db	0
  1244  016D5F  00                 	db	0
  1245  016D60  00                 	db	0
  1246  016D61  00                 	db	0
  1247  016D62  00                 	db	0
  1248  016D63  00                 	db	0
  1249  016D64  00                 	db	0
  1250  016D65  00                 	db	0
  1251  016D66  00                 	db	0
  1252  016D67  00                 	db	0
  1253  016D68  00                 	db	0
  1254  016D69  00                 	db	0
  1255  016D6A  00                 	db	0
  1256  016D6B  00                 	db	0
  1257  016D6C  00                 	db	0
  1258  016D6D  00                 	db	0
  1259  016D6E  00                 	db	0
  1260  016D6F  00                 	db	0
  1261                           
  1262                           ;initializer for _C
  1263  016D70  0000               	dw	0
  1264  016D72  0000               	dw	0
  1265  016D74  0000               	dw	0
  1266  016D76  0000               	dw	0
  1267  016D78  0000               	dw	0
  1268  016D7A  0000               	dw	0
  1269  016D7C  0000               	dw	0
  1270  016D7E  0000               	dw	0
  1271  016D80  0000               	dw	0
  1272  016D82  0000               	dw	0
  1273  016D84  0000               	dw	0
  1274  016D86  0000               	dw	0
  1275  016D88  0000               	dw	0
  1276  016D8A  0000               	dw	0
  1277  016D8C  0000               	dw	0
  1278  016D8E  0000               	dw	0
  1279  016D90  0000               	dw	0
  1280  016D92  0000               	dw	0
  1281  016D94  0000               	dw	0
  1282  016D96  0000               	dw	0
  1283  016D98  0000               	dw	0
  1284  016D9A  0000               	dw	0
  1285  016D9C  0000               	dw	0
  1286  016D9E  0000               	dw	0
  1287  016DA0  0000               	dw	0
  1288  016DA2  0000               	dw	0
  1289  016DA4  0000               	dw	0
  1290  016DA6  0000               	dw	0
  1291  016DA8  0000               	dw	0
  1292  016DAA  0000               	dw	0
  1293  016DAC  0000               	dw	0
  1294  016DAE  0000               	dw	0
  1295  016DB0  0000               	dw	0
  1296  016DB2  0000               	dw	0
  1297  016DB4  0000               	dw	0
  1298  016DB6  0000               	dw	0
  1299  016DB8  0000               	dw	0
  1300  016DBA  0000               	dw	0
  1301  016DBC  0000               	dw	0
  1302  016DBE  0000               	dw	0
  1303  016DC0  0000               	dw	0
  1304  016DC2  0000               	dw	0
  1305  016DC4  0000               	dw	0
  1306  016DC6  0000               	dw	0
  1307  016DC8  0000               	dw	0
  1308  016DCA  0000               	dw	0
  1309  016DCC  0000               	dw	0
  1310  016DCE  0000               	dw	0
  1311  016DD0  0000               	dw	0
  1312  016DD2  0000               	dw	0
  1313  016DD4  0000               	dw	0
  1314  016DD6  0000               	dw	0
  1315  016DD8  0000               	dw	0
  1316  016DDA  0000               	dw	0
  1317  016DDC  0000               	dw	0
  1318  016DDE  0000               	dw	0
  1319  016DE0  0000               	dw	0
  1320  016DE2  0000               	dw	0
  1321  016DE4  0000               	dw	0
  1322  016DE6  0000               	dw	0
  1323  016DE8  0000               	dw	0
  1324  016DEA  0000               	dw	0
  1325  016DEC  0000               	dw	0
  1326  016DEE  0000               	dw	0
  1327  016DF0  0000               	dw	0
  1328  016DF2  0000               	dw	0
  1329  016DF4  0000               	dw	0
  1330  016DF6  0000               	dw	0
  1331  016DF8  0000               	dw	0
  1332  016DFA  0000               	dw	0
  1333  016DFC  0000               	dw	0
  1334  016DFE  42FA               	dw	17146
  1335  016E00  0000               	dw	0
  1336  016E02  0000               	dw	0
  1337  016E04  0000               	dw	0
  1338  016E06  0000               	dw	0
  1339  016E08  0000               	dw	0
  1340  016E0A  0000               	dw	0
  1341  016E0C  0000               	dw	0
  1342  016E0E  0000               	dw	0
  1343  016E10  0000               	dw	0
  1344  016E12  0000               	dw	0
  1345  016E14  0000               	dw	0
  1346  016E16  0000               	dw	0
  1347  016E18  0000               	dw	0
  1348  016E1A  0000               	dw	0
  1349  016E1C  0000               	dw	0
  1350  016E1E  0000               	dw	0
  1351  016E20  0000               	dw	0
  1352  016E22  0000               	dw	0
  1353  016E24  0000               	dw	0
  1354  016E26  0000               	dw	0
  1355  016E28  00                 	db	0
  1356  016E29  01                 	db	1
  1357  016E2A  0000               	dw	0
  1358  016E2C  3F80               	dw	16256
  1359  016E2E  0000               	dw	0
  1360  016E30  3F80               	dw	16256
  1361  016E32  00                 	db	0
  1362  016E33  00                 	db	0
  1363  016E34  00                 	db	0
  1364  016E35  00                 	db	0
  1365  016E36  00                 	db	0
  1366  016E37  00                 	db	0
  1367  016E38  00                 	db	0
  1368  016E39  00                 	db	0
  1369  016E3A  00                 	db	0
  1370  016E3B  00                 	db	0
  1371  016E3C  00                 	db	0
  1372  016E3D  00                 	db	0
  1373  016E3E  00                 	db	0
  1374  016E3F  00                 	db	0
  1375  016E40  00                 	db	0
  1376  016E41  00                 	db	0
  1377  016E42  00                 	db	0
  1378  016E43  00                 	db	0
  1379  016E44  00                 	db	0
  1380  016E45  00                 	db	0
  1381  016E46  00                 	db	0
  1382  016E47  00                 	db	0
  1383  016E48  00                 	db	0
  1384  016E49  00                 	db	0
  1385  016E4A  00                 	db	0
  1386  016E4B  00                 	db	0
  1387  016E4C  00                 	db	0
  1388  016E4D  00                 	db	0
  1389  016E4E  00                 	db	0
  1390  016E4F  00                 	db	0
  1391  016E50  00                 	db	0
  1392  016E51  00                 	db	0
  1393  016E52  00                 	db	0
  1394  016E53  00                 	db	0
  1395  016E54  00                 	db	0
  1396  016E55  00                 	db	0
  1397  016E56  00                 	db	0
  1398  016E57  00                 	db	0
  1399  016E58  00                 	db	0
  1400  016E59  00                 	db	0
  1401  016E5A  00                 	db	0
  1402  016E5B  00                 	db	0
  1403  016E5C  00                 	db	0
  1404  016E5D  00                 	db	0
  1405  016E5E  00                 	db	0
  1406  016E5F  00                 	db	0
  1407  016E60  00                 	db	0
  1408  016E61  00                 	db	0
  1409  016E62  00                 	db	0
  1410  016E63  00                 	db	0
  1411  016E64  00                 	db	0
  1412  016E65  00                 	db	0
  1413  016E66  00                 	db	0
  1414  016E67  00                 	db	0
  1415  016E68  00                 	db	0
  1416  016E69  00                 	db	0
  1417  016E6A  00                 	db	0
  1418  016E6B  00                 	db	0
  1419  016E6C  00                 	db	0
  1420  016E6D  00                 	db	0
  1421  016E6E  00                 	db	0
  1422  016E6F  00                 	db	0
  1423  016E70  00                 	db	0
  1424  016E71  00                 	db	0
  1425  016E72  00                 	db	0
  1426  016E73  00                 	db	0
  1427  016E74  00                 	db	0
  1428  016E75  00                 	db	0
  1429  016E76  00                 	db	0
  1430  016E77  00                 	db	0
  1431  016E78  00                 	db	0
  1432  016E79  00                 	db	0
  1433  016E7A  00                 	db	0
  1434  016E7B  00                 	db	0
  1435  016E7C  00                 	db	0
  1436  016E7D  00                 	db	0
  1437  016E7E  0000               	dw	0
  1438  016E80  0000               	dw	0
  1439  016E82  0000               	dw	0
  1440  016E84  0000               	dw	0
  1441  016E86  0000               	dw	0
  1442  016E88  0000               	dw	0
  1443  016E8A  0000               	dw	0
  1444  016E8C  0000               	dw	0
  1445  016E8E  0000               	dw	0
  1446  016E90  0000               	dw	0
  1447  016E92  01                 	db	1
  1448  016E93  00                 	db	0
  1449  016E94  00                 	db	0
  1450  016E95  00                 	db	0
  1451  016E96  00                 	db	0
  1452  016E97  00                 	db	0
  1453  016E98  00                 	db	0
  1454  016E99  00                 	db	0
  1455  016E9A  00                 	db	0
  1456                           
  1457                           	psect	idataBANK0
  1458  01BCC4                     __pidataBANK0:
  1459                           	opt callstack 0
  1460                           
  1461                           ;initializer for _R
  1462  01BCC4  0000               	dw	0
  1463  01BCC6  0000               	dw	0
  1464  01BCC8  0000               	dw	0
  1465  01BCCA  0000               	dw	0
  1466  01BCCC  0000               	dw	0
  1467  01BCCE  0000               	dw	0
  1468  01BCD0  0000               	dw	0
  1469  01BCD2  0000               	dw	0
  1470  01BCD4  0000               	dw	0
  1471  01BCD6  0000               	dw	0
  1472  01BCD8  0000               	dw	0
  1473  01BCDA  0000               	dw	0
  1474  01BCDC  0000               	dw	0
  1475  01BCDE  0000               	dw	0
  1476  01BCE0  0000               	dw	0
  1477  01BCE2  0000               	dw	0
  1478  01BCE4  0FFF               	dw	4095
  1479  01BCE6  0777               	dw	1911
  1480  01BCE8  0000               	dw	0
  1481  01BCEA  0F67               	dw	3943
  1482  01BCEC  0F8F               	dw	3983
  1483  01BCEE  0000               	dw	0
  1484  01BCF0  0000               	dw	0
  1485  01BCF2  0000               	dw	0
  1486  01BCF4  0000               	dw	0
  1487  01BCF6  00                 	db	0
  1488  01BCF7  0000               	dw	0
  1489  01BCF9  00                 	db	0
  1490                           
  1491                           	psect	idataBANK1
  1492  01A598                     __pidataBANK1:
  1493                           	opt callstack 0
  1494                           
  1495                           ;initializer for stoa@F1166
  1496  01A598  28                 	db	40
  1497  01A599  6E                 	db	110
  1498  01A59A  75                 	db	117
  1499  01A59B  6C                 	db	108
  1500  01A59C  6C                 	db	108
  1501  01A59D  29                 	db	41
  1502  01A59E  00                 	db	0
  1503                           
  1504                           ;initializer for _V
  1505  01A59F  00                 	db	0
  1506  01A5A0  00                 	db	0
  1507  01A5A1  00                 	db	0
  1508  01A5A2  00                 	db	0
  1509  01A5A3  00                 	db	0
  1510  01A5A4  00                 	db	0
  1511  01A5A5  00                 	db	0
  1512  01A5A6  00                 	db	0
  1513  01A5A7  00                 	db	0
  1514  01A5A8  00                 	db	0
  1515  01A5A9  00                 	db	0
  1516  01A5AA  00                 	db	0
  1517  01A5AB  00                 	db	0
  1518  01A5AC  00                 	db	0
  1519  01A5AD  00                 	db	0
  1520  01A5AE  00                 	db	0
  1521  01A5AF  00                 	db	0
  1522  01A5B0  00                 	db	0
  1523  01A5B1  00                 	db	0
  1524  01A5B2  00                 	db	0
  1525  01A5B3  00                 	db	0
  1526  01A5B4  00                 	db	0
  1527  01A5B5  00                 	db	0
  1528  01A5B6  00                 	db	0
  1529  01A5B7  00                 	db	0
  1530  01A5B8  00                 	db	0
  1531  01A5B9  00                 	db	0
  1532  01A5BA  00                 	db	0
  1533  01A5BB  00                 	db	0
  1534  01A5BC  00                 	db	0
  1535  01A5BD  00                 	db	0
  1536  01A5BE  00                 	db	0
  1537  01A5BF  00                 	db	0
  1538  01A5C0  00                 	db	0
  1539  01A5C1  00                 	db	0
  1540  01A5C2  00                 	db	0
  1541  01A5C3  00                 	db	0
  1542  01A5C4  00                 	db	0
  1543  01A5C5  00                 	db	0
  1544  01A5C6  00                 	db	0
  1545  01A5C7  00                 	db	0
  1546  01A5C8  00                 	db	0
  1547  01A5C9  00                 	db	0
  1548  01A5CA  00                 	db	0
  1549  01A5CB  00                 	db	0
  1550  01A5CC  00                 	db	0
  1551  01A5CD  00                 	db	0
  1552  01A5CE  00                 	db	0
  1553  01A5CF  00                 	db	0
  1554  01A5D0  00                 	db	0
  1555  01A5D1  00                 	db	0
  1556  01A5D2  00                 	db	0
  1557  01A5D3  00                 	db	0
  1558  01A5D4  00                 	db	0
  1559  01A5D5  00                 	db	0
  1560  01A5D6  00                 	db	0
  1561  01A5D7  00                 	db	0
  1562  01A5D8  00                 	db	0
  1563  01A5D9  00                 	db	0
  1564  01A5DA  00                 	db	0
  1565  01A5DB  00                 	db	0
  1566  01A5DC  00                 	db	0
  1567  01A5DD  00                 	db	0
  1568  01A5DE  00                 	db	0
  1569  01A5DF  00                 	db	0
  1570  01A5E0  00                 	db	0
  1571  01A5E1  00                 	db	0
  1572  01A5E2  00                 	db	0
  1573  01A5E3  00                 	db	0
  1574  01A5E4  00                 	db	0
  1575  01A5E5  00                 	db	0
  1576  01A5E6  00                 	db	0
  1577  01A5E7  00                 	db	0
  1578  01A5E8  00                 	db	0
  1579  01A5E9  00                 	db	0
  1580  01A5EA  00                 	db	0
  1581  01A5EB  00                 	db	0
  1582  01A5EC  00                 	db	0
  1583  01A5ED  00                 	db	0
  1584  01A5EE  00                 	db	0
  1585  01A5EF  00                 	db	0
  1586  01A5F0  00                 	db	0
  1587  01A5F1  00                 	db	0
  1588  01A5F2  00                 	db	0
  1589  01A5F3  00                 	db	0
  1590  01A5F4  00                 	db	0
  1591  01A5F5  00                 	db	0
  1592  01A5F6  00                 	db	0
  1593  01A5F7  00                 	db	0
  1594  01A5F8  00                 	db	0
  1595  01A5F9  00                 	db	0
  1596  01A5FA  00                 	db	0
  1597  01A5FB  00                 	db	0
  1598  01A5FC  00                 	db	0
  1599  01A5FD  00                 	db	0
  1600  01A5FE  00                 	db	0
  1601  01A5FF  00                 	db	0
  1602  01A600  00                 	db	0
  1603  01A601  00                 	db	0
  1604  01A602  00                 	db	0
  1605  01A603  00                 	db	0
  1606  01A604  00                 	db	0
  1607  01A605  00                 	db	0
  1608  01A606  00                 	db	0
  1609  01A607  00                 	db	0
  1610  01A608  00                 	db	0
  1611  01A609  00                 	db	0
  1612  01A60A  00                 	db	0
  1613  01A60B  00                 	db	0
  1614  01A60C  00                 	db	0
  1615  01A60D  00                 	db	0
  1616  01A60E  00                 	db	0
  1617  01A60F  00                 	db	0
  1618  01A610  00                 	db	0
  1619  01A611  00                 	db	0
  1620  01A612  00                 	db	0
  1621  01A613  00                 	db	0
  1622  01A614  00                 	db	0
  1623  01A615  00                 	db	0
  1624  01A616  00                 	db	0
  1625  01A617  00                 	db	0
  1626  01A618  00                 	db	0
  1627  01A619  00                 	db	0
  1628  01A61A  00                 	db	0
  1629  01A61B  00                 	db	0
  1630  01A61C  00                 	db	0
  1631  01A61D  00                 	db	0
  1632  01A61E  00                 	db	0
  1633  01A61F  00                 	db	0
  1634  01A620  0000               	dw	0
  1635  01A622  0000               	dw	0
  1636  01A624  0000               	dw	0
  1637  01A626  0000               	dw	0
  1638  01A628  00                 	db	0
  1639  01A629  00                 	db	0
  1640  01A62A  00                 	db	0
  1641  01A62B  00                 	db	0
  1642  01A62C  00                 	db	0
  1643  01A62D  00                 	db	0
  1644  01A62E  0000               	dw	0
  1645  01A630  0000               	dw	0
  1646  01A632  0000               	dw	0
  1647  01A634  0000               	dw	0
  1648  01A636  0000               	dw	0
  1649  01A638  0000               	dw	0
  1650  01A63A  00                 	db	0
  1651  01A63B  00                 	db	0
  1652  01A63C  00                 	db	0
  1653  01A63D  00                 	db	0
  1654  01A63E  00                 	db	0
  1655  01A63F  00                 	db	0
  1656  01A640  00                 	db	0
  1657  01A641  00                 	db	0
  1658  01A642  00                 	db	0
  1659  01A643  00                 	db	0
  1660  01A644  00                 	db	0
  1661  01A645  0000               	dw	0
  1662  01A647  0000               	dw	0
  1663  01A649  2D                 	db	45
  1664  01A64A  00                 	db	0
  1665  01A64B  00                 	db	0
  1666  01A64C  00                 	db	0
  1667  01A64D  00                 	db	0
  1668  01A64E  0000               	dw	0
  1669  01A650  0000               	dw	0
  1670  01A652  0000               	dw	0
  1671  01A654  0000               	dw	0
  1672  01A656  0000               	dw	0
  1673  01A658  0000               	dw	0
  1674  01A65A  0000               	dw	0
  1675  01A65C  0000               	dw	0
  1676                           
  1677                           ;initializer for _H
  1678  01A65E  00                 	db	0
  1679  01A65F  00                 	db	0
  1680  01A660  01                 	db	1
  1681  01A661  00                 	db	0
  1682  01A662  01                 	db	1
  1683  01A663  00                 	db	0
  1684  01A664  00                 	db	0
  1685                           
  1686                           	psect	mediumconst
  1687  00F9E4                     __pmediumconst:
  1688                           	opt callstack 0
  1689  00F9E4  00                 	db	0
  1690  00F9E5                     _BVSOC_TABLE:
  1691                           	opt callstack 0
  1692  00F9E5  59D8               	dw	23000
  1693  00F9E7  0000               	dw	0
  1694  00F9E9  0005               	dw	5
  1695  00F9EB  0000               	dw	0
  1696  00F9ED  5B68               	dw	23400
  1697  00F9EF  0000               	dw	0
  1698  00F9F1  000A               	dw	10
  1699  00F9F3  0000               	dw	0
  1700  00F9F5  5C30               	dw	23600
  1701  00F9F7  0000               	dw	0
  1702  00F9F9  0014               	dw	20
  1703  00F9FB  0000               	dw	0
  1704  00F9FD  5E38               	dw	24120
  1705  00F9FF  0000               	dw	0
  1706  00FA01  0019               	dw	25
  1707  00FA03  0000               	dw	0
  1708  00FA05  5E88               	dw	24200
  1709  00FA07  0000               	dw	0
  1710  00FA09  001E               	dw	30
  1711  00FA0B  0000               	dw	0
  1712  00FA0D  5F78               	dw	24440
  1713  00FA0F  0000               	dw	0
  1714  00FA11  0028               	dw	40
  1715  00FA13  0000               	dw	0
  1716  00FA15  5FDC               	dw	24540
  1717  00FA17  0000               	dw	0
  1718  00FA19  002D               	dw	45
  1719  00FA1B  0000               	dw	0
  1720  00FA1D  6018               	dw	24600
  1721  00FA1F  0000               	dw	0
  1722  00FA21  0032               	dw	50
  1723  00FA23  0000               	dw	0
  1724  00FA25  6046               	dw	24646
  1725  00FA27  0000               	dw	0
  1726  00FA29  0035               	dw	53
  1727  00FA2B  0000               	dw	0
  1728  00FA2D  607C               	dw	24700
  1729  00FA2F  0000               	dw	0
  1730  00FA31  0037               	dw	55
  1731  00FA33  0000               	dw	0
  1732  00FA35  60AE               	dw	24750
  1733  00FA37  0000               	dw	0
  1734  00FA39  0039               	dw	57
  1735  00FA3B  0000               	dw	0
  1736  00FA3D  60E0               	dw	24800
  1737  00FA3F  0000               	dw	0
  1738  00FA41  003C               	dw	60
  1739  00FA43  0000               	dw	0
  1740  00FA45  6112               	dw	24850
  1741  00FA47  0000               	dw	0
  1742  00FA49  003F               	dw	63
  1743  00FA4B  0000               	dw	0
  1744  00FA4D  615D               	dw	24925
  1745  00FA4F  0000               	dw	0
  1746  00FA51  0043               	dw	67
  1747  00FA53  0000               	dw	0
  1748  00FA55  61A8               	dw	25000
  1749  00FA57  0000               	dw	0
  1750  00FA59  0046               	dw	70
  1751  00FA5B  0000               	dw	0
  1752  00FA5D  61BC               	dw	25020
  1753  00FA5F  0000               	dw	0
  1754  00FA61  0048               	dw	72
  1755  00FA63  0000               	dw	0
  1756  00FA65  61D0               	dw	25040
  1757  00FA67  0000               	dw	0
  1758  00FA69  004B               	dw	75
  1759  00FA6B  0000               	dw	0
  1760  00FA6D  61DA               	dw	25050
  1761  00FA6F  0000               	dw	0
  1762  00FA71  0050               	dw	80
  1763  00FA73  0000               	dw	0
  1764  00FA75  61E4               	dw	25060
  1765  00FA77  0000               	dw	0
  1766  00FA79  0055               	dw	85
  1767  00FA7B  0000               	dw	0
  1768  00FA7D  61F8               	dw	25080
  1769  00FA7F  0000               	dw	0
  1770  00FA81  005A               	dw	90
  1771  00FA83  0000               	dw	0
  1772  00FA85  6208               	dw	25096
  1773  00FA87  0000               	dw	0
  1774  00FA89  005C               	dw	92
  1775  00FA8B  0000               	dw	0
  1776  00FA8D  6222               	dw	25122
  1777  00FA8F  0000               	dw	0
  1778  00FA91  005D               	dw	93
  1779  00FA93  0000               	dw	0
  1780  00FA95  6234               	dw	25140
  1781  00FA97  0000               	dw	0
  1782  00FA99  005F               	dw	95
  1783  00FA9B  0000               	dw	0
  1784  00FA9D  6248               	dw	25160
  1785  00FA9F  0000               	dw	0
  1786  00FAA1  0061               	dw	97
  1787  00FAA3  0000               	dw	0
  1788  00FAA5  625C               	dw	25180
  1789  00FAA7  0000               	dw	0
  1790  00FAA9  0064               	dw	100
  1791  00FAAB  0000               	dw	0
  1792  00FAAD  6784               	dw	26500
  1793  00FAAF  0000               	dw	0
  1794  00FAB1  0062               	dw	98
  1795  00FAB3  0000               	dw	0
  1796  00FAB5                     __end_of_BVSOC_TABLE:
  1797                           	opt callstack 0
  1798  00FAB5                     _T:
  1799                           	opt callstack 0
  1800  00FAB5  63                 	db	99
  1801  00FAB6  6F                 	db	111
  1802  00FAB7  6D                 	db	109
  1803  00FAB8  6D                 	db	109
  1804  00FAB9  61                 	db	97
  1805  00FABA  6E                 	db	110
  1806  00FABB  64                 	db	100
  1807  00FABC  73                 	db	115
  1808  00FABD  20                 	db	32
  1809  00FABE  31                 	db	49
  1810  00FABF  00                 	db	0
  1811  00FAC0  00                 	db	0
  1812  00FAC1  00                 	db	0
  1813  00FAC2  00                 	db	0
  1814  00FAC3  00                 	db	0
  1815  00FAC4  00                 	db	0
  1816  00FAC5  00                 	db	0
  1817  00FAC6  00                 	db	0
  1818  00FAC7  64                 	db	100
  1819  00FAC8  69                 	db	105
  1820  00FAC9  73                 	db	115
  1821  00FACA  70                 	db	112
  1822  00FACB  6C                 	db	108
  1823  00FACC  61                 	db	97
  1824  00FACD  79                 	db	121
  1825  00FACE  73                 	db	115
  1826  00FACF  20                 	db	32
  1827  00FAD0  31                 	db	49
  1828  00FAD1  00                 	db	0
  1829  00FAD2  00                 	db	0
  1830  00FAD3  00                 	db	0
  1831  00FAD4  00                 	db	0
  1832  00FAD5  00                 	db	0
  1833  00FAD6  00                 	db	0
  1834  00FAD7  00                 	db	0
  1835  00FAD8  00                 	db	0
  1836  00FAD9  63                 	db	99
  1837  00FADA  6F                 	db	111
  1838  00FADB  6D                 	db	109
  1839  00FADC  6D                 	db	109
  1840  00FADD  61                 	db	97
  1841  00FADE  6E                 	db	110
  1842  00FADF  64                 	db	100
  1843  00FAE0  73                 	db	115
  1844  00FAE1  20                 	db	32
  1845  00FAE2  32                 	db	50
  1846  00FAE3  00                 	db	0
  1847  00FAE4  00                 	db	0
  1848  00FAE5  00                 	db	0
  1849  00FAE6  00                 	db	0
  1850  00FAE7  00                 	db	0
  1851  00FAE8  00                 	db	0
  1852  00FAE9  00                 	db	0
  1853  00FAEA  00                 	db	0
  1854  00FAEB  64                 	db	100
  1855  00FAEC  69                 	db	105
  1856  00FAED  73                 	db	115
  1857  00FAEE  70                 	db	112
  1858  00FAEF  6C                 	db	108
  1859  00FAF0  61                 	db	97
  1860  00FAF1  79                 	db	121
  1861  00FAF2  73                 	db	115
  1862  00FAF3  20                 	db	32
  1863  00FAF4  32                 	db	50
  1864  00FAF5  00                 	db	0
  1865  00FAF6  00                 	db	0
  1866  00FAF7  00                 	db	0
  1867  00FAF8  00                 	db	0
  1868  00FAF9  00                 	db	0
  1869  00FAFA  00                 	db	0
  1870  00FAFB  00                 	db	0
  1871  00FAFC  00                 	db	0
  1872  00FAFD  63                 	db	99
  1873  00FAFE  6F                 	db	111
  1874  00FAFF  6D                 	db	109
  1875  00FB00  6D                 	db	109
  1876  00FB01  61                 	db	97
  1877  00FB02  6E                 	db	110
  1878  00FB03  64                 	db	100
  1879  00FB04  73                 	db	115
  1880  00FB05  20                 	db	32
  1881  00FB06  33                 	db	51
  1882  00FB07  00                 	db	0
  1883  00FB08  00                 	db	0
  1884  00FB09  00                 	db	0
  1885  00FB0A  00                 	db	0
  1886  00FB0B  00                 	db	0
  1887  00FB0C  00                 	db	0
  1888  00FB0D  00                 	db	0
  1889  00FB0E  00                 	db	0
  1890  00FB0F  64                 	db	100
  1891  00FB10  69                 	db	105
  1892  00FB11  73                 	db	115
  1893  00FB12  70                 	db	112
  1894  00FB13  6C                 	db	108
  1895  00FB14  61                 	db	97
  1896  00FB15  79                 	db	121
  1897  00FB16  73                 	db	115
  1898  00FB17  20                 	db	32
  1899  00FB18  33                 	db	51
  1900  00FB19  00                 	db	0
  1901  00FB1A  00                 	db	0
  1902  00FB1B  00                 	db	0
  1903  00FB1C  00                 	db	0
  1904  00FB1D  00                 	db	0
  1905  00FB1E  00                 	db	0
  1906  00FB1F  00                 	db	0
  1907  00FB20  00                 	db	0
  1908  00FB21  63                 	db	99
  1909  00FB22  6F                 	db	111
  1910  00FB23  6D                 	db	109
  1911  00FB24  6D                 	db	109
  1912  00FB25  61                 	db	97
  1913  00FB26  6E                 	db	110
  1914  00FB27  64                 	db	100
  1915  00FB28  73                 	db	115
  1916  00FB29  20                 	db	32
  1917  00FB2A  34                 	db	52
  1918  00FB2B  00                 	db	0
  1919  00FB2C  00                 	db	0
  1920  00FB2D  00                 	db	0
  1921  00FB2E  00                 	db	0
  1922  00FB2F  00                 	db	0
  1923  00FB30  00                 	db	0
  1924  00FB31  00                 	db	0
  1925  00FB32  00                 	db	0
  1926  00FB33  64                 	db	100
  1927  00FB34  69                 	db	105
  1928  00FB35  73                 	db	115
  1929  00FB36  70                 	db	112
  1930  00FB37  6C                 	db	108
  1931  00FB38  61                 	db	97
  1932  00FB39  79                 	db	121
  1933  00FB3A  73                 	db	115
  1934  00FB3B  20                 	db	32
  1935  00FB3C  34                 	db	52
  1936  00FB3D  00                 	db	0
  1937  00FB3E  00                 	db	0
  1938  00FB3F  00                 	db	0
  1939  00FB40  00                 	db	0
  1940  00FB41  00                 	db	0
  1941  00FB42  00                 	db	0
  1942  00FB43  00                 	db	0
  1943  00FB44  00                 	db	0
  1944  00FB45                     __end_of_T:
  1945                           	opt callstack 0
  1946  00FB45                     _spin:
  1947                           	opt callstack 0
  1948  00FB45  7C                 	db	124
  1949  00FB46  7C                 	db	124
  1950  00FB47  2F                 	db	47
  1951  00FB48  2F                 	db	47
  1952  00FB49  2D                 	db	45
  1953  00FB4A  2D                 	db	45
  1954  00FB4B  00                 	db	0
  1955  00FB4C  00                 	db	0
  1956  00FB4D  00                 	db	0
  1957  00FB4E  00                 	db	0
  1958  00FB4F  00                 	db	0
  1959  00FB50  00                 	db	0
  1960  00FB51  00                 	db	0
  1961  00FB52  00                 	db	0
  1962  00FB53  00                 	db	0
  1963  00FB54  00                 	db	0
  1964  00FB55  00                 	db	0
  1965  00FB56  00                 	db	0
  1966  00FB57  00                 	db	0
  1967  00FB58  00                 	db	0
  1968  00FB59  7C                 	db	124
  1969  00FB5A  7C                 	db	124
  1970  00FB5B  2F                 	db	47
  1971  00FB5C  2F                 	db	47
  1972  00FB5D  2D                 	db	45
  1973  00FB5E  2D                 	db	45
  1974  00FB5F  5C                 	db	92
  1975  00FB60  5C                 	db	92
  1976  00FB61  00                 	db	0
  1977  00FB62  00                 	db	0
  1978  00FB63  00                 	db	0
  1979  00FB64  00                 	db	0
  1980  00FB65  00                 	db	0
  1981  00FB66  00                 	db	0
  1982  00FB67  00                 	db	0
  1983  00FB68  00                 	db	0
  1984  00FB69  00                 	db	0
  1985  00FB6A  00                 	db	0
  1986  00FB6B  00                 	db	0
  1987  00FB6C  00                 	db	0
  1988  00FB6D  4F                 	db	79
  1989  00FB6E  4F                 	db	79
  1990  00FB6F  4F                 	db	79
  1991  00FB70  4F                 	db	79
  1992  00FB71  4F                 	db	79
  1993  00FB72  4F                 	db	79
  1994  00FB73  2D                 	db	45
  1995  00FB74  2D                 	db	45
  1996  00FB75  5F                 	db	95
  1997  00FB76  5F                 	db	95
  1998  00FB77  2D                 	db	45
  1999  00FB78  00                 	db	0
  2000  00FB79  00                 	db	0
  2001  00FB7A  00                 	db	0
  2002  00FB7B  00                 	db	0
  2003  00FB7C  00                 	db	0
  2004  00FB7D  00                 	db	0
  2005  00FB7E  00                 	db	0
  2006  00FB7F  00                 	db	0
  2007  00FB80  00                 	db	0
  2008  00FB81  76                 	db	118
  2009  00FB82  76                 	db	118
  2010  00FB83  3C                 	db	60
  2011  00FB84  3C                 	db	60
  2012  00FB85  5E                 	db	94
  2013  00FB86  5E                 	db	94
  2014  00FB87  3E                 	db	62
  2015  00FB88  3E                 	db	62
  2016  00FB89  00                 	db	0
  2017  00FB8A  00                 	db	0
  2018  00FB8B  00                 	db	0
  2019  00FB8C  00                 	db	0
  2020  00FB8D  00                 	db	0
  2021  00FB8E  00                 	db	0
  2022  00FB8F  00                 	db	0
  2023  00FB90  00                 	db	0
  2024  00FB91  00                 	db	0
  2025  00FB92  00                 	db	0
  2026  00FB93  00                 	db	0
  2027  00FB94  00                 	db	0
  2028  00FB95  2E                 	db	46
  2029  00FB96  2E                 	db	46
  2030  00FB97  2A                 	db	42
  2031  00FB98  2A                 	db	42
  2032  00FB99  78                 	db	120
  2033  00FB9A  23                 	db	35
  2034  00FB9B  78                 	db	120
  2035  00FB9C  23                 	db	35
  2036  00FB9D  58                 	db	88
  2037  00FB9E  58                 	db	88
  2038  00FB9F  7C                 	db	124
  2039  00FBA0  7C                 	db	124
  2040  00FBA1  2D                 	db	45
  2041  00FBA2  2D                 	db	45
  2042  00FBA3  00                 	db	0
  2043  00FBA4  00                 	db	0
  2044  00FBA5  00                 	db	0
  2045  00FBA6  00                 	db	0
  2046  00FBA7  00                 	db	0
  2047  00FBA8  00                 	db	0
  2048  00FBA9  2E                 	db	46
  2049  00FBAA  2E                 	db	46
  2050  00FBAB  6F                 	db	111
  2051  00FBAC  6F                 	db	111
  2052  00FBAD  4F                 	db	79
  2053  00FBAE  4F                 	db	79
  2054  00FBAF  6F                 	db	111
  2055  00FBB0  6F                 	db	111
  2056  00FBB1  00                 	db	0
  2057  00FBB2  00                 	db	0
  2058  00FBB3  00                 	db	0
  2059  00FBB4  00                 	db	0
  2060  00FBB5  00                 	db	0
  2061  00FBB6  00                 	db	0
  2062  00FBB7  00                 	db	0
  2063  00FBB8  00                 	db	0
  2064  00FBB9  00                 	db	0
  2065  00FBBA  00                 	db	0
  2066  00FBBB  00                 	db	0
  2067  00FBBC  00                 	db	0
  2068  00FBBD                     __end_of_spin:
  2069                           	opt callstack 0
  2070  00FBBD  0000               	dw	0
  2071  00FBBF  3F80               	dw	16256
  2072  00FBC1  0000               	dw	0
  2073  00FBC3  3FC0               	dw	16320
  2074  00FBC5                     __end_of_bp:
  2075                           	opt callstack 0
  2076  00FBC5  AA00               	dw	43520
  2077  00FBC7  3FB8               	dw	16312
  2078  00FBC9                     __end_of_ivln2_h:
  2079                           	opt callstack 0
  2080  00FBC9  23C6               	dw	9158
  2081  00FBCB  B8F6               	dw	47350
  2082  00FBCD                     __end_of_cp_l:
  2083                           	opt callstack 0
  2084  00FBCD  4000               	dw	16384
  2085  00FBCF  3F76               	dw	16246
  2086  00FBD1                     __end_of_cp_h:
  2087                           	opt callstack 0
  2088  0000                     _IVTADL	set	14493
  2089  0000                     _IVTADH	set	14494
  2090  0000                     _IVTADU	set	14495
  2091  0000                     _PIR6bits	set	14758
  2092  0000                     _PIR4bits	set	14756
  2093  0000                     _PIE8bits	set	14744
  2094  0000                     _PIR8bits	set	14760
  2095  0000                     _SCANPR	set	14839
  2096  0000                     _DMA2PR	set	14836
  2097  0000                     _DMA1PR	set	14835
  2098  0000                     _MAINPR	set	14834
  2099  0000                     _ISRPR	set	14833
  2100  0000                     _PIE2bits	set	14738
  2101  0000                     _PIR2bits	set	14754
  2102  0000                     _PIE9bits	set	14745
  2103  0000                     _PIR9bits	set	14761
  2104  0000                     _PIE6bits	set	14742
  2105  0000                     _PIE3bits	set	14739
  2106  0000                     _PMD7	set	14791
  2107  0000                     _PMD6	set	14790
  2108  0000                     _PMD5	set	14789
  2109  0000                     _PMD4	set	14788
  2110  0000                     _PMD3	set	14787
  2111  0000                     _PMD2	set	14786
  2112  0000                     _PMD1	set	14785
  2113  0000                     _PMD0	set	14784
  2114  0000                     _OSCTUNE	set	14814
  2115  0000                     _OSCFRQ	set	14815
  2116  0000                     _OSCEN	set	14813
  2117  0000                     _OSCCON3	set	14811
  2118  0000                     _OSCCON1	set	14809
  2119  0000                     _IPR8bits	set	14728
  2120  0000                     _IPR9bits	set	14729
  2121  0000                     _IPR5bits	set	14725
  2122  0000                     _IPR1bits	set	14721
  2123  0000                     _IPR3bits	set	14723
  2124  0000                     _IPR6bits	set	14726
  2125  0000                     _IPR2bits	set	14722
  2126  0000                     _PIE5bits	set	14741
  2127  0000                     _PIE1bits	set	14737
  2128  0000                     _PIR5bits	set	14757
  2129  0000                     _PIR1bits	set	14753
  2130  0000                     _PLLR	set	118496
  2131  0000                     _SPI1SDIPPS	set	15071
  2132  0000                     _U1RXPPS	set	15077
  2133  0000                     _RC6PPS	set	14870
  2134  0000                     _RC5PPS	set	14869
  2135  0000                     _INT1PPS	set	15041
  2136  0000                     _RD1PPS	set	14873
  2137  0000                     _INT0PPS	set	15040
  2138  0000                     _RC3PPS	set	14867
  2139  0000                     _RB6PPS	set	14862
  2140  0000                     _SPI1SCKPPS	set	15070
  2141  0000                     _U2RXPPS	set	15080
  2142  0000                     _SLRCONF	set	14995
  2143  0000                     _SLRCONE	set	14979
  2144  0000                     _SLRCOND	set	14963
  2145  0000                     _SLRCONC	set	14947
  2146  0000                     _SLRCONB	set	14931
  2147  0000                     _SLRCONA	set	14915
  2148  0000                     _ODCOND	set	14962
  2149  0000                     _ODCONC	set	14946
  2150  0000                     _ODCONB	set	14930
  2151  0000                     _ODCONA	set	14914
  2152  0000                     _ODCONF	set	14994
  2153  0000                     _ODCONE	set	14978
  2154  0000                     _WPUC	set	14945
  2155  0000                     _WPUA	set	14913
  2156  0000                     _WPUB	set	14929
  2157  0000                     _WPUE	set	14977
  2158  0000                     _WPUF	set	14993
  2159  0000                     _WPUD	set	14961
  2160  0000                     _ANSELA	set	14912
  2161  0000                     _ANSELF	set	14992
  2162  0000                     _ANSELE	set	14976
  2163  0000                     _ANSELB	set	14928
  2164  0000                     _ANSELC	set	14944
  2165  0000                     _ANSELD	set	14960
  2166  0000                     _DMA2SSA	set	15321
  2167  0000                     _DMA1SSA	set	15353
  2168  0000                     _DMA2DSZ	set	15310
  2169  0000                     _DMA2SSZ	set	15319
  2170  0000                     _DMA2DSA	set	15312
  2171  0000                     _DMA1DSZ	set	15342
  2172  0000                     _DMA1SSZ	set	15351
  2173  0000                     _DMA1DSA	set	15344
  2174  0000                     _DMA2CON0bits	set	15324
  2175  0000                     _DMA2CON1bits	set	15325
  2176  0000                     _DMA1CON0bits	set	15356
  2177  0000                     _DMA1CON1bits	set	15357
  2178  0000                     _DMA2CON0	set	15324
  2179  0000                     _DMA2AIRQ	set	15326
  2180  0000                     _DMA2SIRQ	set	15327
  2181  0000                     _DMA2CON1	set	15325
  2182  0000                     _DMA1CON0	set	15356
  2183  0000                     _DMA1AIRQ	set	15358
  2184  0000                     _DMA1SIRQ	set	15359
  2185  0000                     _DMA1CON1	set	15357
  2186  0000                     _CLKRCON	set	15589
  2187  0000                     _CLKRCLK	set	15590
  2188  0000                     _SPI1STATUSbits	set	15639
  2189  0000                     _SPI1INTFbits	set	15642
  2190  0000                     _SPI1CON0bits	set	15636
  2191  0000                     _SPI1RXB	set	15632
  2192  0000                     _SPI1TXB	set	15633
  2193  0000                     _SPI1TCNTL	set	15634
  2194  0000                     _SPI1CON0	set	15636
  2195  0000                     _SPI1CLK	set	15644
  2196  0000                     _SPI1BAUD	set	15641
  2197  0000                     _SPI1CON2	set	15638
  2198  0000                     _SPI1CON1	set	15637
  2199  0000                     _U2RXB	set	15824
  2200  0000                     _U2TXB	set	15826
  2201  0000                     _U2ERRIE	set	15842
  2202  0000                     _U2ERRIR	set	15841
  2203  0000                     _U2UIR	set	15840
  2204  0000                     _U2FIFO	set	15839
  2205  0000                     _U2BRGH	set	15838
  2206  0000                     _U2BRGL	set	15837
  2207  0000                     _U2CON2	set	15836
  2208  0000                     _U2CON1	set	15835
  2209  0000                     _U2CON0	set	15834
  2210  0000                     _U2P3L	set	15832
  2211  0000                     _U2P2L	set	15830
  2212  0000                     _U2P1L	set	15828
  2213  0000                     _U1RXB	set	15848
  2214  0000                     _U1ERRIE	set	15866
  2215  0000                     _U1ERRIR	set	15865
  2216  0000                     _U1UIR	set	15864
  2217  0000                     _U1FIFO	set	15863
  2218  0000                     _U1BRGH	set	15862
  2219  0000                     _U1BRGL	set	15861
  2220  0000                     _U1CON2	set	15860
  2221  0000                     _U1CON1	set	15859
  2222  0000                     _U1CON0	set	15858
  2223  0000                     _U1P3H	set	15857
  2224  0000                     _U1P3L	set	15856
  2225  0000                     _U1P2H	set	15855
  2226  0000                     _U1P2L	set	15854
  2227  0000                     _U1P1H	set	15853
  2228  0000                     _U1P1L	set	15852
  2229  0000                     _FVRCON	set	16065
  2230  0000                     _ADFLTRL	set	16102
  2231  0000                     _ADFLTRH	set	16103
  2232  0000                     _ADCON0bits	set	16120
  2233  0000                     _ADCON0	set	16120
  2234  0000                     _ADCLK	set	16127
  2235  0000                     _ADACT	set	16126
  2236  0000                     _ADREF	set	16125
  2237  0000                     _ADSTAT	set	16124
  2238  0000                     _ADCON3	set	16123
  2239  0000                     _ADCON2	set	16122
  2240  0000                     _ADCON1	set	16121
  2241  0000                     _ADPREH	set	16119
  2242  0000                     _ADPREL	set	16118
  2243  0000                     _ADCAP	set	16117
  2244  0000                     _ADACQH	set	16116
  2245  0000                     _ADACQL	set	16115
  2246  0000                     _ADPCH	set	16113
  2247  0000                     _ADRPT	set	16108
  2248  0000                     _ADACCU	set	16106
  2249  0000                     _ADSTPTH	set	16101
  2250  0000                     _ADSTPTL	set	16100
  2251  0000                     _ADUTHH	set	16097
  2252  0000                     _ADUTHL	set	16096
  2253  0000                     _ADLTHH	set	16095
  2254  0000                     _ADLTHL	set	16094
  2255  0000                     _CCPTMRS1bits	set	16223
  2256  0000                     _PORTFbits	set	16335
  2257  0000                     _LATFbits	set	16319
  2258  0000                     _LATCbits	set	16316
  2259  0000                     _LATDbits	set	16317
  2260  0000                     _PORTBbits	set	16331
  2261  0000                     _T3CONbits	set	16294
  2262  0000                     _T3CON	set	16294
  2263  0000                     _TMR3L	set	16292
  2264  0000                     _TMR3H	set	16293
  2265  0000                     _T3CLK	set	16297
  2266  0000                     _T3GATE	set	16296
  2267  0000                     _T3GCON	set	16295
  2268  0000                     _T2CON	set	16300
  2269  0000                     _T2TMR	set	16298
  2270  0000                     _T2PR	set	16299
  2271  0000                     _T2RST	set	16303
  2272  0000                     _T2HLT	set	16301
  2273  0000                     _T2CLKCON	set	16302
  2274  0000                     _PWM8DCL	set	16224
  2275  0000                     _PWM8DCH	set	16225
  2276  0000                     _PWM8CON	set	16226
  2277  0000                     _LATEbits	set	16318
  2278  0000                     _T5CONbits	set	16282
  2279  0000                     _T5CON	set	16282
  2280  0000                     _TMR5L	set	16280
  2281  0000                     _TMR5H	set	16281
  2282  0000                     _T5CLK	set	16285
  2283  0000                     _T5GATE	set	16284
  2284  0000                     _T5GCON	set	16283
  2285  0000                     _T6CON	set	16276
  2286  0000                     _T6TMR	set	16274
  2287  0000                     _T6PR	set	16275
  2288  0000                     _T6RST	set	16279
  2289  0000                     _T6HLT	set	16277
  2290  0000                     _T6CLKCON	set	16278
  2291  0000                     _TRISD	set	16325
  2292  0000                     _TRISC	set	16324
  2293  0000                     _TRISB	set	16323
  2294  0000                     _TRISA	set	16322
  2295  0000                     _TRISF	set	16327
  2296  0000                     _TRISE	set	16326
  2297  0000                     _LATC	set	16316
  2298  0000                     _LATB	set	16315
  2299  0000                     _LATF	set	16319
  2300  0000                     _LATA	set	16314
  2301  0000                     _LATD	set	16317
  2302  0000                     _LATE	set	16318
  2303  0000                     _IVTLOCKbits	set	16340
  2304  0000                     _IVTLOCK	set	16340
  2305  0000                     _INTCON0bits	set	16338
  2306  0000                     _GIE	set	130711
  2307  00FBD1                     STR_64:
  2308                           
  2309                           ; BSR set to: 57
  2310  00FBD1  20                 	db	32
  2311  00FBD2  25                 	db	37
  2312  00FBD3  63                 	db	99	;'c'
  2313  00FBD4  20                 	db	32
  2314  00FBD5  2C                 	db	44
  2315  00FBD6  25                 	db	37
  2316  00FBD7  6C                 	db	108	;'l'
  2317  00FBD8  75                 	db	117	;'u'
  2318  00FBD9  2C                 	db	44
  2319  00FBDA  25                 	db	37
  2320  00FBDB  34                 	db	52	;'4'
  2321  00FBDC  2E                 	db	46
  2322  00FBDD  34                 	db	52	;'4'
  2323  00FBDE  66                 	db	102	;'f'
  2324  00FBDF  2C                 	db	44
  2325  00FBE0  25                 	db	37
  2326  00FBE1  34                 	db	52	;'4'
  2327  00FBE2  2E                 	db	46
  2328  00FBE3  34                 	db	52	;'4'
  2329  00FBE4  66                 	db	102	;'f'
  2330  00FBE5  2C                 	db	44
  2331  00FBE6  25                 	db	37
  2332  00FBE7  34                 	db	52	;'4'
  2333  00FBE8  2E                 	db	46
  2334  00FBE9  34                 	db	52	;'4'
  2335  00FBEA  66                 	db	102	;'f'
  2336  00FBEB  2C                 	db	44
  2337  00FBEC  25                 	db	37
  2338  00FBED  34                 	db	52	;'4'
  2339  00FBEE  2E                 	db	46
  2340  00FBEF  34                 	db	52	;'4'
  2341  00FBF0  66                 	db	102	;'f'
  2342  00FBF1  2C                 	db	44
  2343  00FBF2  25                 	db	37
  2344  00FBF3  34                 	db	52	;'4'
  2345  00FBF4  2E                 	db	46
  2346  00FBF5  33                 	db	51	;'3'
  2347  00FBF6  66                 	db	102	;'f'
  2348  00FBF7  2C                 	db	44
  2349  00FBF8  25                 	db	37
  2350  00FBF9  34                 	db	52	;'4'
  2351  00FBFA  2E                 	db	46
  2352  00FBFB  33                 	db	51	;'3'
  2353  00FBFC  66                 	db	102	;'f'
  2354  00FBFD  2C                 	db	44
  2355  00FBFE  25                 	db	37
  2356  00FBFF  34                 	db	52	;'4'
  2357  00FC00  2E                 	db	46
  2358  00FC01  33                 	db	51	;'3'
  2359  00FC02  66                 	db	102	;'f'
  2360  00FC03  2C                 	db	44
  2361  00FC04  25                 	db	37
  2362  00FC05  34                 	db	52	;'4'
  2363  00FC06  2E                 	db	46
  2364  00FC07  33                 	db	51	;'3'
  2365  00FC08  66                 	db	102	;'f'
  2366  00FC09  2C                 	db	44
  2367  00FC0A  25                 	db	37
  2368  00FC0B  34                 	db	52	;'4'
  2369  00FC0C  2E                 	db	46
  2370  00FC0D  33                 	db	51	;'3'
  2371  00FC0E  66                 	db	102	;'f'
  2372  00FC0F  2C                 	db	44
  2373  00FC10  25                 	db	37
  2374  00FC11  34                 	db	52	;'4'
  2375  00FC12  2E                 	db	46
  2376  00FC13  33                 	db	51	;'3'
  2377  00FC14  66                 	db	102	;'f'
  2378  00FC15  2C                 	db	44
  2379  00FC16  25                 	db	37
  2380  00FC17  64                 	db	100	;'d'
  2381  00FC18  2C                 	db	44
  2382  00FC19  25                 	db	37
  2383  00FC1A  64                 	db	100	;'d'
  2384  00FC1B  2C                 	db	44
  2385  00FC1C  25                 	db	37
  2386  00FC1D  32                 	db	50	;'2'
  2387  00FC1E  2E                 	db	46
  2388  00FC1F  36                 	db	54	;'6'
  2389  00FC20  66                 	db	102	;'f'
  2390  00FC21  2C                 	db	44
  2391  00FC22  25                 	db	37
  2392  00FC23  34                 	db	52	;'4'
  2393  00FC24  2E                 	db	46
  2394  00FC25  33                 	db	51	;'3'
  2395  00FC26  66                 	db	102	;'f'
  2396  00FC27  2C                 	db	44
  2397  00FC28  25                 	db	37
  2398  00FC29  64                 	db	100	;'d'
  2399  00FC2A  2C                 	db	44
  2400  00FC2B  25                 	db	37
  2401  00FC2C  64                 	db	100	;'d'
  2402  00FC2D  2C                 	db	44
  2403  00FC2E  25                 	db	37
  2404  00FC2F  6C                 	db	108	;'l'
  2405  00FC30  75                 	db	117	;'u'
  2406  00FC31  2C                 	db	44
  2407  00FC32  25                 	db	37
  2408  00FC33  6C                 	db	108	;'l'
  2409  00FC34  75                 	db	117	;'u'
  2410  00FC35  2C                 	db	44
  2411  00FC36  25                 	db	37
  2412  00FC37  34                 	db	52	;'4'
  2413  00FC38  2E                 	db	46
  2414  00FC39  33                 	db	51	;'3'
  2415  00FC3A  66                 	db	102	;'f'
  2416  00FC3B  2C                 	db	44
  2417  00FC3C  25                 	db	37
  2418  00FC3D  34                 	db	52	;'4'
  2419  00FC3E  2E                 	db	46
  2420  00FC3F  33                 	db	51	;'3'
  2421  00FC40  66                 	db	102	;'f'
  2422  00FC41  2C                 	db	44
  2423  00FC42  25                 	db	37
  2424  00FC43  34                 	db	52	;'4'
  2425  00FC44  2E                 	db	46
  2426  00FC45  33                 	db	51	;'3'
  2427  00FC46  66                 	db	102	;'f'
  2428  00FC47  0D                 	db	13
  2429  00FC48  0A                 	db	10
  2430  00FC49  00                 	db	0
  2431  00FC4A                     STR_36:
  2432                           
  2433                           ; BSR set to: 57
  2434  00FC4A  53                 	db	83	;'S'
  2435  00FC4B  25                 	db	37
  2436  00FC4C  63                 	db	99	;'c'
  2437  00FC4D  43                 	db	67	;'C'
  2438  00FC4E  20                 	db	32
  2439  00FC4F  25                 	db	37
  2440  00FC50  64                 	db	100	;'d'
  2441  00FC51  20                 	db	32
  2442  00FC52  52                 	db	82	;'R'
  2443  00FC53  55                 	db	85	;'U'
  2444  00FC54  4E                 	db	78	;'N'
  2445  00FC55  20                 	db	32
  2446  00FC56  25                 	db	37
  2447  00FC57  64                 	db	100	;'d'
  2448  00FC58  20                 	db	32
  2449  00FC59  56                 	db	86	;'V'
  2450  00FC5A  25                 	db	37
  2451  00FC5B  32                 	db	50	;'2'
  2452  00FC5C  2E                 	db	46
  2453  00FC5D  32                 	db	50	;'2'
  2454  00FC5E  66                 	db	102	;'f'
  2455  00FC5F  20                 	db	32
  2456  00FC60  20                 	db	32
  2457  00FC61  20                 	db	32
  2458  00FC62  20                 	db	32
  2459  00FC63  20                 	db	32
  2460  00FC64  20                 	db	32
  2461  00FC65  20                 	db	32
  2462  00FC66  00                 	db	0
  2463  00FC67                     STR_17:
  2464                           
  2465                           ; BSR set to: 57
  2466  00FC67  52                 	db	82	;'R'
  2467  00FC68  31                 	db	49	;'1'
  2468  00FC69  20                 	db	32
  2469  00FC6A  25                 	db	37
  2470  00FC6B  32                 	db	50	;'2'
  2471  00FC6C  2E                 	db	46
  2472  00FC6D  33                 	db	51	;'3'
  2473  00FC6E  66                 	db	102	;'f'
  2474  00FC6F  20                 	db	32
  2475  00FC70  25                 	db	37
  2476  00FC71  33                 	db	51	;'3'
  2477  00FC72  2E                 	db	46
  2478  00FC73  34                 	db	52	;'4'
  2479  00FC74  66                 	db	102	;'f'
  2480  00FC75  20                 	db	32
  2481  00FC76  20                 	db	32
  2482  00FC77  20                 	db	32
  2483  00FC78  20                 	db	32
  2484  00FC79  20                 	db	32
  2485  00FC7A  20                 	db	32
  2486  00FC7B  20                 	db	32
  2487  00FC7C  20                 	db	32
  2488  00FC7D  20                 	db	32
  2489  00FC7E  20                 	db	32
  2490  00FC7F  20                 	db	32
  2491  00FC80  00                 	db	0
  2492  00FC81                     STR_18:
  2493                           
  2494                           ; BSR set to: 57
  2495  00FC81  52                 	db	82	;'R'
  2496  00FC82  32                 	db	50	;'2'
  2497  00FC83  20                 	db	32
  2498  00FC84  25                 	db	37
  2499  00FC85  32                 	db	50	;'2'
  2500  00FC86  2E                 	db	46
  2501  00FC87  33                 	db	51	;'3'
  2502  00FC88  66                 	db	102	;'f'
  2503  00FC89  20                 	db	32
  2504  00FC8A  25                 	db	37
  2505  00FC8B  33                 	db	51	;'3'
  2506  00FC8C  2E                 	db	46
  2507  00FC8D  34                 	db	52	;'4'
  2508  00FC8E  66                 	db	102	;'f'
  2509  00FC8F  20                 	db	32
  2510  00FC90  20                 	db	32
  2511  00FC91  20                 	db	32
  2512  00FC92  20                 	db	32
  2513  00FC93  20                 	db	32
  2514  00FC94  20                 	db	32
  2515  00FC95  20                 	db	32
  2516  00FC96  20                 	db	32
  2517  00FC97  20                 	db	32
  2518  00FC98  20                 	db	32
  2519  00FC99  20                 	db	32
  2520  00FC9A  00                 	db	0
  2521  00FC9B                     STR_9:
  2522                           
  2523                           ; BSR set to: 57
  2524  00FC9B  53                 	db	83	;'S'
  2525  00FC9C  20                 	db	32
  2526  00FC9D  53                 	db	83	;'S'
  2527  00FC9E  25                 	db	37
  2528  00FC9F  63                 	db	99	;'c'
  2529  00FCA0  43                 	db	67	;'C'
  2530  00FCA1  20                 	db	32
  2531  00FCA2  25                 	db	37
  2532  00FCA3  64                 	db	100	;'d'
  2533  00FCA4  20                 	db	32
  2534  00FCA5  25                 	db	37
  2535  00FCA6  32                 	db	50	;'2'
  2536  00FCA7  2E                 	db	46
  2537  00FCA8  34                 	db	52	;'4'
  2538  00FCA9  66                 	db	102	;'f'
  2539  00FCAA  20                 	db	32
  2540  00FCAB  20                 	db	32
  2541  00FCAC  20                 	db	32
  2542  00FCAD  20                 	db	32
  2543  00FCAE  20                 	db	32
  2544  00FCAF  20                 	db	32
  2545  00FCB0  20                 	db	32
  2546  00FCB1  20                 	db	32
  2547  00FCB2  20                 	db	32
  2548  00FCB3  20                 	db	32
  2549  00FCB4  00                 	db	0
  2550  00FCB5                     
  2551                           ; BSR set to: 57
  2552  00FCB5  20                 	db	32
  2553  00FCB6  4D                 	db	77	;'M'
  2554  00FCB7  65                 	db	101	;'e'
  2555  00FCB8  73                 	db	115	;'s'
  2556  00FCB9  67                 	db	103	;'g'
  2557  00FCBA  20                 	db	32
  2558  00FCBB  25                 	db	37
  2559  00FCBC  64                 	db	100	;'d'
  2560  00FCBD  20                 	db	32
  2561  00FCBE  53                 	db	83	;'S'
  2562  00FCBF  74                 	db	116	;'t'
  2563  00FCC0  61                 	db	97	;'a'
  2564  00FCC1  63                 	db	99	;'c'
  2565  00FCC2  6B                 	db	107	;'k'
  2566  00FCC3  20                 	db	32
  2567  00FCC4  25                 	db	37
  2568  00FCC5  64                 	db	100	;'d'
  2569  00FCC6  20                 	db	32
  2570  00FCC7  20                 	db	32
  2571  00FCC8  20                 	db	32
  2572  00FCC9  20                 	db	32
  2573  00FCCA  20                 	db	32
  2574  00FCCB  20                 	db	32
  2575  00FCCC  00                 	db	0
  2576  00FCCD                     STR_37:
  2577                           
  2578                           ; BSR set to: 57
  2579  00FCCD  45                 	db	69	;'E'
  2580  00FCCE  53                 	db	83	;'S'
  2581  00FCCF  52                 	db	82	;'R'
  2582  00FCD0  20                 	db	32
  2583  00FCD1  20                 	db	32
  2584  00FCD2  25                 	db	37
  2585  00FCD3  32                 	db	50	;'2'
  2586  00FCD4  2E                 	db	46
  2587  00FCD5  36                 	db	54	;'6'
  2588  00FCD6  66                 	db	102	;'f'
  2589  00FCD7  20                 	db	32
  2590  00FCD8  20                 	db	32
  2591  00FCD9  20                 	db	32
  2592  00FCDA  20                 	db	32
  2593  00FCDB  20                 	db	32
  2594  00FCDC  20                 	db	32
  2595  00FCDD  20                 	db	32
  2596  00FCDE  20                 	db	32
  2597  00FCDF  20                 	db	32
  2598  00FCE0  20                 	db	32
  2599  00FCE1  20                 	db	32
  2600  00FCE2  20                 	db	32
  2601  00FCE3  00                 	db	0
  2602  00FCE4                     STR_34:
  2603                           
  2604                           ; BSR set to: 57
  2605  00FCE4  42                 	db	66	;'B'
  2606  00FCE5  41                 	db	65	;'A'
  2607  00FCE6  54                 	db	84	;'T'
  2608  00FCE7  54                 	db	84	;'T'
  2609  00FCE8  20                 	db	32
  2610  00FCE9  50                 	db	80	;'P'
  2611  00FCEA  57                 	db	87	;'W'
  2612  00FCEB  52                 	db	82	;'R'
  2613  00FCEC  20                 	db	32
  2614  00FCED  25                 	db	37
  2615  00FCEE  33                 	db	51	;'3'
  2616  00FCEF  2E                 	db	46
  2617  00FCF0  32                 	db	50	;'2'
  2618  00FCF1  66                 	db	102	;'f'
  2619  00FCF2  20                 	db	32
  2620  00FCF3  20                 	db	32
  2621  00FCF4  20                 	db	32
  2622  00FCF5  20                 	db	32
  2623  00FCF6  20                 	db	32
  2624  00FCF7  20                 	db	32
  2625  00FCF8  20                 	db	32
  2626  00FCF9  20                 	db	32
  2627  00FCFA  00                 	db	0
  2628  00FCFB                     STR_38:
  2629                           
  2630                           ; BSR set to: 57
  2631  00FCFB  52                 	db	82	;'R'
  2632  00FCFC  31                 	db	49	;'1'
  2633  00FCFD  20                 	db	32
  2634  00FCFE  25                 	db	37
  2635  00FCFF  32                 	db	50	;'2'
  2636  00FD00  2E                 	db	46
  2637  00FD01  33                 	db	51	;'3'
  2638  00FD02  66                 	db	102	;'f'
  2639  00FD03  20                 	db	32
  2640  00FD04  25                 	db	37
  2641  00FD05  33                 	db	51	;'3'
  2642  00FD06  2E                 	db	46
  2643  00FD07  34                 	db	52	;'4'
  2644  00FD08  66                 	db	102	;'f'
  2645  00FD09  20                 	db	32
  2646  00FD0A  20                 	db	32
  2647  00FD0B  20                 	db	32
  2648  00FD0C  20                 	db	32
  2649  00FD0D  20                 	db	32
  2650  00FD0E  20                 	db	32
  2651  00FD0F  20                 	db	32
  2652  00FD10  20                 	db	32
  2653  00FD11  00                 	db	0
  2654  00FD12                     STR_39:
  2655                           
  2656                           ; BSR set to: 57
  2657  00FD12  52                 	db	82	;'R'
  2658  00FD13  32                 	db	50	;'2'
  2659  00FD14  20                 	db	32
  2660  00FD15  25                 	db	37
  2661  00FD16  32                 	db	50	;'2'
  2662  00FD17  2E                 	db	46
  2663  00FD18  33                 	db	51	;'3'
  2664  00FD19  66                 	db	102	;'f'
  2665  00FD1A  20                 	db	32
  2666  00FD1B  25                 	db	37
  2667  00FD1C  33                 	db	51	;'3'
  2668  00FD1D  2E                 	db	46
  2669  00FD1E  34                 	db	52	;'4'
  2670  00FD1F  66                 	db	102	;'f'
  2671  00FD20  20                 	db	32
  2672  00FD21  20                 	db	32
  2673  00FD22  20                 	db	32
  2674  00FD23  20                 	db	32
  2675  00FD24  20                 	db	32
  2676  00FD25  20                 	db	32
  2677  00FD26  20                 	db	32
  2678  00FD27  20                 	db	32
  2679  00FD28  00                 	db	0
  2680  00FD29                     STR_35:
  2681                           
  2682                           ; BSR set to: 57
  2683  00FD29  42                 	db	66	;'B'
  2684  00FD2A  41                 	db	65	;'A'
  2685  00FD2B  48                 	db	72	;'H'
  2686  00FD2C  20                 	db	32
  2687  00FD2D  25                 	db	37
  2688  00FD2E  33                 	db	51	;'3'
  2689  00FD2F  2E                 	db	46
  2690  00FD30  32                 	db	50	;'2'
  2691  00FD31  66                 	db	102	;'f'
  2692  00FD32  20                 	db	32
  2693  00FD33  50                 	db	80	;'P'
  2694  00FD34  25                 	db	37
  2695  00FD35  33                 	db	51	;'3'
  2696  00FD36  2E                 	db	46
  2697  00FD37  32                 	db	50	;'2'
  2698  00FD38  66                 	db	102	;'f'
  2699  00FD39  20                 	db	32
  2700  00FD3A  20                 	db	32
  2701  00FD3B  20                 	db	32
  2702  00FD3C  20                 	db	32
  2703  00FD3D  20                 	db	32
  2704  00FD3E  20                 	db	32
  2705  00FD3F  00                 	db	0
  2706  00FD40                     STR_16:
  2707                           
  2708                           ; BSR set to: 57
  2709  00FD40  45                 	db	69	;'E'
  2710  00FD41  53                 	db	83	;'S'
  2711  00FD42  52                 	db	82	;'R'
  2712  00FD43  20                 	db	32
  2713  00FD44  20                 	db	32
  2714  00FD45  25                 	db	37
  2715  00FD46  32                 	db	50	;'2'
  2716  00FD47  2E                 	db	46
  2717  00FD48  36                 	db	54	;'6'
  2718  00FD49  66                 	db	102	;'f'
  2719  00FD4A  20                 	db	32
  2720  00FD4B  20                 	db	32
  2721  00FD4C  20                 	db	32
  2722  00FD4D  20                 	db	32
  2723  00FD4E  20                 	db	32
  2724  00FD4F  20                 	db	32
  2725  00FD50  20                 	db	32
  2726  00FD51  20                 	db	32
  2727  00FD52  20                 	db	32
  2728  00FD53  20                 	db	32
  2729  00FD54  20                 	db	32
  2730  00FD55  00                 	db	0
  2731  00FD56                     STR_10:
  2732                           
  2733                           ; BSR set to: 57
  2734  00FD56  53                 	db	83	;'S'
  2735  00FD57  74                 	db	116	;'t'
  2736  00FD58  61                 	db	97	;'a'
  2737  00FD59  74                 	db	116	;'t'
  2738  00FD5A  69                 	db	105	;'i'
  2739  00FD5B  63                 	db	99	;'c'
  2740  00FD5C  20                 	db	32
  2741  00FD5D  53                 	db	83	;'S'
  2742  00FD5E  4F                 	db	79	;'O'
  2743  00FD5F  43                 	db	67	;'C'
  2744  00FD60  20                 	db	32
  2745  00FD61  25                 	db	37
  2746  00FD62  64                 	db	100	;'d'
  2747  00FD63  20                 	db	32
  2748  00FD64  20                 	db	32
  2749  00FD65  20                 	db	32
  2750  00FD66  20                 	db	32
  2751  00FD67  20                 	db	32
  2752  00FD68  20                 	db	32
  2753  00FD69  20                 	db	32
  2754  00FD6A  20                 	db	32
  2755  00FD6B  00                 	db	0
  2756  00FD6C                     STR_31:
  2757                           
  2758                           ; BSR set to: 57
  2759  00FD6C  42                 	db	66	;'B'
  2760  00FD6D  41                 	db	65	;'A'
  2761  00FD6E  54                 	db	84	;'T'
  2762  00FD6F  20                 	db	32
  2763  00FD70  49                 	db	73	;'I'
  2764  00FD71  57                 	db	87	;'W'
  2765  00FD72  48                 	db	72	;'H'
  2766  00FD73  20                 	db	32
  2767  00FD74  25                 	db	37
  2768  00FD75  34                 	db	52	;'4'
  2769  00FD76  2E                 	db	46
  2770  00FD77  31                 	db	49	;'1'
  2771  00FD78  66                 	db	102	;'f'
  2772  00FD79  20                 	db	32
  2773  00FD7A  20                 	db	32
  2774  00FD7B  20                 	db	32
  2775  00FD7C  20                 	db	32
  2776  00FD7D  20                 	db	32
  2777  00FD7E  20                 	db	32
  2778  00FD7F  20                 	db	32
  2779  00FD80  20                 	db	32
  2780  00FD81  00                 	db	0
  2781  00FD82                     STR_32:
  2782                           
  2783                           ; BSR set to: 57
  2784  00FD82  42                 	db	66	;'B'
  2785  00FD83  41                 	db	65	;'A'
  2786  00FD84  54                 	db	84	;'T'
  2787  00FD85  20                 	db	32
  2788  00FD86  4F                 	db	79	;'O'
  2789  00FD87  57                 	db	87	;'W'
  2790  00FD88  48                 	db	72	;'H'
  2791  00FD89  20                 	db	32
  2792  00FD8A  25                 	db	37
  2793  00FD8B  34                 	db	52	;'4'
  2794  00FD8C  2E                 	db	46
  2795  00FD8D  31                 	db	49	;'1'
  2796  00FD8E  66                 	db	102	;'f'
  2797  00FD8F  20                 	db	32
  2798  00FD90  20                 	db	32
  2799  00FD91  20                 	db	32
  2800  00FD92  20                 	db	32
  2801  00FD93  20                 	db	32
  2802  00FD94  20                 	db	32
  2803  00FD95  20                 	db	32
  2804  00FD96  20                 	db	32
  2805  00FD97  00                 	db	0
  2806  00FD98                     STR_33:
  2807                           
  2808                           ; BSR set to: 57
  2809  00FD98  42                 	db	66	;'B'
  2810  00FD99  41                 	db	65	;'A'
  2811  00FD9A  54                 	db	84	;'T'
  2812  00FD9B  20                 	db	32
  2813  00FD9C  54                 	db	84	;'T'
  2814  00FD9D  57                 	db	87	;'W'
  2815  00FD9E  48                 	db	72	;'H'
  2816  00FD9F  20                 	db	32
  2817  00FDA0  25                 	db	37
  2818  00FDA1  34                 	db	52	;'4'
  2819  00FDA2  2E                 	db	46
  2820  00FDA3  31                 	db	49	;'1'
  2821  00FDA4  66                 	db	102	;'f'
  2822  00FDA5  20                 	db	32
  2823  00FDA6  20                 	db	32
  2824  00FDA7  20                 	db	32
  2825  00FDA8  20                 	db	32
  2826  00FDA9  20                 	db	32
  2827  00FDAA  20                 	db	32
  2828  00FDAB  20                 	db	32
  2829  00FDAC  20                 	db	32
  2830  00FDAD  00                 	db	0
  2831  00FDAE                     STR_27:
  2832                           
  2833                           ; BSR set to: 57
  2834  00FDAE  49                 	db	73	;'I'
  2835  00FDAF  4E                 	db	78	;'N'
  2836  00FDB0  56                 	db	86	;'V'
  2837  00FDB1  20                 	db	32
  2838  00FDB2  20                 	db	32
  2839  00FDB3  57                 	db	87	;'W'
  2840  00FDB4  48                 	db	72	;'H'
  2841  00FDB5  20                 	db	32
  2842  00FDB6  25                 	db	37
  2843  00FDB7  33                 	db	51	;'3'
  2844  00FDB8  2E                 	db	46
  2845  00FDB9  32                 	db	50	;'2'
  2846  00FDBA  66                 	db	102	;'f'
  2847  00FDBB  20                 	db	32
  2848  00FDBC  20                 	db	32
  2849  00FDBD  20                 	db	32
  2850  00FDBE  20                 	db	32
  2851  00FDBF  20                 	db	32
  2852  00FDC0  20                 	db	32
  2853  00FDC1  20                 	db	32
  2854  00FDC2  20                 	db	32
  2855  00FDC3  00                 	db	0
  2856  00FDC4                     STR_26:
  2857                           
  2858                           ; BSR set to: 57
  2859  00FDC4  4C                 	db	76	;'L'
  2860  00FDC5  4F                 	db	79	;'O'
  2861  00FDC6  41                 	db	65	;'A'
  2862  00FDC7  44                 	db	68	;'D'
  2863  00FDC8  20                 	db	32
  2864  00FDC9  57                 	db	87	;'W'
  2865  00FDCA  48                 	db	72	;'H'
  2866  00FDCB  20                 	db	32
  2867  00FDCC  25                 	db	37
  2868  00FDCD  33                 	db	51	;'3'
  2869  00FDCE  2E                 	db	46
  2870  00FDCF  32                 	db	50	;'2'
  2871  00FDD0  66                 	db	102	;'f'
  2872  00FDD1  20                 	db	32
  2873  00FDD2  20                 	db	32
  2874  00FDD3  20                 	db	32
  2875  00FDD4  20                 	db	32
  2876  00FDD5  20                 	db	32
  2877  00FDD6  20                 	db	32
  2878  00FDD7  20                 	db	32
  2879  00FDD8  20                 	db	32
  2880  00FDD9  00                 	db	0
  2881  00FDDA                     STR_25:
  2882                           
  2883                           ; BSR set to: 57
  2884  00FDDA  50                 	db	80	;'P'
  2885  00FDDB  56                 	db	86	;'V'
  2886  00FDDC  20                 	db	32
  2887  00FDDD  25                 	db	37
  2888  00FDDE  63                 	db	99	;'c'
  2889  00FDDF  20                 	db	32
  2890  00FDE0  57                 	db	87	;'W'
  2891  00FDE1  48                 	db	72	;'H'
  2892  00FDE2  20                 	db	32
  2893  00FDE3  25                 	db	37
  2894  00FDE4  33                 	db	51	;'3'
  2895  00FDE5  2E                 	db	46
  2896  00FDE6  32                 	db	50	;'2'
  2897  00FDE7  66                 	db	102	;'f'
  2898  00FDE8  20                 	db	32
  2899  00FDE9  20                 	db	32
  2900  00FDEA  20                 	db	32
  2901  00FDEB  20                 	db	32
  2902  00FDEC  20                 	db	32
  2903  00FDED  20                 	db	32
  2904  00FDEE  20                 	db	32
  2905  00FDEF  00                 	db	0
  2906  00FDF0                     STR_24:
  2907                           
  2908                           ; BSR set to: 57
  2909  00FDF0  49                 	db	73	;'I'
  2910  00FDF1  4E                 	db	78	;'N'
  2911  00FDF2  56                 	db	86	;'V'
  2912  00FDF3  20                 	db	32
  2913  00FDF4  20                 	db	32
  2914  00FDF5  50                 	db	80	;'P'
  2915  00FDF6  57                 	db	87	;'W'
  2916  00FDF7  52                 	db	82	;'R'
  2917  00FDF8  20                 	db	32
  2918  00FDF9  25                 	db	37
  2919  00FDFA  33                 	db	51	;'3'
  2920  00FDFB  2E                 	db	46
  2921  00FDFC  32                 	db	50	;'2'
  2922  00FDFD  66                 	db	102	;'f'
  2923  00FDFE  20                 	db	32
  2924  00FDFF  20                 	db	32
  2925  00FE00  20                 	db	32
  2926  00FE01  20                 	db	32
  2927  00FE02  20                 	db	32
  2928  00FE03  20                 	db	32
  2929  00FE04  20                 	db	32
  2930  00FE05  00                 	db	0
  2931  00FE06                     STR_23:
  2932                           
  2933                           ; BSR set to: 57
  2934  00FE06  4C                 	db	76	;'L'
  2935  00FE07  4F                 	db	79	;'O'
  2936  00FE08  41                 	db	65	;'A'
  2937  00FE09  44                 	db	68	;'D'
  2938  00FE0A  20                 	db	32
  2939  00FE0B  50                 	db	80	;'P'
  2940  00FE0C  57                 	db	87	;'W'
  2941  00FE0D  52                 	db	82	;'R'
  2942  00FE0E  20                 	db	32
  2943  00FE0F  25                 	db	37
  2944  00FE10  33                 	db	51	;'3'
  2945  00FE11  2E                 	db	46
  2946  00FE12  32                 	db	50	;'2'
  2947  00FE13  66                 	db	102	;'f'
  2948  00FE14  20                 	db	32
  2949  00FE15  20                 	db	32
  2950  00FE16  20                 	db	32
  2951  00FE17  20                 	db	32
  2952  00FE18  20                 	db	32
  2953  00FE19  20                 	db	32
  2954  00FE1A  20                 	db	32
  2955  00FE1B  00                 	db	0
  2956  00FE1C                     STR_22:
  2957                           
  2958                           ; BSR set to: 57
  2959  00FE1C  50                 	db	80	;'P'
  2960  00FE1D  56                 	db	86	;'V'
  2961  00FE1E  20                 	db	32
  2962  00FE1F  25                 	db	37
  2963  00FE20  63                 	db	99	;'c'
  2964  00FE21  20                 	db	32
  2965  00FE22  50                 	db	80	;'P'
  2966  00FE23  57                 	db	87	;'W'
  2967  00FE24  52                 	db	82	;'R'
  2968  00FE25  20                 	db	32
  2969  00FE26  25                 	db	37
  2970  00FE27  33                 	db	51	;'3'
  2971  00FE28  2E                 	db	46
  2972  00FE29  32                 	db	50	;'2'
  2973  00FE2A  66                 	db	102	;'f'
  2974  00FE2B  20                 	db	32
  2975  00FE2C  20                 	db	32
  2976  00FE2D  20                 	db	32
  2977  00FE2E  20                 	db	32
  2978  00FE2F  20                 	db	32
  2979  00FE30  20                 	db	32
  2980  00FE31  00                 	db	0
  2981  00FE32                     STR_11:
  2982                           
  2983                           ; BSR set to: 57
  2984  00FE32  42                 	db	66	;'B'
  2985  00FE33  61                 	db	97	;'a'
  2986  00FE34  74                 	db	116	;'t'
  2987  00FE35  74                 	db	116	;'t'
  2988  00FE36  65                 	db	101	;'e'
  2989  00FE37  72                 	db	114	;'r'
  2990  00FE38  79                 	db	121	;'y'
  2991  00FE39  20                 	db	32
  2992  00FE3A  41                 	db	65	;'A'
  2993  00FE3B  68                 	db	104	;'h'
  2994  00FE3C  20                 	db	32
  2995  00FE3D  25                 	db	37
  2996  00FE3E  33                 	db	51	;'3'
  2997  00FE3F  2E                 	db	46
  2998  00FE40  32                 	db	50	;'2'
  2999  00FE41  66                 	db	102	;'f'
  3000  00FE42  20                 	db	32
  3001  00FE43  20                 	db	32
  3002  00FE44  20                 	db	32
  3003  00FE45  20                 	db	32
  3004  00FE46  20                 	db	32
  3005  00FE47  00                 	db	0
  3006  00FE48                     STR_29:
  3007                           
  3008                           ; BSR set to: 57
  3009  00FE48  42                 	db	66	;'B'
  3010  00FE49  56                 	db	86	;'V'
  3011  00FE4A  20                 	db	32
  3012  00FE4B  25                 	db	37
  3013  00FE4C  32                 	db	50	;'2'
  3014  00FE4D  2E                 	db	46
  3015  00FE4E  32                 	db	50	;'2'
  3016  00FE4F  66                 	db	102	;'f'
  3017  00FE50  20                 	db	32
  3018  00FE51  42                 	db	66	;'B'
  3019  00FE52  41                 	db	65	;'A'
  3020  00FE53  20                 	db	32
  3021  00FE54  25                 	db	37
  3022  00FE55  32                 	db	50	;'2'
  3023  00FE56  2E                 	db	46
  3024  00FE57  32                 	db	50	;'2'
  3025  00FE58  66                 	db	102	;'f'
  3026  00FE59  20                 	db	32
  3027  00FE5A  20                 	db	32
  3028  00FE5B  20                 	db	32
  3029  00FE5C  20                 	db	32
  3030  00FE5D  00                 	db	0
  3031  00FE5E                     STR_30:
  3032                           
  3033                           ; BSR set to: 57
  3034  00FE5E  43                 	db	67	;'C'
  3035  00FE5F  56                 	db	86	;'V'
  3036  00FE60  20                 	db	32
  3037  00FE61  25                 	db	37
  3038  00FE62  32                 	db	50	;'2'
  3039  00FE63  2E                 	db	46
  3040  00FE64  32                 	db	50	;'2'
  3041  00FE65  66                 	db	102	;'f'
  3042  00FE66  20                 	db	32
  3043  00FE67  4C                 	db	76	;'L'
  3044  00FE68  41                 	db	65	;'A'
  3045  00FE69  20                 	db	32
  3046  00FE6A  25                 	db	37
  3047  00FE6B  32                 	db	50	;'2'
  3048  00FE6C  2E                 	db	46
  3049  00FE6D  32                 	db	50	;'2'
  3050  00FE6E  66                 	db	102	;'f'
  3051  00FE6F  20                 	db	32
  3052  00FE70  20                 	db	32
  3053  00FE71  20                 	db	32
  3054  00FE72  20                 	db	32
  3055  00FE73  00                 	db	0
  3056  00FE74                     STR_28:
  3057                           
  3058                           ; BSR set to: 57
  3059  00FE74  50                 	db	80	;'P'
  3060  00FE75  56                 	db	86	;'V'
  3061  00FE76  20                 	db	32
  3062  00FE77  25                 	db	37
  3063  00FE78  32                 	db	50	;'2'
  3064  00FE79  2E                 	db	46
  3065  00FE7A  32                 	db	50	;'2'
  3066  00FE7B  66                 	db	102	;'f'
  3067  00FE7C  20                 	db	32
  3068  00FE7D  50                 	db	80	;'P'
  3069  00FE7E  41                 	db	65	;'A'
  3070  00FE7F  20                 	db	32
  3071  00FE80  25                 	db	37
  3072  00FE81  32                 	db	50	;'2'
  3073  00FE82  2E                 	db	46
  3074  00FE83  32                 	db	50	;'2'
  3075  00FE84  66                 	db	102	;'f'
  3076  00FE85  20                 	db	32
  3077  00FE86  20                 	db	32
  3078  00FE87  20                 	db	32
  3079  00FE88  20                 	db	32
  3080  00FE89  00                 	db	0
  3081  00FE8A                     STR_40:
  3082                           
  3083                           ; BSR set to: 57
  3084  00FE8A  25                 	db	37
  3085  00FE8B  64                 	db	100	;'d'
  3086  00FE8C  20                 	db	32
  3087  00FE8D  25                 	db	37
  3088  00FE8E  32                 	db	50	;'2'
  3089  00FE8F  2E                 	db	46
  3090  00FE90  34                 	db	52	;'4'
  3091  00FE91  66                 	db	102	;'f'
  3092  00FE92  2C                 	db	44
  3093  00FE93  20                 	db	32
  3094  00FE94  25                 	db	37
  3095  00FE95  64                 	db	100	;'d'
  3096  00FE96  20                 	db	32
  3097  00FE97  20                 	db	32
  3098  00FE98  54                 	db	84	;'T'
  3099  00FE99  52                 	db	82	;'R'
  3100  00FE9A  49                 	db	73	;'I'
  3101  00FE9B  4D                 	db	77	;'M'
  3102  00FE9C  20                 	db	32
  3103  00FE9D  20                 	db	32
  3104  00FE9E  20                 	db	32
  3105  00FE9F  00                 	db	0
  3106  00FEA0                     STR_5:
  3107                           
  3108                           ; BSR set to: 57
  3109  00FEA0  20                 	db	32
  3110  00FEA1  20                 	db	32
  3111  00FEA2  20                 	db	32
  3112  00FEA3  20                 	db	32
  3113  00FEA4  20                 	db	32
  3114  00FEA5  20                 	db	32
  3115  00FEA6  20                 	db	32
  3116  00FEA7  20                 	db	32
  3117  00FEA8  20                 	db	32
  3118  00FEA9  20                 	db	32
  3119  00FEAA  20                 	db	32
  3120  00FEAB  20                 	db	32
  3121  00FEAC  20                 	db	32
  3122  00FEAD  20                 	db	32
  3123  00FEAE  20                 	db	32
  3124  00FEAF  20                 	db	32
  3125  00FEB0  20                 	db	32
  3126  00FEB1  20                 	db	32
  3127  00FEB2  20                 	db	32
  3128  00FEB3  20                 	db	32
  3129  00FEB4  00                 	db	0
  3130  00FEB5                     STR_8:
  3131                           
  3132                           ; BSR set to: 57
  3133  00FEB5  42                 	db	66	;'B'
  3134  00FEB6  56                 	db	86	;'V'
  3135  00FEB7  20                 	db	32
  3136  00FEB8  25                 	db	37
  3137  00FEB9  32                 	db	50	;'2'
  3138  00FEBA  2E                 	db	46
  3139  00FEBB  34                 	db	52	;'4'
  3140  00FEBC  66                 	db	102	;'f'
  3141  00FEBD  20                 	db	32
  3142  00FEBE  20                 	db	32
  3143  00FEBF  20                 	db	32
  3144  00FEC0  20                 	db	32
  3145  00FEC1  20                 	db	32
  3146  00FEC2  20                 	db	32
  3147  00FEC3  20                 	db	32
  3148  00FEC4  20                 	db	32
  3149  00FEC5  20                 	db	32
  3150  00FEC6  20                 	db	32
  3151  00FEC7  20                 	db	32
  3152  00FEC8  20                 	db	32
  3153  00FEC9  00                 	db	0
  3154  00FECA                     STR_4:
  3155                           
  3156                           ; BSR set to: 57
  3157  00FECA  20                 	db	32
  3158  00FECB  4E                 	db	78	;'N'
  3159  00FECC  53                 	db	83	;'S'
  3160  00FECD  41                 	db	65	;'A'
  3161  00FECE  53                 	db	83	;'S'
  3162  00FECF  50                 	db	80	;'P'
  3163  00FED0  4F                 	db	79	;'O'
  3164  00FED1  4F                 	db	79	;'O'
  3165  00FED2  4B                 	db	75	;'K'
  3166  00FED3  20                 	db	32
  3167  00FED4  20                 	db	32
  3168  00FED5  20                 	db	32
  3169  00FED6  20                 	db	32
  3170  00FED7  20                 	db	32
  3171  00FED8  20                 	db	32
  3172  00FED9  20                 	db	32
  3173  00FEDA  20                 	db	32
  3174  00FEDB  20                 	db	32
  3175  00FEDC  20                 	db	32
  3176  00FEDD  20                 	db	32
  3177  00FEDE  00                 	db	0
  3178  00FEDF                     STR_12:
  3179                           
  3180                           ; BSR set to: 57
  3181  00FEDF  42                 	db	66	;'B'
  3182  00FEE0  61                 	db	97	;'a'
  3183  00FEE1  74                 	db	116	;'t'
  3184  00FEE2  74                 	db	116	;'t'
  3185  00FEE3  65                 	db	101	;'e'
  3186  00FEE4  72                 	db	114	;'r'
  3187  00FEE5  79                 	db	121	;'y'
  3188  00FEE6  20                 	db	32
  3189  00FEE7  45                 	db	69	;'E'
  3190  00FEE8  53                 	db	83	;'S'
  3191  00FEE9  52                 	db	82	;'R'
  3192  00FEEA  20                 	db	32
  3193  00FEEB  20                 	db	32
  3194  00FEEC  20                 	db	32
  3195  00FEED  20                 	db	32
  3196  00FEEE  20                 	db	32
  3197  00FEEF  20                 	db	32
  3198  00FEF0  20                 	db	32
  3199  00FEF1  20                 	db	32
  3200  00FEF2  20                 	db	32
  3201  00FEF3  00                 	db	0
  3202  00FEF4                     STR_13:
  3203                           
  3204                           ; BSR set to: 57
  3205  00FEF4  43                 	db	67	;'C'
  3206  00FEF5  61                 	db	97	;'a'
  3207  00FEF6  6C                 	db	108	;'l'
  3208  00FEF7  63                 	db	99	;'c'
  3209  00FEF8  75                 	db	117	;'u'
  3210  00FEF9  6C                 	db	108	;'l'
  3211  00FEFA  61                 	db	97	;'a'
  3212  00FEFB  74                 	db	116	;'t'
  3213  00FEFC  69                 	db	105	;'i'
  3214  00FEFD  6F                 	db	111	;'o'
  3215  00FEFE  6E                 	db	110	;'n'
  3216  00FEFF  20                 	db	32
  3217  00FF00  20                 	db	32
  3218  00FF01  20                 	db	32
  3219  00FF02  20                 	db	32
  3220  00FF03  20                 	db	32
  3221  00FF04  20                 	db	32
  3222  00FF05  20                 	db	32
  3223  00FF06  20                 	db	32
  3224  00FF07  20                 	db	32
  3225  00FF08  00                 	db	0
  3226  00FF09                     STR_2:
  3227                           
  3228                           ; BSR set to: 57
  3229  00FF09  20                 	db	32
  3230  00FF0A  56                 	db	86	;'V'
  3231  00FF0B  65                 	db	101	;'e'
  3232  00FF0C  72                 	db	114	;'r'
  3233  00FF0D  73                 	db	115	;'s'
  3234  00FF0E  69                 	db	105	;'i'
  3235  00FF0F  6F                 	db	111	;'o'
  3236  00FF10  6E                 	db	110	;'n'
  3237  00FF11  20                 	db	32
  3238  00FF12  25                 	db	37
  3239  00FF13  73                 	db	115	;'s'
  3240  00FF14  20                 	db	32
  3241  00FF15  20                 	db	32
  3242  00FF16  20                 	db	32
  3243  00FF17  20                 	db	32
  3244  00FF18  20                 	db	32
  3245  00FF19  20                 	db	32
  3246  00FF1A  20                 	db	32
  3247  00FF1B  20                 	db	32
  3248  00FF1C  20                 	db	32
  3249  00FF1D  00                 	db	0
  3250  00FF1E                     STR_1:
  3251                           
  3252                           ; BSR set to: 57
  3253  00FF1E  20                 	db	32
  3254  00FF1F  4D                 	db	77	;'M'
  3255  00FF20  42                 	db	66	;'B'
  3256  00FF21  4D                 	db	77	;'M'
  3257  00FF22  43                 	db	67	;'C'
  3258  00FF23  20                 	db	32
  3259  00FF24  53                 	db	83	;'S'
  3260  00FF25  4F                 	db	79	;'O'
  3261  00FF26  4C                 	db	76	;'L'
  3262  00FF27  41                 	db	65	;'A'
  3263  00FF28  52                 	db	82	;'R'
  3264  00FF29  4D                 	db	77	;'M'
  3265  00FF2A  4F                 	db	79	;'O'
  3266  00FF2B  4E                 	db	78	;'N'
  3267  00FF2C  20                 	db	32
  3268  00FF2D  20                 	db	32
  3269  00FF2E  20                 	db	32
  3270  00FF2F  20                 	db	32
  3271  00FF30  20                 	db	32
  3272  00FF31  20                 	db	32
  3273  00FF32  00                 	db	0
  3274  00FF33                     STR_15:
  3275                           
  3276                           ; BSR set to: 57
  3277  00FF33  43                 	db	67	;'C'
  3278  00FF34  68                 	db	104	;'h'
  3279  00FF35  65                 	db	101	;'e'
  3280  00FF36  63                 	db	99	;'c'
  3281  00FF37  6B                 	db	107	;'k'
  3282  00FF38  69                 	db	105	;'i'
  3283  00FF39  6E                 	db	110	;'n'
  3284  00FF3A  67                 	db	103	;'g'
  3285  00FF3B  20                 	db	32
  3286  00FF3C  25                 	db	37
  3287  00FF3D  63                 	db	99	;'c'
  3288  00FF3E  20                 	db	32
  3289  00FF3F  25                 	db	37
  3290  00FF40  63                 	db	99	;'c'
  3291  00FF41  20                 	db	32
  3292  00FF42  20                 	db	32
  3293  00FF43  20                 	db	32
  3294  00FF44  20                 	db	32
  3295  00FF45  20                 	db	32
  3296  00FF46  20                 	db	32
  3297  00FF47  00                 	db	0
  3298  00FF48                     STR_14:
  3299                           
  3300                           ; BSR set to: 57
  3301  00FF48  43                 	db	67	;'C'
  3302  00FF49  68                 	db	104	;'h'
  3303  00FF4A  65                 	db	101	;'e'
  3304  00FF4B  63                 	db	99	;'c'
  3305  00FF4C  6B                 	db	107	;'k'
  3306  00FF4D  20                 	db	32
  3307  00FF4E  33                 	db	51	;'3'
  3308  00FF4F  30                 	db	48	;'0'
  3309  00FF50  20                 	db	32
  3310  00FF51  73                 	db	115	;'s'
  3311  00FF52  65                 	db	101	;'e'
  3312  00FF53  63                 	db	99	;'c'
  3313  00FF54  6F                 	db	111	;'o'
  3314  00FF55  6E                 	db	110	;'n'
  3315  00FF56  64                 	db	100	;'d'
  3316  00FF57  73                 	db	115	;'s'
  3317  00FF58  20                 	db	32
  3318  00FF59  20                 	db	32
  3319  00FF5A  20                 	db	32
  3320  00FF5B  20                 	db	32
  3321  00FF5C  00                 	db	0
  3322  00FF5D                     STR_47:
  3323                           
  3324                           ; BSR set to: 57
  3325  00FF5D  48                 	db	72	;'H'
  3326  00FF5E  45                 	db	69	;'E'
  3327  00FF5F  4C                 	db	76	;'L'
  3328  00FF60  50                 	db	80	;'P'
  3329  00FF61  20                 	db	32
  3330  00FF62  25                 	db	37
  3331  00FF63  73                 	db	115	;'s'
  3332  00FF64  20                 	db	32
  3333  00FF65  20                 	db	32
  3334  00FF66  20                 	db	32
  3335  00FF67  20                 	db	32
  3336  00FF68  20                 	db	32
  3337  00FF69  20                 	db	32
  3338  00FF6A  20                 	db	32
  3339  00FF6B  20                 	db	32
  3340  00FF6C  20                 	db	32
  3341  00FF6D  20                 	db	32
  3342  00FF6E  20                 	db	32
  3343  00FF6F  00                 	db	0
  3344  00FF70                     
  3345                           ; BSR set to: 57
  3346  00FF70  44                 	db	68	;'D'
  3347  00FF71  49                 	db	73	;'I'
  3348  00FF72  53                 	db	83	;'S'
  3349  00FF73  50                 	db	80	;'P'
  3350  00FF74  4C                 	db	76	;'L'
  3351  00FF75  41                 	db	65	;'A'
  3352  00FF76  59                 	db	89	;'Y'
  3353  00FF77  20                 	db	32
  3354  00FF78  25                 	db	37
  3355  00FF79  73                 	db	115	;'s'
  3356  00FF7A  20                 	db	32
  3357  00FF7B  20                 	db	32
  3358  00FF7C  20                 	db	32
  3359  00FF7D  20                 	db	32
  3360  00FF7E  20                 	db	32
  3361  00FF7F  20                 	db	32
  3362  00FF80  20                 	db	32
  3363  00FF81  20                 	db	32
  3364  00FF82  00                 	db	0
  3365  00FF83                     
  3366                           ; BSR set to: 57
  3367  00FF83  25                 	db	37
  3368  00FF84  64                 	db	100	;'d'
  3369  00FF85  20                 	db	32
  3370  00FF86  25                 	db	37
  3371  00FF87  32                 	db	50	;'2'
  3372  00FF88  2E                 	db	46
  3373  00FF89  34                 	db	52	;'4'
  3374  00FF8A  66                 	db	102	;'f'
  3375  00FF8B  2C                 	db	44
  3376  00FF8C  20                 	db	32
  3377  00FF8D  25                 	db	37
  3378  00FF8E  64                 	db	100	;'d'
  3379  00FF8F  20                 	db	32
  3380  00FF90  20                 	db	32
  3381  00FF91  20                 	db	32
  3382  00FF92  23                 	db	35
  3383  00FF93  00                 	db	0
  3384  00FF94                     STR_19:
  3385                           
  3386                           ; BSR set to: 57
  3387  00FF94  25                 	db	37
  3388  00FF95  64                 	db	100	;'d'
  3389  00FF96  20                 	db	32
  3390  00FF97  25                 	db	37
  3391  00FF98  32                 	db	50	;'2'
  3392  00FF99  2E                 	db	46
  3393  00FF9A  34                 	db	52	;'4'
  3394  00FF9B  66                 	db	102	;'f'
  3395  00FF9C  20                 	db	32
  3396  00FF9D  20                 	db	32
  3397  00FF9E  20                 	db	32
  3398  00FF9F  25                 	db	37
  3399  00FFA0  64                 	db	100	;'d'
  3400  00FFA1  20                 	db	32
  3401  00FFA2  20                 	db	32
  3402  00FFA3  00                 	db	0
  3403  00FFA4                     STR_51:
  3404                           
  3405                           ; BSR set to: 57
  3406  00FFA4  76                 	db	118	;'v'
  3407  00FFA5  74                 	db	116	;'t'
  3408  00FFA6  65                 	db	101	;'e'
  3409  00FFA7  72                 	db	114	;'r'
  3410  00FFA8  6D                 	db	109	;'m'
  3411  00FFA9  20                 	db	32
  3412  00FFAA  25                 	db	37
  3413  00FFAB  78                 	db	120	;'x'
  3414  00FFAC  3A                 	db	58	;':'
  3415  00FFAD  25                 	db	37
  3416  00FFAE  78                 	db	120	;'x'
  3417  00FFAF  20                 	db	32
  3418  00FFB0  20                 	db	32
  3419  00FFB1  20                 	db	32
  3420  00FFB2  00                 	db	0
  3421  00FFB3                     STR_45:
  3422                           
  3423                           ; BSR set to: 57
  3424  00FFB3  4A                 	db	74	;'J'
  3425  00FFB4  61                 	db	97	;'a'
  3426  00FFB5  6E                 	db	110	;'n'
  3427  00FFB6  20                 	db	32
  3428  00FFB7  31                 	db	49	;'1'
  3429  00FFB8  38                 	db	56	;'8'
  3430  00FFB9  20                 	db	32
  3431  00FFBA  32                 	db	50	;'2'
  3432  00FFBB  30                 	db	48	;'0'
  3433  00FFBC  32                 	db	50	;'2'
  3434  00FFBD  30                 	db	48	;'0'
  3435  00FFBE  00                 	db	0
  3436  00FFBF                     STR_49:
  3437                           
  3438                           ; BSR set to: 57
  3439  00FFBF  25                 	db	37
  3440  00FFC0  73                 	db	115	;'s'
  3441  00FFC1  20                 	db	32
  3442  00FFC2  20                 	db	32
  3443  00FFC3  20                 	db	32
  3444  00FFC4  20                 	db	32
  3445  00FFC5  20                 	db	32
  3446  00FFC6  20                 	db	32
  3447  00FFC7  20                 	db	32
  3448  00FFC8  00                 	db	0
  3449  00FFC9                     STR_46:
  3450                           
  3451                           ; BSR set to: 57
  3452  00FFC9  32                 	db	50	;'2'
  3453  00FFCA  31                 	db	49	;'1'
  3454  00FFCB  3A                 	db	58	;':'
  3455  00FFCC  33                 	db	51	;'3'
  3456  00FFCD  34                 	db	52	;'4'
  3457  00FFCE  3A                 	db	58	;':'
  3458  00FFCF  32                 	db	50	;'2'
  3459  00FFD0  36                 	db	54	;'6'
  3460  00FFD1  00                 	db	0
  3461  00FFD2                     STR_3:
  3462                           
  3463                           ; BSR set to: 57
  3464  00FFD2  31                 	db	49	;'1'
  3465  00FFD3  2E                 	db	46
  3466  00FFD4  31                 	db	49	;'1'
  3467  00FFD5  33                 	db	51	;'3'
  3468  00FFD6  00                 	db	0
  3469  00FFD7                     STR_65:
  3470                           
  3471                           ; BSR set to: 57
  3472  00FFD7  49                 	db	73	;'I'
  3473  00FFD8  4E                 	db	78	;'N'
  3474  00FFD9  46                 	db	70	;'F'
  3475  00FFDA  00                 	db	0
  3476  00FFDB                     STR_69:
  3477                           
  3478                           ; BSR set to: 57
  3479  00FFDB  4E                 	db	78	;'N'
  3480  00FFDC  41                 	db	65	;'A'
  3481  00FFDD  4E                 	db	78	;'N'
  3482  00FFDE  00                 	db	0
  3483  00FFDF                     STR_66:
  3484                           
  3485                           ; BSR set to: 57
  3486  00FFDF  69                 	db	105	;'i'
  3487  00FFE0  6E                 	db	110	;'n'
  3488  00FFE1  66                 	db	102	;'f'
  3489  00FFE2  00                 	db	0
  3490  00FFE3                     STR_70:
  3491                           
  3492                           ; BSR set to: 57
  3493  00FFE3  6E                 	db	110	;'n'
  3494  00FFE4  61                 	db	97	;'a'
  3495  00FFE5  6E                 	db	110	;'n'
  3496  00FFE6  00                 	db	0
  3497  00FFE7                     STR_96:
  3498                           
  3499                           ; BSR set to: 57
  3500  00FFE7  6C                 	db	108	;'l'
  3501  00FFE8  58                 	db	88	;'X'
  3502  00FFE9  00                 	db	0
  3503  00FFEA                     STR_73:
  3504                           
  3505                           ; BSR set to: 57
  3506  00FFEA  6C                 	db	108	;'l'
  3507  00FFEB  64                 	db	100	;'d'
  3508  00FFEC  00                 	db	0
  3509  00FFED                     STR_82:
  3510                           
  3511                           ; BSR set to: 57
  3512  00FFED  6C                 	db	108	;'l'
  3513  00FFEE  66                 	db	102	;'f'
  3514  00FFEF  00                 	db	0
  3515  00FFF0                     STR_77:
  3516                           
  3517                           ; BSR set to: 57
  3518  00FFF0  6C                 	db	108	;'l'
  3519  00FFF1  69                 	db	105	;'i'
  3520  00FFF2  00                 	db	0
  3521  00FFF3                     STR_87:
  3522                           
  3523                           ; BSR set to: 57
  3524  00FFF3  6C                 	db	108	;'l'
  3525  00FFF4  75                 	db	117	;'u'
  3526  00FFF5  00                 	db	0
  3527  00FFF6                     STR_92:
  3528                           
  3529                           ; BSR set to: 57
  3530  00FFF6  6C                 	db	108	;'l'
  3531  00FFF7  78                 	db	120	;'x'
  3532  00FFF8  00                 	db	0
  3533  00FFF9                     STR_44:
  3534                           
  3535                           ; BSR set to: 57
  3536  00FFF9  25                 	db	37
  3537  00FFFA  63                 	db	99	;'c'
  3538  00FFFB  00                 	db	0
  3539  00FFFC                     STR_43:
  3540                           
  3541                           ; BSR set to: 57
  3542  00FFFC  25                 	db	37
  3543  00FFFD  73                 	db	115	;'s'
  3544  00FFFE  00                 	db	0
  3545  0000                     
  3546                           ; #config settings
  3547  00FFFF  00                 	db	0	; dummy byte at the end
  3548  0000                     
  3549                           	psect	cinit
  3550  01A312                     __pcinit:
  3551                           	opt callstack 0
  3552  01A312                     start_initialization:
  3553                           	opt callstack 0
  3554  01A312                     __initialization:
  3555                           	opt callstack 0
  3556                           
  3557                           ; Initialize objects allocated to BIGRAM (811 bytes)
  3558                           ; load TBLPTR registers with __pidataBIGRAM
  3559  01A312  0E70               	movlw	low __pidataBIGRAM
  3560  01A314  6EF6               	movwf	tblptrl,c
  3561  01A316  0E6B               	movlw	high __pidataBIGRAM
  3562  01A318  6EF7               	movwf	tblptrh,c
  3563  01A31A  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3564  01A31C  6EF8               	movwf	tblptru,c
  3565  01A31E  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3566  01A322  EE20 F32B          	lfsr	2,811
  3567  01A326                     copy_data0:
  3568  01A326  0009               	tblrd		*+
  3569  01A328  006F FFD7 FFEE     	movff	tablat,postinc0
  3570  01A32E  50DD               	movf	postdec2,w,c
  3571  01A330  50D9               	movf	fsr2l,w,c
  3572  01A332  E1F9               	bnz	copy_data0
  3573  01A334  50DA               	movf	fsr2h,w,c
  3574  01A336  E1F7               	bnz	copy_data0
  3575                           
  3576                           ; Initialize objects allocated to BANK1 (205 bytes)
  3577                           ; load TBLPTR registers with __pidataBANK1
  3578  01A338  0E98               	movlw	low __pidataBANK1
  3579  01A33A  6EF6               	movwf	tblptrl,c
  3580  01A33C  0EA5               	movlw	high __pidataBANK1
  3581  01A33E  6EF7               	movwf	tblptrh,c
  3582  01A340  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3583  01A342  6EF8               	movwf	tblptru,c
  3584  01A344  EE00  F100         	lfsr	0,__pdataBANK1
  3585  01A348  EE20 F0CD          	lfsr	2,205
  3586  01A34C                     copy_data1:
  3587  01A34C  0009               	tblrd		*+
  3588  01A34E  006F FFD7 FFEE     	movff	tablat,postinc0
  3589  01A354  50DD               	movf	postdec2,w,c
  3590  01A356  50D9               	movf	fsr2l,w,c
  3591  01A358  E1F9               	bnz	copy_data1
  3592                           
  3593                           ; Initialize objects allocated to BANK0 (54 bytes)
  3594                           ; load TBLPTR registers with __pidataBANK0
  3595  01A35A  0EC4               	movlw	low __pidataBANK0
  3596  01A35C  6EF6               	movwf	tblptrl,c
  3597  01A35E  0EBC               	movlw	high __pidataBANK0
  3598  01A360  6EF7               	movwf	tblptrh,c
  3599  01A362  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3600  01A364  6EF8               	movwf	tblptru,c
  3601  01A366  EE00  F0AF         	lfsr	0,__pdataBANK0
  3602  01A36A  EE20 F036          	lfsr	2,54
  3603  01A36E                     copy_data2:
  3604  01A36E  0009               	tblrd		*+
  3605  01A370  006F FFD7 FFEE     	movff	tablat,postinc0
  3606  01A376  50DD               	movf	postdec2,w,c
  3607  01A378  50D9               	movf	fsr2l,w,c
  3608  01A37A  E1F9               	bnz	copy_data2
  3609                           
  3610                           ; Clear objects allocated to BIGRAM (482 bytes)
  3611  01A37C  EE02  F02A         	lfsr	0,__pbssBIGRAM
  3612  01A380  EE20 F1E2          	lfsr	2,482
  3613  01A384                     clear_0:
  3614  01A384  6AEE               	clrf	postinc0,c
  3615  01A386  50DD               	movf	postdec2,w,c
  3616  01A388  50D9               	movf	fsr2l,w,c
  3617  01A38A  E1FC               	bnz	clear_0
  3618  01A38C  50DA               	movf	fsr2h,w,c
  3619  01A38E  E1FA               	bnz	clear_0
  3620                           
  3621                           ; Clear objects allocated to BANK4 (255 bytes)
  3622  01A390  EE01  F000         	lfsr	0,__pbssBANK4
  3623  01A394  EE20 F0FF          	lfsr	2,255
  3624  01A398                     clear_1:
  3625  01A398  6AEE               	clrf	postinc0,c
  3626  01A39A  50DD               	movf	postdec2,w,c
  3627  01A39C  50D9               	movf	fsr2l,w,c
  3628  01A39E  E1FC               	bnz	clear_1
  3629  01A3A0  50DA               	movf	fsr2h,w,c
  3630  01A3A2  E1FA               	bnz	clear_1
  3631                           
  3632                           ; Clear objects allocated to BANK3 (198 bytes)
  3633  01A3A4  EE00  F300         	lfsr	0,__pbssBANK3
  3634  01A3A8  0EC6               	movlw	198
  3635  01A3AA                     clear_2:
  3636  01A3AA  6AEE               	clrf	postinc0,c
  3637  01A3AC  06E8               	decf	wreg,f,c
  3638  01A3AE  E1FD               	bnz	clear_2
  3639                           
  3640                           ; Clear objects allocated to BANK2 (231 bytes)
  3641  01A3B0  EE00  F200         	lfsr	0,__pbssBANK2
  3642  01A3B4  0EE7               	movlw	231
  3643  01A3B6                     clear_3:
  3644  01A3B6  6AEE               	clrf	postinc0,c
  3645  01A3B8  06E8               	decf	wreg,f,c
  3646  01A3BA  E1FD               	bnz	clear_3
  3647                           
  3648                           ; Clear objects allocated to BANK1 (46 bytes)
  3649  01A3BC  EE00  F1CD         	lfsr	0,__pbssBANK1
  3650  01A3C0  0E2E               	movlw	46
  3651  01A3C2                     clear_4:
  3652  01A3C2  6AEE               	clrf	postinc0,c
  3653  01A3C4  06E8               	decf	wreg,f,c
  3654  01A3C6  E1FD               	bnz	clear_4
  3655                           
  3656                           ; Clear objects allocated to BANK0 (79 bytes)
  3657  01A3C8  EE00  F060         	lfsr	0,__pbssBANK0
  3658  01A3CC  0E4F               	movlw	79
  3659  01A3CE                     clear_5:
  3660  01A3CE  6AEE               	clrf	postinc0,c
  3661  01A3D0  06E8               	decf	wreg,f,c
  3662  01A3D2  E1FD               	bnz	clear_5
  3663                           
  3664                           ; Clear objects allocated to COMRAM (14 bytes)
  3665  01A3D4  EE00  F03A         	lfsr	0,__pbssCOMRAM
  3666  01A3D8  0E0E               	movlw	14
  3667  01A3DA                     clear_6:
  3668  01A3DA  6AEE               	clrf	postinc0,c
  3669  01A3DC  06E8               	decf	wreg,f,c
  3670  01A3DE  E1FD               	bnz	clear_6
  3671                           
  3672                           ;
  3673                           ; Setup IVTBASE
  3674                           ;
  3675  01A3E0  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3676  01A3E2  6ED5               	movwf	213,c
  3677  01A3E4  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3678  01A3E6  6ED6               	movwf	214,c
  3679  01A3E8  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3680  01A3EA  6ED7               	movwf	215,c
  3681  01A3EC                     end_of_initialization:
  3682                           	opt callstack 0
  3683  01A3EC                     __end_of__initialization:
  3684                           	opt callstack 0
  3685  01A3EC  0100               	movlb	0
  3686  01A3EE  EF22  F089         	goto	_main	;jump to C main() function
  3687                           
  3688                           	psect	bssCOMRAM
  3689  00003A                     __pbssCOMRAM:
  3690                           	opt callstack 0
  3691  00003A                     _width:
  3692                           	opt callstack 0
  3693  00003A                     	ds	2
  3694  00003C                     _prec:
  3695                           	opt callstack 0
  3696  00003C                     	ds	2
  3697  00003E                     _flags:
  3698                           	opt callstack 0
  3699  00003E                     	ds	2
  3700  000040                     calc_bsoc@log_update_wait:
  3701                           	opt callstack 0
  3702  000040                     	ds	1
  3703  000041                     check_day_time@day_delay:
  3704                           	opt callstack 0
  3705  000041                     	ds	1
  3706  000042                     dac_spi_control@S0:
  3707                           	opt callstack 0
  3708  000042                     	ds	1
  3709  000043                     dac_spi_control@init:
  3710                           	opt callstack 0
  3711  000043                     	ds	1
  3712  000044                     _uart2RxHead:
  3713                           	opt callstack 0
  3714  000044                     	ds	1
  3715  000045                     _uart2TxBufferRemaining:
  3716                           	opt callstack 0
  3717  000045                     	ds	1
  3718  000046                     _uart2TxTail:
  3719                           	opt callstack 0
  3720  000046                     	ds	1
  3721  000047                     _uart1RxHead:
  3722                           	opt callstack 0
  3723  000047                     	ds	1
  3724                           
  3725                           	psect	bssBANK0
  3726  000060                     __pbssBANK0:
  3727                           	opt callstack 0
  3728  000060                     fabsf@F463:
  3729                           	opt callstack 0
  3730  000060                     	ds	4
  3731  000064                     ___fpclassifyf@F463:
  3732                           	opt callstack 0
  3733  000064                     	ds	4
  3734  000068                     calc_ror_data@bcror:
  3735                           	opt callstack 0
  3736  000068                     	ds	4
  3737  00006C                     calc_ror_data@bvror:
  3738                           	opt callstack 0
  3739  00006C                     	ds	4
  3740  000070                     calc_model_data@bcror:
  3741                           	opt callstack 0
  3742  000070                     	ds	4
  3743  000074                     calc_model_data@bvror:
  3744                           	opt callstack 0
  3745  000074                     	ds	4
  3746  000078                     wdtdelay@dcount:
  3747                           	opt callstack 0
  3748  000078                     	ds	4
  3749  00007C                     _TMR3_InterruptHandler:
  3750                           	opt callstack 0
  3751  00007C                     	ds	3
  3752  00007F                     _TMR5_InterruptHandler:
  3753                           	opt callstack 0
  3754  00007F                     	ds	3
  3755  000082                     _TMR6_InterruptHandler:
  3756                           	opt callstack 0
  3757  000082                     	ds	3
  3758  000085                     _ADCC_ADTI_InterruptHandler:
  3759                           	opt callstack 0
  3760  000085                     	ds	3
  3761  000088                     _ADCC_ADI_InterruptHandler:
  3762                           	opt callstack 0
  3763  000088                     	ds	3
  3764  00008B                     _UART1_RxInterruptHandler:
  3765                           	opt callstack 0
  3766  00008B                     	ds	3
  3767  00008E                     _UART2_TxInterruptHandler:
  3768                           	opt callstack 0
  3769  00008E                     	ds	3
  3770  000091                     _UART2_RxInterruptHandler:
  3771                           	opt callstack 0
  3772  000091                     	ds	3
  3773  000094                     _INT1_InterruptHandler:
  3774                           	opt callstack 0
  3775  000094                     	ds	3
  3776  000097                     _INT0_InterruptHandler:
  3777                           	opt callstack 0
  3778  000097                     	ds	3
  3779  00009A                     _nout:
  3780                           	opt callstack 0
  3781  00009A                     	ds	2
  3782  00009C                     TMR3_ISR@CountCallBack:
  3783                           	opt callstack 0
  3784  00009C                     	ds	2
  3785  00009E                     _timer3ReloadVal:
  3786                           	opt callstack 0
  3787  00009E                     	ds	2
  3788  0000A0                     TMR5_ISR@CountCallBack:
  3789                           	opt callstack 0
  3790  0000A0                     	ds	2
  3791  0000A2                     _timer5ReloadVal:
  3792                           	opt callstack 0
  3793  0000A2                     	ds	2
  3794  0000A4                     esr_check@esr_state:
  3795                           	opt callstack 0
  3796  0000A4                     	ds	1
  3797  0000A5                     dac_spi_control@SB:
  3798                           	opt callstack 0
  3799  0000A5                     	ds	1
  3800  0000A6                     dac_spi_control@SC:
  3801                           	opt callstack 0
  3802  0000A6                     	ds	1
  3803  0000A7                     dac_spi_control@S2:
  3804                           	opt callstack 0
  3805  0000A7                     	ds	1
  3806  0000A8                     dac_spi_control@S1:
  3807                           	opt callstack 0
  3808  0000A8                     	ds	1
  3809  0000A9                     _mode_sw:
  3810                           	opt callstack 0
  3811  0000A9                     	ds	1
  3812  0000AA                     _uart2RxCount:
  3813                           	opt callstack 0
  3814  0000AA                     	ds	1
  3815  0000AB                     _uart2RxTail:
  3816                           	opt callstack 0
  3817  0000AB                     	ds	1
  3818  0000AC                     _uart2TxHead:
  3819                           	opt callstack 0
  3820  0000AC                     	ds	1
  3821  0000AD                     _uart1RxCount:
  3822                           	opt callstack 0
  3823  0000AD                     	ds	1
  3824  0000AE                     _uart1RxTail:
  3825                           	opt callstack 0
  3826  0000AE                     	ds	1
  3827                           
  3828                           	psect	dataBANK0
  3829  0000AF                     __pdataBANK0:
  3830                           	opt callstack 0
  3831  0000AF                     _R:
  3832                           	opt callstack 0
  3833  0000AF                     	ds	54
  3834                           
  3835                           	psect	bssBANK1
  3836  0001CD                     __pbssBANK1:
  3837                           	opt callstack 0
  3838  0001CD                     _spi_link:
  3839                           	opt callstack 0
  3840  0001CD                     	ds	12
  3841  0001D9                     _uart1RxBuffer:
  3842                           	opt callstack 0
  3843  0001D9                     	ds	8
  3844  0001E1                     spinners@s:
  3845                           	opt callstack 0
  3846  0001E1                     	ds	6
  3847  0001E7                     floorf@F524:
  3848                           	opt callstack 0
  3849  0001E7                     	ds	4
  3850  0001EB                     _utctime:
  3851                           	opt callstack 0
  3852  0001EB                     	ds	4
  3853  0001EF                     _P:
  3854                           	opt callstack 0
  3855  0001EF                     	ds	4
  3856  0001F3                     _seed:
  3857                           	opt callstack 0
  3858  0001F3                     	ds	8
  3859                           
  3860                           	psect	dataBANK1
  3861  000100                     __pdataBANK1:
  3862                           	opt callstack 0
  3863  000100                     stoa@F1166:
  3864                           	opt callstack 0
  3865  000100                     	ds	7
  3866  000107                     _V:
  3867                           	opt callstack 0
  3868  000107                     	ds	191
  3869  0001C6                     _H:
  3870                           	opt callstack 0
  3871  0001C6                     	ds	7
  3872                           
  3873                           	psect	bssBANK2
  3874  000200                     __pbssBANK2:
  3875                           	opt callstack 0
  3876  000200                     lp_filter@smooth:
  3877                           	opt callstack 0
  3878  000200                     	ds	84
  3879  000254                     _S:
  3880                           	opt callstack 0
  3881  000254                     	ds	41
  3882  00027D                     _tickCount:
  3883                           	opt callstack 0
  3884  00027D                     	ds	26
  3885  000297                     _dbuf:
  3886                           	opt callstack 0
  3887  000297                     	ds	80
  3888                           
  3889                           	psect	bssBANK3
  3890  000300                     __pbssBANK3:
  3891                           	opt callstack 0
  3892  000300                     _uart2TxBuffer:
  3893                           	opt callstack 0
  3894  000300                     	ds	64
  3895  000340                     _ring_buf2:
  3896                           	opt callstack 0
  3897  000340                     	ds	67
  3898  000383                     _ring_buf1:
  3899                           	opt callstack 0
  3900  000383                     	ds	67
  3901                           
  3902                           	psect	bssBANK4
  3903  000400                     __pbssBANK4:
  3904                           	opt callstack 0
  3905  000400                     _uart2RxBuffer:
  3906                           	opt callstack 0
  3907  000400                     	ds	255
  3908                           
  3909                           	psect	bssBIGRAM
  3910  00082A                     __pbssBIGRAM:
  3911                           	opt callstack 0
  3912  00082A                     _D:
  3913                           	opt callstack 0
  3914  00082A                     	ds	482
  3915                           
  3916                           	psect	dataBIGRAM
  3917  0004FF                     __pdataBIGRAM:
  3918                           	opt callstack 0
  3919  0004FF                     _port_data:
  3920                           	opt callstack 0
  3921  0004FF                     	ds	512
  3922  0006FF                     _C:
  3923                           	opt callstack 0
  3924  0006FF                     	ds	299
  3925                           
  3926                           	psect	cstackBANK0
  3927  0000E5                     __pcstackBANK0:
  3928                           	opt callstack 0
  3929  0000E5                     ??_TMR3_ISR:
  3930                           
  3931                           ; 1 bytes @ 0x0
  3932  0000E5                     	ds	25
  3933                           
  3934                           	psect	cstackCOMRAM
  3935  000021                     __pcstackCOMRAM:
  3936                           	opt callstack 0
  3937  000021                     ??_ADCC_ThresholdISR:
  3938  000021                     
  3939                           ; 1 bytes @ 0x0
  3940  000021                     	ds	5
  3941  000026                     ??_TMR6_ISR:
  3942                           
  3943                           ; 1 bytes @ 0x5
  3944  000026                     	ds	1
  3945  000027                     ??_INT1_ISR:
  3946  000027                     
  3947                           ; 1 bytes @ 0x6
  3948  000027                     	ds	4
  3949  00002B                     ??_TMR5_ISR:
  3950                           
  3951                           ; 1 bytes @ 0xA
  3952  00002B                     	ds	15
  3953                           
  3954 ;;
  3955 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  3956 ;;
  3957 ;; *************** function _main *****************
  3958 ;; Defined at:
  3959 ;;		line 187 in file "main.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;		None
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  esr_temp        4  [STACK] float 
  3964 ;;  i_esr           2  [STACK] unsigned short 
  3965 ;;  shape           1  [STACK] unsigned char 
  3966 ;;  inp_index       1  [STACK] unsigned char 
  3967 ;;  k               1  [STACK] unsigned char 
  3968 ;;  j               1  [STACK] unsigned char 
  3969 ;;  i               1  [STACK] unsigned char 
  3970 ;;  mode            1  [STACK] enum E17013
  3971 ;;  i_ror           1  [STACK] unsigned char 
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  1  [STACK] void 
  3974 ;; Registers used:
  3975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3985 ;;Total ram usage:        0 bytes
  3986 ;; Hardware stack levels required when called:   29
  3987 ;; This function calls:
  3988 ;;		_SYSTEM_Initialize
  3989 ;;		_StartTimer
  3990 ;;		_TimerDone
  3991 ;;		_WaitMs
  3992 ;;		___fladd
  3993 ;;		___flge
  3994 ;;		___fltol
  3995 ;;		_calc_model_data
  3996 ;;		_calc_ror_data
  3997 ;;		_check_adc_scan
  3998 ;;		_check_enter_button
  3999 ;;		_check_help
  4000 ;;		_clear_adc_scan
  4001 ;;		_clear_hid_pflags
  4002 ;;		_conv_raw_result
  4003 ;;		_convert_adc_data
  4004 ;;		_eaDogM_WriteCommand
  4005 ;;		_esr_check
  4006 ;;		_fabsf
  4007 ;;		_get_raw_result
  4008 ;;		_get_switch
  4009 ;;		_get_vterm_ptr
  4010 ;;		_hid_display
  4011 ;;		_init_bsoc
  4012 ;;		_init_display
  4013 ;;		_init_port_dma
  4014 ;;		_lp_filter
  4015 ;;		_mode_lamp_dim
  4016 ;;		_set_dac
  4017 ;;		_set_dac_a
  4018 ;;		_set_dac_b
  4019 ;;		_set_display_info
  4020 ;;		_set_load_relay_one
  4021 ;;		_set_load_relay_two
  4022 ;;		_set_vterm
  4023 ;;		_spinners
  4024 ;;		_sprintf
  4025 ;;		_srand
  4026 ;;		_start_adc_scan
  4027 ;;		_start_switch_handler
  4028 ;;		_static_soc
  4029 ;;		_update_lcd
  4030 ;;		_wait_lcd_done
  4031 ;; This function is called by:
  4032 ;;		Startup code after reset
  4033 ;; This function uses a reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text0
  4037  011244                     __ptext0:
  4038                           	opt callstack 0
  4039  011244                     _main:
  4040                           	opt callstack 0
  4041                           
  4042                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4043  011244  0E11               	movlw	17
  4044  011246  26E1               	addwf	fsr1l,f,c
  4045  011248  0E00               	movlw	0
  4046  01124A  22E2               	addwfc	fsr1h,f,c
  4047                           
  4048                           ;main.c: 189:  UI_STATES mode;;main.c: 190:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4049                           ;stkvar	_inp_index @ sp[(-17)+11]
  4050                           
  4051                           ;incstack = 0
  4052  01124C  0EFA               	movlw	-6
  4053  01124E  6AE3               	clrf	plusw1,c
  4054                           
  4055                           ;stkvar	_i @ sp[(-17)+14]
  4056  011250  0EFD               	movlw	-3
  4057  011252  6AE3               	clrf	plusw1,c
  4058                           
  4059                           ;stkvar	_j @ sp[(-17)+13]
  4060  011254  0EFC               	movlw	-4
  4061  011256  6AE3               	clrf	plusw1,c
  4062  011258  2AE3               	incf	plusw1,f,c
  4063                           
  4064                           ;stkvar	_k @ sp[(-17)+12]
  4065  01125A  0EFB               	movlw	-5
  4066  01125C  6AE3               	clrf	plusw1,c
  4067  01125E  82E3               	bsf	plusw1,1,c
  4068                           
  4069                           ;main.c: 193:  SYSTEM_Initialize();
  4070  011260  ECED  F0DB         	call	_SYSTEM_Initialize	;wreg free
  4071                           
  4072                           ; BSR set to: 60
  4073                           ;main.c: 196:  (INTCON0bits.GIEH = 1);
  4074  011264  8ED2               	bsf	210,7,c	;volatile
  4075                           
  4076                           ; BSR set to: 60
  4077                           ;main.c: 199:  (INTCON0bits.GIEL = 1);
  4078  011266  8CD2               	bsf	210,6,c	;volatile
  4079                           
  4080                           ; BSR set to: 60
  4081                           ;main.c: 201:  V.ui_state = UI_STATE_INIT;
  4082  011268  0101               	movlb	1	; () banked
  4083  01126A  6B07               	clrf	_V& (0+255),b	;volatile
  4084                           
  4085                           ; BSR set to: 1
  4086                           ;main.c: 206:  WaitMs(300);
  4087  01126C  0E2C               	movlw	44
  4088  01126E  6EE6               	movwf	postinc1,c
  4089  011270  0E01               	movlw	1
  4090  011272  6EE6               	movwf	postinc1,c
  4091  011274  EC7D  F0DE         	call	_WaitMs	;wreg free
  4092                           
  4093                           ;main.c: 207:  if (PORTBbits.RB0) {
  4094  011278  A0CB               	btfss	203,0,c	;volatile
  4095  01127A  D004               	goto	l13369
  4096                           
  4097                           ;main.c: 208:   mode = UI_STATE_HOST;
  4098                           ;stkvar	_mode @ sp[(-17)+15]
  4099  01127C  0EFE               	movlw	-2
  4100  01127E  6AE3               	clrf	plusw1,c
  4101  011280  2AE3               	incf	plusw1,f,c
  4102                           
  4103                           ;main.c: 209:  } else {
  4104  011282  D004               	goto	l13371
  4105  011284                     l13369:
  4106                           
  4107                           ;main.c: 210:   mode = UI_STATE_LOG;
  4108                           ;stkvar	_mode @ sp[(-17)+15]
  4109  011284  0EFE               	movlw	-2
  4110  011286  6AE3               	clrf	plusw1,c
  4111  011288  80E3               	bsf	plusw1,0,c
  4112  01128A  82E3               	bsf	plusw1,1,c	;indir
  4113  01128C                     l13371:
  4114                           
  4115                           ;main.c: 213:  if (mode == UI_STATE_HOST) {
  4116                           ;stkvar	_mode @ sp[(-17)+15]
  4117  01128C  0EFE               	movlw	-2
  4118  01128E  04E3               	decf	plusw1,w,c
  4119  011290  A4D8               	btfss	status,2,c
  4120  011292  D007               	goto	l1332
  4121                           
  4122                           ;main.c: 214:   do { LATDbits.LATD0 = 1; } while(0);
  4123  011294  80BD               	bsf	189,0,c	;volatile
  4124                           
  4125                           ;main.c: 215:   V.mode_pwm = 70;
  4126  011296  0E00               	movlw	0
  4127  011298  0101               	movlb	1	; () banked
  4128  01129A  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  4129  01129C  0E46               	movlw	70
  4130  01129E  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  4131                           
  4132                           ;main.c: 216:  } else {
  4133  0112A0  D004               	goto	l13375
  4134  0112A2                     l1332:
  4135  0112A2  90BD               	bcf	189,0,c	;volatile
  4136                           
  4137                           ;main.c: 218:   V.mode_pwm = 0;
  4138  0112A4  0101               	movlb	1	; () banked
  4139  0112A6  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  4140  0112A8  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  4141  0112AA                     l13375:
  4142                           
  4143                           ; BSR set to: 1
  4144                           ;main.c: 220:  mode_lamp_dim(V.mode_pwm);
  4145  0112AA  0060  F673  FFE6   	movff	_V+149,postinc1
  4146  0112B0  0060  F677  FFE6   	movff	_V+150,postinc1
  4147  0112B6  EC21  F0E2         	call	_mode_lamp_dim	;wreg free
  4148  0112BA  D325               	goto	l13495
  4149  0112BC                     l13377:
  4150                           
  4151                           ; BSR set to: 1
  4152                           ;main.c: 228:    init_port_dma();
  4153  0112BC  EC00  F0DF         	call	_init_port_dma	;wreg free
  4154                           
  4155                           ; BSR set to: 59
  4156                           ;main.c: 230:    init_display();
  4157  0112C0  ECA2  F0D0         	call	_init_display	;wreg free
  4158                           
  4159                           ; BSR set to: 61
  4160                           ;main.c: 231:    eaDogM_WriteCommand(0b00001100);
  4161  0112C4  0E0C               	movlw	12
  4162  0112C6  6EE6               	movwf	postinc1,c
  4163  0112C8  EC8D  F0E2         	call	_eaDogM_WriteCommand	;wreg free
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;main.c: 235:    set_load_relay_one(1);
  4167  0112CC  0E01               	movlw	1
  4168  0112CE  6EE6               	movwf	postinc1,c
  4169  0112D0  EC75  F0E2         	call	_set_load_relay_one	;wreg free
  4170                           
  4171                           ;main.c: 236:    set_load_relay_two(1);
  4172  0112D4  0E01               	movlw	1
  4173  0112D6  6EE6               	movwf	postinc1,c
  4174  0112D8  EC6D  F0E2         	call	_set_load_relay_two	;wreg free
  4175                           
  4176                           ;main.c: 238:    V.ui_state = mode;
  4177                           ;stkvar	_mode @ sp[(-17)+15]
  4178  0112DC  0EFE               	movlw	-2
  4179  0112DE  006F FF8C  F107    	movff	plusw1,_V	;volatile
  4180                           
  4181                           ;main.c: 239:    srand(1957);
  4182  0112E4  0EA5               	movlw	165
  4183  0112E6  6EE6               	movwf	postinc1,c
  4184  0112E8  0E07               	movlw	7
  4185  0112EA  6EE6               	movwf	postinc1,c
  4186  0112EC  EC98  F0DE         	call	_srand	;wreg free
  4187                           
  4188                           ; BSR set to: 1
  4189                           ;main.c: 240:    set_vterm(0);
  4190  0112F0  0E00               	movlw	0
  4191  0112F2  6EE6               	movwf	postinc1,c
  4192  0112F4  ECD9  F0E1         	call	_set_vterm	;wreg free
  4193                           
  4194                           ;main.c: 241:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4195  0112F8  0E1E               	movlw	low STR_1
  4196  0112FA  6EE6               	movwf	postinc1,c
  4197  0112FC  0EFF               	movlw	high STR_1
  4198  0112FE  6EE6               	movwf	postinc1,c
  4199  011300  0E00               	movlw	0
  4200  011302  6EE6               	movwf	postinc1,c
  4201  011304  0E00               	movlw	0
  4202  011306  6EE6               	movwf	postinc1,c
  4203  011308  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  4204  01130C  0060  F007  FFE6   	movff	btemp,postinc1
  4205  011312  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4206  011318  0E04               	movlw	4
  4207  01131A  6EE6               	movwf	postinc1,c
  4208  01131C  ECA2  F0CF         	call	_sprintf	;wreg free
  4209                           
  4210                           ; BSR set to: 0
  4211                           ;main.c: 242:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.13");
  4212  011320  0ED2               	movlw	low STR_3
  4213  011322  6EE6               	movwf	postinc1,c
  4214  011324  0EFF               	movlw	high STR_3
  4215  011326  6EE6               	movwf	postinc1,c
  4216  011328  0E09               	movlw	low STR_2
  4217  01132A  6EE6               	movwf	postinc1,c
  4218  01132C  0EFF               	movlw	high STR_2
  4219  01132E  6EE6               	movwf	postinc1,c
  4220  011330  0E00               	movlw	0
  4221  011332  6EE6               	movwf	postinc1,c
  4222  011334  0E01               	movlw	1
  4223  011336  6EE6               	movwf	postinc1,c
  4224  011338  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  4225  01133C  0060  F007  FFE6   	movff	btemp,postinc1
  4226  011342  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4227  011348  0E06               	movlw	6
  4228  01134A  6EE6               	movwf	postinc1,c
  4229  01134C  ECA2  F0CF         	call	_sprintf	;wreg free
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;main.c: 243:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4233  011350  0ECA               	movlw	low STR_4
  4234  011352  6EE6               	movwf	postinc1,c
  4235  011354  0EFE               	movlw	high STR_4
  4236  011356  6EE6               	movwf	postinc1,c
  4237  011358  0E00               	movlw	0
  4238  01135A  6EE6               	movwf	postinc1,c
  4239  01135C  0E02               	movlw	2
  4240  01135E  6EE6               	movwf	postinc1,c
  4241  011360  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  4242  011364  0060  F007  FFE6   	movff	btemp,postinc1
  4243  01136A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4244  011370  0E04               	movlw	4
  4245  011372  6EE6               	movwf	postinc1,c
  4246  011374  ECA2  F0CF         	call	_sprintf	;wreg free
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4250  011378  0EA0               	movlw	low STR_5
  4251  01137A  6EE6               	movwf	postinc1,c
  4252  01137C  0EFE               	movlw	high STR_5
  4253  01137E  6EE6               	movwf	postinc1,c
  4254  011380  0E02               	movlw	2
  4255  011382  6EE6               	movwf	postinc1,c
  4256  011384  0E00               	movlw	0
  4257  011386  6EE6               	movwf	postinc1,c
  4258  011388  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  4259  01138C  0060  F007  FFE6   	movff	btemp,postinc1
  4260  011392  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4261  011398  0E04               	movlw	4
  4262  01139A  6EE6               	movwf	postinc1,c
  4263  01139C  ECA2  F0CF         	call	_sprintf	;wreg free
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4267  0113A0  0EA0               	movlw	low STR_5
  4268  0113A2  6EE6               	movwf	postinc1,c
  4269  0113A4  0EFE               	movlw	high STR_5
  4270  0113A6  6EE6               	movwf	postinc1,c
  4271  0113A8  0E02               	movlw	2
  4272  0113AA  6EE6               	movwf	postinc1,c
  4273  0113AC  0E01               	movlw	1
  4274  0113AE  6EE6               	movwf	postinc1,c
  4275  0113B0  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  4276  0113B4  0060  F007  FFE6   	movff	btemp,postinc1
  4277  0113BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4278  0113C0  0E04               	movlw	4
  4279  0113C2  6EE6               	movwf	postinc1,c
  4280  0113C4  ECA2  F0CF         	call	_sprintf	;wreg free
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4284  0113C8  0EA0               	movlw	low STR_5
  4285  0113CA  6EE6               	movwf	postinc1,c
  4286  0113CC  0EFE               	movlw	high STR_5
  4287  0113CE  6EE6               	movwf	postinc1,c
  4288  0113D0  0E02               	movlw	2
  4289  0113D2  6EE6               	movwf	postinc1,c
  4290  0113D4  0E02               	movlw	2
  4291  0113D6  6EE6               	movwf	postinc1,c
  4292  0113D8  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  4293  0113DC  0060  F007  FFE6   	movff	btemp,postinc1
  4294  0113E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4295  0113E8  0E04               	movlw	4
  4296  0113EA  6EE6               	movwf	postinc1,c
  4297  0113EC  ECA2  F0CF         	call	_sprintf	;wreg free
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;main.c: 247:    update_lcd(0);
  4301  0113F0  0E00               	movlw	0
  4302  0113F2  6EE6               	movwf	postinc1,c
  4303  0113F4  EC1A  F0CF         	call	_update_lcd	;wreg free
  4304                           
  4305                           ;main.c: 248:    WaitMs(1000);
  4306  0113F8  0EE8               	movlw	232
  4307  0113FA  6EE6               	movwf	postinc1,c
  4308  0113FC  0E03               	movlw	3
  4309  0113FE  6EE6               	movwf	postinc1,c
  4310  011400  EC7D  F0DE         	call	_WaitMs	;wreg free
  4311                           
  4312                           ;main.c: 249:    StartTimer(TMR_DISPLAY, 250);
  4313  011404  0EFA               	movlw	250
  4314  011406  6EE6               	movwf	postinc1,c
  4315  011408  0E00               	movlw	0
  4316  01140A  6EE6               	movwf	postinc1,c
  4317  01140C  0E0A               	movlw	10
  4318  01140E  6EE6               	movwf	postinc1,c
  4319  011410  EC8E  F0DD         	call	_StartTimer	;wreg free
  4320                           
  4321                           ;main.c: 250:    StartTimer(TMR_ADC, 200);
  4322  011414  0EC8               	movlw	200
  4323  011416  6EE6               	movwf	postinc1,c
  4324  011418  0E00               	movlw	0
  4325  01141A  6EE6               	movwf	postinc1,c
  4326  01141C  0E01               	movlw	1
  4327  01141E  6EE6               	movwf	postinc1,c
  4328  011420  EC8E  F0DD         	call	_StartTimer	;wreg free
  4329                           
  4330                           ;main.c: 251:    StartTimer(TMR_INFO, 3000);
  4331  011424  0EB8               	movlw	184
  4332  011426  6EE6               	movwf	postinc1,c
  4333  011428  0E0B               	movlw	11
  4334  01142A  6EE6               	movwf	postinc1,c
  4335  01142C  0E07               	movlw	7
  4336  01142E  6EE6               	movwf	postinc1,c
  4337  011430  EC8E  F0DD         	call	_StartTimer	;wreg free
  4338                           
  4339                           ;main.c: 252:    StartTimer(TMR_FLIPPER, 1500);
  4340  011434  0EDC               	movlw	220
  4341  011436  6EE6               	movwf	postinc1,c
  4342  011438  0E05               	movlw	5
  4343  01143A  6EE6               	movwf	postinc1,c
  4344  01143C  0E0B               	movlw	11
  4345  01143E  6EE6               	movwf	postinc1,c
  4346  011440  EC8E  F0DD         	call	_StartTimer	;wreg free
  4347                           
  4348                           ;main.c: 253:    StartTimer(TMR_HELPDIS, 3000);
  4349  011444  0EB8               	movlw	184
  4350  011446  6EE6               	movwf	postinc1,c
  4351  011448  0E0B               	movlw	11
  4352  01144A  6EE6               	movwf	postinc1,c
  4353  01144C  0E09               	movlw	9
  4354  01144E  6EE6               	movwf	postinc1,c
  4355  011450  EC8E  F0DD         	call	_StartTimer	;wreg free
  4356                           
  4357                           ;main.c: 255:    start_adc_scan();
  4358  011454  EC04  F0DA         	call	_start_adc_scan	;wreg free
  4359                           
  4360                           ;main.c: 256:    start_switch_handler();
  4361  011458  EC9B  F0E1         	call	_start_switch_handler	;wreg free
  4362                           
  4363                           ; BSR set to: 57
  4364                           ;main.c: 257:    WaitMs(1000);
  4365  01145C  0EE8               	movlw	232
  4366  01145E  6EE6               	movwf	postinc1,c
  4367  011460  0E03               	movlw	3
  4368  011462  6EE6               	movwf	postinc1,c
  4369  011464  EC7D  F0DE         	call	_WaitMs	;wreg free
  4370                           
  4371                           ;main.c: 262:    i_ror = 1;
  4372                           ;stkvar	_i_ror @ sp[(-17)+16]
  4373  011468  0EFF               	movlw	-1
  4374  01146A  6AE3               	clrf	plusw1,c
  4375  01146C  2AE3               	incf	plusw1,f,c
  4376  01146E                     l13427:
  4377                           
  4378                           ;main.c: 264:     calc_ror_data();
  4379  01146E  ECCE  F0C6         	call	_calc_ror_data	;wreg free
  4380                           
  4381                           ;main.c: 265:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4382  011472  0E00               	movlw	0
  4383  011474  6EE6               	movwf	postinc1,c
  4384  011476  0E04               	movlw	4
  4385  011478  6EE6               	movwf	postinc1,c
  4386  01147A  EC95  F0A9         	call	_conv_raw_result	;wreg free
  4387  01147E  0060  F007  FFE6   	movff	btemp,postinc1
  4388  011484  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4389  01148A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4390  011490  0060  F013  FFE6   	movff	btemp+3,postinc1
  4391  011496  0EB5               	movlw	low STR_8
  4392  011498  6EE6               	movwf	postinc1,c
  4393  01149A  0EFE               	movlw	high STR_8
  4394  01149C  6EE6               	movwf	postinc1,c
  4395  01149E  0E00               	movlw	0
  4396  0114A0  6EE6               	movwf	postinc1,c
  4397  0114A2  0E01               	movlw	1
  4398  0114A4  6EE6               	movwf	postinc1,c
  4399  0114A6  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  4400  0114AA  0060  F007  FFE6   	movff	btemp,postinc1
  4401  0114B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4402  0114B6  0E08               	movlw	8
  4403  0114B8  6EE6               	movwf	postinc1,c
  4404  0114BA  ECA2  F0CF         	call	_sprintf	;wreg free
  4405                           
  4406                           ; BSR set to: 0
  4407                           ;main.c: 266:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4408  0114BE  EE21  F36B         	lfsr	2,_C+108	;volatile
  4409  0114C2  006F FF7B FFE6     	movff	postinc2,postinc1
  4410  0114C8  006F FF7B FFE6     	movff	postinc2,postinc1
  4411  0114CE  006F FF7B FFE6     	movff	postinc2,postinc1
  4412  0114D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4413                           
  4414                           ;stkvar	_i_ror @ sp[(-21)+16]
  4415  0114DA  0EFB               	movlw	-5
  4416  0114DC  50E3               	movf	plusw1,w,c
  4417  0114DE  6EE6               	movwf	postinc1,c
  4418  0114E0  0E00               	movlw	0
  4419  0114E2  6EE6               	movwf	postinc1,c
  4420  0114E4  0E00               	movlw	0
  4421  0114E6  6EE6               	movwf	postinc1,c
  4422  0114E8  0E05               	movlw	5
  4423  0114EA  6EE6               	movwf	postinc1,c
  4424  0114EC  EC27  F0D0         	call	_spinners	;wreg free
  4425  0114F0  5001               	movf	btemp^0,w,c
  4426  0114F2  6EE6               	movwf	postinc1,c
  4427  0114F4  0E00               	movlw	0
  4428  0114F6  6EE6               	movwf	postinc1,c
  4429  0114F8  0E9B               	movlw	low STR_9
  4430  0114FA  6EE6               	movwf	postinc1,c
  4431  0114FC  0EFC               	movlw	high STR_9
  4432  0114FE  6EE6               	movwf	postinc1,c
  4433  011500  0E00               	movlw	0
  4434  011502  6EE6               	movwf	postinc1,c
  4435  011504  0E02               	movlw	2
  4436  011506  6EE6               	movwf	postinc1,c
  4437  011508  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  4438  01150C  0060  F007  FFE6   	movff	btemp,postinc1
  4439  011512  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4440  011518  0E0C               	movlw	12
  4441  01151A  6EE6               	movwf	postinc1,c
  4442  01151C  ECA2  F0CF         	call	_sprintf	;wreg free
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;main.c: 267:     update_lcd(0);
  4446  011520  0E00               	movlw	0
  4447  011522  6EE6               	movwf	postinc1,c
  4448  011524  EC1A  F0CF         	call	_update_lcd	;wreg free
  4449                           
  4450                           ;main.c: 268:     clear_adc_scan();
  4451  011528  ECE1  F0E2         	call	_clear_adc_scan	;wreg free
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;main.c: 269:     start_adc_scan();
  4455  01152C  EC04  F0DA         	call	_start_adc_scan	;wreg free
  4456                           
  4457                           ;main.c: 270:     WaitMs(2000);
  4458  011530  0ED0               	movlw	208
  4459  011532  6EE6               	movwf	postinc1,c
  4460  011534  0E07               	movlw	7
  4461  011536  6EE6               	movwf	postinc1,c
  4462  011538  EC7D  F0DE         	call	_WaitMs	;wreg free
  4463                           
  4464                           ;main.c: 273:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4465                           ;stkvar	_i_ror @ sp[(-17)+16]
  4466  01153C  0EFF               	movlw	-1
  4467  01153E  006F FF8C  F00C    	movff	plusw1,btemp+11
  4468  011544  2A0C               	incf	(btemp+11)^0,f,c
  4469  011546  0060  F033  FFE3   	movff	btemp+11,plusw1
  4470  01154C  060C               	decf	(btemp+11)^0,f,c
  4471  01154E  0E1E               	movlw	30
  4472  011550  600C               	cpfslt	(btemp+11)^0,c
  4473  011552  D01A               	goto	u12880
  4474  011554  EE21  F36B         	lfsr	2,_C+108	;volatile
  4475  011558  006F FF7B FFE6     	movff	postinc2,postinc1
  4476  01155E  006F FF7B FFE6     	movff	postinc2,postinc1
  4477  011564  006F FF7B FFE6     	movff	postinc2,postinc1
  4478  01156A  006F FF7B FFE6     	movff	postinc2,postinc1
  4479  011570  0E42               	movlw	66
  4480  011572  6EE6               	movwf	postinc1,c
  4481  011574  0E60               	movlw	96
  4482  011576  6EE6               	movwf	postinc1,c
  4483  011578  0E65               	movlw	101
  4484  01157A  6EE6               	movwf	postinc1,c
  4485  01157C  0E3C               	movlw	60
  4486  01157E  6EE6               	movwf	postinc1,c
  4487  011580  EC0A  F0C9         	call	___flge	;wreg free
  4488  011584  A001               	btfss	btemp& (0+255),0,c
  4489  011586  D773               	goto	l13427
  4490  011588                     u12880:
  4491                           
  4492                           ;main.c: 275:    static_soc();
  4493  011588  ECC8  F0DA         	call	_static_soc	;wreg free
  4494                           
  4495                           ;main.c: 276:    init_bsoc();
  4496  01158C  EC09  F0BE         	call	_init_bsoc	;wreg free
  4497                           
  4498                           ;main.c: 277:    set_load_relay_one(0);
  4499  011590  0E00               	movlw	0
  4500  011592  6EE6               	movwf	postinc1,c
  4501  011594  EC75  F0E2         	call	_set_load_relay_one	;wreg free
  4502                           
  4503                           ;main.c: 278:    set_load_relay_two(0);
  4504  011598  0E00               	movlw	0
  4505  01159A  6EE6               	movwf	postinc1,c
  4506  01159C  EC6D  F0E2         	call	_set_load_relay_two	;wreg free
  4507                           
  4508                           ;main.c: 279:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4509  0115A0  EE21  F3B5         	lfsr	2,_C+182	;volatile
  4510  0115A4  006F FF78  F00B    	movff	postinc2,btemp+10
  4511  0115AA  006F FF74  F00C    	movff	postdec2,btemp+11
  4512  0115B0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4513  0115B6  0060  F033  FFE6   	movff	btemp+11,postinc1
  4514  0115BC  0E56               	movlw	low STR_10
  4515  0115BE  6EE6               	movwf	postinc1,c
  4516  0115C0  0EFD               	movlw	high STR_10
  4517  0115C2  6EE6               	movwf	postinc1,c
  4518  0115C4  0E00               	movlw	0
  4519  0115C6  6EE6               	movwf	postinc1,c
  4520  0115C8  0E00               	movlw	0
  4521  0115CA  6EE6               	movwf	postinc1,c
  4522  0115CC  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  4523  0115D0  0060  F007  FFE6   	movff	btemp,postinc1
  4524  0115D6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4525  0115DC  0E06               	movlw	6
  4526  0115DE  6EE6               	movwf	postinc1,c
  4527  0115E0  ECA2  F0CF         	call	_sprintf	;wreg free
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;main.c: 280:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4531  0115E4  EE21  F38F         	lfsr	2,_C+144	;volatile
  4532  0115E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4533  0115EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4534  0115F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4535  0115FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4536  011600  0E32               	movlw	low STR_11
  4537  011602  6EE6               	movwf	postinc1,c
  4538  011604  0EFE               	movlw	high STR_11
  4539  011606  6EE6               	movwf	postinc1,c
  4540  011608  0E00               	movlw	0
  4541  01160A  6EE6               	movwf	postinc1,c
  4542  01160C  0E01               	movlw	1
  4543  01160E  6EE6               	movwf	postinc1,c
  4544  011610  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  4545  011614  0060  F007  FFE6   	movff	btemp,postinc1
  4546  01161A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4547  011620  0E08               	movlw	8
  4548  011622  6EE6               	movwf	postinc1,c
  4549  011624  ECA2  F0CF         	call	_sprintf	;wreg free
  4550                           
  4551                           ; BSR set to: 0
  4552                           ;main.c: 281:    update_lcd(0);
  4553  011628  0E00               	movlw	0
  4554  01162A  6EE6               	movwf	postinc1,c
  4555  01162C  EC1A  F0CF         	call	_update_lcd	;wreg free
  4556                           
  4557                           ;main.c: 282:    WaitMs(2000);
  4558  011630  0ED0               	movlw	208
  4559  011632  6EE6               	movwf	postinc1,c
  4560  011634  0E07               	movlw	7
  4561  011636  6EE6               	movwf	postinc1,c
  4562  011638  EC7D  F0DE         	call	_WaitMs	;wreg free
  4563                           
  4564                           ;main.c: 283:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  4565  01163C  0EDF               	movlw	low STR_12
  4566  01163E  6EE6               	movwf	postinc1,c
  4567  011640  0EFE               	movlw	high STR_12
  4568  011642  6EE6               	movwf	postinc1,c
  4569  011644  0E00               	movlw	0
  4570  011646  6EE6               	movwf	postinc1,c
  4571  011648  0E00               	movlw	0
  4572  01164A  6EE6               	movwf	postinc1,c
  4573  01164C  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  4574  011650  0060  F007  FFE6   	movff	btemp,postinc1
  4575  011656  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4576  01165C  0E04               	movlw	4
  4577  01165E  6EE6               	movwf	postinc1,c
  4578  011660  ECA2  F0CF         	call	_sprintf	;wreg free
  4579                           
  4580                           ; BSR set to: 0
  4581                           ;main.c: 284:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  4582  011664  0EF4               	movlw	low STR_13
  4583  011666  6EE6               	movwf	postinc1,c
  4584  011668  0EFE               	movlw	high STR_13
  4585  01166A  6EE6               	movwf	postinc1,c
  4586  01166C  0E00               	movlw	0
  4587  01166E  6EE6               	movwf	postinc1,c
  4588  011670  0E01               	movlw	1
  4589  011672  6EE6               	movwf	postinc1,c
  4590  011674  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  4591  011678  0060  F007  FFE6   	movff	btemp,postinc1
  4592  01167E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4593  011684  0E04               	movlw	4
  4594  011686  6EE6               	movwf	postinc1,c
  4595  011688  ECA2  F0CF         	call	_sprintf	;wreg free
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;main.c: 285:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  4599  01168C  0E48               	movlw	low STR_14
  4600  01168E  6EE6               	movwf	postinc1,c
  4601  011690  0EFF               	movlw	high STR_14
  4602  011692  6EE6               	movwf	postinc1,c
  4603  011694  0E00               	movlw	0
  4604  011696  6EE6               	movwf	postinc1,c
  4605  011698  0E02               	movlw	2
  4606  01169A  6EE6               	movwf	postinc1,c
  4607  01169C  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  4608  0116A0  0060  F007  FFE6   	movff	btemp,postinc1
  4609  0116A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4610  0116AC  0E04               	movlw	4
  4611  0116AE  6EE6               	movwf	postinc1,c
  4612  0116B0  ECA2  F0CF         	call	_sprintf	;wreg free
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;main.c: 286:    update_lcd(0);
  4616  0116B4  0E00               	movlw	0
  4617  0116B6  6EE6               	movwf	postinc1,c
  4618  0116B8  EC1A  F0CF         	call	_update_lcd	;wreg free
  4619                           
  4620                           ;main.c: 287:    uint16_t i_esr = 1;
  4621  0116BC  0E01               	movlw	1
  4622  0116BE  6E0B               	movwf	(btemp+10)^0,c
  4623  0116C0  0E00               	movlw	0
  4624  0116C2  6E0C               	movwf	(btemp+11)^0,c
  4625                           
  4626                           ;stkvar	_i_esr @ sp[(-17)+8]
  4627  0116C4  0EF7               	movlw	-9
  4628  0116C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4629  0116CC  0EF8               	movlw	-8
  4630  0116CE  0060  F033  FFE3   	movff	btemp+11,plusw1
  4631                           
  4632                           ;main.c: 289:    float esr_temp;;main.c: 290:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4633  0116D4  D06D               	goto	l13485
  4634  0116D6                     l13473:
  4635                           
  4636                           ;main.c: 291:     WaitMs(110);
  4637  0116D6  0E6E               	movlw	110
  4638  0116D8  6EE6               	movwf	postinc1,c
  4639  0116DA  0E00               	movlw	0
  4640  0116DC  6EE6               	movwf	postinc1,c
  4641  0116DE  EC7D  F0DE         	call	_WaitMs	;wreg free
  4642                           
  4643                           ;main.c: 292:     shape = (uint8_t) fabsf(esr_temp);
  4644                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4645  0116E2  0EF3               	movlw	-13
  4646  0116E4  006F FF8F FFE6     	movff	plusw1,postinc1
  4647  0116EA  006F FF8F FFE6     	movff	plusw1,postinc1
  4648  0116F0  006F FF8F FFE6     	movff	plusw1,postinc1
  4649  0116F6  006F FF8F FFE6     	movff	plusw1,postinc1
  4650  0116FC  EC4E  F0D4         	call	_fabsf	;wreg free
  4651  011700  0060  F007  FFE6   	movff	btemp,postinc1
  4652  011706  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4653  01170C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4654  011712  0060  F013  FFE6   	movff	btemp+3,postinc1
  4655  011718  EC51  F0C8         	call	___fltol	;wreg free
  4656  01171C  0060  F004  F00C   	movff	btemp,btemp+11
  4657                           
  4658                           ;stkvar	_shape @ sp[(-17)+10]
  4659  011722  0EF9               	movlw	-7
  4660  011724  0060  F033  FFE3   	movff	btemp+11,plusw1
  4661                           
  4662                           ;main.c: 293:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4663  01172A  0E00               	movlw	0
  4664  01172C  6EE6               	movwf	postinc1,c
  4665                           
  4666                           ;stkvar	_shape @ sp[(-18)+10]
  4667  01172E  0EF8               	movlw	-8
  4668  011730  50E3               	movf	plusw1,w,c
  4669  011732  6EE6               	movwf	postinc1,c
  4670  011734  EC27  F0D0         	call	_spinners	;wreg free
  4671  011738  5001               	movf	btemp^0,w,c
  4672  01173A  6EE6               	movwf	postinc1,c
  4673  01173C  0E00               	movlw	0
  4674  01173E  6EE6               	movwf	postinc1,c
  4675  011740  0E00               	movlw	0
  4676  011742  6EE6               	movwf	postinc1,c
  4677  011744  0E00               	movlw	0
  4678  011746  6EE6               	movwf	postinc1,c
  4679  011748  EC27  F0D0         	call	_spinners	;wreg free
  4680  01174C  5001               	movf	btemp^0,w,c
  4681  01174E  6EE6               	movwf	postinc1,c
  4682  011750  0E00               	movlw	0
  4683  011752  6EE6               	movwf	postinc1,c
  4684  011754  0E33               	movlw	low STR_15
  4685  011756  6EE6               	movwf	postinc1,c
  4686  011758  0EFF               	movlw	high STR_15
  4687  01175A  6EE6               	movwf	postinc1,c
  4688  01175C  0E00               	movlw	0
  4689  01175E  6EE6               	movwf	postinc1,c
  4690  011760  0E02               	movlw	2
  4691  011762  6EE6               	movwf	postinc1,c
  4692  011764  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  4693  011768  0060  F007  FFE6   	movff	btemp,postinc1
  4694  01176E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4695  011774  0E08               	movlw	8
  4696  011776  6EE6               	movwf	postinc1,c
  4697  011778  ECA2  F0CF         	call	_sprintf	;wreg free
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;main.c: 294:     update_lcd(0);
  4701  01177C  0E00               	movlw	0
  4702  01177E  6EE6               	movwf	postinc1,c
  4703  011780  EC1A  F0CF         	call	_update_lcd	;wreg free
  4704                           
  4705                           ;main.c: 296:     if (i_esr++ > 512)
  4706                           ;stkvar	_i_esr @ sp[(-17)+8]
  4707  011784  50E1               	movf	fsr1l,w,c
  4708  011786  0FF7               	addlw	-9
  4709  011788  6ED9               	movwf	fsr2l,c
  4710  01178A  50E2               	movf	fsr1h,w,c
  4711  01178C  6EDA               	movwf	fsr2h,c
  4712  01178E  0EFF               	movlw	255
  4713  011790  22DA               	addwfc	fsr2h,f,c
  4714  011792  006F FF7C  F00B    	movff	indf2,btemp+10
  4715  011798  0E01               	movlw	1
  4716  01179A  26DE               	addwf	postinc2,f,c
  4717  01179C  006F FF7C  F00C    	movff	indf2,btemp+11
  4718  0117A2  0E00               	movlw	0
  4719  0117A4  22DD               	addwfc	postdec2,f,c
  4720  0117A6  040B               	decf	(btemp+10)^0,w,c
  4721  0117A8  0E02               	movlw	2
  4722  0117AA  580C               	subwfb	(btemp+11)^0,w,c
  4723  0117AC  B0D8               	btfsc	status,0,c
  4724  0117AE  D017               	goto	u12900
  4725  0117B0                     l13485:
  4726                           
  4727                           ;main.c: 290:    while ((esr_temp = esr_check(0)) < 0.0) {
  4728  0117B0  0E00               	movlw	0
  4729  0117B2  6EE6               	movwf	postinc1,c
  4730  0117B4  ECC4  F0B8         	call	_esr_check	;wreg free
  4731                           
  4732                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4733  0117B8  0EF3               	movlw	-13
  4734  0117BA  0060  F007  FFE3   	movff	btemp,plusw1
  4735  0117C0  0EF4               	movlw	-12
  4736  0117C2  0060  F00B  FFE3   	movff	btemp+1,plusw1
  4737  0117C8  0EF5               	movlw	-11
  4738  0117CA  0060  F00F  FFE3   	movff	btemp+2,plusw1
  4739  0117D0  0EF6               	movlw	-10
  4740  0117D2  0060  F013  FFE3   	movff	btemp+3,plusw1
  4741  0117D8  0EF6               	movlw	-10
  4742  0117DA  BEE3               	btfsc	plusw1,7,c
  4743  0117DC  D77C               	goto	l13473
  4744  0117DE                     u12900:
  4745                           
  4746                           ;main.c: 299:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4747  0117DE  EE21  F387         	lfsr	2,_C+136	;volatile
  4748  0117E2  006F FF7B FFE6     	movff	postinc2,postinc1
  4749  0117E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4750  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4751  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4752  0117FA  0E40               	movlw	low STR_16
  4753  0117FC  6EE6               	movwf	postinc1,c
  4754  0117FE  0EFD               	movlw	high STR_16
  4755  011800  6EE6               	movwf	postinc1,c
  4756  011802  0E00               	movlw	0
  4757  011804  6EE6               	movwf	postinc1,c
  4758  011806  0E00               	movlw	0
  4759  011808  6EE6               	movwf	postinc1,c
  4760  01180A  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  4761  01180E  0060  F007  FFE6   	movff	btemp,postinc1
  4762  011814  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4763  01181A  0E08               	movlw	8
  4764  01181C  6EE6               	movwf	postinc1,c
  4765  01181E  ECA2  F0CF         	call	_sprintf	;wreg free
  4766                           
  4767                           ;main.c: 300:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4768  011822  EE22  F00D         	lfsr	2,_C+270	;volatile
  4769  011826  006F FF7B FFE6     	movff	postinc2,postinc1
  4770  01182C  006F FF7B FFE6     	movff	postinc2,postinc1
  4771  011832  006F FF7B FFE6     	movff	postinc2,postinc1
  4772  011838  006F FF7B FFE6     	movff	postinc2,postinc1
  4773  01183E  EE22  F019         	lfsr	2,_C+282	;volatile
  4774  011842  006F FF7B FFE6     	movff	postinc2,postinc1
  4775  011848  006F FF7B FFE6     	movff	postinc2,postinc1
  4776  01184E  006F FF7B FFE6     	movff	postinc2,postinc1
  4777  011854  006F FF7B FFE6     	movff	postinc2,postinc1
  4778  01185A  0E67               	movlw	low STR_17
  4779  01185C  6EE6               	movwf	postinc1,c
  4780  01185E  0EFC               	movlw	high STR_17
  4781  011860  6EE6               	movwf	postinc1,c
  4782  011862  0E00               	movlw	0
  4783  011864  6EE6               	movwf	postinc1,c
  4784  011866  0E01               	movlw	1
  4785  011868  6EE6               	movwf	postinc1,c
  4786  01186A  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  4787  01186E  0060  F007  FFE6   	movff	btemp,postinc1
  4788  011874  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4789  01187A  0E0C               	movlw	12
  4790  01187C  6EE6               	movwf	postinc1,c
  4791  01187E  ECA2  F0CF         	call	_sprintf	;wreg free
  4792                           
  4793                           ;main.c: 301:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4794  011882  EE22  F011         	lfsr	2,_C+274	;volatile
  4795  011886  006F FF7B FFE6     	movff	postinc2,postinc1
  4796  01188C  006F FF7B FFE6     	movff	postinc2,postinc1
  4797  011892  006F FF7B FFE6     	movff	postinc2,postinc1
  4798  011898  006F FF7B FFE6     	movff	postinc2,postinc1
  4799  01189E  EE22  F01D         	lfsr	2,_C+286	;volatile
  4800  0118A2  006F FF7B FFE6     	movff	postinc2,postinc1
  4801  0118A8  006F FF7B FFE6     	movff	postinc2,postinc1
  4802  0118AE  006F FF7B FFE6     	movff	postinc2,postinc1
  4803  0118B4  006F FF7B FFE6     	movff	postinc2,postinc1
  4804  0118BA  0E81               	movlw	low STR_18
  4805  0118BC  6EE6               	movwf	postinc1,c
  4806  0118BE  0EFC               	movlw	high STR_18
  4807  0118C0  6EE6               	movwf	postinc1,c
  4808  0118C2  0E00               	movlw	0
  4809  0118C4  6EE6               	movwf	postinc1,c
  4810  0118C6  0E02               	movlw	2
  4811  0118C8  6EE6               	movwf	postinc1,c
  4812  0118CA  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  4813  0118CE  0060  F007  FFE6   	movff	btemp,postinc1
  4814  0118D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4815  0118DA  0E0C               	movlw	12
  4816  0118DC  6EE6               	movwf	postinc1,c
  4817  0118DE  ECA2  F0CF         	call	_sprintf	;wreg free
  4818                           
  4819                           ;main.c: 302:    update_lcd(0);
  4820  0118E2  0E00               	movlw	0
  4821  0118E4  6EE6               	movwf	postinc1,c
  4822  0118E6  EC1A  F0CF         	call	_update_lcd	;wreg free
  4823                           
  4824                           ;main.c: 303:    WaitMs(5000);
  4825  0118EA  0E88               	movlw	136
  4826  0118EC  6EE6               	movwf	postinc1,c
  4827  0118EE  0E13               	movlw	19
  4828  0118F0  6EE6               	movwf	postinc1,c
  4829  0118F2  EC7D  F0DE         	call	_WaitMs	;wreg free
  4830                           
  4831                           ;main.c: 304:    V.system_stable = 1;
  4832  0118F6  0E01               	movlw	1
  4833  0118F8  0101               	movlb	1	; () banked
  4834  0118FA  6FB5               	movwf	(_V+174)& (0+255),b	;volatile
  4835                           
  4836                           ;main.c: 305:    break;
  4837  0118FC  D01B               	goto	l13497
  4838  0118FE                     l1348:
  4839                           
  4840                           ; BSR set to: 1
  4841                           ;main.c: 311:    P.SYSTEM_STABLE = 1;
  4842  0118FE  81F0               	bsf	(_P+1)& (0+255),0,b	;volatile
  4843                           
  4844                           ;main.c: 312:    break;
  4845  011900  D019               	goto	l13497
  4846  011902                     l1350:
  4847                           
  4848                           ; BSR set to: 1
  4849                           ;main.c: 315:    V.ui_state = UI_STATE_INIT;
  4850  011902  6B07               	clrf	_V& (0+255),b	;volatile
  4851                           
  4852                           ;main.c: 316:    break;
  4853  011904  D017               	goto	l13497
  4854  011906                     l13495:
  4855  011906  0101               	movlb	1	; () banked
  4856  011908  5107               	movf	_V& (0+255),w,b	;volatile
  4857  01190A  6E0B               	movwf	(btemp+10)^0,c
  4858  01190C  6A0C               	clrf	(btemp+11)^0,c
  4859                           
  4860                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4861                           ; Switch size 1, requested type "simple"
  4862                           ; Number of cases is 1, Range of values is 0 to 0
  4863                           ; switch strategies available:
  4864                           ; Name         Instructions Cycles
  4865                           ; simple_byte            4     3 (average)
  4866                           ;	Chosen strategy is simple_byte
  4867  01190E  500C               	movf	(btemp+11)^0,w,c
  4868  011910  0A00               	xorlw	0	; case 0
  4869  011912  A4D8               	btfss	status,2,c
  4870  011914  D7F6               	goto	l1350
  4871                           
  4872                           ; BSR set to: 1
  4873                           ; Switch size 1, requested type "simple"
  4874                           ; Number of cases is 5, Range of values is 0 to 5
  4875                           ; switch strategies available:
  4876                           ; Name         Instructions Cycles
  4877                           ; simple_byte           16     9 (average)
  4878                           ;	Chosen strategy is simple_byte
  4879  011916  500B               	movf	(btemp+10)^0,w,c
  4880  011918  0A00               	xorlw	0	; case 0
  4881  01191A  B4D8               	btfsc	status,2,c
  4882  01191C  D4CF               	goto	l13377
  4883  01191E  0A01               	xorlw	1	; case 1
  4884  011920  B4D8               	btfsc	status,2,c
  4885  011922  D008               	goto	l13497
  4886  011924  0A02               	xorlw	2	; case 3
  4887  011926  B4D8               	btfsc	status,2,c
  4888  011928  D005               	goto	l13497
  4889  01192A  0A07               	xorlw	7	; case 4
  4890  01192C  B4D8               	btfsc	status,2,c
  4891  01192E  D7E7               	goto	l1348
  4892  011930  0A01               	xorlw	1	; case 5
  4893  011932  D7E7               	goto	l1350
  4894  011934                     l13497:
  4895                           
  4896                           ; BSR set to: 1
  4897                           ;main.c: 319:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4898  011934  0E01               	movlw	1
  4899  011936  6EE6               	movwf	postinc1,c
  4900  011938  ECE3  F0DF         	call	_TimerDone	;wreg free
  4901  01193C  5001               	movf	btemp^0,w,c
  4902  01193E  B4D8               	btfsc	status,2,c
  4903  011940  D013               	goto	l13509
  4904  011942  ECD1  F0E2         	call	_check_adc_scan	;wreg free
  4905  011946  5001               	movf	btemp^0,w,c
  4906  011948  B4D8               	btfsc	status,2,c
  4907  01194A  D00E               	goto	l13509
  4908                           
  4909                           ;main.c: 323:    convert_adc_data();
  4910  01194C  ECF2  F0D3         	call	_convert_adc_data	;wreg free
  4911                           
  4912                           ;main.c: 327:    clear_adc_scan();
  4913  011950  ECE1  F0E2         	call	_clear_adc_scan	;wreg free
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;main.c: 328:    start_adc_scan();
  4917  011954  EC04  F0DA         	call	_start_adc_scan	;wreg free
  4918                           
  4919                           ;main.c: 329:    StartTimer(TMR_ADC, 200);
  4920  011958  0EC8               	movlw	200
  4921  01195A  6EE6               	movwf	postinc1,c
  4922  01195C  0E00               	movlw	0
  4923  01195E  6EE6               	movwf	postinc1,c
  4924  011960  0E01               	movlw	1
  4925  011962  6EE6               	movwf	postinc1,c
  4926  011964  EC8E  F0DD         	call	_StartTimer	;wreg free
  4927  011968                     l13509:
  4928                           
  4929                           ;main.c: 336:   if (TimerDone(TMR_DISPLAY)) {
  4930                           
  4931                           ;main.c: 332:   if (V.ticks) {
  4932  011968  0E0A               	movlw	10
  4933  01196A  6EE6               	movwf	postinc1,c
  4934  01196C  ECE3  F0DF         	call	_TimerDone	;wreg free
  4935  011970  5001               	movf	btemp^0,w,c
  4936  011972  B4D8               	btfsc	status,2,c
  4937  011974  EF69  F091         	goto	l13593
  4938                           
  4939                           ;main.c: 337:    if (TimerDone(TMR_HELPDIS)) {
  4940  011978  0E09               	movlw	9
  4941  01197A  6EE6               	movwf	postinc1,c
  4942  01197C  ECE3  F0DF         	call	_TimerDone	;wreg free
  4943  011980  5001               	movf	btemp^0,w,c
  4944  011982  B4D8               	btfsc	status,2,c
  4945  011984  D004               	goto	l13517
  4946                           
  4947                           ;main.c: 338:     set_display_info(DIS_STR);
  4948  011986  0E00               	movlw	0
  4949  011988  6EE6               	movwf	postinc1,c
  4950  01198A  ECE8  F0E1         	call	_set_display_info	;wreg free
  4951  01198E                     l13517:
  4952                           
  4953                           ;main.c: 340:    calc_model_data();
  4954  01198E  EC5F  F0AE         	call	_calc_model_data	;wreg free
  4955                           
  4956                           ; BSR set to: 57
  4957                           ;main.c: 347:     hid_display(&H);
  4958                           
  4959                           ;main.c: 342:    if (0) {
  4960  011992  0EC6               	movlw	low _H
  4961  011994  6EE6               	movwf	postinc1,c
  4962  011996  0E01               	movlw	high _H
  4963  011998  6EE6               	movwf	postinc1,c
  4964  01199A  EC67  F0C3         	call	_hid_display	;wreg free
  4965                           
  4966                           ;main.c: 348:     switch (H.hid_display) {
  4967  01199E  EFFF  F090         	goto	l13565
  4968  0119A2                     l1358:
  4969                           
  4970                           ; BSR set to: 1
  4971                           ;main.c: 350:      V.calib = 0;
  4972  0119A2  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  4973                           
  4974                           ; BSR set to: 1
  4975                           ;main.c: 351:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  4976  0119A4  EE22  F021         	lfsr	2,_C+290	;volatile
  4977  0119A8  50DF               	movf	indf2,w,c
  4978  0119AA  A4D8               	btfss	status,2,c
  4979  0119AC  D002               	goto	l13527
  4980                           
  4981                           ; BSR set to: 1
  4982  0119AE  0E20               	movlw	32
  4983  0119B0  D001               	goto	L1
  4984  0119B2                     l13527:
  4985                           
  4986                           ; BSR set to: 1
  4987  0119B2  0E44               	movlw	68
  4988  0119B4                     L1:
  4989  0119B4  6E0B               	movwf	(btemp+10)^0,c
  4990  0119B6  0E00               	movlw	0
  4991  0119B8  6E0C               	movwf	(btemp+11)^0,c
  4992                           
  4993                           ;stkvar	_main$3770 @ sp[(-17)+2]
  4994  0119BA  0EF1               	movlw	-15
  4995  0119BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4996  0119C2  0EF2               	movlw	-14
  4997  0119C4  0060  F033  FFE3   	movff	btemp+11,plusw1
  4998                           
  4999                           ; BSR set to: 1
  5000  0119CA  EE21  F37B         	lfsr	2,_C+124	;volatile
  5001  0119CE  006F FF7B FFE6     	movff	postinc2,postinc1
  5002  0119D4  006F FF7B FFE6     	movff	postinc2,postinc1
  5003  0119DA  006F FF7B FFE6     	movff	postinc2,postinc1
  5004  0119E0  006F FF7B FFE6     	movff	postinc2,postinc1
  5005                           
  5006                           ;stkvar	_main$3770 @ sp[(-21)+2]
  5007  0119E6  0EED               	movlw	-19
  5008  0119E8  006F FF8F FFE6     	movff	plusw1,postinc1
  5009  0119EE  006F FF8F FFE6     	movff	plusw1,postinc1
  5010  0119F4  0E1C               	movlw	low STR_22
  5011  0119F6  6EE6               	movwf	postinc1,c
  5012  0119F8  0EFE               	movlw	high STR_22
  5013  0119FA  6EE6               	movwf	postinc1,c
  5014  0119FC  0E00               	movlw	0
  5015  0119FE  6EE6               	movwf	postinc1,c
  5016  011A00  0E00               	movlw	0
  5017  011A02  6EE6               	movwf	postinc1,c
  5018  011A04  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  5019  011A08  0060  F007  FFE6   	movff	btemp,postinc1
  5020  011A0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5021  011A14  0E0A               	movlw	10
  5022  011A16  6EE6               	movwf	postinc1,c
  5023  011A18  ECA2  F0CF         	call	_sprintf	;wreg free
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;main.c: 352:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  5027  011A1C  EE21  F373         	lfsr	2,_C+116	;volatile
  5028  011A20  006F FF7B FFE6     	movff	postinc2,postinc1
  5029  011A26  006F FF7B FFE6     	movff	postinc2,postinc1
  5030  011A2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5031  011A32  006F FF7B FFE6     	movff	postinc2,postinc1
  5032  011A38  0E06               	movlw	low STR_23
  5033  011A3A  6EE6               	movwf	postinc1,c
  5034  011A3C  0EFE               	movlw	high STR_23
  5035  011A3E  6EE6               	movwf	postinc1,c
  5036  011A40  0E00               	movlw	0
  5037  011A42  6EE6               	movwf	postinc1,c
  5038  011A44  0E01               	movlw	1
  5039  011A46  6EE6               	movwf	postinc1,c
  5040  011A48  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  5041  011A4C  0060  F007  FFE6   	movff	btemp,postinc1
  5042  011A52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5043  011A58  0E08               	movlw	8
  5044  011A5A  6EE6               	movwf	postinc1,c
  5045  011A5C  ECA2  F0CF         	call	_sprintf	;wreg free
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;main.c: 353:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  5049  011A60  EE21  F377         	lfsr	2,_C+120	;volatile
  5050  011A64  006F FF7B FFE6     	movff	postinc2,postinc1
  5051  011A6A  006F FF7B FFE6     	movff	postinc2,postinc1
  5052  011A70  006F FF7B FFE6     	movff	postinc2,postinc1
  5053  011A76  006F FF7B FFE6     	movff	postinc2,postinc1
  5054  011A7C  0EF0               	movlw	low STR_24
  5055  011A7E  6EE6               	movwf	postinc1,c
  5056  011A80  0EFD               	movlw	high STR_24
  5057  011A82  6EE6               	movwf	postinc1,c
  5058  011A84  0E00               	movlw	0
  5059  011A86  6EE6               	movwf	postinc1,c
  5060  011A88  0E02               	movlw	2
  5061  011A8A  6EE6               	movwf	postinc1,c
  5062  011A8C  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  5063  011A90  0060  F007  FFE6   	movff	btemp,postinc1
  5064  011A96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5065  011A9C  0E08               	movlw	8
  5066  011A9E  6EE6               	movwf	postinc1,c
  5067  011AA0  ECA2  F0CF         	call	_sprintf	;wreg free
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;main.c: 355:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5071  011AA4  EE22  F021         	lfsr	2,_C+290	;volatile
  5072  011AA8  50DF               	movf	indf2,w,c
  5073  011AAA  A4D8               	btfss	status,2,c
  5074  011AAC  D002               	goto	l13539
  5075                           
  5076                           ; BSR set to: 0
  5077  011AAE  0E20               	movlw	32
  5078  011AB0  D001               	goto	L2
  5079  011AB2                     l13539:
  5080                           
  5081                           ; BSR set to: 0
  5082  011AB2  0E44               	movlw	68
  5083  011AB4                     L2:
  5084  011AB4  6E0B               	movwf	(btemp+10)^0,c
  5085  011AB6  0E00               	movlw	0
  5086  011AB8  6E0C               	movwf	(btemp+11)^0,c
  5087                           
  5088                           ;stkvar	_main$3774 @ sp[(-17)+0]
  5089  011ABA  0EEF               	movlw	-17
  5090  011ABC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5091  011AC2  0EF0               	movlw	-16
  5092  011AC4  0060  F033  FFE3   	movff	btemp+11,plusw1
  5093                           
  5094                           ; BSR set to: 0
  5095  011ACA  EE21  F3A7         	lfsr	2,_C+168	;volatile
  5096  011ACE  006F FF7B FFE6     	movff	postinc2,postinc1
  5097  011AD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5098  011ADA  006F FF7B FFE6     	movff	postinc2,postinc1
  5099  011AE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5100                           
  5101                           ;stkvar	_main$3774 @ sp[(-21)+0]
  5102  011AE6  0EEB               	movlw	-21
  5103  011AE8  006F FF8F FFE6     	movff	plusw1,postinc1
  5104  011AEE  006F FF8F FFE6     	movff	plusw1,postinc1
  5105  011AF4  0EDA               	movlw	low STR_25
  5106  011AF6  6EE6               	movwf	postinc1,c
  5107  011AF8  0EFD               	movlw	high STR_25
  5108  011AFA  6EE6               	movwf	postinc1,c
  5109  011AFC  0E01               	movlw	1
  5110  011AFE  6EE6               	movwf	postinc1,c
  5111  011B00  0E00               	movlw	0
  5112  011B02  6EE6               	movwf	postinc1,c
  5113  011B04  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  5114  011B08  0060  F007  FFE6   	movff	btemp,postinc1
  5115  011B0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5116  011B14  0E0A               	movlw	10
  5117  011B16  6EE6               	movwf	postinc1,c
  5118  011B18  ECA2  F0CF         	call	_sprintf	;wreg free
  5119                           
  5120                           ; BSR set to: 0
  5121                           ;main.c: 356:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5122  011B1C  EE21  F3AF         	lfsr	2,_C+176	;volatile
  5123  011B20  006F FF7B FFE6     	movff	postinc2,postinc1
  5124  011B26  006F FF7B FFE6     	movff	postinc2,postinc1
  5125  011B2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5126  011B32  006F FF7B FFE6     	movff	postinc2,postinc1
  5127  011B38  0EC4               	movlw	low STR_26
  5128  011B3A  6EE6               	movwf	postinc1,c
  5129  011B3C  0EFD               	movlw	high STR_26
  5130  011B3E  6EE6               	movwf	postinc1,c
  5131  011B40  0E01               	movlw	1
  5132  011B42  6EE6               	movwf	postinc1,c
  5133  011B44  0E01               	movlw	1
  5134  011B46  6EE6               	movwf	postinc1,c
  5135  011B48  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  5136  011B4C  0060  F007  FFE6   	movff	btemp,postinc1
  5137  011B52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5138  011B58  0E08               	movlw	8
  5139  011B5A  6EE6               	movwf	postinc1,c
  5140  011B5C  ECA2  F0CF         	call	_sprintf	;wreg free
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;main.c: 357:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5144  011B60  EE21  F3AB         	lfsr	2,_C+172	;volatile
  5145  011B64  006F FF7B FFE6     	movff	postinc2,postinc1
  5146  011B6A  006F FF7B FFE6     	movff	postinc2,postinc1
  5147  011B70  006F FF7B FFE6     	movff	postinc2,postinc1
  5148  011B76  006F FF7B FFE6     	movff	postinc2,postinc1
  5149  011B7C  0EAE               	movlw	low STR_27
  5150  011B7E  6EE6               	movwf	postinc1,c
  5151  011B80  0EFD               	movlw	high STR_27
  5152  011B82  6EE6               	movwf	postinc1,c
  5153  011B84  0E01               	movlw	1
  5154  011B86  6EE6               	movwf	postinc1,c
  5155  011B88  0E02               	movlw	2
  5156  011B8A  6EE6               	movwf	postinc1,c
  5157  011B8C  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  5158  011B90  0060  F007  FFE6   	movff	btemp,postinc1
  5159  011B96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5160  011B9C  0E08               	movlw	8
  5161  011B9E  6EE6               	movwf	postinc1,c
  5162  011BA0  ECA2  F0CF         	call	_sprintf	;wreg free
  5163                           
  5164                           ;main.c: 358:      break;
  5165  011BA4  D342               	goto	l13567
  5166  011BA6                     l1368:
  5167                           
  5168                           ; BSR set to: 1
  5169                           ;main.c: 360:      V.calib = 0;
  5170  011BA6  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5171                           
  5172                           ; BSR set to: 1
  5173                           ;main.c: 361:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5174  011BA8  EE21  F303         	lfsr	2,_C+4	;volatile
  5175  011BAC  006F FF7B FFE6     	movff	postinc2,postinc1
  5176  011BB2  006F FF7B FFE6     	movff	postinc2,postinc1
  5177  011BB8  006F FF7B FFE6     	movff	postinc2,postinc1
  5178  011BBE  006F FF7B FFE6     	movff	postinc2,postinc1
  5179  011BC4  EE21  F313         	lfsr	2,_C+20	;volatile
  5180  011BC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5181  011BCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5182  011BD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5183  011BDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5184  011BE0  0E74               	movlw	low STR_28
  5185  011BE2  6EE6               	movwf	postinc1,c
  5186  011BE4  0EFE               	movlw	high STR_28
  5187  011BE6  6EE6               	movwf	postinc1,c
  5188  011BE8  0E00               	movlw	0
  5189  011BEA  6EE6               	movwf	postinc1,c
  5190  011BEC  0E00               	movlw	0
  5191  011BEE  6EE6               	movwf	postinc1,c
  5192  011BF0  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  5193  011BF4  0060  F007  FFE6   	movff	btemp,postinc1
  5194  011BFA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5195  011C00  0E0C               	movlw	12
  5196  011C02  6EE6               	movwf	postinc1,c
  5197  011C04  ECA2  F0CF         	call	_sprintf	;wreg free
  5198                           
  5199                           ;main.c: 362:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5200  011C08  EE21  F2FF         	lfsr	2,_C
  5201  011C0C  006F FF7B FFE6     	movff	postinc2,postinc1
  5202  011C12  006F FF7B FFE6     	movff	postinc2,postinc1
  5203  011C18  006F FF7B FFE6     	movff	postinc2,postinc1
  5204  011C1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5205  011C24  EE21  F30F         	lfsr	2,_C+16	;volatile
  5206  011C28  006F FF7B FFE6     	movff	postinc2,postinc1
  5207  011C2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5208  011C34  006F FF7B FFE6     	movff	postinc2,postinc1
  5209  011C3A  006F FF7B FFE6     	movff	postinc2,postinc1
  5210  011C40  0E48               	movlw	low STR_29
  5211  011C42  6EE6               	movwf	postinc1,c
  5212  011C44  0EFE               	movlw	high STR_29
  5213  011C46  6EE6               	movwf	postinc1,c
  5214  011C48  0E00               	movlw	0
  5215  011C4A  6EE6               	movwf	postinc1,c
  5216  011C4C  0E01               	movlw	1
  5217  011C4E  6EE6               	movwf	postinc1,c
  5218  011C50  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  5219  011C54  0060  F007  FFE6   	movff	btemp,postinc1
  5220  011C5A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5221  011C60  0E0C               	movlw	12
  5222  011C62  6EE6               	movwf	postinc1,c
  5223  011C64  ECA2  F0CF         	call	_sprintf	;wreg free
  5224                           
  5225                           ;main.c: 363:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5226  011C68  EE21  F33F         	lfsr	2,_C+64	;volatile
  5227  011C6C  006F FF7B FFE6     	movff	postinc2,postinc1
  5228  011C72  006F FF7B FFE6     	movff	postinc2,postinc1
  5229  011C78  006F FF7B FFE6     	movff	postinc2,postinc1
  5230  011C7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5231  011C84  EE21  F307         	lfsr	2,_C+8	;volatile
  5232  011C88  006F FF7B FFE6     	movff	postinc2,postinc1
  5233  011C8E  006F FF7B FFE6     	movff	postinc2,postinc1
  5234  011C94  006F FF7B FFE6     	movff	postinc2,postinc1
  5235  011C9A  006F FF7B FFE6     	movff	postinc2,postinc1
  5236  011CA0  0E5E               	movlw	low STR_30
  5237  011CA2  6EE6               	movwf	postinc1,c
  5238  011CA4  0EFE               	movlw	high STR_30
  5239  011CA6  6EE6               	movwf	postinc1,c
  5240  011CA8  0E00               	movlw	0
  5241  011CAA  6EE6               	movwf	postinc1,c
  5242  011CAC  0E02               	movlw	2
  5243  011CAE  6EE6               	movwf	postinc1,c
  5244  011CB0  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  5245  011CB4  0060  F007  FFE6   	movff	btemp,postinc1
  5246  011CBA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5247  011CC0  0E0C               	movlw	12
  5248  011CC2  6EE6               	movwf	postinc1,c
  5249  011CC4  ECA2  F0CF         	call	_sprintf	;wreg free
  5250                           
  5251                           ;main.c: 365:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  5252  011CC8  EE21  F39F         	lfsr	2,_C+160	;volatile
  5253  011CCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5254  011CD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5255  011CD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5256  011CDE  006F FF7B FFE6     	movff	postinc2,postinc1
  5257  011CE4  0E6C               	movlw	low STR_31
  5258  011CE6  6EE6               	movwf	postinc1,c
  5259  011CE8  0EFD               	movlw	high STR_31
  5260  011CEA  6EE6               	movwf	postinc1,c
  5261  011CEC  0E01               	movlw	1
  5262  011CEE  6EE6               	movwf	postinc1,c
  5263  011CF0  0E00               	movlw	0
  5264  011CF2  6EE6               	movwf	postinc1,c
  5265  011CF4  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  5266  011CF8  0060  F007  FFE6   	movff	btemp,postinc1
  5267  011CFE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5268  011D04  0E08               	movlw	8
  5269  011D06  6EE6               	movwf	postinc1,c
  5270  011D08  ECA2  F0CF         	call	_sprintf	;wreg free
  5271                           
  5272                           ;main.c: 366:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  5273  011D0C  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5274  011D10  006F FF7B FFE6     	movff	postinc2,postinc1
  5275  011D16  006F FF7B FFE6     	movff	postinc2,postinc1
  5276  011D1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5277  011D22  006F FF7B FFE6     	movff	postinc2,postinc1
  5278  011D28  0E82               	movlw	low STR_32
  5279  011D2A  6EE6               	movwf	postinc1,c
  5280  011D2C  0EFD               	movlw	high STR_32
  5281  011D2E  6EE6               	movwf	postinc1,c
  5282  011D30  0E01               	movlw	1
  5283  011D32  6EE6               	movwf	postinc1,c
  5284  011D34  0E01               	movlw	1
  5285  011D36  6EE6               	movwf	postinc1,c
  5286  011D38  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  5287  011D3C  0060  F007  FFE6   	movff	btemp,postinc1
  5288  011D42  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5289  011D48  0E08               	movlw	8
  5290  011D4A  6EE6               	movwf	postinc1,c
  5291  011D4C  ECA2  F0CF         	call	_sprintf	;wreg free
  5292                           
  5293                           ;main.c: 367:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  5294  011D50  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5295  011D54  006F FF7B FFE6     	movff	postinc2,postinc1
  5296  011D5A  006F FF7B FFE6     	movff	postinc2,postinc1
  5297  011D60  006F FF7B FFE6     	movff	postinc2,postinc1
  5298  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
  5299  011D6C  EE21  F39F         	lfsr	2,_C+160	;volatile
  5300  011D70  006F FF7B FFE6     	movff	postinc2,postinc1
  5301  011D76  006F FF7B FFE6     	movff	postinc2,postinc1
  5302  011D7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5303  011D82  006F FF7B FFE6     	movff	postinc2,postinc1
  5304  011D88  ECFA  F0A2         	call	___fladd	;wreg free
  5305  011D8C  0060  F007  FFE6   	movff	btemp,postinc1
  5306  011D92  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5307  011D98  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5308  011D9E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5309  011DA4  0E98               	movlw	low STR_33
  5310  011DA6  6EE6               	movwf	postinc1,c
  5311  011DA8  0EFD               	movlw	high STR_33
  5312  011DAA  6EE6               	movwf	postinc1,c
  5313  011DAC  0E01               	movlw	1
  5314  011DAE  6EE6               	movwf	postinc1,c
  5315  011DB0  0E02               	movlw	2
  5316  011DB2  6EE6               	movwf	postinc1,c
  5317  011DB4  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  5318  011DB8  0060  F007  FFE6   	movff	btemp,postinc1
  5319  011DBE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5320  011DC4  0E08               	movlw	8
  5321  011DC6  6EE6               	movwf	postinc1,c
  5322  011DC8  ECA2  F0CF         	call	_sprintf	;wreg free
  5323                           
  5324                           ;main.c: 368:      break;
  5325  011DCC  D22E               	goto	l13567
  5326  011DCE                     l1369:
  5327                           
  5328                           ; BSR set to: 1
  5329                           ;main.c: 370:      V.calib = 0;
  5330  011DCE  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5331                           
  5332                           ; BSR set to: 1
  5333                           ;main.c: 371:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  5334  011DD0  EE21  F37F         	lfsr	2,_C+128	;volatile
  5335  011DD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5336  011DDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5337  011DE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5338  011DE6  006F FF7B FFE6     	movff	postinc2,postinc1
  5339  011DEC  0EE4               	movlw	low STR_34
  5340  011DEE  6EE6               	movwf	postinc1,c
  5341  011DF0  0EFC               	movlw	high STR_34
  5342  011DF2  6EE6               	movwf	postinc1,c
  5343  011DF4  0E00               	movlw	0
  5344  011DF6  6EE6               	movwf	postinc1,c
  5345  011DF8  0E00               	movlw	0
  5346  011DFA  6EE6               	movwf	postinc1,c
  5347  011DFC  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  5348  011E00  0060  F007  FFE6   	movff	btemp,postinc1
  5349  011E06  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5350  011E0C  0E08               	movlw	8
  5351  011E0E  6EE6               	movwf	postinc1,c
  5352  011E10  ECA2  F0CF         	call	_sprintf	;wreg free
  5353                           
  5354                           ;main.c: 372:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  5355  011E14  EE21  F393         	lfsr	2,_C+148	;volatile
  5356  011E18  006F FF7B FFE6     	movff	postinc2,postinc1
  5357  011E1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5358  011E24  006F FF7B FFE6     	movff	postinc2,postinc1
  5359  011E2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5360  011E30  EE21  F38F         	lfsr	2,_C+144	;volatile
  5361  011E34  006F FF7B FFE6     	movff	postinc2,postinc1
  5362  011E3A  006F FF7B FFE6     	movff	postinc2,postinc1
  5363  011E40  006F FF7B FFE6     	movff	postinc2,postinc1
  5364  011E46  006F FF7B FFE6     	movff	postinc2,postinc1
  5365  011E4C  0E29               	movlw	low STR_35
  5366  011E4E  6EE6               	movwf	postinc1,c
  5367  011E50  0EFD               	movlw	high STR_35
  5368  011E52  6EE6               	movwf	postinc1,c
  5369  011E54  0E00               	movlw	0
  5370  011E56  6EE6               	movwf	postinc1,c
  5371  011E58  0E01               	movlw	1
  5372  011E5A  6EE6               	movwf	postinc1,c
  5373  011E5C  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  5374  011E60  0060  F007  FFE6   	movff	btemp,postinc1
  5375  011E66  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5376  011E6C  0E0C               	movlw	12
  5377  011E6E  6EE6               	movwf	postinc1,c
  5378  011E70  ECA2  F0CF         	call	_sprintf	;wreg free
  5379                           
  5380                           ;main.c: 373:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  5381  011E74  EE21  F30F         	lfsr	2,_C+16	;volatile
  5382  011E78  006F FF7B FFE6     	movff	postinc2,postinc1
  5383  011E7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5384  011E84  006F FF7B FFE6     	movff	postinc2,postinc1
  5385  011E8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5386  011E90  EE21  F3B3         	lfsr	2,_C+180	;volatile
  5387  011E94  006F FF78  F00B    	movff	postinc2,btemp+10
  5388  011E9A  006F FF74  F00C    	movff	postdec2,btemp+11
  5389  011EA0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5390  011EA6  0060  F033  FFE6   	movff	btemp+11,postinc1
  5391  011EAC  EE21  F3B5         	lfsr	2,_C+182	;volatile
  5392  011EB0  006F FF78  F00B    	movff	postinc2,btemp+10
  5393  011EB6  006F FF74  F00C    	movff	postdec2,btemp+11
  5394  011EBC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5395  011EC2  0060  F033  FFE6   	movff	btemp+11,postinc1
  5396  011EC8  0E00               	movlw	0
  5397  011ECA  6EE6               	movwf	postinc1,c
  5398  011ECC  0E05               	movlw	5
  5399  011ECE  6EE6               	movwf	postinc1,c
  5400  011ED0  EC27  F0D0         	call	_spinners	;wreg free
  5401  011ED4  5001               	movf	btemp^0,w,c
  5402  011ED6  6EE6               	movwf	postinc1,c
  5403  011ED8  0E00               	movlw	0
  5404  011EDA  6EE6               	movwf	postinc1,c
  5405  011EDC  0E4A               	movlw	low STR_36
  5406  011EDE  6EE6               	movwf	postinc1,c
  5407  011EE0  0EFC               	movlw	high STR_36
  5408  011EE2  6EE6               	movwf	postinc1,c
  5409  011EE4  0E00               	movlw	0
  5410  011EE6  6EE6               	movwf	postinc1,c
  5411  011EE8  0E02               	movlw	2
  5412  011EEA  6EE6               	movwf	postinc1,c
  5413  011EEC  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  5414  011EF0  0060  F007  FFE6   	movff	btemp,postinc1
  5415  011EF6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5416  011EFC  0E0E               	movlw	14
  5417  011EFE  6EE6               	movwf	postinc1,c
  5418  011F00  ECA2  F0CF         	call	_sprintf	;wreg free
  5419                           
  5420                           ;main.c: 375:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  5421  011F04  EE21  F387         	lfsr	2,_C+136	;volatile
  5422  011F08  006F FF7B FFE6     	movff	postinc2,postinc1
  5423  011F0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5424  011F14  006F FF7B FFE6     	movff	postinc2,postinc1
  5425  011F1A  006F FF7B FFE6     	movff	postinc2,postinc1
  5426  011F20  0ECD               	movlw	low STR_37
  5427  011F22  6EE6               	movwf	postinc1,c
  5428  011F24  0EFC               	movlw	high STR_37
  5429  011F26  6EE6               	movwf	postinc1,c
  5430  011F28  0E01               	movlw	1
  5431  011F2A  6EE6               	movwf	postinc1,c
  5432  011F2C  0E00               	movlw	0
  5433  011F2E  6EE6               	movwf	postinc1,c
  5434  011F30  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  5435  011F34  0060  F007  FFE6   	movff	btemp,postinc1
  5436  011F3A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5437  011F40  0E08               	movlw	8
  5438  011F42  6EE6               	movwf	postinc1,c
  5439  011F44  ECA2  F0CF         	call	_sprintf	;wreg free
  5440                           
  5441                           ;main.c: 376:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  5442  011F48  EE22  F00D         	lfsr	2,_C+270	;volatile
  5443  011F4C  006F FF7B FFE6     	movff	postinc2,postinc1
  5444  011F52  006F FF7B FFE6     	movff	postinc2,postinc1
  5445  011F58  006F FF7B FFE6     	movff	postinc2,postinc1
  5446  011F5E  006F FF7B FFE6     	movff	postinc2,postinc1
  5447  011F64  EE22  F019         	lfsr	2,_C+282	;volatile
  5448  011F68  006F FF7B FFE6     	movff	postinc2,postinc1
  5449  011F6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5450  011F74  006F FF7B FFE6     	movff	postinc2,postinc1
  5451  011F7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5452  011F80  0EFB               	movlw	low STR_38
  5453  011F82  6EE6               	movwf	postinc1,c
  5454  011F84  0EFC               	movlw	high STR_38
  5455  011F86  6EE6               	movwf	postinc1,c
  5456  011F88  0E01               	movlw	1
  5457  011F8A  6EE6               	movwf	postinc1,c
  5458  011F8C  0E01               	movlw	1
  5459  011F8E  6EE6               	movwf	postinc1,c
  5460  011F90  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  5461  011F94  0060  F007  FFE6   	movff	btemp,postinc1
  5462  011F9A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5463  011FA0  0E0C               	movlw	12
  5464  011FA2  6EE6               	movwf	postinc1,c
  5465  011FA4  ECA2  F0CF         	call	_sprintf	;wreg free
  5466                           
  5467                           ;main.c: 377:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  5468  011FA8  EE22  F011         	lfsr	2,_C+274	;volatile
  5469  011FAC  006F FF7B FFE6     	movff	postinc2,postinc1
  5470  011FB2  006F FF7B FFE6     	movff	postinc2,postinc1
  5471  011FB8  006F FF7B FFE6     	movff	postinc2,postinc1
  5472  011FBE  006F FF7B FFE6     	movff	postinc2,postinc1
  5473  011FC4  EE22  F01D         	lfsr	2,_C+286	;volatile
  5474  011FC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5475  011FCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5476  011FD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5477  011FDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5478  011FE0  0E12               	movlw	low STR_39
  5479  011FE2  6EE6               	movwf	postinc1,c
  5480  011FE4  0EFD               	movlw	high STR_39
  5481  011FE6  6EE6               	movwf	postinc1,c
  5482  011FE8  0E01               	movlw	1
  5483  011FEA  6EE6               	movwf	postinc1,c
  5484  011FEC  0E02               	movlw	2
  5485  011FEE  6EE6               	movwf	postinc1,c
  5486  011FF0  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  5487  011FF4  0060  F007  FFE6   	movff	btemp,postinc1
  5488  011FFA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5489  012000  0E0C               	movlw	12
  5490  012002  6EE6               	movwf	postinc1,c
  5491  012004  ECA2  F0CF         	call	_sprintf	;wreg free
  5492                           
  5493                           ;main.c: 378:      break;
  5494  012008  D110               	goto	l13567
  5495  01200A                     l13551:
  5496                           
  5497                           ; BSR set to: 1
  5498                           ;main.c: 380:      if (!V.calib) {
  5499  01200A  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  5500  01200C  A4D8               	btfss	status,2,c
  5501  01200E  D02D               	goto	l13555
  5502                           
  5503                           ; BSR set to: 1
  5504                           ;main.c: 381:       lp_filter(0.0, i, -1);
  5505  012010  0EFF               	movlw	255
  5506  012012  6EE6               	movwf	postinc1,c
  5507                           
  5508                           ;stkvar	_i @ sp[(-18)+14]
  5509  012014  0EFC               	movlw	-4
  5510  012016  50E3               	movf	plusw1,w,c
  5511  012018  6EE6               	movwf	postinc1,c
  5512  01201A  0E00               	movlw	0
  5513  01201C  6EE6               	movwf	postinc1,c
  5514  01201E  0E00               	movlw	0
  5515  012020  6EE6               	movwf	postinc1,c
  5516  012022  0E00               	movlw	0
  5517  012024  6EE6               	movwf	postinc1,c
  5518  012026  0E00               	movlw	0
  5519  012028  6EE6               	movwf	postinc1,c
  5520  01202A  EC55  F0C4         	call	_lp_filter	;wreg free
  5521                           
  5522                           ;main.c: 382:       lp_filter(0.0, j, -1);
  5523  01202E  0EFF               	movlw	255
  5524  012030  6EE6               	movwf	postinc1,c
  5525                           
  5526                           ;stkvar	_j @ sp[(-18)+13]
  5527  012032  0EFB               	movlw	-5
  5528  012034  50E3               	movf	plusw1,w,c
  5529  012036  6EE6               	movwf	postinc1,c
  5530  012038  0E00               	movlw	0
  5531  01203A  6EE6               	movwf	postinc1,c
  5532  01203C  0E00               	movlw	0
  5533  01203E  6EE6               	movwf	postinc1,c
  5534  012040  0E00               	movlw	0
  5535  012042  6EE6               	movwf	postinc1,c
  5536  012044  0E00               	movlw	0
  5537  012046  6EE6               	movwf	postinc1,c
  5538  012048  EC55  F0C4         	call	_lp_filter	;wreg free
  5539                           
  5540                           ;main.c: 383:       lp_filter(0.0, k, -1);
  5541  01204C  0EFF               	movlw	255
  5542  01204E  6EE6               	movwf	postinc1,c
  5543                           
  5544                           ;stkvar	_k @ sp[(-18)+12]
  5545  012050  0EFA               	movlw	-6
  5546  012052  50E3               	movf	plusw1,w,c
  5547  012054  6EE6               	movwf	postinc1,c
  5548  012056  0E00               	movlw	0
  5549  012058  6EE6               	movwf	postinc1,c
  5550  01205A  0E00               	movlw	0
  5551  01205C  6EE6               	movwf	postinc1,c
  5552  01205E  0E00               	movlw	0
  5553  012060  6EE6               	movwf	postinc1,c
  5554  012062  0E00               	movlw	0
  5555  012064  6EE6               	movwf	postinc1,c
  5556  012066  EC55  F0C4         	call	_lp_filter	;wreg free
  5557  01206A                     l13555:
  5558                           
  5559                           ;main.c: 385:      V.calib = 1;
  5560  01206A  0E01               	movlw	1
  5561  01206C  0101               	movlb	1	; () banked
  5562  01206E  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  5563                           
  5564                           ; BSR set to: 1
  5565                           ;main.c: 386:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index + 1);
  5566                           ;stkvar	_inp_index @ sp[(-17)+11]
  5567  012070  0EFA               	movlw	-6
  5568  012072  50E3               	movf	plusw1,w,c
  5569  012074  6E0B               	movwf	(btemp+10)^0,c
  5570  012076  6A0C               	clrf	(btemp+11)^0,c
  5571  012078  0E01               	movlw	1
  5572  01207A  260B               	addwf	(btemp+10)^0,f,c
  5573  01207C  0E00               	movlw	0
  5574  01207E  220C               	addwfc	(btemp+11)^0,f,c
  5575  012080  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5576  012086  0060  F033  FFE6   	movff	btemp+11,postinc1
  5577                           
  5578                           ;stkvar	_i @ sp[(-19)+14]
  5579  01208C  0EFB               	movlw	-5
  5580  01208E  50E3               	movf	plusw1,w,c
  5581  012090  0D04               	mullw	4
  5582  012092  0EFF               	movlw	low _C
  5583  012094  24F3               	addwf	243,w,c
  5584  012096  6ED9               	movwf	fsr2l,c
  5585  012098  0E06               	movlw	high _C
  5586  01209A  20F4               	addwfc	prodh,w,c
  5587  01209C  6EDA               	movwf	fsr2h,c
  5588  01209E  006F FF7B FFE6     	movff	postinc2,postinc1
  5589  0120A4  006F FF7B FFE6     	movff	postinc2,postinc1
  5590  0120AA  006F FF7B FFE6     	movff	postinc2,postinc1
  5591  0120B0  006F FF7B FFE6     	movff	postinc2,postinc1
  5592                           
  5593                           ;stkvar	_i @ sp[(-23)+14]
  5594  0120B6  0EF7               	movlw	-9
  5595  0120B8  50E3               	movf	plusw1,w,c
  5596  0120BA  6EE6               	movwf	postinc1,c
  5597  0120BC  ECF7  F0E1         	call	_get_raw_result	;wreg free
  5598  0120C0  0060  F007  FFE6   	movff	btemp,postinc1
  5599  0120C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5600  0120CC  0E8A               	movlw	low STR_40
  5601  0120CE  6EE6               	movwf	postinc1,c
  5602  0120D0  0EFE               	movlw	high STR_40
  5603  0120D2  6EE6               	movwf	postinc1,c
  5604  0120D4  0E00               	movlw	0
  5605  0120D6  6EE6               	movwf	postinc1,c
  5606  0120D8  0E00               	movlw	0
  5607  0120DA  6EE6               	movwf	postinc1,c
  5608  0120DC  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  5609  0120E0  0060  F007  FFE6   	movff	btemp,postinc1
  5610  0120E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5611  0120EC  0E0C               	movlw	12
  5612  0120EE  6EE6               	movwf	postinc1,c
  5613  0120F0  ECA2  F0CF         	call	_sprintf	;wreg free
  5614                           
  5615                           ; BSR set to: 0
  5616                           ;main.c: 387:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 2);
  5617                           ;stkvar	_inp_index @ sp[(-17)+11]
  5618  0120F4  0EFA               	movlw	-6
  5619  0120F6  50E3               	movf	plusw1,w,c
  5620  0120F8  6E0B               	movwf	(btemp+10)^0,c
  5621  0120FA  6A0C               	clrf	(btemp+11)^0,c
  5622  0120FC  0E02               	movlw	2
  5623  0120FE  260B               	addwf	(btemp+10)^0,f,c
  5624  012100  0E00               	movlw	0
  5625  012102  220C               	addwfc	(btemp+11)^0,f,c
  5626  012104  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5627  01210A  0060  F033  FFE6   	movff	btemp+11,postinc1
  5628                           
  5629                           ;stkvar	_j @ sp[(-19)+13]
  5630  012110  0EFA               	movlw	-6
  5631  012112  50E3               	movf	plusw1,w,c
  5632  012114  0D04               	mullw	4
  5633  012116  0EFF               	movlw	low _C
  5634  012118  24F3               	addwf	243,w,c
  5635  01211A  6ED9               	movwf	fsr2l,c
  5636  01211C  0E06               	movlw	high _C
  5637  01211E  20F4               	addwfc	prodh,w,c
  5638  012120  6EDA               	movwf	fsr2h,c
  5639  012122  006F FF7B FFE6     	movff	postinc2,postinc1
  5640  012128  006F FF7B FFE6     	movff	postinc2,postinc1
  5641  01212E  006F FF7B FFE6     	movff	postinc2,postinc1
  5642  012134  006F FF7B FFE6     	movff	postinc2,postinc1
  5643                           
  5644                           ;stkvar	_j @ sp[(-23)+13]
  5645  01213A  0EF6               	movlw	-10
  5646  01213C  50E3               	movf	plusw1,w,c
  5647  01213E  6EE6               	movwf	postinc1,c
  5648  012140  ECF7  F0E1         	call	_get_raw_result	;wreg free
  5649  012144  0060  F007  FFE6   	movff	btemp,postinc1
  5650  01214A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5651  012150  0E8A               	movlw	low STR_40
  5652  012152  6EE6               	movwf	postinc1,c
  5653  012154  0EFE               	movlw	high STR_40
  5654  012156  6EE6               	movwf	postinc1,c
  5655  012158  0E00               	movlw	0
  5656  01215A  6EE6               	movwf	postinc1,c
  5657  01215C  0E01               	movlw	1
  5658  01215E  6EE6               	movwf	postinc1,c
  5659  012160  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  5660  012164  0060  F007  FFE6   	movff	btemp,postinc1
  5661  01216A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5662  012170  0E0C               	movlw	12
  5663  012172  6EE6               	movwf	postinc1,c
  5664  012174  ECA2  F0CF         	call	_sprintf	;wreg free
  5665                           
  5666                           ; BSR set to: 0
  5667                           ;main.c: 388:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 3);
  5668                           ;stkvar	_inp_index @ sp[(-17)+11]
  5669  012178  0EFA               	movlw	-6
  5670  01217A  50E3               	movf	plusw1,w,c
  5671  01217C  6E0B               	movwf	(btemp+10)^0,c
  5672  01217E  6A0C               	clrf	(btemp+11)^0,c
  5673  012180  0E03               	movlw	3
  5674  012182  260B               	addwf	(btemp+10)^0,f,c
  5675  012184  0E00               	movlw	0
  5676  012186  220C               	addwfc	(btemp+11)^0,f,c
  5677  012188  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5678  01218E  0060  F033  FFE6   	movff	btemp+11,postinc1
  5679                           
  5680                           ;stkvar	_k @ sp[(-19)+12]
  5681  012194  0EF9               	movlw	-7
  5682  012196  50E3               	movf	plusw1,w,c
  5683  012198  0D04               	mullw	4
  5684  01219A  0EFF               	movlw	low _C
  5685  01219C  24F3               	addwf	243,w,c
  5686  01219E  6ED9               	movwf	fsr2l,c
  5687  0121A0  0E06               	movlw	high _C
  5688  0121A2  20F4               	addwfc	prodh,w,c
  5689  0121A4  6EDA               	movwf	fsr2h,c
  5690  0121A6  006F FF7B FFE6     	movff	postinc2,postinc1
  5691  0121AC  006F FF7B FFE6     	movff	postinc2,postinc1
  5692  0121B2  006F FF7B FFE6     	movff	postinc2,postinc1
  5693  0121B8  006F FF7B FFE6     	movff	postinc2,postinc1
  5694                           
  5695                           ;stkvar	_k @ sp[(-23)+12]
  5696  0121BE  0EF5               	movlw	-11
  5697  0121C0  50E3               	movf	plusw1,w,c
  5698  0121C2  6EE6               	movwf	postinc1,c
  5699  0121C4  ECF7  F0E1         	call	_get_raw_result	;wreg free
  5700  0121C8  0060  F007  FFE6   	movff	btemp,postinc1
  5701  0121CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5702  0121D4  0E8A               	movlw	low STR_40
  5703  0121D6  6EE6               	movwf	postinc1,c
  5704  0121D8  0EFE               	movlw	high STR_40
  5705  0121DA  6EE6               	movwf	postinc1,c
  5706  0121DC  0E00               	movlw	0
  5707  0121DE  6EE6               	movwf	postinc1,c
  5708  0121E0  0E02               	movlw	2
  5709  0121E2  6EE6               	movwf	postinc1,c
  5710  0121E4  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  5711  0121E8  0060  F007  FFE6   	movff	btemp,postinc1
  5712  0121EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5713  0121F4  0E0C               	movlw	12
  5714  0121F6  6EE6               	movwf	postinc1,c
  5715  0121F8  ECA2  F0CF         	call	_sprintf	;wreg free
  5716                           
  5717                           ;main.c: 389:      break;
  5718  0121FC  D016               	goto	l13567
  5719  0121FE                     l13565:
  5720  0121FE  0101               	movlb	1	; () banked
  5721  012200  51C6               	movf	_H& (0+255),w,b
  5722  012202  6E0B               	movwf	(btemp+10)^0,c
  5723  012204  6A0C               	clrf	(btemp+11)^0,c
  5724                           
  5725                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5726                           ; Switch size 1, requested type "simple"
  5727                           ; Number of cases is 1, Range of values is 0 to 0
  5728                           ; switch strategies available:
  5729                           ; Name         Instructions Cycles
  5730                           ; simple_byte            4     3 (average)
  5731                           ;	Chosen strategy is simple_byte
  5732  012206  500C               	movf	(btemp+11)^0,w,c
  5733  012208  0A00               	xorlw	0	; case 0
  5734  01220A  A4D8               	btfss	status,2,c
  5735  01220C  D00E               	goto	l13567
  5736                           
  5737                           ; BSR set to: 1
  5738                           ; Switch size 1, requested type "simple"
  5739                           ; Number of cases is 4, Range of values is 0 to 3
  5740                           ; switch strategies available:
  5741                           ; Name         Instructions Cycles
  5742                           ; simple_byte           13     7 (average)
  5743                           ;	Chosen strategy is simple_byte
  5744  01220E  500B               	movf	(btemp+10)^0,w,c
  5745  012210  0A00               	xorlw	0	; case 0
  5746  012212  B4D8               	btfsc	status,2,c
  5747  012214  D4C8               	goto	l1368
  5748  012216  0A01               	xorlw	1	; case 1
  5749  012218  B4D8               	btfsc	status,2,c
  5750  01221A  EFD1  F08C         	goto	l1358
  5751  01221E  0A03               	xorlw	3	; case 2
  5752  012220  B4D8               	btfsc	status,2,c
  5753  012222  D5D5               	goto	l1369
  5754  012224  0A01               	xorlw	1	; case 3
  5755  012226  B4D8               	btfsc	status,2,c
  5756  012228  D6F0               	goto	l13551
  5757  01222A                     l13567:
  5758                           
  5759                           ;main.c: 393:     clear_hid_pflags(&H);
  5760  01222A  0EC6               	movlw	low _H
  5761  01222C  6EE6               	movwf	postinc1,c
  5762  01222E  0E01               	movlw	high _H
  5763  012230  6EE6               	movwf	postinc1,c
  5764  012232  ECA2  F0DC         	call	_clear_hid_pflags	;wreg free
  5765                           
  5766                           ;main.c: 395:    StartTimer(TMR_DISPLAY, 250);
  5767  012236  0EFA               	movlw	250
  5768  012238  6EE6               	movwf	postinc1,c
  5769  01223A  0E00               	movlw	0
  5770  01223C  6EE6               	movwf	postinc1,c
  5771  01223E  0E0A               	movlw	10
  5772  012240  6EE6               	movwf	postinc1,c
  5773  012242  EC8E  F0DD         	call	_StartTimer	;wreg free
  5774                           
  5775                           ;main.c: 396:    V.enter = check_enter_button(&H);
  5776  012246  0EC6               	movlw	low _H
  5777  012248  6EE6               	movwf	postinc1,c
  5778  01224A  0E01               	movlw	high _H
  5779  01224C  6EE6               	movwf	postinc1,c
  5780  01224E  ECF9  F0D8         	call	_check_enter_button	;wreg free
  5781  012252  5001               	movf	btemp^0,w,c
  5782  012254  0101               	movlb	1	; () banked
  5783  012256  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  5784                           
  5785                           ; BSR set to: 1
  5786                           ;main.c: 397:    if (V.enter && (H.hid_display != HID_AUX)) {
  5787  012258  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5788  01225A  B4D8               	btfsc	status,2,c
  5789  01225C  D011               	goto	l13581
  5790                           
  5791                           ; BSR set to: 1
  5792  01225E  0E03               	movlw	3
  5793  012260  19C6               	xorwf	_H& (0+255),w,b
  5794  012262  B4D8               	btfsc	status,2,c
  5795  012264  D00D               	goto	l13581
  5796                           
  5797                           ; BSR set to: 1
  5798                           ;main.c: 398:     V.enter = 0;
  5799  012266  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5800                           
  5801                           ; BSR set to: 1
  5802                           ;main.c: 399:     V.screen = ~V.screen;
  5803  012268  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5804  01226A  D002               	goto	u13000
  5805  01226C  0E01               	movlw	1
  5806  01226E  D001               	goto	u13006
  5807  012270                     u13000:
  5808  012270  0E00               	movlw	0
  5809  012272                     u13006:
  5810  012272  0AFF               	xorlw	255
  5811  012274  6E0C               	movwf	(btemp+11)^0,c
  5812  012276  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  5813  012278  180C               	xorwf	(btemp+11)^0,w,c
  5814  01227A  0BFE               	andlw	-2
  5815  01227C  180C               	xorwf	(btemp+11)^0,w,c
  5816  01227E  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  5817  012280                     l13581:
  5818                           
  5819                           ; BSR set to: 1
  5820                           ;main.c: 401:    set_vterm(V.screen);
  5821  012280  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5822  012282  D002               	goto	u13010
  5823  012284  0E01               	movlw	1
  5824  012286  D001               	goto	u13016
  5825  012288                     u13010:
  5826  012288  0E00               	movlw	0
  5827  01228A                     u13016:
  5828  01228A  6EE6               	movwf	postinc1,c
  5829  01228C  ECD9  F0E1         	call	_set_vterm	;wreg free
  5830                           
  5831                           ;main.c: 402:    update_lcd(V.screen);
  5832  012290  0101               	movlb	1	; () banked
  5833  012292  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5834  012294  D002               	goto	u13020
  5835  012296  0E01               	movlw	1
  5836  012298  D001               	goto	u13026
  5837  01229A                     u13020:
  5838  01229A  0E00               	movlw	0
  5839  01229C                     u13026:
  5840  01229C  6EE6               	movwf	postinc1,c
  5841  01229E  EC1A  F0CF         	call	_update_lcd	;wreg free
  5842                           
  5843                           ;main.c: 404:    wait_lcd_done();
  5844  0122A2  EC68  F0E1         	call	_wait_lcd_done	;wreg free
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;main.c: 405:    set_dac_a(1.00);
  5848  0122A6  0E00               	movlw	0
  5849  0122A8  6EE6               	movwf	postinc1,c
  5850  0122AA  0E00               	movlw	0
  5851  0122AC  6EE6               	movwf	postinc1,c
  5852  0122AE  0E80               	movlw	128
  5853  0122B0  6EE6               	movwf	postinc1,c
  5854  0122B2  0E3F               	movlw	63
  5855  0122B4  6EE6               	movwf	postinc1,c
  5856  0122B6  ECCC  F0DE         	call	_set_dac_a	;wreg free
  5857                           
  5858                           ;main.c: 406:    set_dac_b(2.00);
  5859  0122BA  0E00               	movlw	0
  5860  0122BC  6EE6               	movwf	postinc1,c
  5861  0122BE  0E00               	movlw	0
  5862  0122C0  6EE6               	movwf	postinc1,c
  5863  0122C2  0E00               	movlw	0
  5864  0122C4  6EE6               	movwf	postinc1,c
  5865  0122C6  0E40               	movlw	64
  5866  0122C8  6EE6               	movwf	postinc1,c
  5867  0122CA  ECB2  F0DE         	call	_set_dac_b	;wreg free
  5868                           
  5869                           ;main.c: 407:    set_dac();
  5870  0122CE  ECA5  F0D4         	call	_set_dac	;wreg free
  5871  0122D2                     l13593:
  5872                           
  5873                           ;main.c: 413:   check_help(V.flipper);
  5874  0122D2  0101               	movlb	1	; () banked
  5875  0122D4  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  5876  0122D6  6EE6               	movwf	postinc1,c
  5877  0122D8  EC5C  F0C1         	call	_check_help	;wreg free
  5878                           
  5879                           ;main.c: 415:   if (V.enter) {
  5880  0122DC  0101               	movlb	1	; () banked
  5881  0122DE  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5882  0122E0  B4D8               	btfsc	status,2,c
  5883  0122E2  D062               	goto	l1374
  5884                           
  5885                           ; BSR set to: 1
  5886                           ;main.c: 416:    V.enter = 0;
  5887  0122E4  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5888                           
  5889                           ;main.c: 417:    V.calib = 0;
  5890  0122E6  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5891                           
  5892                           ; BSR set to: 1
  5893                           ;main.c: 418:    inp_index += 3;
  5894                           ;stkvar	_inp_index @ sp[(-17)+11]
  5895  0122E8  0EFA               	movlw	-6
  5896  0122EA  006F FF8C  F001    	movff	plusw1,btemp
  5897  0122F0  0E03               	movlw	3
  5898  0122F2  2601               	addwf	btemp^0,f,c
  5899  0122F4  0EFA               	movlw	-6
  5900  0122F6  0060  F007  FFE3   	movff	btemp,plusw1
  5901                           
  5902                           ;main.c: 419:    if (inp_index > 9)
  5903                           ;stkvar	_inp_index @ sp[(-17)+11]
  5904  0122FC  0EFA               	movlw	-6
  5905  0122FE  006F FF8C  F001    	movff	plusw1,btemp
  5906  012304  0E09               	movlw	9
  5907  012306  6401               	cpfsgt	btemp^0,c
  5908  012308  D03A               	goto	l13621
  5909                           
  5910                           ; BSR set to: 1
  5911                           ;main.c: 420:     inp_index = 0;
  5912                           ;stkvar	_inp_index @ sp[(-17)+11]
  5913  01230A  0EFA               	movlw	-6
  5914  01230C  6AE3               	clrf	plusw1,c
  5915  01230E  D037               	goto	l13621
  5916  012310                     l13603:
  5917                           
  5918                           ; BSR set to: 1
  5919                           ;main.c: 423:     i = C_BATT;
  5920                           ;stkvar	_i @ sp[(-17)+14]
  5921  012310  0EFD               	movlw	-3
  5922  012312  6AE3               	clrf	plusw1,c
  5923                           
  5924                           ; BSR set to: 1
  5925                           ;main.c: 424:     j = C_PV;
  5926                           ;stkvar	_j @ sp[(-17)+13]
  5927  012314  0EFC               	movlw	-4
  5928  012316  6AE3               	clrf	plusw1,c
  5929  012318  2AE3               	incf	plusw1,f,c
  5930                           
  5931                           ; BSR set to: 1
  5932                           ;main.c: 425:     k = V_CC;
  5933                           ;stkvar	_k @ sp[(-17)+12]
  5934  01231A  0EFB               	movlw	-5
  5935  01231C  6AE3               	clrf	plusw1,c
  5936  01231E  82E3               	bsf	plusw1,1,c
  5937                           
  5938                           ;main.c: 426:     break;
  5939  012320  D043               	goto	l1374
  5940  012322                     l13609:
  5941                           
  5942                           ; BSR set to: 1
  5943                           ;main.c: 428:     i = V_BAT;
  5944                           ;stkvar	_i @ sp[(-17)+14]
  5945  012322  0EFD               	movlw	-3
  5946  012324  6AE3               	clrf	plusw1,c
  5947  012326  84E3               	bsf	plusw1,2,c
  5948                           
  5949                           ;main.c: 429:     j = V_PV;
  5950                           ;stkvar	_j @ sp[(-17)+13]
  5951  012328  0EFC               	movlw	-4
  5952  01232A  6AE3               	clrf	plusw1,c
  5953  01232C  80E3               	bsf	plusw1,0,c
  5954  01232E  84E3               	bsf	plusw1,2,c	;indir
  5955                           
  5956                           ;main.c: 430:     k = V_CBUS;
  5957                           ;stkvar	_k @ sp[(-17)+12]
  5958  012330  0EFB               	movlw	-5
  5959  012332  6AE3               	clrf	plusw1,c
  5960  012334  82E3               	bsf	plusw1,1,c
  5961  012336  84E3               	bsf	plusw1,2,c	;indir
  5962                           
  5963                           ;main.c: 431:     break;
  5964  012338  D037               	goto	l1374
  5965  01233A                     l13611:
  5966                           
  5967                           ; BSR set to: 1
  5968                           ;main.c: 433:     i = V_BBAT;
  5969                           ;stkvar	_i @ sp[(-17)+14]
  5970  01233A  0EFD               	movlw	-3
  5971  01233C  6AE3               	clrf	plusw1,c
  5972  01233E  82E3               	bsf	plusw1,1,c
  5973  012340  86E3               	bsf	plusw1,3,c	;indir
  5974                           
  5975                           ; BSR set to: 1
  5976                           ;main.c: 434:     j = V_TEMP;
  5977  012342  0E0B               	movlw	11
  5978  012344  6E0C               	movwf	(btemp+11)^0,c
  5979                           
  5980                           ;stkvar	_j @ sp[(-17)+13]
  5981  012346  0EFC               	movlw	-4
  5982  012348  0060  F033  FFE3   	movff	btemp+11,plusw1
  5983                           
  5984                           ; BSR set to: 1
  5985                           ;main.c: 435:     k = V_INVERTER;
  5986                           ;stkvar	_k @ sp[(-17)+12]
  5987  01234E  0EFB               	movlw	-5
  5988  012350  6AE3               	clrf	plusw1,c
  5989  012352  84E3               	bsf	plusw1,2,c
  5990  012354  86E3               	bsf	plusw1,3,c	;indir
  5991                           
  5992                           ;main.c: 436:     break;
  5993  012356  D028               	goto	l1374
  5994  012358                     l13617:
  5995                           
  5996                           ; BSR set to: 1
  5997                           ;main.c: 438:     i = V_LIGHT_SENSOR;
  5998  012358  0E0D               	movlw	13
  5999  01235A  6E0C               	movwf	(btemp+11)^0,c
  6000                           
  6001                           ;stkvar	_i @ sp[(-17)+14]
  6002  01235C  0EFD               	movlw	-3
  6003  01235E  0060  F033  FFE3   	movff	btemp+11,plusw1
  6004                           
  6005                           ;main.c: 439:     j = V_LIGHT_SENSOR;
  6006  012364  0E0D               	movlw	13
  6007  012366  6E0C               	movwf	(btemp+11)^0,c
  6008                           
  6009                           ;stkvar	_j @ sp[(-17)+13]
  6010  012368  0EFC               	movlw	-4
  6011  01236A  0060  F033  FFE3   	movff	btemp+11,plusw1
  6012                           
  6013                           ;main.c: 440:     k = V_LIGHT_SENSOR;
  6014  012370  0E0D               	movlw	13
  6015  012372  6E0C               	movwf	(btemp+11)^0,c
  6016                           
  6017                           ;stkvar	_k @ sp[(-17)+12]
  6018  012374  0EFB               	movlw	-5
  6019  012376  0060  F033  FFE3   	movff	btemp+11,plusw1
  6020                           
  6021                           ;main.c: 441:     break;
  6022  01237C  D015               	goto	l1374
  6023  01237E                     l13621:
  6024                           
  6025                           ; BSR set to: 1
  6026                           ;stkvar	_inp_index @ sp[(-17)+11]
  6027  01237E  0EFA               	movlw	-6
  6028  012380  50E3               	movf	plusw1,w,c
  6029  012382  6E0B               	movwf	(btemp+10)^0,c
  6030  012384  6A0C               	clrf	(btemp+11)^0,c
  6031                           
  6032                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6033                           ; Switch size 1, requested type "simple"
  6034                           ; Number of cases is 1, Range of values is 0 to 0
  6035                           ; switch strategies available:
  6036                           ; Name         Instructions Cycles
  6037                           ; simple_byte            4     3 (average)
  6038                           ;	Chosen strategy is simple_byte
  6039  012386  500C               	movf	(btemp+11)^0,w,c
  6040  012388  0A00               	xorlw	0	; case 0
  6041  01238A  A4D8               	btfss	status,2,c
  6042  01238C  D00D               	goto	l1374
  6043                           
  6044                           ; BSR set to: 1
  6045                           ; Switch size 1, requested type "simple"
  6046                           ; Number of cases is 4, Range of values is 0 to 9
  6047                           ; switch strategies available:
  6048                           ; Name         Instructions Cycles
  6049                           ; simple_byte           13     7 (average)
  6050                           ;	Chosen strategy is simple_byte
  6051  01238E  500B               	movf	(btemp+10)^0,w,c
  6052  012390  0A00               	xorlw	0	; case 0
  6053  012392  B4D8               	btfsc	status,2,c
  6054  012394  D7BD               	goto	l13603
  6055  012396  0A03               	xorlw	3	; case 3
  6056  012398  B4D8               	btfsc	status,2,c
  6057  01239A  D7C3               	goto	l13609
  6058  01239C  0A05               	xorlw	5	; case 6
  6059  01239E  B4D8               	btfsc	status,2,c
  6060  0123A0  D7CC               	goto	l13611
  6061  0123A2  0A0F               	xorlw	15	; case 9
  6062  0123A4  B4D8               	btfsc	status,2,c
  6063  0123A6  D7D8               	goto	l13617
  6064  0123A8                     l1374:
  6065                           
  6066                           ; BSR set to: 1
  6067                           ;main.c: 450:   if (V.set_sequ) {
  6068  0123A8  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  6069  0123AA  EF83  F08C         	goto	l13495
  6070                           
  6071                           ; BSR set to: 1
  6072                           ;main.c: 451:    if (TimerDone(TMR_INFO)) {
  6073  0123AE  0E07               	movlw	7
  6074  0123B0  6EE6               	movwf	postinc1,c
  6075  0123B2  ECE3  F0DF         	call	_TimerDone	;wreg free
  6076  0123B6  5001               	movf	btemp^0,w,c
  6077  0123B8  B4D8               	btfsc	status,2,c
  6078  0123BA  D00C               	goto	l13631
  6079                           
  6080                           ;main.c: 452:     V.set_sequ = 0;
  6081  0123BC  0101               	movlb	1	; () banked
  6082  0123BE  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  6083                           
  6084                           ; BSR set to: 1
  6085                           ;main.c: 453:     set_vterm(0);
  6086  0123C0  0E00               	movlw	0
  6087  0123C2  6EE6               	movwf	postinc1,c
  6088  0123C4  ECD9  F0E1         	call	_set_vterm	;wreg free
  6089                           
  6090                           ;main.c: 454:     update_lcd(0);
  6091  0123C8  0E00               	movlw	0
  6092  0123CA  6EE6               	movwf	postinc1,c
  6093  0123CC  EC1A  F0CF         	call	_update_lcd	;wreg free
  6094                           
  6095                           ;main.c: 455:    } else {
  6096  0123D0  EF83  F08C         	goto	l13495
  6097  0123D4                     l13631:
  6098                           
  6099                           ;main.c: 456:     set_vterm(2);
  6100  0123D4  0E02               	movlw	2
  6101  0123D6  6EE6               	movwf	postinc1,c
  6102  0123D8  ECD9  F0E1         	call	_set_vterm	;wreg free
  6103                           
  6104                           ;main.c: 457:     update_lcd(2);
  6105  0123DC  0E02               	movlw	2
  6106  0123DE  6EE6               	movwf	postinc1,c
  6107  0123E0  EC1A  F0CF         	call	_update_lcd	;wreg free
  6108  0123E4  EF83  F08C         	goto	l13495
  6109  0123E8                     __end_of_main:
  6110                           	opt callstack 0
  6111                           
  6112 ;; *************** function _static_soc *****************
  6113 ;; Defined at:
  6114 ;;		line 117 in file "mbmc.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;		None
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;		None
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  1  [STACK] void 
  6121 ;; Registers used:
  6122 ;;		wreg, fsr2l, fsr2h
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6132 ;;Total ram usage:        0 bytes
  6133 ;; Hardware stack levels used:    1
  6134 ;; Hardware stack levels required when called:   15
  6135 ;; This function calls:
  6136 ;;		Nothing
  6137 ;; This function is called by:
  6138 ;;		_main
  6139 ;; This function uses a reentrant model
  6140 ;;
  6141                           
  6142                           	psect	text1
  6143  01B590                     __ptext1:
  6144                           	opt callstack 0
  6145  01B590                     _static_soc:
  6146                           	opt callstack 15
  6147                           
  6148                           ;mbmc.c: 119:  C.runtime = 120;
  6149                           
  6150                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6151                           ;incstack = 0
  6152  01B590  0E78               	movlw	120
  6153  01B592  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
  6154  01B598  0E00               	movlw	0
  6155  01B59A  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
  6156                           
  6157                           ;mbmc.c: 120:  C.soc = 100;
  6158  01B5A0  0E64               	movlw	100
  6159  01B5A2  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
  6160  01B5A8  0E00               	movlw	0
  6161  01B5AA  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
  6162                           
  6163                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  6164  01B5B0  EE21  F38B         	lfsr	2,_C+140	;volatile
  6165  01B5B4  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  6166  01B5BA  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  6167  01B5C0  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  6168  01B5C6  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  6169                           
  6170                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  6171  01B5CC  EE21  F38F         	lfsr	2,_C+144	;volatile
  6172  01B5D0  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  6173  01B5D6  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  6174  01B5DC  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  6175  01B5E2  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  6176                           
  6177                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6178  01B5E8  0012               	return		;funcret
  6179  01B5EA                     __end_of_static_soc:
  6180                           	opt callstack 0
  6181                           
  6182 ;; *************** function _start_switch_handler *****************
  6183 ;; Defined at:
  6184 ;;		line 122 in file "dio.c"
  6185 ;; Parameters:    Size  Location     Type
  6186 ;;		None
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;		None
  6189 ;; Return value:  Size  Location     Type
  6190 ;;                  1  [STACK] void 
  6191 ;; Registers used:
  6192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6193 ;; Tracked objects:
  6194 ;;		On entry : 1/0
  6195 ;;		On exit  : 3F/39
  6196 ;;		Unchanged: 0/0
  6197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6202 ;;Total ram usage:        0 bytes
  6203 ;; Hardware stack levels used:    1
  6204 ;; Hardware stack levels required when called:   16
  6205 ;; This function calls:
  6206 ;;		_INT1_SetInterruptHandler
  6207 ;; This function is called by:
  6208 ;;		_main
  6209 ;; This function uses a reentrant model
  6210 ;;
  6211                           
  6212                           	psect	text2
  6213  01C336                     __ptext2:
  6214                           	opt callstack 0
  6215  01C336                     _start_switch_handler:
  6216                           	opt callstack 14
  6217                           
  6218                           ;dio.c: 124:  (PIE5bits.INT1IE = 0);
  6219                           
  6220                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6221                           ;incstack = 0
  6222  01C336  0139               	movlb	57	; () banked
  6223  01C338  9195               	bcf	149,0,b	;volatile
  6224                           
  6225                           ; BSR set to: 57
  6226                           ;dio.c: 125:  INT1_SetInterruptHandler(switch_handler);
  6227  01C33A  0E68               	movlw	low _switch_handler
  6228  01C33C  6EE6               	movwf	postinc1,c
  6229  01C33E  0E97               	movlw	high _switch_handler
  6230  01C340  6EE6               	movwf	postinc1,c
  6231  01C342  0E01               	movlw	low (_switch_handler shr (0+16))
  6232  01C344  6EE6               	movwf	postinc1,c
  6233  01C346  EC6F  F0E0         	call	_INT1_SetInterruptHandler	;wreg free
  6234                           
  6235                           ;dio.c: 126:  S.button[SNULL].sw = SW_INVALID;
  6236  01C34A  0E02               	movlw	2
  6237  01C34C  0102               	movlb	2	; () banked
  6238  01C34E  6F77               	movwf	(_S+35)& (0+255),b	;volatile
  6239                           
  6240                           ; BSR set to: 2
  6241                           ;dio.c: 127:  (PIE5bits.INT1IE = 1);
  6242  01C350  0139               	movlb	57	; () banked
  6243  01C352  8195               	bsf	149,0,b	;volatile
  6244                           
  6245                           ; BSR set to: 57
  6246                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6247  01C354  0012               	return		;funcret
  6248  01C356                     __end_of_start_switch_handler:
  6249                           	opt callstack 0
  6250                           
  6251 ;; *************** function _srand *****************
  6252 ;; Defined at:
  6253 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;  s               2  [STACK] unsigned int 
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;		None
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  1  [STACK] void 
  6260 ;; Registers used:
  6261 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 3F/1
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6271 ;;Total ram usage:        0 bytes
  6272 ;; Hardware stack levels used:    1
  6273 ;; Hardware stack levels required when called:   15
  6274 ;; This function calls:
  6275 ;;		Nothing
  6276 ;; This function is called by:
  6277 ;;		_main
  6278 ;; This function uses a reentrant model
  6279 ;;
  6280                           
  6281                           	psect	text3
  6282  01BD30                     __ptext3:
  6283                           	opt callstack 0
  6284  01BD30                     _srand:
  6285                           	opt callstack 15
  6286                           
  6287                           ;stkvar	_s @ sp[(0)+-2]
  6288                           
  6289                           ; BSR set to: 57
  6290                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6291                           ;incstack = 0
  6292  01BD30  0EFE               	movlw	-2
  6293  01BD32  50E3               	movf	plusw1,w,c
  6294  01BD34  0FFF               	addlw	255
  6295  01BD36  6E0B               	movwf	(btemp+10)^0,c
  6296  01BD38  0EFF               	movlw	-1
  6297  01BD3A  006F FF8C  F00C    	movff	plusw1,btemp+11
  6298  01BD40  0EFF               	movlw	255
  6299  01BD42  220C               	addwfc	(btemp+11)^0,f,c
  6300  01BD44  0060  F02C  F1F3   	movff	btemp+10,_seed
  6301  01BD4A  0060  F030  F1F4   	movff	btemp+11,_seed+1
  6302  01BD50  0101               	movlb	1	; () banked
  6303  01BD52  6BF5               	clrf	(_seed+2)& (0+255),b
  6304  01BD54  6BF6               	clrf	(_seed+3)& (0+255),b
  6305  01BD56  6BF7               	clrf	(_seed+4)& (0+255),b
  6306  01BD58  6BF8               	clrf	(_seed+5)& (0+255),b
  6307  01BD5A  6BF9               	clrf	(_seed+6)& (0+255),b
  6308  01BD5C  6BFA               	clrf	(_seed+7)& (0+255),b
  6309                           
  6310                           ; BSR set to: 1
  6311                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6312  01BD5E  52E5               	movf	postdec1,f,c
  6313  01BD60  52E5               	movf	postdec1,f,c
  6314  01BD62  0012               	return		;funcret
  6315  01BD64                     __end_of_srand:
  6316                           	opt callstack 0
  6317                           
  6318 ;; *************** function _spinners *****************
  6319 ;; Defined at:
  6320 ;;		line 146 in file "mbmc.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;  shape           1  [STACK] unsigned char 
  6323 ;;  reset           1  [STACK] const unsigned char 
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;  c               1  [STACK] unsigned char 
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  1  [STACK] unsigned char 
  6328 ;; Registers used:
  6329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6339 ;;Total ram usage:        0 bytes
  6340 ;; Hardware stack levels used:    1
  6341 ;; Hardware stack levels required when called:   16
  6342 ;; This function calls:
  6343 ;;		_strlen
  6344 ;; This function is called by:
  6345 ;;		_main
  6346 ;; This function uses a reentrant model
  6347 ;;
  6348                           
  6349                           	psect	text4
  6350  01A04E                     __ptext4:
  6351                           	opt callstack 0
  6352  01A04E                     _spinners:
  6353                           	opt callstack 0
  6354                           
  6355                           ; BSR set to: 1
  6356                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6357  01A04E  52E6               	movf	postinc1,f,c
  6358                           
  6359                           ;mbmc.c: 146: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 147: {;mbmc.c: 1
      +                          48:  static uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
  6360                           ;stkvar	_shape @ sp[(-1)+-1]
  6361                           
  6362                           ;incstack = 0
  6363  01A050  0EFE               	movlw	-2
  6364  01A052  006F FF8C  F001    	movff	plusw1,btemp
  6365  01A058  0E05               	movlw	5
  6366  01A05A  6401               	cpfsgt	btemp^0,c
  6367  01A05C  D002               	goto	l1960
  6368                           
  6369                           ;mbmc.c: 152:   shape = 0;
  6370                           ;stkvar	_shape @ sp[(-1)+-1]
  6371  01A05E  0EFE               	movlw	-2
  6372  01A060  6AE3               	clrf	plusw1,c
  6373  01A062                     l1960:
  6374                           
  6375                           ;mbmc.c: 153:  if (reset)
  6376                           ;stkvar	_reset @ sp[(-1)+-2]
  6377  01A062  0EFD               	movlw	-3
  6378  01A064  50E3               	movf	plusw1,w,c
  6379  01A066  B4D8               	btfsc	status,2,c
  6380  01A068  D00C               	goto	l11103
  6381                           
  6382                           ;mbmc.c: 154:   s[shape] = 0;
  6383                           ;stkvar	_shape @ sp[(-1)+-1]
  6384  01A06A  0EFE               	movlw	-2
  6385  01A06C  50E3               	movf	plusw1,w,c
  6386  01A06E  6E0B               	movwf	(btemp+10)^0,c
  6387  01A070  6A0C               	clrf	(btemp+11)^0,c
  6388  01A072  0EE1               	movlw	low spinners@s
  6389  01A074  240B               	addwf	(btemp+10)^0,w,c
  6390  01A076  6ED9               	movwf	fsr2l,c
  6391  01A078  0E01               	movlw	high spinners@s
  6392  01A07A  200C               	addwfc	(btemp+11)^0,w,c
  6393  01A07C  6EDA               	movwf	fsr2h,c
  6394  01A07E  0E00               	movlw	0
  6395  01A080  6EDF               	movwf	indf2,c
  6396  01A082                     l11103:
  6397                           
  6398                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
  6399                           ;stkvar	_shape @ sp[(-1)+-1]
  6400  01A082  0EFE               	movlw	-2
  6401  01A084  50E3               	movf	plusw1,w,c
  6402  01A086  0D14               	mullw	20
  6403  01A088  0E45               	movlw	low _spin
  6404  01A08A  6E0B               	movwf	(btemp+10)^0,c
  6405  01A08C  0EFB               	movlw	high _spin
  6406  01A08E  6E0C               	movwf	(btemp+11)^0,c
  6407  01A090  50F3               	movf	243,w,c
  6408  01A092  260B               	addwf	(btemp+10)^0,f,c
  6409  01A094  50F4               	movf	244,w,c
  6410  01A096  220C               	addwfc	(btemp+11)^0,f,c
  6411                           
  6412                           ;stkvar	_shape @ sp[(-1)+-1]
  6413  01A098  0EFE               	movlw	-2
  6414  01A09A  50E3               	movf	plusw1,w,c
  6415  01A09C  6E09               	movwf	(btemp+8)^0,c
  6416  01A09E  6A0A               	clrf	(btemp+9)^0,c
  6417  01A0A0  0EE1               	movlw	low spinners@s
  6418  01A0A2  2409               	addwf	(btemp+8)^0,w,c
  6419  01A0A4  6ED9               	movwf	fsr2l,c
  6420  01A0A6  0E01               	movlw	high spinners@s
  6421  01A0A8  200A               	addwfc	(btemp+9)^0,w,c
  6422  01A0AA  6EDA               	movwf	fsr2h,c
  6423  01A0AC  50DF               	movf	indf2,w,c
  6424  01A0AE  260B               	addwf	(btemp+10)^0,f,c
  6425  01A0B0  0E00               	movlw	0
  6426  01A0B2  220C               	addwfc	(btemp+11)^0,f,c
  6427  01A0B4  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  6428  01A0BA  0060  F033  FFF7   	movff	btemp+11,tblptrh
  6429  01A0C0                     	if	0	;tblptru may be non-zero
  6430  01A0C0                     	endif
  6431  01A0C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6432  01A0C0  0E00               	movlw	low (__mediumconst shr (0+16))
  6433  01A0C2  6EF8               	movwf	tblptru,c
  6434  01A0C4                     	endif
  6435                           
  6436                           ;stkvar	_c @ sp[(-1)+0]
  6437  01A0C4  0008               	tblrd		*
  6438  01A0C6  0EFF               	movlw	-1
  6439  01A0C8  006F FFD7 FFE3     	movff	tablat,plusw1
  6440                           
  6441                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
  6442                           ;stkvar	_shape @ sp[(-1)+-1]
  6443  01A0CE  0EFE               	movlw	-2
  6444  01A0D0  50E3               	movf	plusw1,w,c
  6445  01A0D2  0D14               	mullw	20
  6446  01A0D4  0E45               	movlw	low _spin
  6447  01A0D6  6E0B               	movwf	(btemp+10)^0,c
  6448  01A0D8  0EFB               	movlw	high _spin
  6449  01A0DA  6E0C               	movwf	(btemp+11)^0,c
  6450  01A0DC  50F3               	movf	243,w,c
  6451  01A0DE  260B               	addwf	(btemp+10)^0,f,c
  6452  01A0E0  50F4               	movf	244,w,c
  6453  01A0E2  220C               	addwfc	(btemp+11)^0,f,c
  6454  01A0E4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6455  01A0EA  0060  F033  FFE6   	movff	btemp+11,postinc1
  6456  01A0F0  EC4D  F0D6         	call	_strlen	;wreg free
  6457                           
  6458                           ;stkvar	_shape @ sp[(-1)+-1]
  6459  01A0F4  0EFE               	movlw	-2
  6460  01A0F6  50E3               	movf	plusw1,w,c
  6461  01A0F8  6E0B               	movwf	(btemp+10)^0,c
  6462  01A0FA  6A0C               	clrf	(btemp+11)^0,c
  6463  01A0FC  0EE1               	movlw	low spinners@s
  6464  01A0FE  240B               	addwf	(btemp+10)^0,w,c
  6465  01A100  6ED9               	movwf	fsr2l,c
  6466  01A102  0E01               	movlw	high spinners@s
  6467  01A104  200C               	addwfc	(btemp+11)^0,w,c
  6468  01A106  6EDA               	movwf	fsr2h,c
  6469  01A108  2ADF               	incf	indf2,f,c
  6470  01A10A  50DF               	movf	indf2,w,c
  6471  01A10C  6E0B               	movwf	(btemp+10)^0,c
  6472  01A10E  6A0C               	clrf	(btemp+11)^0,c
  6473  01A110  5001               	movf	btemp^0,w,c
  6474  01A112  5C0B               	subwf	(btemp+10)^0,w,c
  6475  01A114  5002               	movf	(btemp+1)^0,w,c
  6476  01A116  580C               	subwfb	(btemp+11)^0,w,c
  6477  01A118  A0D8               	btfss	status,0,c
  6478  01A11A  D00C               	goto	l11109
  6479                           
  6480                           ;mbmc.c: 157:   s[shape] = 0;
  6481                           ;stkvar	_shape @ sp[(-1)+-1]
  6482  01A11C  0EFE               	movlw	-2
  6483  01A11E  50E3               	movf	plusw1,w,c
  6484  01A120  6E0B               	movwf	(btemp+10)^0,c
  6485  01A122  6A0C               	clrf	(btemp+11)^0,c
  6486  01A124  0EE1               	movlw	low spinners@s
  6487  01A126  240B               	addwf	(btemp+10)^0,w,c
  6488  01A128  6ED9               	movwf	fsr2l,c
  6489  01A12A  0E01               	movlw	high spinners@s
  6490  01A12C  200C               	addwfc	(btemp+11)^0,w,c
  6491  01A12E  6EDA               	movwf	fsr2h,c
  6492  01A130  0E00               	movlw	0
  6493  01A132  6EDF               	movwf	indf2,c
  6494  01A134                     l11109:
  6495                           
  6496                           ;mbmc.c: 158:  return c;
  6497                           ;stkvar	_c @ sp[(-1)+0]
  6498  01A134  0EFF               	movlw	-1
  6499  01A136  006F FF8C  F001    	movff	plusw1,btemp
  6500                           
  6501                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6502  01A13C  52E5               	movf	postdec1,f,c
  6503  01A13E  52E5               	movf	postdec1,f,c
  6504  01A140  52E5               	movf	postdec1,f,c
  6505  01A142  0012               	return		;funcret
  6506  01A144                     __end_of_spinners:
  6507                           	opt callstack 0
  6508                           
  6509 ;; *************** function _set_dac_b *****************
  6510 ;; Defined at:
  6511 ;;		line 289 in file "daq.c"
  6512 ;; Parameters:    Size  Location     Type
  6513 ;;  voltage         4  [STACK] const float 
  6514 ;; Auto vars:     Size  Location     Type
  6515 ;;		None
  6516 ;; Return value:  Size  Location     Type
  6517 ;;                  2  [STACK] unsigned short 
  6518 ;; Registers used:
  6519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6520 ;; Tracked objects:
  6521 ;;		On entry : 0/0
  6522 ;;		On exit  : 0/0
  6523 ;;		Unchanged: 0/0
  6524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6529 ;;Total ram usage:        0 bytes
  6530 ;; Hardware stack levels used:    1
  6531 ;; Hardware stack levels required when called:   17
  6532 ;; This function calls:
  6533 ;;		_convert_dac_raw
  6534 ;; This function is called by:
  6535 ;;		_main
  6536 ;; This function uses a reentrant model
  6537 ;;
  6538                           
  6539                           	psect	text5
  6540  01BD64                     __ptext5:
  6541                           	opt callstack 0
  6542  01BD64                     _set_dac_b:
  6543                           	opt callstack 13
  6544                           
  6545                           ;daq.c: 289: uint16_t set_dac_b(const float voltage);daq.c: 290: {;daq.c: 291:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  6546                           ;stkvar	_voltage @ sp[(0)+-4]
  6547                           
  6548                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6549                           ;incstack = 0
  6550  01BD64  0EFC               	movlw	-4
  6551  01BD66  006F FF8F FFE6     	movff	plusw1,postinc1
  6552  01BD6C  006F FF8F FFE6     	movff	plusw1,postinc1
  6553  01BD72  006F FF8F FFE6     	movff	plusw1,postinc1
  6554  01BD78  006F FF8F FFE6     	movff	plusw1,postinc1
  6555  01BD7E  EC78  F0CD         	call	_convert_dac_raw	;wreg free
  6556  01BD82  0060  F004  F0D1   	movff	btemp,_R+34	;volatile
  6557  01BD88  0060  F008  F0D2   	movff	btemp+1,_R+35	;volatile
  6558                           
  6559                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6560                           
  6561                           ;daq.c: 292:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  6562  01BD8E  52E5               	movf	postdec1,f,c
  6563  01BD90  52E5               	movf	postdec1,f,c
  6564  01BD92  52E5               	movf	postdec1,f,c
  6565  01BD94  52E5               	movf	postdec1,f,c
  6566  01BD96  0012               	return		;funcret
  6567  01BD98                     __end_of_set_dac_b:
  6568                           	opt callstack 0
  6569                           
  6570 ;; *************** function _set_dac_a *****************
  6571 ;; Defined at:
  6572 ;;		line 280 in file "daq.c"
  6573 ;; Parameters:    Size  Location     Type
  6574 ;;  voltage         4  [STACK] const float 
  6575 ;; Auto vars:     Size  Location     Type
  6576 ;;		None
  6577 ;; Return value:  Size  Location     Type
  6578 ;;                  2  [STACK] unsigned short 
  6579 ;; Registers used:
  6580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6581 ;; Tracked objects:
  6582 ;;		On entry : 3F/0
  6583 ;;		On exit  : 0/0
  6584 ;;		Unchanged: 0/0
  6585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6590 ;;Total ram usage:        0 bytes
  6591 ;; Hardware stack levels used:    1
  6592 ;; Hardware stack levels required when called:   17
  6593 ;; This function calls:
  6594 ;;		_convert_dac_raw
  6595 ;; This function is called by:
  6596 ;;		_main
  6597 ;; This function uses a reentrant model
  6598 ;;
  6599                           
  6600                           	psect	text6
  6601  01BD98                     __ptext6:
  6602                           	opt callstack 0
  6603  01BD98                     _set_dac_a:
  6604                           	opt callstack 13
  6605                           
  6606                           ;daq.c: 280: uint16_t set_dac_a(const float voltage);daq.c: 281: {;daq.c: 282:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  6607                           ;stkvar	_voltage @ sp[(0)+-4]
  6608                           
  6609                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6610                           ;incstack = 0
  6611  01BD98  0EFC               	movlw	-4
  6612  01BD9A  006F FF8F FFE6     	movff	plusw1,postinc1
  6613  01BDA0  006F FF8F FFE6     	movff	plusw1,postinc1
  6614  01BDA6  006F FF8F FFE6     	movff	plusw1,postinc1
  6615  01BDAC  006F FF8F FFE6     	movff	plusw1,postinc1
  6616  01BDB2  EC78  F0CD         	call	_convert_dac_raw	;wreg free
  6617  01BDB6  0060  F004  F0CF   	movff	btemp,_R+32	;volatile
  6618  01BDBC  0060  F008  F0D0   	movff	btemp+1,_R+33	;volatile
  6619                           
  6620                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6621                           
  6622                           ;daq.c: 283:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  6623  01BDC2  52E5               	movf	postdec1,f,c
  6624  01BDC4  52E5               	movf	postdec1,f,c
  6625  01BDC6  52E5               	movf	postdec1,f,c
  6626  01BDC8  52E5               	movf	postdec1,f,c
  6627  01BDCA  0012               	return		;funcret
  6628  01BDCC                     __end_of_set_dac_a:
  6629                           	opt callstack 0
  6630                           
  6631 ;; *************** function _convert_dac_raw *****************
  6632 ;; Defined at:
  6633 ;;		line 262 in file "daq.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;  voltage         4  [STACK] float 
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;		None
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  2  [STACK] unsigned short 
  6640 ;; Registers used:
  6641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6651 ;;Total ram usage:        0 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:   16
  6654 ;; This function calls:
  6655 ;;		___fldiv
  6656 ;;		___flge
  6657 ;;		___fltol
  6658 ;; This function is called by:
  6659 ;;		_set_dac_a
  6660 ;;		_set_dac_b
  6661 ;; This function uses a reentrant model
  6662 ;;
  6663                           
  6664                           	psect	text7
  6665  019AF0                     __ptext7:
  6666                           	opt callstack 0
  6667  019AF0                     _convert_dac_raw:
  6668                           	opt callstack 13
  6669                           
  6670                           ;daq.c: 262: static uint16_t convert_dac_raw(float voltage);daq.c: 263: {;daq.c: 267:  i
      +                          f (voltage < 0.001)
  6671                           
  6672                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6673                           ;incstack = 0
  6674  019AF0  0E6F               	movlw	111
  6675  019AF2  6EE6               	movwf	postinc1,c
  6676  019AF4  0E12               	movlw	18
  6677  019AF6  6EE6               	movwf	postinc1,c
  6678  019AF8  0E83               	movlw	131
  6679  019AFA  6EE6               	movwf	postinc1,c
  6680  019AFC  0E3A               	movlw	58
  6681  019AFE  6EE6               	movwf	postinc1,c
  6682                           
  6683                           ;stkvar	_voltage @ sp[(-4)+-4]
  6684  019B00  0EF8               	movlw	-8
  6685  019B02  006F FF8F FFE6     	movff	plusw1,postinc1
  6686  019B08  006F FF8F FFE6     	movff	plusw1,postinc1
  6687  019B0E  006F FF8F FFE6     	movff	plusw1,postinc1
  6688  019B14  006F FF8F FFE6     	movff	plusw1,postinc1
  6689  019B1A  EC0A  F0C9         	call	___flge	;wreg free
  6690  019B1E  B001               	btfsc	btemp& (0+255),0,c
  6691  019B20  D018               	goto	l10715
  6692                           
  6693                           ;daq.c: 268:   voltage = 0.001;
  6694  019B22  0E6F               	movlw	111
  6695  019B24  6E09               	movwf	(btemp+8)^0,c
  6696  019B26  0E12               	movlw	18
  6697  019B28  6E0A               	movwf	(btemp+9)^0,c
  6698  019B2A  0E83               	movlw	131
  6699  019B2C  6E0B               	movwf	(btemp+10)^0,c
  6700  019B2E  0E3A               	movlw	58
  6701  019B30  6E0C               	movwf	(btemp+11)^0,c
  6702                           
  6703                           ;stkvar	_voltage @ sp[(0)+-4]
  6704  019B32  0EFC               	movlw	-4
  6705  019B34  0060  F027  FFE3   	movff	btemp+8,plusw1
  6706  019B3A  0EFD               	movlw	-3
  6707  019B3C  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6708  019B42  0EFE               	movlw	-2
  6709  019B44  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6710  019B4A  0EFF               	movlw	-1
  6711  019B4C  0060  F033  FFE3   	movff	btemp+11,plusw1
  6712  019B52                     l10715:
  6713                           
  6714                           ;daq.c: 269:  if (voltage > 10.0)
  6715                           ;stkvar	_voltage @ sp[(0)+-4]
  6716  019B52  0EFC               	movlw	-4
  6717  019B54  006F FF8F FFE6     	movff	plusw1,postinc1
  6718  019B5A  006F FF8F FFE6     	movff	plusw1,postinc1
  6719  019B60  006F FF8F FFE6     	movff	plusw1,postinc1
  6720  019B66  006F FF8F FFE6     	movff	plusw1,postinc1
  6721  019B6C  0E00               	movlw	0
  6722  019B6E  6EE6               	movwf	postinc1,c
  6723  019B70  0E00               	movlw	0
  6724  019B72  6EE6               	movwf	postinc1,c
  6725  019B74  0E20               	movlw	32
  6726  019B76  6EE6               	movwf	postinc1,c
  6727  019B78  0E41               	movlw	65
  6728  019B7A  6EE6               	movwf	postinc1,c
  6729  019B7C  EC0A  F0C9         	call	___flge	;wreg free
  6730  019B80  B001               	btfsc	btemp& (0+255),0,c
  6731  019B82  D018               	goto	l10719
  6732                           
  6733                           ;daq.c: 270:   voltage = 10.0;
  6734  019B84  0E00               	movlw	0
  6735  019B86  6E09               	movwf	(btemp+8)^0,c
  6736  019B88  0E00               	movlw	0
  6737  019B8A  6E0A               	movwf	(btemp+9)^0,c
  6738  019B8C  0E20               	movlw	32
  6739  019B8E  6E0B               	movwf	(btemp+10)^0,c
  6740  019B90  0E41               	movlw	65
  6741  019B92  6E0C               	movwf	(btemp+11)^0,c
  6742                           
  6743                           ;stkvar	_voltage @ sp[(0)+-4]
  6744  019B94  0EFC               	movlw	-4
  6745  019B96  0060  F027  FFE3   	movff	btemp+8,plusw1
  6746  019B9C  0EFD               	movlw	-3
  6747  019B9E  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6748  019BA4  0EFE               	movlw	-2
  6749  019BA6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6750  019BAC  0EFF               	movlw	-1
  6751  019BAE  0060  F033  FFE3   	movff	btemp+11,plusw1
  6752  019BB4                     l10719:
  6753                           
  6754                           ;daq.c: 274:  return(uint16_t) (voltage / 0.002442);
  6755  019BB4  0EF6               	movlw	246
  6756  019BB6  6EE6               	movwf	postinc1,c
  6757  019BB8  0E09               	movlw	9
  6758  019BBA  6EE6               	movwf	postinc1,c
  6759  019BBC  0E20               	movlw	32
  6760  019BBE  6EE6               	movwf	postinc1,c
  6761  019BC0  0E3B               	movlw	59
  6762  019BC2  6EE6               	movwf	postinc1,c
  6763                           
  6764                           ;stkvar	_voltage @ sp[(-4)+-4]
  6765  019BC4  0EF8               	movlw	-8
  6766  019BC6  006F FF8F FFE6     	movff	plusw1,postinc1
  6767  019BCC  006F FF8F FFE6     	movff	plusw1,postinc1
  6768  019BD2  006F FF8F FFE6     	movff	plusw1,postinc1
  6769  019BD8  006F FF8F FFE6     	movff	plusw1,postinc1
  6770  019BDE  ECD8  F0A6         	call	___fldiv	;wreg free
  6771  019BE2  0060  F007  FFE6   	movff	btemp,postinc1
  6772  019BE8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6773  019BEE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6774  019BF4  0060  F013  FFE6   	movff	btemp+3,postinc1
  6775  019BFA  EC51  F0C8         	call	___fltol	;wreg free
  6776                           
  6777                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  6778  019BFE  52E5               	movf	postdec1,f,c
  6779  019C00  52E5               	movf	postdec1,f,c
  6780  019C02  52E5               	movf	postdec1,f,c
  6781  019C04  52E5               	movf	postdec1,f,c
  6782  019C06  0012               	return		;funcret
  6783  019C08                     __end_of_convert_dac_raw:
  6784                           	opt callstack 0
  6785                           
  6786 ;; *************** function _set_dac *****************
  6787 ;; Defined at:
  6788 ;;		line 239 in file "daq.c"
  6789 ;; Parameters:    Size  Location     Type
  6790 ;;		None
  6791 ;; Auto vars:     Size  Location     Type
  6792 ;;		None
  6793 ;; Return value:  Size  Location     Type
  6794 ;;                  1  [STACK] void 
  6795 ;; Registers used:
  6796 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+11
  6797 ;; Tracked objects:
  6798 ;;		On entry : 0/0
  6799 ;;		On exit  : 0/0
  6800 ;;		Unchanged: 0/0
  6801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6806 ;;Total ram usage:        0 bytes
  6807 ;; Hardware stack levels used:    1
  6808 ;; Hardware stack levels required when called:   16
  6809 ;; This function calls:
  6810 ;;		_SPI1_Exchange8bit
  6811 ;;		_dac_spi_control
  6812 ;; This function is called by:
  6813 ;;		_main
  6814 ;; This function uses a reentrant model
  6815 ;;
  6816                           
  6817                           	psect	text8
  6818  01A94A                     __ptext8:
  6819                           	opt callstack 0
  6820  01A94A                     _set_dac:
  6821                           	opt callstack 14
  6822                           
  6823                           ;daq.c: 241:  while (!SPI1STATUSbits.TXBE);
  6824                           
  6825                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6826                           ;incstack = 0
  6827  01A94A  013D               	movlb	61	; () banked
  6828  01A94C  AB17               	btfss	23,5,b	;volatile
  6829  01A94E  D7FD               	goto	_set_dac
  6830                           
  6831                           ; BSR set to: 61
  6832                           
  6833                           ;daq.c: 242:  do { LATCbits.LATC2 = 1; } while(0);
  6834  01A950  84BC               	bsf	188,2,c	;volatile
  6835                           
  6836                           ; BSR set to: 61
  6837                           
  6838                           ;daq.c: 243:  do { LATCbits.LATC0 = 1; } while(0);
  6839  01A952  80BC               	bsf	188,0,c	;volatile
  6840                           
  6841                           ; BSR set to: 61
  6842                           ;daq.c: 244:  dac_spi_control(1);
  6843  01A954  0E01               	movlw	1
  6844  01A956  6EE6               	movwf	postinc1,c
  6845  01A958  ECBF  F0D8         	call	_dac_spi_control	;wreg free
  6846                           
  6847                           ;daq.c: 245:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  6848  01A95C  C0CF  F0D3         	movff	_R+32,_R+36	;volatile
  6849                           
  6850                           ;daq.c: 246:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] > 8) &0xf;
  6851  01A960  0100               	movlb	0	; () banked
  6852  01A962  51D0               	movf	(_R+33)& (0+255),w,b	;volatile
  6853  01A964  E104               	bnz	u10421
  6854  01A966  0E09               	movlw	9
  6855  01A968  5DCF               	subwf	(_R+32)& (0+255),w,b	;volatile
  6856  01A96A  A0D8               	btfss	status,0,c
  6857  01A96C  D003               	goto	u10420
  6858  01A96E                     u10421:
  6859  01A96E  6A0C               	clrf	(btemp+11)^0,c
  6860  01A970  2A0C               	incf	(btemp+11)^0,f,c
  6861  01A972  D001               	goto	u10438
  6862  01A974                     u10420:
  6863  01A974  6A0C               	clrf	(btemp+11)^0,c
  6864  01A976                     u10438:
  6865  01A976  0E0F               	movlw	15
  6866  01A978  160C               	andwf	(btemp+11)^0,f,c
  6867  01A97A  0100               	movlb	0	; () banked
  6868  01A97C  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6869  01A97E  180C               	xorwf	(btemp+11)^0,w,c
  6870  01A980  0BF0               	andlw	-16
  6871  01A982  180C               	xorwf	(btemp+11)^0,w,c
  6872  01A984  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6873                           
  6874                           ; BSR set to: 0
  6875                           ;daq.c: 247:  R.max5322_cmd.map.cont = 0b0100;
  6876  01A986  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6877  01A988  0B0F               	andlw	-241
  6878  01A98A  0940               	iorlw	64
  6879  01A98C  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6880                           
  6881                           ; BSR set to: 0
  6882  01A98E  90BF               	bcf	191,0,c	;volatile
  6883                           
  6884                           ; BSR set to: 0
  6885                           ;daq.c: 249:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  6886  01A990  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6887  01A992  6EE6               	movwf	postinc1,c
  6888  01A994  ECBB  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  6889                           
  6890                           ; BSR set to: 57
  6891                           ;daq.c: 250:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  6892  01A998  0100               	movlb	0	; () banked
  6893  01A99A  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  6894  01A99C  6EE6               	movwf	postinc1,c
  6895  01A99E  ECBB  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  6896                           
  6897                           ; BSR set to: 57
  6898  01A9A2  80BF               	bsf	191,0,c	;volatile
  6899                           
  6900                           ; BSR set to: 57
  6901                           ;daq.c: 252:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  6902  01A9A4  C0D1  F0D3         	movff	_R+34,_R+36	;volatile
  6903                           
  6904                           ; BSR set to: 57
  6905                           ;daq.c: 253:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] > 8) &0xf;
  6906  01A9A8  0100               	movlb	0	; () banked
  6907  01A9AA  51D2               	movf	(_R+35)& (0+255),w,b	;volatile
  6908  01A9AC  E104               	bnz	u10441
  6909  01A9AE  0E09               	movlw	9
  6910  01A9B0  5DD1               	subwf	(_R+34)& (0+255),w,b	;volatile
  6911  01A9B2  A0D8               	btfss	status,0,c
  6912  01A9B4  D003               	goto	u10440
  6913  01A9B6                     u10441:
  6914  01A9B6  6A0C               	clrf	(btemp+11)^0,c
  6915  01A9B8  2A0C               	incf	(btemp+11)^0,f,c
  6916  01A9BA  D001               	goto	u10458
  6917  01A9BC                     u10440:
  6918  01A9BC  6A0C               	clrf	(btemp+11)^0,c
  6919  01A9BE                     u10458:
  6920  01A9BE  0E0F               	movlw	15
  6921  01A9C0  160C               	andwf	(btemp+11)^0,f,c
  6922  01A9C2  0100               	movlb	0	; () banked
  6923  01A9C4  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6924  01A9C6  180C               	xorwf	(btemp+11)^0,w,c
  6925  01A9C8  0BF0               	andlw	-16
  6926  01A9CA  180C               	xorwf	(btemp+11)^0,w,c
  6927  01A9CC  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6928                           
  6929                           ; BSR set to: 0
  6930                           ;daq.c: 254:  R.max5322_cmd.map.cont = 0b0101;
  6931  01A9CE  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6932  01A9D0  0B0F               	andlw	-241
  6933  01A9D2  0950               	iorlw	80
  6934  01A9D4  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6935                           
  6936                           ; BSR set to: 0
  6937  01A9D6  90BF               	bcf	191,0,c	;volatile
  6938                           
  6939                           ; BSR set to: 0
  6940                           ;daq.c: 256:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  6941  01A9D8  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6942  01A9DA  6EE6               	movwf	postinc1,c
  6943  01A9DC  ECBB  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  6944                           
  6945                           ; BSR set to: 57
  6946                           ;daq.c: 257:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  6947  01A9E0  0100               	movlb	0	; () banked
  6948  01A9E2  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  6949  01A9E4  6EE6               	movwf	postinc1,c
  6950  01A9E6  ECBB  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  6951                           
  6952                           ; BSR set to: 57
  6953  01A9EA  80BF               	bsf	191,0,c	;volatile
  6954                           
  6955                           ; BSR set to: 57
  6956                           ;daq.c: 259:  dac_spi_control(0);
  6957  01A9EC  0E00               	movlw	0
  6958  01A9EE  6EE6               	movwf	postinc1,c
  6959  01A9F0  ECBF  F0D8         	call	_dac_spi_control	;wreg free
  6960                           
  6961                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  6962  01A9F4  0012               	return		;funcret
  6963  01A9F6                     __end_of_set_dac:
  6964                           	opt callstack 0
  6965                           
  6966 ;; *************** function _dac_spi_control *****************
  6967 ;; Defined at:
  6968 ;;		line 194 in file "daq.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;  set             1  [STACK] _Bool 
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;		None
  6973 ;; Return value:  Size  Location     Type
  6974 ;;                  1  [STACK] void 
  6975 ;; Registers used:
  6976 ;;		wreg, fsr1l, fsr1h, status,2
  6977 ;; Tracked objects:
  6978 ;;		On entry : 3B/3D
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6986 ;;Total ram usage:        0 bytes
  6987 ;; Hardware stack levels used:    1
  6988 ;; Hardware stack levels required when called:   15
  6989 ;; This function calls:
  6990 ;;		Nothing
  6991 ;; This function is called by:
  6992 ;;		_set_dac
  6993 ;; This function uses a reentrant model
  6994 ;;
  6995                           
  6996                           	psect	text9
  6997  01B17E                     __ptext9:
  6998                           	opt callstack 0
  6999  01B17E                     _dac_spi_control:
  7000                           	opt callstack 14
  7001                           
  7002                           ;daq.c: 194: void dac_spi_control(_Bool set);daq.c: 195: {;daq.c: 196:  static _Bool ini
      +                          t = 0;;daq.c: 197:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 199:  if (set) {
  7003                           ;stkvar	_set @ sp[(0)+-1]
  7004                           
  7005                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7006                           ;incstack = 0
  7007  01B17E  0EFF               	movlw	-1
  7008  01B180  50E3               	movf	plusw1,w,c
  7009  01B182  B4D8               	btfsc	status,2,c
  7010  01B184  D01F               	goto	l10707
  7011                           
  7012                           ;daq.c: 200:   SPI1CON0bits.EN = 0;
  7013  01B186  013D               	movlb	61	; () banked
  7014  01B188  9F14               	bcf	20,7,b	;volatile
  7015                           
  7016                           ; BSR set to: 61
  7017                           ;daq.c: 201:   if (!init) {
  7018  01B18A  5043               	movf	dac_spi_control@init^0,w,c
  7019  01B18C  A4D8               	btfss	status,2,c
  7020  01B18E  D011               	goto	l10701
  7021                           
  7022                           ; BSR set to: 61
  7023                           ;daq.c: 202:    init = 1;
  7024  01B190  0E01               	movlw	1
  7025  01B192  6E43               	movwf	dac_spi_control@init^0,c
  7026                           
  7027                           ; BSR set to: 61
  7028                           ;daq.c: 203:    S0 = SPI1CON0;
  7029  01B194  006F F450  F042    	movff	15636,dac_spi_control@S0	;volatile
  7030                           
  7031                           ; BSR set to: 61
  7032                           ;daq.c: 204:    S1 = SPI1CON1;
  7033  01B19A  006F F454  F0A8    	movff	15637,dac_spi_control@S1	;volatile
  7034                           
  7035                           ; BSR set to: 61
  7036                           ;daq.c: 205:    S2 = SPI1CON2;
  7037  01B1A0  006F F458  F0A7    	movff	15638,dac_spi_control@S2	;volatile
  7038                           
  7039                           ; BSR set to: 61
  7040                           ;daq.c: 206:    SC = SPI1CLK;
  7041  01B1A6  006F F470  F0A6    	movff	15644,dac_spi_control@SC	;volatile
  7042                           
  7043                           ; BSR set to: 61
  7044                           ;daq.c: 207:    SB = SPI1BAUD;
  7045  01B1AC  006F F464  F0A5    	movff	15641,dac_spi_control@SB	;volatile
  7046  01B1B2                     l10701:
  7047                           
  7048                           ; BSR set to: 61
  7049                           ;daq.c: 213:   SPI1CON1 = 0x00;
  7050  01B1B2  6B15               	clrf	21,b	;volatile
  7051                           
  7052                           ;daq.c: 215:   SPI1CON2 = 0x03;
  7053  01B1B4  0E03               	movlw	3
  7054  01B1B6  6F16               	movwf	22,b	;volatile
  7055                           
  7056                           ;daq.c: 217:   SPI1BAUD = 0x0f;
  7057  01B1B8  0E0F               	movlw	15
  7058  01B1BA  6F19               	movwf	25,b	;volatile
  7059                           
  7060                           ; BSR set to: 61
  7061                           ;daq.c: 219:   SPI1CLK = 0x00;
  7062  01B1BC  6B1C               	clrf	28,b	;volatile
  7063                           
  7064                           ;daq.c: 221:   SPI1CON0 = 0x83;
  7065  01B1BE  0E83               	movlw	131
  7066  01B1C0  6F14               	movwf	20,b	;volatile
  7067  01B1C2  D014               	goto	L3
  7068  01B1C4                     l10707:
  7069                           
  7070                           ;daq.c: 224:   if (init) {
  7071  01B1C4  5043               	movf	dac_spi_control@init^0,w,c
  7072  01B1C6  B4D8               	btfsc	status,2,c
  7073  01B1C8  D012               	goto	l1854
  7074                           
  7075                           ;daq.c: 228:    SPI1CON0bits.EN = 0;
  7076  01B1CA  013D               	movlb	61	; () banked
  7077  01B1CC  9F14               	bcf	20,7,b	;volatile
  7078                           
  7079                           ;daq.c: 229:    SPI1CON1 = S1;
  7080  01B1CE  0060  F2A3  FD15   	movff	dac_spi_control@S1,15637	;volatile
  7081                           
  7082                           ;daq.c: 230:    SPI1CON2 = S2;
  7083  01B1D4  0060  F29F  FD16   	movff	dac_spi_control@S2,15638	;volatile
  7084                           
  7085                           ;daq.c: 231:    SPI1CLK = SC;
  7086  01B1DA  0060  F29B  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  7087                           
  7088                           ;daq.c: 232:    SPI1BAUD = SB;
  7089  01B1E0  0060  F297  FD19   	movff	dac_spi_control@SB,15641	;volatile
  7090                           
  7091                           ;daq.c: 233:    SPI1CON0 = S0;
  7092  01B1E6  0060  F10B  FD14   	movff	dac_spi_control@S0,15636	;volatile
  7093  01B1EC                     L3:
  7094                           
  7095                           ;daq.c: 234:    SPI1CON0bits.EN = 1;
  7096  01B1EC  8F14               	bsf	20,7,b	;volatile
  7097  01B1EE                     l1854:
  7098                           
  7099                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  7100  01B1EE  52E5               	movf	postdec1,f,c
  7101  01B1F0  0012               	return		;funcret
  7102  01B1F2                     __end_of_dac_spi_control:
  7103                           	opt callstack 0
  7104                           
  7105 ;; *************** function _init_port_dma *****************
  7106 ;; Defined at:
  7107 ;;		line 104 in file "eadog.c"
  7108 ;; Parameters:    Size  Location     Type
  7109 ;;		None
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;		None
  7112 ;; Return value:  Size  Location     Type
  7113 ;;                  1  [STACK] void 
  7114 ;; Registers used:
  7115 ;;		wreg, status,2
  7116 ;; Tracked objects:
  7117 ;;		On entry : 0/1
  7118 ;;		On exit  : 3F/3B
  7119 ;;		Unchanged: 0/0
  7120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7125 ;;Total ram usage:        0 bytes
  7126 ;; Hardware stack levels used:    1
  7127 ;; Hardware stack levels required when called:   15
  7128 ;; This function calls:
  7129 ;;		Nothing
  7130 ;; This function is called by:
  7131 ;;		_main
  7132 ;; This function uses a reentrant model
  7133 ;;
  7134                           
  7135                           	psect	text10
  7136  01BE00                     __ptext10:
  7137                           	opt callstack 0
  7138  01BE00                     _init_port_dma:
  7139                           	opt callstack 15
  7140                           
  7141                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  7142                           
  7143                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7144                           ;incstack = 0
  7145  01BE00  0E3F               	movlw	-193
  7146  01BE02  013B               	movlb	59	; () banked
  7147  01BE04  17DD               	andwf	221,f,b	;volatile
  7148                           
  7149                           ; BSR set to: 59
  7150                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  7151  01BE06  9BDD               	bcf	221,5,b	;volatile
  7152                           
  7153                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  7154  01BE08  51DD               	movf	221,w,b	;volatile
  7155  01BE0A  0BF9               	andlw	-7
  7156  01BE0C  0902               	iorlw	2
  7157  01BE0E  6FDD               	movwf	221,b	;volatile
  7158                           
  7159                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  7160  01BE10  0EE7               	movlw	-25
  7161  01BE12  17DD               	andwf	221,f,b	;volatile
  7162                           
  7163                           ; BSR set to: 59
  7164                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  7165  01BE14  81DD               	bsf	221,0,b	;volatile
  7166                           
  7167                           ; BSR set to: 59
  7168                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  7169  01BE16  9DDC               	bcf	220,6,b	;volatile
  7170                           
  7171                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  7172  01BE18  0E3D               	movlw	61
  7173  01BE1A  6FD1               	movwf	209,b	;volatile
  7174  01BE1C  0EEA               	movlw	234
  7175  01BE1E  6FD0               	movwf	208,b	;volatile
  7176                           
  7177                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  7178  01BE20  0EFF               	movlw	low _port_data
  7179  01BE22  6FD9               	movwf	217,b	;volatile
  7180  01BE24  0E04               	movlw	high _port_data
  7181  01BE26  6FDA               	movwf	218,b	;volatile
  7182  01BE28  0E00               	movlw	low (_port_data shr (0+16))
  7183  01BE2A  6FDB               	movwf	219,b	;volatile
  7184                           
  7185                           ; BSR set to: 59
  7186                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  7187  01BE2C  9BDC               	bcf	220,5,b	;volatile
  7188                           
  7189                           ; BSR set to: 59
  7190                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7191  01BE2E  0012               	return		;funcret
  7192  01BE30                     __end_of_init_port_dma:
  7193                           	opt callstack 0
  7194                           
  7195 ;; *************** function _init_display *****************
  7196 ;; Defined at:
  7197 ;;		line 38 in file "eadog.c"
  7198 ;; Parameters:    Size  Location     Type
  7199 ;;		None
  7200 ;; Auto vars:     Size  Location     Type
  7201 ;;		None
  7202 ;; Return value:  Size  Location     Type
  7203 ;;                  1  [STACK] void 
  7204 ;; Registers used:
  7205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7206 ;; Tracked objects:
  7207 ;;		On entry : 3F/3B
  7208 ;;		On exit  : 3F/3D
  7209 ;;		Unchanged: 0/0
  7210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7215 ;;Total ram usage:        0 bytes
  7216 ;; Hardware stack levels used:    1
  7217 ;; Hardware stack levels required when called:   17
  7218 ;; This function calls:
  7219 ;;		_ringBufS_init
  7220 ;;		_send_lcd_cmd
  7221 ;;		_send_lcd_cmd_long
  7222 ;;		_send_lcd_data
  7223 ;;		_wdtdelay
  7224 ;; This function is called by:
  7225 ;;		_main
  7226 ;; This function uses a reentrant model
  7227 ;;
  7228                           
  7229                           	psect	text11
  7230  01A144                     __ptext11:
  7231                           	opt callstack 0
  7232  01A144                     _init_display:
  7233                           	opt callstack 13
  7234                           
  7235                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  7236                           
  7237                           ; BSR set to: 59
  7238                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7239                           ;incstack = 0
  7240  01A144  0E83               	movlw	low _ring_buf1
  7241  01A146  0101               	movlb	1	; () banked
  7242  01A148  6FD3               	movwf	(_spi_link+6)& (0+255),b	;volatile
  7243  01A14A  0E03               	movlw	high _ring_buf1
  7244  01A14C  6FD4               	movwf	(_spi_link+7)& (0+255),b	;volatile
  7245                           
  7246                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  7247  01A14E  0E40               	movlw	low _ring_buf2
  7248  01A150  6FD1               	movwf	(_spi_link+4)& (0+255),b	;volatile
  7249  01A152  0E03               	movlw	high _ring_buf2
  7250  01A154  6FD2               	movwf	(_spi_link+5)& (0+255),b	;volatile
  7251                           
  7252                           ; BSR set to: 1
  7253                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  7254  01A156  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
  7255  01A15C  0060  F753  FFE6   	movff	_spi_link+7,postinc1
  7256  01A162  ECCF  F0DF         	call	_ringBufS_init	;wreg free
  7257                           
  7258                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  7259  01A166  0060  F747  FFE6   	movff	_spi_link+4,postinc1
  7260  01A16C  0060  F74B  FFE6   	movff	_spi_link+5,postinc1
  7261  01A172  ECCF  F0DF         	call	_ringBufS_init	;wreg free
  7262                           
  7263                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  7264  01A176  84BE               	bsf	190,2,c	;volatile
  7265                           
  7266                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  7267  01A178  013D               	movlb	61	; () banked
  7268  01A17A  9F14               	bcf	20,7,b	;volatile
  7269                           
  7270                           ; BSR set to: 61
  7271                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  7272  01A17C  0E20               	movlw	32
  7273  01A17E  6F15               	movwf	21,b	;volatile
  7274                           
  7275                           ; BSR set to: 61
  7276                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  7277  01A180  0E03               	movlw	3
  7278  01A182  6F16               	movwf	22,b	;volatile
  7279                           
  7280                           ; BSR set to: 61
  7281                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  7282  01A184  0E04               	movlw	4
  7283  01A186  6F19               	movwf	25,b	;volatile
  7284                           
  7285                           ; BSR set to: 61
  7286                           ;eadog.c: 55:  SPI1CLK = 0x02;
  7287  01A188  0E02               	movlw	2
  7288  01A18A  6F1C               	movwf	28,b	;volatile
  7289                           
  7290                           ; BSR set to: 61
  7291                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  7292  01A18C  0E83               	movlw	131
  7293  01A18E  6F14               	movwf	20,b	;volatile
  7294                           
  7295                           ; BSR set to: 61
  7296                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  7297  01A190  8F14               	bsf	20,7,b	;volatile
  7298                           
  7299                           ; BSR set to: 61
  7300                           ;eadog.c: 60:  wdtdelay(350000);
  7301  01A192  0E30               	movlw	48
  7302  01A194  6EE6               	movwf	postinc1,c
  7303  01A196  0E57               	movlw	87
  7304  01A198  6EE6               	movwf	postinc1,c
  7305  01A19A  0E05               	movlw	5
  7306  01A19C  6EE6               	movwf	postinc1,c
  7307  01A19E  0E00               	movlw	0
  7308  01A1A0  6EE6               	movwf	postinc1,c
  7309  01A1A2  ECF5  F0DA         	call	_wdtdelay	;wreg free
  7310                           
  7311                           ; BSR set to: 0
  7312                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  7313  01A1A6  0E46               	movlw	70
  7314  01A1A8  6EE6               	movwf	postinc1,c
  7315  01A1AA  EC4E  F0DD         	call	_send_lcd_cmd_long	;wreg free
  7316                           
  7317                           ; BSR set to: 0
  7318                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  7319  01A1AE  0E41               	movlw	65
  7320  01A1B0  6EE6               	movwf	postinc1,c
  7321  01A1B2  EC6E  F0DD         	call	_send_lcd_cmd	;wreg free
  7322                           
  7323                           ; BSR set to: 0
  7324                           ;eadog.c: 63:  wdtdelay(80);
  7325  01A1B6  0E50               	movlw	80
  7326  01A1B8  6EE6               	movwf	postinc1,c
  7327  01A1BA  0E00               	movlw	0
  7328  01A1BC  6EE6               	movwf	postinc1,c
  7329  01A1BE  0E00               	movlw	0
  7330  01A1C0  6EE6               	movwf	postinc1,c
  7331  01A1C2  0E00               	movlw	0
  7332  01A1C4  6EE6               	movwf	postinc1,c
  7333  01A1C6  ECF5  F0DA         	call	_wdtdelay	;wreg free
  7334                           
  7335                           ; BSR set to: 0
  7336                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  7337  01A1CA  0E53               	movlw	83
  7338  01A1CC  6EE6               	movwf	postinc1,c
  7339  01A1CE  EC6E  F0DD         	call	_send_lcd_cmd	;wreg free
  7340                           
  7341                           ; BSR set to: 0
  7342                           ;eadog.c: 65:  send_lcd_data(2);
  7343  01A1D2  0E02               	movlw	2
  7344  01A1D4  6EE6               	movwf	postinc1,c
  7345  01A1D6  ECFC  F0E0         	call	_send_lcd_data	;wreg free
  7346                           
  7347                           ; BSR set to: 0
  7348                           ;eadog.c: 66:  wdtdelay(80);
  7349  01A1DA  0E50               	movlw	80
  7350  01A1DC  6EE6               	movwf	postinc1,c
  7351  01A1DE  0E00               	movlw	0
  7352  01A1E0  6EE6               	movwf	postinc1,c
  7353  01A1E2  0E00               	movlw	0
  7354  01A1E4  6EE6               	movwf	postinc1,c
  7355  01A1E6  0E00               	movlw	0
  7356  01A1E8  6EE6               	movwf	postinc1,c
  7357  01A1EA  ECF5  F0DA         	call	_wdtdelay	;wreg free
  7358                           
  7359                           ; BSR set to: 0
  7360                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  7361  01A1EE  0E51               	movlw	81
  7362  01A1F0  6EE6               	movwf	postinc1,c
  7363  01A1F2  EC4E  F0DD         	call	_send_lcd_cmd_long	;wreg free
  7364                           
  7365                           ; BSR set to: 0
  7366                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  7367  01A1F6  013D               	movlb	61	; () banked
  7368  01A1F8  9F14               	bcf	20,7,b	;volatile
  7369                           
  7370                           ; BSR set to: 61
  7371                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  7372  01A1FA  0E02               	movlw	2
  7373  01A1FC  6F16               	movwf	22,b	;volatile
  7374                           
  7375                           ; BSR set to: 61
  7376                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  7377  01A1FE  8F14               	bsf	20,7,b	;volatile
  7378                           
  7379                           ; BSR set to: 61
  7380                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  7381  01A200  931A               	bcf	26,1,b	;volatile
  7382                           
  7383                           ; BSR set to: 61
  7384                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  7385  01A202  0E3F               	movlw	-193
  7386  01A204  013B               	movlb	59	; () banked
  7387  01A206  17FD               	andwf	253,f,b	;volatile
  7388                           
  7389                           ; BSR set to: 59
  7390                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  7391  01A208  9BFD               	bcf	253,5,b	;volatile
  7392                           
  7393                           ; BSR set to: 59
  7394                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  7395  01A20A  51FD               	movf	253,w,b	;volatile
  7396  01A20C  0BF9               	andlw	-7
  7397  01A20E  0902               	iorlw	2
  7398  01A210  6FFD               	movwf	253,b	;volatile
  7399                           
  7400                           ; BSR set to: 59
  7401                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  7402  01A212  0EE7               	movlw	-25
  7403  01A214  17FD               	andwf	253,f,b	;volatile
  7404                           
  7405                           ; BSR set to: 59
  7406                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  7407  01A216  81FD               	bsf	253,0,b	;volatile
  7408                           
  7409                           ; BSR set to: 59
  7410                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  7411  01A218  0E83               	movlw	low _ring_buf1
  7412  01A21A  6FF9               	movwf	249,b	;volatile
  7413  01A21C  0E03               	movlw	high _ring_buf1
  7414  01A21E  6FFA               	movwf	250,b	;volatile
  7415  01A220  0E00               	movlw	low (_ring_buf1 shr (0+16))
  7416  01A222  6FFB               	movwf	251,b	;volatile
  7417                           
  7418                           ; BSR set to: 59
  7419                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  7420  01A224  9BFC               	bcf	252,5,b	;volatile
  7421                           
  7422                           ; BSR set to: 59
  7423                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  7424  01A226  013D               	movlb	61	; () banked
  7425  01A228  831A               	bsf	26,1,b	;volatile
  7426                           
  7427                           ; BSR set to: 61
  7428                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  7429  01A22A  94BE               	bcf	190,2,c	;volatile
  7430                           
  7431                           ; BSR set to: 61
  7432                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7433  01A22C  0012               	return		;funcret
  7434  01A22E                     __end_of_init_display:
  7435                           	opt callstack 0
  7436                           
  7437 ;; *************** function _send_lcd_data *****************
  7438 ;; Defined at:
  7439 ;;		line 123 in file "eadog.c"
  7440 ;; Parameters:    Size  Location     Type
  7441 ;;  data            1  [STACK] const unsigned char 
  7442 ;; Auto vars:     Size  Location     Type
  7443 ;;		None
  7444 ;; Return value:  Size  Location     Type
  7445 ;;                  1  [STACK] void 
  7446 ;; Registers used:
  7447 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7448 ;; Tracked objects:
  7449 ;;		On entry : 3F/0
  7450 ;;		On exit  : 3F/0
  7451 ;;		Unchanged: 0/0
  7452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7457 ;;Total ram usage:        0 bytes
  7458 ;; Hardware stack levels used:    1
  7459 ;; Hardware stack levels required when called:   16
  7460 ;; This function calls:
  7461 ;;		_SPI1_Exchange8bit
  7462 ;;		_wdtdelay
  7463 ;; This function is called by:
  7464 ;;		_init_display
  7465 ;; This function uses a reentrant model
  7466 ;;
  7467                           
  7468                           	psect	text12
  7469  01C1F8                     __ptext12:
  7470                           	opt callstack 0
  7471  01C1F8                     _send_lcd_data:
  7472                           	opt callstack 13
  7473                           
  7474                           ; BSR set to: 61
  7475                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7476                           ;incstack = 0
  7477                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  7478  01C1F8  94BC               	bcf	188,2,c	;volatile
  7479                           
  7480                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  7481                           ;stkvar	_data @ sp[(0)+-1]
  7482  01C1FA  0EFF               	movlw	-1
  7483  01C1FC  50E3               	movf	plusw1,w,c
  7484  01C1FE  6EE6               	movwf	postinc1,c
  7485  01C200  ECBB  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7486                           
  7487                           ; BSR set to: 57
  7488                           ;eadog.c: 127:  wdtdelay(8);
  7489  01C204  0E08               	movlw	8
  7490  01C206  6EE6               	movwf	postinc1,c
  7491  01C208  0E00               	movlw	0
  7492  01C20A  6EE6               	movwf	postinc1,c
  7493  01C20C  0E00               	movlw	0
  7494  01C20E  6EE6               	movwf	postinc1,c
  7495  01C210  0E00               	movlw	0
  7496  01C212  6EE6               	movwf	postinc1,c
  7497  01C214  ECF5  F0DA         	call	_wdtdelay	;wreg free
  7498                           
  7499                           ; BSR set to: 0
  7500                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  7501  01C218  52E5               	movf	postdec1,f,c
  7502  01C21A  0012               	return		;funcret
  7503  01C21C                     __end_of_send_lcd_data:
  7504                           	opt callstack 0
  7505                           
  7506 ;; *************** function _send_lcd_cmd_long *****************
  7507 ;; Defined at:
  7508 ;;		line 139 in file "eadog.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;  cmd             1  [STACK] const unsigned char 
  7511 ;; Auto vars:     Size  Location     Type
  7512 ;;		None
  7513 ;; Return value:  Size  Location     Type
  7514 ;;                  1  [STACK] void 
  7515 ;; Registers used:
  7516 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7517 ;; Tracked objects:
  7518 ;;		On entry : 3F/0
  7519 ;;		On exit  : 3F/0
  7520 ;;		Unchanged: 0/0
  7521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7526 ;;Total ram usage:        0 bytes
  7527 ;; Hardware stack levels used:    1
  7528 ;; Hardware stack levels required when called:   16
  7529 ;; This function calls:
  7530 ;;		_SPI1_Exchange8bit
  7531 ;;		_wdtdelay
  7532 ;; This function is called by:
  7533 ;;		_init_display
  7534 ;; This function uses a reentrant model
  7535 ;;
  7536                           
  7537                           	psect	text13
  7538  01BA9C                     __ptext13:
  7539                           	opt callstack 0
  7540  01BA9C                     _send_lcd_cmd_long:
  7541                           	opt callstack 13
  7542                           
  7543                           ; BSR set to: 0
  7544                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7545                           ;incstack = 0
  7546                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  7547  01BA9C  94BC               	bcf	188,2,c	;volatile
  7548                           
  7549                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  7550  01BA9E  0EFE               	movlw	254
  7551  01BAA0  6EE6               	movwf	postinc1,c
  7552  01BAA2  ECBB  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7553                           
  7554                           ; BSR set to: 57
  7555                           ;eadog.c: 143:  wdtdelay(8);
  7556  01BAA6  0E08               	movlw	8
  7557  01BAA8  6EE6               	movwf	postinc1,c
  7558  01BAAA  0E00               	movlw	0
  7559  01BAAC  6EE6               	movwf	postinc1,c
  7560  01BAAE  0E00               	movlw	0
  7561  01BAB0  6EE6               	movwf	postinc1,c
  7562  01BAB2  0E00               	movlw	0
  7563  01BAB4  6EE6               	movwf	postinc1,c
  7564  01BAB6  ECF5  F0DA         	call	_wdtdelay	;wreg free
  7565                           
  7566                           ; BSR set to: 0
  7567                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  7568                           ;stkvar	_cmd @ sp[(0)+-1]
  7569  01BABA  0EFF               	movlw	-1
  7570  01BABC  50E3               	movf	plusw1,w,c
  7571  01BABE  6EE6               	movwf	postinc1,c
  7572  01BAC0  ECBB  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7573                           
  7574                           ;eadog.c: 145:  wdtdelay(800);
  7575  01BAC4  0E20               	movlw	32
  7576  01BAC6  6EE6               	movwf	postinc1,c
  7577  01BAC8  0E03               	movlw	3
  7578  01BACA  6EE6               	movwf	postinc1,c
  7579  01BACC  0E00               	movlw	0
  7580  01BACE  6EE6               	movwf	postinc1,c
  7581  01BAD0  0E00               	movlw	0
  7582  01BAD2  6EE6               	movwf	postinc1,c
  7583  01BAD4  ECF5  F0DA         	call	_wdtdelay	;wreg free
  7584                           
  7585                           ; BSR set to: 0
  7586                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7587  01BAD8  52E5               	movf	postdec1,f,c
  7588  01BADA  0012               	return		;funcret
  7589  01BADC                     __end_of_send_lcd_cmd_long:
  7590                           	opt callstack 0
  7591                           
  7592 ;; *************** function _send_lcd_cmd *****************
  7593 ;; Defined at:
  7594 ;;		line 130 in file "eadog.c"
  7595 ;; Parameters:    Size  Location     Type
  7596 ;;  cmd             1  [STACK] const unsigned char 
  7597 ;; Auto vars:     Size  Location     Type
  7598 ;;		None
  7599 ;; Return value:  Size  Location     Type
  7600 ;;                  1  [STACK] void 
  7601 ;; Registers used:
  7602 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7603 ;; Tracked objects:
  7604 ;;		On entry : 3F/0
  7605 ;;		On exit  : 3F/0
  7606 ;;		Unchanged: 0/0
  7607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7612 ;;Total ram usage:        0 bytes
  7613 ;; Hardware stack levels used:    1
  7614 ;; Hardware stack levels required when called:   16
  7615 ;; This function calls:
  7616 ;;		_SPI1_Exchange8bit
  7617 ;;		_wdtdelay
  7618 ;; This function is called by:
  7619 ;;		_init_display
  7620 ;; This function uses a reentrant model
  7621 ;;
  7622                           
  7623                           	psect	text14
  7624  01BADC                     __ptext14:
  7625                           	opt callstack 0
  7626  01BADC                     _send_lcd_cmd:
  7627                           	opt callstack 13
  7628                           
  7629                           ; BSR set to: 0
  7630                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7631                           ;incstack = 0
  7632                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  7633  01BADC  94BC               	bcf	188,2,c	;volatile
  7634                           
  7635                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  7636  01BADE  0EFE               	movlw	254
  7637  01BAE0  6EE6               	movwf	postinc1,c
  7638  01BAE2  ECBB  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7639                           
  7640                           ; BSR set to: 57
  7641                           ;eadog.c: 134:  wdtdelay(8);
  7642  01BAE6  0E08               	movlw	8
  7643  01BAE8  6EE6               	movwf	postinc1,c
  7644  01BAEA  0E00               	movlw	0
  7645  01BAEC  6EE6               	movwf	postinc1,c
  7646  01BAEE  0E00               	movlw	0
  7647  01BAF0  6EE6               	movwf	postinc1,c
  7648  01BAF2  0E00               	movlw	0
  7649  01BAF4  6EE6               	movwf	postinc1,c
  7650  01BAF6  ECF5  F0DA         	call	_wdtdelay	;wreg free
  7651                           
  7652                           ; BSR set to: 0
  7653                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  7654                           ;stkvar	_cmd @ sp[(0)+-1]
  7655  01BAFA  0EFF               	movlw	-1
  7656  01BAFC  50E3               	movf	plusw1,w,c
  7657  01BAFE  6EE6               	movwf	postinc1,c
  7658  01BB00  ECBB  F0E1         	call	_SPI1_Exchange8bit	;wreg free
  7659                           
  7660                           ;eadog.c: 136:  wdtdelay(8);
  7661  01BB04  0E08               	movlw	8
  7662  01BB06  6EE6               	movwf	postinc1,c
  7663  01BB08  0E00               	movlw	0
  7664  01BB0A  6EE6               	movwf	postinc1,c
  7665  01BB0C  0E00               	movlw	0
  7666  01BB0E  6EE6               	movwf	postinc1,c
  7667  01BB10  0E00               	movlw	0
  7668  01BB12  6EE6               	movwf	postinc1,c
  7669  01BB14  ECF5  F0DA         	call	_wdtdelay	;wreg free
  7670                           
  7671                           ; BSR set to: 0
  7672                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  7673  01BB18  52E5               	movf	postdec1,f,c
  7674  01BB1A  0012               	return		;funcret
  7675  01BB1C                     __end_of_send_lcd_cmd:
  7676                           	opt callstack 0
  7677                           
  7678 ;; *************** function _SPI1_Exchange8bit *****************
  7679 ;; Defined at:
  7680 ;;		line 79 in file "mcc_generated_files/spi1.c"
  7681 ;; Parameters:    Size  Location     Type
  7682 ;;  data            1  [STACK] unsigned char 
  7683 ;; Auto vars:     Size  Location     Type
  7684 ;;		None
  7685 ;; Return value:  Size  Location     Type
  7686 ;;                  1  [STACK] unsigned char 
  7687 ;; Registers used:
  7688 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  7689 ;; Tracked objects:
  7690 ;;		On entry : 0/0
  7691 ;;		On exit  : 3F/39
  7692 ;;		Unchanged: 0/0
  7693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7698 ;;Total ram usage:        0 bytes
  7699 ;; Hardware stack levels used:    1
  7700 ;; Hardware stack levels required when called:   15
  7701 ;; This function calls:
  7702 ;;		Nothing
  7703 ;; This function is called by:
  7704 ;;		_send_lcd_data
  7705 ;;		_send_lcd_cmd
  7706 ;;		_send_lcd_cmd_long
  7707 ;;		_set_dac
  7708 ;; This function uses a reentrant model
  7709 ;;
  7710                           
  7711                           	psect	text15
  7712  01C376                     __ptext15:
  7713                           	opt callstack 0
  7714  01C376                     _SPI1_Exchange8bit:
  7715                           	opt callstack 14
  7716                           
  7717                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  7718                           
  7719                           ; BSR set to: 0
  7720                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7721                           ;incstack = 0
  7722  01C376  0E01               	movlw	1
  7723  01C378  013D               	movlb	61	; () banked
  7724  01C37A  6F12               	movwf	18,b	;volatile
  7725                           
  7726                           ; BSR set to: 61
  7727                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  7728                           ;stkvar	_data @ sp[(0)+-1]
  7729  01C37C  0EFF               	movlw	-1
  7730  01C37E  006F FF8F FD11     	movff	plusw1,15633	;volatile
  7731  01C384                     l807:
  7732                           
  7733                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7734  01C384  0139               	movlb	57	; () banked
  7735  01C386  A9A2               	btfss	162,4,b	;volatile
  7736  01C388  D7FD               	goto	l807
  7737                           
  7738                           ; BSR set to: 57
  7739                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7740  01C38A  006F F440  F001    	movff	15632,btemp	;volatile
  7741                           
  7742                           ; BSR set to: 57
  7743                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7744  01C390  52E5               	movf	postdec1,f,c
  7745  01C392  0012               	return		;funcret
  7746  01C394                     __end_of_SPI1_Exchange8bit:
  7747                           	opt callstack 0
  7748                           
  7749 ;; *************** function _ringBufS_init *****************
  7750 ;; Defined at:
  7751 ;;		line 22 in file "ringbufs.c"
  7752 ;; Parameters:    Size  Location     Type
  7753 ;;  _this           2  [STACK] PTR volatile struct ring
  7754 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7755 ;; Auto vars:     Size  Location     Type
  7756 ;;		None
  7757 ;; Return value:  Size  Location     Type
  7758 ;;                  1  [STACK] void 
  7759 ;; Registers used:
  7760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7761 ;; Tracked objects:
  7762 ;;		On entry : 0/1
  7763 ;;		On exit  : 0/0
  7764 ;;		Unchanged: 0/0
  7765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7770 ;;Total ram usage:        0 bytes
  7771 ;; Hardware stack levels used:    1
  7772 ;; Hardware stack levels required when called:   16
  7773 ;; This function calls:
  7774 ;;		_memset
  7775 ;; This function is called by:
  7776 ;;		_init_display
  7777 ;; This function uses a reentrant model
  7778 ;;
  7779                           
  7780                           	psect	text16
  7781  01BF9E                     __ptext16:
  7782                           	opt callstack 0
  7783  01BF9E                     _ringBufS_init:
  7784                           	opt callstack 13
  7785                           
  7786                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7787                           
  7788                           ; BSR set to: 57
  7789                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7790                           ;incstack = 0
  7791  01BF9E  0E43               	movlw	67
  7792  01BFA0  6EE6               	movwf	postinc1,c
  7793  01BFA2  0E00               	movlw	0
  7794  01BFA4  6EE6               	movwf	postinc1,c
  7795  01BFA6  0E00               	movlw	0
  7796  01BFA8  6EE6               	movwf	postinc1,c
  7797  01BFAA  0E00               	movlw	0
  7798  01BFAC  6EE6               	movwf	postinc1,c
  7799                           
  7800                           ;stkvar	__this @ sp[(-4)+-2]
  7801  01BFAE  0EFA               	movlw	-6
  7802  01BFB0  006F FF8F FFE6     	movff	plusw1,postinc1
  7803  01BFB6  006F FF8F FFE6     	movff	plusw1,postinc1
  7804  01BFBC  EC4E  F0B7         	call	_memset	;wreg free
  7805                           
  7806                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7807  01BFC0  52E5               	movf	postdec1,f,c
  7808  01BFC2  52E5               	movf	postdec1,f,c
  7809  01BFC4  0012               	return		;funcret
  7810  01BFC6                     __end_of_ringBufS_init:
  7811                           	opt callstack 0
  7812                           
  7813 ;; *************** function _init_bsoc *****************
  7814 ;; Defined at:
  7815 ;;		line 109 in file "bsoc.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;		None
  7818 ;; Auto vars:     Size  Location     Type
  7819 ;;		None
  7820 ;; Return value:  Size  Location     Type
  7821 ;;                  1  [STACK] void 
  7822 ;; Registers used:
  7823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7824 ;; Tracked objects:
  7825 ;;		On entry : 0/0
  7826 ;;		On exit  : 0/0
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7833 ;;Total ram usage:        0 bytes
  7834 ;; Hardware stack levels used:    1
  7835 ;; Hardware stack levels required when called:   18
  7836 ;; This function calls:
  7837 ;;		_TMR3_SetInterruptHandler
  7838 ;;		_Volts_to_SOC
  7839 ;;		___fldiv
  7840 ;;		___flmul
  7841 ;;		___fltol
  7842 ;;		___xxtofl
  7843 ;;		_conv_raw_result
  7844 ;; This function is called by:
  7845 ;;		_main
  7846 ;; This function uses a reentrant model
  7847 ;;
  7848                           
  7849                           	psect	text17
  7850  017C12                     __ptext17:
  7851                           	opt callstack 0
  7852  017C12                     _init_bsoc:
  7853                           	opt callstack 12
  7854                           
  7855                           ;bsoc.c: 114:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  7856                           
  7857                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7858                           ;incstack = 0
  7859  017C12  0E00               	movlw	0
  7860  017C14  6EE6               	movwf	postinc1,c
  7861  017C16  0E00               	movlw	0
  7862  017C18  6EE6               	movwf	postinc1,c
  7863  017C1A  0E7A               	movlw	122
  7864  017C1C  6EE6               	movwf	postinc1,c
  7865  017C1E  0E44               	movlw	68
  7866  017C20  6EE6               	movwf	postinc1,c
  7867  017C22  0E00               	movlw	0
  7868  017C24  6EE6               	movwf	postinc1,c
  7869  017C26  0E04               	movlw	4
  7870  017C28  6EE6               	movwf	postinc1,c
  7871  017C2A  EC95  F0A9         	call	_conv_raw_result	;wreg free
  7872  017C2E  0060  F007  FFE6   	movff	btemp,postinc1
  7873  017C34  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7874  017C3A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7875  017C40  0060  F013  FFE6   	movff	btemp+3,postinc1
  7876  017C46  EC51  F0C8         	call	___fltol	;wreg free
  7877  017C4A  0060  F007  FFE6   	movff	btemp,postinc1
  7878  017C50  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7879  017C56  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7880  017C5C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7881  017C62  0E00               	movlw	0
  7882  017C64  6EE6               	movwf	postinc1,c
  7883  017C66  EC65  F0C2         	call	___xxtofl	;wreg free
  7884  017C6A  0060  F007  FFE6   	movff	btemp,postinc1
  7885  017C70  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7886  017C76  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7887  017C7C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7888  017C82  ECE5  F09E         	call	___flmul	;wreg free
  7889  017C86  0060  F007  FFE6   	movff	btemp,postinc1
  7890  017C8C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7891  017C92  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7892  017C98  0060  F013  FFE6   	movff	btemp+3,postinc1
  7893  017C9E  EC51  F0C8         	call	___fltol	;wreg free
  7894  017CA2  0060  F007  FFE6   	movff	btemp,postinc1
  7895  017CA8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7896  017CAE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7897  017CB4  0060  F013  FFE6   	movff	btemp+3,postinc1
  7898  017CBA  EC95  F0D3         	call	_Volts_to_SOC	;wreg free
  7899  017CBE  0060  F004  F7B5   	movff	btemp,_C+182	;volatile
  7900  017CC4  0060  F008  F7B6   	movff	btemp+1,_C+183	;volatile
  7901                           
  7902                           ;bsoc.c: 115:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  7903  017CCA  EE21  F38B         	lfsr	2,_C+140	;volatile
  7904  017CCE  006F FF7B FFE6     	movff	postinc2,postinc1
  7905  017CD4  006F FF7B FFE6     	movff	postinc2,postinc1
  7906  017CDA  006F FF7B FFE6     	movff	postinc2,postinc1
  7907  017CE0  006F FF7B FFE6     	movff	postinc2,postinc1
  7908  017CE6  0E00               	movlw	0
  7909  017CE8  6EE6               	movwf	postinc1,c
  7910  017CEA  0E00               	movlw	0
  7911  017CEC  6EE6               	movwf	postinc1,c
  7912  017CEE  0EC8               	movlw	200
  7913  017CF0  6EE6               	movwf	postinc1,c
  7914  017CF2  0E42               	movlw	66
  7915  017CF4  6EE6               	movwf	postinc1,c
  7916  017CF6  0E00               	movlw	0
  7917  017CF8  6EE6               	movwf	postinc1,c
  7918  017CFA  0E00               	movlw	0
  7919  017CFC  6EE6               	movwf	postinc1,c
  7920  017CFE  0E7A               	movlw	122
  7921  017D00  6EE6               	movwf	postinc1,c
  7922  017D02  0E44               	movlw	68
  7923  017D04  6EE6               	movwf	postinc1,c
  7924  017D06  0E00               	movlw	0
  7925  017D08  6EE6               	movwf	postinc1,c
  7926  017D0A  0E04               	movlw	4
  7927  017D0C  6EE6               	movwf	postinc1,c
  7928  017D0E  EC95  F0A9         	call	_conv_raw_result	;wreg free
  7929  017D12  0060  F007  FFE6   	movff	btemp,postinc1
  7930  017D18  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7931  017D1E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7932  017D24  0060  F013  FFE6   	movff	btemp+3,postinc1
  7933  017D2A  EC51  F0C8         	call	___fltol	;wreg free
  7934  017D2E  0060  F007  FFE6   	movff	btemp,postinc1
  7935  017D34  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7936  017D3A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7937  017D40  0060  F013  FFE6   	movff	btemp+3,postinc1
  7938  017D46  0E00               	movlw	0
  7939  017D48  6EE6               	movwf	postinc1,c
  7940  017D4A  EC65  F0C2         	call	___xxtofl	;wreg free
  7941  017D4E  0060  F007  FFE6   	movff	btemp,postinc1
  7942  017D54  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7943  017D5A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7944  017D60  0060  F013  FFE6   	movff	btemp+3,postinc1
  7945  017D66  ECE5  F09E         	call	___flmul	;wreg free
  7946  017D6A  0060  F007  FFE6   	movff	btemp,postinc1
  7947  017D70  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7948  017D76  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7949  017D7C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7950  017D82  EC51  F0C8         	call	___fltol	;wreg free
  7951  017D86  0060  F007  FFE6   	movff	btemp,postinc1
  7952  017D8C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7953  017D92  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7954  017D98  0060  F013  FFE6   	movff	btemp+3,postinc1
  7955  017D9E  EC95  F0D3         	call	_Volts_to_SOC	;wreg free
  7956  017DA2  0060  F004  F00B   	movff	btemp,btemp+10
  7957  017DA8  0060  F008  F00C   	movff	btemp+1,btemp+11
  7958  017DAE  500B               	movf	(btemp+10)^0,w,c
  7959  017DB0  6E05               	movwf	(btemp+4)^0,c
  7960  017DB2  500C               	movf	(btemp+11)^0,w,c
  7961  017DB4  6E06               	movwf	(btemp+5)^0,c
  7962  017DB6  6A07               	clrf	(btemp+6)^0,c
  7963  017DB8  6A08               	clrf	(btemp+7)^0,c
  7964  017DBA  0060  F017  FFE6   	movff	btemp+4,postinc1
  7965  017DC0  0060  F01B  FFE6   	movff	btemp+5,postinc1
  7966  017DC6  0060  F01F  FFE6   	movff	btemp+6,postinc1
  7967  017DCC  0060  F023  FFE6   	movff	btemp+7,postinc1
  7968  017DD2  0E00               	movlw	0
  7969  017DD4  6EE6               	movwf	postinc1,c
  7970  017DD6  EC65  F0C2         	call	___xxtofl	;wreg free
  7971  017DDA  0060  F007  FFE6   	movff	btemp,postinc1
  7972  017DE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7973  017DE6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7974  017DEC  0060  F013  FFE6   	movff	btemp+3,postinc1
  7975  017DF2  ECD8  F0A6         	call	___fldiv	;wreg free
  7976  017DF6  0060  F007  FFE6   	movff	btemp,postinc1
  7977  017DFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7978  017E02  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7979  017E08  0060  F013  FFE6   	movff	btemp+3,postinc1
  7980  017E0E  ECE5  F09E         	call	___flmul	;wreg free
  7981  017E12  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  7982  017E18  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  7983  017E1E  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  7984  017E24  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  7985                           
  7986                           ;bsoc.c: 116:  C.dynamic_ah_adj = C.dynamic_ah;
  7987  017E2A  EE21  F38F         	lfsr	2,_C+144	;volatile
  7988  017E2E  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  7989  017E34  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  7990  017E3A  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  7991  017E40  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  7992                           
  7993                           ;bsoc.c: 117:  TMR3_SetInterruptHandler(calc_bsoc);
  7994  017E46  0E94               	movlw	low _calc_bsoc
  7995  017E48  6EE6               	movwf	postinc1,c
  7996  017E4A  0E33               	movlw	high _calc_bsoc
  7997  017E4C  6EE6               	movwf	postinc1,c
  7998  017E4E  0E01               	movlw	low (_calc_bsoc shr (0+16))
  7999  017E50  6EE6               	movwf	postinc1,c
  8000  017E52  EC5B  F0E0         	call	_TMR3_SetInterruptHandler	;wreg free
  8001                           
  8002                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8003  017E56  0012               	return		;funcret
  8004  017E58                     __end_of_init_bsoc:
  8005                           	opt callstack 0
  8006                           
  8007 ;; *************** function _Volts_to_SOC *****************
  8008 ;; Defined at:
  8009 ;;		line 174 in file "bsoc.c"
  8010 ;; Parameters:    Size  Location     Type
  8011 ;;  cvoltage        4  [STACK] const unsigned long 
  8012 ;; Auto vars:     Size  Location     Type
  8013 ;;  soc             2  [STACK] unsigned short 
  8014 ;;  slot            1  [STACK] unsigned char 
  8015 ;; Return value:  Size  Location     Type
  8016 ;;                  2  [STACK] unsigned short 
  8017 ;; Registers used:
  8018 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8019 ;; Tracked objects:
  8020 ;;		On entry : 0/0
  8021 ;;		On exit  : 0/0
  8022 ;;		Unchanged: 0/0
  8023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8028 ;;Total ram usage:        0 bytes
  8029 ;; Hardware stack levels used:    1
  8030 ;; Hardware stack levels required when called:   15
  8031 ;; This function calls:
  8032 ;;		Nothing
  8033 ;; This function is called by:
  8034 ;;		_init_bsoc
  8035 ;; This function uses a reentrant model
  8036 ;;
  8037                           
  8038                           	psect	text18
  8039  01A72A                     __ptext18:
  8040                           	opt callstack 0
  8041  01A72A                     _Volts_to_SOC:
  8042                           	opt callstack 0
  8043                           
  8044                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8045  01A72A  52E6               	movf	postinc1,f,c
  8046  01A72C  52E6               	movf	postinc1,f,c
  8047  01A72E  52E6               	movf	postinc1,f,c
  8048                           
  8049                           ;bsoc.c: 174: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 175: {;bsoc.c: 176:
      +                            uint8_t slot;;bsoc.c: 177:  uint16_t soc = 0;
  8050                           ;stkvar	_soc @ sp[(-3)+0]
  8051                           
  8052                           ;incstack = 0
  8053  01A730  0EFD               	movlw	-3
  8054  01A732  6AE3               	clrf	plusw1,c
  8055  01A734  0EFE               	movlw	-2
  8056  01A736  6AE3               	clrf	plusw1,c
  8057                           
  8058                           ;bsoc.c: 182:  for (slot = 0; slot < 26; slot++) {
  8059                           ;stkvar	_slot @ sp[(-3)+2]
  8060  01A738  0EFF               	movlw	-1
  8061  01A73A  6AE3               	clrf	plusw1,c
  8062  01A73C                     l10875:
  8063                           
  8064                           ;bsoc.c: 183:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  8065                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  8066                           ;stkvar	_slot @ sp[(-3)+2]
  8067  01A73C  0EFF               	movlw	-1
  8068  01A73E  50E3               	movf	plusw1,w,c
  8069  01A740  0D08               	mullw	8
  8070  01A742  0EE5               	movlw	low _BVSOC_TABLE
  8071  01A744  24F3               	addwf	243,w,c
  8072  01A746  6EF6               	movwf	tblptrl,c
  8073  01A748  0EF9               	movlw	high _BVSOC_TABLE
  8074  01A74A  20F4               	addwfc	244,w,c
  8075  01A74C  6EF7               	movwf	tblptrh,c
  8076  01A74E                     	if	1	;There are 3 active tblptr bytes
  8077  01A74E  6AF8               	clrf	tblptru,c
  8078  01A750  0E00               	movlw	low (__mediumconst shr (0+16))
  8079  01A752  22F8               	addwfc	tblptru,f,c
  8080  01A754                     	endif
  8081  01A754  0EF9               	movlw	-7
  8082  01A756  50E3               	movf	plusw1,w,c
  8083  01A758  0009               	tblrd		*+
  8084  01A75A  5CF5               	subwf	tablat,w,c
  8085  01A75C  0EFA               	movlw	-6
  8086  01A75E  50E3               	movf	plusw1,w,c
  8087  01A760  0009               	tblrd		*+
  8088  01A762  58F5               	subwfb	tablat,w,c
  8089  01A764  0EFB               	movlw	-5
  8090  01A766  50E3               	movf	plusw1,w,c
  8091  01A768  0009               	tblrd		*+
  8092  01A76A  58F5               	subwfb	tablat,w,c
  8093  01A76C  0EFC               	movlw	-4
  8094  01A76E  50E3               	movf	plusw1,w,c
  8095  01A770  0009               	tblrd		*+
  8096  01A772  58F5               	subwfb	tablat,w,c
  8097  01A774  B0D8               	btfsc	status,0,c
  8098  01A776  D020               	goto	l10879
  8099                           
  8100                           ;bsoc.c: 184:    soc = BVSOC_TABLE[slot][1];
  8101                           ;stkvar	_slot @ sp[(-3)+2]
  8102  01A778  0EFF               	movlw	-1
  8103  01A77A  50E3               	movf	plusw1,w,c
  8104  01A77C  0D08               	mullw	8
  8105  01A77E  0E04               	movlw	4
  8106  01A780  26F3               	addwf	243,f,c
  8107  01A782  0E00               	movlw	0
  8108  01A784  22F4               	addwfc	244,f,c
  8109  01A786  0EE5               	movlw	low _BVSOC_TABLE
  8110  01A788  24F3               	addwf	243,w,c
  8111  01A78A  6EF6               	movwf	tblptrl,c
  8112  01A78C  0EF9               	movlw	high _BVSOC_TABLE
  8113  01A78E  20F4               	addwfc	244,w,c
  8114  01A790  6EF7               	movwf	tblptrh,c
  8115  01A792                     	if	1	;There are 3 active tblptr bytes
  8116  01A792  6AF8               	clrf	tblptru,c
  8117  01A794  0E00               	movlw	low (__mediumconst shr (0+16))
  8118  01A796  22F8               	addwfc	tblptru,f,c
  8119  01A798                     	endif
  8120  01A798  0009               	tblrd		*+
  8121  01A79A  006F FFD4  F00B    	movff	tablat,btemp+10
  8122  01A7A0  0009               	tblrd		*+
  8123  01A7A2  006F FFD4  F00C    	movff	tablat,btemp+11
  8124                           
  8125                           ;stkvar	_soc @ sp[(-3)+0]
  8126  01A7A8  0EFD               	movlw	-3
  8127  01A7AA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8128  01A7B0  0EFE               	movlw	-2
  8129  01A7B2  0060  F033  FFE3   	movff	btemp+11,plusw1
  8130  01A7B8                     l10879:
  8131                           
  8132                           ;bsoc.c: 186:  }
  8133                           ;stkvar	_slot @ sp[(-3)+2]
  8134  01A7B8  0EFF               	movlw	-1
  8135  01A7BA  2AE3               	incf	plusw1,f,c
  8136                           
  8137                           ;stkvar	_slot @ sp[(-3)+2]
  8138  01A7BC  0EFF               	movlw	-1
  8139  01A7BE  006F FF8C  F001    	movff	plusw1,btemp
  8140  01A7C4  0E19               	movlw	25
  8141  01A7C6  6401               	cpfsgt	btemp^0,c
  8142  01A7C8  D7B9               	goto	l10875
  8143                           
  8144                           ;bsoc.c: 187:  return soc;
  8145                           ;stkvar	_soc @ sp[(-3)+0]
  8146  01A7CA  0EFD               	movlw	-3
  8147  01A7CC  006F FF8C  F001    	movff	plusw1,btemp
  8148  01A7D2  0EFE               	movlw	-2
  8149  01A7D4  006F FF8C  F002    	movff	plusw1,btemp+1
  8150                           
  8151                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  8152  01A7DA  0EF9               	movlw	249
  8153  01A7DC  26E1               	addwf	fsr1l,f,c
  8154  01A7DE  0EFF               	movlw	255
  8155  01A7E0  22E2               	addwfc	fsr1h,f,c
  8156  01A7E2  0012               	return		;funcret
  8157  01A7E4                     __end_of_Volts_to_SOC:
  8158                           	opt callstack 0
  8159                           
  8160 ;; *************** function _hid_display *****************
  8161 ;; Defined at:
  8162 ;;		line 17 in file "hid.c"
  8163 ;; Parameters:    Size  Location     Type
  8164 ;;  h               2  [STACK] PTR struct H_data
  8165 ;;		 -> H(7), 
  8166 ;; Auto vars:     Size  Location     Type
  8167 ;;		None
  8168 ;; Return value:  Size  Location     Type
  8169 ;;                  2  [STACK] PTR struct H_data
  8170 ;; Registers used:
  8171 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  8172 ;; Tracked objects:
  8173 ;;		On entry : 3F/39
  8174 ;;		On exit  : 0/0
  8175 ;;		Unchanged: 0/0
  8176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8181 ;;Total ram usage:        0 bytes
  8182 ;; Hardware stack levels used:    1
  8183 ;; Hardware stack levels required when called:   17
  8184 ;; This function calls:
  8185 ;;		_hid_input
  8186 ;; This function is called by:
  8187 ;;		_main
  8188 ;; This function uses a reentrant model
  8189 ;;
  8190                           
  8191                           	psect	text19
  8192  0186CE                     __ptext19:
  8193                           	opt callstack 0
  8194  0186CE                     _hid_display:
  8195                           	opt callstack 13
  8196                           
  8197                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  8198                           ;stkvar	_h @ sp[(0)+-2]
  8199                           
  8200                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8201                           ;incstack = 0
  8202  0186CE  0EFE               	movlw	-2
  8203  0186D0  006F FF8F FFE6     	movff	plusw1,postinc1
  8204  0186D6  006F FF8F FFE6     	movff	plusw1,postinc1
  8205  0186DC  EC63  F0D2         	call	_hid_input	;wreg free
  8206                           
  8207                           ;hid.c: 21:  switch (h->h_state) {
  8208  0186E0  D0C6               	goto	l13263
  8209  0186E2                     l13241:
  8210                           
  8211                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  8212                           ;stkvar	_h @ sp[(0)+-2]
  8213  0186E2  0EFE               	movlw	-2
  8214  0186E4  006F FF8C  F00B    	movff	plusw1,btemp+10
  8215  0186EA  0EFF               	movlw	-1
  8216  0186EC  006F FF8C  F00C    	movff	plusw1,btemp+11
  8217  0186F2  0E01               	movlw	1
  8218  0186F4  240B               	addwf	(btemp+10)^0,w,c
  8219  0186F6  6ED9               	movwf	fsr2l,c
  8220  0186F8  0E00               	movlw	0
  8221  0186FA  200C               	addwfc	(btemp+11)^0,w,c
  8222  0186FC  6EDA               	movwf	fsr2h,c
  8223  0186FE  0E01               	movlw	1
  8224  018700  6EDF               	movwf	indf2,c
  8225                           
  8226                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  8227                           ;stkvar	_h @ sp[(0)+-2]
  8228  018702  0EFE               	movlw	-2
  8229  018704  006F FF8F FFD9     	movff	plusw1,fsr2l
  8230  01870A  0EFF               	movlw	-1
  8231  01870C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8232  018712  0E00               	movlw	0
  8233  018714  6EDF               	movwf	indf2,c
  8234                           
  8235                           ;hid.c: 25:   h->wait_enter = 1;
  8236                           ;stkvar	_h @ sp[(0)+-2]
  8237  018716  0EFE               	movlw	-2
  8238  018718  006F FF8C  F00B    	movff	plusw1,btemp+10
  8239  01871E  0EFF               	movlw	-1
  8240  018720  006F FF8C  F00C    	movff	plusw1,btemp+11
  8241  018726  0E04               	movlw	4
  8242  018728  240B               	addwf	(btemp+10)^0,w,c
  8243  01872A  6ED9               	movwf	fsr2l,c
  8244  01872C  0E00               	movlw	0
  8245  01872E  200C               	addwfc	(btemp+11)^0,w,c
  8246  018730  6EDA               	movwf	fsr2h,c
  8247  018732  0E01               	movlw	1
  8248  018734  6EDF               	movwf	indf2,c
  8249                           
  8250                           ;hid.c: 26:   h->wait_select = 1;
  8251                           ;stkvar	_h @ sp[(0)+-2]
  8252  018736  0EFE               	movlw	-2
  8253  018738  006F FF8C  F00B    	movff	plusw1,btemp+10
  8254  01873E  0EFF               	movlw	-1
  8255  018740  006F FF8C  F00C    	movff	plusw1,btemp+11
  8256  018746  0E02               	movlw	2
  8257  018748  240B               	addwf	(btemp+10)^0,w,c
  8258  01874A  6ED9               	movwf	fsr2l,c
  8259  01874C  0E00               	movlw	0
  8260  01874E  200C               	addwfc	(btemp+11)^0,w,c
  8261  018750  6EDA               	movwf	fsr2h,c
  8262  018752  0E01               	movlw	1
  8263  018754  6EDF               	movwf	indf2,c
  8264                           
  8265                           ;hid.c: 27:   h->select_p = SW_OFF;
  8266                           ;stkvar	_h @ sp[(0)+-2]
  8267  018756  0EFE               	movlw	-2
  8268  018758  006F FF8C  F00B    	movff	plusw1,btemp+10
  8269  01875E  0EFF               	movlw	-1
  8270  018760  006F FF8C  F00C    	movff	plusw1,btemp+11
  8271  018766  0E03               	movlw	3
  8272  018768  240B               	addwf	(btemp+10)^0,w,c
  8273  01876A  6ED9               	movwf	fsr2l,c
  8274  01876C  0E00               	movlw	0
  8275  01876E  200C               	addwfc	(btemp+11)^0,w,c
  8276  018770  6EDA               	movwf	fsr2h,c
  8277  018772  0E00               	movlw	0
  8278  018774  6EDF               	movwf	indf2,c
  8279                           
  8280                           ;hid.c: 28:   h->enter_p = SW_OFF;
  8281                           ;stkvar	_h @ sp[(0)+-2]
  8282  018776  0EFE               	movlw	-2
  8283  018778  006F FF8C  F00B    	movff	plusw1,btemp+10
  8284  01877E  0EFF               	movlw	-1
  8285  018780  006F FF8C  F00C    	movff	plusw1,btemp+11
  8286  018786  0E05               	movlw	5
  8287  018788  240B               	addwf	(btemp+10)^0,w,c
  8288  01878A  6ED9               	movwf	fsr2l,c
  8289  01878C  0E00               	movlw	0
  8290  01878E  200C               	addwfc	(btemp+11)^0,w,c
  8291  018790  6EDA               	movwf	fsr2h,c
  8292  018792  0E00               	movlw	0
  8293  018794  D06A               	goto	L4
  8294  018796                     l13253:
  8295                           
  8296                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  8297                           ;stkvar	_h @ sp[(0)+-2]
  8298  018796  0EFE               	movlw	-2
  8299  018798  006F FF8C  F00B    	movff	plusw1,btemp+10
  8300  01879E  0EFF               	movlw	-1
  8301  0187A0  006F FF8C  F00C    	movff	plusw1,btemp+11
  8302  0187A6  0E02               	movlw	2
  8303  0187A8  240B               	addwf	(btemp+10)^0,w,c
  8304  0187AA  6ED9               	movwf	fsr2l,c
  8305  0187AC  0E00               	movlw	0
  8306  0187AE  200C               	addwfc	(btemp+11)^0,w,c
  8307  0187B0  6EDA               	movwf	fsr2h,c
  8308  0187B2  50DF               	movf	indf2,w,c
  8309  0187B4  A4D8               	btfss	status,2,c
  8310  0187B6  D076               	goto	l2048
  8311                           
  8312                           ;stkvar	_h @ sp[(0)+-2]
  8313  0187B8  0EFE               	movlw	-2
  8314  0187BA  006F FF8C  F00B    	movff	plusw1,btemp+10
  8315  0187C0  0EFF               	movlw	-1
  8316  0187C2  006F FF8C  F00C    	movff	plusw1,btemp+11
  8317  0187C8  0E03               	movlw	3
  8318  0187CA  240B               	addwf	(btemp+10)^0,w,c
  8319  0187CC  6ED9               	movwf	fsr2l,c
  8320  0187CE  0E00               	movlw	0
  8321  0187D0  200C               	addwfc	(btemp+11)^0,w,c
  8322  0187D2  6EDA               	movwf	fsr2h,c
  8323  0187D4  50DF               	movf	indf2,w,c
  8324  0187D6  A4D8               	btfss	status,2,c
  8325  0187D8  D065               	goto	l2048
  8326                           
  8327                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  8328                           ;stkvar	_h @ sp[(0)+-2]
  8329  0187DA  0EFE               	movlw	-2
  8330  0187DC  006F FF8C  F00B    	movff	plusw1,btemp+10
  8331  0187E2  0EFF               	movlw	-1
  8332  0187E4  006F FF8C  F00C    	movff	plusw1,btemp+11
  8333  0187EA  0E06               	movlw	6
  8334  0187EC  240B               	addwf	(btemp+10)^0,w,c
  8335  0187EE  6ED9               	movwf	fsr2l,c
  8336  0187F0  0E00               	movlw	0
  8337  0187F2  200C               	addwfc	(btemp+11)^0,w,c
  8338  0187F4  6EDA               	movwf	fsr2h,c
  8339                           
  8340                           ;stkvar	_h @ sp[(0)+-2]
  8341  0187F6  0EFE               	movlw	-2
  8342  0187F8  006F FF8C  F00B    	movff	plusw1,btemp+10
  8343  0187FE  0EFF               	movlw	-1
  8344  018800  006F FF8C  F00C    	movff	plusw1,btemp+11
  8345  018806  0E06               	movlw	6
  8346  018808  240B               	addwf	(btemp+10)^0,w,c
  8347  01880A  6EE9               	movwf	fsr0l,c
  8348  01880C  0E00               	movlw	0
  8349  01880E  200C               	addwfc	(btemp+11)^0,w,c
  8350  018810  6EEA               	movwf	fsr0h,c
  8351  018812  2AEF               	incf	indf0,f,c
  8352  018814  50EF               	movf	indf0,w,c
  8353  018816  0B03               	andlw	3
  8354  018818  6EDF               	movwf	indf2,c
  8355                           
  8356                           ;hid.c: 34:    h->hid_display = h->sequence;
  8357                           ;stkvar	_h @ sp[(0)+-2]
  8358  01881A  0EFE               	movlw	-2
  8359  01881C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8360  018822  0EFF               	movlw	-1
  8361  018824  006F FF8C  F00C    	movff	plusw1,btemp+11
  8362  01882A  0E06               	movlw	6
  8363  01882C  240B               	addwf	(btemp+10)^0,w,c
  8364  01882E  6ED9               	movwf	fsr2l,c
  8365  018830  0E00               	movlw	0
  8366  018832  200C               	addwfc	(btemp+11)^0,w,c
  8367  018834  6EDA               	movwf	fsr2h,c
  8368                           
  8369                           ;stkvar	_h @ sp[(0)+-2]
  8370  018836  0EFE               	movlw	-2
  8371  018838  006F FF8F FFE9     	movff	plusw1,fsr0l
  8372  01883E  0EFF               	movlw	-1
  8373  018840  006F FF8F FFEA     	movff	plusw1,fsr0h
  8374  018846  006F FF7F FFEF     	movff	indf2,indf0
  8375                           
  8376                           ;hid.c: 35:    h->wait_select = 1;
  8377                           ;stkvar	_h @ sp[(0)+-2]
  8378  01884C  0EFE               	movlw	-2
  8379  01884E  006F FF8C  F00B    	movff	plusw1,btemp+10
  8380  018854  0EFF               	movlw	-1
  8381  018856  006F FF8C  F00C    	movff	plusw1,btemp+11
  8382  01885C  0E02               	movlw	2
  8383  01885E  240B               	addwf	(btemp+10)^0,w,c
  8384  018860  6ED9               	movwf	fsr2l,c
  8385  018862  0E00               	movlw	0
  8386  018864  200C               	addwfc	(btemp+11)^0,w,c
  8387  018866  6EDA               	movwf	fsr2h,c
  8388  018868  0E01               	movlw	1
  8389  01886A                     L4:
  8390  01886A  6EDF               	movwf	indf2,c
  8391  01886C  D01B               	goto	l2048
  8392  01886E                     l13263:
  8393                           
  8394                           ;stkvar	_h @ sp[(0)+-2]
  8395  01886E  0EFE               	movlw	-2
  8396  018870  006F FF8C  F00B    	movff	plusw1,btemp+10
  8397  018876  0EFF               	movlw	-1
  8398  018878  006F FF8C  F00C    	movff	plusw1,btemp+11
  8399  01887E  0E01               	movlw	1
  8400  018880  240B               	addwf	(btemp+10)^0,w,c
  8401  018882  6ED9               	movwf	fsr2l,c
  8402  018884  0E00               	movlw	0
  8403  018886  200C               	addwfc	(btemp+11)^0,w,c
  8404  018888  6EDA               	movwf	fsr2h,c
  8405  01888A  50DF               	movf	indf2,w,c
  8406  01888C  6E0B               	movwf	(btemp+10)^0,c
  8407  01888E  6A0C               	clrf	(btemp+11)^0,c
  8408                           
  8409                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8410                           ; Switch size 1, requested type "simple"
  8411                           ; Number of cases is 1, Range of values is 0 to 0
  8412                           ; switch strategies available:
  8413                           ; Name         Instructions Cycles
  8414                           ; simple_byte            4     3 (average)
  8415                           ;	Chosen strategy is simple_byte
  8416  018890  500C               	movf	(btemp+11)^0,w,c
  8417  018892  0A00               	xorlw	0	; case 0
  8418  018894  A4D8               	btfss	status,2,c
  8419  018896  D77F               	goto	l13253
  8420                           
  8421                           ; Switch size 1, requested type "simple"
  8422                           ; Number of cases is 2, Range of values is 0 to 1
  8423                           ; switch strategies available:
  8424                           ; Name         Instructions Cycles
  8425                           ; simple_byte            7     4 (average)
  8426                           ;	Chosen strategy is simple_byte
  8427  018898  500B               	movf	(btemp+10)^0,w,c
  8428  01889A  0A00               	xorlw	0	; case 0
  8429  01889C  B4D8               	btfsc	status,2,c
  8430  01889E  D721               	goto	l13241
  8431  0188A0  0A01               	xorlw	1	; case 1
  8432  0188A2  D779               	goto	l13253
  8433  0188A4                     l2048:
  8434                           
  8435                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  8436  0188A4  52E5               	movf	postdec1,f,c
  8437  0188A6  52E5               	movf	postdec1,f,c
  8438  0188A8  0012               	return		;funcret
  8439  0188AA                     __end_of_hid_display:
  8440                           	opt callstack 0
  8441                           
  8442 ;; *************** function _hid_input *****************
  8443 ;; Defined at:
  8444 ;;		line 3 in file "hid.c"
  8445 ;; Parameters:    Size  Location     Type
  8446 ;;  h               2  [STACK] PTR struct H_data
  8447 ;;		 -> H(7), 
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;		None
  8450 ;; Return value:  Size  Location     Type
  8451 ;;                  2  [STACK] PTR struct H_data
  8452 ;; Registers used:
  8453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8454 ;; Tracked objects:
  8455 ;;		On entry : 0/39
  8456 ;;		On exit  : 0/0
  8457 ;;		Unchanged: 0/0
  8458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8463 ;;Total ram usage:        0 bytes
  8464 ;; Hardware stack levels used:    1
  8465 ;; Hardware stack levels required when called:   16
  8466 ;; This function calls:
  8467 ;;		_get_switch
  8468 ;; This function is called by:
  8469 ;;		_hid_display
  8470 ;; This function uses a reentrant model
  8471 ;;
  8472                           
  8473                           	psect	text20
  8474  01A4C6                     __ptext20:
  8475                           	opt callstack 0
  8476  01A4C6                     _hid_input:
  8477                           	opt callstack 13
  8478                           
  8479                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  8480                           
  8481                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8482                           ;incstack = 0
  8483  01A4C6  0E02               	movlw	2
  8484  01A4C8  6EE6               	movwf	postinc1,c
  8485  01A4CA  EC77  F0DF         	call	_get_switch	;wreg free
  8486  01A4CE  5001               	movf	btemp^0,w,c
  8487  01A4D0  B4D8               	btfsc	status,2,c
  8488  01A4D2  D02C               	goto	l13081
  8489                           
  8490                           ;hid.c: 6:   h->wait_select = 0;
  8491                           ;stkvar	_h @ sp[(0)+-2]
  8492  01A4D4  0EFE               	movlw	-2
  8493  01A4D6  006F FF8C  F00B    	movff	plusw1,btemp+10
  8494  01A4DC  0EFF               	movlw	-1
  8495  01A4DE  006F FF8C  F00C    	movff	plusw1,btemp+11
  8496  01A4E4  0E02               	movlw	2
  8497  01A4E6  240B               	addwf	(btemp+10)^0,w,c
  8498  01A4E8  6ED9               	movwf	fsr2l,c
  8499  01A4EA  0E00               	movlw	0
  8500  01A4EC  200C               	addwfc	(btemp+11)^0,w,c
  8501  01A4EE  6EDA               	movwf	fsr2h,c
  8502  01A4F0  0E00               	movlw	0
  8503  01A4F2  6EDF               	movwf	indf2,c
  8504                           
  8505                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  8506  01A4F4  0E02               	movlw	2
  8507  01A4F6  6EE6               	movwf	postinc1,c
  8508  01A4F8  EC77  F0DF         	call	_get_switch	;wreg free
  8509  01A4FC  5001               	movf	btemp^0,w,c
  8510  01A4FE  B4D8               	btfsc	status,2,c
  8511  01A500  D003               	goto	u12510
  8512  01A502  6A0C               	clrf	(btemp+11)^0,c
  8513  01A504  2A0C               	incf	(btemp+11)^0,f,c
  8514  01A506  D001               	goto	u12528
  8515  01A508                     u12510:
  8516  01A508  6A0C               	clrf	(btemp+11)^0,c
  8517  01A50A                     u12528:
  8518                           
  8519                           ;stkvar	_h @ sp[(0)+-2]
  8520  01A50A  0EFE               	movlw	-2
  8521  01A50C  006F FF8C  F009    	movff	plusw1,btemp+8
  8522  01A512  0EFF               	movlw	-1
  8523  01A514  006F FF8C  F00A    	movff	plusw1,btemp+9
  8524  01A51A  0E03               	movlw	3
  8525  01A51C  2409               	addwf	(btemp+8)^0,w,c
  8526  01A51E  6ED9               	movwf	fsr2l,c
  8527  01A520  0E00               	movlw	0
  8528  01A522  200A               	addwfc	(btemp+9)^0,w,c
  8529  01A524  6EDA               	movwf	fsr2h,c
  8530  01A526  0060  F033  FFDF   	movff	btemp+11,indf2
  8531  01A52C                     l13081:
  8532                           
  8533                           ;hid.c: 10:  if (get_switch(SENTER)) {
  8534  01A52C  0E03               	movlw	3
  8535  01A52E  6EE6               	movwf	postinc1,c
  8536  01A530  EC77  F0DF         	call	_get_switch	;wreg free
  8537  01A534  5001               	movf	btemp^0,w,c
  8538  01A536  B4D8               	btfsc	status,2,c
  8539  01A538  D02C               	goto	l2039
  8540                           
  8541                           ;hid.c: 11:   h->wait_enter = 0;
  8542                           ;stkvar	_h @ sp[(0)+-2]
  8543  01A53A  0EFE               	movlw	-2
  8544  01A53C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8545  01A542  0EFF               	movlw	-1
  8546  01A544  006F FF8C  F00C    	movff	plusw1,btemp+11
  8547  01A54A  0E04               	movlw	4
  8548  01A54C  240B               	addwf	(btemp+10)^0,w,c
  8549  01A54E  6ED9               	movwf	fsr2l,c
  8550  01A550  0E00               	movlw	0
  8551  01A552  200C               	addwfc	(btemp+11)^0,w,c
  8552  01A554  6EDA               	movwf	fsr2h,c
  8553  01A556  0E00               	movlw	0
  8554  01A558  6EDF               	movwf	indf2,c
  8555                           
  8556                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  8557  01A55A  0E03               	movlw	3
  8558  01A55C  6EE6               	movwf	postinc1,c
  8559  01A55E  EC77  F0DF         	call	_get_switch	;wreg free
  8560  01A562  5001               	movf	btemp^0,w,c
  8561  01A564  B4D8               	btfsc	status,2,c
  8562  01A566  D003               	goto	u12540
  8563  01A568  6A0C               	clrf	(btemp+11)^0,c
  8564  01A56A  2A0C               	incf	(btemp+11)^0,f,c
  8565  01A56C  D001               	goto	u12558
  8566  01A56E                     u12540:
  8567  01A56E  6A0C               	clrf	(btemp+11)^0,c
  8568  01A570                     u12558:
  8569                           
  8570                           ;stkvar	_h @ sp[(0)+-2]
  8571  01A570  0EFE               	movlw	-2
  8572  01A572  006F FF8C  F009    	movff	plusw1,btemp+8
  8573  01A578  0EFF               	movlw	-1
  8574  01A57A  006F FF8C  F00A    	movff	plusw1,btemp+9
  8575  01A580  0E05               	movlw	5
  8576  01A582  2409               	addwf	(btemp+8)^0,w,c
  8577  01A584  6ED9               	movwf	fsr2l,c
  8578  01A586  0E00               	movlw	0
  8579  01A588  200A               	addwfc	(btemp+9)^0,w,c
  8580  01A58A  6EDA               	movwf	fsr2h,c
  8581  01A58C  0060  F033  FFDF   	movff	btemp+11,indf2
  8582  01A592                     l2039:
  8583                           
  8584                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
  8585  01A592  52E5               	movf	postdec1,f,c
  8586  01A594  52E5               	movf	postdec1,f,c
  8587  01A596  0012               	return		;funcret
  8588  01A598                     __end_of_hid_input:
  8589                           	opt callstack 0
  8590                           
  8591 ;; *************** function _get_switch *****************
  8592 ;; Defined at:
  8593 ;;		line 18 in file "dio.c"
  8594 ;; Parameters:    Size  Location     Type
  8595 ;;  i               1  [STACK] const unsigned char 
  8596 ;; Auto vars:     Size  Location     Type
  8597 ;;		None
  8598 ;; Return value:  Size  Location     Type
  8599 ;;                  1  [STACK] enum E17021
  8600 ;; Registers used:
  8601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  8602 ;; Tracked objects:
  8603 ;;		On entry : 0/39
  8604 ;;		On exit  : 0/0
  8605 ;;		Unchanged: 0/0
  8606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8611 ;;Total ram usage:        0 bytes
  8612 ;; Hardware stack levels used:    1
  8613 ;; Hardware stack levels required when called:   15
  8614 ;; This function calls:
  8615 ;;		Nothing
  8616 ;; This function is called by:
  8617 ;;		_main
  8618 ;;		_hid_input
  8619 ;; This function uses a reentrant model
  8620 ;;
  8621                           
  8622                           	psect	text21
  8623  01BEEE                     __ptext21:
  8624                           	opt callstack 0
  8625  01BEEE                     _get_switch:
  8626                           	opt callstack 13
  8627                           
  8628                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  8629                           ;stkvar	_i @ sp[(0)+-1]
  8630                           
  8631                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8632                           ;incstack = 0
  8633  01BEEE  0EFF               	movlw	-1
  8634  01BEF0  006F FF8C  F001    	movff	plusw1,btemp
  8635  01BEF6  0E03               	movlw	3
  8636  01BEF8  6401               	cpfsgt	btemp^0,c
  8637  01BEFA  D002               	goto	l10097
  8638                           
  8639                           ;dio.c: 21:   return SW_OFF;
  8640  01BEFC  0E00               	movlw	0
  8641  01BEFE  D00A               	goto	L5
  8642  01BF00                     l10097:
  8643                           
  8644                           ;dio.c: 23:  return S.button[i].sw;
  8645                           ;stkvar	_i @ sp[(0)+-1]
  8646  01BF00  0EFF               	movlw	-1
  8647  01BF02  50E3               	movf	plusw1,w,c
  8648  01BF04  0D05               	mullw	5
  8649  01BF06  0E54               	movlw	low _S
  8650  01BF08  24F3               	addwf	243,w,c
  8651  01BF0A  6ED9               	movwf	fsr2l,c
  8652  01BF0C  0E02               	movlw	high _S
  8653  01BF0E  20F4               	addwfc	prodh,w,c
  8654  01BF10  6EDA               	movwf	fsr2h,c
  8655  01BF12  50DF               	movf	indf2,w,c
  8656  01BF14                     L5:
  8657  01BF14  6E01               	movwf	btemp^0,c
  8658                           
  8659                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8660  01BF16  52E5               	movf	postdec1,f,c
  8661  01BF18  0012               	return		;funcret
  8662  01BF1A                     __end_of_get_switch:
  8663                           	opt callstack 0
  8664                           
  8665 ;; *************** function _esr_check *****************
  8666 ;; Defined at:
  8667 ;;		line 196 in file "bsoc.c"
  8668 ;; Parameters:    Size  Location     Type
  8669 ;;  fsm             1  [STACK] const unsigned char 
  8670 ;; Auto vars:     Size  Location     Type
  8671 ;;		None
  8672 ;; Return value:  Size  Location     Type
  8673 ;;                  4  [STACK] float 
  8674 ;; Registers used:
  8675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8676 ;; Tracked objects:
  8677 ;;		On entry : 0/0
  8678 ;;		On exit  : 0/0
  8679 ;;		Unchanged: 0/0
  8680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8685 ;;Total ram usage:        0 bytes
  8686 ;; Hardware stack levels used:    1
  8687 ;; Hardware stack levels required when called:   18
  8688 ;; This function calls:
  8689 ;;		_StartTimer
  8690 ;;		_TimerDone
  8691 ;;		___fldiv
  8692 ;;		___flsub
  8693 ;;		_conv_raw_result
  8694 ;;		_fabsf
  8695 ;;		_set_load_relay_one
  8696 ;;		_set_load_relay_two
  8697 ;;		_update_adc_result
  8698 ;; This function is called by:
  8699 ;;		_main
  8700 ;; This function uses a reentrant model
  8701 ;;
  8702                           
  8703                           	psect	text22
  8704  017188                     __ptext22:
  8705                           	opt callstack 0
  8706  017188                     _esr_check:
  8707                           	opt callstack 12
  8708                           
  8709                           ;bsoc.c: 196: float esr_check(const uint8_t fsm);bsoc.c: 197: {;bsoc.c: 198:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 200:  if (fsm) {
  8710                           ;stkvar	_fsm @ sp[(0)+-1]
  8711                           
  8712                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8713                           ;incstack = 0
  8714  017188  0EFF               	movlw	-1
  8715  01718A  50E3               	movf	plusw1,w,c
  8716  01718C  B4D8               	btfsc	status,2,c
  8717  01718E  D149               	goto	l11199
  8718                           
  8719                           ;bsoc.c: 201:   esr_state = 0;
  8720  017190  0100               	movlb	0	; () banked
  8721  017192  6BA4               	clrf	esr_check@esr_state& (0+255),b
  8722                           
  8723                           ; BSR set to: 0
  8724                           ;bsoc.c: 202:   return -10.0;
  8725  017194  0E00               	movlw	0
  8726  017196  6E01               	movwf	btemp^0,c
  8727  017198  0E00               	movlw	0
  8728  01719A  6E02               	movwf	(btemp+1)^0,c
  8729  01719C  0E20               	movlw	32
  8730  01719E  6E03               	movwf	(btemp+2)^0,c
  8731  0171A0  0EC1               	movlw	193
  8732  0171A2  D15B               	goto	L6
  8733  0171A4                     l11131:
  8734                           
  8735                           ; BSR set to: 0
  8736                           ;bsoc.c: 207:   StartTimer(TMR_ESR, 10000);
  8737  0171A4  0E10               	movlw	16
  8738  0171A6  6EE6               	movwf	postinc1,c
  8739  0171A8  0E27               	movlw	39
  8740  0171AA  6EE6               	movwf	postinc1,c
  8741  0171AC  0E0C               	movlw	12
  8742  0171AE  6EE6               	movwf	postinc1,c
  8743  0171B0  EC8E  F0DD         	call	_StartTimer	;wreg free
  8744  0171B4                     l11133:
  8745                           
  8746                           ;bsoc.c: 208:   esr_state++;
  8747  0171B4  0100               	movlb	0	; () banked
  8748  0171B6  2BA4               	incf	esr_check@esr_state& (0+255),f,b
  8749                           
  8750                           ;bsoc.c: 209:   break;
  8751  0171B8  D149               	goto	l11201
  8752  0171BA                     l11135:
  8753                           
  8754                           ; BSR set to: 0
  8755                           ;bsoc.c: 214:   set_load_relay_one(0);
  8756  0171BA  0E00               	movlw	0
  8757  0171BC  6EE6               	movwf	postinc1,c
  8758  0171BE  EC75  F0E2         	call	_set_load_relay_one	;wreg free
  8759                           
  8760                           ;bsoc.c: 215:   set_load_relay_two(0);
  8761  0171C2  0E00               	movlw	0
  8762  0171C4  6EE6               	movwf	postinc1,c
  8763  0171C6  EC6D  F0E2         	call	_set_load_relay_two	;wreg free
  8764                           
  8765                           ;bsoc.c: 216:   if (TimerDone(TMR_ESR)) {
  8766  0171CA  0E0C               	movlw	12
  8767  0171CC  6EE6               	movwf	postinc1,c
  8768  0171CE  ECE3  F0DF         	call	_TimerDone	;wreg free
  8769  0171D2  5001               	movf	btemp^0,w,c
  8770  0171D4  B4D8               	btfsc	status,2,c
  8771  0171D6  D009               	goto	l11141
  8772                           
  8773                           ;bsoc.c: 217:    StartTimer(TMR_ESR, 10000);
  8774  0171D8  0E10               	movlw	16
  8775  0171DA  6EE6               	movwf	postinc1,c
  8776  0171DC  0E27               	movlw	39
  8777  0171DE  6EE6               	movwf	postinc1,c
  8778  0171E0  0E0C               	movlw	12
  8779  0171E2  6EE6               	movwf	postinc1,c
  8780  0171E4  EC8E  F0DD         	call	_StartTimer	;wreg free
  8781                           
  8782                           ;bsoc.c: 218:   } else {
  8783  0171E8  D006               	goto	l11145
  8784  0171EA                     l11141:
  8785                           
  8786                           ;bsoc.c: 219:    return -2.0;
  8787  0171EA  0E00               	movlw	0
  8788  0171EC  6E01               	movwf	btemp^0,c
  8789  0171EE  0E00               	movlw	0
  8790  0171F0  6E02               	movwf	(btemp+1)^0,c
  8791  0171F2  0E00               	movlw	0
  8792  0171F4  D066               	goto	L8
  8793  0171F6                     l11145:
  8794                           
  8795                           ;bsoc.c: 224:   update_adc_result();
  8796  0171F6  EC0D  F0DE         	call	_update_adc_result	;wreg free
  8797                           
  8798                           ;bsoc.c: 225:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  8799  0171FA  0E00               	movlw	0
  8800  0171FC  6EE6               	movwf	postinc1,c
  8801  0171FE  0E04               	movlw	4
  8802  017200  6EE6               	movwf	postinc1,c
  8803  017202  EC95  F0A9         	call	_conv_raw_result	;wreg free
  8804  017206  0060  F004  F815   	movff	btemp,_C+278	;volatile
  8805  01720C  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  8806  017212  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  8807  017218  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  8808  01721E  D7CA               	goto	l11133
  8809  017220                     l11151:
  8810                           
  8811                           ; BSR set to: 0
  8812                           ;bsoc.c: 229:   set_load_relay_one(1);
  8813  017220  0E01               	movlw	1
  8814  017222  6EE6               	movwf	postinc1,c
  8815  017224  EC75  F0E2         	call	_set_load_relay_one	;wreg free
  8816                           
  8817                           ;bsoc.c: 230:   if (TimerDone(TMR_ESR)) {
  8818  017228  0E0C               	movlw	12
  8819  01722A  6EE6               	movwf	postinc1,c
  8820  01722C  ECE3  F0DF         	call	_TimerDone	;wreg free
  8821  017230  5001               	movf	btemp^0,w,c
  8822  017232  B4D8               	btfsc	status,2,c
  8823  017234  D009               	goto	l11157
  8824                           
  8825                           ;bsoc.c: 231:    StartTimer(TMR_ESR, 10000);
  8826  017236  0E10               	movlw	16
  8827  017238  6EE6               	movwf	postinc1,c
  8828  01723A  0E27               	movlw	39
  8829  01723C  6EE6               	movwf	postinc1,c
  8830  01723E  0E0C               	movlw	12
  8831  017240  6EE6               	movwf	postinc1,c
  8832  017242  EC8E  F0DD         	call	_StartTimer	;wreg free
  8833                           
  8834                           ;bsoc.c: 232:   } else {
  8835  017246  D006               	goto	l11161
  8836  017248                     l11157:
  8837                           
  8838                           ;bsoc.c: 233:    return -3.0;
  8839  017248  0E00               	movlw	0
  8840  01724A  6E01               	movwf	btemp^0,c
  8841  01724C  0E00               	movlw	0
  8842  01724E  6E02               	movwf	(btemp+1)^0,c
  8843  017250  0E40               	movlw	64
  8844  017252  D037               	goto	L8
  8845  017254                     l11161:
  8846                           
  8847                           ;bsoc.c: 236:   update_adc_result();
  8848  017254  EC0D  F0DE         	call	_update_adc_result	;wreg free
  8849                           
  8850                           ;bsoc.c: 237:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  8851  017258  0E00               	movlw	0
  8852  01725A  6EE6               	movwf	postinc1,c
  8853  01725C  0E04               	movlw	4
  8854  01725E  6EE6               	movwf	postinc1,c
  8855  017260  EC95  F0A9         	call	_conv_raw_result	;wreg free
  8856  017264  0060  F004  F819   	movff	btemp,_C+282	;volatile
  8857  01726A  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  8858  017270  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  8859  017276  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  8860                           
  8861                           ;bsoc.c: 238:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  8862  01727C  0E00               	movlw	0
  8863  01727E  6EE6               	movwf	postinc1,c
  8864  017280  0E00               	movlw	0
  8865  017282  6EE6               	movwf	postinc1,c
  8866  017284  EC95  F0A9         	call	_conv_raw_result	;wreg free
  8867  017288  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  8868  01728E  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  8869  017294  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  8870  01729A  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  8871  0172A0  D789               	goto	l11133
  8872  0172A2                     l11169:
  8873                           
  8874                           ; BSR set to: 0
  8875                           ;bsoc.c: 242:   set_load_relay_two(1);
  8876  0172A2  0E01               	movlw	1
  8877  0172A4  6EE6               	movwf	postinc1,c
  8878  0172A6  EC6D  F0E2         	call	_set_load_relay_two	;wreg free
  8879                           
  8880                           ;bsoc.c: 243:   if (!TimerDone(TMR_ESR))
  8881  0172AA  0E0C               	movlw	12
  8882  0172AC  6EE6               	movwf	postinc1,c
  8883  0172AE  ECE3  F0DF         	call	_TimerDone	;wreg free
  8884  0172B2  5001               	movf	btemp^0,w,c
  8885  0172B4  A4D8               	btfss	status,2,c
  8886  0172B6  D008               	goto	l11177
  8887                           
  8888                           ;bsoc.c: 244:    return -4.0;
  8889  0172B8  0E00               	movlw	0
  8890  0172BA  6E01               	movwf	btemp^0,c
  8891  0172BC  0E00               	movlw	0
  8892  0172BE  6E02               	movwf	(btemp+1)^0,c
  8893  0172C0  0E80               	movlw	128
  8894  0172C2                     L8:
  8895  0172C2  6E03               	movwf	(btemp+2)^0,c
  8896  0172C4  0EC0               	movlw	192
  8897  0172C6  D0C9               	goto	L6
  8898  0172C8                     l11177:
  8899                           
  8900                           ;bsoc.c: 246:   update_adc_result();
  8901  0172C8  EC0D  F0DE         	call	_update_adc_result	;wreg free
  8902                           
  8903                           ;bsoc.c: 247:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  8904  0172CC  0E00               	movlw	0
  8905  0172CE  6EE6               	movwf	postinc1,c
  8906  0172D0  0E04               	movlw	4
  8907  0172D2  6EE6               	movwf	postinc1,c
  8908  0172D4  EC95  F0A9         	call	_conv_raw_result	;wreg free
  8909  0172D8  0060  F004  F81D   	movff	btemp,_C+286	;volatile
  8910  0172DE  0060  F008  F81E   	movff	btemp+1,_C+287	;volatile
  8911  0172E4  0060  F00C  F81F   	movff	btemp+2,_C+288	;volatile
  8912  0172EA  0060  F010  F820   	movff	btemp+3,_C+289	;volatile
  8913                           
  8914                           ;bsoc.c: 248:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  8915  0172F0  0E00               	movlw	0
  8916  0172F2  6EE6               	movwf	postinc1,c
  8917  0172F4  0E00               	movlw	0
  8918  0172F6  6EE6               	movwf	postinc1,c
  8919  0172F8  EC95  F0A9         	call	_conv_raw_result	;wreg free
  8920  0172FC  0060  F004  F811   	movff	btemp,_C+274	;volatile
  8921  017302  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  8922  017308  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  8923  01730E  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  8924                           
  8925                           ;bsoc.c: 250:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  8926  017314  EE22  F011         	lfsr	2,_C+274	;volatile
  8927  017318  006F FF7B FFE6     	movff	postinc2,postinc1
  8928  01731E  006F FF7B FFE6     	movff	postinc2,postinc1
  8929  017324  006F FF7B FFE6     	movff	postinc2,postinc1
  8930  01732A  006F FF7B FFE6     	movff	postinc2,postinc1
  8931  017330  EE22  F00D         	lfsr	2,_C+270	;volatile
  8932  017334  006F FF7B FFE6     	movff	postinc2,postinc1
  8933  01733A  006F FF7B FFE6     	movff	postinc2,postinc1
  8934  017340  006F FF7B FFE6     	movff	postinc2,postinc1
  8935  017346  006F FF7B FFE6     	movff	postinc2,postinc1
  8936  01734C  ECE8  F0DC         	call	___flsub	;wreg free
  8937  017350  0060  F007  FFE6   	movff	btemp,postinc1
  8938  017356  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8939  01735C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8940  017362  0060  F013  FFE6   	movff	btemp+3,postinc1
  8941  017368  EE22  F01D         	lfsr	2,_C+286	;volatile
  8942  01736C  006F FF7B FFE6     	movff	postinc2,postinc1
  8943  017372  006F FF7B FFE6     	movff	postinc2,postinc1
  8944  017378  006F FF7B FFE6     	movff	postinc2,postinc1
  8945  01737E  006F FF7B FFE6     	movff	postinc2,postinc1
  8946  017384  EE22  F019         	lfsr	2,_C+282	;volatile
  8947  017388  006F FF7B FFE6     	movff	postinc2,postinc1
  8948  01738E  006F FF7B FFE6     	movff	postinc2,postinc1
  8949  017394  006F FF7B FFE6     	movff	postinc2,postinc1
  8950  01739A  006F FF7B FFE6     	movff	postinc2,postinc1
  8951  0173A0  ECE8  F0DC         	call	___flsub	;wreg free
  8952  0173A4  0060  F007  FFE6   	movff	btemp,postinc1
  8953  0173AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8954  0173B0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8955  0173B6  0060  F013  FFE6   	movff	btemp+3,postinc1
  8956  0173BC  ECD8  F0A6         	call	___fldiv	;wreg free
  8957  0173C0  0060  F007  FFE6   	movff	btemp,postinc1
  8958  0173C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8959  0173CC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8960  0173D2  0060  F013  FFE6   	movff	btemp+3,postinc1
  8961  0173D8  EC4E  F0D4         	call	_fabsf	;wreg free
  8962  0173DC  0060  F004  F787   	movff	btemp,_C+136	;volatile
  8963  0173E2  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  8964  0173E8  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  8965  0173EE  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  8966                           
  8967                           ;bsoc.c: 251:   set_load_relay_one(0);
  8968  0173F4  0E00               	movlw	0
  8969  0173F6  6EE6               	movwf	postinc1,c
  8970  0173F8  EC75  F0E2         	call	_set_load_relay_one	;wreg free
  8971                           
  8972                           ;bsoc.c: 252:   set_load_relay_two(0);
  8973  0173FC  0E00               	movlw	0
  8974  0173FE  6EE6               	movwf	postinc1,c
  8975  017400  EC6D  F0E2         	call	_set_load_relay_two	;wreg free
  8976                           
  8977                           ;bsoc.c: 253:   esr_state = 0;
  8978  017404  0100               	movlb	0	; () banked
  8979  017406  6BA4               	clrf	esr_check@esr_state& (0+255),b
  8980                           
  8981                           ; BSR set to: 0
  8982                           ;bsoc.c: 254:   return C.esr;
  8983  017408  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  8984  01740E  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  8985  017414  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  8986  01741A  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  8987  017420  D01D               	goto	l2160
  8988  017422                     l11199:
  8989  017422  0100               	movlb	0	; () banked
  8990  017424  51A4               	movf	esr_check@esr_state& (0+255),w,b
  8991  017426  6E0B               	movwf	(btemp+10)^0,c
  8992  017428  6A0C               	clrf	(btemp+11)^0,c
  8993                           
  8994                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8995                           ; Switch size 1, requested type "simple"
  8996                           ; Number of cases is 1, Range of values is 0 to 0
  8997                           ; switch strategies available:
  8998                           ; Name         Instructions Cycles
  8999                           ; simple_byte            4     3 (average)
  9000                           ;	Chosen strategy is simple_byte
  9001  01742A  500C               	movf	(btemp+11)^0,w,c
  9002  01742C  0A00               	xorlw	0	; case 0
  9003  01742E  A4D8               	btfss	status,2,c
  9004  017430  D00D               	goto	l11201
  9005                           
  9006                           ; BSR set to: 0
  9007                           ; Switch size 1, requested type "simple"
  9008                           ; Number of cases is 4, Range of values is 0 to 3
  9009                           ; switch strategies available:
  9010                           ; Name         Instructions Cycles
  9011                           ; simple_byte           13     7 (average)
  9012                           ;	Chosen strategy is simple_byte
  9013  017432  500B               	movf	(btemp+10)^0,w,c
  9014  017434  0A00               	xorlw	0	; case 0
  9015  017436  B4D8               	btfsc	status,2,c
  9016  017438  D6B5               	goto	l11131
  9017  01743A  0A01               	xorlw	1	; case 1
  9018  01743C  B4D8               	btfsc	status,2,c
  9019  01743E  D6BD               	goto	l11135
  9020  017440  0A03               	xorlw	3	; case 2
  9021  017442  B4D8               	btfsc	status,2,c
  9022  017444  D6ED               	goto	l11151
  9023  017446  0A01               	xorlw	1	; case 3
  9024  017448  B4D8               	btfsc	status,2,c
  9025  01744A  D72B               	goto	l11169
  9026  01744C                     l11201:
  9027                           
  9028                           ; BSR set to: 0
  9029                           ;bsoc.c: 259:  return -1.0;
  9030  01744C  0E00               	movlw	0
  9031  01744E  6E01               	movwf	btemp^0,c
  9032  017450  0E00               	movlw	0
  9033  017452  6E02               	movwf	(btemp+1)^0,c
  9034  017454  0E80               	movlw	128
  9035  017456  6E03               	movwf	(btemp+2)^0,c
  9036  017458  0EBF               	movlw	191
  9037  01745A                     L6:
  9038  01745A  6E04               	movwf	(btemp+3)^0,c
  9039  01745C                     l2160:
  9040                           
  9041                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9042  01745C  52E5               	movf	postdec1,f,c
  9043  01745E  0012               	return		;funcret
  9044  017460                     __end_of_esr_check:
  9045                           	opt callstack 0
  9046                           
  9047 ;; *************** function _update_adc_result *****************
  9048 ;; Defined at:
  9049 ;;		line 96 in file "daq.c"
  9050 ;; Parameters:    Size  Location     Type
  9051 ;;		None
  9052 ;; Auto vars:     Size  Location     Type
  9053 ;;		None
  9054 ;; Return value:  Size  Location     Type
  9055 ;;                  1  [STACK] _Bool 
  9056 ;; Registers used:
  9057 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  9058 ;; Tracked objects:
  9059 ;;		On entry : 0/0
  9060 ;;		On exit  : 0/0
  9061 ;;		Unchanged: 0/0
  9062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9067 ;;Total ram usage:        0 bytes
  9068 ;; Hardware stack levels used:    1
  9069 ;; Hardware stack levels required when called:   17
  9070 ;; This function calls:
  9071 ;;		_StartTimer
  9072 ;;		_TimerDone
  9073 ;;		_check_adc_scan
  9074 ;;		_clear_adc_scan
  9075 ;;		_start_adc_scan
  9076 ;; This function is called by:
  9077 ;;		_esr_check
  9078 ;; This function uses a reentrant model
  9079 ;;
  9080                           
  9081                           	psect	text23
  9082  01BC1A                     __ptext23:
  9083                           	opt callstack 0
  9084  01BC1A                     _update_adc_result:
  9085                           	opt callstack 12
  9086                           
  9087                           ;daq.c: 98:  if (R.done) {
  9088                           
  9089                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9090                           ;incstack = 0
  9091  01BC1A  0100               	movlb	0	; () banked
  9092  01BC1C  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  9093  01BC1E  B4D8               	btfsc	status,2,c
  9094  01BC20  0012               	return	
  9095                           
  9096                           ; BSR set to: 0
  9097                           ;daq.c: 99:   clear_adc_scan();
  9098  01BC22  ECE1  F0E2         	call	_clear_adc_scan	;wreg free
  9099                           
  9100                           ; BSR set to: 0
  9101                           ;daq.c: 100:   start_adc_scan();
  9102  01BC26  EC04  F0DA         	call	_start_adc_scan	;wreg free
  9103                           
  9104                           ;daq.c: 101:   StartTimer(TMR_ADC, 200);
  9105  01BC2A  0EC8               	movlw	200
  9106  01BC2C  6EE6               	movwf	postinc1,c
  9107  01BC2E  0E00               	movlw	0
  9108  01BC30  6EE6               	movwf	postinc1,c
  9109  01BC32  0E01               	movlw	1
  9110  01BC34  6EE6               	movwf	postinc1,c
  9111  01BC36  EC8E  F0DD         	call	_StartTimer	;wreg free
  9112  01BC3A                     l10677:
  9113  01BC3A  0E01               	movlw	1
  9114  01BC3C  6EE6               	movwf	postinc1,c
  9115  01BC3E  ECE3  F0DF         	call	_TimerDone	;wreg free
  9116  01BC42  5001               	movf	btemp^0,w,c
  9117  01BC44  A4D8               	btfss	status,2,c
  9118  01BC46  0012               	return	
  9119  01BC48  ECD1  F0E2         	call	_check_adc_scan	;wreg free
  9120  01BC4C  5001               	movf	btemp^0,w,c
  9121  01BC4E  A4D8               	btfss	status,2,c
  9122  01BC50  0012               	return	
  9123  01BC52  D7F3               	goto	l10677
  9124  01BC54                     __end_of_update_adc_result:
  9125                           	opt callstack 0
  9126                           
  9127 ;; *************** function _start_adc_scan *****************
  9128 ;; Defined at:
  9129 ;;		line 57 in file "daq.c"
  9130 ;; Parameters:    Size  Location     Type
  9131 ;;		None
  9132 ;; Auto vars:     Size  Location     Type
  9133 ;;		None
  9134 ;; Return value:  Size  Location     Type
  9135 ;;                  1  [STACK] _Bool 
  9136 ;; Registers used:
  9137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  9138 ;; Tracked objects:
  9139 ;;		On entry : 0/0
  9140 ;;		On exit  : 1/0
  9141 ;;		Unchanged: 0/0
  9142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9147 ;;Total ram usage:        0 bytes
  9148 ;; Hardware stack levels used:    1
  9149 ;; Hardware stack levels required when called:   16
  9150 ;; This function calls:
  9151 ;;		_ADCC_DischargeSampleCapacitor
  9152 ;;		_ADCC_SetADIInterruptHandler
  9153 ;;		_ADCC_SetADTIInterruptHandler
  9154 ;;		_ADCC_StartConversion
  9155 ;; This function is called by:
  9156 ;;		_main
  9157 ;;		_update_adc_result
  9158 ;; This function uses a reentrant model
  9159 ;;
  9160                           
  9161                           	psect	text24
  9162  01B408                     __ptext24:
  9163                           	opt callstack 0
  9164  01B408                     _start_adc_scan:
  9165                           	opt callstack 14
  9166                           
  9167                           ;daq.c: 59:  if (R.done)
  9168                           
  9169                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9170                           ;incstack = 0
  9171  01B408  0100               	movlb	0	; () banked
  9172  01B40A  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  9173  01B40C  A4D8               	btfss	status,2,c
  9174  01B40E  0012               	return	
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;daq.c: 62:  R.scan_index = 0;
  9178  01B410  6BE1               	clrf	(_R+50)& (0+255),b	;volatile
  9179                           
  9180                           ; BSR set to: 0
  9181                           ;daq.c: 63:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  9182  01B412  013A               	movlb	58	; () banked
  9183  01B414  5140               	movf	64,w,b	;volatile
  9184  01B416  006E F940  F001    	movff	14928,btemp	;volatile
  9185  01B41C  6A02               	clrf	(btemp+1)^0,c
  9186  01B41E  0060  F004  F002   	movff	btemp,btemp+1
  9187  01B424  6A01               	clrf	btemp^0,c
  9188  01B426  2601               	addwf	btemp^0,f,c
  9189  01B428  0E00               	movlw	0
  9190  01B42A  2202               	addwfc	(btemp+1)^0,f,c
  9191  01B42C  0E77               	movlw	119
  9192  01B42E  1401               	andwf	btemp^0,w,c
  9193  01B430  0100               	movlb	0	; () banked
  9194  01B432  6FE2               	movwf	(_R+51)& (0+255),b	;volatile
  9195  01B434  0E3C               	movlw	60
  9196  01B436  1402               	andwf	(btemp+1)^0,w,c
  9197  01B438  6FE3               	movwf	(_R+52)& (0+255),b	;volatile
  9198                           
  9199                           ; BSR set to: 0
  9200                           ;daq.c: 64:  ADCC_SetADIInterruptHandler(adc_int_handler);
  9201  01B43A  0EEA               	movlw	low _adc_int_handler
  9202  01B43C  6EE6               	movwf	postinc1,c
  9203  01B43E  0EC5               	movlw	high _adc_int_handler
  9204  01B440  6EE6               	movwf	postinc1,c
  9205  01B442  0E01               	movlw	low (_adc_int_handler shr (0+16))
  9206  01B444  6EE6               	movwf	postinc1,c
  9207  01B446  ECAB  F0E0         	call	_ADCC_SetADIInterruptHandler	;wreg free
  9208                           
  9209                           ;daq.c: 65:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  9210  01B44A  0E88               	movlw	low _adc_int_t_handler
  9211  01B44C  6EE6               	movwf	postinc1,c
  9212  01B44E  0EB0               	movlw	high _adc_int_t_handler
  9213  01B450  6EE6               	movwf	postinc1,c
  9214  01B452  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  9215  01B454  6EE6               	movwf	postinc1,c
  9216  01B456  EC97  F0E0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  9217                           
  9218                           ;daq.c: 66:  ADCC_DischargeSampleCapacitor();
  9219  01B45A  ECCD  F0E2         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  9220                           
  9221                           ; BSR set to: 62
  9222                           ;daq.c: 67:  ADCC_StartConversion(R.scan_index & 0xf);
  9223  01B45E  0100               	movlb	0	; () banked
  9224  01B460  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
  9225  01B462  0B0F               	andlw	15
  9226  01B464  6EE6               	movwf	postinc1,c
  9227  01B466  EC64  F0E2         	call	_ADCC_StartConversion	;wreg free
  9228                           
  9229                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9230  01B46A  0012               	return		;funcret
  9231  01B46C                     __end_of_start_adc_scan:
  9232                           	opt callstack 0
  9233                           
  9234 ;; *************** function _ADCC_StartConversion *****************
  9235 ;; Defined at:
  9236 ;;		line 128 in file "mcc_generated_files/adcc.c"
  9237 ;; Parameters:    Size  Location     Type
  9238 ;;  channel         1  [STACK] enum E16136
  9239 ;; Auto vars:     Size  Location     Type
  9240 ;;		None
  9241 ;; Return value:  Size  Location     Type
  9242 ;;                  1  [STACK] void 
  9243 ;; Registers used:
  9244 ;;		fsr1l, fsr1h
  9245 ;; Tracked objects:
  9246 ;;		On entry : 3F/0
  9247 ;;		On exit  : 3F/3E
  9248 ;;		Unchanged: 0/0
  9249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9254 ;;Total ram usage:        0 bytes
  9255 ;; Hardware stack levels used:    1
  9256 ;; Hardware stack levels required when called:   15
  9257 ;; This function calls:
  9258 ;;		Nothing
  9259 ;; This function is called by:
  9260 ;;		_start_adc_scan
  9261 ;;		_adc_int_t_handler
  9262 ;; This function uses a reentrant model
  9263 ;;
  9264                           
  9265                           	psect	text25
  9266  01C4C8                     __ptext25:
  9267                           	opt callstack 0
  9268  01C4C8                     _ADCC_StartConversion:
  9269                           	opt callstack 0
  9270                           
  9271                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  9272                           ;stkvar	_channel @ sp[(0)+-1]
  9273                           
  9274                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9275                           ;incstack = 0
  9276 ;; hardware stack exceeded
  9277  01C4C8  0EFF               	movlw	-1
  9278  01C4CA  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  9279                           
  9280                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  9281  01C4D0  013E               	movlb	62	; () banked
  9282  01C4D2  8FF8               	bsf	248,7,b	;volatile
  9283                           
  9284                           ; BSR set to: 62
  9285                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  9286  01C4D4  81F8               	bsf	248,0,b	;volatile
  9287                           
  9288                           ; BSR set to: 62
  9289                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  9290  01C4D6  52E5               	movf	postdec1,f,c
  9291  01C4D8  0012               	return		;funcret
  9292  01C4DA                     __end_of_ADCC_StartConversion:
  9293                           	opt callstack 0
  9294                           
  9295 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  9296 ;; Defined at:
  9297 ;;		line 189 in file "mcc_generated_files/adcc.c"
  9298 ;; Parameters:    Size  Location     Type
  9299 ;;		None
  9300 ;; Auto vars:     Size  Location     Type
  9301 ;;		None
  9302 ;; Return value:  Size  Location     Type
  9303 ;;                  1  [STACK] void 
  9304 ;; Registers used:
  9305 ;;		wreg, status,2
  9306 ;; Tracked objects:
  9307 ;;		On entry : 0/0
  9308 ;;		On exit  : 3F/3E
  9309 ;;		Unchanged: 0/0
  9310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9315 ;;Total ram usage:        0 bytes
  9316 ;; Hardware stack levels used:    1
  9317 ;; Hardware stack levels required when called:   15
  9318 ;; This function calls:
  9319 ;;		Nothing
  9320 ;; This function is called by:
  9321 ;;		_start_adc_scan
  9322 ;;		_adc_int_t_handler
  9323 ;; This function uses a reentrant model
  9324 ;;
  9325                           
  9326                           	psect	text26
  9327  01C59A                     __ptext26:
  9328                           	opt callstack 0
  9329  01C59A                     _ADCC_DischargeSampleCapacitor:
  9330                           	opt callstack 0
  9331                           
  9332                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  9333                           
  9334                           ; BSR set to: 62
  9335                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9336                           ;incstack = 0
  9337 ;; hardware stack exceeded
  9338  01C59A  0E3B               	movlw	59
  9339  01C59C  013E               	movlb	62	; () banked
  9340  01C59E  6FF1               	movwf	241,b	;volatile
  9341                           
  9342                           ; BSR set to: 62
  9343                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  9344  01C5A0  0012               	return		;funcret
  9345  01C5A2                     __end_of_ADCC_DischargeSampleCapacitor:
  9346                           	opt callstack 0
  9347                           
  9348 ;; *************** function _clear_adc_scan *****************
  9349 ;; Defined at:
  9350 ;;		line 88 in file "daq.c"
  9351 ;; Parameters:    Size  Location     Type
  9352 ;;		None
  9353 ;; Auto vars:     Size  Location     Type
  9354 ;;		None
  9355 ;; Return value:  Size  Location     Type
  9356 ;;                  1  [STACK] void 
  9357 ;; Registers used:
  9358 ;;		None
  9359 ;; Tracked objects:
  9360 ;;		On entry : 0/0
  9361 ;;		On exit  : 3F/0
  9362 ;;		Unchanged: 0/0
  9363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9368 ;;Total ram usage:        0 bytes
  9369 ;; Hardware stack levels used:    1
  9370 ;; Hardware stack levels required when called:   15
  9371 ;; This function calls:
  9372 ;;		Nothing
  9373 ;; This function is called by:
  9374 ;;		_main
  9375 ;;		_update_adc_result
  9376 ;; This function uses a reentrant model
  9377 ;;
  9378                           
  9379                           	psect	text27
  9380  01C5C2                     __ptext27:
  9381                           	opt callstack 0
  9382  01C5C2                     _clear_adc_scan:
  9383                           	opt callstack 13
  9384                           
  9385                           ;daq.c: 90:  R.done = 0;
  9386                           
  9387                           ; BSR set to: 62
  9388                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9389                           ;incstack = 0
  9390  01C5C2  0100               	movlb	0	; () banked
  9391  01C5C4  6BE4               	clrf	(_R+53)& (0+255),b	;volatile
  9392                           
  9393                           ; BSR set to: 0
  9394                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9395  01C5C6  0012               	return		;funcret
  9396  01C5C8                     __end_of_clear_adc_scan:
  9397                           	opt callstack 0
  9398                           
  9399 ;; *************** function _check_adc_scan *****************
  9400 ;; Defined at:
  9401 ;;		line 80 in file "daq.c"
  9402 ;; Parameters:    Size  Location     Type
  9403 ;;		None
  9404 ;; Auto vars:     Size  Location     Type
  9405 ;;		None
  9406 ;; Return value:  Size  Location     Type
  9407 ;;                  1  [STACK] _Bool 
  9408 ;; Registers used:
  9409 ;;		btemp
  9410 ;; Tracked objects:
  9411 ;;		On entry : 0/1
  9412 ;;		On exit  : 0/0
  9413 ;;		Unchanged: 0/0
  9414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9419 ;;Total ram usage:        0 bytes
  9420 ;; Hardware stack levels used:    1
  9421 ;; Hardware stack levels required when called:   15
  9422 ;; This function calls:
  9423 ;;		Nothing
  9424 ;; This function is called by:
  9425 ;;		_main
  9426 ;;		_update_adc_result
  9427 ;; This function uses a reentrant model
  9428 ;;
  9429                           
  9430                           	psect	text28
  9431  01C5A2                     __ptext28:
  9432                           	opt callstack 0
  9433  01C5A2                     _check_adc_scan:
  9434                           	opt callstack 13
  9435                           
  9436                           ;daq.c: 82:  return R.done;
  9437                           
  9438                           ; BSR set to: 0
  9439                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9440                           ;incstack = 0
  9441  01C5A2  0060  F390  F001   	movff	_R+53,btemp	;volatile
  9442                           
  9443                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9444  01C5A8  0012               	return		;funcret
  9445  01C5AA                     __end_of_check_adc_scan:
  9446                           	opt callstack 0
  9447                           
  9448 ;; *************** function _set_load_relay_two *****************
  9449 ;; Defined at:
  9450 ;;		line 130 in file "mbmc.c"
  9451 ;; Parameters:    Size  Location     Type
  9452 ;;  mode            1  [STACK] const _Bool 
  9453 ;; Auto vars:     Size  Location     Type
  9454 ;;		None
  9455 ;; Return value:  Size  Location     Type
  9456 ;;                  1  [STACK] void 
  9457 ;; Registers used:
  9458 ;;		wreg, fsr1l, fsr1h
  9459 ;; Tracked objects:
  9460 ;;		On entry : 0/0
  9461 ;;		On exit  : 0/0
  9462 ;;		Unchanged: 0/0
  9463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9468 ;;Total ram usage:        0 bytes
  9469 ;; Hardware stack levels used:    1
  9470 ;; Hardware stack levels required when called:   15
  9471 ;; This function calls:
  9472 ;;		Nothing
  9473 ;; This function is called by:
  9474 ;;		_main
  9475 ;;		_esr_check
  9476 ;; This function uses a reentrant model
  9477 ;;
  9478                           
  9479                           	psect	text29
  9480  01C4DA                     __ptext29:
  9481                           	opt callstack 0
  9482  01C4DA                     _set_load_relay_two:
  9483                           	opt callstack 15
  9484                           
  9485                           ;mbmc.c: 130: void set_load_relay_two(const _Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LAT
      +                          Dbits.LATD5 = mode;
  9486                           ;stkvar	_mode @ sp[(0)+-1]
  9487                           
  9488                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9489                           ;incstack = 0
  9490  01C4DA  0EFF               	movlw	-1
  9491  01C4DC  B0E3               	btfsc	plusw1,0,c
  9492  01C4DE  D002               	bra	u9615
  9493  01C4E0  9ABD               	bcf	189,5,c	;volatile
  9494  01C4E2  D001               	bra	u9616
  9495  01C4E4                     u9615:
  9496  01C4E4  8ABD               	bsf	189,5,c	;volatile
  9497  01C4E6                     u9616:
  9498                           
  9499                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9500  01C4E6  52E5               	movf	postdec1,f,c
  9501  01C4E8  0012               	return		;funcret
  9502  01C4EA                     __end_of_set_load_relay_two:
  9503                           	opt callstack 0
  9504                           
  9505 ;; *************** function _set_load_relay_one *****************
  9506 ;; Defined at:
  9507 ;;		line 125 in file "mbmc.c"
  9508 ;; Parameters:    Size  Location     Type
  9509 ;;  mode            1  [STACK] const _Bool 
  9510 ;; Auto vars:     Size  Location     Type
  9511 ;;		None
  9512 ;; Return value:  Size  Location     Type
  9513 ;;                  1  [STACK] void 
  9514 ;; Registers used:
  9515 ;;		wreg, fsr1l, fsr1h
  9516 ;; Tracked objects:
  9517 ;;		On entry : 0/0
  9518 ;;		On exit  : 0/0
  9519 ;;		Unchanged: 0/0
  9520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9525 ;;Total ram usage:        0 bytes
  9526 ;; Hardware stack levels used:    1
  9527 ;; Hardware stack levels required when called:   15
  9528 ;; This function calls:
  9529 ;;		Nothing
  9530 ;; This function is called by:
  9531 ;;		_main
  9532 ;;		_esr_check
  9533 ;; This function uses a reentrant model
  9534 ;;
  9535                           
  9536                           	psect	text30
  9537  01C4EA                     __ptext30:
  9538                           	opt callstack 0
  9539  01C4EA                     _set_load_relay_one:
  9540                           	opt callstack 15
  9541                           
  9542                           ;mbmc.c: 125: void set_load_relay_one(const _Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LAT
      +                          Dbits.LATD4 = mode;
  9543                           ;stkvar	_mode @ sp[(0)+-1]
  9544                           
  9545                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9546                           ;incstack = 0
  9547  01C4EA  0EFF               	movlw	-1
  9548  01C4EC  B0E3               	btfsc	plusw1,0,c
  9549  01C4EE  D002               	bra	u9605
  9550  01C4F0  98BD               	bcf	189,4,c	;volatile
  9551  01C4F2  D001               	bra	u9606
  9552  01C4F4                     u9605:
  9553  01C4F4  88BD               	bsf	189,4,c	;volatile
  9554  01C4F6                     u9606:
  9555                           
  9556                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9557  01C4F6  52E5               	movf	postdec1,f,c
  9558  01C4F8  0012               	return		;funcret
  9559  01C4FA                     __end_of_set_load_relay_one:
  9560                           	opt callstack 0
  9561                           
  9562 ;; *************** function _eaDogM_WriteCommand *****************
  9563 ;; Defined at:
  9564 ;;		line 385 in file "eadog.c"
  9565 ;; Parameters:    Size  Location     Type
  9566 ;;  cmd             1  [STACK] const unsigned char 
  9567 ;; Auto vars:     Size  Location     Type
  9568 ;;		None
  9569 ;; Return value:  Size  Location     Type
  9570 ;;                  1  [STACK] void 
  9571 ;; Registers used:
  9572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9573 ;; Tracked objects:
  9574 ;;		On entry : 3F/3D
  9575 ;;		On exit  : 3F/0
  9576 ;;		Unchanged: 0/0
  9577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9582 ;;Total ram usage:        0 bytes
  9583 ;; Hardware stack levels used:    1
  9584 ;; Hardware stack levels required when called:   26
  9585 ;; This function calls:
  9586 ;;		_send_lcd_cmd_dma
  9587 ;; This function is called by:
  9588 ;;		_main
  9589 ;; This function uses a reentrant model
  9590 ;;
  9591                           
  9592                           	psect	text31
  9593  01C51A                     __ptext31:
  9594                           	opt callstack 0
  9595  01C51A                     _eaDogM_WriteCommand:
  9596                           	opt callstack 4
  9597                           
  9598                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
  9599                           ;stkvar	_cmd @ sp[(0)+-1]
  9600                           
  9601                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9602                           ;incstack = 0
  9603  01C51A  0EFF               	movlw	-1
  9604  01C51C  50E3               	movf	plusw1,w,c
  9605  01C51E  6EE6               	movwf	postinc1,c
  9606  01C520  ECCA  F0E1         	call	_send_lcd_cmd_dma	;wreg free
  9607                           
  9608                           ; BSR set to: 0
  9609                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  9610  01C524  52E5               	movf	postdec1,f,c
  9611  01C526  0012               	return		;funcret
  9612  01C528                     __end_of_eaDogM_WriteCommand:
  9613                           	opt callstack 0
  9614                           
  9615 ;; *************** function _convert_adc_data *****************
  9616 ;; Defined at:
  9617 ;;		line 51 in file "mbmc.c"
  9618 ;; Parameters:    Size  Location     Type
  9619 ;;		None
  9620 ;; Auto vars:     Size  Location     Type
  9621 ;;  i               1  [STACK] unsigned char 
  9622 ;; Return value:  Size  Location     Type
  9623 ;;                  1  [STACK] void 
  9624 ;; Registers used:
  9625 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9626 ;; Tracked objects:
  9627 ;;		On entry : 0/1
  9628 ;;		On exit  : 0/0
  9629 ;;		Unchanged: 0/0
  9630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9635 ;;Total ram usage:        0 bytes
  9636 ;; Hardware stack levels used:    1
  9637 ;; Hardware stack levels required when called:   18
  9638 ;; This function calls:
  9639 ;;		_conv_raw_result
  9640 ;;		_lp_filter
  9641 ;; This function is called by:
  9642 ;;		_main
  9643 ;; This function uses a reentrant model
  9644 ;;
  9645                           
  9646                           	psect	text32
  9647  01A7E4                     __ptext32:
  9648                           	opt callstack 0
  9649  01A7E4                     _convert_adc_data:
  9650                           	opt callstack 0
  9651                           
  9652                           ; BSR set to: 0
  9653                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9654  01A7E4  52E6               	movf	postinc1,f,c
  9655                           
  9656                           ;mbmc.c: 53:  uint8_t i = 0;
  9657                           ;stkvar	_i @ sp[(-1)+0]
  9658                           
  9659                           ;incstack = 0
  9660  01A7E6  0EFF               	movlw	-1
  9661  01A7E8  6AE3               	clrf	plusw1,c
  9662  01A7EA                     l11213:
  9663                           
  9664                           ;mbmc.c: 56:   if (V.calib) {
  9665  01A7EA  0101               	movlb	1	; () banked
  9666  01A7EC  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  9667  01A7EE  B4D8               	btfsc	status,2,c
  9668  01A7F0  D01B               	goto	l11217
  9669                           
  9670                           ; BSR set to: 1
  9671                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  9672  01A7F2  0E01               	movlw	1
  9673  01A7F4  6EE6               	movwf	postinc1,c
  9674                           
  9675                           ;stkvar	_i @ sp[(-2)+0]
  9676  01A7F6  0EFE               	movlw	-2
  9677  01A7F8  50E3               	movf	plusw1,w,c
  9678  01A7FA  6EE6               	movwf	postinc1,c
  9679  01A7FC  0E01               	movlw	1
  9680  01A7FE  6EE6               	movwf	postinc1,c
  9681                           
  9682                           ;stkvar	_i @ sp[(-4)+0]
  9683  01A800  0EFC               	movlw	-4
  9684  01A802  50E3               	movf	plusw1,w,c
  9685  01A804  6EE6               	movwf	postinc1,c
  9686  01A806  EC95  F0A9         	call	_conv_raw_result	;wreg free
  9687  01A80A  0060  F007  FFE6   	movff	btemp,postinc1
  9688  01A810  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9689  01A816  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9690  01A81C  0060  F013  FFE6   	movff	btemp+3,postinc1
  9691  01A822  EC55  F0C4         	call	_lp_filter	;wreg free
  9692  01A826  D01A               	goto	L9
  9693  01A828                     l11217:
  9694                           
  9695                           ; BSR set to: 1
  9696                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  9697  01A828  0E00               	movlw	0
  9698  01A82A  6EE6               	movwf	postinc1,c
  9699                           
  9700                           ;stkvar	_i @ sp[(-2)+0]
  9701  01A82C  0EFE               	movlw	-2
  9702  01A82E  50E3               	movf	plusw1,w,c
  9703  01A830  6EE6               	movwf	postinc1,c
  9704  01A832  0E00               	movlw	0
  9705  01A834  6EE6               	movwf	postinc1,c
  9706                           
  9707                           ;stkvar	_i @ sp[(-4)+0]
  9708  01A836  0EFC               	movlw	-4
  9709  01A838  50E3               	movf	plusw1,w,c
  9710  01A83A  6EE6               	movwf	postinc1,c
  9711  01A83C  EC95  F0A9         	call	_conv_raw_result	;wreg free
  9712  01A840  0060  F007  FFE6   	movff	btemp,postinc1
  9713  01A846  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9714  01A84C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9715  01A852  0060  F013  FFE6   	movff	btemp+3,postinc1
  9716  01A858  EC55  F0C4         	call	_lp_filter	;wreg free
  9717  01A85C                     L9:
  9718                           
  9719                           ;stkvar	_i @ sp[(-1)+0]
  9720  01A85C  0EFF               	movlw	-1
  9721  01A85E  50E3               	movf	plusw1,w,c
  9722  01A860  0D04               	mullw	4
  9723  01A862  0EFF               	movlw	low _C
  9724  01A864  24F3               	addwf	243,w,c
  9725  01A866  6ED9               	movwf	fsr2l,c
  9726  01A868  0E06               	movlw	high _C
  9727  01A86A  20F4               	addwfc	prodh,w,c
  9728  01A86C  6EDA               	movwf	fsr2h,c
  9729  01A86E  0060  F007  FFDE   	movff	btemp,postinc2
  9730  01A874  0060  F00B  FFDE   	movff	btemp+1,postinc2
  9731  01A87A  0060  F00F  FFDE   	movff	btemp+2,postinc2
  9732  01A880  0060  F013  FFDE   	movff	btemp+3,postinc2
  9733                           
  9734                           ;mbmc.c: 61:  } while (++i < 16);
  9735                           ;stkvar	_i @ sp[(-1)+0]
  9736  01A886  0EFF               	movlw	-1
  9737  01A888  2AE3               	incf	plusw1,f,c
  9738  01A88A  0EFF               	movlw	-1
  9739  01A88C  006F FF8C  F001    	movff	plusw1,btemp
  9740  01A892  0E0F               	movlw	15
  9741  01A894  6401               	cpfsgt	btemp^0,c
  9742  01A896  D7A9               	goto	l11213
  9743                           
  9744                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  9745  01A898  52E5               	movf	postdec1,f,c
  9746  01A89A  0012               	return		;funcret
  9747  01A89C                     __end_of_convert_adc_data:
  9748                           	opt callstack 0
  9749                           
  9750 ;; *************** function _clear_hid_pflags *****************
  9751 ;; Defined at:
  9752 ;;		line 51 in file "hid.c"
  9753 ;; Parameters:    Size  Location     Type
  9754 ;;  h               2  [STACK] PTR struct H_data
  9755 ;;		 -> H(7), 
  9756 ;; Auto vars:     Size  Location     Type
  9757 ;;		None
  9758 ;; Return value:  Size  Location     Type
  9759 ;;                  1  [STACK] void 
  9760 ;; Registers used:
  9761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  9762 ;; Tracked objects:
  9763 ;;		On entry : 3E/0
  9764 ;;		On exit  : 0/0
  9765 ;;		Unchanged: 0/0
  9766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9771 ;;Total ram usage:        0 bytes
  9772 ;; Hardware stack levels used:    1
  9773 ;; Hardware stack levels required when called:   15
  9774 ;; This function calls:
  9775 ;;		Nothing
  9776 ;; This function is called by:
  9777 ;;		_main
  9778 ;; This function uses a reentrant model
  9779 ;;
  9780                           
  9781                           	psect	text33
  9782  01B944                     __ptext33:
  9783                           	opt callstack 0
  9784  01B944                     _clear_hid_pflags:
  9785                           	opt callstack 15
  9786                           
  9787                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  9788                           ;stkvar	_h @ sp[(0)+-2]
  9789                           
  9790                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9791                           ;incstack = 0
  9792  01B944  0EFE               	movlw	-2
  9793  01B946  006F FF8C  F00B    	movff	plusw1,btemp+10
  9794  01B94C  0EFF               	movlw	-1
  9795  01B94E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9796  01B954  0E03               	movlw	3
  9797  01B956  240B               	addwf	(btemp+10)^0,w,c
  9798  01B958  6ED9               	movwf	fsr2l,c
  9799  01B95A  0E00               	movlw	0
  9800  01B95C  200C               	addwfc	(btemp+11)^0,w,c
  9801  01B95E  6EDA               	movwf	fsr2h,c
  9802  01B960  0E00               	movlw	0
  9803  01B962  6EDF               	movwf	indf2,c
  9804                           
  9805                           ;hid.c: 54:  h->enter_p = SW_OFF;
  9806                           ;stkvar	_h @ sp[(0)+-2]
  9807  01B964  0EFE               	movlw	-2
  9808  01B966  006F FF8C  F00B    	movff	plusw1,btemp+10
  9809  01B96C  0EFF               	movlw	-1
  9810  01B96E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9811  01B974  0E05               	movlw	5
  9812  01B976  240B               	addwf	(btemp+10)^0,w,c
  9813  01B978  6ED9               	movwf	fsr2l,c
  9814  01B97A  0E00               	movlw	0
  9815  01B97C  200C               	addwfc	(btemp+11)^0,w,c
  9816  01B97E  6EDA               	movwf	fsr2h,c
  9817  01B980  0E00               	movlw	0
  9818  01B982  6EDF               	movwf	indf2,c
  9819                           
  9820                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
  9821  01B984  52E5               	movf	postdec1,f,c
  9822  01B986  52E5               	movf	postdec1,f,c
  9823  01B988  0012               	return		;funcret
  9824  01B98A                     __end_of_clear_hid_pflags:
  9825                           	opt callstack 0
  9826                           
  9827 ;; *************** function _check_help *****************
  9828 ;; Defined at:
  9829 ;;		line 40 in file "mconfig.c"
  9830 ;; Parameters:    Size  Location     Type
  9831 ;;  flipper         1  [STACK] const _Bool 
  9832 ;; Auto vars:     Size  Location     Type
  9833 ;;  estatus         1    0        _Bool 
  9834 ;; Return value:  Size  Location     Type
  9835 ;;                  1  [STACK] _Bool 
  9836 ;; Registers used:
  9837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9838 ;; Tracked objects:
  9839 ;;		On entry : 3F/1
  9840 ;;		On exit  : 0/0
  9841 ;;		Unchanged: 0/0
  9842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9847 ;;Total ram usage:        0 bytes
  9848 ;; Hardware stack levels used:    1
  9849 ;; Hardware stack levels required when called:   28
  9850 ;; This function calls:
  9851 ;;		_StartTimer
  9852 ;;		_TimerDone
  9853 ;;		_display_help
  9854 ;;		_display_info
  9855 ;;		_get_vterm_ptr
  9856 ;;		_help_button
  9857 ;;		_mode_lamp_bright
  9858 ;;		_mode_lamp_dim
  9859 ;;		_set_display_info
  9860 ;;		_set_temp_display_help
  9861 ;;		_set_vterm
  9862 ;;		_sprintf
  9863 ;;		_update_lcd
  9864 ;;		_vterm_dump
  9865 ;; This function is called by:
  9866 ;;		_main
  9867 ;; This function uses a reentrant model
  9868 ;;
  9869                           
  9870                           	psect	text34
  9871  0182B8                     __ptext34:
  9872                           	opt callstack 0
  9873  0182B8                     _check_help:
  9874                           	opt callstack 2
  9875                           
  9876                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  9877                           
  9878                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9879                           ;incstack = 0
  9880  0182B8  EC2A  F0DE         	call	_help_button	;wreg free
  9881  0182BC  5001               	movf	btemp^0,w,c
  9882  0182BE  B4D8               	btfsc	status,2,c
  9883  0182C0  D0D0               	goto	l13321
  9884  0182C2  ECD5  F0E2         	call	_display_info	;wreg free
  9885  0182C6  0401               	decf	btemp^0,w,c
  9886  0182C8  B4D8               	btfsc	status,2,c
  9887  0182CA  D0CB               	goto	l13321
  9888                           
  9889                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  9890  0182CC  0EDC               	movlw	220
  9891  0182CE  6EE6               	movwf	postinc1,c
  9892  0182D0  0E05               	movlw	5
  9893  0182D2  6EE6               	movwf	postinc1,c
  9894  0182D4  0E0B               	movlw	11
  9895  0182D6  6EE6               	movwf	postinc1,c
  9896  0182D8  EC8E  F0DD         	call	_StartTimer	;wreg free
  9897                           
  9898                           ;mconfig.c: 48:   if (V.debug)
  9899  0182DC  0101               	movlb	1	; () banked
  9900  0182DE  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
  9901                           
  9902                           ; BSR set to: 1
  9903                           ;mconfig.c: 49:    vterm_dump();
  9904  0182E0  EC4F  F0CC         	call	_vterm_dump	;wreg free
  9905                           
  9906                           ;mconfig.c: 51:   set_vterm(1);
  9907  0182E4  0E01               	movlw	1
  9908  0182E6  6EE6               	movwf	postinc1,c
  9909  0182E8  ECD9  F0E1         	call	_set_vterm	;wreg free
  9910                           
  9911                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  9912  0182EC  ECD5  F0E2         	call	_display_info	;wreg free
  9913  0182F0  5001               	movf	btemp^0,w,c
  9914  0182F2  6EE6               	movwf	postinc1,c
  9915  0182F4  EC7D  F0E2         	call	_set_temp_display_help	;wreg free
  9916                           
  9917                           ; BSR set to: 1
  9918                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  9919  0182F8  0E01               	movlw	1
  9920  0182FA  6EE6               	movwf	postinc1,c
  9921  0182FC  ECE8  F0E1         	call	_set_display_info	;wreg free
  9922                           
  9923                           ;mconfig.c: 54:   if (flipper) {
  9924                           ;stkvar	_flipper @ sp[(0)+-1]
  9925  018300  0EFF               	movlw	-1
  9926  018302  50E3               	movf	plusw1,w,c
  9927  018304  B4D8               	btfsc	status,2,c
  9928  018306  D019               	goto	l13307
  9929                           
  9930                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  9931  018308  0EB3               	movlw	low STR_45
  9932  01830A  6EE6               	movwf	postinc1,c
  9933  01830C  0EFF               	movlw	high STR_45
  9934  01830E  6EE6               	movwf	postinc1,c
  9935  018310  0E5D               	movlw	low STR_47
  9936  018312  6EE6               	movwf	postinc1,c
  9937  018314  0EFF               	movlw	high STR_47
  9938  018316  6EE6               	movwf	postinc1,c
  9939  018318  0E01               	movlw	1
  9940  01831A  6EE6               	movwf	postinc1,c
  9941  01831C  0E00               	movlw	0
  9942  01831E  6EE6               	movwf	postinc1,c
  9943  018320  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  9944  018324  0060  F007  FFE6   	movff	btemp,postinc1
  9945  01832A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9946  018330  0E06               	movlw	6
  9947  018332  6EE6               	movwf	postinc1,c
  9948  018334  ECA2  F0CF         	call	_sprintf	;wreg free
  9949                           
  9950                           ;mconfig.c: 56:   } else {
  9951  018338  D018               	goto	l1684
  9952  01833A                     l13307:
  9953                           
  9954                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  9955  01833A  0EC9               	movlw	low STR_46
  9956  01833C  6EE6               	movwf	postinc1,c
  9957  01833E  0EFF               	movlw	high STR_46
  9958  018340  6EE6               	movwf	postinc1,c
  9959  018342  0E5D               	movlw	low STR_47
  9960  018344  6EE6               	movwf	postinc1,c
  9961  018346  0EFF               	movlw	high STR_47
  9962  018348  6EE6               	movwf	postinc1,c
  9963  01834A  0E01               	movlw	1
  9964  01834C  6EE6               	movwf	postinc1,c
  9965  01834E  0E00               	movlw	0
  9966  018350  6EE6               	movwf	postinc1,c
  9967  018352  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
  9968  018356  0060  F007  FFE6   	movff	btemp,postinc1
  9969  01835C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9970  018362  0E06               	movlw	6
  9971  018364  6EE6               	movwf	postinc1,c
  9972  018366  ECA2  F0CF         	call	_sprintf	;wreg free
  9973  01836A                     l1684:
  9974                           
  9975                           ; BSR set to: 0
  9976                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  9977  01836A  0101               	movlb	1	; () banked
  9978  01836C  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
  9979  01836E  32E8               	rrcf	wreg,f,c
  9980  018370  32E8               	rrcf	wreg,f,c
  9981  018372  0B03               	andlw	3
  9982  018374  0D24               	mullw	36
  9983  018376  0E12               	movlw	18
  9984  018378  26F3               	addwf	243,f,c
  9985  01837A  0E00               	movlw	0
  9986  01837C  22F4               	addwfc	244,f,c
  9987  01837E  0EB5               	movlw	low _T
  9988  018380  6E0B               	movwf	(btemp+10)^0,c
  9989  018382  0EFA               	movlw	high _T
  9990  018384  6E0C               	movwf	(btemp+11)^0,c
  9991  018386  50F3               	movf	243,w,c
  9992  018388  260B               	addwf	(btemp+10)^0,f,c
  9993  01838A  50F4               	movf	244,w,c
  9994  01838C  220C               	addwfc	(btemp+11)^0,f,c
  9995  01838E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9996  018394  0060  F033  FFE6   	movff	btemp+11,postinc1
  9997  01839A  0EBF               	movlw	low STR_49
  9998  01839C  6EE6               	movwf	postinc1,c
  9999  01839E  0EFF               	movlw	high STR_49
 10000  0183A0  6EE6               	movwf	postinc1,c
 10001  0183A2  0E01               	movlw	1
 10002  0183A4  6EE6               	movwf	postinc1,c
 10003  0183A6  0E01               	movlw	1
 10004  0183A8  6EE6               	movwf	postinc1,c
 10005  0183AA  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
 10006  0183AE  0060  F007  FFE6   	movff	btemp,postinc1
 10007  0183B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10008  0183BA  0E06               	movlw	6
 10009  0183BC  6EE6               	movwf	postinc1,c
 10010  0183BE  ECA2  F0CF         	call	_sprintf	;wreg free
 10011                           
 10012                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 10013  0183C2  0101               	movlb	1	; () banked
 10014  0183C4  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 10015  0183C6  32E8               	rrcf	wreg,f,c
 10016  0183C8  32E8               	rrcf	wreg,f,c
 10017  0183CA  0B03               	andlw	3
 10018  0183CC  0D24               	mullw	36
 10019  0183CE  0EB5               	movlw	low _T
 10020  0183D0  6E0B               	movwf	(btemp+10)^0,c
 10021  0183D2  0EFA               	movlw	high _T
 10022  0183D4  6E0C               	movwf	(btemp+11)^0,c
 10023  0183D6  50F3               	movf	243,w,c
 10024  0183D8  260B               	addwf	(btemp+10)^0,f,c
 10025  0183DA  50F4               	movf	244,w,c
 10026  0183DC  220C               	addwfc	(btemp+11)^0,f,c
 10027  0183DE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10028  0183E4  0060  F033  FFE6   	movff	btemp+11,postinc1
 10029  0183EA  0EBF               	movlw	low STR_49
 10030  0183EC  6EE6               	movwf	postinc1,c
 10031  0183EE  0EFF               	movlw	high STR_49
 10032  0183F0  6EE6               	movwf	postinc1,c
 10033  0183F2  0E01               	movlw	1
 10034  0183F4  6EE6               	movwf	postinc1,c
 10035  0183F6  0E02               	movlw	2
 10036  0183F8  6EE6               	movwf	postinc1,c
 10037  0183FA  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
 10038  0183FE  0060  F007  FFE6   	movff	btemp,postinc1
 10039  018404  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10040  01840A  0E06               	movlw	6
 10041  01840C  6EE6               	movwf	postinc1,c
 10042  01840E  ECA2  F0CF         	call	_sprintf	;wreg free
 10043                           
 10044                           ; BSR set to: 0
 10045                           ;mconfig.c: 61:   V.help_id++;
 10046  018412  EE20  F1A2         	lfsr	2,_V+155	;volatile
 10047  018416  38DF               	swapf	223,w,c
 10048  018418  6E0C               	movwf	(btemp+11)^0,c
 10049  01841A  320C               	rrcf	(btemp+11)^0,f,c
 10050  01841C  300C               	rrcf	(btemp+11)^0,w,c
 10051  01841E  0B03               	andlw	3
 10052  018420  6E0C               	movwf	(btemp+11)^0,c
 10053  018422  2A0C               	incf	(btemp+11)^0,f,c
 10054  018424  3A0C               	swapf	(btemp+11)^0,f,c
 10055  018426  360C               	rlcf	(btemp+11)^0,f,c
 10056  018428  360C               	rlcf	(btemp+11)^0,f,c
 10057  01842A  50DF               	movf	223,w,c
 10058  01842C  180C               	xorwf	(btemp+11)^0,w,c
 10059  01842E  0B3F               	andlw	-193
 10060  018430  180C               	xorwf	(btemp+11)^0,w,c
 10061  018432  6EDF               	movwf	223,c
 10062                           
 10063                           ; BSR set to: 0
 10064                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 10065  018434  0EB8               	movlw	184
 10066  018436  6EE6               	movwf	postinc1,c
 10067  018438  0E0B               	movlw	11
 10068  01843A  6EE6               	movwf	postinc1,c
 10069  01843C  0E09               	movlw	9
 10070  01843E  6EE6               	movwf	postinc1,c
 10071  018440  EC8E  F0DD         	call	_StartTimer	;wreg free
 10072                           
 10073                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 10074  018444  0EB8               	movlw	184
 10075  018446  6EE6               	movwf	postinc1,c
 10076  018448  0E0B               	movlw	11
 10077  01844A  6EE6               	movwf	postinc1,c
 10078  01844C  0E07               	movlw	7
 10079  01844E  6EE6               	movwf	postinc1,c
 10080  018450  EC8E  F0DD         	call	_StartTimer	;wreg free
 10081                           
 10082                           ;mconfig.c: 64:   mode_lamp_bright();
 10083  018454  EC94  F0E2         	call	_mode_lamp_bright	;wreg free
 10084                           
 10085                           ;mconfig.c: 65:   update_lcd(1);
 10086  018458  0E01               	movlw	1
 10087  01845A  6EE6               	movwf	postinc1,c
 10088  01845C  EC1A  F0CF         	call	_update_lcd	;wreg free
 10089                           
 10090                           ;mconfig.c: 67:  } else {
 10091  018460  D032               	goto	l1685
 10092  018462                     l13321:
 10093                           
 10094                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 10095  018462  0E09               	movlw	9
 10096  018464  6EE6               	movwf	postinc1,c
 10097  018466  ECE3  F0DF         	call	_TimerDone	;wreg free
 10098  01846A  5001               	movf	btemp^0,w,c
 10099  01846C  B4D8               	btfsc	status,2,c
 10100  01846E  D02B               	goto	l1685
 10101                           
 10102                           ;mconfig.c: 69:    set_vterm(0);
 10103  018470  0E00               	movlw	0
 10104  018472  6EE6               	movwf	postinc1,c
 10105  018474  ECD9  F0E1         	call	_set_vterm	;wreg free
 10106                           
 10107                           ;mconfig.c: 70:    V.help = 0;
 10108  018478  0101               	movlb	1	; () banked
 10109  01847A  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
 10110                           
 10111                           ; BSR set to: 1
 10112                           ;mconfig.c: 71:    set_display_info(display_help());
 10113  01847C  ECD9  F0E2         	call	_display_help	;wreg free
 10114  018480  5001               	movf	btemp^0,w,c
 10115  018482  6EE6               	movwf	postinc1,c
 10116  018484  ECE8  F0E1         	call	_set_display_info	;wreg free
 10117                           
 10118                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 10119  018488  0060  F673  FFE6   	movff	_V+149,postinc1
 10120  01848E  0060  F677  FFE6   	movff	_V+150,postinc1
 10121  018494  EC21  F0E2         	call	_mode_lamp_dim	;wreg free
 10122                           
 10123                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 10124  018498  0E0B               	movlw	11
 10125  01849A  6EE6               	movwf	postinc1,c
 10126  01849C  ECE3  F0DF         	call	_TimerDone	;wreg free
 10127  0184A0  5001               	movf	btemp^0,w,c
 10128  0184A2  B4D8               	btfsc	status,2,c
 10129  0184A4  D010               	goto	l1685
 10130                           
 10131                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 10132  0184A6  0101               	movlb	1	; () banked
 10133  0184A8  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
 10134  0184AA  A4D8               	btfss	status,2,c
 10135  0184AC  D002               	goto	u12820
 10136  0184AE  0E01               	movlw	1
 10137  0184B0  D001               	goto	u12830
 10138  0184B2                     u12820:
 10139  0184B2  0E00               	movlw	0
 10140  0184B4                     u12830:
 10141  0184B4  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
 10142                           
 10143                           ; BSR set to: 1
 10144                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 10145  0184B6  0EDC               	movlw	220
 10146  0184B8  6EE6               	movwf	postinc1,c
 10147  0184BA  0E05               	movlw	5
 10148  0184BC  6EE6               	movwf	postinc1,c
 10149  0184BE  0E0B               	movlw	11
 10150  0184C0  6EE6               	movwf	postinc1,c
 10151  0184C2  EC8E  F0DD         	call	_StartTimer	;wreg free
 10152  0184C6                     l1685:
 10153                           
 10154                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10155  0184C6  52E5               	movf	postdec1,f,c
 10156  0184C8  0012               	return		;funcret
 10157  0184CA                     __end_of_check_help:
 10158                           	opt callstack 0
 10159                           
 10160 ;; *************** function _vterm_dump *****************
 10161 ;; Defined at:
 10162 ;;		line 121 in file "mconfig.c"
 10163 ;; Parameters:    Size  Location     Type
 10164 ;;		None
 10165 ;; Auto vars:     Size  Location     Type
 10166 ;;		None
 10167 ;; Return value:  Size  Location     Type
 10168 ;;                  1  [STACK] void 
 10169 ;; Registers used:
 10170 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10171 ;; Tracked objects:
 10172 ;;		On entry : 3F/1
 10173 ;;		On exit  : 0/0
 10174 ;;		Unchanged: 0/0
 10175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10180 ;;Total ram usage:        0 bytes
 10181 ;; Hardware stack levels used:    1
 10182 ;; Hardware stack levels required when called:   27
 10183 ;; This function calls:
 10184 ;;		_WaitMs
 10185 ;;		_eaDogM_WriteStringAtPos
 10186 ;;		_get_vterm_ptr
 10187 ;;		_sprintf
 10188 ;;		_wait_lcd_done
 10189 ;; This function is called by:
 10190 ;;		_check_help
 10191 ;; This function uses a reentrant model
 10192 ;;
 10193                           
 10194                           	psect	text35
 10195  01989E                     __ptext35:
 10196                           	opt callstack 0
 10197  01989E                     _vterm_dump:
 10198                           	opt callstack 2
 10199                           
 10200                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 10201                           
 10202                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10203                           ;incstack = 0
 10204  01989E  0E01               	movlw	1
 10205  0198A0  6EE6               	movwf	postinc1,c
 10206  0198A2  0E00               	movlw	0
 10207  0198A4  6EE6               	movwf	postinc1,c
 10208  0198A6  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
 10209  0198AA  0060  F007  FFE6   	movff	btemp,postinc1
 10210  0198B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10211  0198B6  0E00               	movlw	0
 10212  0198B8  6EE6               	movwf	postinc1,c
 10213  0198BA  0E00               	movlw	0
 10214  0198BC  6EE6               	movwf	postinc1,c
 10215  0198BE  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
 10216  0198C2  0060  F007  FFE6   	movff	btemp,postinc1
 10217  0198C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10218  0198CE  0EA4               	movlw	low STR_51
 10219  0198D0  6EE6               	movwf	postinc1,c
 10220  0198D2  0EFF               	movlw	high STR_51
 10221  0198D4  6EE6               	movwf	postinc1,c
 10222  0198D6  0E08               	movlw	low (_V+1)
 10223  0198D8  6EE6               	movwf	postinc1,c
 10224  0198DA  0E01               	movlw	high (_V+1)
 10225  0198DC  6EE6               	movwf	postinc1,c
 10226  0198DE  0E08               	movlw	8
 10227  0198E0  6EE6               	movwf	postinc1,c
 10228  0198E2  ECA2  F0CF         	call	_sprintf	;wreg free
 10229                           
 10230                           ; BSR set to: 0
 10231                           ;mconfig.c: 124:  wait_lcd_done();
 10232  0198E6  EC68  F0E1         	call	_wait_lcd_done	;wreg free
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 10236  0198EA  0E08               	movlw	low (_V+1)
 10237  0198EC  6EE6               	movwf	postinc1,c
 10238  0198EE  0E01               	movlw	high (_V+1)
 10239  0198F0  6EE6               	movwf	postinc1,c
 10240  0198F2  0E00               	movlw	0
 10241  0198F4  6EE6               	movwf	postinc1,c
 10242  0198F6  0E00               	movlw	0
 10243  0198F8  6EE6               	movwf	postinc1,c
 10244  0198FA  ECA6  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10245                           
 10246                           ; BSR set to: 59
 10247                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 10248  0198FE  0E01               	movlw	1
 10249  019900  6EE6               	movwf	postinc1,c
 10250  019902  0E01               	movlw	1
 10251  019904  6EE6               	movwf	postinc1,c
 10252  019906  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
 10253  01990A  0060  F007  FFE6   	movff	btemp,postinc1
 10254  019910  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10255  019916  0E00               	movlw	0
 10256  019918  6EE6               	movwf	postinc1,c
 10257  01991A  0E01               	movlw	1
 10258  01991C  6EE6               	movwf	postinc1,c
 10259  01991E  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
 10260  019922  0060  F007  FFE6   	movff	btemp,postinc1
 10261  019928  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10262  01992E  0EA4               	movlw	low STR_51
 10263  019930  6EE6               	movwf	postinc1,c
 10264  019932  0EFF               	movlw	high STR_51
 10265  019934  6EE6               	movwf	postinc1,c
 10266  019936  0E08               	movlw	low (_V+1)
 10267  019938  6EE6               	movwf	postinc1,c
 10268  01993A  0E01               	movlw	high (_V+1)
 10269  01993C  6EE6               	movwf	postinc1,c
 10270  01993E  0E08               	movlw	8
 10271  019940  6EE6               	movwf	postinc1,c
 10272  019942  ECA2  F0CF         	call	_sprintf	;wreg free
 10273                           
 10274                           ; BSR set to: 0
 10275                           ;mconfig.c: 127:  wait_lcd_done();
 10276  019946  EC68  F0E1         	call	_wait_lcd_done	;wreg free
 10277                           
 10278                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 10279  01994A  0E08               	movlw	low (_V+1)
 10280  01994C  6EE6               	movwf	postinc1,c
 10281  01994E  0E01               	movlw	high (_V+1)
 10282  019950  6EE6               	movwf	postinc1,c
 10283  019952  0E00               	movlw	0
 10284  019954  6EE6               	movwf	postinc1,c
 10285  019956  0E01               	movlw	1
 10286  019958  6EE6               	movwf	postinc1,c
 10287  01995A  ECA6  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10288                           
 10289                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 10290  01995E  0E01               	movlw	1
 10291  019960  6EE6               	movwf	postinc1,c
 10292  019962  0E02               	movlw	2
 10293  019964  6EE6               	movwf	postinc1,c
 10294  019966  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
 10295  01996A  0060  F007  FFE6   	movff	btemp,postinc1
 10296  019970  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10297  019976  0E00               	movlw	0
 10298  019978  6EE6               	movwf	postinc1,c
 10299  01997A  0E02               	movlw	2
 10300  01997C  6EE6               	movwf	postinc1,c
 10301  01997E  EC60  F0DF         	call	_get_vterm_ptr	;wreg free
 10302  019982  0060  F007  FFE6   	movff	btemp,postinc1
 10303  019988  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10304  01998E  0EA4               	movlw	low STR_51
 10305  019990  6EE6               	movwf	postinc1,c
 10306  019992  0EFF               	movlw	high STR_51
 10307  019994  6EE6               	movwf	postinc1,c
 10308  019996  0E08               	movlw	low (_V+1)
 10309  019998  6EE6               	movwf	postinc1,c
 10310  01999A  0E01               	movlw	high (_V+1)
 10311  01999C  6EE6               	movwf	postinc1,c
 10312  01999E  0E08               	movlw	8
 10313  0199A0  6EE6               	movwf	postinc1,c
 10314  0199A2  ECA2  F0CF         	call	_sprintf	;wreg free
 10315                           
 10316                           ; BSR set to: 0
 10317                           ;mconfig.c: 130:  wait_lcd_done();
 10318  0199A6  EC68  F0E1         	call	_wait_lcd_done	;wreg free
 10319                           
 10320                           ; BSR set to: 0
 10321                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 10322  0199AA  0E08               	movlw	low (_V+1)
 10323  0199AC  6EE6               	movwf	postinc1,c
 10324  0199AE  0E01               	movlw	high (_V+1)
 10325  0199B0  6EE6               	movwf	postinc1,c
 10326  0199B2  0E00               	movlw	0
 10327  0199B4  6EE6               	movwf	postinc1,c
 10328  0199B6  0E02               	movlw	2
 10329  0199B8  6EE6               	movwf	postinc1,c
 10330  0199BA  ECA6  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10331                           
 10332                           ; BSR set to: 59
 10333                           ;mconfig.c: 132:  WaitMs(3000);
 10334  0199BE  0EB8               	movlw	184
 10335  0199C0  6EE6               	movwf	postinc1,c
 10336  0199C2  0E0B               	movlw	11
 10337  0199C4  6EE6               	movwf	postinc1,c
 10338  0199C6  EC7D  F0DE         	call	_WaitMs	;wreg free
 10339                           
 10340                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 10341  0199CA  0012               	return		;funcret
 10342  0199CC                     __end_of_vterm_dump:
 10343                           	opt callstack 0
 10344                           
 10345 ;; *************** function _sprintf *****************
 10346 ;; Defined at:
 10347 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 10348 ;; Parameters:    Size  Location     Type
 10349 ;;  s               2  [STACK] PTR unsigned char 
 10350 ;;		 -> D.lcd(480), D(482), port_data(512), V(191), 
 10351 ;;  fmt             2  [STACK] PTR const unsigned char 
 10352 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 10353 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 10354 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 10355 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 10356 ;;		 -> STR_47(19), STR_42(22), STR_41(22), STR_40(22), 
 10357 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(29), 
 10358 ;;		 -> STR_35(23), STR_34(23), STR_33(22), STR_32(22), 
 10359 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 10360 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(22), 
 10361 ;;		 -> STR_23(22), STR_22(22), STR_21(17), STR_20(16), 
 10362 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 10363 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
 10364 ;;		 -> STR_11(22), STR_10(22), STR_9(26), STR_8(21), 
 10365 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 10366 ;;		 -> STR_2(21), STR_1(21), 
 10367 ;; Auto vars:     Size  Location     Type
 10368 ;;  f               6  [STACK] struct _IO_FILE
 10369 ;;  ap              2  [STACK] PTR void [1]
 10370 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10371 ;;  ret             2    0        int 
 10372 ;; Return value:  Size  Location     Type
 10373 ;;                  2  [STACK] int 
 10374 ;; Registers used:
 10375 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10376 ;; Tracked objects:
 10377 ;;		On entry : 0/1
 10378 ;;		On exit  : 3F/0
 10379 ;;		Unchanged: 0/0
 10380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10385 ;;Total ram usage:        0 bytes
 10386 ;; Hardware stack levels used:    1
 10387 ;; Hardware stack levels required when called:   23
 10388 ;; This function calls:
 10389 ;;		_vfprintf
 10390 ;; This function is called by:
 10391 ;;		_main
 10392 ;;		_check_help
 10393 ;;		_vterm_dump
 10394 ;;		_calc_bsoc
 10395 ;; This function uses a reentrant model
 10396 ;;
 10397                           
 10398                           	psect	text36
 10399  019F44                     __ptext36:
 10400                           	opt callstack 0
 10401  019F44                     _sprintf:
 10402                           	opt callstack 0
 10403                           
 10404                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 86, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10405  019F44  0E08               	movlw	8
 10406  019F46  26E1               	addwf	fsr1l,f,c
 10407  019F48  0E00               	movlw	0
 10408  019F4A  22E2               	addwfc	fsr1h,f,c
 10409                           
 10410                           ;incstack = 0
 10411 ;; hardware stack exceeded
 10412  019F4C  0EFE               	movlw	254
 10413  019F4E  6E0B               	movwf	(btemp+10)^0,c
 10414  019F50  0EFF               	movlw	255
 10415  019F52  6E0C               	movwf	(btemp+11)^0,c
 10416                           
 10417                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 10418  019F54  0EF5               	movlw	245
 10419  019F56  24E1               	addwf	fsr1l,w,c
 10420  019F58  6E09               	movwf	(btemp+8)^0,c
 10421  019F5A  0EFF               	movlw	255
 10422  019F5C  20E2               	addwfc	fsr1h,w,c
 10423  019F5E  6E0A               	movwf	(btemp+9)^0,c
 10424  019F60  500B               	movf	(btemp+10)^0,w,c
 10425  019F62  2609               	addwf	(btemp+8)^0,f,c
 10426  019F64  500C               	movf	(btemp+11)^0,w,c
 10427  019F66  220A               	addwfc	(btemp+9)^0,f,c
 10428                           
 10429                           ;stkvar	_ap @ sp[(-8)+6]
 10430  019F68  0EFF               	movlw	-1
 10431  019F6A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10432  019F70  0EFE               	movlw	-2
 10433  019F72  0060  F027  FFE3   	movff	btemp+8,plusw1
 10434                           
 10435                           ;stkvar	_s @ sp[(-8)+-3]
 10436  019F78  0EF5               	movlw	-11
 10437  019F7A  006F FF8C  F00B    	movff	plusw1,btemp+10
 10438  019F80  0EF6               	movlw	-10
 10439  019F82  006F FF8C  F00C    	movff	plusw1,btemp+11
 10440                           
 10441                           ;stkvar	_f @ sp[(-8)+0]
 10442  019F88  0EF9               	movlw	-7
 10443  019F8A  0060  F033  FFE3   	movff	btemp+11,plusw1
 10444  019F90  0EF8               	movlw	-8
 10445  019F92  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10446                           
 10447                           ;stkvar	_f @ sp[(-8)+0]
 10448  019F98  0EFA               	movlw	250
 10449  019F9A  24E1               	addwf	fsr1l,w,c
 10450  019F9C  6ED9               	movwf	fsr2l,c
 10451  019F9E  0EFF               	movlw	255
 10452  019FA0  20E2               	addwfc	fsr1h,w,c
 10453  019FA2  6EDA               	movwf	fsr2h,c
 10454  019FA4  0E00               	movlw	0
 10455  019FA6  6EDE               	movwf	postinc2,c
 10456  019FA8  0E00               	movlw	0
 10457  019FAA  6EDD               	movwf	postdec2,c
 10458                           
 10459                           ;stkvar	_f @ sp[(-8)+0]
 10460  019FAC  0EFC               	movlw	252
 10461  019FAE  24E1               	addwf	fsr1l,w,c
 10462  019FB0  6ED9               	movwf	fsr2l,c
 10463  019FB2  0EFF               	movlw	255
 10464  019FB4  20E2               	addwfc	fsr1h,w,c
 10465  019FB6  6EDA               	movwf	fsr2h,c
 10466  019FB8  0E00               	movlw	0
 10467  019FBA  6EDE               	movwf	postinc2,c
 10468  019FBC  0E00               	movlw	0
 10469  019FBE  6EDD               	movwf	postdec2,c
 10470                           
 10471                           ;stkvar	_ap @ sp[(-8)+6]
 10472  019FC0  0EFE               	movlw	254
 10473  019FC2  24E1               	addwf	fsr1l,w,c
 10474  019FC4  6E01               	movwf	btemp^0,c
 10475  019FC6  0EFF               	movlw	255
 10476  019FC8  20E2               	addwfc	fsr1h,w,c
 10477  019FCA  6E02               	movwf	(btemp+1)^0,c
 10478  019FCC  0060  F007  FFE6   	movff	btemp,postinc1
 10479  019FD2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10480                           
 10481                           ;stkvar	_fmt @ sp[(-10)+-5]
 10482  019FD8  0EF1               	movlw	-15
 10483  019FDA  006F FF8F FFE6     	movff	plusw1,postinc1
 10484  019FE0  006F FF8F FFE6     	movff	plusw1,postinc1
 10485                           
 10486                           ;stkvar	_f @ sp[(-12)+0]
 10487  019FE6  0EF4               	movlw	244
 10488  019FE8  24E1               	addwf	fsr1l,w,c
 10489  019FEA  6E01               	movwf	btemp^0,c
 10490  019FEC  0EFF               	movlw	255
 10491  019FEE  20E2               	addwfc	fsr1h,w,c
 10492  019FF0  6E02               	movwf	(btemp+1)^0,c
 10493  019FF2  0060  F007  FFE6   	movff	btemp,postinc1
 10494  019FF8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10495  019FFE  ECFB  F0D4         	call	_vfprintf	;wreg free
 10496                           
 10497                           ; BSR set to: 0
 10498                           ;stkvar	_f @ sp[(-8)+0]
 10499  01A002  0EFA               	movlw	250
 10500  01A004  24E1               	addwf	fsr1l,w,c
 10501  01A006  6ED9               	movwf	fsr2l,c
 10502  01A008  0EFF               	movlw	255
 10503  01A00A  20E2               	addwfc	fsr1h,w,c
 10504  01A00C  6EDA               	movwf	fsr2h,c
 10505  01A00E  006F FF78  F00B    	movff	postinc2,btemp+10
 10506  01A014  006F FF74  F00C    	movff	postdec2,btemp+11
 10507                           
 10508                           ;stkvar	_s @ sp[(-8)+-3]
 10509  01A01A  0EF5               	movlw	-11
 10510  01A01C  006F FF8C  F009    	movff	plusw1,btemp+8
 10511  01A022  0EF6               	movlw	-10
 10512  01A024  006F FF8C  F00A    	movff	plusw1,btemp+9
 10513  01A02A  500B               	movf	(btemp+10)^0,w,c
 10514  01A02C  2409               	addwf	(btemp+8)^0,w,c
 10515  01A02E  6ED9               	movwf	fsr2l,c
 10516  01A030  500C               	movf	(btemp+11)^0,w,c
 10517  01A032  200A               	addwfc	(btemp+9)^0,w,c
 10518  01A034  6EDA               	movwf	fsr2h,c
 10519  01A036  0E00               	movlw	0
 10520  01A038  6EDF               	movwf	indf2,c
 10521                           
 10522                           ; BSR set to: 0
 10523                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 86, args
      +                          ize = 4, vargsize = 0
 10524  01A03A  0EF8               	movlw	248
 10525  01A03C  26E1               	addwf	fsr1l,f,c
 10526  01A03E  0EFF               	movlw	255
 10527  01A040  22E2               	addwfc	fsr1h,f,c
 10528  01A042  52E5               	movf	postdec1,f,c
 10529  01A044  50E7               	movf	indf1,w,c
 10530  01A046  5EE1               	subwf	fsr1l,f,c
 10531  01A048  0E00               	movlw	0
 10532  01A04A  5AE2               	subwfb	fsr1h,f,c
 10533  01A04C  0012               	return		;funcret
 10534  01A04E                     __end_of_sprintf:
 10535                           	opt callstack 0
 10536                           
 10537 ;; *************** function _get_vterm_ptr *****************
 10538 ;; Defined at:
 10539 ;;		line 116 in file "mconfig.c"
 10540 ;; Parameters:    Size  Location     Type
 10541 ;;  line            1  [STACK] const unsigned char 
 10542 ;;  vterm           1  [STACK] const unsigned char 
 10543 ;; Auto vars:     Size  Location     Type
 10544 ;;		None
 10545 ;; Return value:  Size  Location     Type
 10546 ;;                  2  [STACK] PTR unsigned char 
 10547 ;; Registers used:
 10548 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 10549 ;; Tracked objects:
 10550 ;;		On entry : 0/1
 10551 ;;		On exit  : 0/0
 10552 ;;		Unchanged: 0/0
 10553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10558 ;;Total ram usage:        0 bytes
 10559 ;; Hardware stack levels used:    1
 10560 ;; Hardware stack levels required when called:   15
 10561 ;; This function calls:
 10562 ;;		Nothing
 10563 ;; This function is called by:
 10564 ;;		_main
 10565 ;;		_check_help
 10566 ;;		_vterm_dump
 10567 ;; This function uses a reentrant model
 10568 ;;
 10569                           
 10570                           	psect	text37
 10571  01BEC0                     __ptext37:
 10572                           	opt callstack 0
 10573  01BEC0                     _get_vterm_ptr:
 10574                           	opt callstack 15
 10575                           
 10576                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
 10577                           ;stkvar	_vterm @ sp[(0)+-2]
 10578                           
 10579                           ; BSR set to: 0
 10580                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10581                           ;incstack = 0
 10582  01BEC0  0EFE               	movlw	-2
 10583  01BEC2  50E3               	movf	plusw1,w,c
 10584  01BEC4  0B03               	andlw	3
 10585  01BEC6  0D78               	mullw	120
 10586  01BEC8  0E2A               	movlw	low _D
 10587  01BECA  6E01               	movwf	btemp^0,c
 10588  01BECC  0E08               	movlw	high _D
 10589  01BECE  6E02               	movwf	(btemp+1)^0,c
 10590  01BED0  50F3               	movf	243,w,c
 10591  01BED2  2601               	addwf	btemp^0,f,c
 10592  01BED4  50F4               	movf	244,w,c
 10593  01BED6  2202               	addwfc	(btemp+1)^0,f,c
 10594                           
 10595                           ;stkvar	_line @ sp[(0)+-1]
 10596  01BED8  0EFF               	movlw	-1
 10597  01BEDA  50E3               	movf	plusw1,w,c
 10598  01BEDC  0B03               	andlw	3
 10599  01BEDE  0D28               	mullw	40
 10600  01BEE0  50F3               	movf	243,w,c
 10601  01BEE2  2601               	addwf	btemp^0,f,c
 10602  01BEE4  50F4               	movf	244,w,c
 10603  01BEE6  2202               	addwfc	(btemp+1)^0,f,c
 10604                           
 10605                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 10606  01BEE8  52E5               	movf	postdec1,f,c
 10607  01BEEA  52E5               	movf	postdec1,f,c
 10608  01BEEC  0012               	return		;funcret
 10609  01BEEE                     __end_of_get_vterm_ptr:
 10610                           	opt callstack 0
 10611                           
 10612 ;; *************** function _WaitMs *****************
 10613 ;; Defined at:
 10614 ;;		line 32 in file "timers.c"
 10615 ;; Parameters:    Size  Location     Type
 10616 ;;  numMilliseco    2  [STACK] const unsigned short 
 10617 ;; Auto vars:     Size  Location     Type
 10618 ;;		None
 10619 ;; Return value:  Size  Location     Type
 10620 ;;                  1  [STACK] void 
 10621 ;; Registers used:
 10622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10623 ;; Tracked objects:
 10624 ;;		On entry : 0/1
 10625 ;;		On exit  : 0/0
 10626 ;;		Unchanged: 0/0
 10627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10632 ;;Total ram usage:        0 bytes
 10633 ;; Hardware stack levels used:    1
 10634 ;; Hardware stack levels required when called:   16
 10635 ;; This function calls:
 10636 ;;		_StartTimer
 10637 ;;		_TimerDone
 10638 ;; This function is called by:
 10639 ;;		_main
 10640 ;;		_vterm_dump
 10641 ;; This function uses a reentrant model
 10642 ;;
 10643                           
 10644                           	psect	text38
 10645  01BCFA                     __ptext38:
 10646                           	opt callstack 0
 10647  01BCFA                     _WaitMs:
 10648                           	opt callstack 12
 10649                           
 10650                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 10651                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 10652                           
 10653                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10654                           ;incstack = 0
 10655  01BCFA  0EFE               	movlw	-2
 10656  01BCFC  006F FF8F FFE6     	movff	plusw1,postinc1
 10657  01BD02  006F FF8F FFE6     	movff	plusw1,postinc1
 10658  01BD08  0E00               	movlw	0
 10659  01BD0A  6EE6               	movwf	postinc1,c
 10660  01BD0C  EC8E  F0DD         	call	_StartTimer	;wreg free
 10661                           
 10662                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 10663  01BD10  D005               	goto	l10039
 10664  01BD12                     l1616:
 10665                           
 10666                           ;timers.c: 36:   __nop();
 10667  01BD12  F000               	nop	
 10668                           
 10669                           ;timers.c: 37:   __nop();
 10670  01BD14  F000               	nop	
 10671                           
 10672                           ;timers.c: 38:   __nop();
 10673  01BD16  F000               	nop	
 10674                           
 10675                           ;timers.c: 39:   __nop();
 10676  01BD18  F000               	nop	
 10677  01BD1A  0004               	clrwdt		;# 
 10678  01BD1C                     l10039:
 10679                           
 10680                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 10681  01BD1C  0E00               	movlw	0
 10682  01BD1E  6EE6               	movwf	postinc1,c
 10683  01BD20  ECE3  F0DF         	call	_TimerDone	;wreg free
 10684  01BD24  5001               	movf	btemp^0,w,c
 10685  01BD26  B4D8               	btfsc	status,2,c
 10686  01BD28  D7F4               	goto	l1616
 10687                           
 10688                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 10689  01BD2A  52E5               	movf	postdec1,f,c
 10690  01BD2C  52E5               	movf	postdec1,f,c
 10691  01BD2E  0012               	return		;funcret
 10692  01BD30                     __end_of_WaitMs:
 10693                           	opt callstack 0
 10694                           
 10695 ;; *************** function _update_lcd *****************
 10696 ;; Defined at:
 10697 ;;		line 85 in file "mconfig.c"
 10698 ;; Parameters:    Size  Location     Type
 10699 ;;  vterm           1  [STACK] unsigned char 
 10700 ;; Auto vars:     Size  Location     Type
 10701 ;;		None
 10702 ;; Return value:  Size  Location     Type
 10703 ;;                  1  [STACK] unsigned char 
 10704 ;; Registers used:
 10705 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10706 ;; Tracked objects:
 10707 ;;		On entry : 0/0
 10708 ;;		On exit  : 0/0
 10709 ;;		Unchanged: 0/0
 10710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10715 ;;Total ram usage:        0 bytes
 10716 ;; Hardware stack levels used:    1
 10717 ;; Hardware stack levels required when called:   27
 10718 ;; This function calls:
 10719 ;;		_eaDogM_WriteStringAtPos
 10720 ;;		_wait_lcd_done
 10721 ;; This function is called by:
 10722 ;;		_main
 10723 ;;		_check_help
 10724 ;; This function uses a reentrant model
 10725 ;;
 10726                           
 10727                           	psect	text39
 10728  019E34                     __ptext39:
 10729                           	opt callstack 0
 10730  019E34                     _update_lcd:
 10731                           	opt callstack 3
 10732                           
 10733                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 10734                           ;stkvar	_vterm @ sp[(0)+-1]
 10735                           
 10736                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10737                           ;incstack = 0
 10738  019E34  0EFF               	movlw	-1
 10739  019E36  006F FF8C  F001    	movff	plusw1,btemp
 10740  019E3C  0E03               	movlw	3
 10741  019E3E  1601               	andwf	btemp^0,f,c
 10742  019E40  0EFF               	movlw	-1
 10743  019E42  0060  F007  FFE3   	movff	btemp,plusw1
 10744                           
 10745                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 10746  019E48  EE22  F20A         	lfsr	2,_D+480
 10747  019E4C  A0DF               	btfss	indf2,0,c
 10748  019E4E  D004               	goto	l13041
 10749                           
 10750                           ;stkvar	_vterm @ sp[(0)+-1]
 10751  019E50  0EFF               	movlw	-1
 10752  019E52  50E3               	movf	plusw1,w,c
 10753  019E54  B4D8               	btfsc	status,2,c
 10754  019E56  D074               	goto	l1692
 10755  019E58                     l13041:
 10756                           
 10757                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 10758                           ;stkvar	_vterm @ sp[(0)+-1]
 10759  019E58  0EFF               	movlw	-1
 10760  019E5A  50E3               	movf	plusw1,w,c
 10761  019E5C  0D78               	mullw	120
 10762  019E5E  0E3E               	movlw	low (_D+20)
 10763  019E60  24F3               	addwf	243,w,c
 10764  019E62  6ED9               	movwf	fsr2l,c
 10765  019E64  0E08               	movlw	high (_D+20)
 10766  019E66  20F4               	addwfc	prodh,w,c
 10767  019E68  6EDA               	movwf	fsr2h,c
 10768  019E6A  0E00               	movlw	0
 10769  019E6C  6EDF               	movwf	indf2,c
 10770                           
 10771                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 10772                           ;stkvar	_vterm @ sp[(0)+-1]
 10773  019E6E  0EFF               	movlw	-1
 10774  019E70  50E3               	movf	plusw1,w,c
 10775  019E72  0D78               	mullw	120
 10776  019E74  0E66               	movlw	low (_D+60)
 10777  019E76  24F3               	addwf	243,w,c
 10778  019E78  6ED9               	movwf	fsr2l,c
 10779  019E7A  0E08               	movlw	high (_D+60)
 10780  019E7C  20F4               	addwfc	prodh,w,c
 10781  019E7E  6EDA               	movwf	fsr2h,c
 10782  019E80  0E00               	movlw	0
 10783  019E82  6EDF               	movwf	indf2,c
 10784                           
 10785                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 10786                           ;stkvar	_vterm @ sp[(0)+-1]
 10787  019E84  0EFF               	movlw	-1
 10788  019E86  50E3               	movf	plusw1,w,c
 10789  019E88  0D78               	mullw	120
 10790  019E8A  0E8E               	movlw	low (_D+100)
 10791  019E8C  24F3               	addwf	243,w,c
 10792  019E8E  6ED9               	movwf	fsr2l,c
 10793  019E90  0E08               	movlw	high (_D+100)
 10794  019E92  20F4               	addwfc	prodh,w,c
 10795  019E94  6EDA               	movwf	fsr2h,c
 10796  019E96  0E00               	movlw	0
 10797  019E98  6EDF               	movwf	indf2,c
 10798                           
 10799                           ;mconfig.c: 95:  wait_lcd_done();
 10800  019E9A  EC68  F0E1         	call	_wait_lcd_done	;wreg free
 10801                           
 10802                           ; BSR set to: 0
 10803                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 10804                           ;stkvar	_vterm @ sp[(0)+-1]
 10805  019E9E  0EFF               	movlw	-1
 10806  019EA0  50E3               	movf	plusw1,w,c
 10807  019EA2  0D78               	mullw	120
 10808  019EA4  0E2A               	movlw	low _D
 10809  019EA6  6E0B               	movwf	(btemp+10)^0,c
 10810  019EA8  0E08               	movlw	high _D
 10811  019EAA  6E0C               	movwf	(btemp+11)^0,c
 10812  019EAC  50F3               	movf	243,w,c
 10813  019EAE  260B               	addwf	(btemp+10)^0,f,c
 10814  019EB0  50F4               	movf	244,w,c
 10815  019EB2  220C               	addwfc	(btemp+11)^0,f,c
 10816  019EB4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10817  019EBA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10818  019EC0  0E00               	movlw	0
 10819  019EC2  6EE6               	movwf	postinc1,c
 10820  019EC4  0E00               	movlw	0
 10821  019EC6  6EE6               	movwf	postinc1,c
 10822  019EC8  ECA6  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10823                           
 10824                           ; BSR set to: 59
 10825                           ;mconfig.c: 97:  wait_lcd_done();
 10826  019ECC  EC68  F0E1         	call	_wait_lcd_done	;wreg free
 10827                           
 10828                           ; BSR set to: 0
 10829                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 10830                           ;stkvar	_vterm @ sp[(0)+-1]
 10831  019ED0  0EFF               	movlw	-1
 10832  019ED2  50E3               	movf	plusw1,w,c
 10833  019ED4  0D78               	mullw	120
 10834  019ED6  0E2A               	movlw	low _D
 10835  019ED8  6E0B               	movwf	(btemp+10)^0,c
 10836  019EDA  0E08               	movlw	high _D
 10837  019EDC  6E0C               	movwf	(btemp+11)^0,c
 10838  019EDE  0E28               	movlw	40
 10839  019EE0  260B               	addwf	(btemp+10)^0,f,c
 10840  019EE2  0E00               	movlw	0
 10841  019EE4  220C               	addwfc	(btemp+11)^0,f,c
 10842  019EE6  50F3               	movf	243,w,c
 10843  019EE8  260B               	addwf	(btemp+10)^0,f,c
 10844  019EEA  50F4               	movf	244,w,c
 10845  019EEC  220C               	addwfc	(btemp+11)^0,f,c
 10846  019EEE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10847  019EF4  0060  F033  FFE6   	movff	btemp+11,postinc1
 10848  019EFA  0E00               	movlw	0
 10849  019EFC  6EE6               	movwf	postinc1,c
 10850  019EFE  0E01               	movlw	1
 10851  019F00  6EE6               	movwf	postinc1,c
 10852  019F02  ECA6  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10853                           
 10854                           ; BSR set to: 59
 10855                           ;mconfig.c: 99:  wait_lcd_done();
 10856  019F06  EC68  F0E1         	call	_wait_lcd_done	;wreg free
 10857                           
 10858                           ; BSR set to: 0
 10859                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 10860                           ;stkvar	_vterm @ sp[(0)+-1]
 10861  019F0A  0EFF               	movlw	-1
 10862  019F0C  50E3               	movf	plusw1,w,c
 10863  019F0E  0D78               	mullw	120
 10864  019F10  0E2A               	movlw	low _D
 10865  019F12  6E0B               	movwf	(btemp+10)^0,c
 10866  019F14  0E08               	movlw	high _D
 10867  019F16  6E0C               	movwf	(btemp+11)^0,c
 10868  019F18  0E50               	movlw	80
 10869  019F1A  260B               	addwf	(btemp+10)^0,f,c
 10870  019F1C  0E00               	movlw	0
 10871  019F1E  220C               	addwfc	(btemp+11)^0,f,c
 10872  019F20  50F3               	movf	243,w,c
 10873  019F22  260B               	addwf	(btemp+10)^0,f,c
 10874  019F24  50F4               	movf	244,w,c
 10875  019F26  220C               	addwfc	(btemp+11)^0,f,c
 10876  019F28  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10877  019F2E  0060  F033  FFE6   	movff	btemp+11,postinc1
 10878  019F34  0E00               	movlw	0
 10879  019F36  6EE6               	movwf	postinc1,c
 10880  019F38  0E02               	movlw	2
 10881  019F3A  6EE6               	movwf	postinc1,c
 10882  019F3C  ECA6  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10883  019F40                     l1692:
 10884                           
 10885                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10886  019F40  52E5               	movf	postdec1,f,c
 10887  019F42  0012               	return		;funcret
 10888  019F44                     __end_of_update_lcd:
 10889                           	opt callstack 0
 10890                           
 10891 ;; *************** function _eaDogM_WriteStringAtPos *****************
 10892 ;; Defined at:
 10893 ;;		line 195 in file "eadog.c"
 10894 ;; Parameters:    Size  Location     Type
 10895 ;;  r               1  [STACK] const unsigned char 
 10896 ;;  c               1  [STACK] const unsigned char 
 10897 ;;  strPtr          2  [STACK] PTR unsigned char 
 10898 ;;		 -> D.lcd(480), D(482), V(191), 
 10899 ;; Auto vars:     Size  Location     Type
 10900 ;;  row             1  [STACK] unsigned char 
 10901 ;; Return value:  Size  Location     Type
 10902 ;;                  1  [STACK] void 
 10903 ;; Registers used:
 10904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10905 ;; Tracked objects:
 10906 ;;		On entry : 3F/0
 10907 ;;		On exit  : 3F/3B
 10908 ;;		Unchanged: 0/0
 10909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10914 ;;Total ram usage:        0 bytes
 10915 ;; Hardware stack levels used:    1
 10916 ;; Hardware stack levels required when called:   26
 10917 ;; This function calls:
 10918 ;;		_eaDogM_WriteString
 10919 ;;		_send_lcd_cmd_dma
 10920 ;;		_send_lcd_data_dma
 10921 ;;		_wait_lcd_done
 10922 ;;		_wdtdelay
 10923 ;; This function is called by:
 10924 ;;		_update_lcd
 10925 ;;		_vterm_dump
 10926 ;; This function uses a reentrant model
 10927 ;;
 10928                           
 10929                           	psect	text40
 10930  01AB4C                     __ptext40:
 10931                           	opt callstack 0
 10932  01AB4C                     _eaDogM_WriteStringAtPos:
 10933                           	opt callstack 0
 10934                           
 10935                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10936  01AB4C  52E6               	movf	postinc1,f,c
 10937                           
 10938                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 10939                           
 10940                           ;incstack = 0
 10941  01AB4E  D014               	goto	l13017
 10942  01AB50                     l13005:
 10943                           
 10944                           ;eadog.c: 201:   row = 0x40;
 10945                           ;stkvar	_row @ sp[(-1)+0]
 10946  01AB50  0EFF               	movlw	-1
 10947  01AB52  6AE3               	clrf	plusw1,c
 10948  01AB54  8CE3               	bsf	plusw1,6,c
 10949                           
 10950                           ;eadog.c: 202:   break;
 10951  01AB56  D026               	goto	l13019
 10952  01AB58                     l13007:
 10953                           
 10954                           ;eadog.c: 204:   row = 0x14;
 10955                           ;stkvar	_row @ sp[(-1)+0]
 10956  01AB58  0EFF               	movlw	-1
 10957  01AB5A  6AE3               	clrf	plusw1,c
 10958  01AB5C  84E3               	bsf	plusw1,2,c
 10959  01AB5E  88E3               	bsf	plusw1,4,c	;indir
 10960                           
 10961                           ;eadog.c: 205:   break;
 10962  01AB60  D021               	goto	l13019
 10963  01AB62                     l13009:
 10964                           
 10965                           ;eadog.c: 207:   row = 0x54;
 10966  01AB62  0E54               	movlw	84
 10967  01AB64  6E0C               	movwf	(btemp+11)^0,c
 10968                           
 10969                           ;stkvar	_row @ sp[(-1)+0]
 10970  01AB66  0EFF               	movlw	-1
 10971  01AB68  0060  F033  FFE3   	movff	btemp+11,plusw1
 10972                           
 10973                           ;eadog.c: 208:   break;
 10974  01AB6E  D01A               	goto	l13019
 10975  01AB70                     l13011:
 10976                           
 10977                           ;eadog.c: 210:   row = 0x1;
 10978                           ;stkvar	_row @ sp[(-1)+0]
 10979  01AB70  0EFF               	movlw	-1
 10980  01AB72  6AE3               	clrf	plusw1,c
 10981  01AB74  2AE3               	incf	plusw1,f,c
 10982                           
 10983                           ;eadog.c: 211:   break;
 10984  01AB76  D016               	goto	l13019
 10985  01AB78                     l13017:
 10986                           
 10987                           ;stkvar	_r @ sp[(-1)+-1]
 10988  01AB78  0EFE               	movlw	-2
 10989  01AB7A  50E3               	movf	plusw1,w,c
 10990  01AB7C  6E0B               	movwf	(btemp+10)^0,c
 10991  01AB7E  6A0C               	clrf	(btemp+11)^0,c
 10992                           
 10993                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10994                           ; Switch size 1, requested type "simple"
 10995                           ; Number of cases is 1, Range of values is 0 to 0
 10996                           ; switch strategies available:
 10997                           ; Name         Instructions Cycles
 10998                           ; simple_byte            4     3 (average)
 10999                           ;	Chosen strategy is simple_byte
 11000  01AB80  500C               	movf	(btemp+11)^0,w,c
 11001  01AB82  0A00               	xorlw	0	; case 0
 11002  01AB84  A4D8               	btfss	status,2,c
 11003  01AB86  D7E4               	goto	l13005
 11004                           
 11005                           ; Switch size 1, requested type "simple"
 11006                           ; Number of cases is 4, Range of values is 0 to 3
 11007                           ; switch strategies available:
 11008                           ; Name         Instructions Cycles
 11009                           ; simple_byte           13     7 (average)
 11010                           ;	Chosen strategy is simple_byte
 11011  01AB88  500B               	movf	(btemp+10)^0,w,c
 11012  01AB8A  0A00               	xorlw	0	; case 0
 11013  01AB8C  B4D8               	btfsc	status,2,c
 11014  01AB8E  D7E0               	goto	l13005
 11015  01AB90  0A01               	xorlw	1	; case 1
 11016  01AB92  B4D8               	btfsc	status,2,c
 11017  01AB94  D7E1               	goto	l13007
 11018  01AB96  0A03               	xorlw	3	; case 2
 11019  01AB98  B4D8               	btfsc	status,2,c
 11020  01AB9A  D7E3               	goto	l13009
 11021  01AB9C  0A01               	xorlw	1	; case 3
 11022  01AB9E  B4D8               	btfsc	status,2,c
 11023  01ABA0  D7E7               	goto	l13011
 11024  01ABA2  D7D6               	goto	l13005
 11025  01ABA4                     l13019:
 11026                           
 11027                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 11028  01ABA4  0E45               	movlw	69
 11029  01ABA6  6EE6               	movwf	postinc1,c
 11030  01ABA8  ECCA  F0E1         	call	_send_lcd_cmd_dma	;wreg free
 11031                           
 11032                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 11033                           ;stkvar	_c @ sp[(-1)+-2]
 11034  01ABAC  0EFD               	movlw	-3
 11035  01ABAE  006F FF8C  F00C    	movff	plusw1,btemp+11
 11036                           
 11037                           ;stkvar	_row @ sp[(-1)+0]
 11038  01ABB4  0EFF               	movlw	-1
 11039  01ABB6  50E3               	movf	plusw1,w,c
 11040  01ABB8  240C               	addwf	(btemp+11)^0,w,c
 11041  01ABBA  6EE6               	movwf	postinc1,c
 11042  01ABBC  ECC8  F0DB         	call	_send_lcd_data_dma	;wreg free
 11043                           
 11044                           ; BSR set to: 59
 11045                           ;eadog.c: 218:  wait_lcd_done();
 11046  01ABC0  EC68  F0E1         	call	_wait_lcd_done	;wreg free
 11047                           
 11048                           ; BSR set to: 0
 11049                           ;eadog.c: 219:  wdtdelay(8);
 11050  01ABC4  0E08               	movlw	8
 11051  01ABC6  6EE6               	movwf	postinc1,c
 11052  01ABC8  0E00               	movlw	0
 11053  01ABCA  6EE6               	movwf	postinc1,c
 11054  01ABCC  0E00               	movlw	0
 11055  01ABCE  6EE6               	movwf	postinc1,c
 11056  01ABD0  0E00               	movlw	0
 11057  01ABD2  6EE6               	movwf	postinc1,c
 11058  01ABD4  ECF5  F0DA         	call	_wdtdelay	;wreg free
 11059                           
 11060                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 11061                           ;stkvar	_strPtr @ sp[(-1)+-4]
 11062  01ABD8  0EFB               	movlw	-5
 11063  01ABDA  006F FF8F FFE6     	movff	plusw1,postinc1
 11064  01ABE0  006F FF8F FFE6     	movff	plusw1,postinc1
 11065  01ABE6  ECFA  F0D5         	call	_eaDogM_WriteString	;wreg free
 11066                           
 11067                           ; BSR set to: 59
 11068                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 11069  01ABEA  0EFB               	movlw	251
 11070  01ABEC  26E1               	addwf	fsr1l,f,c
 11071  01ABEE  0EFF               	movlw	255
 11072  01ABF0  22E2               	addwfc	fsr1h,f,c
 11073  01ABF2  0012               	return		;funcret
 11074  01ABF4                     __end_of_eaDogM_WriteStringAtPos:
 11075                           	opt callstack 0
 11076                           
 11077 ;; *************** function _send_lcd_cmd_dma *****************
 11078 ;; Defined at:
 11079 ;;		line 171 in file "eadog.c"
 11080 ;; Parameters:    Size  Location     Type
 11081 ;;  strPtr          1  [STACK] const unsigned char 
 11082 ;; Auto vars:     Size  Location     Type
 11083 ;;		None
 11084 ;; Return value:  Size  Location     Type
 11085 ;;                  1  [STACK] void 
 11086 ;; Registers used:
 11087 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11088 ;; Tracked objects:
 11089 ;;		On entry : 0/3D
 11090 ;;		On exit  : 3F/0
 11091 ;;		Unchanged: 0/0
 11092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11097 ;;Total ram usage:        0 bytes
 11098 ;; Hardware stack levels used:    1
 11099 ;; Hardware stack levels required when called:   25
 11100 ;; This function calls:
 11101 ;;		_send_lcd_data_dma
 11102 ;;		_wait_lcd_done
 11103 ;; This function is called by:
 11104 ;;		_eaDogM_WriteStringAtPos
 11105 ;;		_eaDogM_WriteCommand
 11106 ;; This function uses a reentrant model
 11107 ;;
 11108                           
 11109                           	psect	text41
 11110  01C394                     __ptext41:
 11111                           	opt callstack 0
 11112  01C394                     _send_lcd_cmd_dma:
 11113                           	opt callstack 3
 11114                           
 11115                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 11116                           
 11117                           ; BSR set to: 59
 11118                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11119                           ;incstack = 0
 11120  01C394  0EFE               	movlw	254
 11121  01C396  6EE6               	movwf	postinc1,c
 11122  01C398  ECC8  F0DB         	call	_send_lcd_data_dma	;wreg free
 11123                           
 11124                           ; BSR set to: 59
 11125                           ;eadog.c: 174:  wait_lcd_done();
 11126  01C39C  EC68  F0E1         	call	_wait_lcd_done	;wreg free
 11127                           
 11128                           ; BSR set to: 0
 11129                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 11130                           ;stkvar	_strPtr @ sp[(0)+-1]
 11131  01C3A0  0EFF               	movlw	-1
 11132  01C3A2  50E3               	movf	plusw1,w,c
 11133  01C3A4  6EE6               	movwf	postinc1,c
 11134  01C3A6  ECC8  F0DB         	call	_send_lcd_data_dma	;wreg free
 11135                           
 11136                           ;eadog.c: 176:  wait_lcd_done();
 11137  01C3AA  EC68  F0E1         	call	_wait_lcd_done	;wreg free
 11138                           
 11139                           ; BSR set to: 0
 11140                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 11141  01C3AE  52E5               	movf	postdec1,f,c
 11142  01C3B0  0012               	return		;funcret
 11143  01C3B2                     __end_of_send_lcd_cmd_dma:
 11144                           	opt callstack 0
 11145                           
 11146 ;; *************** function _wait_lcd_done *****************
 11147 ;; Defined at:
 11148 ;;		line 444 in file "eadog.c"
 11149 ;; Parameters:    Size  Location     Type
 11150 ;;		None
 11151 ;; Auto vars:     Size  Location     Type
 11152 ;;		None
 11153 ;; Return value:  Size  Location     Type
 11154 ;;                  1  [STACK] void 
 11155 ;; Registers used:
 11156 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 11157 ;; Tracked objects:
 11158 ;;		On entry : 0/1
 11159 ;;		On exit  : 3F/0
 11160 ;;		Unchanged: 0/0
 11161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11166 ;;Total ram usage:        0 bytes
 11167 ;; Hardware stack levels used:    1
 11168 ;; Hardware stack levels required when called:   16
 11169 ;; This function calls:
 11170 ;;		_wdtdelay
 11171 ;; This function is called by:
 11172 ;;		_main
 11173 ;;		_send_lcd_cmd_dma
 11174 ;;		_eaDogM_WriteStringAtPos
 11175 ;;		_update_lcd
 11176 ;;		_vterm_dump
 11177 ;; This function uses a reentrant model
 11178 ;;
 11179                           
 11180                           	psect	text42
 11181  01C2D0                     __ptext42:
 11182                           	opt callstack 0
 11183  01C2D0                     _wait_lcd_done:
 11184                           	opt callstack 14
 11185                           
 11186                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 11187                           
 11188                           ; BSR set to: 0
 11189                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11190                           ;incstack = 0
 11191  01C2D0  0101               	movlb	1	; () banked
 11192  01C2D2  B7CD               	btfsc	_spi_link& (0+255),3,b	;volatile
 11193  01C2D4  D7FD               	goto	_wait_lcd_done
 11194  01C2D6                     u8760:
 11195  01C2D6  013D               	movlb	61	; () banked
 11196  01C2D8  AB17               	btfss	23,5,b	;volatile
 11197  01C2DA  D7FD               	goto	u8760
 11198                           
 11199                           ; BSR set to: 61
 11200                           ;eadog.c: 448:  wdtdelay(50);
 11201  01C2DC  0E32               	movlw	50
 11202  01C2DE  6EE6               	movwf	postinc1,c
 11203  01C2E0  0E00               	movlw	0
 11204  01C2E2  6EE6               	movwf	postinc1,c
 11205  01C2E4  0E00               	movlw	0
 11206  01C2E6  6EE6               	movwf	postinc1,c
 11207  01C2E8  0E00               	movlw	0
 11208  01C2EA  6EE6               	movwf	postinc1,c
 11209  01C2EC  ECF5  F0DA         	call	_wdtdelay	;wreg free
 11210                           
 11211                           ; BSR set to: 0
 11212                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 11213  01C2F0  0012               	return		;funcret
 11214  01C2F2                     __end_of_wait_lcd_done:
 11215                           	opt callstack 0
 11216                           
 11217 ;; *************** function _wdtdelay *****************
 11218 ;; Defined at:
 11219 ;;		line 23 in file "eadog.c"
 11220 ;; Parameters:    Size  Location     Type
 11221 ;;  delay           4  [STACK] const unsigned long 
 11222 ;; Auto vars:     Size  Location     Type
 11223 ;;		None
 11224 ;; Return value:  Size  Location     Type
 11225 ;;                  1  [STACK] void 
 11226 ;; Registers used:
 11227 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 11228 ;; Tracked objects:
 11229 ;;		On entry : 2/3D
 11230 ;;		On exit  : 3F/0
 11231 ;;		Unchanged: 0/0
 11232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11237 ;;Total ram usage:        0 bytes
 11238 ;; Hardware stack levels used:    1
 11239 ;; Hardware stack levels required when called:   15
 11240 ;; This function calls:
 11241 ;;		Nothing
 11242 ;; This function is called by:
 11243 ;;		_init_display
 11244 ;;		_send_lcd_data
 11245 ;;		_send_lcd_cmd
 11246 ;;		_send_lcd_cmd_long
 11247 ;;		_eaDogM_WriteStringAtPos
 11248 ;;		_wait_lcd_done
 11249 ;; This function uses a reentrant model
 11250 ;;
 11251                           
 11252                           	psect	text43
 11253  01B5EA                     __ptext43:
 11254                           	opt callstack 0
 11255  01B5EA                     _wdtdelay:
 11256                           	opt callstack 14
 11257                           
 11258                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 11259                           
 11260                           ; BSR set to: 0
 11261                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11262                           ;incstack = 0
 11263  01B5EA  0100               	movlb	0	; () banked
 11264  01B5EC  6B78               	clrf	wdtdelay@dcount& (0+255),b
 11265  01B5EE  6B79               	clrf	(wdtdelay@dcount+1)& (0+255),b
 11266  01B5F0  6B7A               	clrf	(wdtdelay@dcount+2)& (0+255),b
 11267  01B5F2  6B7B               	clrf	(wdtdelay@dcount+3)& (0+255),b
 11268  01B5F4                     l1469:
 11269                           
 11270                           ; BSR set to: 0
 11271                           ;eadog.c: 28:   __nop();
 11272  01B5F4  F000               	nop	
 11273  01B5F6  0004               	clrwdt		;# 
 11274                           
 11275                           ;eadog.c: 30:  };
 11276  01B5F8  0E01               	movlw	1
 11277  01B5FA  0100               	movlb	0	; () banked
 11278  01B5FC  2778               	addwf	wdtdelay@dcount& (0+255),f,b
 11279  01B5FE  0E00               	movlw	0
 11280  01B600  2379               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 11281  01B602  237A               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 11282  01B604  237B               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 11283                           
 11284                           ; BSR set to: 0
 11285                           ;stkvar	_delay @ sp[(0)+-4]
 11286  01B606  0EFC               	movlw	-4
 11287  01B608  006F FF8C  F001    	movff	plusw1,btemp
 11288  01B60E  5178               	movf	wdtdelay@dcount& (0+255),w,b
 11289  01B610  5C01               	subwf	btemp^0,w,c
 11290  01B612  0EFD               	movlw	-3
 11291  01B614  006F FF8C  F001    	movff	plusw1,btemp
 11292  01B61A  5179               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 11293  01B61C  5801               	subwfb	btemp^0,w,c
 11294  01B61E  0EFE               	movlw	-2
 11295  01B620  006F FF8C  F001    	movff	plusw1,btemp
 11296  01B626  517A               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 11297  01B628  5801               	subwfb	btemp^0,w,c
 11298  01B62A  0EFF               	movlw	-1
 11299  01B62C  006F FF8C  F001    	movff	plusw1,btemp
 11300  01B632  517B               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 11301  01B634  5801               	subwfb	btemp^0,w,c
 11302  01B636  B0D8               	btfsc	status,0,c
 11303  01B638  D7DD               	goto	l1469
 11304                           
 11305                           ; BSR set to: 0
 11306                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 11307  01B63A  52E5               	movf	postdec1,f,c
 11308  01B63C  52E5               	movf	postdec1,f,c
 11309  01B63E  52E5               	movf	postdec1,f,c
 11310  01B640  52E5               	movf	postdec1,f,c
 11311  01B642  0012               	return		;funcret
 11312  01B644                     __end_of_wdtdelay:
 11313                           	opt callstack 0
 11314                           
 11315 ;; *************** function _send_lcd_data_dma *****************
 11316 ;; Defined at:
 11317 ;;		line 182 in file "eadog.c"
 11318 ;; Parameters:    Size  Location     Type
 11319 ;;  strPtr          1  [STACK] const unsigned char 
 11320 ;; Auto vars:     Size  Location     Type
 11321 ;;		None
 11322 ;; Return value:  Size  Location     Type
 11323 ;;                  1  [STACK] void 
 11324 ;; Registers used:
 11325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11326 ;; Tracked objects:
 11327 ;;		On entry : 0/0
 11328 ;;		On exit  : 3F/3B
 11329 ;;		Unchanged: 0/0
 11330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11335 ;;Total ram usage:        0 bytes
 11336 ;; Hardware stack levels used:    1
 11337 ;; Hardware stack levels required when called:   24
 11338 ;; This function calls:
 11339 ;;		_printf
 11340 ;;		_ringBufS_flush
 11341 ;;		_start_lcd
 11342 ;;		_wait_lcd_set
 11343 ;; This function is called by:
 11344 ;;		_send_lcd_cmd_dma
 11345 ;;		_eaDogM_WriteStringAtPos
 11346 ;; This function uses a reentrant model
 11347 ;;
 11348                           
 11349                           	psect	text44
 11350  01B790                     __ptext44:
 11351                           	opt callstack 0
 11352  01B790                     _send_lcd_data_dma:
 11353                           	opt callstack 4
 11354                           
 11355                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 11356                           
 11357                           ; BSR set to: 0
 11358                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11359                           ;incstack = 0
 11360  01B790  ECE4  F0E2         	call	_wait_lcd_set	;wreg free
 11361                           
 11362                           ; BSR set to: 1
 11363                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 11364  01B794  0E00               	movlw	0
 11365  01B796  6EE6               	movwf	postinc1,c
 11366  01B798  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
 11367  01B79E  0060  F753  FFE6   	movff	_spi_link+7,postinc1
 11368  01B7A4  ECEA  F0D6         	call	_ringBufS_flush	;wreg free
 11369  01B7A8  94BC               	bcf	188,2,c	;volatile
 11370                           
 11371                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 11372  01B7AA  013B               	movlb	59	; () banked
 11373  01B7AC  9FFC               	bcf	252,7,b	;volatile
 11374                           
 11375                           ; BSR set to: 59
 11376                           ;eadog.c: 189:  DMA1SSZ = 1;
 11377  01B7AE  0E00               	movlw	0
 11378  01B7B0  6FF8               	movwf	248,b	;volatile
 11379  01B7B2  0E01               	movlw	1
 11380  01B7B4  6FF7               	movwf	247,b	;volatile
 11381                           
 11382                           ; BSR set to: 59
 11383                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 11384  01B7B6  8FFC               	bsf	252,7,b	;volatile
 11385                           
 11386                           ; BSR set to: 59
 11387                           ;eadog.c: 191:  printf("%c", strPtr);
 11388                           ;stkvar	_strPtr @ sp[(0)+-1]
 11389  01B7B8  0EFF               	movlw	-1
 11390  01B7BA  50E3               	movf	plusw1,w,c
 11391  01B7BC  6EE6               	movwf	postinc1,c
 11392  01B7BE  0E00               	movlw	0
 11393  01B7C0  6EE6               	movwf	postinc1,c
 11394  01B7C2  0EF9               	movlw	low STR_44
 11395  01B7C4  6EE6               	movwf	postinc1,c
 11396  01B7C6  0EFF               	movlw	high STR_44
 11397  01B7C8  6EE6               	movwf	postinc1,c
 11398  01B7CA  0E04               	movlw	4
 11399  01B7CC  6EE6               	movwf	postinc1,c
 11400  01B7CE  EC36  F0DA         	call	_printf	;wreg free
 11401                           
 11402                           ; BSR set to: 0
 11403                           ;eadog.c: 192:  start_lcd();
 11404  01B7D2  ECE7  F0E2         	call	_start_lcd	;wreg free
 11405                           
 11406                           ; BSR set to: 59
 11407                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 11408  01B7D6  52E5               	movf	postdec1,f,c
 11409  01B7D8  0012               	return		;funcret
 11410  01B7DA                     __end_of_send_lcd_data_dma:
 11411                           	opt callstack 0
 11412                           
 11413 ;; *************** function _eaDogM_WriteString *****************
 11414 ;; Defined at:
 11415 ;;		line 151 in file "eadog.c"
 11416 ;; Parameters:    Size  Location     Type
 11417 ;;  strPtr          2  [STACK] PTR unsigned char 
 11418 ;;		 -> D.lcd(480), D(482), V(191), 
 11419 ;; Auto vars:     Size  Location     Type
 11420 ;;		None
 11421 ;; Return value:  Size  Location     Type
 11422 ;;                  1  [STACK] void 
 11423 ;; Registers used:
 11424 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11425 ;; Tracked objects:
 11426 ;;		On entry : 3F/0
 11427 ;;		On exit  : 3F/3B
 11428 ;;		Unchanged: 0/0
 11429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11434 ;;Total ram usage:        0 bytes
 11435 ;; Hardware stack levels used:    1
 11436 ;; Hardware stack levels required when called:   24
 11437 ;; This function calls:
 11438 ;;		_printf
 11439 ;;		_ringBufS_flush
 11440 ;;		_start_lcd
 11441 ;;		_strlen
 11442 ;;		_wait_lcd_set
 11443 ;; This function is called by:
 11444 ;;		_eaDogM_WriteStringAtPos
 11445 ;; This function uses a reentrant model
 11446 ;;
 11447                           
 11448                           	psect	text45
 11449  01ABF4                     __ptext45:
 11450                           	opt callstack 0
 11451  01ABF4                     _eaDogM_WriteString:
 11452                           	opt callstack 4
 11453                           
 11454                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 11455                           
 11456                           ; BSR set to: 59
 11457                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11458                           ;incstack = 0
 11459  01ABF4  ECE4  F0E2         	call	_wait_lcd_set	;wreg free
 11460                           
 11461                           ; BSR set to: 1
 11462                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 11463  01ABF8  0E00               	movlw	0
 11464  01ABFA  6EE6               	movwf	postinc1,c
 11465  01ABFC  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
 11466  01AC02  0060  F753  FFE6   	movff	_spi_link+7,postinc1
 11467  01AC08  ECEA  F0D6         	call	_ringBufS_flush	;wreg free
 11468  01AC0C  94BC               	bcf	188,2,c	;volatile
 11469                           
 11470                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 11471                           ;stkvar	_strPtr @ sp[(0)+-2]
 11472  01AC0E  0EFE               	movlw	-2
 11473  01AC10  006F FF8F FFE6     	movff	plusw1,postinc1
 11474  01AC16  006F FF8F FFE6     	movff	plusw1,postinc1
 11475  01AC1C  EC4D  F0D6         	call	_strlen	;wreg free
 11476  01AC20  5002               	movf	(btemp+1)^0,w,c
 11477  01AC22  E104               	bnz	u12460
 11478  01AC24  0E41               	movlw	65
 11479  01AC26  5C01               	subwf	btemp^0,w,c
 11480  01AC28  A0D8               	btfss	status,0,c
 11481  01AC2A  D010               	goto	l12961
 11482  01AC2C                     u12460:
 11483                           
 11484                           ;stkvar	_strPtr @ sp[(0)+-2]
 11485  01AC2C  0EFE               	movlw	-2
 11486  01AC2E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11487  01AC34  0EFF               	movlw	-1
 11488  01AC36  006F FF8C  F00C    	movff	plusw1,btemp+11
 11489  01AC3C  0E40               	movlw	64
 11490  01AC3E  240B               	addwf	(btemp+10)^0,w,c
 11491  01AC40  6ED9               	movwf	fsr2l,c
 11492  01AC42  0E00               	movlw	0
 11493  01AC44  200C               	addwfc	(btemp+11)^0,w,c
 11494  01AC46  6EDA               	movwf	fsr2h,c
 11495  01AC48  0E00               	movlw	0
 11496  01AC4A  6EDF               	movwf	indf2,c
 11497  01AC4C                     l12961:
 11498                           
 11499                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 11500  01AC4C  013B               	movlb	59	; () banked
 11501  01AC4E  9FFC               	bcf	252,7,b	;volatile
 11502                           
 11503                           ; BSR set to: 59
 11504                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 11505                           ;stkvar	_strPtr @ sp[(0)+-2]
 11506  01AC50  0EFE               	movlw	-2
 11507  01AC52  006F FF8F FFE6     	movff	plusw1,postinc1
 11508  01AC58  006F FF8F FFE6     	movff	plusw1,postinc1
 11509  01AC5E  EC4D  F0D6         	call	_strlen	;wreg free
 11510  01AC62  0060  F007  FBF7   	movff	btemp,15351	;volatile
 11511  01AC68  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 11512                           
 11513                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 11514  01AC6E  013B               	movlb	59	; () banked
 11515  01AC70  8FFC               	bsf	252,7,b	;volatile
 11516                           
 11517                           ; BSR set to: 59
 11518                           ;eadog.c: 161:  printf("%s", strPtr);
 11519                           ;stkvar	_strPtr @ sp[(0)+-2]
 11520  01AC72  0EFE               	movlw	-2
 11521  01AC74  006F FF8F FFE6     	movff	plusw1,postinc1
 11522  01AC7A  006F FF8F FFE6     	movff	plusw1,postinc1
 11523  01AC80  0EFC               	movlw	low STR_43
 11524  01AC82  6EE6               	movwf	postinc1,c
 11525  01AC84  0EFF               	movlw	high STR_43
 11526  01AC86  6EE6               	movwf	postinc1,c
 11527  01AC88  0E04               	movlw	4
 11528  01AC8A  6EE6               	movwf	postinc1,c
 11529  01AC8C  EC36  F0DA         	call	_printf	;wreg free
 11530                           
 11531                           ; BSR set to: 0
 11532                           ;eadog.c: 162:  start_lcd();
 11533  01AC90  ECE7  F0E2         	call	_start_lcd	;wreg free
 11534                           
 11535                           ; BSR set to: 59
 11536                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 11537  01AC94  52E5               	movf	postdec1,f,c
 11538  01AC96  52E5               	movf	postdec1,f,c
 11539  01AC98  0012               	return		;funcret
 11540  01AC9A                     __end_of_eaDogM_WriteString:
 11541                           	opt callstack 0
 11542                           
 11543 ;; *************** function _wait_lcd_set *****************
 11544 ;; Defined at:
 11545 ;;		line 434 in file "eadog.c"
 11546 ;; Parameters:    Size  Location     Type
 11547 ;;		None
 11548 ;; Auto vars:     Size  Location     Type
 11549 ;;		None
 11550 ;; Return value:  Size  Location     Type
 11551 ;;                  1  [STACK] void 
 11552 ;; Registers used:
 11553 ;;		None
 11554 ;; Tracked objects:
 11555 ;;		On entry : 0/0
 11556 ;;		On exit  : 3F/1
 11557 ;;		Unchanged: 0/0
 11558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11563 ;;Total ram usage:        0 bytes
 11564 ;; Hardware stack levels used:    1
 11565 ;; Hardware stack levels required when called:   15
 11566 ;; This function calls:
 11567 ;;		Nothing
 11568 ;; This function is called by:
 11569 ;;		_eaDogM_WriteString
 11570 ;;		_send_lcd_data_dma
 11571 ;; This function uses a reentrant model
 11572 ;;
 11573                           
 11574                           	psect	text46
 11575  01C5C8                     __ptext46:
 11576                           	opt callstack 0
 11577  01C5C8                     _wait_lcd_set:
 11578                           	opt callstack 12
 11579                           
 11580                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 11581                           
 11582                           ; BSR set to: 59
 11583                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11584                           ;incstack = 0
 11585  01C5C8  0101               	movlb	1	; () banked
 11586  01C5CA  87CD               	bsf	_spi_link& (0+255),3,b	;volatile
 11587                           
 11588                           ; BSR set to: 1
 11589                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 11590  01C5CC  0012               	return		;funcret
 11591  01C5CE                     __end_of_wait_lcd_set:
 11592                           	opt callstack 0
 11593                           
 11594 ;; *************** function _start_lcd *****************
 11595 ;; Defined at:
 11596 ;;		line 429 in file "eadog.c"
 11597 ;; Parameters:    Size  Location     Type
 11598 ;;		None
 11599 ;; Auto vars:     Size  Location     Type
 11600 ;;		None
 11601 ;; Return value:  Size  Location     Type
 11602 ;;                  1  [STACK] void 
 11603 ;; Registers used:
 11604 ;;		None
 11605 ;; Tracked objects:
 11606 ;;		On entry : 3F/0
 11607 ;;		On exit  : 3F/3B
 11608 ;;		Unchanged: 0/0
 11609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11614 ;;Total ram usage:        0 bytes
 11615 ;; Hardware stack levels used:    1
 11616 ;; Hardware stack levels required when called:   15
 11617 ;; This function calls:
 11618 ;;		Nothing
 11619 ;; This function is called by:
 11620 ;;		_eaDogM_WriteString
 11621 ;;		_send_lcd_data_dma
 11622 ;; This function uses a reentrant model
 11623 ;;
 11624                           
 11625                           	psect	text47
 11626  01C5CE                     __ptext47:
 11627                           	opt callstack 0
 11628  01C5CE                     _start_lcd:
 11629                           	opt callstack 12
 11630                           
 11631                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 11632                           
 11633                           ; BSR set to: 1
 11634                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11635                           ;incstack = 0
 11636  01C5CE  013B               	movlb	59	; () banked
 11637  01C5D0  8DFC               	bsf	252,6,b	;volatile
 11638                           
 11639                           ; BSR set to: 59
 11640                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 11641  01C5D2  0012               	return		;funcret
 11642  01C5D4                     __end_of_start_lcd:
 11643                           	opt callstack 0
 11644                           
 11645 ;; *************** function _ringBufS_flush *****************
 11646 ;; Defined at:
 11647 ;;		line 76 in file "ringbufs.c"
 11648 ;; Parameters:    Size  Location     Type
 11649 ;;  _this           2  [STACK] PTR struct ringBufS_t
 11650 ;;		 -> ring_buf1(67), 
 11651 ;;  clearBuffer     1  [STACK] const char 
 11652 ;; Auto vars:     Size  Location     Type
 11653 ;;		None
 11654 ;; Return value:  Size  Location     Type
 11655 ;;                  1  [STACK] void 
 11656 ;; Registers used:
 11657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 11658 ;; Tracked objects:
 11659 ;;		On entry : 3F/1
 11660 ;;		On exit  : 0/0
 11661 ;;		Unchanged: 0/0
 11662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11667 ;;Total ram usage:        0 bytes
 11668 ;; Hardware stack levels used:    1
 11669 ;; Hardware stack levels required when called:   16
 11670 ;; This function calls:
 11671 ;;		_memset
 11672 ;; This function is called by:
 11673 ;;		_eaDogM_WriteString
 11674 ;;		_send_lcd_data_dma
 11675 ;; This function uses a reentrant model
 11676 ;;
 11677                           
 11678                           	psect	text48
 11679  01ADD4                     __ptext48:
 11680                           	opt callstack 0
 11681  01ADD4                     _ringBufS_flush:
 11682                           	opt callstack 11
 11683                           
 11684                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 11685                           ;stkvar	__this @ sp[(0)+-2]
 11686                           
 11687                           ; BSR set to: 59
 11688                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11689                           ;incstack = 0
 11690  01ADD4  0EFE               	movlw	-2
 11691  01ADD6  006F FF8C  F00B    	movff	plusw1,btemp+10
 11692  01ADDC  0EFF               	movlw	-1
 11693  01ADDE  006F FF8C  F00C    	movff	plusw1,btemp+11
 11694  01ADE4  0E42               	movlw	66
 11695  01ADE6  240B               	addwf	(btemp+10)^0,w,c
 11696  01ADE8  6ED9               	movwf	fsr2l,c
 11697  01ADEA  0E00               	movlw	0
 11698  01ADEC  200C               	addwfc	(btemp+11)^0,w,c
 11699  01ADEE  6EDA               	movwf	fsr2h,c
 11700  01ADF0  0E00               	movlw	0
 11701  01ADF2  6EDF               	movwf	indf2,c
 11702                           
 11703                           ;ringbufs.c: 79:  _this->head = 0;
 11704                           ;stkvar	__this @ sp[(0)+-2]
 11705  01ADF4  0EFE               	movlw	-2
 11706  01ADF6  006F FF8C  F00B    	movff	plusw1,btemp+10
 11707  01ADFC  0EFF               	movlw	-1
 11708  01ADFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 11709  01AE04  0E40               	movlw	64
 11710  01AE06  240B               	addwf	(btemp+10)^0,w,c
 11711  01AE08  6ED9               	movwf	fsr2l,c
 11712  01AE0A  0E00               	movlw	0
 11713  01AE0C  200C               	addwfc	(btemp+11)^0,w,c
 11714  01AE0E  6EDA               	movwf	fsr2h,c
 11715  01AE10  0E00               	movlw	0
 11716  01AE12  6EDF               	movwf	indf2,c
 11717                           
 11718                           ;ringbufs.c: 80:  _this->tail = 0;
 11719                           ;stkvar	__this @ sp[(0)+-2]
 11720  01AE14  0EFE               	movlw	-2
 11721  01AE16  006F FF8C  F00B    	movff	plusw1,btemp+10
 11722  01AE1C  0EFF               	movlw	-1
 11723  01AE1E  006F FF8C  F00C    	movff	plusw1,btemp+11
 11724  01AE24  0E41               	movlw	65
 11725  01AE26  240B               	addwf	(btemp+10)^0,w,c
 11726  01AE28  6ED9               	movwf	fsr2l,c
 11727  01AE2A  0E00               	movlw	0
 11728  01AE2C  200C               	addwfc	(btemp+11)^0,w,c
 11729  01AE2E  6EDA               	movwf	fsr2h,c
 11730  01AE30  0E00               	movlw	0
 11731  01AE32  6EDF               	movwf	indf2,c
 11732                           
 11733                           ;ringbufs.c: 81:  if (clearBuffer) {
 11734                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 11735  01AE34  0EFD               	movlw	-3
 11736  01AE36  50E3               	movf	plusw1,w,c
 11737  01AE38  B4D8               	btfsc	status,2,c
 11738  01AE3A  D011               	goto	l1601
 11739                           
 11740                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 11741  01AE3C  0E40               	movlw	64
 11742  01AE3E  6EE6               	movwf	postinc1,c
 11743  01AE40  0E00               	movlw	0
 11744  01AE42  6EE6               	movwf	postinc1,c
 11745  01AE44  0E00               	movlw	0
 11746  01AE46  6EE6               	movwf	postinc1,c
 11747  01AE48  0E00               	movlw	0
 11748  01AE4A  6EE6               	movwf	postinc1,c
 11749                           
 11750                           ;stkvar	__this @ sp[(-4)+-2]
 11751  01AE4C  0EFA               	movlw	-6
 11752  01AE4E  006F FF8F FFE6     	movff	plusw1,postinc1
 11753  01AE54  006F FF8F FFE6     	movff	plusw1,postinc1
 11754  01AE5A  EC4E  F0B7         	call	_memset	;wreg free
 11755  01AE5E                     l1601:
 11756                           
 11757                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 11758  01AE5E  52E5               	movf	postdec1,f,c
 11759  01AE60  52E5               	movf	postdec1,f,c
 11760  01AE62  52E5               	movf	postdec1,f,c
 11761  01AE64  0012               	return		;funcret
 11762  01AE66                     __end_of_ringBufS_flush:
 11763                           	opt callstack 0
 11764                           
 11765 ;; *************** function _memset *****************
 11766 ;; Defined at:
 11767 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 11768 ;; Parameters:    Size  Location     Type
 11769 ;;  dest            2  [STACK] PTR void 
 11770 ;;		 -> ring_buf2(67), ring_buf1(67), 
 11771 ;;  c               2  [STACK] int 
 11772 ;;  n               2  [STACK] unsigned int 
 11773 ;; Auto vars:     Size  Location     Type
 11774 ;;  s               2  [STACK] PTR unsigned char 
 11775 ;;		 -> ring_buf2(67), ring_buf1(67), 
 11776 ;;  k               2  [STACK] unsigned int 
 11777 ;; Return value:  Size  Location     Type
 11778 ;;                  2  [STACK] PTR void 
 11779 ;; Registers used:
 11780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 11781 ;; Tracked objects:
 11782 ;;		On entry : 0/1
 11783 ;;		On exit  : 0/0
 11784 ;;		Unchanged: 0/0
 11785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11790 ;;Total ram usage:        0 bytes
 11791 ;; Hardware stack levels used:    1
 11792 ;; Hardware stack levels required when called:   15
 11793 ;; This function calls:
 11794 ;;		Nothing
 11795 ;; This function is called by:
 11796 ;;		_ringBufS_init
 11797 ;;		_ringBufS_flush
 11798 ;; This function uses a reentrant model
 11799 ;;
 11800                           
 11801                           	psect	text49
 11802  016E9C                     __ptext49:
 11803                           	opt callstack 0
 11804  016E9C                     _memset:
 11805                           	opt callstack 0
 11806                           
 11807                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11808  016E9C  52E6               	movf	postinc1,f,c
 11809  016E9E  52E6               	movf	postinc1,f,c
 11810  016EA0  52E6               	movf	postinc1,f,c
 11811  016EA2  52E6               	movf	postinc1,f,c
 11812                           
 11813                           ;stkvar	_dest @ sp[(-4)+-2]
 11814                           
 11815                           ;incstack = 0
 11816  016EA4  0EFA               	movlw	-6
 11817  016EA6  006F FF8C  F00B    	movff	plusw1,btemp+10
 11818  016EAC  0EFB               	movlw	-5
 11819  016EAE  006F FF8C  F00C    	movff	plusw1,btemp+11
 11820                           
 11821                           ;stkvar	_s @ sp[(-4)+0]
 11822  016EB4  0EFD               	movlw	-3
 11823  016EB6  0060  F033  FFE3   	movff	btemp+11,plusw1
 11824  016EBC  0EFC               	movlw	-4
 11825  016EBE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11826                           
 11827                           ;stkvar	_n @ sp[(-4)+-6]
 11828  016EC4  0EF6               	movlw	-10
 11829  016EC6  006F FF8C  F001    	movff	plusw1,btemp
 11830  016ECC  0EF7               	movlw	-9
 11831  016ECE  50E3               	movf	plusw1,w,c
 11832  016ED0  1001               	iorwf	btemp^0,w,c
 11833  016ED2  B4D8               	btfsc	status,2,c
 11834  016ED4  D154               	goto	u11010
 11835                           
 11836                           ;stkvar	_c @ sp[(-4)+-4]
 11837                           ;stkvar	_s @ sp[(-4)+0]
 11838  016ED6  0EFC               	movlw	-4
 11839  016ED8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11840  016EDE  0EFD               	movlw	-3
 11841  016EE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11842  016EE6  0EF8               	movlw	-8
 11843  016EE8  006F FF8F FFDF     	movff	plusw1,indf2
 11844                           
 11845                           ;stkvar	_c @ sp[(-4)+-4]
 11846                           ;stkvar	_n @ sp[(-4)+-6]
 11847                           ;stkvar	_s @ sp[(-4)+0]
 11848  016EEE  0EFC               	movlw	-4
 11849  016EF0  006F FF8C  F00B    	movff	plusw1,btemp+10
 11850  016EF6  0EFD               	movlw	-3
 11851  016EF8  006F FF8C  F00C    	movff	plusw1,btemp+11
 11852  016EFE  0EF6               	movlw	-10
 11853  016F00  50E3               	movf	plusw1,w,c
 11854  016F02  260B               	addwf	(btemp+10)^0,f,c
 11855  016F04  0EF7               	movlw	-9
 11856  016F06  50E3               	movf	plusw1,w,c
 11857  016F08  220C               	addwfc	(btemp+11)^0,f,c
 11858  016F0A  0EFF               	movlw	255
 11859  016F0C  240B               	addwf	(btemp+10)^0,w,c
 11860  016F0E  6ED9               	movwf	fsr2l,c
 11861  016F10  0EFF               	movlw	255
 11862  016F12  200C               	addwfc	(btemp+11)^0,w,c
 11863  016F14  6EDA               	movwf	fsr2h,c
 11864  016F16  0EF8               	movlw	-8
 11865  016F18  006F FF8F FFDF     	movff	plusw1,indf2
 11866                           
 11867                           ;stkvar	_n @ sp[(-4)+-6]
 11868  016F1E  0EF7               	movlw	-9
 11869  016F20  50E3               	movf	plusw1,w,c
 11870  016F22  E108               	bnz	l12113
 11871  016F24  0EF6               	movlw	-10
 11872  016F26  006F FF8C  F001    	movff	plusw1,btemp
 11873  016F2C  0E03               	movlw	3
 11874  016F2E  5E01               	subwf	btemp^0,f,c
 11875  016F30  A0D8               	btfss	status,0,c
 11876  016F32  D125               	goto	u11010
 11877  016F34                     l12113:
 11878                           
 11879                           ;stkvar	_c @ sp[(-4)+-4]
 11880                           ;stkvar	_s @ sp[(-4)+0]
 11881  016F34  0EFC               	movlw	-4
 11882  016F36  006F FF8C  F00B    	movff	plusw1,btemp+10
 11883  016F3C  0EFD               	movlw	-3
 11884  016F3E  006F FF8C  F00C    	movff	plusw1,btemp+11
 11885  016F44  0E01               	movlw	1
 11886  016F46  240B               	addwf	(btemp+10)^0,w,c
 11887  016F48  6ED9               	movwf	fsr2l,c
 11888  016F4A  0E00               	movlw	0
 11889  016F4C  200C               	addwfc	(btemp+11)^0,w,c
 11890  016F4E  6EDA               	movwf	fsr2h,c
 11891  016F50  0EF8               	movlw	-8
 11892  016F52  006F FF8F FFDF     	movff	plusw1,indf2
 11893                           
 11894                           ;stkvar	_c @ sp[(-4)+-4]
 11895                           ;stkvar	_s @ sp[(-4)+0]
 11896  016F58  0EFC               	movlw	-4
 11897  016F5A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11898  016F60  0EFD               	movlw	-3
 11899  016F62  006F FF8C  F00C    	movff	plusw1,btemp+11
 11900  016F68  0E02               	movlw	2
 11901  016F6A  240B               	addwf	(btemp+10)^0,w,c
 11902  016F6C  6ED9               	movwf	fsr2l,c
 11903  016F6E  0E00               	movlw	0
 11904  016F70  200C               	addwfc	(btemp+11)^0,w,c
 11905  016F72  6EDA               	movwf	fsr2h,c
 11906  016F74  0EF8               	movlw	-8
 11907  016F76  006F FF8F FFDF     	movff	plusw1,indf2
 11908                           
 11909                           ;stkvar	_c @ sp[(-4)+-4]
 11910                           ;stkvar	_n @ sp[(-4)+-6]
 11911                           ;stkvar	_s @ sp[(-4)+0]
 11912  016F7C  0EFC               	movlw	-4
 11913  016F7E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11914  016F84  0EFD               	movlw	-3
 11915  016F86  006F FF8C  F00C    	movff	plusw1,btemp+11
 11916  016F8C  0EF6               	movlw	-10
 11917  016F8E  50E3               	movf	plusw1,w,c
 11918  016F90  260B               	addwf	(btemp+10)^0,f,c
 11919  016F92  0EF7               	movlw	-9
 11920  016F94  50E3               	movf	plusw1,w,c
 11921  016F96  220C               	addwfc	(btemp+11)^0,f,c
 11922  016F98  0EFE               	movlw	254
 11923  016F9A  240B               	addwf	(btemp+10)^0,w,c
 11924  016F9C  6ED9               	movwf	fsr2l,c
 11925  016F9E  0EFF               	movlw	255
 11926  016FA0  200C               	addwfc	(btemp+11)^0,w,c
 11927  016FA2  6EDA               	movwf	fsr2h,c
 11928  016FA4  0EF8               	movlw	-8
 11929  016FA6  006F FF8F FFDF     	movff	plusw1,indf2
 11930                           
 11931                           ;stkvar	_c @ sp[(-4)+-4]
 11932                           ;stkvar	_n @ sp[(-4)+-6]
 11933                           ;stkvar	_s @ sp[(-4)+0]
 11934  016FAC  0EFC               	movlw	-4
 11935  016FAE  006F FF8C  F00B    	movff	plusw1,btemp+10
 11936  016FB4  0EFD               	movlw	-3
 11937  016FB6  006F FF8C  F00C    	movff	plusw1,btemp+11
 11938  016FBC  0EF6               	movlw	-10
 11939  016FBE  50E3               	movf	plusw1,w,c
 11940  016FC0  260B               	addwf	(btemp+10)^0,f,c
 11941  016FC2  0EF7               	movlw	-9
 11942  016FC4  50E3               	movf	plusw1,w,c
 11943  016FC6  220C               	addwfc	(btemp+11)^0,f,c
 11944  016FC8  0EFD               	movlw	253
 11945  016FCA  240B               	addwf	(btemp+10)^0,w,c
 11946  016FCC  6ED9               	movwf	fsr2l,c
 11947  016FCE  0EFF               	movlw	255
 11948  016FD0  200C               	addwfc	(btemp+11)^0,w,c
 11949  016FD2  6EDA               	movwf	fsr2h,c
 11950  016FD4  0EF8               	movlw	-8
 11951  016FD6  006F FF8F FFDF     	movff	plusw1,indf2
 11952                           
 11953                           ;stkvar	_n @ sp[(-4)+-6]
 11954  016FDC  0EF7               	movlw	-9
 11955  016FDE  50E3               	movf	plusw1,w,c
 11956  016FE0  E108               	bnz	l12119
 11957  016FE2  0EF6               	movlw	-10
 11958  016FE4  006F FF8C  F001    	movff	plusw1,btemp
 11959  016FEA  0E07               	movlw	7
 11960  016FEC  5E01               	subwf	btemp^0,f,c
 11961  016FEE  A0D8               	btfss	status,0,c
 11962  016FF0  D0C6               	goto	u11010
 11963  016FF2                     l12119:
 11964                           
 11965                           ;stkvar	_c @ sp[(-4)+-4]
 11966                           ;stkvar	_s @ sp[(-4)+0]
 11967  016FF2  0EFC               	movlw	-4
 11968  016FF4  006F FF8C  F00B    	movff	plusw1,btemp+10
 11969  016FFA  0EFD               	movlw	-3
 11970  016FFC  006F FF8C  F00C    	movff	plusw1,btemp+11
 11971  017002  0E03               	movlw	3
 11972  017004  240B               	addwf	(btemp+10)^0,w,c
 11973  017006  6ED9               	movwf	fsr2l,c
 11974  017008  0E00               	movlw	0
 11975  01700A  200C               	addwfc	(btemp+11)^0,w,c
 11976  01700C  6EDA               	movwf	fsr2h,c
 11977  01700E  0EF8               	movlw	-8
 11978  017010  006F FF8F FFDF     	movff	plusw1,indf2
 11979                           
 11980                           ;stkvar	_c @ sp[(-4)+-4]
 11981                           ;stkvar	_n @ sp[(-4)+-6]
 11982                           ;stkvar	_s @ sp[(-4)+0]
 11983  017016  0EFC               	movlw	-4
 11984  017018  006F FF8C  F00B    	movff	plusw1,btemp+10
 11985  01701E  0EFD               	movlw	-3
 11986  017020  006F FF8C  F00C    	movff	plusw1,btemp+11
 11987  017026  0EF6               	movlw	-10
 11988  017028  50E3               	movf	plusw1,w,c
 11989  01702A  260B               	addwf	(btemp+10)^0,f,c
 11990  01702C  0EF7               	movlw	-9
 11991  01702E  50E3               	movf	plusw1,w,c
 11992  017030  220C               	addwfc	(btemp+11)^0,f,c
 11993  017032  0EFC               	movlw	252
 11994  017034  240B               	addwf	(btemp+10)^0,w,c
 11995  017036  6ED9               	movwf	fsr2l,c
 11996  017038  0EFF               	movlw	255
 11997  01703A  200C               	addwfc	(btemp+11)^0,w,c
 11998  01703C  6EDA               	movwf	fsr2h,c
 11999  01703E  0EF8               	movlw	-8
 12000  017040  006F FF8F FFDF     	movff	plusw1,indf2
 12001                           
 12002                           ;stkvar	_n @ sp[(-4)+-6]
 12003  017046  0EF7               	movlw	-9
 12004  017048  50E3               	movf	plusw1,w,c
 12005  01704A  E108               	bnz	l12125
 12006  01704C  0EF6               	movlw	-10
 12007  01704E  006F FF8C  F001    	movff	plusw1,btemp
 12008  017054  0E09               	movlw	9
 12009  017056  5E01               	subwf	btemp^0,f,c
 12010  017058  A0D8               	btfss	status,0,c
 12011  01705A  D091               	goto	u11010
 12012  01705C                     l12125:
 12013                           
 12014                           ;stkvar	_s @ sp[(-4)+0]
 12015  01705C  0EFC               	movlw	-4
 12016  01705E  006F FF8C  F00B    	movff	plusw1,btemp+10
 12017  017064  1E0B               	comf	(btemp+10)^0,f,c
 12018  017066  0EFD               	movlw	-3
 12019  017068  006F FF8C  F00C    	movff	plusw1,btemp+11
 12020  01706E  1E0C               	comf	(btemp+11)^0,f,c
 12021  017070  2A0B               	incf	(btemp+10)^0,f,c
 12022  017072  B4D8               	btfsc	status,2,c
 12023  017074  2A0C               	incf	(btemp+11)^0,f,c
 12024  017076  0E03               	movlw	3
 12025  017078  160B               	andwf	(btemp+10)^0,f,c
 12026  01707A  0E00               	movlw	0
 12027  01707C  160C               	andwf	(btemp+11)^0,f,c
 12028                           
 12029                           ;stkvar	_k @ sp[(-4)+2]
 12030  01707E  0EFE               	movlw	-2
 12031  017080  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12032  017086  0EFF               	movlw	-1
 12033  017088  0060  F033  FFE3   	movff	btemp+11,plusw1
 12034                           
 12035                           ;stkvar	_k @ sp[(-4)+2]
 12036                           ;stkvar	_s @ sp[(-4)+0]
 12037  01708E  0EFC               	movlw	-4
 12038  017090  50E3               	movf	plusw1,w,c
 12039  017092  6E01               	movwf	btemp^0,c
 12040  017094  0EFE               	movlw	-2
 12041  017096  50E3               	movf	plusw1,w,c
 12042  017098  2601               	addwf	btemp^0,f,c
 12043  01709A  0EFC               	movlw	-4
 12044  01709C  0060  F007  FFE3   	movff	btemp,plusw1
 12045  0170A2  0EFD               	movlw	-3
 12046  0170A4  50E3               	movf	plusw1,w,c
 12047  0170A6  6E01               	movwf	btemp^0,c
 12048  0170A8  0EFF               	movlw	-1
 12049  0170AA  50E3               	movf	plusw1,w,c
 12050  0170AC  2201               	addwfc	btemp^0,f,c
 12051  0170AE  0EFD               	movlw	-3
 12052  0170B0  0060  F007  FFE3   	movff	btemp,plusw1
 12053                           
 12054                           ;stkvar	_k @ sp[(-4)+2]
 12055                           ;stkvar	_n @ sp[(-4)+-6]
 12056  0170B6  0EF6               	movlw	-10
 12057  0170B8  50E3               	movf	plusw1,w,c
 12058  0170BA  6E01               	movwf	btemp^0,c
 12059  0170BC  0EFE               	movlw	-2
 12060  0170BE  50E3               	movf	plusw1,w,c
 12061  0170C0  5E01               	subwf	btemp^0,f,c
 12062  0170C2  0EF6               	movlw	-10
 12063  0170C4  0060  F007  FFE3   	movff	btemp,plusw1
 12064  0170CA  0EF7               	movlw	-9
 12065  0170CC  50E3               	movf	plusw1,w,c
 12066  0170CE  6E01               	movwf	btemp^0,c
 12067  0170D0  0EFF               	movlw	-1
 12068  0170D2  50E3               	movf	plusw1,w,c
 12069  0170D4  5A01               	subwfb	btemp^0,f,c
 12070  0170D6  0EF7               	movlw	-9
 12071  0170D8  0060  F007  FFE3   	movff	btemp,plusw1
 12072  0170DE  0EFC               	movlw	252
 12073  0170E0  6E0B               	movwf	(btemp+10)^0,c
 12074  0170E2  0EFF               	movlw	255
 12075  0170E4  6E0C               	movwf	(btemp+11)^0,c
 12076                           
 12077                           ;stkvar	_n @ sp[(-4)+-6]
 12078  0170E6  0EF6               	movlw	-10
 12079  0170E8  006F FF8C  F001    	movff	plusw1,btemp
 12080  0170EE  500B               	movf	(btemp+10)^0,w,c
 12081  0170F0  1601               	andwf	btemp^0,f,c
 12082  0170F2  0EF6               	movlw	-10
 12083  0170F4  0060  F007  FFE3   	movff	btemp,plusw1
 12084  0170FA  0EF7               	movlw	-9
 12085  0170FC  006F FF8C  F001    	movff	plusw1,btemp
 12086  017102  500C               	movf	(btemp+11)^0,w,c
 12087  017104  1601               	andwf	btemp^0,f,c
 12088  017106  0EF7               	movlw	-9
 12089  017108  D02E               	goto	L10
 12090  01710A                     l12133:
 12091                           
 12092                           ;stkvar	_c @ sp[(-4)+-4]
 12093                           ;stkvar	_s @ sp[(-4)+0]
 12094  01710A  0EFC               	movlw	-4
 12095  01710C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12096  017112  0EFD               	movlw	-3
 12097  017114  006F FF8F FFDA     	movff	plusw1,fsr2h
 12098  01711A  0EF8               	movlw	-8
 12099  01711C  006F FF8F FFDF     	movff	plusw1,indf2
 12100                           
 12101                           ;stkvar	_n @ sp[(-4)+-6]
 12102  017122  0EF6               	movlw	-10
 12103  017124  006F FF8C  F001    	movff	plusw1,btemp
 12104  01712A  0E01               	movlw	1
 12105  01712C  5E01               	subwf	btemp^0,f,c
 12106  01712E  0EF6               	movlw	-10
 12107  017130  0060  F007  FFE3   	movff	btemp,plusw1
 12108  017136  0EF7               	movlw	-9
 12109  017138  006F FF8C  F001    	movff	plusw1,btemp
 12110  01713E  0E00               	movlw	0
 12111  017140  5A01               	subwfb	btemp^0,f,c
 12112  017142  0EF7               	movlw	-9
 12113  017144  0060  F007  FFE3   	movff	btemp,plusw1
 12114                           
 12115                           ;stkvar	_s @ sp[(-4)+0]
 12116  01714A  0EFC               	movlw	-4
 12117  01714C  50E3               	movf	plusw1,w,c
 12118  01714E  0F01               	addlw	1
 12119  017150  6E01               	movwf	btemp^0,c
 12120  017152  0EFC               	movlw	-4
 12121  017154  0060  F007  FFE3   	movff	btemp,plusw1
 12122  01715A  6A01               	clrf	btemp^0,c
 12123  01715C  0EFD               	movlw	-3
 12124  01715E  50E3               	movf	plusw1,w,c
 12125  017160  2001               	addwfc	btemp^0,w,c
 12126  017162  6E01               	movwf	btemp^0,c
 12127  017164  0EFD               	movlw	-3
 12128  017166                     L10:
 12129  017166  0060  F007  FFE3   	movff	btemp,plusw1
 12130                           
 12131                           ;stkvar	_n @ sp[(-4)+-6]
 12132  01716C  0EF6               	movlw	-10
 12133  01716E  006F FF8C  F001    	movff	plusw1,btemp
 12134  017174  0EF7               	movlw	-9
 12135  017176  50E3               	movf	plusw1,w,c
 12136  017178  1001               	iorwf	btemp^0,w,c
 12137  01717A  A4D8               	btfss	status,2,c
 12138  01717C  D7C6               	goto	l12133
 12139  01717E                     u11010:
 12140                           
 12141                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 12142  01717E  0EF6               	movlw	246
 12143  017180  26E1               	addwf	fsr1l,f,c
 12144  017182  0EFF               	movlw	255
 12145  017184  22E2               	addwfc	fsr1h,f,c
 12146  017186  0012               	return		;funcret
 12147  017188                     __end_of_memset:
 12148                           	opt callstack 0
 12149                           
 12150 ;; *************** function _printf *****************
 12151 ;; Defined at:
 12152 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 12153 ;; Parameters:    Size  Location     Type
 12154 ;;  fmt             2  [STACK] PTR const unsigned char 
 12155 ;;		 -> STR_44(3), STR_43(3), 
 12156 ;; Auto vars:     Size  Location     Type
 12157 ;;  ap              2  [STACK] PTR void [1]
 12158 ;;		 -> ?_printf(2), ?_sprintf(2), 
 12159 ;;  ret             2    0        int 
 12160 ;; Return value:  Size  Location     Type
 12161 ;;                  2  [STACK] int 
 12162 ;; Registers used:
 12163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12164 ;; Tracked objects:
 12165 ;;		On entry : 3F/3B
 12166 ;;		On exit  : 3F/0
 12167 ;;		Unchanged: 0/0
 12168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12173 ;;Total ram usage:        0 bytes
 12174 ;; Hardware stack levels used:    1
 12175 ;; Hardware stack levels required when called:   23
 12176 ;; This function calls:
 12177 ;;		_vfprintf
 12178 ;; This function is called by:
 12179 ;;		_eaDogM_WriteString
 12180 ;;		_send_lcd_data_dma
 12181 ;; This function uses a reentrant model
 12182 ;;
 12183                           
 12184                           	psect	text50
 12185  01B46C                     __ptext50:
 12186                           	opt callstack 0
 12187  01B46C                     _printf:
 12188                           	opt callstack 0
 12189                           
 12190                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12191  01B46C  52E6               	movf	postinc1,f,c
 12192  01B46E  52E6               	movf	postinc1,f,c
 12193                           
 12194                           ;stkvar	?_printf @ sp[(-2)+-3]
 12195                           
 12196                           ;incstack = 0
 12197  01B470  0EFB               	movlw	251
 12198  01B472  24E1               	addwf	fsr1l,w,c
 12199  01B474  6E0B               	movwf	(btemp+10)^0,c
 12200  01B476  0EFF               	movlw	255
 12201  01B478  20E2               	addwfc	fsr1h,w,c
 12202  01B47A  6E0C               	movwf	(btemp+11)^0,c
 12203                           
 12204                           ;stkvar	_ap @ sp[(-2)+0]
 12205  01B47C  0EFF               	movlw	-1
 12206  01B47E  0060  F033  FFE3   	movff	btemp+11,plusw1
 12207  01B484  0EFE               	movlw	-2
 12208  01B486  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12209                           
 12210                           ;stkvar	_ap @ sp[(-2)+0]
 12211  01B48C  0EFE               	movlw	254
 12212  01B48E  24E1               	addwf	fsr1l,w,c
 12213  01B490  6E01               	movwf	btemp^0,c
 12214  01B492  0EFF               	movlw	255
 12215  01B494  20E2               	addwfc	fsr1h,w,c
 12216  01B496  6E02               	movwf	(btemp+1)^0,c
 12217  01B498  0060  F007  FFE6   	movff	btemp,postinc1
 12218  01B49E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12219                           
 12220                           ;stkvar	_fmt @ sp[(-4)+-3]
 12221  01B4A4  0EF9               	movlw	-7
 12222  01B4A6  006F FF8F FFE6     	movff	plusw1,postinc1
 12223  01B4AC  006F FF8F FFE6     	movff	plusw1,postinc1
 12224  01B4B2  0E00               	movlw	0
 12225  01B4B4  6EE6               	movwf	postinc1,c
 12226  01B4B6  0E00               	movlw	0
 12227  01B4B8  6EE6               	movwf	postinc1,c
 12228  01B4BA  ECFB  F0D4         	call	_vfprintf	;wreg free
 12229                           
 12230                           ; BSR set to: 0
 12231                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 12232  01B4BE  52E5               	movf	postdec1,f,c
 12233  01B4C0  52E5               	movf	postdec1,f,c
 12234  01B4C2  52E5               	movf	postdec1,f,c
 12235  01B4C4  50E7               	movf	indf1,w,c
 12236  01B4C6  5EE1               	subwf	fsr1l,f,c
 12237  01B4C8  0E00               	movlw	0
 12238  01B4CA  5AE2               	subwfb	fsr1h,f,c
 12239  01B4CC  0012               	return		;funcret
 12240  01B4CE                     __end_of_printf:
 12241                           	opt callstack 0
 12242                           
 12243 ;; *************** function _vfprintf *****************
 12244 ;; Defined at:
 12245 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12246 ;; Parameters:    Size  Location     Type
 12247 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12248 ;;		 -> f(6), NULL(0), 
 12249 ;;  fmt             2  [STACK] PTR const unsigned char 
 12250 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 12251 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 12252 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 12253 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 12254 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 12255 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 12256 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 12257 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 12258 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 12259 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 12260 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 12261 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 12262 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 12263 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 12264 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 12265 ;;  ap              2  [STACK] PTR PTR void 
 12266 ;;		 -> ap(2), ap(2), 
 12267 ;; Auto vars:     Size  Location     Type
 12268 ;;  cfmt            2  [STACK] PTR unsigned char 
 12269 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 12270 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 12271 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 12272 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 12273 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 12274 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 12275 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 12276 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 12277 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 12278 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 12279 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 12280 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 12281 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 12282 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 12283 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 12284 ;; Return value:  Size  Location     Type
 12285 ;;                  2  [STACK] int 
 12286 ;; Registers used:
 12287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12288 ;; Tracked objects:
 12289 ;;		On entry : 0/1
 12290 ;;		On exit  : 3F/0
 12291 ;;		Unchanged: 0/0
 12292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12297 ;;Total ram usage:        0 bytes
 12298 ;; Hardware stack levels used:    1
 12299 ;; Hardware stack levels required when called:   22
 12300 ;; This function calls:
 12301 ;;		_vfpfcnvrt
 12302 ;; This function is called by:
 12303 ;;		_sprintf
 12304 ;;		_printf
 12305 ;; This function uses a reentrant model
 12306 ;;
 12307                           
 12308                           	psect	text51
 12309  01A9F6                     __ptext51:
 12310                           	opt callstack 0
 12311  01A9F6                     _vfprintf:
 12312                           	opt callstack 0
 12313                           
 12314                           ; BSR set to: 0
 12315                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12316  01A9F6  52E6               	movf	postinc1,f,c
 12317  01A9F8  52E6               	movf	postinc1,f,c
 12318                           
 12319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 12320                           ;stkvar	_fmt @ sp[(-2)+-4]
 12321                           
 12322                           ;incstack = 0
 12323 ;; hardware stack exceeded
 12324  01A9FA  0EFA               	movlw	-6
 12325  01A9FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 12326  01AA02  0EFB               	movlw	-5
 12327  01AA04  006F FF8C  F00C    	movff	plusw1,btemp+11
 12328                           
 12329                           ;stkvar	_cfmt @ sp[(-2)+0]
 12330  01AA0A  0EFF               	movlw	-1
 12331  01AA0C  0060  F033  FFE3   	movff	btemp+11,plusw1
 12332  01AA12  0EFE               	movlw	-2
 12333  01AA14  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12334                           
 12335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 12336  01AA1A  0100               	movlb	0	; () banked
 12337  01AA1C  6B9A               	clrf	_nout& (0+255),b
 12338  01AA1E  6B9B               	clrf	(_nout+1)& (0+255),b
 12339                           
 12340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 12341  01AA20  D021               	goto	l12983
 12342  01AA22                     l12981:
 12343                           
 12344                           ; BSR set to: 0
 12345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 12346                           ;stkvar	_ap @ sp[(-2)+-6]
 12347  01AA22  0EF8               	movlw	-8
 12348  01AA24  006F FF8F FFE6     	movff	plusw1,postinc1
 12349  01AA2A  006F FF8F FFE6     	movff	plusw1,postinc1
 12350                           
 12351                           ;stkvar	_cfmt @ sp[(-4)+0]
 12352  01AA30  0EFC               	movlw	252
 12353  01AA32  24E1               	addwf	fsr1l,w,c
 12354  01AA34  6E01               	movwf	btemp^0,c
 12355  01AA36  0EFF               	movlw	255
 12356  01AA38  20E2               	addwfc	fsr1h,w,c
 12357  01AA3A  6E02               	movwf	(btemp+1)^0,c
 12358  01AA3C  0060  F007  FFE6   	movff	btemp,postinc1
 12359  01AA42  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12360                           
 12361                           ;stkvar	_fp @ sp[(-6)+-2]
 12362  01AA48  0EF8               	movlw	-8
 12363  01AA4A  006F FF8F FFE6     	movff	plusw1,postinc1
 12364  01AA50  006F FF8F FFE6     	movff	plusw1,postinc1
 12365  01AA56  ECF4  F091         	call	_vfpfcnvrt	;wreg free
 12366  01AA5A  5001               	movf	btemp^0,w,c
 12367  01AA5C  0100               	movlb	0	; () banked
 12368  01AA5E  279A               	addwf	_nout& (0+255),f,b
 12369  01AA60  5002               	movf	(btemp+1)^0,w,c
 12370  01AA62  239B               	addwfc	(_nout+1)& (0+255),f,b
 12371  01AA64                     l12983:
 12372                           
 12373                           ; BSR set to: 0
 12374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 12375                           ;stkvar	_cfmt @ sp[(-2)+0]
 12376  01AA64  50E1               	movf	fsr1l,w,c
 12377  01AA66  0FFE               	addlw	-2
 12378  01AA68  6ED9               	movwf	fsr2l,c
 12379  01AA6A  50E2               	movf	fsr1h,w,c
 12380  01AA6C  6EDA               	movwf	fsr2h,c
 12381  01AA6E  0EFF               	movlw	255
 12382  01AA70  22DA               	addwfc	fsr2h,f,c
 12383  01AA72  006F FF7B FFF6     	movff	postinc2,tblptrl
 12384  01AA78  006F FF77 FFF7     	movff	postdec2,tblptrh
 12385  01AA7E                     	if	0	;tblptru may be non-zero
 12386  01AA7E                     	endif
 12387  01AA7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12388  01AA7E  0E00               	movlw	low (__mediumconst shr (0+16))
 12389  01AA80  6EF8               	movwf	tblptru,c
 12390  01AA82                     	endif
 12391  01AA82  0008               	tblrd		*
 12392  01AA84  50F5               	movf	tablat,w,c
 12393  01AA86  0900               	iorlw	0
 12394  01AA88  A4D8               	btfss	status,2,c
 12395  01AA8A  D7CB               	goto	l12981
 12396                           
 12397                           ; BSR set to: 0
 12398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 12399  01AA8C  0060  F268  F001   	movff	_nout,btemp
 12400  01AA92  0060  F26C  F002   	movff	_nout+1,btemp+1
 12401                           
 12402                           ; BSR set to: 0
 12403                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 12404  01AA98  0EF8               	movlw	248
 12405  01AA9A  26E1               	addwf	fsr1l,f,c
 12406  01AA9C  0EFF               	movlw	255
 12407  01AA9E  22E2               	addwfc	fsr1h,f,c
 12408  01AAA0  0012               	return		;funcret
 12409  01AAA2                     __end_of_vfprintf:
 12410                           	opt callstack 0
 12411                           
 12412 ;; *************** function _vfpfcnvrt *****************
 12413 ;; Defined at:
 12414 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12415 ;; Parameters:    Size  Location     Type
 12416 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12417 ;;		 -> f(6), NULL(0), 
 12418 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 12419 ;;		 -> cfmt(2), 
 12420 ;;  ap              2  [STACK] PTR PTR void 
 12421 ;;		 -> ap(2), ap(2), 
 12422 ;; Auto vars:     Size  Location     Type
 12423 ;;  llu             8  [STACK] unsigned long long 
 12424 ;;  ll              8  [STACK] long long 
 12425 ;;  f               4  [STACK] long long 
 12426 ;;  ct              3  [STACK] unsigned char [3]
 12427 ;;  vp              3    0        PTR void 
 12428 ;;  cp              2  [STACK] PTR unsigned char 
 12429 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 12430 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 12431 ;;		 -> V(191), 
 12432 ;;  i               2    0        int 
 12433 ;;  done            2    0        int 
 12434 ;;  c               1  [STACK] unsigned char 
 12435 ;; Return value:  Size  Location     Type
 12436 ;;                  2  [STACK] int 
 12437 ;; Registers used:
 12438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12439 ;; Tracked objects:
 12440 ;;		On entry : 0/0
 12441 ;;		On exit  : 0/0
 12442 ;;		Unchanged: 0/0
 12443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12448 ;;Total ram usage:        0 bytes
 12449 ;; Hardware stack levels used:    1
 12450 ;; Hardware stack levels required when called:   21
 12451 ;; This function calls:
 12452 ;;		_atoi
 12453 ;;		_ctoa
 12454 ;;		_dtoa
 12455 ;;		_efgtoa
 12456 ;;		_fputc
 12457 ;;		_isdigit
 12458 ;;		_isupper
 12459 ;;		_stoa
 12460 ;;		_strncmp
 12461 ;;		_tolower
 12462 ;;		_utoa
 12463 ;;		_xtoa
 12464 ;; This function is called by:
 12465 ;;		_vfprintf
 12466 ;; This function uses a reentrant model
 12467 ;;
 12468                           
 12469                           	psect	text52
 12470  0123E8                     __ptext52:
 12471                           	opt callstack 0
 12472  0123E8                     _vfpfcnvrt:
 12473                           	opt callstack 0
 12474                           
 12475                           ; BSR set to: 0
 12476                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12477  0123E8  0E20               	movlw	32
 12478  0123EA  26E1               	addwf	fsr1l,f,c
 12479  0123EC  0E00               	movlw	0
 12480  0123EE  22E2               	addwfc	fsr1h,f,c
 12481                           
 12482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 12483                           ;stkvar	_fmt @ sp[(-32)+-4]
 12484                           
 12485                           ;incstack = 0
 12486 ;; hardware stack exceeded
 12487  0123F0  0EDC               	movlw	-36
 12488  0123F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12489  0123F8  0EDD               	movlw	-35
 12490  0123FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12491  012400  006F FF7B FFF6     	movff	postinc2,tblptrl
 12492  012406  006F FF77 FFF7     	movff	postdec2,tblptrh
 12493  01240C                     	if	0	;tblptru may be non-zero
 12494  01240C                     	endif
 12495  01240C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12496  01240C  0E00               	movlw	low (__mediumconst shr (0+16))
 12497  01240E  6EF8               	movwf	tblptru,c
 12498  012410                     	endif
 12499  012410  0008               	tblrd		*
 12500  012412  50F5               	movf	tablat,w,c
 12501  012414  0A25               	xorlw	37
 12502  012416  A4D8               	btfss	status,2,c
 12503  012418  EF9B  F099         	goto	l12943
 12504                           
 12505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 12506                           ;stkvar	_fmt @ sp[(-32)+-4]
 12507  01241C  0EDC               	movlw	-36
 12508  01241E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12509  012424  0EDD               	movlw	-35
 12510  012426  006F FF8F FFDA     	movff	plusw1,fsr2h
 12511  01242C  2ADE               	incf	postinc2,f,c
 12512  01242E  0E00               	movlw	0
 12513  012430  22DD               	addwfc	postdec2,f,c
 12514                           
 12515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 12516  012432  6A3A               	clrf	_width^0,c
 12517  012434  6A3B               	clrf	(_width+1)^0,c
 12518  012436  6A3E               	clrf	_flags^0,c
 12519  012438  6A3F               	clrf	(_flags+1)^0,c
 12520                           
 12521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 12522  01243A  683C               	setf	_prec^0,c
 12523  01243C  683D               	setf	(_prec+1)^0,c
 12524                           
 12525                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 12526                           ;stkvar	_fmt @ sp[(-32)+-4]
 12527  01243E  0EDC               	movlw	-36
 12528  012440  006F FF8F FFD9     	movff	plusw1,fsr2l
 12529  012446  0EDD               	movlw	-35
 12530  012448  006F FF8F FFDA     	movff	plusw1,fsr2h
 12531  01244E  006F FF7B FFF6     	movff	postinc2,tblptrl
 12532  012454  006F FF77 FFF7     	movff	postdec2,tblptrh
 12533  01245A                     	if	0	;tblptru may be non-zero
 12534  01245A                     	endif
 12535  01245A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12536  01245A  0E00               	movlw	low (__mediumconst shr (0+16))
 12537  01245C  6EF8               	movwf	tblptru,c
 12538  01245E                     	endif
 12539  01245E  0008               	tblrd		*
 12540  012460  50F5               	movf	tablat,w,c
 12541  012462  0A2A               	xorlw	42
 12542  012464  A4D8               	btfss	status,2,c
 12543  012466  D031               	goto	l12761
 12544                           
 12545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 12546                           ;stkvar	_fmt @ sp[(-32)+-4]
 12547  012468  0EDC               	movlw	-36
 12548  01246A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12549  012470  0EDD               	movlw	-35
 12550  012472  006F FF8F FFDA     	movff	plusw1,fsr2h
 12551  012478  2ADE               	incf	postinc2,f,c
 12552  01247A  0E00               	movlw	0
 12553  01247C  22DD               	addwfc	postdec2,f,c
 12554                           
 12555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 12556                           ;stkvar	_ap @ sp[(-32)+-6]
 12557  01247E  0EDA               	movlw	-38
 12558  012480  006F FF8F FFD9     	movff	plusw1,fsr2l
 12559  012486  0EDB               	movlw	-37
 12560  012488  006F FF8F FFDA     	movff	plusw1,fsr2h
 12561  01248E  0E02               	movlw	2
 12562  012490  5EDE               	subwf	postinc2,f,c
 12563  012492  0E00               	movlw	0
 12564  012494  5ADD               	subwfb	postdec2,f,c
 12565  012496  006F FF78  F00B    	movff	postinc2,btemp+10
 12566  01249C  006F FF74  F00C    	movff	postdec2,btemp+11
 12567  0124A2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12568  0124A8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12569  0124AE  006F FF78  F03A    	movff	postinc2,_width
 12570  0124B4  006F FF74  F03B    	movff	postdec2,_width+1
 12571                           
 12572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 12573  0124BA  AE3B               	btfss	(_width+1)^0,7,c
 12574  0124BC  D066               	goto	u12200
 12575                           
 12576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 12577  0124BE  803E               	bsf	_flags^0,0,c
 12578                           
 12579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 12580  0124C0  6C3A               	negf	_width^0,c
 12581  0124C2  1E3B               	comf	(_width+1)^0,f,c
 12582  0124C4  B0D8               	btfsc	status,0,c
 12583  0124C6  2A3B               	incf	(_width+1)^0,f,c
 12584  0124C8  D060               	goto	u12200
 12585  0124CA                     l12761:
 12586                           
 12587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 12588                           ;stkvar	_fmt @ sp[(-32)+-4]
 12589  0124CA  0EDC               	movlw	-36
 12590  0124CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12591  0124D2  0EDD               	movlw	-35
 12592  0124D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 12593  0124DA  006F FF78  F00B    	movff	postinc2,btemp+10
 12594  0124E0  006F FF74  F00C    	movff	postdec2,btemp+11
 12595  0124E6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12596  0124EC  0060  F033  FFE6   	movff	btemp+11,postinc1
 12597  0124F2  ECCF  F0BC         	call	_atoi	;wreg free
 12598  0124F6  0060  F004  F03A   	movff	btemp,_width
 12599  0124FC  0060  F008  F03B   	movff	btemp+1,_width+1
 12600                           
 12601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 12602  012502  D00B               	goto	l12765
 12603  012504                     l12763:
 12604                           
 12605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 12606                           ;stkvar	_fmt @ sp[(-32)+-4]
 12607  012504  0EDC               	movlw	-36
 12608  012506  006F FF8F FFD9     	movff	plusw1,fsr2l
 12609  01250C  0EDD               	movlw	-35
 12610  01250E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12611  012514  2ADE               	incf	postinc2,f,c
 12612  012516  0E00               	movlw	0
 12613  012518  22DD               	addwfc	postdec2,f,c
 12614  01251A                     l12765:
 12615  01251A  0ED0               	movlw	208
 12616  01251C  6E0B               	movwf	(btemp+10)^0,c
 12617  01251E  0EFF               	movlw	255
 12618  012520  6E0C               	movwf	(btemp+11)^0,c
 12619                           
 12620                           ;stkvar	_fmt @ sp[(-32)+-4]
 12621  012522  0EDC               	movlw	-36
 12622  012524  006F FF8F FFD9     	movff	plusw1,fsr2l
 12623  01252A  0EDD               	movlw	-35
 12624  01252C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12625  012532  006F FF7B FFF6     	movff	postinc2,tblptrl
 12626  012538  006F FF77 FFF7     	movff	postdec2,tblptrh
 12627  01253E                     	if	0	;tblptru may be non-zero
 12628  01253E                     	endif
 12629  01253E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12630  01253E  0E00               	movlw	low (__mediumconst shr (0+16))
 12631  012540  6EF8               	movwf	tblptru,c
 12632  012542                     	endif
 12633  012542  0008               	tblrd		*
 12634  012544  50F5               	movf	tablat,w,c
 12635  012546  6E09               	movwf	(btemp+8)^0,c
 12636  012548  6A0A               	clrf	(btemp+9)^0,c
 12637  01254A  500B               	movf	(btemp+10)^0,w,c
 12638  01254C  2609               	addwf	(btemp+8)^0,f,c
 12639  01254E  500C               	movf	(btemp+11)^0,w,c
 12640  012550  220A               	addwfc	(btemp+9)^0,f,c
 12641  012552  500A               	movf	(btemp+9)^0,w,c
 12642  012554  E106               	bnz	u12180
 12643  012556  0E0A               	movlw	10
 12644  012558  5C09               	subwf	(btemp+8)^0,w,c
 12645  01255A  B0D8               	btfsc	status,0,c
 12646  01255C  D002               	goto	u12180
 12647  01255E  0E01               	movlw	1
 12648  012560  D001               	goto	u12190
 12649  012562                     u12180:
 12650  012562  0E00               	movlw	0
 12651  012564                     u12190:
 12652  012564  6E0B               	movwf	(btemp+10)^0,c
 12653  012566  6A0C               	clrf	(btemp+11)^0,c
 12654                           
 12655                           ;stkvar	_vfpfcnvrt$5759 @ sp[(-32)+4]
 12656  012568  0EE4               	movlw	-28
 12657  01256A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12658  012570  0EE5               	movlw	-27
 12659  012572  0060  F033  FFE3   	movff	btemp+11,plusw1
 12660                           
 12661                           ;stkvar	_vfpfcnvrt$5759 @ sp[(-32)+4]
 12662  012578  0EE4               	movlw	-28
 12663  01257A  006F FF8C  F001    	movff	plusw1,btemp
 12664  012580  0EE5               	movlw	-27
 12665  012582  50E3               	movf	plusw1,w,c
 12666  012584  1001               	iorwf	btemp^0,w,c
 12667  012586  A4D8               	btfss	status,2,c
 12668  012588  D7BD               	goto	l12763
 12669  01258A                     u12200:
 12670                           
 12671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 12672                           ;stkvar	_fmt @ sp[(-32)+-4]
 12673  01258A  0EDC               	movlw	-36
 12674  01258C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12675  012592  0EDD               	movlw	-35
 12676  012594  006F FF8F FFDA     	movff	plusw1,fsr2h
 12677  01259A  006F FF7B FFF6     	movff	postinc2,tblptrl
 12678  0125A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 12679  0125A6                     	if	0	;tblptru may be non-zero
 12680  0125A6                     	endif
 12681  0125A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12682  0125A6  0E00               	movlw	low (__mediumconst shr (0+16))
 12683  0125A8  6EF8               	movwf	tblptru,c
 12684  0125AA                     	endif
 12685  0125AA  0008               	tblrd		*
 12686  0125AC  50F5               	movf	tablat,w,c
 12687  0125AE  0A2E               	xorlw	46
 12688  0125B0  A4D8               	btfss	status,2,c
 12689  0125B2  D0AC               	goto	u12250
 12690                           
 12691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 12692  0125B4  6A3C               	clrf	_prec^0,c
 12693  0125B6  6A3D               	clrf	(_prec+1)^0,c
 12694                           
 12695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 12696                           ;stkvar	_fmt @ sp[(-32)+-4]
 12697  0125B8  0EDC               	movlw	-36
 12698  0125BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12699  0125C0  0EDD               	movlw	-35
 12700  0125C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12701  0125C8  2ADE               	incf	postinc2,f,c
 12702  0125CA  0E00               	movlw	0
 12703  0125CC  22DD               	addwfc	postdec2,f,c
 12704                           
 12705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 12706                           ;stkvar	_fmt @ sp[(-32)+-4]
 12707  0125CE  0EDC               	movlw	-36
 12708  0125D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12709  0125D6  0EDD               	movlw	-35
 12710  0125D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12711  0125DE  006F FF7B FFF6     	movff	postinc2,tblptrl
 12712  0125E4  006F FF77 FFF7     	movff	postdec2,tblptrh
 12713  0125EA                     	if	0	;tblptru may be non-zero
 12714  0125EA                     	endif
 12715  0125EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12716  0125EA  0E00               	movlw	low (__mediumconst shr (0+16))
 12717  0125EC  6EF8               	movwf	tblptru,c
 12718  0125EE                     	endif
 12719  0125EE  0008               	tblrd		*
 12720  0125F0  50F5               	movf	tablat,w,c
 12721  0125F2  0A2A               	xorlw	42
 12722  0125F4  A4D8               	btfss	status,2,c
 12723  0125F6  D02A               	goto	l12783
 12724                           
 12725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 12726                           ;stkvar	_fmt @ sp[(-32)+-4]
 12727  0125F8  0EDC               	movlw	-36
 12728  0125FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12729  012600  0EDD               	movlw	-35
 12730  012602  006F FF8F FFDA     	movff	plusw1,fsr2h
 12731  012608  2ADE               	incf	postinc2,f,c
 12732  01260A  0E00               	movlw	0
 12733  01260C  22DD               	addwfc	postdec2,f,c
 12734                           
 12735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 12736                           ;stkvar	_ap @ sp[(-32)+-6]
 12737  01260E  0EDA               	movlw	-38
 12738  012610  006F FF8F FFD9     	movff	plusw1,fsr2l
 12739  012616  0EDB               	movlw	-37
 12740  012618  006F FF8F FFDA     	movff	plusw1,fsr2h
 12741  01261E  0E02               	movlw	2
 12742  012620  5EDE               	subwf	postinc2,f,c
 12743  012622  0E00               	movlw	0
 12744  012624  5ADD               	subwfb	postdec2,f,c
 12745  012626  006F FF78  F00B    	movff	postinc2,btemp+10
 12746  01262C  006F FF74  F00C    	movff	postdec2,btemp+11
 12747  012632  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12748  012638  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12749  01263E  006F FF78  F03C    	movff	postinc2,_prec
 12750  012644  006F FF74  F03D    	movff	postdec2,_prec+1
 12751                           
 12752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 12753  01264A  D060               	goto	u12250
 12754  01264C                     l12783:
 12755                           
 12756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 12757                           ;stkvar	_fmt @ sp[(-32)+-4]
 12758  01264C  0EDC               	movlw	-36
 12759  01264E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12760  012654  0EDD               	movlw	-35
 12761  012656  006F FF8F FFDA     	movff	plusw1,fsr2h
 12762  01265C  006F FF78  F00B    	movff	postinc2,btemp+10
 12763  012662  006F FF74  F00C    	movff	postdec2,btemp+11
 12764  012668  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12765  01266E  0060  F033  FFE6   	movff	btemp+11,postinc1
 12766  012674  ECCF  F0BC         	call	_atoi	;wreg free
 12767  012678  0060  F004  F03C   	movff	btemp,_prec
 12768  01267E  0060  F008  F03D   	movff	btemp+1,_prec+1
 12769                           
 12770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 12771  012684  D00B               	goto	l12787
 12772  012686                     l12785:
 12773                           
 12774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 12775                           ;stkvar	_fmt @ sp[(-32)+-4]
 12776  012686  0EDC               	movlw	-36
 12777  012688  006F FF8F FFD9     	movff	plusw1,fsr2l
 12778  01268E  0EDD               	movlw	-35
 12779  012690  006F FF8F FFDA     	movff	plusw1,fsr2h
 12780  012696  2ADE               	incf	postinc2,f,c
 12781  012698  0E00               	movlw	0
 12782  01269A  22DD               	addwfc	postdec2,f,c
 12783  01269C                     l12787:
 12784  01269C  0ED0               	movlw	208
 12785  01269E  6E0B               	movwf	(btemp+10)^0,c
 12786  0126A0  0EFF               	movlw	255
 12787  0126A2  6E0C               	movwf	(btemp+11)^0,c
 12788                           
 12789                           ;stkvar	_fmt @ sp[(-32)+-4]
 12790  0126A4  0EDC               	movlw	-36
 12791  0126A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12792  0126AC  0EDD               	movlw	-35
 12793  0126AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12794  0126B4  006F FF7B FFF6     	movff	postinc2,tblptrl
 12795  0126BA  006F FF77 FFF7     	movff	postdec2,tblptrh
 12796  0126C0                     	if	0	;tblptru may be non-zero
 12797  0126C0                     	endif
 12798  0126C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12799  0126C0  0E00               	movlw	low (__mediumconst shr (0+16))
 12800  0126C2  6EF8               	movwf	tblptru,c
 12801  0126C4                     	endif
 12802  0126C4  0008               	tblrd		*
 12803  0126C6  50F5               	movf	tablat,w,c
 12804  0126C8  6E09               	movwf	(btemp+8)^0,c
 12805  0126CA  6A0A               	clrf	(btemp+9)^0,c
 12806  0126CC  500B               	movf	(btemp+10)^0,w,c
 12807  0126CE  2609               	addwf	(btemp+8)^0,f,c
 12808  0126D0  500C               	movf	(btemp+11)^0,w,c
 12809  0126D2  220A               	addwfc	(btemp+9)^0,f,c
 12810  0126D4  500A               	movf	(btemp+9)^0,w,c
 12811  0126D6  E106               	bnz	u12230
 12812  0126D8  0E0A               	movlw	10
 12813  0126DA  5C09               	subwf	(btemp+8)^0,w,c
 12814  0126DC  B0D8               	btfsc	status,0,c
 12815  0126DE  D002               	goto	u12230
 12816  0126E0  0E01               	movlw	1
 12817  0126E2  D001               	goto	u12240
 12818  0126E4                     u12230:
 12819  0126E4  0E00               	movlw	0
 12820  0126E6                     u12240:
 12821  0126E6  6E0B               	movwf	(btemp+10)^0,c
 12822  0126E8  6A0C               	clrf	(btemp+11)^0,c
 12823                           
 12824                           ;stkvar	_vfpfcnvrt$5760 @ sp[(-32)+0]
 12825  0126EA  0EE0               	movlw	-32
 12826  0126EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12827  0126F2  0EE1               	movlw	-31
 12828  0126F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 12829                           
 12830                           ;stkvar	_vfpfcnvrt$5760 @ sp[(-32)+0]
 12831  0126FA  0EE0               	movlw	-32
 12832  0126FC  006F FF8C  F001    	movff	plusw1,btemp
 12833  012702  0EE1               	movlw	-31
 12834  012704  50E3               	movf	plusw1,w,c
 12835  012706  1001               	iorwf	btemp^0,w,c
 12836  012708  A4D8               	btfss	status,2,c
 12837  01270A  D7BD               	goto	l12785
 12838  01270C                     u12250:
 12839                           
 12840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 12841                           ;stkvar	_fmt @ sp[(-32)+-4]
 12842  01270C  0EDC               	movlw	-36
 12843  01270E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12844  012714  0EDD               	movlw	-35
 12845  012716  006F FF8F FFDA     	movff	plusw1,fsr2h
 12846  01271C  006F FF7B FFF6     	movff	postinc2,tblptrl
 12847  012722  006F FF77 FFF7     	movff	postdec2,tblptrh
 12848  012728                     	if	0	;tblptru may be non-zero
 12849  012728                     	endif
 12850  012728                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12851  012728  0E00               	movlw	low (__mediumconst shr (0+16))
 12852  01272A  6EF8               	movwf	tblptru,c
 12853  01272C                     	endif
 12854  01272C  0008               	tblrd		*
 12855  01272E  50F5               	movf	tablat,w,c
 12856  012730  6EE6               	movwf	postinc1,c
 12857  012732  0E00               	movlw	0
 12858  012734  6EE6               	movwf	postinc1,c
 12859  012736  EC02  F0D8         	call	_tolower	;wreg free
 12860                           
 12861                           ;stkvar	_ct @ sp[(-32)+26]
 12862  01273A  0EFA               	movlw	-6
 12863  01273C  0060  F007  FFE3   	movff	btemp,plusw1
 12864                           
 12865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 12866                           ;stkvar	_ct @ sp[(-32)+26]
 12867  012742  0EFA               	movlw	-6
 12868  012744  50E3               	movf	plusw1,w,c
 12869  012746  B4D8               	btfsc	status,2,c
 12870  012748  D05B               	goto	l12803
 12871                           
 12872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 12873                           ;stkvar	_ct @ sp[(-32)+26]
 12874  01274A  0EFB               	movlw	251
 12875  01274C  24E1               	addwf	fsr1l,w,c
 12876  01274E  6ED9               	movwf	fsr2l,c
 12877  012750  0EFF               	movlw	255
 12878  012752  20E2               	addwfc	fsr1h,w,c
 12879  012754  6EDA               	movwf	fsr2h,c
 12880                           
 12881                           ;stkvar	_fmt @ sp[(-32)+-4]
 12882  012756  0EDC               	movlw	-36
 12883  012758  006F FF8F FFE9     	movff	plusw1,fsr0l
 12884  01275E  0EDD               	movlw	-35
 12885  012760  006F FF8F FFEA     	movff	plusw1,fsr0h
 12886  012766  006F FFB8  F00B    	movff	postinc0,btemp+10
 12887  01276C  006F FFB4  F00C    	movff	postdec0,btemp+11
 12888  012772  0E01               	movlw	1
 12889  012774  260B               	addwf	(btemp+10)^0,f,c
 12890  012776  0E00               	movlw	0
 12891  012778  220C               	addwfc	(btemp+11)^0,f,c
 12892  01277A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12893  012780  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12894  012786                     	if	0	;tblptru may be non-zero
 12895  012786                     	endif
 12896  012786                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12897  012786  0E00               	movlw	low (__mediumconst shr (0+16))
 12898  012788  6EF8               	movwf	tblptru,c
 12899  01278A                     	endif
 12900  01278A  0008               	tblrd		*
 12901  01278C  50F5               	movf	tablat,w,c
 12902  01278E  6EE6               	movwf	postinc1,c
 12903  012790  0E00               	movlw	0
 12904  012792  6EE6               	movwf	postinc1,c
 12905  012794  EC02  F0D8         	call	_tolower	;wreg free
 12906  012798  5001               	movf	btemp^0,w,c
 12907  01279A  6EDF               	movwf	indf2,c
 12908                           
 12909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 12910                           ;stkvar	_ct @ sp[(-32)+26]
 12911  01279C  0EFB               	movlw	251
 12912  01279E  24E1               	addwf	fsr1l,w,c
 12913  0127A0  6ED9               	movwf	fsr2l,c
 12914  0127A2  0EFF               	movlw	255
 12915  0127A4  20E2               	addwfc	fsr1h,w,c
 12916  0127A6  6EDA               	movwf	fsr2h,c
 12917  0127A8  50DF               	movf	indf2,w,c
 12918  0127AA  B4D8               	btfsc	status,2,c
 12919  0127AC  D029               	goto	l12803
 12920                           
 12921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 12922                           ;stkvar	_ct @ sp[(-32)+26]
 12923  0127AE  0EFC               	movlw	252
 12924  0127B0  24E1               	addwf	fsr1l,w,c
 12925  0127B2  6ED9               	movwf	fsr2l,c
 12926  0127B4  0EFF               	movlw	255
 12927  0127B6  20E2               	addwfc	fsr1h,w,c
 12928  0127B8  6EDA               	movwf	fsr2h,c
 12929                           
 12930                           ;stkvar	_fmt @ sp[(-32)+-4]
 12931  0127BA  0EDC               	movlw	-36
 12932  0127BC  006F FF8F FFE9     	movff	plusw1,fsr0l
 12933  0127C2  0EDD               	movlw	-35
 12934  0127C4  006F FF8F FFEA     	movff	plusw1,fsr0h
 12935  0127CA  006F FFB8  F00B    	movff	postinc0,btemp+10
 12936  0127D0  006F FFB4  F00C    	movff	postdec0,btemp+11
 12937  0127D6  0E02               	movlw	2
 12938  0127D8  260B               	addwf	(btemp+10)^0,f,c
 12939  0127DA  0E00               	movlw	0
 12940  0127DC  220C               	addwfc	(btemp+11)^0,f,c
 12941  0127DE  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12942  0127E4  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12943  0127EA                     	if	0	;tblptru may be non-zero
 12944  0127EA                     	endif
 12945  0127EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12946  0127EA  0E00               	movlw	low (__mediumconst shr (0+16))
 12947  0127EC  6EF8               	movwf	tblptru,c
 12948  0127EE                     	endif
 12949  0127EE  0008               	tblrd		*
 12950  0127F0  50F5               	movf	tablat,w,c
 12951  0127F2  6EE6               	movwf	postinc1,c
 12952  0127F4  0E00               	movlw	0
 12953  0127F6  6EE6               	movwf	postinc1,c
 12954  0127F8  EC02  F0D8         	call	_tolower	;wreg free
 12955  0127FC  5001               	movf	btemp^0,w,c
 12956  0127FE  6EDF               	movwf	indf2,c
 12957  012800                     l12803:
 12958                           
 12959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 12960                           ;stkvar	_fmt @ sp[(-32)+-4]
 12961  012800  0EDC               	movlw	-36
 12962  012802  006F FF8F FFD9     	movff	plusw1,fsr2l
 12963  012808  0EDD               	movlw	-35
 12964  01280A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12965  012810  006F FF7B FFF6     	movff	postinc2,tblptrl
 12966  012816  006F FF77 FFF7     	movff	postdec2,tblptrh
 12967  01281C                     	if	0	;tblptru may be non-zero
 12968  01281C                     	endif
 12969  01281C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12970  01281C  0E00               	movlw	low (__mediumconst shr (0+16))
 12971  01281E  6EF8               	movwf	tblptru,c
 12972  012820                     	endif
 12973  012820  0008               	tblrd		*
 12974  012822  50F5               	movf	tablat,w,c
 12975  012824  0A63               	xorlw	99
 12976  012826  A4D8               	btfss	status,2,c
 12977  012828  D037               	goto	l12813
 12978                           
 12979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 12980                           ;stkvar	_fmt @ sp[(-32)+-4]
 12981  01282A  0EDC               	movlw	-36
 12982  01282C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12983  012832  0EDD               	movlw	-35
 12984  012834  006F FF8F FFDA     	movff	plusw1,fsr2h
 12985  01283A  2ADE               	incf	postinc2,f,c
 12986  01283C  0E00               	movlw	0
 12987  01283E  22DD               	addwfc	postdec2,f,c
 12988                           
 12989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 12990                           ;stkvar	_ap @ sp[(-32)+-6]
 12991  012840  0EDA               	movlw	-38
 12992  012842  006F FF8F FFD9     	movff	plusw1,fsr2l
 12993  012848  0EDB               	movlw	-37
 12994  01284A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12995  012850  0E02               	movlw	2
 12996  012852  5EDE               	subwf	postinc2,f,c
 12997  012854  0E00               	movlw	0
 12998  012856  5ADD               	subwfb	postdec2,f,c
 12999  012858  006F FF78  F00B    	movff	postinc2,btemp+10
 13000  01285E  006F FF74  F00C    	movff	postdec2,btemp+11
 13001  012864  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13002  01286A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13003  012870  50DF               	movf	indf2,w,c
 13004  012872  6E0C               	movwf	(btemp+11)^0,c
 13005                           
 13006                           ;stkvar	_c @ sp[(-32)+31]
 13007  012874  0EFF               	movlw	-1
 13008  012876  0060  F033  FFE3   	movff	btemp+11,plusw1
 13009                           
 13010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 13011                           ;stkvar	_c @ sp[(-32)+31]
 13012  01287C  0EFF               	movlw	-1
 13013  01287E  50E3               	movf	plusw1,w,c
 13014  012880  6EE6               	movwf	postinc1,c
 13015                           
 13016                           ;stkvar	_fp @ sp[(-33)+-2]
 13017  012882  0EDD               	movlw	-35
 13018  012884  006F FF8F FFE6     	movff	plusw1,postinc1
 13019  01288A  006F FF8F FFE6     	movff	plusw1,postinc1
 13020  012890  EC7C  F0D7         	call	_ctoa	;wreg free
 13021  012894  EFC5  F099         	goto	l2443
 13022  012898                     l12813:
 13023                           
 13024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 13025                           ;stkvar	_fmt @ sp[(-32)+-4]
 13026  012898  0EDC               	movlw	-36
 13027  01289A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13028  0128A0  0EDD               	movlw	-35
 13029  0128A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13030  0128A8  006F FF7B FFF6     	movff	postinc2,tblptrl
 13031  0128AE  006F FF77 FFF7     	movff	postdec2,tblptrh
 13032  0128B4                     	if	0	;tblptru may be non-zero
 13033  0128B4                     	endif
 13034  0128B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13035  0128B4  0E00               	movlw	low (__mediumconst shr (0+16))
 13036  0128B6  6EF8               	movwf	tblptru,c
 13037  0128B8                     	endif
 13038  0128B8  0008               	tblrd		*
 13039  0128BA  50F5               	movf	tablat,w,c
 13040  0128BC  0A64               	xorlw	100
 13041  0128BE  B4D8               	btfsc	status,2,c
 13042  0128C0  D015               	goto	u12300
 13043                           
 13044                           ;stkvar	_fmt @ sp[(-32)+-4]
 13045  0128C2  0EDC               	movlw	-36
 13046  0128C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 13047  0128CA  0EDD               	movlw	-35
 13048  0128CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 13049  0128D2  006F FF7B FFF6     	movff	postinc2,tblptrl
 13050  0128D8  006F FF77 FFF7     	movff	postdec2,tblptrh
 13051  0128DE                     	if	0	;tblptru may be non-zero
 13052  0128DE                     	endif
 13053  0128DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13054  0128DE  0E00               	movlw	low (__mediumconst shr (0+16))
 13055  0128E0  6EF8               	movwf	tblptru,c
 13056  0128E2                     	endif
 13057  0128E2  0008               	tblrd		*
 13058  0128E4  50F5               	movf	tablat,w,c
 13059  0128E6  0A69               	xorlw	105
 13060  0128E8  A4D8               	btfss	status,2,c
 13061  0128EA  D076               	goto	l12825
 13062  0128EC                     u12300:
 13063                           
 13064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 13065                           ;stkvar	_fmt @ sp[(-32)+-4]
 13066  0128EC  0EDC               	movlw	-36
 13067  0128EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13068  0128F4  0EDD               	movlw	-35
 13069  0128F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13070  0128FC  2ADE               	incf	postinc2,f,c
 13071  0128FE  0E00               	movlw	0
 13072  012900  22DD               	addwfc	postdec2,f,c
 13073                           
 13074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 13075                           ;stkvar	_ap @ sp[(-32)+-6]
 13076  012902  0EDA               	movlw	-38
 13077  012904  006F FF8F FFD9     	movff	plusw1,fsr2l
 13078  01290A  0EDB               	movlw	-37
 13079  01290C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13080  012912  0E02               	movlw	2
 13081  012914  5EDE               	subwf	postinc2,f,c
 13082  012916  0E00               	movlw	0
 13083  012918  5ADD               	subwfb	postdec2,f,c
 13084  01291A  006F FF78  F00B    	movff	postinc2,btemp+10
 13085  012920  006F FF74  F00C    	movff	postdec2,btemp+11
 13086  012926  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13087  01292C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13088  012932  006F FF78  F00B    	movff	postinc2,btemp+10
 13089  012938  006F FF74  F00C    	movff	postdec2,btemp+11
 13090                           
 13091                           ;stkvar	_ll @ sp[(-32)+14]
 13092  01293E  0EEE               	movlw	-18
 13093  012940  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13094  012946  0EEF               	movlw	-17
 13095  012948  0060  F033  FFE3   	movff	btemp+11,plusw1
 13096  01294E  6A01               	clrf	btemp^0,c
 13097  012950  BEE3               	btfsc	plusw1,7,c
 13098  012952  6801               	setf	btemp^0,c
 13099  012954  0EF0               	movlw	-16
 13100  012956  0060  F007  FFE3   	movff	btemp,plusw1
 13101  01295C  0EF1               	movlw	-15
 13102  01295E  0060  F007  FFE3   	movff	btemp,plusw1
 13103  012964  0EF2               	movlw	-14
 13104  012966  0060  F007  FFE3   	movff	btemp,plusw1
 13105  01296C  0EF3               	movlw	-13
 13106  01296E  0060  F007  FFE3   	movff	btemp,plusw1
 13107  012974  0EF4               	movlw	-12
 13108  012976  0060  F007  FFE3   	movff	btemp,plusw1
 13109  01297C  0EF5               	movlw	-11
 13110  01297E  0060  F007  FFE3   	movff	btemp,plusw1
 13111  012984                     l12821:
 13112                           
 13113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 13114                           ;stkvar	_ll @ sp[(-32)+14]
 13115  012984  50E1               	movf	fsr1l,w,c
 13116  012986  0FEE               	addlw	-18
 13117  012988  6ED9               	movwf	fsr2l,c
 13118  01298A  50E2               	movf	fsr1h,w,c
 13119  01298C  6EDA               	movwf	fsr2h,c
 13120  01298E  0EFF               	movlw	255
 13121  012990  22DA               	addwfc	fsr2h,f,c
 13122  012992  006F FF7B FFE6     	movff	postinc2,postinc1
 13123  012998  006F FF7B FFE6     	movff	postinc2,postinc1
 13124  01299E  006F FF7B FFE6     	movff	postinc2,postinc1
 13125  0129A4  006F FF7B FFE6     	movff	postinc2,postinc1
 13126  0129AA  006F FF7B FFE6     	movff	postinc2,postinc1
 13127  0129B0  006F FF7B FFE6     	movff	postinc2,postinc1
 13128  0129B6  006F FF7B FFE6     	movff	postinc2,postinc1
 13129  0129BC  006F FF7B FFE6     	movff	postinc2,postinc1
 13130                           
 13131                           ;stkvar	_fp @ sp[(-40)+-2]
 13132  0129C2  0ED6               	movlw	-42
 13133  0129C4  006F FF8F FFE6     	movff	plusw1,postinc1
 13134  0129CA  006F FF8F FFE6     	movff	plusw1,postinc1
 13135  0129D0  EC1F  F0AC         	call	_dtoa	;wreg free
 13136  0129D4  EFC5  F099         	goto	l2443
 13137  0129D8                     l12825:
 13138                           
 13139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 13140  0129D8  0E02               	movlw	2
 13141  0129DA  6EE6               	movwf	postinc1,c
 13142  0129DC  0E00               	movlw	0
 13143  0129DE  6EE6               	movwf	postinc1,c
 13144  0129E0  0EEA               	movlw	low STR_73
 13145  0129E2  6EE6               	movwf	postinc1,c
 13146  0129E4  0EFF               	movlw	high STR_73
 13147  0129E6  6EE6               	movwf	postinc1,c
 13148                           
 13149                           ;stkvar	_fmt @ sp[(-36)+-4]
 13150  0129E8  0ED8               	movlw	-40
 13151  0129EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13152  0129F0  0ED9               	movlw	-39
 13153  0129F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13154  0129F8  006F FF78  F00B    	movff	postinc2,btemp+10
 13155  0129FE  006F FF74  F00C    	movff	postdec2,btemp+11
 13156  012A04  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13157  012A0A  0060  F033  FFE6   	movff	btemp+11,postinc1
 13158  012A10  EC4C  F0C0         	call	_strncmp	;wreg free
 13159  012A14  5001               	movf	btemp^0,w,c
 13160  012A16  1002               	iorwf	(btemp+1)^0,w,c
 13161  012A18  B4D8               	btfsc	status,2,c
 13162  012A1A  D022               	goto	u12320
 13163  012A1C  0E02               	movlw	2
 13164  012A1E  6EE6               	movwf	postinc1,c
 13165  012A20  0E00               	movlw	0
 13166  012A22  6EE6               	movwf	postinc1,c
 13167  012A24  0EF0               	movlw	low STR_77
 13168  012A26  6EE6               	movwf	postinc1,c
 13169  012A28  0EFF               	movlw	high STR_77
 13170  012A2A  6EE6               	movwf	postinc1,c
 13171                           
 13172                           ;stkvar	_fmt @ sp[(-36)+-4]
 13173  012A2C  0ED8               	movlw	-40
 13174  012A2E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13175  012A34  0ED9               	movlw	-39
 13176  012A36  006F FF8F FFDA     	movff	plusw1,fsr2h
 13177  012A3C  006F FF78  F00B    	movff	postinc2,btemp+10
 13178  012A42  006F FF74  F00C    	movff	postdec2,btemp+11
 13179  012A48  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13180  012A4E  0060  F033  FFE6   	movff	btemp+11,postinc1
 13181  012A54  EC4C  F0C0         	call	_strncmp	;wreg free
 13182  012A58  5001               	movf	btemp^0,w,c
 13183  012A5A  1002               	iorwf	(btemp+1)^0,w,c
 13184  012A5C  A4D8               	btfss	status,2,c
 13185  012A5E  D069               	goto	l12837
 13186  012A60                     u12320:
 13187                           
 13188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 13189                           ;stkvar	_fmt @ sp[(-32)+-4]
 13190  012A60  0EDC               	movlw	-36
 13191  012A62  006F FF8F FFD9     	movff	plusw1,fsr2l
 13192  012A68  0EDD               	movlw	-35
 13193  012A6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13194  012A70  0E02               	movlw	2
 13195  012A72  26DE               	addwf	postinc2,f,c
 13196  012A74  0E00               	movlw	0
 13197  012A76  22DD               	addwfc	postdec2,f,c
 13198                           
 13199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 13200                           ;stkvar	_ap @ sp[(-32)+-6]
 13201  012A78  0EDA               	movlw	-38
 13202  012A7A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13203  012A80  0EDB               	movlw	-37
 13204  012A82  006F FF8F FFDA     	movff	plusw1,fsr2h
 13205  012A88  0E04               	movlw	4
 13206  012A8A  5EDE               	subwf	postinc2,f,c
 13207  012A8C  0E00               	movlw	0
 13208  012A8E  5ADD               	subwfb	postdec2,f,c
 13209  012A90  006F FF78  F00B    	movff	postinc2,btemp+10
 13210  012A96  006F FF74  F00C    	movff	postdec2,btemp+11
 13211  012A9C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13212  012AA2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13213  012AA8  006F FF78  F009    	movff	postinc2,btemp+8
 13214  012AAE  006F FF78  F00A    	movff	postinc2,btemp+9
 13215  012AB4  006F FF78  F00B    	movff	postinc2,btemp+10
 13216  012ABA  006F FF78  F00C    	movff	postinc2,btemp+11
 13217  012AC0  0060  F024  F011   	movff	btemp+8,btemp+16
 13218  012AC6  0060  F028  F012   	movff	btemp+9,btemp+17
 13219  012ACC  0060  F02C  F013   	movff	btemp+10,btemp+18
 13220  012AD2  0060  F030  F014   	movff	btemp+11,btemp+19
 13221  012AD8  6A15               	clrf	(btemp+20)^0,c
 13222  012ADA  BE14               	btfsc	(btemp+19)^0,7,c
 13223  012ADC  6815               	setf	(btemp+20)^0,c
 13224  012ADE  0060  F054  F016   	movff	btemp+20,btemp+21
 13225  012AE4  0060  F054  F017   	movff	btemp+20,btemp+22
 13226  012AEA  0060  F054  F018   	movff	btemp+20,btemp+23
 13227                           
 13228                           ;stkvar	_ll @ sp[(-32)+14]
 13229  012AF0  0EEE               	movlw	-18
 13230  012AF2  0060  F047  FFE3   	movff	btemp+16,plusw1
 13231  012AF8  0EEF               	movlw	-17
 13232  012AFA  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13233  012B00  0EF0               	movlw	-16
 13234  012B02  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13235  012B08  0EF1               	movlw	-15
 13236  012B0A  0060  F053  FFE3   	movff	btemp+19,plusw1
 13237  012B10  0EF2               	movlw	-14
 13238  012B12  0060  F057  FFE3   	movff	btemp+20,plusw1
 13239  012B18  0EF3               	movlw	-13
 13240  012B1A  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13241  012B20  0EF4               	movlw	-12
 13242  012B22  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13243  012B28  0EF5               	movlw	-11
 13244  012B2A  0060  F063  FFE3   	movff	btemp+23,plusw1
 13245  012B30  D729               	goto	l12821
 13246  012B32                     l12837:
 13247                           
 13248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 13249                           ;stkvar	_ct @ sp[(-32)+26]
 13250  012B32  0EFA               	movlw	-6
 13251  012B34  006F FF8C  F001    	movff	plusw1,btemp
 13252  012B3A  0E66               	movlw	102
 13253  012B3C  1801               	xorwf	btemp^0,w,c
 13254  012B3E  A4D8               	btfss	status,2,c
 13255  012B40  D06E               	goto	l12849
 13256                           
 13257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 13258                           ;stkvar	_fmt @ sp[(-32)+-4]
 13259  012B42  0EDC               	movlw	-36
 13260  012B44  006F FF8F FFD9     	movff	plusw1,fsr2l
 13261  012B4A  0EDD               	movlw	-35
 13262  012B4C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13263  012B52  006F FF7B FFF6     	movff	postinc2,tblptrl
 13264  012B58  006F FF77 FFF7     	movff	postdec2,tblptrh
 13265  012B5E                     	if	0	;tblptru may be non-zero
 13266  012B5E                     	endif
 13267  012B5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13268  012B5E  0E00               	movlw	low (__mediumconst shr (0+16))
 13269  012B60  6EF8               	movwf	tblptru,c
 13270  012B62                     	endif
 13271                           
 13272                           ;stkvar	_c @ sp[(-32)+31]
 13273  012B62  0008               	tblrd		*
 13274  012B64  0EFF               	movlw	-1
 13275  012B66  006F FFD7 FFE3     	movff	tablat,plusw1
 13276                           
 13277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 13278                           ;stkvar	_fmt @ sp[(-32)+-4]
 13279  012B6C  0EDC               	movlw	-36
 13280  012B6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13281  012B74  0EDD               	movlw	-35
 13282  012B76  006F FF8F FFDA     	movff	plusw1,fsr2h
 13283  012B7C  2ADE               	incf	postinc2,f,c
 13284  012B7E  0E00               	movlw	0
 13285  012B80  22DD               	addwfc	postdec2,f,c
 13286                           
 13287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 13288                           ;stkvar	_ap @ sp[(-32)+-6]
 13289  012B82  0EDA               	movlw	-38
 13290  012B84  006F FF8F FFD9     	movff	plusw1,fsr2l
 13291  012B8A  0EDB               	movlw	-37
 13292  012B8C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13293  012B92  0E04               	movlw	4
 13294  012B94  5EDE               	subwf	postinc2,f,c
 13295  012B96  0E00               	movlw	0
 13296  012B98  5ADD               	subwfb	postdec2,f,c
 13297  012B9A  006F FF78  F00B    	movff	postinc2,btemp+10
 13298  012BA0  006F FF74  F00C    	movff	postdec2,btemp+11
 13299  012BA6  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13300  012BAC  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13301  012BB2  006F FF78  F009    	movff	postinc2,btemp+8
 13302  012BB8  006F FF78  F00A    	movff	postinc2,btemp+9
 13303  012BBE  006F FF78  F00B    	movff	postinc2,btemp+10
 13304  012BC4  006F FF78  F00C    	movff	postinc2,btemp+11
 13305                           
 13306                           ;stkvar	_f @ sp[(-32)+22]
 13307  012BCA  0EF6               	movlw	-10
 13308  012BCC  0060  F027  FFE3   	movff	btemp+8,plusw1
 13309  012BD2  0EF7               	movlw	-9
 13310  012BD4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13311  012BDA  0EF8               	movlw	-8
 13312  012BDC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13313  012BE2  0EF9               	movlw	-7
 13314  012BE4  0060  F033  FFE3   	movff	btemp+11,plusw1
 13315  012BEA                     l12845:
 13316                           
 13317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 13318                           ;stkvar	_c @ sp[(-32)+31]
 13319  012BEA  0EFF               	movlw	-1
 13320  012BEC  50E3               	movf	plusw1,w,c
 13321  012BEE  6EE6               	movwf	postinc1,c
 13322                           
 13323                           ;stkvar	_f @ sp[(-33)+22]
 13324  012BF0  0EF5               	movlw	-11
 13325  012BF2  006F FF8F FFE6     	movff	plusw1,postinc1
 13326  012BF8  006F FF8F FFE6     	movff	plusw1,postinc1
 13327  012BFE  006F FF8F FFE6     	movff	plusw1,postinc1
 13328  012C04  006F FF8F FFE6     	movff	plusw1,postinc1
 13329                           
 13330                           ;stkvar	_fp @ sp[(-37)+-2]
 13331  012C0A  0ED9               	movlw	-39
 13332  012C0C  006F FF8F FFE6     	movff	plusw1,postinc1
 13333  012C12  006F FF8F FFE6     	movff	plusw1,postinc1
 13334  012C18  EC00  F080         	call	_efgtoa	;wreg free
 13335  012C1C  D3B6               	goto	l2443
 13336  012C1E                     l12849:
 13337                           
 13338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 13339  012C1E  0E02               	movlw	2
 13340  012C20  6EE6               	movwf	postinc1,c
 13341  012C22  0E00               	movlw	0
 13342  012C24  6EE6               	movwf	postinc1,c
 13343  012C26  0EED               	movlw	low STR_82
 13344  012C28  6EE6               	movwf	postinc1,c
 13345  012C2A  0EFF               	movlw	high STR_82
 13346  012C2C  6EE6               	movwf	postinc1,c
 13347                           
 13348                           ;stkvar	_ct @ sp[(-36)+26]
 13349  012C2E  0EF6               	movlw	246
 13350  012C30  24E1               	addwf	fsr1l,w,c
 13351  012C32  6E01               	movwf	btemp^0,c
 13352  012C34  0EFF               	movlw	255
 13353  012C36  20E2               	addwfc	fsr1h,w,c
 13354  012C38  6E02               	movwf	(btemp+1)^0,c
 13355  012C3A  0060  F007  FFE6   	movff	btemp,postinc1
 13356  012C40  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13357  012C46  EC4C  F0C0         	call	_strncmp	;wreg free
 13358  012C4A  5001               	movf	btemp^0,w,c
 13359  012C4C  1002               	iorwf	(btemp+1)^0,w,c
 13360  012C4E  A4D8               	btfss	status,2,c
 13361  012C50  D096               	goto	l12869
 13362                           
 13363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 13364                           ;stkvar	_fmt @ sp[(-32)+-4]
 13365  012C52  0EDC               	movlw	-36
 13366  012C54  006F FF8F FFD9     	movff	plusw1,fsr2l
 13367  012C5A  0EDD               	movlw	-35
 13368  012C5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13369  012C62  006F FF78  F00B    	movff	postinc2,btemp+10
 13370  012C68  006F FF74  F00C    	movff	postdec2,btemp+11
 13371  012C6E  0E01               	movlw	1
 13372  012C70  260B               	addwf	(btemp+10)^0,f,c
 13373  012C72  0E00               	movlw	0
 13374  012C74  220C               	addwfc	(btemp+11)^0,f,c
 13375  012C76  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13376  012C7C  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13377  012C82                     	if	0	;tblptru may be non-zero
 13378  012C82                     	endif
 13379  012C82                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13380  012C82  0E00               	movlw	low (__mediumconst shr (0+16))
 13381  012C84  6EF8               	movwf	tblptru,c
 13382  012C86                     	endif
 13383                           
 13384                           ;stkvar	_c @ sp[(-32)+31]
 13385  012C86  0008               	tblrd		*
 13386  012C88  0EFF               	movlw	-1
 13387  012C8A  006F FFD7 FFE3     	movff	tablat,plusw1
 13388  012C90  0EBF               	movlw	191
 13389  012C92  6E0B               	movwf	(btemp+10)^0,c
 13390  012C94  0EFF               	movlw	255
 13391  012C96  6E0C               	movwf	(btemp+11)^0,c
 13392                           
 13393                           ;stkvar	_fmt @ sp[(-32)+-4]
 13394  012C98  0EDC               	movlw	-36
 13395  012C9A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13396  012CA0  0EDD               	movlw	-35
 13397  012CA2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13398  012CA8  006F FF7B FFF6     	movff	postinc2,tblptrl
 13399  012CAE  006F FF77 FFF7     	movff	postdec2,tblptrh
 13400  012CB4                     	if	0	;tblptru may be non-zero
 13401  012CB4                     	endif
 13402  012CB4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13403  012CB4  0E00               	movlw	low (__mediumconst shr (0+16))
 13404  012CB6  6EF8               	movwf	tblptru,c
 13405  012CB8                     	endif
 13406  012CB8  0008               	tblrd		*
 13407  012CBA  50F5               	movf	tablat,w,c
 13408  012CBC  6E09               	movwf	(btemp+8)^0,c
 13409  012CBE  6A0A               	clrf	(btemp+9)^0,c
 13410  012CC0  500B               	movf	(btemp+10)^0,w,c
 13411  012CC2  2609               	addwf	(btemp+8)^0,f,c
 13412  012CC4  500C               	movf	(btemp+11)^0,w,c
 13413  012CC6  220A               	addwfc	(btemp+9)^0,f,c
 13414  012CC8  500A               	movf	(btemp+9)^0,w,c
 13415  012CCA  E106               	bnz	u12350
 13416  012CCC  0E1A               	movlw	26
 13417  012CCE  5C09               	subwf	(btemp+8)^0,w,c
 13418  012CD0  B0D8               	btfsc	status,0,c
 13419  012CD2  D002               	goto	u12350
 13420  012CD4  0E01               	movlw	1
 13421  012CD6  D001               	goto	u12360
 13422  012CD8                     u12350:
 13423  012CD8  0E00               	movlw	0
 13424  012CDA                     u12360:
 13425  012CDA  6E0B               	movwf	(btemp+10)^0,c
 13426  012CDC  6A0C               	clrf	(btemp+11)^0,c
 13427                           
 13428                           ;stkvar	_vfpfcnvrt$5771 @ sp[(-32)+2]
 13429  012CDE  0EE2               	movlw	-30
 13430  012CE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13431  012CE6  0EE3               	movlw	-29
 13432  012CE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 13433                           
 13434                           ;stkvar	_vfpfcnvrt$5771 @ sp[(-32)+2]
 13435  012CEE  0EE2               	movlw	-30
 13436  012CF0  006F FF8C  F001    	movff	plusw1,btemp
 13437  012CF6  0EE3               	movlw	-29
 13438  012CF8  50E3               	movf	plusw1,w,c
 13439  012CFA  1001               	iorwf	btemp^0,w,c
 13440                           
 13441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 13442                           ;stkvar	_ap @ sp[(-32)+-6]
 13443                           
 13444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 13445                           
 13446                           ;stkvar	_f @ sp[(-32)+22]
 13447                           
 13448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 13449                           ;stkvar	_ap @ sp[(-32)+-6]
 13450  012CFC  0EDA               	movlw	-38
 13451  012CFE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13452  012D04  0EDB               	movlw	-37
 13453  012D06  006F FF8F FFDA     	movff	plusw1,fsr2h
 13454  012D0C  0E04               	movlw	4
 13455  012D0E  5EDE               	subwf	postinc2,f,c
 13456  012D10  0E00               	movlw	0
 13457  012D12  5ADD               	subwfb	postdec2,f,c
 13458  012D14  006F FF78  F00B    	movff	postinc2,btemp+10
 13459  012D1A  006F FF74  F00C    	movff	postdec2,btemp+11
 13460  012D20  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13461  012D26  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13462  012D2C  006F FF78  F009    	movff	postinc2,btemp+8
 13463  012D32  006F FF78  F00A    	movff	postinc2,btemp+9
 13464  012D38  006F FF78  F00B    	movff	postinc2,btemp+10
 13465  012D3E  006F FF78  F00C    	movff	postinc2,btemp+11
 13466                           
 13467                           ;stkvar	_f @ sp[(-32)+22]
 13468  012D44  0EF6               	movlw	-10
 13469  012D46  0060  F027  FFE3   	movff	btemp+8,plusw1
 13470  012D4C  0EF7               	movlw	-9
 13471  012D4E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13472  012D54  0EF8               	movlw	-8
 13473  012D56  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13474  012D5C  0EF9               	movlw	-7
 13475  012D5E  0060  F033  FFE3   	movff	btemp+11,plusw1
 13476                           
 13477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 13478                           ;stkvar	_fmt @ sp[(-32)+-4]
 13479  012D64  0EDC               	movlw	-36
 13480  012D66  006F FF8F FFD9     	movff	plusw1,fsr2l
 13481  012D6C  0EDD               	movlw	-35
 13482  012D6E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13483  012D74  0E02               	movlw	2
 13484  012D76  26DE               	addwf	postinc2,f,c
 13485  012D78  0E00               	movlw	0
 13486  012D7A  22DD               	addwfc	postdec2,f,c
 13487  012D7C  D736               	goto	l12845
 13488  012D7E                     l12869:
 13489                           
 13490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 13491                           ;stkvar	_fmt @ sp[(-32)+-4]
 13492  012D7E  0EDC               	movlw	-36
 13493  012D80  006F FF8F FFD9     	movff	plusw1,fsr2l
 13494  012D86  0EDD               	movlw	-35
 13495  012D88  006F FF8F FFDA     	movff	plusw1,fsr2h
 13496  012D8E  006F FF7B FFF6     	movff	postinc2,tblptrl
 13497  012D94  006F FF77 FFF7     	movff	postdec2,tblptrh
 13498  012D9A                     	if	0	;tblptru may be non-zero
 13499  012D9A                     	endif
 13500  012D9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13501  012D9A  0E00               	movlw	low (__mediumconst shr (0+16))
 13502  012D9C  6EF8               	movwf	tblptru,c
 13503  012D9E                     	endif
 13504  012D9E  0008               	tblrd		*
 13505  012DA0  50F5               	movf	tablat,w,c
 13506  012DA2  0A73               	xorlw	115
 13507  012DA4  A4D8               	btfss	status,2,c
 13508  012DA6  D042               	goto	l12879
 13509                           
 13510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 13511                           ;stkvar	_fmt @ sp[(-32)+-4]
 13512  012DA8  0EDC               	movlw	-36
 13513  012DAA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13514  012DB0  0EDD               	movlw	-35
 13515  012DB2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13516  012DB8  2ADE               	incf	postinc2,f,c
 13517  012DBA  0E00               	movlw	0
 13518  012DBC  22DD               	addwfc	postdec2,f,c
 13519                           
 13520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 13521                           ;stkvar	_ap @ sp[(-32)+-6]
 13522  012DBE  0EDA               	movlw	-38
 13523  012DC0  006F FF8F FFD9     	movff	plusw1,fsr2l
 13524  012DC6  0EDB               	movlw	-37
 13525  012DC8  006F FF8F FFDA     	movff	plusw1,fsr2h
 13526  012DCE  0E02               	movlw	2
 13527  012DD0  5EDE               	subwf	postinc2,f,c
 13528  012DD2  0E00               	movlw	0
 13529  012DD4  5ADD               	subwfb	postdec2,f,c
 13530  012DD6  006F FF78  F00B    	movff	postinc2,btemp+10
 13531  012DDC  006F FF74  F00C    	movff	postdec2,btemp+11
 13532  012DE2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13533  012DE8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13534  012DEE  006F FF78  F00B    	movff	postinc2,btemp+10
 13535  012DF4  006F FF74  F00C    	movff	postdec2,btemp+11
 13536                           
 13537                           ;stkvar	_cp @ sp[(-32)+29]
 13538  012DFA  0EFE               	movlw	-2
 13539  012DFC  0060  F033  FFE3   	movff	btemp+11,plusw1
 13540  012E02  0EFD               	movlw	-3
 13541  012E04  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13542                           
 13543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 13544                           ;stkvar	_cp @ sp[(-32)+29]
 13545  012E0A  0EFD               	movlw	-3
 13546  012E0C  006F FF8F FFE6     	movff	plusw1,postinc1
 13547  012E12  006F FF8F FFE6     	movff	plusw1,postinc1
 13548                           
 13549                           ;stkvar	_fp @ sp[(-34)+-2]
 13550  012E18  0EDC               	movlw	-36
 13551  012E1A  006F FF8F FFE6     	movff	plusw1,postinc1
 13552  012E20  006F FF8F FFE6     	movff	plusw1,postinc1
 13553  012E26  EC30  F0BA         	call	_stoa	;wreg free
 13554  012E2A  D2AF               	goto	l2443
 13555  012E2C                     l12879:
 13556                           
 13557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 13558                           ;stkvar	_fmt @ sp[(-32)+-4]
 13559  012E2C  0EDC               	movlw	-36
 13560  012E2E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13561  012E34  0EDD               	movlw	-35
 13562  012E36  006F FF8F FFDA     	movff	plusw1,fsr2h
 13563  012E3C  006F FF7B FFF6     	movff	postinc2,tblptrl
 13564  012E42  006F FF77 FFF7     	movff	postdec2,tblptrh
 13565  012E48                     	if	0	;tblptru may be non-zero
 13566  012E48                     	endif
 13567  012E48                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13568  012E48  0E00               	movlw	low (__mediumconst shr (0+16))
 13569  012E4A  6EF8               	movwf	tblptru,c
 13570  012E4C                     	endif
 13571  012E4C  0008               	tblrd		*
 13572  012E4E  50F5               	movf	tablat,w,c
 13573  012E50  0A75               	xorlw	117
 13574  012E52  A4D8               	btfss	status,2,c
 13575  012E54  D07C               	goto	l12889
 13576                           
 13577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 13578                           ;stkvar	_fmt @ sp[(-32)+-4]
 13579  012E56  0EDC               	movlw	-36
 13580  012E58  006F FF8F FFD9     	movff	plusw1,fsr2l
 13581  012E5E  0EDD               	movlw	-35
 13582  012E60  006F FF8F FFDA     	movff	plusw1,fsr2h
 13583  012E66  2ADE               	incf	postinc2,f,c
 13584  012E68  0E00               	movlw	0
 13585  012E6A  22DD               	addwfc	postdec2,f,c
 13586                           
 13587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 13588                           ;stkvar	_ap @ sp[(-32)+-6]
 13589  012E6C  0EDA               	movlw	-38
 13590  012E6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13591  012E74  0EDB               	movlw	-37
 13592  012E76  006F FF8F FFDA     	movff	plusw1,fsr2h
 13593  012E7C  0E02               	movlw	2
 13594  012E7E  5EDE               	subwf	postinc2,f,c
 13595  012E80  0E00               	movlw	0
 13596  012E82  5ADD               	subwfb	postdec2,f,c
 13597  012E84  006F FF78  F00B    	movff	postinc2,btemp+10
 13598  012E8A  006F FF74  F00C    	movff	postdec2,btemp+11
 13599  012E90  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13600  012E96  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13601  012E9C  006F FF78  F00B    	movff	postinc2,btemp+10
 13602  012EA2  006F FF74  F00C    	movff	postdec2,btemp+11
 13603  012EA8  500B               	movf	(btemp+10)^0,w,c
 13604  012EAA  6E11               	movwf	(btemp+16)^0,c
 13605  012EAC  500C               	movf	(btemp+11)^0,w,c
 13606  012EAE  6E12               	movwf	(btemp+17)^0,c
 13607  012EB0  6A13               	clrf	(btemp+18)^0,c
 13608  012EB2  6A14               	clrf	(btemp+19)^0,c
 13609  012EB4  6A15               	clrf	(btemp+20)^0,c
 13610  012EB6  6A16               	clrf	(btemp+21)^0,c
 13611  012EB8  6A17               	clrf	(btemp+22)^0,c
 13612  012EBA  6A18               	clrf	(btemp+23)^0,c
 13613                           
 13614                           ;stkvar	_llu @ sp[(-32)+6]
 13615  012EBC  0EE6               	movlw	-26
 13616  012EBE  0060  F047  FFE3   	movff	btemp+16,plusw1
 13617  012EC4  0EE7               	movlw	-25
 13618  012EC6  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13619  012ECC  0EE8               	movlw	-24
 13620  012ECE  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13621  012ED4  0EE9               	movlw	-23
 13622  012ED6  0060  F053  FFE3   	movff	btemp+19,plusw1
 13623  012EDC  0EEA               	movlw	-22
 13624  012EDE  0060  F057  FFE3   	movff	btemp+20,plusw1
 13625  012EE4  0EEB               	movlw	-21
 13626  012EE6  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13627  012EEC  0EEC               	movlw	-20
 13628  012EEE  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13629  012EF4  0EED               	movlw	-19
 13630  012EF6  0060  F063  FFE3   	movff	btemp+23,plusw1
 13631                           
 13632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 13633                           ;stkvar	_llu @ sp[(-32)+6]
 13634  012EFC  50E1               	movf	fsr1l,w,c
 13635  012EFE  0FE6               	addlw	-26
 13636  012F00  6ED9               	movwf	fsr2l,c
 13637  012F02  50E2               	movf	fsr1h,w,c
 13638  012F04  6EDA               	movwf	fsr2h,c
 13639  012F06  0EFF               	movlw	255
 13640  012F08  22DA               	addwfc	fsr2h,f,c
 13641  012F0A  006F FF7B FFE6     	movff	postinc2,postinc1
 13642  012F10  006F FF7B FFE6     	movff	postinc2,postinc1
 13643  012F16  006F FF7B FFE6     	movff	postinc2,postinc1
 13644  012F1C  006F FF7B FFE6     	movff	postinc2,postinc1
 13645  012F22  006F FF7B FFE6     	movff	postinc2,postinc1
 13646  012F28  006F FF7B FFE6     	movff	postinc2,postinc1
 13647  012F2E  006F FF7B FFE6     	movff	postinc2,postinc1
 13648  012F34  006F FF7B FFE6     	movff	postinc2,postinc1
 13649                           
 13650                           ;stkvar	_fp @ sp[(-40)+-2]
 13651  012F3A  0ED6               	movlw	-42
 13652  012F3C  006F FF8F FFE6     	movff	plusw1,postinc1
 13653  012F42  006F FF8F FFE6     	movff	plusw1,postinc1
 13654  012F48  EC18  F0B4         	call	_utoa	;wreg free
 13655  012F4C  D21E               	goto	l2443
 13656  012F4E                     l12889:
 13657                           
 13658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 13659  012F4E  0E02               	movlw	2
 13660  012F50  6EE6               	movwf	postinc1,c
 13661  012F52  0E00               	movlw	0
 13662  012F54  6EE6               	movwf	postinc1,c
 13663  012F56  0EF3               	movlw	low STR_87
 13664  012F58  6EE6               	movwf	postinc1,c
 13665  012F5A  0EFF               	movlw	high STR_87
 13666  012F5C  6EE6               	movwf	postinc1,c
 13667                           
 13668                           ;stkvar	_fmt @ sp[(-36)+-4]
 13669  012F5E  0ED8               	movlw	-40
 13670  012F60  006F FF8F FFD9     	movff	plusw1,fsr2l
 13671  012F66  0ED9               	movlw	-39
 13672  012F68  006F FF8F FFDA     	movff	plusw1,fsr2h
 13673  012F6E  006F FF78  F00B    	movff	postinc2,btemp+10
 13674  012F74  006F FF74  F00C    	movff	postdec2,btemp+11
 13675  012F7A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13676  012F80  0060  F033  FFE6   	movff	btemp+11,postinc1
 13677  012F86  EC4C  F0C0         	call	_strncmp	;wreg free
 13678  012F8A  5001               	movf	btemp^0,w,c
 13679  012F8C  1002               	iorwf	(btemp+1)^0,w,c
 13680  012F8E  A4D8               	btfss	status,2,c
 13681  012F90  D039               	goto	l12899
 13682                           
 13683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 13684                           ;stkvar	_fmt @ sp[(-32)+-4]
 13685  012F92  0EDC               	movlw	-36
 13686  012F94  006F FF8F FFD9     	movff	plusw1,fsr2l
 13687  012F9A  0EDD               	movlw	-35
 13688  012F9C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13689  012FA2  0E02               	movlw	2
 13690  012FA4  26DE               	addwf	postinc2,f,c
 13691  012FA6  0E00               	movlw	0
 13692  012FA8  22DD               	addwfc	postdec2,f,c
 13693                           
 13694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 13695                           ;stkvar	_ap @ sp[(-32)+-6]
 13696  012FAA  0EDA               	movlw	-38
 13697  012FAC  006F FF8F FFD9     	movff	plusw1,fsr2l
 13698  012FB2  0EDB               	movlw	-37
 13699  012FB4  006F FF8F FFDA     	movff	plusw1,fsr2h
 13700  012FBA  0E04               	movlw	4
 13701  012FBC  5EDE               	subwf	postinc2,f,c
 13702  012FBE  0E00               	movlw	0
 13703  012FC0  5ADD               	subwfb	postdec2,f,c
 13704  012FC2  006F FF78  F00B    	movff	postinc2,btemp+10
 13705  012FC8  006F FF74  F00C    	movff	postdec2,btemp+11
 13706  012FCE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13707  012FD4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13708  012FDA  006F FF78  F009    	movff	postinc2,btemp+8
 13709  012FE0  006F FF78  F00A    	movff	postinc2,btemp+9
 13710  012FE6  006F FF78  F00B    	movff	postinc2,btemp+10
 13711  012FEC  006F FF78  F00C    	movff	postinc2,btemp+11
 13712  012FF2  5009               	movf	(btemp+8)^0,w,c
 13713  012FF4  6E11               	movwf	(btemp+16)^0,c
 13714  012FF6  500A               	movf	(btemp+9)^0,w,c
 13715  012FF8  6E12               	movwf	(btemp+17)^0,c
 13716  012FFA  500B               	movf	(btemp+10)^0,w,c
 13717  012FFC  6E13               	movwf	(btemp+18)^0,c
 13718  012FFE  500C               	movf	(btemp+11)^0,w,c
 13719  013000  6E14               	movwf	(btemp+19)^0,c
 13720  013002  D758               	goto	L11
 13721  013004                     l12899:
 13722                           
 13723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 13724                           ;stkvar	_fmt @ sp[(-32)+-4]
 13725  013004  0EDC               	movlw	-36
 13726  013006  006F FF8F FFD9     	movff	plusw1,fsr2l
 13727  01300C  0EDD               	movlw	-35
 13728  01300E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13729  013014  006F FF7B FFF6     	movff	postinc2,tblptrl
 13730  01301A  006F FF77 FFF7     	movff	postdec2,tblptrh
 13731  013020                     	if	0	;tblptru may be non-zero
 13732  013020                     	endif
 13733  013020                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13734  013020  0E00               	movlw	low (__mediumconst shr (0+16))
 13735  013022  6EF8               	movwf	tblptru,c
 13736  013024                     	endif
 13737  013024  0008               	tblrd		*
 13738  013026  50F5               	movf	tablat,w,c
 13739  013028  0A78               	xorlw	120
 13740  01302A  B4D8               	btfsc	status,2,c
 13741  01302C  D015               	goto	u12420
 13742                           
 13743                           ;stkvar	_fmt @ sp[(-32)+-4]
 13744  01302E  0EDC               	movlw	-36
 13745  013030  006F FF8F FFD9     	movff	plusw1,fsr2l
 13746  013036  0EDD               	movlw	-35
 13747  013038  006F FF8F FFDA     	movff	plusw1,fsr2h
 13748  01303E  006F FF7B FFF6     	movff	postinc2,tblptrl
 13749  013044  006F FF77 FFF7     	movff	postdec2,tblptrh
 13750  01304A                     	if	0	;tblptru may be non-zero
 13751  01304A                     	endif
 13752  01304A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13753  01304A  0E00               	movlw	low (__mediumconst shr (0+16))
 13754  01304C  6EF8               	movwf	tblptru,c
 13755  01304E                     	endif
 13756  01304E  0008               	tblrd		*
 13757  013050  50F5               	movf	tablat,w,c
 13758  013052  0A58               	xorlw	88
 13759  013054  A4D8               	btfss	status,2,c
 13760  013056  D094               	goto	l12913
 13761  013058                     u12420:
 13762                           
 13763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 13764                           ;stkvar	_fmt @ sp[(-32)+-4]
 13765  013058  0EDC               	movlw	-36
 13766  01305A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13767  013060  0EDD               	movlw	-35
 13768  013062  006F FF8F FFDA     	movff	plusw1,fsr2h
 13769  013068  006F FF7B FFF6     	movff	postinc2,tblptrl
 13770  01306E  006F FF77 FFF7     	movff	postdec2,tblptrh
 13771  013074                     	if	0	;tblptru may be non-zero
 13772  013074                     	endif
 13773  013074                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13774  013074  0E00               	movlw	low (__mediumconst shr (0+16))
 13775  013076  6EF8               	movwf	tblptru,c
 13776  013078                     	endif
 13777                           
 13778                           ;stkvar	_c @ sp[(-32)+31]
 13779  013078  0008               	tblrd		*
 13780  01307A  0EFF               	movlw	-1
 13781  01307C  006F FFD7 FFE3     	movff	tablat,plusw1
 13782                           
 13783                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 13784                           ;stkvar	_fmt @ sp[(-32)+-4]
 13785  013082  0EDC               	movlw	-36
 13786  013084  006F FF8F FFD9     	movff	plusw1,fsr2l
 13787  01308A  0EDD               	movlw	-35
 13788  01308C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13789  013092  2ADE               	incf	postinc2,f,c
 13790  013094  0E00               	movlw	0
 13791  013096  22DD               	addwfc	postdec2,f,c
 13792                           
 13793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 13794                           ;stkvar	_ap @ sp[(-32)+-6]
 13795  013098  0EDA               	movlw	-38
 13796  01309A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13797  0130A0  0EDB               	movlw	-37
 13798  0130A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13799  0130A8  0E02               	movlw	2
 13800  0130AA  5EDE               	subwf	postinc2,f,c
 13801  0130AC  0E00               	movlw	0
 13802  0130AE  5ADD               	subwfb	postdec2,f,c
 13803  0130B0  006F FF78  F00B    	movff	postinc2,btemp+10
 13804  0130B6  006F FF74  F00C    	movff	postdec2,btemp+11
 13805  0130BC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13806  0130C2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13807  0130C8  006F FF78  F00B    	movff	postinc2,btemp+10
 13808  0130CE  006F FF74  F00C    	movff	postdec2,btemp+11
 13809  0130D4  500B               	movf	(btemp+10)^0,w,c
 13810  0130D6  6E11               	movwf	(btemp+16)^0,c
 13811  0130D8  500C               	movf	(btemp+11)^0,w,c
 13812  0130DA  6E12               	movwf	(btemp+17)^0,c
 13813  0130DC  6A13               	clrf	(btemp+18)^0,c
 13814  0130DE  6A14               	clrf	(btemp+19)^0,c
 13815  0130E0  6A15               	clrf	(btemp+20)^0,c
 13816  0130E2  6A16               	clrf	(btemp+21)^0,c
 13817  0130E4  6A17               	clrf	(btemp+22)^0,c
 13818  0130E6  6A18               	clrf	(btemp+23)^0,c
 13819                           
 13820                           ;stkvar	_llu @ sp[(-32)+6]
 13821  0130E8  0EE6               	movlw	-26
 13822  0130EA  0060  F047  FFE3   	movff	btemp+16,plusw1
 13823  0130F0  0EE7               	movlw	-25
 13824  0130F2  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13825  0130F8  0EE8               	movlw	-24
 13826  0130FA  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13827  013100  0EE9               	movlw	-23
 13828  013102  0060  F053  FFE3   	movff	btemp+19,plusw1
 13829  013108  0EEA               	movlw	-22
 13830  01310A  0060  F057  FFE3   	movff	btemp+20,plusw1
 13831  013110  0EEB               	movlw	-21
 13832  013112  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13833  013118  0EEC               	movlw	-20
 13834  01311A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13835  013120  0EED               	movlw	-19
 13836  013122  0060  F063  FFE3   	movff	btemp+23,plusw1
 13837                           
 13838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 13839                           ;stkvar	_c @ sp[(-32)+31]
 13840  013128  0EFF               	movlw	-1
 13841  01312A  50E3               	movf	plusw1,w,c
 13842  01312C  6EE6               	movwf	postinc1,c
 13843                           
 13844                           ;stkvar	_llu @ sp[(-33)+6]
 13845  01312E  50E1               	movf	fsr1l,w,c
 13846  013130  0FE5               	addlw	-27
 13847  013132  6ED9               	movwf	fsr2l,c
 13848  013134  50E2               	movf	fsr1h,w,c
 13849  013136  6EDA               	movwf	fsr2h,c
 13850  013138  0EFF               	movlw	255
 13851  01313A  22DA               	addwfc	fsr2h,f,c
 13852  01313C  006F FF7B FFE6     	movff	postinc2,postinc1
 13853  013142  006F FF7B FFE6     	movff	postinc2,postinc1
 13854  013148  006F FF7B FFE6     	movff	postinc2,postinc1
 13855  01314E  006F FF7B FFE6     	movff	postinc2,postinc1
 13856  013154  006F FF7B FFE6     	movff	postinc2,postinc1
 13857  01315A  006F FF7B FFE6     	movff	postinc2,postinc1
 13858  013160  006F FF7B FFE6     	movff	postinc2,postinc1
 13859  013166  006F FF7B FFE6     	movff	postinc2,postinc1
 13860                           
 13861                           ;stkvar	_fp @ sp[(-41)+-2]
 13862  01316C  0ED5               	movlw	-43
 13863  01316E  006F FF8F FFE6     	movff	plusw1,postinc1
 13864  013174  006F FF8F FFE6     	movff	plusw1,postinc1
 13865  01317A  EC85  F0B0         	call	_xtoa	;wreg free
 13866  01317E  D105               	goto	l2443
 13867  013180                     l12913:
 13868                           
 13869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 13870  013180  0E02               	movlw	2
 13871  013182  6EE6               	movwf	postinc1,c
 13872  013184  0E00               	movlw	0
 13873  013186  6EE6               	movwf	postinc1,c
 13874  013188  0EF6               	movlw	low STR_92
 13875  01318A  6EE6               	movwf	postinc1,c
 13876  01318C  0EFF               	movlw	high STR_92
 13877  01318E  6EE6               	movwf	postinc1,c
 13878                           
 13879                           ;stkvar	_fmt @ sp[(-36)+-4]
 13880  013190  0ED8               	movlw	-40
 13881  013192  006F FF8F FFD9     	movff	plusw1,fsr2l
 13882  013198  0ED9               	movlw	-39
 13883  01319A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13884  0131A0  006F FF78  F00B    	movff	postinc2,btemp+10
 13885  0131A6  006F FF74  F00C    	movff	postdec2,btemp+11
 13886  0131AC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13887  0131B2  0060  F033  FFE6   	movff	btemp+11,postinc1
 13888  0131B8  EC4C  F0C0         	call	_strncmp	;wreg free
 13889  0131BC  5001               	movf	btemp^0,w,c
 13890  0131BE  1002               	iorwf	(btemp+1)^0,w,c
 13891  0131C0  B4D8               	btfsc	status,2,c
 13892  0131C2  D022               	goto	u12440
 13893  0131C4  0E02               	movlw	2
 13894  0131C6  6EE6               	movwf	postinc1,c
 13895  0131C8  0E00               	movlw	0
 13896  0131CA  6EE6               	movwf	postinc1,c
 13897  0131CC  0EE7               	movlw	low STR_96
 13898  0131CE  6EE6               	movwf	postinc1,c
 13899  0131D0  0EFF               	movlw	high STR_96
 13900  0131D2  6EE6               	movwf	postinc1,c
 13901                           
 13902                           ;stkvar	_fmt @ sp[(-36)+-4]
 13903  0131D4  0ED8               	movlw	-40
 13904  0131D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 13905  0131DC  0ED9               	movlw	-39
 13906  0131DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 13907  0131E4  006F FF78  F00B    	movff	postinc2,btemp+10
 13908  0131EA  006F FF74  F00C    	movff	postdec2,btemp+11
 13909  0131F0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13910  0131F6  0060  F033  FFE6   	movff	btemp+11,postinc1
 13911  0131FC  EC4C  F0C0         	call	_strncmp	;wreg free
 13912  013200  5001               	movf	btemp^0,w,c
 13913  013202  1002               	iorwf	(btemp+1)^0,w,c
 13914  013204  A4D8               	btfss	status,2,c
 13915  013206  D058               	goto	l12927
 13916  013208                     u12440:
 13917                           
 13918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 13919                           ;stkvar	_fmt @ sp[(-32)+-4]
 13920  013208  0EDC               	movlw	-36
 13921  01320A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13922  013210  0EDD               	movlw	-35
 13923  013212  006F FF8F FFDA     	movff	plusw1,fsr2h
 13924  013218  006F FF78  F00B    	movff	postinc2,btemp+10
 13925  01321E  006F FF74  F00C    	movff	postdec2,btemp+11
 13926  013224  0E01               	movlw	1
 13927  013226  260B               	addwf	(btemp+10)^0,f,c
 13928  013228  0E00               	movlw	0
 13929  01322A  220C               	addwfc	(btemp+11)^0,f,c
 13930  01322C  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13931  013232  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13932  013238                     	if	0	;tblptru may be non-zero
 13933  013238                     	endif
 13934  013238                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13935  013238  0E00               	movlw	low (__mediumconst shr (0+16))
 13936  01323A  6EF8               	movwf	tblptru,c
 13937  01323C                     	endif
 13938                           
 13939                           ;stkvar	_c @ sp[(-32)+31]
 13940  01323C  0008               	tblrd		*
 13941  01323E  0EFF               	movlw	-1
 13942  013240  006F FFD7 FFE3     	movff	tablat,plusw1
 13943                           
 13944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 13945                           ;stkvar	_fmt @ sp[(-32)+-4]
 13946  013246  0EDC               	movlw	-36
 13947  013248  006F FF8F FFD9     	movff	plusw1,fsr2l
 13948  01324E  0EDD               	movlw	-35
 13949  013250  006F FF8F FFDA     	movff	plusw1,fsr2h
 13950  013256  0E02               	movlw	2
 13951  013258  26DE               	addwf	postinc2,f,c
 13952  01325A  0E00               	movlw	0
 13953  01325C  22DD               	addwfc	postdec2,f,c
 13954                           
 13955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 13956                           ;stkvar	_ap @ sp[(-32)+-6]
 13957  01325E  0EDA               	movlw	-38
 13958  013260  006F FF8F FFD9     	movff	plusw1,fsr2l
 13959  013266  0EDB               	movlw	-37
 13960  013268  006F FF8F FFDA     	movff	plusw1,fsr2h
 13961  01326E  0E04               	movlw	4
 13962  013270  5EDE               	subwf	postinc2,f,c
 13963  013272  0E00               	movlw	0
 13964  013274  5ADD               	subwfb	postdec2,f,c
 13965  013276  006F FF78  F00B    	movff	postinc2,btemp+10
 13966  01327C  006F FF74  F00C    	movff	postdec2,btemp+11
 13967  013282  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13968  013288  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13969  01328E  006F FF78  F009    	movff	postinc2,btemp+8
 13970  013294  006F FF78  F00A    	movff	postinc2,btemp+9
 13971  01329A  006F FF78  F00B    	movff	postinc2,btemp+10
 13972  0132A0  006F FF78  F00C    	movff	postinc2,btemp+11
 13973  0132A6  5009               	movf	(btemp+8)^0,w,c
 13974  0132A8  6E11               	movwf	(btemp+16)^0,c
 13975  0132AA  500A               	movf	(btemp+9)^0,w,c
 13976  0132AC  6E12               	movwf	(btemp+17)^0,c
 13977  0132AE  500B               	movf	(btemp+10)^0,w,c
 13978  0132B0  6E13               	movwf	(btemp+18)^0,c
 13979  0132B2  500C               	movf	(btemp+11)^0,w,c
 13980  0132B4  6E14               	movwf	(btemp+19)^0,c
 13981  0132B6  D714               	goto	L12
 13982  0132B8                     l12927:
 13983                           
 13984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 13985                           ;stkvar	_fmt @ sp[(-32)+-4]
 13986  0132B8  0EDC               	movlw	-36
 13987  0132BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13988  0132C0  0EDD               	movlw	-35
 13989  0132C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13990  0132C8  006F FF7B FFF6     	movff	postinc2,tblptrl
 13991  0132CE  006F FF77 FFF7     	movff	postdec2,tblptrh
 13992  0132D4                     	if	0	;tblptru may be non-zero
 13993  0132D4                     	endif
 13994  0132D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13995  0132D4  0E00               	movlw	low (__mediumconst shr (0+16))
 13996  0132D6  6EF8               	movwf	tblptru,c
 13997  0132D8                     	endif
 13998  0132D8  0008               	tblrd		*
 13999  0132DA  50F5               	movf	tablat,w,c
 14000  0132DC  0A25               	xorlw	37
 14001  0132DE  A4D8               	btfss	status,2,c
 14002  0132E0  D01A               	goto	l12937
 14003                           
 14004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 14005                           ;stkvar	_fmt @ sp[(-32)+-4]
 14006  0132E2  0EDC               	movlw	-36
 14007  0132E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 14008  0132EA  0EDD               	movlw	-35
 14009  0132EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 14010  0132F2  2ADE               	incf	postinc2,f,c
 14011  0132F4  0E00               	movlw	0
 14012  0132F6  22DD               	addwfc	postdec2,f,c
 14013                           
 14014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 14015                           ;stkvar	_fp @ sp[(-32)+-2]
 14016  0132F8  0EDE               	movlw	-34
 14017  0132FA  006F FF8F FFE6     	movff	plusw1,postinc1
 14018  013300  006F FF8F FFE6     	movff	plusw1,postinc1
 14019  013306  0E25               	movlw	37
 14020  013308  6EE6               	movwf	postinc1,c
 14021  01330A  0E00               	movlw	0
 14022  01330C  6EE6               	movwf	postinc1,c
 14023  01330E  ECE6  F0CC         	call	_fputc	;wreg free
 14024  013312                     l12933:
 14025                           
 14026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 14027  013312  0E01               	movlw	1
 14028  013314  D00C               	goto	L13
 14029  013316                     l12937:
 14030                           
 14031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 14032                           ;stkvar	_fmt @ sp[(-32)+-4]
 14033  013316  0EDC               	movlw	-36
 14034  013318  006F FF8F FFD9     	movff	plusw1,fsr2l
 14035  01331E  0EDD               	movlw	-35
 14036  013320  006F FF8F FFDA     	movff	plusw1,fsr2h
 14037  013326  2ADE               	incf	postinc2,f,c
 14038  013328  0E00               	movlw	0
 14039  01332A  22DD               	addwfc	postdec2,f,c
 14040                           
 14041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 14042  01332C  0E00               	movlw	0
 14043  01332E                     L13:
 14044  01332E  6E01               	movwf	btemp^0,c
 14045  013330  0E00               	movlw	0
 14046  013332  6E02               	movwf	(btemp+1)^0,c
 14047  013334  D02A               	goto	l2443
 14048  013336                     l12943:
 14049                           
 14050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 14051                           ;stkvar	_fp @ sp[(-32)+-2]
 14052  013336  0EDE               	movlw	-34
 14053  013338  006F FF8F FFE6     	movff	plusw1,postinc1
 14054  01333E  006F FF8F FFE6     	movff	plusw1,postinc1
 14055                           
 14056                           ;stkvar	_fmt @ sp[(-34)+-4]
 14057  013344  0EDA               	movlw	-38
 14058  013346  006F FF8F FFD9     	movff	plusw1,fsr2l
 14059  01334C  0EDB               	movlw	-37
 14060  01334E  006F FF8F FFDA     	movff	plusw1,fsr2h
 14061  013354  006F FF7B FFF6     	movff	postinc2,tblptrl
 14062  01335A  006F FF77 FFF7     	movff	postdec2,tblptrh
 14063  013360                     	if	0	;tblptru may be non-zero
 14064  013360                     	endif
 14065  013360                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14066  013360  0E00               	movlw	low (__mediumconst shr (0+16))
 14067  013362  6EF8               	movwf	tblptru,c
 14068  013364                     	endif
 14069  013364  0008               	tblrd		*
 14070  013366  50F5               	movf	tablat,w,c
 14071  013368  6EE6               	movwf	postinc1,c
 14072  01336A  0E00               	movlw	0
 14073  01336C  6EE6               	movwf	postinc1,c
 14074  01336E  ECE6  F0CC         	call	_fputc	;wreg free
 14075                           
 14076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 14077                           ;stkvar	_fmt @ sp[(-32)+-4]
 14078  013372  0EDC               	movlw	-36
 14079  013374  006F FF8F FFD9     	movff	plusw1,fsr2l
 14080  01337A  0EDD               	movlw	-35
 14081  01337C  006F FF8F FFDA     	movff	plusw1,fsr2h
 14082  013382  2ADE               	incf	postinc2,f,c
 14083  013384  0E00               	movlw	0
 14084  013386  22DD               	addwfc	postdec2,f,c
 14085  013388  D7C4               	goto	l12933
 14086  01338A                     l2443:
 14087                           
 14088                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 14089  01338A  0EDA               	movlw	218
 14090  01338C  26E1               	addwf	fsr1l,f,c
 14091  01338E  0EFF               	movlw	255
 14092  013390  22E2               	addwfc	fsr1h,f,c
 14093  013392  0012               	return		;funcret
 14094  013394                     __end_of_vfpfcnvrt:
 14095                           	opt callstack 0
 14096                           
 14097 ;; *************** function _xtoa *****************
 14098 ;; Defined at:
 14099 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14100 ;; Parameters:    Size  Location     Type
 14101 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14102 ;;		 -> f(6), NULL(0), 
 14103 ;;  d               8  [STACK] unsigned long long 
 14104 ;;  x               1  [STACK] unsigned char 
 14105 ;; Auto vars:     Size  Location     Type
 14106 ;;  n               8  [STACK] unsigned long long 
 14107 ;;  c               2  [STACK] int 
 14108 ;;  i               2  [STACK] int 
 14109 ;;  w               2  [STACK] int 
 14110 ;;  p               2  [STACK] int 
 14111 ;; Return value:  Size  Location     Type
 14112 ;;                  2  [STACK] int 
 14113 ;; Registers used:
 14114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 14115 ;; Tracked objects:
 14116 ;;		On entry : 0/0
 14117 ;;		On exit  : 0/0
 14118 ;;		Unchanged: 0/0
 14119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14124 ;;Total ram usage:        0 bytes
 14125 ;; Hardware stack levels used:    1
 14126 ;; Hardware stack levels required when called:   20
 14127 ;; This function calls:
 14128 ;;		_isalpha
 14129 ;;		_isupper
 14130 ;;		_pad
 14131 ;;		_toupper
 14132 ;; This function is called by:
 14133 ;;		_vfpfcnvrt
 14134 ;; This function uses a reentrant model
 14135 ;;
 14136                           
 14137                           	psect	text53
 14138  01610A                     __ptext53:
 14139                           	opt callstack 0
 14140  01610A                     _xtoa:
 14141                           	opt callstack 0
 14142                           
 14143                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 14144  01610A  0E14               	movlw	20
 14145  01610C  26E1               	addwf	fsr1l,f,c
 14146  01610E  0E00               	movlw	0
 14147  016110  22E2               	addwfc	fsr1h,f,c
 14148                           
 14149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 14150                           
 14151                           ;incstack = 0
 14152 ;; hardware stack exceeded
 14153  016112  AE3D               	btfss	(_prec+1)^0,7,c
 14154                           
 14155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 14156  016114  923E               	bcf	_flags^0,1,c
 14157                           
 14158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 14159  016116  BE3D               	btfsc	(_prec+1)^0,7,c
 14160  016118  D005               	goto	u11980
 14161  01611A  503D               	movf	(_prec+1)^0,w,c
 14162  01611C  E110               	bnz	l12663
 14163  01611E  043C               	decf	_prec^0,w,c
 14164  016120  B0D8               	btfsc	status,0,c
 14165  016122  D00D               	goto	l12663
 14166  016124                     u11980:
 14167  016124  0E01               	movlw	1
 14168  016126  6E0B               	movwf	(btemp+10)^0,c
 14169  016128  0E00               	movlw	0
 14170  01612A  6E0C               	movwf	(btemp+11)^0,c
 14171                           
 14172                           ;stkvar	_p @ sp[(-20)+18]
 14173  01612C  0EFE               	movlw	-2
 14174  01612E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14175  016134  0EFF               	movlw	-1
 14176  016136  0060  F033  FFE3   	movff	btemp+11,plusw1
 14177  01613C  D008               	goto	l2393
 14178  01613E                     l12663:
 14179                           
 14180                           ;stkvar	_p @ sp[(-20)+18]
 14181  01613E  0EFE               	movlw	-2
 14182  016140  0060  F0F3  FFE3   	movff	_prec,plusw1
 14183  016146  0EFF               	movlw	-1
 14184  016148  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 14185  01614E                     l2393:
 14186                           
 14187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 14188                           ;stkvar	_w @ sp[(-20)+16]
 14189  01614E  0EFC               	movlw	-4
 14190  016150  0060  F0EB  FFE3   	movff	_width,plusw1
 14191  016156  0EFD               	movlw	-3
 14192  016158  0060  F0EF  FFE3   	movff	_width+1,plusw1
 14193                           
 14194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 14195  01615E  A83E               	btfss	_flags^0,4,c
 14196  016160  D00B               	goto	l12669
 14197                           
 14198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 14199                           ;stkvar	_w @ sp[(-20)+16]
 14200  016162  50E1               	movf	fsr1l,w,c
 14201  016164  0FFC               	addlw	-4
 14202  016166  6ED9               	movwf	fsr2l,c
 14203  016168  50E2               	movf	fsr1h,w,c
 14204  01616A  6EDA               	movwf	fsr2h,c
 14205  01616C  0EFF               	movlw	255
 14206  01616E  22DA               	addwfc	fsr2h,f,c
 14207  016170  0EFE               	movlw	254
 14208  016172  26DE               	addwf	postinc2,f,c
 14209  016174  0EFF               	movlw	255
 14210  016176  22DD               	addwfc	postdec2,f,c
 14211  016178                     l12669:
 14212                           
 14213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 14214                           ;stkvar	_d @ sp[(-20)+-10]
 14215  016178  0EE2               	movlw	226
 14216  01617A  24E1               	addwf	fsr1l,w,c
 14217  01617C  6ED9               	movwf	fsr2l,c
 14218  01617E  0EFF               	movlw	255
 14219  016180  20E2               	addwfc	fsr1h,w,c
 14220  016182  6EDA               	movwf	fsr2h,c
 14221                           
 14222                           ;stkvar	_n @ sp[(-20)+4]
 14223  016184  0E08               	movlw	8
 14224  016186  6E01               	movwf	btemp^0,c
 14225  016188  0EF0               	movlw	-16
 14226  01618A                     us1200999:
 14227  01618A  006F FF7B FFE3     	movff	postinc2,plusw1
 14228  016190  28E8               	incf	wreg,w,c
 14229  016192  2E01               	decfsz	btemp^0,f,c
 14230  016194  D7FA               	bra	us1200999
 14231                           
 14232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 14233  016196  0E4F               	movlw	79
 14234  016198  6E0B               	movwf	(btemp+10)^0,c
 14235  01619A  0E00               	movlw	0
 14236  01619C  6E0C               	movwf	(btemp+11)^0,c
 14237                           
 14238                           ;stkvar	_i @ sp[(-20)+14]
 14239  01619E  0EFA               	movlw	-6
 14240  0161A0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14241  0161A6  0EFB               	movlw	-5
 14242  0161A8  0060  F033  FFE3   	movff	btemp+11,plusw1
 14243                           
 14244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 14245  0161AE  0102               	movlb	2	; () banked
 14246  0161B0  6BE6               	clrf	(_dbuf+79)& (0+255),b
 14247                           
 14248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14249  0161B2  D0EE               	goto	l12707
 14250  0161B4                     l12675:
 14251                           
 14252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 14253                           ;stkvar	_i @ sp[(-20)+14]
 14254  0161B4  50E1               	movf	fsr1l,w,c
 14255  0161B6  0FFA               	addlw	-6
 14256  0161B8  6ED9               	movwf	fsr2l,c
 14257  0161BA  50E2               	movf	fsr1h,w,c
 14258  0161BC  6EDA               	movwf	fsr2h,c
 14259  0161BE  0EFF               	movlw	255
 14260  0161C0  22DA               	addwfc	fsr2h,f,c
 14261  0161C2  06DE               	decf	postinc2,f,c
 14262  0161C4  0E00               	movlw	0
 14263  0161C6  5ADD               	subwfb	postdec2,f,c
 14264                           
 14265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 14266                           ;stkvar	_n @ sp[(-20)+4]
 14267  0161C8  0EF0               	movlw	-16
 14268  0161CA  006F FF8C  F00B    	movff	plusw1,btemp+10
 14269  0161D0  0EF1               	movlw	-15
 14270  0161D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 14271  0161D8  0E0F               	movlw	15
 14272  0161DA  160B               	andwf	(btemp+10)^0,f,c
 14273  0161DC  0E00               	movlw	0
 14274  0161DE  160C               	andwf	(btemp+11)^0,f,c
 14275                           
 14276                           ;stkvar	_c @ sp[(-20)+12]
 14277  0161E0  0EF8               	movlw	-8
 14278  0161E2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14279  0161E8  0EF9               	movlw	-7
 14280  0161EA  0060  F033  FFE3   	movff	btemp+11,plusw1
 14281                           
 14282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 14283                           ;stkvar	_c @ sp[(-20)+12]
 14284  0161F0  0EF9               	movlw	-7
 14285  0161F2  BEE3               	btfsc	plusw1,7,c
 14286  0161F4  D00F               	goto	l12683
 14287  0161F6  0EF9               	movlw	-7
 14288  0161F8  50E3               	movf	plusw1,w,c
 14289  0161FA  E108               	bnz	u12010
 14290  0161FC  0EF8               	movlw	-8
 14291  0161FE  006F FF8C  F001    	movff	plusw1,btemp
 14292  016204  0E0A               	movlw	10
 14293  016206  5E01               	subwf	btemp^0,f,c
 14294  016208  A0D8               	btfss	status,0,c
 14295  01620A  D004               	goto	l12683
 14296  01620C                     u12010:
 14297                           
 14298                           ;stkvar	_c @ sp[(-20)+12]
 14299  01620C  0EF8               	movlw	-8
 14300  01620E  50E3               	movf	plusw1,w,c
 14301  016210  0F57               	addlw	87
 14302  016212  D003               	goto	L14
 14303  016214                     l12683:
 14304                           
 14305                           ;stkvar	_c @ sp[(-20)+12]
 14306  016214  0EF8               	movlw	-8
 14307  016216  50E3               	movf	plusw1,w,c
 14308  016218  0F30               	addlw	48
 14309  01621A                     L14:
 14310  01621A  6E0B               	movwf	(btemp+10)^0,c
 14311  01621C  0EF9               	movlw	-7
 14312  01621E  006F FF8C  F00C    	movff	plusw1,btemp+11
 14313  016224  0E00               	movlw	0
 14314  016226  220C               	addwfc	(btemp+11)^0,f,c
 14315                           
 14316                           ;stkvar	_c @ sp[(-20)+12]
 14317  016228  0EF8               	movlw	-8
 14318  01622A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14319  016230  0EF9               	movlw	-7
 14320  016232  0060  F033  FFE3   	movff	btemp+11,plusw1
 14321  016238  0EBF               	movlw	191
 14322  01623A  6E0B               	movwf	(btemp+10)^0,c
 14323  01623C  0EFF               	movlw	255
 14324  01623E  6E0C               	movwf	(btemp+11)^0,c
 14325                           
 14326                           ;stkvar	_x @ sp[(-20)+-11]
 14327  016240  0EE1               	movlw	-31
 14328  016242  50E3               	movf	plusw1,w,c
 14329  016244  6E09               	movwf	(btemp+8)^0,c
 14330  016246  6A0A               	clrf	(btemp+9)^0,c
 14331  016248  500B               	movf	(btemp+10)^0,w,c
 14332  01624A  2609               	addwf	(btemp+8)^0,f,c
 14333  01624C  500C               	movf	(btemp+11)^0,w,c
 14334  01624E  220A               	addwfc	(btemp+9)^0,f,c
 14335  016250  500A               	movf	(btemp+9)^0,w,c
 14336  016252  E106               	bnz	u12020
 14337  016254  0E1A               	movlw	26
 14338  016256  5C09               	subwf	(btemp+8)^0,w,c
 14339  016258  B0D8               	btfsc	status,0,c
 14340  01625A  D002               	goto	u12020
 14341  01625C  0E01               	movlw	1
 14342  01625E  D001               	goto	u12030
 14343  016260                     u12020:
 14344  016260  0E00               	movlw	0
 14345  016262                     u12030:
 14346  016262  6E0B               	movwf	(btemp+10)^0,c
 14347  016264  6A0C               	clrf	(btemp+11)^0,c
 14348                           
 14349                           ;stkvar	_xtoa$5744 @ sp[(-20)+2]
 14350  016266  0EEE               	movlw	-18
 14351  016268  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14352  01626E  0EEF               	movlw	-17
 14353  016270  0060  F033  FFE3   	movff	btemp+11,plusw1
 14354                           
 14355                           ;stkvar	_xtoa$5744 @ sp[(-20)+2]
 14356  016276  0EEE               	movlw	-18
 14357  016278  006F FF8C  F001    	movff	plusw1,btemp
 14358  01627E  0EEF               	movlw	-17
 14359  016280  50E3               	movf	plusw1,w,c
 14360  016282  1001               	iorwf	btemp^0,w,c
 14361  016284  B4D8               	btfsc	status,2,c
 14362  016286  D041               	goto	l12699
 14363  016288  0E9F               	movlw	159
 14364  01628A  6E0B               	movwf	(btemp+10)^0,c
 14365  01628C  0EFF               	movlw	255
 14366  01628E  6E0C               	movwf	(btemp+11)^0,c
 14367                           
 14368                           ;stkvar	_c @ sp[(-20)+12]
 14369  016290  0EF8               	movlw	-8
 14370  016292  006F FF8C  F009    	movff	plusw1,btemp+8
 14371  016298  0EF9               	movlw	-7
 14372  01629A  006F FF8C  F00A    	movff	plusw1,btemp+9
 14373  0162A0  0E20               	movlw	32
 14374  0162A2  1209               	iorwf	(btemp+8)^0,f,c
 14375  0162A4  0E00               	movlw	0
 14376  0162A6  120A               	iorwf	(btemp+9)^0,f,c
 14377  0162A8  500B               	movf	(btemp+10)^0,w,c
 14378  0162AA  2609               	addwf	(btemp+8)^0,f,c
 14379  0162AC  500C               	movf	(btemp+11)^0,w,c
 14380  0162AE  220A               	addwfc	(btemp+9)^0,f,c
 14381  0162B0  500A               	movf	(btemp+9)^0,w,c
 14382  0162B2  E106               	bnz	u12050
 14383  0162B4  0E1A               	movlw	26
 14384  0162B6  5C09               	subwf	(btemp+8)^0,w,c
 14385  0162B8  B0D8               	btfsc	status,0,c
 14386  0162BA  D002               	goto	u12050
 14387  0162BC  0E01               	movlw	1
 14388  0162BE  D001               	goto	u12060
 14389  0162C0                     u12050:
 14390  0162C0  0E00               	movlw	0
 14391  0162C2                     u12060:
 14392  0162C2  6E0B               	movwf	(btemp+10)^0,c
 14393  0162C4  6A0C               	clrf	(btemp+11)^0,c
 14394                           
 14395                           ;stkvar	_xtoa$5745 @ sp[(-20)+0]
 14396  0162C6  0EEC               	movlw	-20
 14397  0162C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14398  0162CE  0EED               	movlw	-19
 14399  0162D0  0060  F033  FFE3   	movff	btemp+11,plusw1
 14400                           
 14401                           ;stkvar	_xtoa$5745 @ sp[(-20)+0]
 14402  0162D6  0EEC               	movlw	-20
 14403  0162D8  006F FF8C  F001    	movff	plusw1,btemp
 14404  0162DE  0EED               	movlw	-19
 14405  0162E0  50E3               	movf	plusw1,w,c
 14406  0162E2  1001               	iorwf	btemp^0,w,c
 14407  0162E4  B4D8               	btfsc	status,2,c
 14408  0162E6  D011               	goto	l12699
 14409                           
 14410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 14411                           ;stkvar	_c @ sp[(-20)+12]
 14412  0162E8  0EF8               	movlw	-8
 14413  0162EA  006F FF8F FFE6     	movff	plusw1,postinc1
 14414  0162F0  006F FF8F FFE6     	movff	plusw1,postinc1
 14415  0162F6  ECC0  F0D7         	call	_toupper	;wreg free
 14416                           
 14417                           ;stkvar	_c @ sp[(-20)+12]
 14418  0162FA  0EF8               	movlw	-8
 14419  0162FC  0060  F007  FFE3   	movff	btemp,plusw1
 14420  016302  0EF9               	movlw	-7
 14421  016304  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14422  01630A                     l12699:
 14423                           
 14424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 14425                           ;stkvar	_c @ sp[(-20)+12]
 14426                           ;stkvar	_i @ sp[(-20)+14]
 14427  01630A  0EFA               	movlw	-6
 14428  01630C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14429  016312  0EFB               	movlw	-5
 14430  016314  006F FF8C  F00C    	movff	plusw1,btemp+11
 14431  01631A  0E97               	movlw	low _dbuf
 14432  01631C  240B               	addwf	(btemp+10)^0,w,c
 14433  01631E  6ED9               	movwf	fsr2l,c
 14434  016320  0E02               	movlw	high _dbuf
 14435  016322  200C               	addwfc	(btemp+11)^0,w,c
 14436  016324  6EDA               	movwf	fsr2h,c
 14437  016326  0EF8               	movlw	-8
 14438  016328  006F FF8F FFDF     	movff	plusw1,indf2
 14439                           
 14440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 14441                           ;stkvar	_p @ sp[(-20)+18]
 14442  01632E  50E1               	movf	fsr1l,w,c
 14443  016330  0FFE               	addlw	-2
 14444  016332  6ED9               	movwf	fsr2l,c
 14445  016334  50E2               	movf	fsr1h,w,c
 14446  016336  6EDA               	movwf	fsr2h,c
 14447  016338  0EFF               	movlw	255
 14448  01633A  22DA               	addwfc	fsr2h,f,c
 14449  01633C  06DE               	decf	postinc2,f,c
 14450  01633E  0E00               	movlw	0
 14451  016340  5ADD               	subwfb	postdec2,f,c
 14452                           
 14453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 14454                           ;stkvar	_w @ sp[(-20)+16]
 14455  016342  50E1               	movf	fsr1l,w,c
 14456  016344  0FFC               	addlw	-4
 14457  016346  6ED9               	movwf	fsr2l,c
 14458  016348  50E2               	movf	fsr1h,w,c
 14459  01634A  6EDA               	movwf	fsr2h,c
 14460  01634C  0EFF               	movlw	255
 14461  01634E  22DA               	addwfc	fsr2h,f,c
 14462  016350  06DE               	decf	postinc2,f,c
 14463  016352  0E00               	movlw	0
 14464  016354  5ADD               	subwfb	postdec2,f,c
 14465                           
 14466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 14467  016356  0E04               	movlw	4
 14468  016358  6E0C               	movwf	(btemp+11)^0,c
 14469                           
 14470                           ;stkvar	_n @ sp[(-20)+4]
 14471  01635A  50E1               	movf	fsr1l,w,c
 14472  01635C  0FF0               	addlw	-16
 14473  01635E  6ED9               	movwf	fsr2l,c
 14474  016360  50E2               	movf	fsr1h,w,c
 14475  016362  6EDA               	movwf	fsr2h,c
 14476  016364  0EFF               	movlw	255
 14477  016366  22DA               	addwfc	fsr2h,f,c
 14478  016368  280C               	incf	(btemp+11)^0,w,c
 14479  01636A  52DE               	movf	postinc2,f,c
 14480  01636C  D00F               	goto	u12080
 14481  01636E                     u12085:
 14482  01636E  52DE               	movf	postinc2,f,c
 14483  016370  52DE               	movf	postinc2,f,c
 14484  016372  52DE               	movf	postinc2,f,c
 14485  016374  52DE               	movf	postinc2,f,c
 14486  016376  52DE               	movf	postinc2,f,c
 14487  016378  52DE               	movf	postinc2,f,c
 14488  01637A  90D8               	bcf	status,0,c
 14489  01637C  32DD               	rrcf	postdec2,f,c
 14490  01637E  32DD               	rrcf	postdec2,f,c
 14491  016380  32DD               	rrcf	postdec2,f,c
 14492  016382  32DD               	rrcf	postdec2,f,c
 14493  016384  32DD               	rrcf	postdec2,f,c
 14494  016386  32DD               	rrcf	postdec2,f,c
 14495  016388  32DD               	rrcf	postdec2,f,c
 14496  01638A  32DE               	rrcf	postinc2,f,c
 14497  01638C                     u12080:
 14498  01638C  2EE8               	decfsz	wreg,f,c
 14499  01638E  D7EF               	goto	u12085
 14500  016390                     l12707:
 14501                           
 14502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14503                           ;stkvar	_i @ sp[(-20)+14]
 14504  016390  0EFB               	movlw	-5
 14505  016392  BEE3               	btfsc	plusw1,7,c
 14506  016394  D03A               	goto	u12130
 14507  016396  0EFB               	movlw	-5
 14508  016398  50E3               	movf	plusw1,w,c
 14509  01639A  E108               	bnz	u12090
 14510  01639C  0EFA               	movlw	-6
 14511  01639E  006F FF8C  F001    	movff	plusw1,btemp
 14512  0163A4  0E02               	movlw	2
 14513  0163A6  5E01               	subwf	btemp^0,f,c
 14514  0163A8  A0D8               	btfss	status,0,c
 14515  0163AA  D02F               	goto	u12130
 14516  0163AC                     u12090:
 14517                           
 14518                           ;stkvar	_n @ sp[(-20)+4]
 14519  0163AC  0EF0               	movlw	-16
 14520  0163AE  50E3               	movf	plusw1,w,c
 14521  0163B0  E115               	bnz	u12101
 14522  0163B2  0EF1               	movlw	-15
 14523  0163B4  50E3               	movf	plusw1,w,c
 14524  0163B6  E112               	bnz	u12101
 14525  0163B8  0EF2               	movlw	-14
 14526  0163BA  50E3               	movf	plusw1,w,c
 14527  0163BC  E10F               	bnz	u12101
 14528  0163BE  0EF3               	movlw	-13
 14529  0163C0  50E3               	movf	plusw1,w,c
 14530  0163C2  E10C               	bnz	u12101
 14531  0163C4  0EF4               	movlw	-12
 14532  0163C6  50E3               	movf	plusw1,w,c
 14533  0163C8  E109               	bnz	u12101
 14534  0163CA  0EF5               	movlw	-11
 14535  0163CC  50E3               	movf	plusw1,w,c
 14536  0163CE  E106               	bnz	u12101
 14537  0163D0  0EF6               	movlw	-10
 14538  0163D2  50E3               	movf	plusw1,w,c
 14539  0163D4  E103               	bnz	u12101
 14540  0163D6  0EF7               	movlw	-9
 14541  0163D8  50E3               	movf	plusw1,w,c
 14542  0163DA  A4D8               	btfss	status,2,c
 14543  0163DC                     u12101:
 14544  0163DC  D6EB               	goto	l12675
 14545                           
 14546                           ;stkvar	_p @ sp[(-20)+18]
 14547  0163DE  0EFF               	movlw	-1
 14548  0163E0  BEE3               	btfsc	plusw1,7,c
 14549  0163E2  D007               	goto	u12110
 14550  0163E4  0EFF               	movlw	-1
 14551  0163E6  50E3               	movf	plusw1,w,c
 14552  0163E8  E103               	bnz	u12111
 14553  0163EA  0EFE               	movlw	-2
 14554  0163EC  04E3               	decf	plusw1,w,c
 14555  0163EE  B0D8               	btfsc	status,0,c
 14556  0163F0                     u12111:
 14557  0163F0  D6E1               	goto	l12675
 14558  0163F2                     u12110:
 14559                           
 14560                           ;stkvar	_w @ sp[(-20)+16]
 14561  0163F2  0EFD               	movlw	-3
 14562  0163F4  BEE3               	btfsc	plusw1,7,c
 14563  0163F6  D009               	goto	u12130
 14564  0163F8  0EFD               	movlw	-3
 14565  0163FA  50E3               	movf	plusw1,w,c
 14566  0163FC  E104               	bnz	u12120
 14567  0163FE  0EFC               	movlw	-4
 14568  016400  04E3               	decf	plusw1,w,c
 14569  016402  A0D8               	btfss	status,0,c
 14570  016404  D002               	goto	u12130
 14571  016406                     u12120:
 14572  016406  B23E               	btfsc	_flags^0,1,c
 14573  016408  D6D5               	goto	l12675
 14574  01640A                     u12130:
 14575                           
 14576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 14577  01640A  A83E               	btfss	_flags^0,4,c
 14578  01640C  D036               	goto	l12723
 14579                           
 14580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 14581                           ;stkvar	_i @ sp[(-20)+14]
 14582  01640E  50E1               	movf	fsr1l,w,c
 14583  016410  0FFA               	addlw	-6
 14584  016412  6ED9               	movwf	fsr2l,c
 14585  016414  50E2               	movf	fsr1h,w,c
 14586  016416  6EDA               	movwf	fsr2h,c
 14587  016418  0EFF               	movlw	255
 14588  01641A  22DA               	addwfc	fsr2h,f,c
 14589  01641C  06DE               	decf	postinc2,f,c
 14590  01641E  0E00               	movlw	0
 14591  016420  5ADD               	subwfb	postdec2,f,c
 14592                           
 14593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 14594                           ;stkvar	_x @ sp[(-20)+-11]
 14595                           ;stkvar	_i @ sp[(-20)+14]
 14596  016422  0EFA               	movlw	-6
 14597  016424  006F FF8C  F00B    	movff	plusw1,btemp+10
 14598  01642A  0EFB               	movlw	-5
 14599  01642C  006F FF8C  F00C    	movff	plusw1,btemp+11
 14600  016432  0E97               	movlw	low _dbuf
 14601  016434  240B               	addwf	(btemp+10)^0,w,c
 14602  016436  6ED9               	movwf	fsr2l,c
 14603  016438  0E02               	movlw	high _dbuf
 14604  01643A  200C               	addwfc	(btemp+11)^0,w,c
 14605  01643C  6EDA               	movwf	fsr2h,c
 14606  01643E  0EE1               	movlw	-31
 14607  016440  006F FF8F FFDF     	movff	plusw1,indf2
 14608                           
 14609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 14610                           ;stkvar	_i @ sp[(-20)+14]
 14611  016446  50E1               	movf	fsr1l,w,c
 14612  016448  0FFA               	addlw	-6
 14613  01644A  6ED9               	movwf	fsr2l,c
 14614  01644C  50E2               	movf	fsr1h,w,c
 14615  01644E  6EDA               	movwf	fsr2h,c
 14616  016450  0EFF               	movlw	255
 14617  016452  22DA               	addwfc	fsr2h,f,c
 14618  016454  06DE               	decf	postinc2,f,c
 14619  016456  0E00               	movlw	0
 14620  016458  5ADD               	subwfb	postdec2,f,c
 14621                           
 14622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 14623                           ;stkvar	_i @ sp[(-20)+14]
 14624  01645A  0EFA               	movlw	-6
 14625  01645C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14626  016462  0EFB               	movlw	-5
 14627  016464  006F FF8C  F00C    	movff	plusw1,btemp+11
 14628  01646A  0E97               	movlw	low _dbuf
 14629  01646C  240B               	addwf	(btemp+10)^0,w,c
 14630  01646E  6ED9               	movwf	fsr2l,c
 14631  016470  0E02               	movlw	high _dbuf
 14632  016472  200C               	addwfc	(btemp+11)^0,w,c
 14633  016474  6EDA               	movwf	fsr2h,c
 14634  016476  0E30               	movlw	48
 14635  016478  6EDF               	movwf	indf2,c
 14636  01647A                     l12723:
 14637                           
 14638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 14639                           ;stkvar	_w @ sp[(-20)+16]
 14640  01647A  0EFC               	movlw	-4
 14641  01647C  006F FF8F FFE6     	movff	plusw1,postinc1
 14642  016482  006F FF8F FFE6     	movff	plusw1,postinc1
 14643                           
 14644                           ;stkvar	_i @ sp[(-22)+14]
 14645  016488  0E97               	movlw	low _dbuf
 14646  01648A  6E0B               	movwf	(btemp+10)^0,c
 14647  01648C  0E02               	movlw	high _dbuf
 14648  01648E  6E0C               	movwf	(btemp+11)^0,c
 14649  016490  0EF8               	movlw	-8
 14650  016492  50E3               	movf	plusw1,w,c
 14651  016494  260B               	addwf	(btemp+10)^0,f,c
 14652  016496  0EF9               	movlw	-7
 14653  016498  50E3               	movf	plusw1,w,c
 14654  01649A  220C               	addwfc	(btemp+11)^0,f,c
 14655  01649C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14656  0164A2  0060  F033  FFE6   	movff	btemp+11,postinc1
 14657                           
 14658                           ;stkvar	_fp @ sp[(-24)+-2]
 14659  0164A8  0EE6               	movlw	-26
 14660  0164AA  006F FF8F FFE6     	movff	plusw1,postinc1
 14661  0164B0  006F FF8F FFE6     	movff	plusw1,postinc1
 14662  0164B6  EC90  F0CE         	call	_pad	;wreg free
 14663                           
 14664                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 14665  0164BA  0EE1               	movlw	225
 14666  0164BC  26E1               	addwf	fsr1l,f,c
 14667  0164BE  0EFF               	movlw	255
 14668  0164C0  22E2               	addwfc	fsr1h,f,c
 14669  0164C2  0012               	return		;funcret
 14670  0164C4                     __end_of_xtoa:
 14671                           	opt callstack 0
 14672                           
 14673 ;; *************** function _toupper *****************
 14674 ;; Defined at:
 14675 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 14676 ;; Parameters:    Size  Location     Type
 14677 ;;  c               2  [STACK] int 
 14678 ;; Auto vars:     Size  Location     Type
 14679 ;;		None
 14680 ;; Return value:  Size  Location     Type
 14681 ;;                  2  [STACK] int 
 14682 ;; Registers used:
 14683 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 14684 ;; Tracked objects:
 14685 ;;		On entry : 0/2
 14686 ;;		On exit  : 0/0
 14687 ;;		Unchanged: 0/0
 14688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14693 ;;Total ram usage:        0 bytes
 14694 ;; Hardware stack levels used:    1
 14695 ;; Hardware stack levels required when called:   16
 14696 ;; This function calls:
 14697 ;;		_islower
 14698 ;; This function is called by:
 14699 ;;		_xtoa
 14700 ;; This function uses a reentrant model
 14701 ;;
 14702                           
 14703                           	psect	text54
 14704  01AF80                     __ptext54:
 14705                           	opt callstack 0
 14706  01AF80                     _toupper:
 14707                           	opt callstack 0
 14708                           
 14709                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14710  01AF80  52E6               	movf	postinc1,f,c
 14711  01AF82  52E6               	movf	postinc1,f,c
 14712                           
 14713                           ;stkvar	_c @ sp[(-2)+-2]
 14714                           
 14715                           ;incstack = 0
 14716 ;; hardware stack exceeded
 14717  01AF84  0EFC               	movlw	-4
 14718  01AF86  50E3               	movf	plusw1,w,c
 14719  01AF88  0F9F               	addlw	159
 14720  01AF8A  6E0B               	movwf	(btemp+10)^0,c
 14721  01AF8C  0EFD               	movlw	-3
 14722  01AF8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 14723  01AF94  0EFF               	movlw	255
 14724  01AF96  220C               	addwfc	(btemp+11)^0,f,c
 14725  01AF98  500C               	movf	(btemp+11)^0,w,c
 14726  01AF9A  E106               	bnz	u6340
 14727  01AF9C  0E1A               	movlw	26
 14728  01AF9E  5C0B               	subwf	(btemp+10)^0,w,c
 14729  01AFA0  B0D8               	btfsc	status,0,c
 14730  01AFA2  D002               	goto	u6340
 14731  01AFA4  0E01               	movlw	1
 14732  01AFA6  D001               	goto	u6350
 14733  01AFA8                     u6340:
 14734  01AFA8  0E00               	movlw	0
 14735  01AFAA                     u6350:
 14736  01AFAA  6E0B               	movwf	(btemp+10)^0,c
 14737  01AFAC  6A0C               	clrf	(btemp+11)^0,c
 14738                           
 14739                           ;stkvar	_toupper$6551 @ sp[(-2)+0]
 14740  01AFAE  0EFE               	movlw	-2
 14741  01AFB0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14742  01AFB6  0EFF               	movlw	-1
 14743  01AFB8  0060  F033  FFE3   	movff	btemp+11,plusw1
 14744                           
 14745                           ;stkvar	_toupper$6551 @ sp[(-2)+0]
 14746  01AFBE  0EFE               	movlw	-2
 14747  01AFC0  006F FF8C  F001    	movff	plusw1,btemp
 14748  01AFC6  0EFF               	movlw	-1
 14749  01AFC8  50E3               	movf	plusw1,w,c
 14750  01AFCA  1001               	iorwf	btemp^0,w,c
 14751  01AFCC  B4D8               	btfsc	status,2,c
 14752  01AFCE  D00D               	goto	l8273
 14753                           
 14754                           ;stkvar	_c @ sp[(-2)+-2]
 14755  01AFD0  0EFC               	movlw	-4
 14756  01AFD2  006F FF8C  F001    	movff	plusw1,btemp
 14757  01AFD8  0EFD               	movlw	-3
 14758  01AFDA  006F FF8C  F002    	movff	plusw1,btemp+1
 14759  01AFE0  0E5F               	movlw	95
 14760  01AFE2  1601               	andwf	btemp^0,f,c
 14761  01AFE4  0E00               	movlw	0
 14762  01AFE6  1602               	andwf	(btemp+1)^0,f,c
 14763  01AFE8  D008               	goto	l3560
 14764  01AFEA                     l8273:
 14765                           
 14766                           ;stkvar	_c @ sp[(-2)+-2]
 14767  01AFEA  0EFC               	movlw	-4
 14768  01AFEC  006F FF8C  F001    	movff	plusw1,btemp
 14769  01AFF2  0EFD               	movlw	-3
 14770  01AFF4  006F FF8C  F002    	movff	plusw1,btemp+1
 14771  01AFFA                     l3560:
 14772                           
 14773                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14774  01AFFA  52E5               	movf	postdec1,f,c
 14775  01AFFC  52E5               	movf	postdec1,f,c
 14776  01AFFE  52E5               	movf	postdec1,f,c
 14777  01B000  52E5               	movf	postdec1,f,c
 14778  01B002  0012               	return		;funcret
 14779  01B004                     __end_of_toupper:
 14780                           	opt callstack 0
 14781                           
 14782 ;; *************** function _islower *****************
 14783 ;; Defined at:
 14784 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 14785 ;; Parameters:    Size  Location     Type
 14786 ;;  c               2  [STACK] int 
 14787 ;; Auto vars:     Size  Location     Type
 14788 ;;		None
 14789 ;; Return value:  Size  Location     Type
 14790 ;;                  2  [STACK] int 
 14791 ;; Registers used:
 14792 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14793 ;; Tracked objects:
 14794 ;;		On entry : 0/0
 14795 ;;		On exit  : 0/0
 14796 ;;		Unchanged: 0/0
 14797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14802 ;;Total ram usage:        0 bytes
 14803 ;; Hardware stack levels used:    1
 14804 ;; Hardware stack levels required when called:   15
 14805 ;; This function calls:
 14806 ;;		Nothing
 14807 ;; This function is called by:
 14808 ;;		_toupper
 14809 ;; This function uses a reentrant model
 14810 ;;
 14811                           
 14812                           	psect	text55
 14813  01BE30                     __ptext55:
 14814                           	opt callstack 0
 14815  01BE30                     _islower:
 14816                           	opt callstack 0
 14817                           
 14818                           ;stkvar	_c @ sp[(0)+-2]
 14819                           
 14820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14821                           ;incstack = 0
 14822 ;; hardware stack exceeded
 14823  01BE30  0EFE               	movlw	-2
 14824  01BE32  50E3               	movf	plusw1,w,c
 14825  01BE34  0F9F               	addlw	159
 14826  01BE36  6E0B               	movwf	(btemp+10)^0,c
 14827  01BE38  0EFF               	movlw	-1
 14828  01BE3A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14829  01BE40  0EFF               	movlw	255
 14830  01BE42  220C               	addwfc	(btemp+11)^0,f,c
 14831  01BE44  500C               	movf	(btemp+11)^0,w,c
 14832  01BE46  E106               	bnz	u5980
 14833  01BE48  0E1A               	movlw	26
 14834  01BE4A  5C0B               	subwf	(btemp+10)^0,w,c
 14835  01BE4C  B0D8               	btfsc	status,0,c
 14836  01BE4E  D002               	goto	u5980
 14837  01BE50  0E01               	movlw	1
 14838  01BE52  D001               	goto	u5990
 14839  01BE54                     u5980:
 14840  01BE54  0E00               	movlw	0
 14841  01BE56                     u5990:
 14842  01BE56  6E01               	movwf	btemp^0,c
 14843  01BE58  6A02               	clrf	(btemp+1)^0,c
 14844                           
 14845                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14846  01BE5A  52E5               	movf	postdec1,f,c
 14847  01BE5C  52E5               	movf	postdec1,f,c
 14848  01BE5E  0012               	return		;funcret
 14849  01BE60                     __end_of_islower:
 14850                           	opt callstack 0
 14851                           
 14852 ;; *************** function _isalpha *****************
 14853 ;; Defined at:
 14854 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 14855 ;; Parameters:    Size  Location     Type
 14856 ;;  c               2  [STACK] int 
 14857 ;; Auto vars:     Size  Location     Type
 14858 ;;		None
 14859 ;; Return value:  Size  Location     Type
 14860 ;;                  2  [STACK] int 
 14861 ;; Registers used:
 14862 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 14863 ;; Tracked objects:
 14864 ;;		On entry : 0/0
 14865 ;;		On exit  : 0/0
 14866 ;;		Unchanged: 0/0
 14867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14872 ;;Total ram usage:        0 bytes
 14873 ;; Hardware stack levels used:    1
 14874 ;; Hardware stack levels required when called:   15
 14875 ;; This function calls:
 14876 ;;		Nothing
 14877 ;; This function is called by:
 14878 ;;		_xtoa
 14879 ;; This function uses a reentrant model
 14880 ;;
 14881                           
 14882                           	psect	text56
 14883  01BA16                     __ptext56:
 14884                           	opt callstack 0
 14885  01BA16                     _isalpha:
 14886                           	opt callstack 0
 14887                           
 14888                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14889                           ;incstack = 0
 14890 ;; hardware stack exceeded
 14891  01BA16  0E9F               	movlw	159
 14892  01BA18  6E0B               	movwf	(btemp+10)^0,c
 14893  01BA1A  0EFF               	movlw	255
 14894  01BA1C  6E0C               	movwf	(btemp+11)^0,c
 14895                           
 14896                           ;stkvar	_c @ sp[(0)+-2]
 14897  01BA1E  0EFE               	movlw	-2
 14898  01BA20  006F FF8C  F009    	movff	plusw1,btemp+8
 14899  01BA26  0EFF               	movlw	-1
 14900  01BA28  006F FF8C  F00A    	movff	plusw1,btemp+9
 14901  01BA2E  0E20               	movlw	32
 14902  01BA30  1209               	iorwf	(btemp+8)^0,f,c
 14903  01BA32  0E00               	movlw	0
 14904  01BA34  120A               	iorwf	(btemp+9)^0,f,c
 14905  01BA36  500B               	movf	(btemp+10)^0,w,c
 14906  01BA38  2609               	addwf	(btemp+8)^0,f,c
 14907  01BA3A  500C               	movf	(btemp+11)^0,w,c
 14908  01BA3C  220A               	addwfc	(btemp+9)^0,f,c
 14909  01BA3E  500A               	movf	(btemp+9)^0,w,c
 14910  01BA40  E106               	bnz	u6320
 14911  01BA42  0E1A               	movlw	26
 14912  01BA44  5C09               	subwf	(btemp+8)^0,w,c
 14913  01BA46  B0D8               	btfsc	status,0,c
 14914  01BA48  D002               	goto	u6320
 14915  01BA4A  0E01               	movlw	1
 14916  01BA4C  D001               	goto	u6330
 14917  01BA4E                     u6320:
 14918  01BA4E  0E00               	movlw	0
 14919  01BA50                     u6330:
 14920  01BA50  6E01               	movwf	btemp^0,c
 14921  01BA52  6A02               	clrf	(btemp+1)^0,c
 14922                           
 14923                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14924  01BA54  52E5               	movf	postdec1,f,c
 14925  01BA56  52E5               	movf	postdec1,f,c
 14926  01BA58  0012               	return		;funcret
 14927  01BA5A                     __end_of_isalpha:
 14928                           	opt callstack 0
 14929                           
 14930 ;; *************** function _utoa *****************
 14931 ;; Defined at:
 14932 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14933 ;; Parameters:    Size  Location     Type
 14934 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14935 ;;		 -> f(6), NULL(0), 
 14936 ;;  d               8  [STACK] unsigned long long 
 14937 ;; Auto vars:     Size  Location     Type
 14938 ;;  n               8  [STACK] unsigned long long 
 14939 ;;  i               2  [STACK] int 
 14940 ;;  w               2  [STACK] int 
 14941 ;;  p               2  [STACK] int 
 14942 ;; Return value:  Size  Location     Type
 14943 ;;                  2  [STACK] int 
 14944 ;; Registers used:
 14945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 14946 ;; Tracked objects:
 14947 ;;		On entry : 0/0
 14948 ;;		On exit  : 0/0
 14949 ;;		Unchanged: 0/0
 14950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14955 ;;Total ram usage:        0 bytes
 14956 ;; Hardware stack levels used:    1
 14957 ;; Hardware stack levels required when called:   20
 14958 ;; This function calls:
 14959 ;;		___lodiv
 14960 ;;		___lomod
 14961 ;;		_pad
 14962 ;; This function is called by:
 14963 ;;		_vfpfcnvrt
 14964 ;; This function uses a reentrant model
 14965 ;;
 14966                           
 14967                           	psect	text57
 14968  016830                     __ptext57:
 14969                           	opt callstack 0
 14970  016830                     _utoa:
 14971                           	opt callstack 0
 14972                           
 14973                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 14974  016830  0E0E               	movlw	14
 14975  016832  26E1               	addwf	fsr1l,f,c
 14976  016834  0E00               	movlw	0
 14977  016836  22E2               	addwfc	fsr1h,f,c
 14978                           
 14979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 14980                           
 14981                           ;incstack = 0
 14982 ;; hardware stack exceeded
 14983  016838  AE3D               	btfss	(_prec+1)^0,7,c
 14984                           
 14985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 14986  01683A  923E               	bcf	_flags^0,1,c
 14987                           
 14988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 14989  01683C  BE3D               	btfsc	(_prec+1)^0,7,c
 14990  01683E  D005               	goto	u11900
 14991  016840  503D               	movf	(_prec+1)^0,w,c
 14992  016842  E110               	bnz	l12623
 14993  016844  043C               	decf	_prec^0,w,c
 14994  016846  B0D8               	btfsc	status,0,c
 14995  016848  D00D               	goto	l12623
 14996  01684A                     u11900:
 14997  01684A  0E01               	movlw	1
 14998  01684C  6E0B               	movwf	(btemp+10)^0,c
 14999  01684E  0E00               	movlw	0
 15000  016850  6E0C               	movwf	(btemp+11)^0,c
 15001                           
 15002                           ;stkvar	_p @ sp[(-14)+12]
 15003  016852  0EFE               	movlw	-2
 15004  016854  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15005  01685A  0EFF               	movlw	-1
 15006  01685C  0060  F033  FFE3   	movff	btemp+11,plusw1
 15007  016862  D008               	goto	l2378
 15008  016864                     l12623:
 15009                           
 15010                           ;stkvar	_p @ sp[(-14)+12]
 15011  016864  0EFE               	movlw	-2
 15012  016866  0060  F0F3  FFE3   	movff	_prec,plusw1
 15013  01686C  0EFF               	movlw	-1
 15014  01686E  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 15015  016874                     l2378:
 15016                           
 15017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 15018                           ;stkvar	_w @ sp[(-14)+10]
 15019  016874  0EFC               	movlw	-4
 15020  016876  0060  F0EB  FFE3   	movff	_width,plusw1
 15021  01687C  0EFD               	movlw	-3
 15022  01687E  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15023                           
 15024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 15025                           ;stkvar	_d @ sp[(-14)+-10]
 15026  016884  0EE8               	movlw	232
 15027  016886  24E1               	addwf	fsr1l,w,c
 15028  016888  6ED9               	movwf	fsr2l,c
 15029  01688A  0EFF               	movlw	255
 15030  01688C  20E2               	addwfc	fsr1h,w,c
 15031  01688E  6EDA               	movwf	fsr2h,c
 15032                           
 15033                           ;stkvar	_n @ sp[(-14)+0]
 15034  016890  0E08               	movlw	8
 15035  016892  6E01               	movwf	btemp^0,c
 15036  016894  0EF2               	movlw	-14
 15037  016896                     us1191999:
 15038  016896  006F FF7B FFE3     	movff	postinc2,plusw1
 15039  01689C  28E8               	incf	wreg,w,c
 15040  01689E  2E01               	decfsz	btemp^0,f,c
 15041  0168A0  D7FA               	bra	us1191999
 15042                           
 15043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 15044  0168A2  0E4F               	movlw	79
 15045  0168A4  6E0B               	movwf	(btemp+10)^0,c
 15046  0168A6  0E00               	movlw	0
 15047  0168A8  6E0C               	movwf	(btemp+11)^0,c
 15048                           
 15049                           ;stkvar	_i @ sp[(-14)+8]
 15050  0168AA  0EFA               	movlw	-6
 15051  0168AC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15052  0168B2  0EFB               	movlw	-5
 15053  0168B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15054                           
 15055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 15056  0168BA  0102               	movlb	2	; () banked
 15057  0168BC  6BE6               	clrf	(_dbuf+79)& (0+255),b
 15058                           
 15059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 15060  0168BE  D0FB               	goto	l12641
 15061  0168C0                     l12631:
 15062                           
 15063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 15064                           ;stkvar	_i @ sp[(-14)+8]
 15065  0168C0  50E1               	movf	fsr1l,w,c
 15066  0168C2  0FFA               	addlw	-6
 15067  0168C4  6ED9               	movwf	fsr2l,c
 15068  0168C6  50E2               	movf	fsr1h,w,c
 15069  0168C8  6EDA               	movwf	fsr2h,c
 15070  0168CA  0EFF               	movlw	255
 15071  0168CC  22DA               	addwfc	fsr2h,f,c
 15072  0168CE  06DE               	decf	postinc2,f,c
 15073  0168D0  0E00               	movlw	0
 15074  0168D2  5ADD               	subwfb	postdec2,f,c
 15075                           
 15076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 15077  0168D4  0E0A               	movlw	10
 15078  0168D6  6EE6               	movwf	postinc1,c
 15079  0168D8  0E00               	movlw	0
 15080  0168DA  6EE6               	movwf	postinc1,c
 15081  0168DC  0E00               	movlw	0
 15082  0168DE  6EE6               	movwf	postinc1,c
 15083  0168E0  0E00               	movlw	0
 15084  0168E2  6EE6               	movwf	postinc1,c
 15085  0168E4  0E00               	movlw	0
 15086  0168E6  6EE6               	movwf	postinc1,c
 15087  0168E8  0E00               	movlw	0
 15088  0168EA  6EE6               	movwf	postinc1,c
 15089  0168EC  0E00               	movlw	0
 15090  0168EE  6EE6               	movwf	postinc1,c
 15091  0168F0  0E00               	movlw	0
 15092  0168F2  6EE6               	movwf	postinc1,c
 15093                           
 15094                           ;stkvar	_n @ sp[(-22)+0]
 15095  0168F4  50E1               	movf	fsr1l,w,c
 15096  0168F6  0FEA               	addlw	-22
 15097  0168F8  6ED9               	movwf	fsr2l,c
 15098  0168FA  50E2               	movf	fsr1h,w,c
 15099  0168FC  6EDA               	movwf	fsr2h,c
 15100  0168FE  0EFF               	movlw	255
 15101  016900  22DA               	addwfc	fsr2h,f,c
 15102  016902  006F FF7B FFE6     	movff	postinc2,postinc1
 15103  016908  006F FF7B FFE6     	movff	postinc2,postinc1
 15104  01690E  006F FF7B FFE6     	movff	postinc2,postinc1
 15105  016914  006F FF7B FFE6     	movff	postinc2,postinc1
 15106  01691A  006F FF7B FFE6     	movff	postinc2,postinc1
 15107  016920  006F FF7B FFE6     	movff	postinc2,postinc1
 15108  016926  006F FF7B FFE6     	movff	postinc2,postinc1
 15109  01692C  006F FF7B FFE6     	movff	postinc2,postinc1
 15110  016932  EC14  F0CB         	call	___lomod	;wreg free
 15111  016936  52E5               	movf	postdec1,f,c
 15112  016938  006F FF9C  F018    	movff	indf1,btemp+23
 15113  01693E  52E5               	movf	postdec1,f,c
 15114  016940  006F FF9C  F017    	movff	indf1,btemp+22
 15115  016946  52E5               	movf	postdec1,f,c
 15116  016948  006F FF9C  F016    	movff	indf1,btemp+21
 15117  01694E  52E5               	movf	postdec1,f,c
 15118  016950  006F FF9C  F015    	movff	indf1,btemp+20
 15119  016956  52E5               	movf	postdec1,f,c
 15120  016958  006F FF9C  F014    	movff	indf1,btemp+19
 15121  01695E  52E5               	movf	postdec1,f,c
 15122  016960  006F FF9C  F013    	movff	indf1,btemp+18
 15123  016966  52E5               	movf	postdec1,f,c
 15124  016968  006F FF9C  F012    	movff	indf1,btemp+17
 15125  01696E  52E5               	movf	postdec1,f,c
 15126  016970  006F FF9C  F011    	movff	indf1,btemp+16
 15127  016976  0EF8               	movlw	248
 15128  016978  26E1               	addwf	fsr1l,f,c
 15129  01697A  0EFF               	movlw	255
 15130  01697C  22E2               	addwfc	fsr1h,f,c
 15131  01697E  0E30               	movlw	48
 15132  016980  2611               	addwf	(btemp+16)^0,f,c
 15133                           
 15134                           ;stkvar	_i @ sp[(-14)+8]
 15135  016982  0EFA               	movlw	-6
 15136  016984  006F FF8C  F00B    	movff	plusw1,btemp+10
 15137  01698A  0EFB               	movlw	-5
 15138  01698C  006F FF8C  F00C    	movff	plusw1,btemp+11
 15139  016992  0E97               	movlw	low _dbuf
 15140  016994  240B               	addwf	(btemp+10)^0,w,c
 15141  016996  6ED9               	movwf	fsr2l,c
 15142  016998  0E02               	movlw	high _dbuf
 15143  01699A  200C               	addwfc	(btemp+11)^0,w,c
 15144  01699C  6EDA               	movwf	fsr2h,c
 15145  01699E  0060  F047  FFDF   	movff	btemp+16,indf2
 15146                           
 15147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 15148                           ;stkvar	_p @ sp[(-14)+12]
 15149  0169A4  50E1               	movf	fsr1l,w,c
 15150  0169A6  0FFE               	addlw	-2
 15151  0169A8  6ED9               	movwf	fsr2l,c
 15152  0169AA  50E2               	movf	fsr1h,w,c
 15153  0169AC  6EDA               	movwf	fsr2h,c
 15154  0169AE  0EFF               	movlw	255
 15155  0169B0  22DA               	addwfc	fsr2h,f,c
 15156  0169B2  06DE               	decf	postinc2,f,c
 15157  0169B4  0E00               	movlw	0
 15158  0169B6  5ADD               	subwfb	postdec2,f,c
 15159                           
 15160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 15161                           ;stkvar	_w @ sp[(-14)+10]
 15162  0169B8  50E1               	movf	fsr1l,w,c
 15163  0169BA  0FFC               	addlw	-4
 15164  0169BC  6ED9               	movwf	fsr2l,c
 15165  0169BE  50E2               	movf	fsr1h,w,c
 15166  0169C0  6EDA               	movwf	fsr2h,c
 15167  0169C2  0EFF               	movlw	255
 15168  0169C4  22DA               	addwfc	fsr2h,f,c
 15169  0169C6  06DE               	decf	postinc2,f,c
 15170  0169C8  0E00               	movlw	0
 15171  0169CA  5ADD               	subwfb	postdec2,f,c
 15172                           
 15173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 15174  0169CC  0E0A               	movlw	10
 15175  0169CE  6EE6               	movwf	postinc1,c
 15176  0169D0  0E00               	movlw	0
 15177  0169D2  6EE6               	movwf	postinc1,c
 15178  0169D4  0E00               	movlw	0
 15179  0169D6  6EE6               	movwf	postinc1,c
 15180  0169D8  0E00               	movlw	0
 15181  0169DA  6EE6               	movwf	postinc1,c
 15182  0169DC  0E00               	movlw	0
 15183  0169DE  6EE6               	movwf	postinc1,c
 15184  0169E0  0E00               	movlw	0
 15185  0169E2  6EE6               	movwf	postinc1,c
 15186  0169E4  0E00               	movlw	0
 15187  0169E6  6EE6               	movwf	postinc1,c
 15188  0169E8  0E00               	movlw	0
 15189  0169EA  6EE6               	movwf	postinc1,c
 15190                           
 15191                           ;stkvar	_n @ sp[(-22)+0]
 15192  0169EC  50E1               	movf	fsr1l,w,c
 15193  0169EE  0FEA               	addlw	-22
 15194  0169F0  6ED9               	movwf	fsr2l,c
 15195  0169F2  50E2               	movf	fsr1h,w,c
 15196  0169F4  6EDA               	movwf	fsr2h,c
 15197  0169F6  0EFF               	movlw	255
 15198  0169F8  22DA               	addwfc	fsr2h,f,c
 15199  0169FA  006F FF7B FFE6     	movff	postinc2,postinc1
 15200  016A00  006F FF7B FFE6     	movff	postinc2,postinc1
 15201  016A06  006F FF7B FFE6     	movff	postinc2,postinc1
 15202  016A0C  006F FF7B FFE6     	movff	postinc2,postinc1
 15203  016A12  006F FF7B FFE6     	movff	postinc2,postinc1
 15204  016A18  006F FF7B FFE6     	movff	postinc2,postinc1
 15205  016A1E  006F FF7B FFE6     	movff	postinc2,postinc1
 15206  016A24  006F FF7B FFE6     	movff	postinc2,postinc1
 15207  016A2A  EC91  F0C7         	call	___lodiv	;wreg free
 15208  016A2E  52E5               	movf	postdec1,f,c
 15209  016A30  006F FF9C  F018    	movff	indf1,btemp+23
 15210  016A36  52E5               	movf	postdec1,f,c
 15211  016A38  006F FF9C  F017    	movff	indf1,btemp+22
 15212  016A3E  52E5               	movf	postdec1,f,c
 15213  016A40  006F FF9C  F016    	movff	indf1,btemp+21
 15214  016A46  52E5               	movf	postdec1,f,c
 15215  016A48  006F FF9C  F015    	movff	indf1,btemp+20
 15216  016A4E  52E5               	movf	postdec1,f,c
 15217  016A50  006F FF9C  F014    	movff	indf1,btemp+19
 15218  016A56  52E5               	movf	postdec1,f,c
 15219  016A58  006F FF9C  F013    	movff	indf1,btemp+18
 15220  016A5E  52E5               	movf	postdec1,f,c
 15221  016A60  006F FF9C  F012    	movff	indf1,btemp+17
 15222  016A66  52E5               	movf	postdec1,f,c
 15223  016A68  006F FF9C  F011    	movff	indf1,btemp+16
 15224  016A6E  0EF8               	movlw	248
 15225  016A70  26E1               	addwf	fsr1l,f,c
 15226  016A72  0EFF               	movlw	255
 15227  016A74  22E2               	addwfc	fsr1h,f,c
 15228                           
 15229                           ;stkvar	_n @ sp[(-14)+0]
 15230  016A76  0EF2               	movlw	-14
 15231  016A78  0060  F047  FFE3   	movff	btemp+16,plusw1
 15232  016A7E  0EF3               	movlw	-13
 15233  016A80  0060  F04B  FFE3   	movff	btemp+17,plusw1
 15234  016A86  0EF4               	movlw	-12
 15235  016A88  0060  F04F  FFE3   	movff	btemp+18,plusw1
 15236  016A8E  0EF5               	movlw	-11
 15237  016A90  0060  F053  FFE3   	movff	btemp+19,plusw1
 15238  016A96  0EF6               	movlw	-10
 15239  016A98  0060  F057  FFE3   	movff	btemp+20,plusw1
 15240  016A9E  0EF7               	movlw	-9
 15241  016AA0  0060  F05B  FFE3   	movff	btemp+21,plusw1
 15242  016AA6  0EF8               	movlw	-8
 15243  016AA8  0060  F05F  FFE3   	movff	btemp+22,plusw1
 15244  016AAE  0EF9               	movlw	-7
 15245  016AB0  0060  F063  FFE3   	movff	btemp+23,plusw1
 15246  016AB6                     l12641:
 15247                           
 15248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 15249                           ;stkvar	_i @ sp[(-14)+8]
 15250  016AB6  0EFA               	movlw	-6
 15251  016AB8  006F FF8C  F001    	movff	plusw1,btemp
 15252  016ABE  0EFB               	movlw	-5
 15253  016AC0  50E3               	movf	plusw1,w,c
 15254  016AC2  1001               	iorwf	btemp^0,w,c
 15255  016AC4  B4D8               	btfsc	status,2,c
 15256  016AC6  D02F               	goto	u11960
 15257                           
 15258                           ;stkvar	_n @ sp[(-14)+0]
 15259  016AC8  0EF2               	movlw	-14
 15260  016ACA  50E3               	movf	plusw1,w,c
 15261  016ACC  E115               	bnz	u11931
 15262  016ACE  0EF3               	movlw	-13
 15263  016AD0  50E3               	movf	plusw1,w,c
 15264  016AD2  E112               	bnz	u11931
 15265  016AD4  0EF4               	movlw	-12
 15266  016AD6  50E3               	movf	plusw1,w,c
 15267  016AD8  E10F               	bnz	u11931
 15268  016ADA  0EF5               	movlw	-11
 15269  016ADC  50E3               	movf	plusw1,w,c
 15270  016ADE  E10C               	bnz	u11931
 15271  016AE0  0EF6               	movlw	-10
 15272  016AE2  50E3               	movf	plusw1,w,c
 15273  016AE4  E109               	bnz	u11931
 15274  016AE6  0EF7               	movlw	-9
 15275  016AE8  50E3               	movf	plusw1,w,c
 15276  016AEA  E106               	bnz	u11931
 15277  016AEC  0EF8               	movlw	-8
 15278  016AEE  50E3               	movf	plusw1,w,c
 15279  016AF0  E103               	bnz	u11931
 15280  016AF2  0EF9               	movlw	-7
 15281  016AF4  50E3               	movf	plusw1,w,c
 15282  016AF6  A4D8               	btfss	status,2,c
 15283  016AF8                     u11931:
 15284  016AF8  D6E3               	goto	l12631
 15285                           
 15286                           ;stkvar	_p @ sp[(-14)+12]
 15287  016AFA  0EFF               	movlw	-1
 15288  016AFC  BEE3               	btfsc	plusw1,7,c
 15289  016AFE  D007               	goto	u11940
 15290  016B00  0EFF               	movlw	-1
 15291  016B02  50E3               	movf	plusw1,w,c
 15292  016B04  E103               	bnz	u11941
 15293  016B06  0EFE               	movlw	-2
 15294  016B08  04E3               	decf	plusw1,w,c
 15295  016B0A  B0D8               	btfsc	status,0,c
 15296  016B0C                     u11941:
 15297  016B0C  D6D9               	goto	l12631
 15298  016B0E                     u11940:
 15299                           
 15300                           ;stkvar	_w @ sp[(-14)+10]
 15301  016B0E  0EFD               	movlw	-3
 15302  016B10  BEE3               	btfsc	plusw1,7,c
 15303  016B12  D009               	goto	u11960
 15304  016B14  0EFD               	movlw	-3
 15305  016B16  50E3               	movf	plusw1,w,c
 15306  016B18  E104               	bnz	u11950
 15307  016B1A  0EFC               	movlw	-4
 15308  016B1C  04E3               	decf	plusw1,w,c
 15309  016B1E  A0D8               	btfss	status,0,c
 15310  016B20  D002               	goto	u11960
 15311  016B22                     u11950:
 15312  016B22  B23E               	btfsc	_flags^0,1,c
 15313  016B24  D6CD               	goto	l12631
 15314  016B26                     u11960:
 15315                           
 15316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 15317                           ;stkvar	_w @ sp[(-14)+10]
 15318  016B26  0EFC               	movlw	-4
 15319  016B28  006F FF8F FFE6     	movff	plusw1,postinc1
 15320  016B2E  006F FF8F FFE6     	movff	plusw1,postinc1
 15321                           
 15322                           ;stkvar	_i @ sp[(-16)+8]
 15323  016B34  0E97               	movlw	low _dbuf
 15324  016B36  6E0B               	movwf	(btemp+10)^0,c
 15325  016B38  0E02               	movlw	high _dbuf
 15326  016B3A  6E0C               	movwf	(btemp+11)^0,c
 15327  016B3C  0EF8               	movlw	-8
 15328  016B3E  50E3               	movf	plusw1,w,c
 15329  016B40  260B               	addwf	(btemp+10)^0,f,c
 15330  016B42  0EF9               	movlw	-7
 15331  016B44  50E3               	movf	plusw1,w,c
 15332  016B46  220C               	addwfc	(btemp+11)^0,f,c
 15333  016B48  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15334  016B4E  0060  F033  FFE6   	movff	btemp+11,postinc1
 15335                           
 15336                           ;stkvar	_fp @ sp[(-18)+-2]
 15337  016B54  0EEC               	movlw	-20
 15338  016B56  006F FF8F FFE6     	movff	plusw1,postinc1
 15339  016B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 15340  016B62  EC90  F0CE         	call	_pad	;wreg free
 15341                           
 15342                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 15343  016B66  0EE8               	movlw	232
 15344  016B68  26E1               	addwf	fsr1l,f,c
 15345  016B6A  0EFF               	movlw	255
 15346  016B6C  22E2               	addwfc	fsr1h,f,c
 15347  016B6E  0012               	return		;funcret
 15348  016B70                     __end_of_utoa:
 15349                           	opt callstack 0
 15350                           
 15351 ;; *************** function ___lomod *****************
 15352 ;; Defined at:
 15353 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 15354 ;; Parameters:    Size  Location     Type
 15355 ;;  dividend        8  [STACK] unsigned long long 
 15356 ;;  divisor         8  [STACK] unsigned long long 
 15357 ;; Auto vars:     Size  Location     Type
 15358 ;;  counter         1  [STACK] unsigned char 
 15359 ;; Return value:  Size  Location     Type
 15360 ;;                  8  [STACK] unsigned long long 
 15361 ;; Registers used:
 15362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 15363 ;; Tracked objects:
 15364 ;;		On entry : 0/2
 15365 ;;		On exit  : 0/0
 15366 ;;		Unchanged: 0/0
 15367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15372 ;;Total ram usage:        0 bytes
 15373 ;; Hardware stack levels used:    1
 15374 ;; Hardware stack levels required when called:   15
 15375 ;; This function calls:
 15376 ;;		Nothing
 15377 ;; This function is called by:
 15378 ;;		_utoa
 15379 ;; This function uses a reentrant model
 15380 ;;
 15381                           
 15382                           	psect	text58
 15383  019628                     __ptext58:
 15384                           	opt callstack 0
 15385  019628                     ___lomod:
 15386                           	opt callstack 0
 15387                           
 15388                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 15389  019628  52E6               	movf	postinc1,f,c
 15390                           
 15391                           ;stkvar	_divisor @ sp[(-1)+-16]
 15392                           
 15393                           ;incstack = 0
 15394 ;; hardware stack exceeded
 15395  01962A  0EEF               	movlw	-17
 15396  01962C  50E3               	movf	plusw1,w,c
 15397  01962E  E116               	bnz	u7470
 15398  019630  0EF0               	movlw	-16
 15399  019632  50E3               	movf	plusw1,w,c
 15400  019634  E113               	bnz	u7470
 15401  019636  0EF1               	movlw	-15
 15402  019638  50E3               	movf	plusw1,w,c
 15403  01963A  E110               	bnz	u7470
 15404  01963C  0EF2               	movlw	-14
 15405  01963E  50E3               	movf	plusw1,w,c
 15406  019640  E10D               	bnz	u7470
 15407  019642  0EF3               	movlw	-13
 15408  019644  50E3               	movf	plusw1,w,c
 15409  019646  E10A               	bnz	u7470
 15410  019648  0EF4               	movlw	-12
 15411  01964A  50E3               	movf	plusw1,w,c
 15412  01964C  E107               	bnz	u7470
 15413  01964E  0EF5               	movlw	-11
 15414  019650  50E3               	movf	plusw1,w,c
 15415  019652  E104               	bnz	u7470
 15416  019654  0EF6               	movlw	-10
 15417  019656  50E3               	movf	plusw1,w,c
 15418  019658  B4D8               	btfsc	status,2,c
 15419  01965A  D075               	goto	u7500
 15420  01965C                     u7470:
 15421                           
 15422                           ;stkvar	_counter @ sp[(-1)+0]
 15423  01965C  0EFF               	movlw	-1
 15424  01965E  6AE3               	clrf	plusw1,c
 15425  019660  D012               	goto	L15
 15426  019662                     l8883:
 15427                           
 15428                           ;stkvar	_divisor @ sp[(-1)+-16]
 15429  019662  90D8               	bcf	status,0,c
 15430  019664  0EEF               	movlw	-17
 15431  019666  36E3               	rlcf	plusw1,f,c
 15432  019668  0EF0               	movlw	-16
 15433  01966A  36E3               	rlcf	plusw1,f,c
 15434  01966C  0EF1               	movlw	-15
 15435  01966E  36E3               	rlcf	plusw1,f,c
 15436  019670  0EF2               	movlw	-14
 15437  019672  36E3               	rlcf	plusw1,f,c
 15438  019674  0EF3               	movlw	-13
 15439  019676  36E3               	rlcf	plusw1,f,c
 15440  019678  0EF4               	movlw	-12
 15441  01967A  36E3               	rlcf	plusw1,f,c
 15442  01967C  0EF5               	movlw	-11
 15443  01967E  36E3               	rlcf	plusw1,f,c
 15444  019680  0EF6               	movlw	-10
 15445  019682  36E3               	rlcf	plusw1,f,c
 15446                           
 15447                           ;stkvar	_counter @ sp[(-1)+0]
 15448  019684  0EFF               	movlw	-1
 15449  019686                     L15:
 15450  019686  2AE3               	incf	plusw1,f,c
 15451                           
 15452                           ;stkvar	_divisor @ sp[(-1)+-16]
 15453  019688  0EF6               	movlw	-10
 15454  01968A  AEE3               	btfss	plusw1,7,c
 15455  01968C  D7EA               	goto	l8883
 15456  01968E                     u7480:
 15457                           
 15458                           ;stkvar	_divisor @ sp[(-1)+-16]
 15459                           ;stkvar	_dividend @ sp[(-1)+-8]
 15460  01968E  50E1               	movf	fsr1l,w,c
 15461  019690  0FF7               	addlw	-9
 15462  019692  6ED9               	movwf	fsr2l,c
 15463  019694  50E2               	movf	fsr1h,w,c
 15464  019696  6EDA               	movwf	fsr2h,c
 15465  019698  0EFF               	movlw	255
 15466  01969A  22DA               	addwfc	fsr2h,f,c
 15467  01969C  0EEF               	movlw	-17
 15468  01969E  50E3               	movf	plusw1,w,c
 15469  0196A0  5CDE               	subwf	postinc2,w,c
 15470  0196A2  0EF0               	movlw	-16
 15471  0196A4  50E3               	movf	plusw1,w,c
 15472  0196A6  58DE               	subwfb	postinc2,w,c
 15473  0196A8  0EF1               	movlw	-15
 15474  0196AA  50E3               	movf	plusw1,w,c
 15475  0196AC  58DE               	subwfb	postinc2,w,c
 15476  0196AE  0EF2               	movlw	-14
 15477  0196B0  50E3               	movf	plusw1,w,c
 15478  0196B2  58DE               	subwfb	postinc2,w,c
 15479  0196B4  0EF3               	movlw	-13
 15480  0196B6  50E3               	movf	plusw1,w,c
 15481  0196B8  58DE               	subwfb	postinc2,w,c
 15482  0196BA  0EF4               	movlw	-12
 15483  0196BC  50E3               	movf	plusw1,w,c
 15484  0196BE  58DE               	subwfb	postinc2,w,c
 15485  0196C0  0EF5               	movlw	-11
 15486  0196C2  50E3               	movf	plusw1,w,c
 15487  0196C4  58DE               	subwfb	postinc2,w,c
 15488  0196C6  0EF6               	movlw	-10
 15489  0196C8  50E3               	movf	plusw1,w,c
 15490  0196CA  58DE               	subwfb	postinc2,w,c
 15491  0196CC  A0D8               	btfss	status,0,c
 15492  0196CE  D01F               	goto	l8891
 15493                           
 15494                           ;stkvar	_divisor @ sp[(-1)+-16]
 15495                           ;stkvar	_dividend @ sp[(-1)+-8]
 15496  0196D0  50E1               	movf	fsr1l,w,c
 15497  0196D2  0FF7               	addlw	-9
 15498  0196D4  6ED9               	movwf	fsr2l,c
 15499  0196D6  50E2               	movf	fsr1h,w,c
 15500  0196D8  6EDA               	movwf	fsr2h,c
 15501  0196DA  0EFF               	movlw	255
 15502  0196DC  22DA               	addwfc	fsr2h,f,c
 15503  0196DE  0EEF               	movlw	-17
 15504  0196E0  50E3               	movf	plusw1,w,c
 15505  0196E2  5EDE               	subwf	postinc2,f,c
 15506  0196E4  0EF0               	movlw	-16
 15507  0196E6  50E3               	movf	plusw1,w,c
 15508  0196E8  5ADE               	subwfb	postinc2,f,c
 15509  0196EA  0EF1               	movlw	-15
 15510  0196EC  50E3               	movf	plusw1,w,c
 15511  0196EE  5ADE               	subwfb	postinc2,f,c
 15512  0196F0  0EF2               	movlw	-14
 15513  0196F2  50E3               	movf	plusw1,w,c
 15514  0196F4  5ADE               	subwfb	postinc2,f,c
 15515  0196F6  0EF3               	movlw	-13
 15516  0196F8  50E3               	movf	plusw1,w,c
 15517  0196FA  5ADE               	subwfb	postinc2,f,c
 15518  0196FC  0EF4               	movlw	-12
 15519  0196FE  50E3               	movf	plusw1,w,c
 15520  019700  5ADE               	subwfb	postinc2,f,c
 15521  019702  0EF5               	movlw	-11
 15522  019704  50E3               	movf	plusw1,w,c
 15523  019706  5ADE               	subwfb	postinc2,f,c
 15524  019708  0EF6               	movlw	-10
 15525  01970A  50E3               	movf	plusw1,w,c
 15526  01970C  5ADE               	subwfb	postinc2,f,c
 15527  01970E                     l8891:
 15528                           
 15529                           ;stkvar	_divisor @ sp[(-1)+-16]
 15530  01970E  90D8               	bcf	status,0,c
 15531  019710  0EF6               	movlw	-10
 15532  019712  32E3               	rrcf	plusw1,f,c
 15533  019714  0EF5               	movlw	-11
 15534  019716  32E3               	rrcf	plusw1,f,c
 15535  019718  0EF4               	movlw	-12
 15536  01971A  32E3               	rrcf	plusw1,f,c
 15537  01971C  0EF3               	movlw	-13
 15538  01971E  32E3               	rrcf	plusw1,f,c
 15539  019720  0EF2               	movlw	-14
 15540  019722  32E3               	rrcf	plusw1,f,c
 15541  019724  0EF1               	movlw	-15
 15542  019726  32E3               	rrcf	plusw1,f,c
 15543  019728  0EF0               	movlw	-16
 15544  01972A  32E3               	rrcf	plusw1,f,c
 15545  01972C  0EEF               	movlw	-17
 15546  01972E  32E3               	rrcf	plusw1,f,c
 15547                           
 15548                           ;stkvar	_counter @ sp[(-1)+0]
 15549  019730  0EFF               	movlw	-1
 15550  019732  50E3               	movf	plusw1,w,c
 15551  019734  6E01               	movwf	btemp^0,c
 15552  019736  0E01               	movlw	1
 15553  019738  5E01               	subwf	btemp^0,f,c
 15554  01973A  0EFF               	movlw	-1
 15555  01973C  0060  F007  FFE3   	movff	btemp,plusw1
 15556  019742  A4D8               	btfss	status,2,c
 15557  019744  D7A4               	goto	u7480
 15558  019746                     u7500:
 15559                           
 15560                           ;stkvar	_dividend @ sp[(-1)+-8]
 15561  019746  0EF7               	movlw	247
 15562  019748  24E1               	addwf	fsr1l,w,c
 15563  01974A  6ED9               	movwf	fsr2l,c
 15564  01974C  0EFF               	movlw	255
 15565  01974E  20E2               	addwfc	fsr1h,w,c
 15566  019750  6EDA               	movwf	fsr2h,c
 15567                           
 15568                           ;stkvar	?___lomod @ sp[(-1)+-8]
 15569  019752  0E08               	movlw	8
 15570  019754  6E01               	movwf	btemp^0,c
 15571  019756  0EF7               	movlw	-9
 15572  019758                     us751999:
 15573  019758  006F FF7B FFE3     	movff	postinc2,plusw1
 15574  01975E  28E8               	incf	wreg,w,c
 15575  019760  2E01               	decfsz	btemp^0,f,c
 15576  019762  D7FA               	bra	us751999
 15577                           
 15578                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 15579  019764  52E5               	movf	postdec1,f,c
 15580  019766  0012               	return		;funcret
 15581  019768                     __end_of___lomod:
 15582                           	opt callstack 0
 15583                           
 15584 ;; *************** function ___lodiv *****************
 15585 ;; Defined at:
 15586 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 15587 ;; Parameters:    Size  Location     Type
 15588 ;;  dividend        8  [STACK] unsigned long long 
 15589 ;;  divisor         8  [STACK] unsigned long long 
 15590 ;; Auto vars:     Size  Location     Type
 15591 ;;  quotient        8  [STACK] unsigned long long 
 15592 ;;  counter         1  [STACK] unsigned char 
 15593 ;; Return value:  Size  Location     Type
 15594 ;;                  8  [STACK] unsigned long long 
 15595 ;; Registers used:
 15596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 15597 ;; Tracked objects:
 15598 ;;		On entry : 0/2
 15599 ;;		On exit  : 0/0
 15600 ;;		Unchanged: 0/0
 15601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15606 ;;Total ram usage:        0 bytes
 15607 ;; Hardware stack levels used:    1
 15608 ;; Hardware stack levels required when called:   15
 15609 ;; This function calls:
 15610 ;;		Nothing
 15611 ;; This function is called by:
 15612 ;;		_utoa
 15613 ;; This function uses a reentrant model
 15614 ;;
 15615                           
 15616                           	psect	text59
 15617  018F22                     __ptext59:
 15618                           	opt callstack 0
 15619  018F22                     ___lodiv:
 15620                           	opt callstack 0
 15621                           
 15622                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 15623  018F22  0E09               	movlw	9
 15624  018F24  26E1               	addwf	fsr1l,f,c
 15625  018F26  0E00               	movlw	0
 15626  018F28  22E2               	addwfc	fsr1h,f,c
 15627                           
 15628                           ;stkvar	_quotient @ sp[(-9)+0]
 15629                           
 15630                           ;incstack = 0
 15631 ;; hardware stack exceeded
 15632  018F2A  0E07               	movlw	7
 15633  018F2C  6E01               	movwf	btemp^0,c
 15634  018F2E  0EF7               	movlw	-9
 15635  018F30                     u7411:
 15636  018F30  6AE3               	clrf	plusw1,c
 15637  018F32  2AE8               	incf	wreg,f,c
 15638  018F34  0601               	decf	btemp^0,f,c
 15639  018F36  E2FC               	bc	u7411
 15640                           
 15641                           ;stkvar	_divisor @ sp[(-9)+-16]
 15642  018F38  0EE7               	movlw	-25
 15643  018F3A  50E3               	movf	plusw1,w,c
 15644  018F3C  E116               	bnz	u7420
 15645  018F3E  0EE8               	movlw	-24
 15646  018F40  50E3               	movf	plusw1,w,c
 15647  018F42  E113               	bnz	u7420
 15648  018F44  0EE9               	movlw	-23
 15649  018F46  50E3               	movf	plusw1,w,c
 15650  018F48  E110               	bnz	u7420
 15651  018F4A  0EEA               	movlw	-22
 15652  018F4C  50E3               	movf	plusw1,w,c
 15653  018F4E  E10D               	bnz	u7420
 15654  018F50  0EEB               	movlw	-21
 15655  018F52  50E3               	movf	plusw1,w,c
 15656  018F54  E10A               	bnz	u7420
 15657  018F56  0EEC               	movlw	-20
 15658  018F58  50E3               	movf	plusw1,w,c
 15659  018F5A  E107               	bnz	u7420
 15660  018F5C  0EED               	movlw	-19
 15661  018F5E  50E3               	movf	plusw1,w,c
 15662  018F60  E104               	bnz	u7420
 15663  018F62  0EEE               	movlw	-18
 15664  018F64  50E3               	movf	plusw1,w,c
 15665  018F66  B4D8               	btfsc	status,2,c
 15666  018F68  D088               	goto	u7450
 15667  018F6A                     u7420:
 15668                           
 15669                           ;stkvar	_counter @ sp[(-9)+8]
 15670  018F6A  0EFF               	movlw	-1
 15671  018F6C  6AE3               	clrf	plusw1,c
 15672  018F6E  D012               	goto	L16
 15673  018F70                     l8859:
 15674                           
 15675                           ;stkvar	_divisor @ sp[(-9)+-16]
 15676  018F70  90D8               	bcf	status,0,c
 15677  018F72  0EE7               	movlw	-25
 15678  018F74  36E3               	rlcf	plusw1,f,c
 15679  018F76  0EE8               	movlw	-24
 15680  018F78  36E3               	rlcf	plusw1,f,c
 15681  018F7A  0EE9               	movlw	-23
 15682  018F7C  36E3               	rlcf	plusw1,f,c
 15683  018F7E  0EEA               	movlw	-22
 15684  018F80  36E3               	rlcf	plusw1,f,c
 15685  018F82  0EEB               	movlw	-21
 15686  018F84  36E3               	rlcf	plusw1,f,c
 15687  018F86  0EEC               	movlw	-20
 15688  018F88  36E3               	rlcf	plusw1,f,c
 15689  018F8A  0EED               	movlw	-19
 15690  018F8C  36E3               	rlcf	plusw1,f,c
 15691  018F8E  0EEE               	movlw	-18
 15692  018F90  36E3               	rlcf	plusw1,f,c
 15693                           
 15694                           ;stkvar	_counter @ sp[(-9)+8]
 15695  018F92  0EFF               	movlw	-1
 15696  018F94                     L16:
 15697  018F94  2AE3               	incf	plusw1,f,c
 15698                           
 15699                           ;stkvar	_divisor @ sp[(-9)+-16]
 15700  018F96  0EEE               	movlw	-18
 15701  018F98  AEE3               	btfss	plusw1,7,c
 15702  018F9A  D7EA               	goto	l8859
 15703  018F9C                     u7430:
 15704                           
 15705                           ;stkvar	_quotient @ sp[(-9)+0]
 15706  018F9C  90D8               	bcf	status,0,c
 15707  018F9E  0EF7               	movlw	-9
 15708  018FA0  36E3               	rlcf	plusw1,f,c
 15709  018FA2  0EF8               	movlw	-8
 15710  018FA4  36E3               	rlcf	plusw1,f,c
 15711  018FA6  0EF9               	movlw	-7
 15712  018FA8  36E3               	rlcf	plusw1,f,c
 15713  018FAA  0EFA               	movlw	-6
 15714  018FAC  36E3               	rlcf	plusw1,f,c
 15715  018FAE  0EFB               	movlw	-5
 15716  018FB0  36E3               	rlcf	plusw1,f,c
 15717  018FB2  0EFC               	movlw	-4
 15718  018FB4  36E3               	rlcf	plusw1,f,c
 15719  018FB6  0EFD               	movlw	-3
 15720  018FB8  36E3               	rlcf	plusw1,f,c
 15721  018FBA  0EFE               	movlw	-2
 15722  018FBC  36E3               	rlcf	plusw1,f,c
 15723                           
 15724                           ;stkvar	_divisor @ sp[(-9)+-16]
 15725                           ;stkvar	_dividend @ sp[(-9)+-8]
 15726  018FBE  50E1               	movf	fsr1l,w,c
 15727  018FC0  0FEF               	addlw	-17
 15728  018FC2  6ED9               	movwf	fsr2l,c
 15729  018FC4  50E2               	movf	fsr1h,w,c
 15730  018FC6  6EDA               	movwf	fsr2h,c
 15731  018FC8  0EFF               	movlw	255
 15732  018FCA  22DA               	addwfc	fsr2h,f,c
 15733  018FCC  0EE7               	movlw	-25
 15734  018FCE  50E3               	movf	plusw1,w,c
 15735  018FD0  5CDE               	subwf	postinc2,w,c
 15736  018FD2  0EE8               	movlw	-24
 15737  018FD4  50E3               	movf	plusw1,w,c
 15738  018FD6  58DE               	subwfb	postinc2,w,c
 15739  018FD8  0EE9               	movlw	-23
 15740  018FDA  50E3               	movf	plusw1,w,c
 15741  018FDC  58DE               	subwfb	postinc2,w,c
 15742  018FDE  0EEA               	movlw	-22
 15743  018FE0  50E3               	movf	plusw1,w,c
 15744  018FE2  58DE               	subwfb	postinc2,w,c
 15745  018FE4  0EEB               	movlw	-21
 15746  018FE6  50E3               	movf	plusw1,w,c
 15747  018FE8  58DE               	subwfb	postinc2,w,c
 15748  018FEA  0EEC               	movlw	-20
 15749  018FEC  50E3               	movf	plusw1,w,c
 15750  018FEE  58DE               	subwfb	postinc2,w,c
 15751  018FF0  0EED               	movlw	-19
 15752  018FF2  50E3               	movf	plusw1,w,c
 15753  018FF4  58DE               	subwfb	postinc2,w,c
 15754  018FF6  0EEE               	movlw	-18
 15755  018FF8  50E3               	movf	plusw1,w,c
 15756  018FFA  58DE               	subwfb	postinc2,w,c
 15757  018FFC  A0D8               	btfss	status,0,c
 15758  018FFE  D021               	goto	l8871
 15759                           
 15760                           ;stkvar	_divisor @ sp[(-9)+-16]
 15761                           ;stkvar	_dividend @ sp[(-9)+-8]
 15762  019000  50E1               	movf	fsr1l,w,c
 15763  019002  0FEF               	addlw	-17
 15764  019004  6ED9               	movwf	fsr2l,c
 15765  019006  50E2               	movf	fsr1h,w,c
 15766  019008  6EDA               	movwf	fsr2h,c
 15767  01900A  0EFF               	movlw	255
 15768  01900C  22DA               	addwfc	fsr2h,f,c
 15769  01900E  0EE7               	movlw	-25
 15770  019010  50E3               	movf	plusw1,w,c
 15771  019012  5EDE               	subwf	postinc2,f,c
 15772  019014  0EE8               	movlw	-24
 15773  019016  50E3               	movf	plusw1,w,c
 15774  019018  5ADE               	subwfb	postinc2,f,c
 15775  01901A  0EE9               	movlw	-23
 15776  01901C  50E3               	movf	plusw1,w,c
 15777  01901E  5ADE               	subwfb	postinc2,f,c
 15778  019020  0EEA               	movlw	-22
 15779  019022  50E3               	movf	plusw1,w,c
 15780  019024  5ADE               	subwfb	postinc2,f,c
 15781  019026  0EEB               	movlw	-21
 15782  019028  50E3               	movf	plusw1,w,c
 15783  01902A  5ADE               	subwfb	postinc2,f,c
 15784  01902C  0EEC               	movlw	-20
 15785  01902E  50E3               	movf	plusw1,w,c
 15786  019030  5ADE               	subwfb	postinc2,f,c
 15787  019032  0EED               	movlw	-19
 15788  019034  50E3               	movf	plusw1,w,c
 15789  019036  5ADE               	subwfb	postinc2,f,c
 15790  019038  0EEE               	movlw	-18
 15791  01903A  50E3               	movf	plusw1,w,c
 15792  01903C  5ADE               	subwfb	postinc2,f,c
 15793                           
 15794                           ;stkvar	_quotient @ sp[(-9)+0]
 15795  01903E  0EF7               	movlw	-9
 15796  019040  80E3               	bsf	plusw1,0,c
 15797  019042                     l8871:
 15798                           
 15799                           ;stkvar	_divisor @ sp[(-9)+-16]
 15800  019042  90D8               	bcf	status,0,c
 15801  019044  0EEE               	movlw	-18
 15802  019046  32E3               	rrcf	plusw1,f,c
 15803  019048  0EED               	movlw	-19
 15804  01904A  32E3               	rrcf	plusw1,f,c
 15805  01904C  0EEC               	movlw	-20
 15806  01904E  32E3               	rrcf	plusw1,f,c
 15807  019050  0EEB               	movlw	-21
 15808  019052  32E3               	rrcf	plusw1,f,c
 15809  019054  0EEA               	movlw	-22
 15810  019056  32E3               	rrcf	plusw1,f,c
 15811  019058  0EE9               	movlw	-23
 15812  01905A  32E3               	rrcf	plusw1,f,c
 15813  01905C  0EE8               	movlw	-24
 15814  01905E  32E3               	rrcf	plusw1,f,c
 15815  019060  0EE7               	movlw	-25
 15816  019062  32E3               	rrcf	plusw1,f,c
 15817                           
 15818                           ;stkvar	_counter @ sp[(-9)+8]
 15819  019064  0EFF               	movlw	-1
 15820  019066  50E3               	movf	plusw1,w,c
 15821  019068  6E01               	movwf	btemp^0,c
 15822  01906A  0E01               	movlw	1
 15823  01906C  5E01               	subwf	btemp^0,f,c
 15824  01906E  0EFF               	movlw	-1
 15825  019070  0060  F007  FFE3   	movff	btemp,plusw1
 15826  019076  A4D8               	btfss	status,2,c
 15827  019078  D791               	goto	u7430
 15828  01907A                     u7450:
 15829                           
 15830                           ;stkvar	_quotient @ sp[(-9)+0]
 15831  01907A  0EF7               	movlw	247
 15832  01907C  24E1               	addwf	fsr1l,w,c
 15833  01907E  6ED9               	movwf	fsr2l,c
 15834  019080  0EFF               	movlw	255
 15835  019082  20E2               	addwfc	fsr1h,w,c
 15836  019084  6EDA               	movwf	fsr2h,c
 15837                           
 15838                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 15839  019086  0E08               	movlw	8
 15840  019088  6E01               	movwf	btemp^0,c
 15841  01908A  0EEF               	movlw	-17
 15842  01908C                     us746999:
 15843  01908C  006F FF7B FFE3     	movff	postinc2,plusw1
 15844  019092  28E8               	incf	wreg,w,c
 15845  019094  2E01               	decfsz	btemp^0,f,c
 15846  019096  D7FA               	bra	us746999
 15847                           
 15848                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 15849  019098  0EF7               	movlw	247
 15850  01909A  26E1               	addwf	fsr1l,f,c
 15851  01909C  0EFF               	movlw	255
 15852  01909E  22E2               	addwfc	fsr1h,f,c
 15853  0190A0  0012               	return		;funcret
 15854  0190A2                     __end_of___lodiv:
 15855                           	opt callstack 0
 15856                           
 15857 ;; *************** function _strncmp *****************
 15858 ;; Defined at:
 15859 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 15860 ;; Parameters:    Size  Location     Type
 15861 ;;  _l              2  [STACK] PTR const unsigned char 
 15862 ;;		 -> ct(3), STR_64(121), STR_62(3), STR_61(3), 
 15863 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15864 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15865 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15866 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15867 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 15868 ;;		 -> STR_38(23), STR_37(23), STR_36(29), STR_35(23), 
 15869 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 15870 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15871 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 15872 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 15873 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15874 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15875 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15876 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15877 ;;		 -> STR_1(21), 
 15878 ;;  _r              2  [STACK] PTR const unsigned char 
 15879 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15880 ;;		 -> STR_79(3), STR_75(3), 
 15881 ;;  n               2  [STACK] unsigned int 
 15882 ;; Auto vars:     Size  Location     Type
 15883 ;;  r               2  [STACK] PTR const unsigned char 
 15884 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15885 ;;		 -> STR_79(3), STR_75(3), 
 15886 ;;  l               2  [STACK] PTR const unsigned char 
 15887 ;;		 -> ct(3), STR_64(121), STR_62(3), STR_61(3), 
 15888 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15889 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15890 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15891 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15892 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 15893 ;;		 -> STR_38(23), STR_37(23), STR_36(29), STR_35(23), 
 15894 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 15895 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15896 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 15897 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 15898 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15899 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15900 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15901 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15902 ;;		 -> STR_1(21), 
 15903 ;; Return value:  Size  Location     Type
 15904 ;;                  2  [STACK] int 
 15905 ;; Registers used:
 15906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 15907 ;; Tracked objects:
 15908 ;;		On entry : 0/0
 15909 ;;		On exit  : 0/0
 15910 ;;		Unchanged: 0/0
 15911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15916 ;;Total ram usage:        0 bytes
 15917 ;; Hardware stack levels used:    1
 15918 ;; Hardware stack levels required when called:   15
 15919 ;; This function calls:
 15920 ;;		Nothing
 15921 ;; This function is called by:
 15922 ;;		_vfpfcnvrt
 15923 ;; This function uses a reentrant model
 15924 ;;
 15925                           
 15926                           	psect	text60
 15927  018098                     __ptext60:
 15928                           	opt callstack 0
 15929  018098                     _strncmp:
 15930                           	opt callstack 0
 15931                           
 15932                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15933  018098  52E6               	movf	postinc1,f,c
 15934  01809A  52E6               	movf	postinc1,f,c
 15935  01809C  52E6               	movf	postinc1,f,c
 15936  01809E  52E6               	movf	postinc1,f,c
 15937                           
 15938                           ;stkvar	__l @ sp[(-4)+-2]
 15939                           
 15940                           ;incstack = 0
 15941 ;; hardware stack exceeded
 15942  0180A0  0EFA               	movlw	-6
 15943  0180A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 15944  0180A8  0EFB               	movlw	-5
 15945  0180AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 15946                           
 15947                           ;stkvar	_l @ sp[(-4)+2]
 15948  0180B0  0EFF               	movlw	-1
 15949  0180B2  0060  F033  FFE3   	movff	btemp+11,plusw1
 15950  0180B8  0EFE               	movlw	-2
 15951  0180BA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15952                           
 15953                           ;stkvar	__r @ sp[(-4)+-4]
 15954  0180C0  0EF8               	movlw	-8
 15955  0180C2  006F FF8C  F00B    	movff	plusw1,btemp+10
 15956  0180C8  0EF9               	movlw	-7
 15957  0180CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 15958                           
 15959                           ;stkvar	_r @ sp[(-4)+0]
 15960  0180D0  0EFD               	movlw	-3
 15961  0180D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 15962  0180D8  0EFC               	movlw	-4
 15963  0180DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15964                           
 15965                           ;stkvar	_n @ sp[(-4)+-6]
 15966  0180E0  0EF6               	movlw	-10
 15967  0180E2  006F FF8C  F001    	movff	plusw1,btemp
 15968  0180E8  0E01               	movlw	1
 15969  0180EA  5E01               	subwf	btemp^0,f,c
 15970  0180EC  0EF6               	movlw	-10
 15971  0180EE  0060  F007  FFE3   	movff	btemp,plusw1
 15972  0180F4  0EF7               	movlw	-9
 15973  0180F6  006F FF8C  F001    	movff	plusw1,btemp
 15974  0180FC  0E00               	movlw	0
 15975  0180FE  5A01               	subwfb	btemp^0,f,c
 15976  018100  0EF7               	movlw	-9
 15977  018102  0060  F007  FFE3   	movff	btemp,plusw1
 15978  018108  0EF6               	movlw	-10
 15979  01810A  28E3               	incf	plusw1,w,c
 15980  01810C  E13F               	bnz	l9541
 15981  01810E  0EF7               	movlw	-9
 15982  018110  28E3               	incf	plusw1,w,c
 15983  018112  A4D8               	btfss	status,2,c
 15984  018114  D03B               	goto	l9541
 15985  018116  0E00               	movlw	0
 15986  018118  6E01               	movwf	btemp^0,c
 15987  01811A  0E00               	movlw	0
 15988  01811C  6E02               	movwf	(btemp+1)^0,c
 15989  01811E  D0C7               	goto	l3532
 15990  018120                     l9539:
 15991                           
 15992                           ;stkvar	_l @ sp[(-4)+2]
 15993  018120  0EFE               	movlw	-2
 15994  018122  50E3               	movf	plusw1,w,c
 15995  018124  0F01               	addlw	1
 15996  018126  6E01               	movwf	btemp^0,c
 15997  018128  0EFE               	movlw	-2
 15998  01812A  0060  F007  FFE3   	movff	btemp,plusw1
 15999  018130  6A01               	clrf	btemp^0,c
 16000  018132  0EFF               	movlw	-1
 16001  018134  50E3               	movf	plusw1,w,c
 16002  018136  2001               	addwfc	btemp^0,w,c
 16003  018138  6E01               	movwf	btemp^0,c
 16004  01813A  0EFF               	movlw	-1
 16005  01813C  0060  F007  FFE3   	movff	btemp,plusw1
 16006                           
 16007                           ;stkvar	_r @ sp[(-4)+0]
 16008  018142  0EFC               	movlw	-4
 16009  018144  50E3               	movf	plusw1,w,c
 16010  018146  0F01               	addlw	1
 16011  018148  6E01               	movwf	btemp^0,c
 16012  01814A  0EFC               	movlw	-4
 16013  01814C  0060  F007  FFE3   	movff	btemp,plusw1
 16014  018152  6A01               	clrf	btemp^0,c
 16015  018154  0EFD               	movlw	-3
 16016  018156  50E3               	movf	plusw1,w,c
 16017  018158  2001               	addwfc	btemp^0,w,c
 16018  01815A  6E01               	movwf	btemp^0,c
 16019  01815C  0EFD               	movlw	-3
 16020  01815E  0060  F007  FFE3   	movff	btemp,plusw1
 16021                           
 16022                           ;stkvar	_n @ sp[(-4)+-6]
 16023  018164  0EF6               	movlw	-10
 16024  018166  006F FF8C  F001    	movff	plusw1,btemp
 16025  01816C  0E01               	movlw	1
 16026  01816E  5E01               	subwf	btemp^0,f,c
 16027  018170  0EF6               	movlw	-10
 16028  018172  0060  F007  FFE3   	movff	btemp,plusw1
 16029  018178  0EF7               	movlw	-9
 16030  01817A  006F FF8C  F001    	movff	plusw1,btemp
 16031  018180  0E00               	movlw	0
 16032  018182  5A01               	subwfb	btemp^0,f,c
 16033  018184  0EF7               	movlw	-9
 16034  018186  0060  F007  FFE3   	movff	btemp,plusw1
 16035  01818C                     l9541:
 16036                           
 16037                           ;stkvar	_l @ sp[(-4)+2]
 16038  01818C  0EFE               	movlw	-2
 16039  01818E  006F FF8F FFF6     	movff	plusw1,tblptrl
 16040  018194  0EFF               	movlw	-1
 16041  018196  006F FF8F FFF7     	movff	plusw1,tblptrh
 16042  01819C  0E00               	movlw	low (__mediumconst shr (0+16))
 16043  01819E  6EF8               	movwf	tblptru,c
 16044  0181A0  0E1F               	movlw	(high __ramtop+-1)
 16045  0181A2  64F7               	cpfsgt	tblptrh,c
 16046  0181A4  D003               	bra	u8707
 16047  0181A6  0008               	tblrd		*
 16048  0181A8  50F5               	movf	tablat,w,c
 16049  0181AA  D007               	bra	u8700
 16050  0181AC                     u8707:
 16051  0181AC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16052  0181B2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16053  0181B8  50EF               	movf	indf0,w,c
 16054  0181BA                     u8700:
 16055  0181BA  0900               	iorlw	0
 16056  0181BC  B4D8               	btfsc	status,2,c
 16057  0181BE  D04A               	goto	u8740
 16058                           
 16059                           ;stkvar	_r @ sp[(-4)+0]
 16060  0181C0  50E1               	movf	fsr1l,w,c
 16061  0181C2  0FFC               	addlw	-4
 16062  0181C4  6ED9               	movwf	fsr2l,c
 16063  0181C6  50E2               	movf	fsr1h,w,c
 16064  0181C8  6EDA               	movwf	fsr2h,c
 16065  0181CA  0EFF               	movlw	255
 16066  0181CC  22DA               	addwfc	fsr2h,f,c
 16067  0181CE  006F FF7B FFF6     	movff	postinc2,tblptrl
 16068  0181D4  006F FF77 FFF7     	movff	postdec2,tblptrh
 16069  0181DA                     	if	0	;tblptru may be non-zero
 16070  0181DA                     	endif
 16071  0181DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16072  0181DA  0E00               	movlw	low (__mediumconst shr (0+16))
 16073  0181DC  6EF8               	movwf	tblptru,c
 16074  0181DE                     	endif
 16075  0181DE  0008               	tblrd		*
 16076  0181E0  50F5               	movf	tablat,w,c
 16077  0181E2  0900               	iorlw	0
 16078  0181E4  B4D8               	btfsc	status,2,c
 16079  0181E6  D036               	goto	u8740
 16080                           
 16081                           ;stkvar	_n @ sp[(-4)+-6]
 16082  0181E8  0EF6               	movlw	-10
 16083  0181EA  006F FF8C  F001    	movff	plusw1,btemp
 16084  0181F0  0EF7               	movlw	-9
 16085  0181F2  50E3               	movf	plusw1,w,c
 16086  0181F4  1001               	iorwf	btemp^0,w,c
 16087  0181F6  B4D8               	btfsc	status,2,c
 16088  0181F8  D02D               	goto	u8740
 16089                           
 16090                           ;stkvar	_r @ sp[(-4)+0]
 16091  0181FA  50E1               	movf	fsr1l,w,c
 16092  0181FC  0FFC               	addlw	-4
 16093  0181FE  6ED9               	movwf	fsr2l,c
 16094  018200  50E2               	movf	fsr1h,w,c
 16095  018202  6EDA               	movwf	fsr2h,c
 16096  018204  0EFF               	movlw	255
 16097  018206  22DA               	addwfc	fsr2h,f,c
 16098  018208  006F FF7B FFF6     	movff	postinc2,tblptrl
 16099  01820E  006F FF77 FFF7     	movff	postdec2,tblptrh
 16100  018214                     	if	0	;tblptru may be non-zero
 16101  018214                     	endif
 16102  018214                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16103  018214  0E00               	movlw	low (__mediumconst shr (0+16))
 16104  018216  6EF8               	movwf	tblptru,c
 16105  018218                     	endif
 16106  018218  0008               	tblrd		*
 16107  01821A  006F FFD4  F00C    	movff	tablat,btemp+11
 16108                           
 16109                           ;stkvar	_l @ sp[(-4)+2]
 16110  018220  0EFE               	movlw	-2
 16111  018222  006F FF8F FFF6     	movff	plusw1,tblptrl
 16112  018228  0EFF               	movlw	-1
 16113  01822A  006F FF8F FFF7     	movff	plusw1,tblptrh
 16114  018230  0E00               	movlw	low (__mediumconst shr (0+16))
 16115  018232  6EF8               	movwf	tblptru,c
 16116  018234  0E1F               	movlw	(high __ramtop+-1)
 16117  018236  64F7               	cpfsgt	tblptrh,c
 16118  018238  D003               	bra	u8747
 16119  01823A  0008               	tblrd		*
 16120  01823C  50F5               	movf	tablat,w,c
 16121  01823E  D007               	bra	u8745
 16122  018240                     u8747:
 16123  018240  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16124  018246  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16125  01824C  50EF               	movf	indf0,w,c
 16126  01824E                     u8745:
 16127  01824E  180C               	xorwf	(btemp+11)^0,w,c
 16128  018250  B4D8               	btfsc	status,2,c
 16129  018252  D766               	goto	l9539
 16130  018254                     u8740:
 16131                           
 16132                           ;stkvar	_l @ sp[(-4)+2]
 16133  018254  0EFE               	movlw	-2
 16134  018256  006F FF8F FFF6     	movff	plusw1,tblptrl
 16135  01825C  0EFF               	movlw	-1
 16136  01825E  006F FF8F FFF7     	movff	plusw1,tblptrh
 16137  018264  0E00               	movlw	low (__mediumconst shr (0+16))
 16138  018266  6EF8               	movwf	tblptru,c
 16139  018268  0E1F               	movlw	(high __ramtop+-1)
 16140  01826A  64F7               	cpfsgt	tblptrh,c
 16141  01826C  D003               	bra	u8757
 16142  01826E  0008               	tblrd		*
 16143  018270  50F5               	movf	tablat,w,c
 16144  018272  D007               	bra	u8750
 16145  018274                     u8757:
 16146  018274  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16147  01827A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16148  018280  50EF               	movf	indf0,w,c
 16149  018282                     u8750:
 16150  018282  6E01               	movwf	btemp^0,c
 16151  018284  6A02               	clrf	(btemp+1)^0,c
 16152                           
 16153                           ;stkvar	_r @ sp[(-4)+0]
 16154  018286  50E1               	movf	fsr1l,w,c
 16155  018288  0FFC               	addlw	-4
 16156  01828A  6ED9               	movwf	fsr2l,c
 16157  01828C  50E2               	movf	fsr1h,w,c
 16158  01828E  6EDA               	movwf	fsr2h,c
 16159  018290  0EFF               	movlw	255
 16160  018292  22DA               	addwfc	fsr2h,f,c
 16161  018294  006F FF7B FFF6     	movff	postinc2,tblptrl
 16162  01829A  006F FF77 FFF7     	movff	postdec2,tblptrh
 16163  0182A0                     	if	0	;tblptru may be non-zero
 16164  0182A0                     	endif
 16165  0182A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16166  0182A0  0E00               	movlw	low (__mediumconst shr (0+16))
 16167  0182A2  6EF8               	movwf	tblptru,c
 16168  0182A4                     	endif
 16169  0182A4  0008               	tblrd		*
 16170  0182A6  50F5               	movf	tablat,w,c
 16171  0182A8  5E01               	subwf	btemp^0,f,c
 16172  0182AA  0E00               	movlw	0
 16173  0182AC  5A02               	subwfb	(btemp+1)^0,f,c
 16174  0182AE                     l3532:
 16175                           
 16176                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 16177  0182AE  0EF6               	movlw	246
 16178  0182B0  26E1               	addwf	fsr1l,f,c
 16179  0182B2  0EFF               	movlw	255
 16180  0182B4  22E2               	addwfc	fsr1h,f,c
 16181  0182B6  0012               	return		;funcret
 16182  0182B8                     __end_of_strncmp:
 16183                           	opt callstack 0
 16184                           
 16185 ;; *************** function _stoa *****************
 16186 ;; Defined at:
 16187 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16188 ;; Parameters:    Size  Location     Type
 16189 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16190 ;;		 -> f(6), NULL(0), 
 16191 ;;  s               2  [STACK] PTR unsigned char 
 16192 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 16193 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 16194 ;;		 -> V(191), 
 16195 ;; Auto vars:     Size  Location     Type
 16196 ;;  nuls            7  [STACK] unsigned char [7]
 16197 ;;  l               2  [STACK] int 
 16198 ;;  p               2  [STACK] int 
 16199 ;;  cp              2  [STACK] PTR unsigned char 
 16200 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_46(9), 
 16201 ;;		 -> STR_45(12), D.lcd(480), D(482), T(144), 
 16202 ;;		 -> STR_3(5), V(191), 
 16203 ;;  w               2  [STACK] int 
 16204 ;;  i               2  [STACK] int 
 16205 ;; Return value:  Size  Location     Type
 16206 ;;                  2  [STACK] int 
 16207 ;; Registers used:
 16208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 16209 ;; Tracked objects:
 16210 ;;		On entry : 0/0
 16211 ;;		On exit  : 0/0
 16212 ;;		Unchanged: 0/0
 16213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16218 ;;Total ram usage:        0 bytes
 16219 ;; Hardware stack levels used:    1
 16220 ;; Hardware stack levels required when called:   18
 16221 ;; This function calls:
 16222 ;;		_fputc
 16223 ;;		_strlen
 16224 ;; This function is called by:
 16225 ;;		_vfpfcnvrt
 16226 ;; This function uses a reentrant model
 16227 ;;
 16228                           
 16229                           	psect	text61
 16230  017460                     __ptext61:
 16231                           	opt callstack 0
 16232  017460                     _stoa:
 16233                           	opt callstack 0
 16234                           
 16235                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16236  017460  0E11               	movlw	17
 16237  017462  26E1               	addwf	fsr1l,f,c
 16238  017464  0E00               	movlw	0
 16239  017466  22E2               	addwfc	fsr1h,f,c
 16240                           
 16241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 16242                           
 16243                           ;incstack = 0
 16244 ;; hardware stack exceeded
 16245  017468  EE20  F100         	lfsr	2,stoa@F1166
 16246                           
 16247                           ;stkvar	_nuls @ sp[(-17)+0]
 16248  01746C  0E07               	movlw	7
 16249  01746E  6E01               	movwf	btemp^0,c
 16250  017470  0EEF               	movlw	-17
 16251  017472                     us1179999:
 16252  017472  006F FF7B FFE3     	movff	postinc2,plusw1
 16253  017478  28E8               	incf	wreg,w,c
 16254  01747A  2E01               	decfsz	btemp^0,f,c
 16255  01747C  D7FA               	bra	us1179999
 16256                           
 16257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 16258                           ;stkvar	_s @ sp[(-17)+-4]
 16259  01747E  0EEB               	movlw	-21
 16260  017480  006F FF8C  F00B    	movff	plusw1,btemp+10
 16261  017486  0EEC               	movlw	-20
 16262  017488  006F FF8C  F00C    	movff	plusw1,btemp+11
 16263                           
 16264                           ;stkvar	_cp @ sp[(-17)+11]
 16265  01748E  0EFB               	movlw	-5
 16266  017490  0060  F033  FFE3   	movff	btemp+11,plusw1
 16267  017496  0EFA               	movlw	-6
 16268  017498  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16269                           
 16270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 16271                           ;stkvar	_cp @ sp[(-17)+11]
 16272  01749E  0EFA               	movlw	-6
 16273  0174A0  006F FF8C  F001    	movff	plusw1,btemp
 16274  0174A6  0EFB               	movlw	-5
 16275  0174A8  50E3               	movf	plusw1,w,c
 16276  0174AA  1001               	iorwf	btemp^0,w,c
 16277  0174AC  A4D8               	btfss	status,2,c
 16278  0174AE  D00E               	goto	l12571
 16279                           
 16280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 16281                           ;stkvar	_nuls @ sp[(-17)+0]
 16282  0174B0  0EEF               	movlw	239
 16283  0174B2  24E1               	addwf	fsr1l,w,c
 16284  0174B4  6E0B               	movwf	(btemp+10)^0,c
 16285  0174B6  0EFF               	movlw	255
 16286  0174B8  20E2               	addwfc	fsr1h,w,c
 16287  0174BA  6E0C               	movwf	(btemp+11)^0,c
 16288                           
 16289                           ;stkvar	_cp @ sp[(-17)+11]
 16290  0174BC  0EFB               	movlw	-5
 16291  0174BE  0060  F033  FFE3   	movff	btemp+11,plusw1
 16292  0174C4  0EFA               	movlw	-6
 16293  0174C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16294  0174CC                     l12571:
 16295                           
 16296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 16297                           ;stkvar	_cp @ sp[(-17)+11]
 16298  0174CC  0EFA               	movlw	-6
 16299  0174CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16300  0174D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16301  0174DA  EC4D  F0D6         	call	_strlen	;wreg free
 16302                           
 16303                           ;stkvar	_l @ sp[(-17)+7]
 16304  0174DE  0EF6               	movlw	-10
 16305  0174E0  0060  F007  FFE3   	movff	btemp,plusw1
 16306  0174E6  0EF7               	movlw	-9
 16307  0174E8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16308                           
 16309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 16310                           ;stkvar	_p @ sp[(-17)+9]
 16311  0174EE  0EF8               	movlw	-8
 16312  0174F0  0060  F0F3  FFE3   	movff	_prec,plusw1
 16313  0174F6  0EF9               	movlw	-7
 16314  0174F8  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16315                           
 16316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 16317                           ;stkvar	_p @ sp[(-17)+9]
 16318  0174FE  0EF9               	movlw	-7
 16319  017500  BEE3               	btfsc	plusw1,7,c
 16320  017502  D023               	goto	l2357
 16321                           
 16322                           ;stkvar	_l @ sp[(-17)+7]
 16323                           ;stkvar	_p @ sp[(-17)+9]
 16324  017504  50E1               	movf	fsr1l,w,c
 16325  017506  0FF8               	addlw	-8
 16326  017508  6ED9               	movwf	fsr2l,c
 16327  01750A  50E2               	movf	fsr1h,w,c
 16328  01750C  6EDA               	movwf	fsr2h,c
 16329  01750E  0EFF               	movlw	255
 16330  017510  22DA               	addwfc	fsr2h,f,c
 16331  017512  0EF6               	movlw	-10
 16332  017514  50E3               	movf	plusw1,w,c
 16333  017516  5CDE               	subwf	postinc2,w,c
 16334  017518  50DE               	movf	postinc2,w,c
 16335  01751A  0A80               	xorlw	128
 16336  01751C  6E01               	movwf	btemp^0,c
 16337  01751E  0EF7               	movlw	-9
 16338  017520  50E3               	movf	plusw1,w,c
 16339  017522  0A80               	xorlw	128
 16340  017524  5801               	subwfb	btemp^0,w,c
 16341  017526  B0D8               	btfsc	status,0,c
 16342  017528  D010               	goto	l2357
 16343                           
 16344                           ;stkvar	_p @ sp[(-17)+9]
 16345                           ;stkvar	_l @ sp[(-17)+7]
 16346  01752A  0EF8               	movlw	-8
 16347  01752C  006F FF8C  F001    	movff	plusw1,btemp
 16348  017532  0EF6               	movlw	-10
 16349  017534  0060  F007  FFE3   	movff	btemp,plusw1
 16350  01753A  0EF9               	movlw	-7
 16351  01753C  006F FF8C  F001    	movff	plusw1,btemp
 16352  017542  0EF7               	movlw	-9
 16353  017544  0060  F007  FFE3   	movff	btemp,plusw1
 16354  01754A                     l2357:
 16355                           
 16356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 16357                           ;stkvar	_l @ sp[(-17)+7]
 16358                           ;stkvar	_p @ sp[(-17)+9]
 16359  01754A  0EF6               	movlw	-10
 16360  01754C  006F FF8C  F001    	movff	plusw1,btemp
 16361  017552  0EF8               	movlw	-8
 16362  017554  0060  F007  FFE3   	movff	btemp,plusw1
 16363  01755A  0EF7               	movlw	-9
 16364  01755C  006F FF8C  F001    	movff	plusw1,btemp
 16365  017562  0EF9               	movlw	-7
 16366  017564  0060  F007  FFE3   	movff	btemp,plusw1
 16367                           
 16368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 16369                           ;stkvar	_w @ sp[(-17)+13]
 16370  01756A  0EFC               	movlw	-4
 16371  01756C  0060  F0EB  FFE3   	movff	_width,plusw1
 16372  017572  0EFD               	movlw	-3
 16373  017574  0060  F0EF  FFE3   	movff	_width+1,plusw1
 16374                           
 16375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 16376  01757A  A03E               	btfss	_flags^0,0,c
 16377  01757C  D01F               	goto	l12591
 16378  01757E  D031               	goto	u11840
 16379  017580                     l12587:
 16380                           
 16381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 16382                           ;stkvar	_fp @ sp[(-17)+-2]
 16383  017580  0EED               	movlw	-19
 16384  017582  006F FF8F FFE6     	movff	plusw1,postinc1
 16385  017588  006F FF8F FFE6     	movff	plusw1,postinc1
 16386  01758E  0E20               	movlw	32
 16387  017590  6EE6               	movwf	postinc1,c
 16388  017592  0E00               	movlw	0
 16389  017594  6EE6               	movwf	postinc1,c
 16390  017596  ECE6  F0CC         	call	_fputc	;wreg free
 16391                           
 16392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 16393                           ;stkvar	_l @ sp[(-17)+7]
 16394  01759A  0EF6               	movlw	-10
 16395  01759C  50E3               	movf	plusw1,w,c
 16396  01759E  0F01               	addlw	1
 16397  0175A0  6E01               	movwf	btemp^0,c
 16398  0175A2  0EF6               	movlw	-10
 16399  0175A4  0060  F007  FFE3   	movff	btemp,plusw1
 16400  0175AA  6A01               	clrf	btemp^0,c
 16401  0175AC  0EF7               	movlw	-9
 16402  0175AE  50E3               	movf	plusw1,w,c
 16403  0175B0  2001               	addwfc	btemp^0,w,c
 16404  0175B2  6E01               	movwf	btemp^0,c
 16405  0175B4  0EF7               	movlw	-9
 16406  0175B6  0060  F007  FFE3   	movff	btemp,plusw1
 16407  0175BC                     l12591:
 16408                           
 16409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 16410                           ;stkvar	_w @ sp[(-17)+13]
 16411                           ;stkvar	_l @ sp[(-17)+7]
 16412  0175BC  50E1               	movf	fsr1l,w,c
 16413  0175BE  0FF6               	addlw	-10
 16414  0175C0  6ED9               	movwf	fsr2l,c
 16415  0175C2  50E2               	movf	fsr1h,w,c
 16416  0175C4  6EDA               	movwf	fsr2h,c
 16417  0175C6  0EFF               	movlw	255
 16418  0175C8  22DA               	addwfc	fsr2h,f,c
 16419  0175CA  0EFC               	movlw	-4
 16420  0175CC  50E3               	movf	plusw1,w,c
 16421  0175CE  5CDE               	subwf	postinc2,w,c
 16422  0175D0  50DE               	movf	postinc2,w,c
 16423  0175D2  0A80               	xorlw	128
 16424  0175D4  6E01               	movwf	btemp^0,c
 16425  0175D6  0EFD               	movlw	-3
 16426  0175D8  50E3               	movf	plusw1,w,c
 16427  0175DA  0A80               	xorlw	128
 16428  0175DC  5801               	subwfb	btemp^0,w,c
 16429  0175DE  A0D8               	btfss	status,0,c
 16430  0175E0  D7CF               	goto	l12587
 16431  0175E2                     u11840:
 16432                           
 16433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 16434                           ;stkvar	_i @ sp[(-17)+15]
 16435  0175E2  0EFE               	movlw	-2
 16436  0175E4  6AE3               	clrf	plusw1,c
 16437  0175E6  0EFF               	movlw	-1
 16438  0175E8  6AE3               	clrf	plusw1,c
 16439                           
 16440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 16441  0175EA  D045               	goto	l12601
 16442  0175EC                     l12595:
 16443                           
 16444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 16445                           ;stkvar	_fp @ sp[(-17)+-2]
 16446  0175EC  0EED               	movlw	-19
 16447  0175EE  006F FF8F FFE6     	movff	plusw1,postinc1
 16448  0175F4  006F FF8F FFE6     	movff	plusw1,postinc1
 16449                           
 16450                           ;stkvar	_cp @ sp[(-19)+11]
 16451  0175FA  0EF8               	movlw	-8
 16452  0175FC  006F FF8F FFF6     	movff	plusw1,tblptrl
 16453  017602  0EF9               	movlw	-7
 16454  017604  006F FF8F FFF7     	movff	plusw1,tblptrh
 16455  01760A  0E00               	movlw	low (__mediumconst shr (0+16))
 16456  01760C  6EF8               	movwf	tblptru,c
 16457  01760E  0E1F               	movlw	(high __ramtop+-1)
 16458  017610  64F7               	cpfsgt	tblptrh,c
 16459  017612  D003               	bra	u11857
 16460  017614  0008               	tblrd		*
 16461  017616  50F5               	movf	tablat,w,c
 16462  017618  D007               	bra	u11850
 16463  01761A                     u11857:
 16464  01761A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16465  017620  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16466  017626  50EF               	movf	indf0,w,c
 16467  017628                     u11850:
 16468  017628  6EE6               	movwf	postinc1,c
 16469  01762A  0E00               	movlw	0
 16470  01762C  6EE6               	movwf	postinc1,c
 16471  01762E  ECE6  F0CC         	call	_fputc	;wreg free
 16472                           
 16473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 16474                           ;stkvar	_cp @ sp[(-17)+11]
 16475  017632  0EFA               	movlw	-6
 16476  017634  50E3               	movf	plusw1,w,c
 16477  017636  0F01               	addlw	1
 16478  017638  6E01               	movwf	btemp^0,c
 16479  01763A  0EFA               	movlw	-6
 16480  01763C  0060  F007  FFE3   	movff	btemp,plusw1
 16481  017642  6A01               	clrf	btemp^0,c
 16482  017644  0EFB               	movlw	-5
 16483  017646  50E3               	movf	plusw1,w,c
 16484  017648  2001               	addwfc	btemp^0,w,c
 16485  01764A  6E01               	movwf	btemp^0,c
 16486  01764C  0EFB               	movlw	-5
 16487  01764E  0060  F007  FFE3   	movff	btemp,plusw1
 16488                           
 16489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 16490                           ;stkvar	_i @ sp[(-17)+15]
 16491  017654  0EFE               	movlw	-2
 16492  017656  50E3               	movf	plusw1,w,c
 16493  017658  0F01               	addlw	1
 16494  01765A  6E01               	movwf	btemp^0,c
 16495  01765C  0EFE               	movlw	-2
 16496  01765E  0060  F007  FFE3   	movff	btemp,plusw1
 16497  017664  6A01               	clrf	btemp^0,c
 16498  017666  0EFF               	movlw	-1
 16499  017668  50E3               	movf	plusw1,w,c
 16500  01766A  2001               	addwfc	btemp^0,w,c
 16501  01766C  6E01               	movwf	btemp^0,c
 16502  01766E  0EFF               	movlw	-1
 16503  017670  0060  F007  FFE3   	movff	btemp,plusw1
 16504  017676                     l12601:
 16505                           
 16506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 16507                           ;stkvar	_p @ sp[(-17)+9]
 16508                           ;stkvar	_i @ sp[(-17)+15]
 16509  017676  50E1               	movf	fsr1l,w,c
 16510  017678  0FFE               	addlw	-2
 16511  01767A  6ED9               	movwf	fsr2l,c
 16512  01767C  50E2               	movf	fsr1h,w,c
 16513  01767E  6EDA               	movwf	fsr2h,c
 16514  017680  0EFF               	movlw	255
 16515  017682  22DA               	addwfc	fsr2h,f,c
 16516  017684  0EF8               	movlw	-8
 16517  017686  50E3               	movf	plusw1,w,c
 16518  017688  5CDE               	subwf	postinc2,w,c
 16519  01768A  50DE               	movf	postinc2,w,c
 16520  01768C  0A80               	xorlw	128
 16521  01768E  6E01               	movwf	btemp^0,c
 16522  017690  0EF9               	movlw	-7
 16523  017692  50E3               	movf	plusw1,w,c
 16524  017694  0A80               	xorlw	128
 16525  017696  5801               	subwfb	btemp^0,w,c
 16526  017698  A0D8               	btfss	status,0,c
 16527  01769A  D7A8               	goto	l12595
 16528                           
 16529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 16530  01769C  B03E               	btfsc	_flags^0,0,c
 16531  01769E  D01F               	goto	l12609
 16532  0176A0  D031               	goto	u11880
 16533  0176A2                     l12605:
 16534                           
 16535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 16536                           ;stkvar	_fp @ sp[(-17)+-2]
 16537  0176A2  0EED               	movlw	-19
 16538  0176A4  006F FF8F FFE6     	movff	plusw1,postinc1
 16539  0176AA  006F FF8F FFE6     	movff	plusw1,postinc1
 16540  0176B0  0E20               	movlw	32
 16541  0176B2  6EE6               	movwf	postinc1,c
 16542  0176B4  0E00               	movlw	0
 16543  0176B6  6EE6               	movwf	postinc1,c
 16544  0176B8  ECE6  F0CC         	call	_fputc	;wreg free
 16545                           
 16546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 16547                           ;stkvar	_l @ sp[(-17)+7]
 16548  0176BC  0EF6               	movlw	-10
 16549  0176BE  50E3               	movf	plusw1,w,c
 16550  0176C0  0F01               	addlw	1
 16551  0176C2  6E01               	movwf	btemp^0,c
 16552  0176C4  0EF6               	movlw	-10
 16553  0176C6  0060  F007  FFE3   	movff	btemp,plusw1
 16554  0176CC  6A01               	clrf	btemp^0,c
 16555  0176CE  0EF7               	movlw	-9
 16556  0176D0  50E3               	movf	plusw1,w,c
 16557  0176D2  2001               	addwfc	btemp^0,w,c
 16558  0176D4  6E01               	movwf	btemp^0,c
 16559  0176D6  0EF7               	movlw	-9
 16560  0176D8  0060  F007  FFE3   	movff	btemp,plusw1
 16561  0176DE                     l12609:
 16562                           
 16563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 16564                           ;stkvar	_w @ sp[(-17)+13]
 16565                           ;stkvar	_l @ sp[(-17)+7]
 16566  0176DE  50E1               	movf	fsr1l,w,c
 16567  0176E0  0FF6               	addlw	-10
 16568  0176E2  6ED9               	movwf	fsr2l,c
 16569  0176E4  50E2               	movf	fsr1h,w,c
 16570  0176E6  6EDA               	movwf	fsr2h,c
 16571  0176E8  0EFF               	movlw	255
 16572  0176EA  22DA               	addwfc	fsr2h,f,c
 16573  0176EC  0EFC               	movlw	-4
 16574  0176EE  50E3               	movf	plusw1,w,c
 16575  0176F0  5CDE               	subwf	postinc2,w,c
 16576  0176F2  50DE               	movf	postinc2,w,c
 16577  0176F4  0A80               	xorlw	128
 16578  0176F6  6E01               	movwf	btemp^0,c
 16579  0176F8  0EFD               	movlw	-3
 16580  0176FA  50E3               	movf	plusw1,w,c
 16581  0176FC  0A80               	xorlw	128
 16582  0176FE  5801               	subwfb	btemp^0,w,c
 16583  017700  A0D8               	btfss	status,0,c
 16584  017702  D7CF               	goto	l12605
 16585  017704                     u11880:
 16586                           
 16587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 16588                           ;stkvar	_l @ sp[(-17)+7]
 16589  017704  0EF6               	movlw	-10
 16590  017706  006F FF8C  F001    	movff	plusw1,btemp
 16591  01770C  0EF7               	movlw	-9
 16592  01770E  006F FF8C  F002    	movff	plusw1,btemp+1
 16593                           
 16594                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 16595  017714  0EEB               	movlw	235
 16596  017716  26E1               	addwf	fsr1l,f,c
 16597  017718  0EFF               	movlw	255
 16598  01771A  22E2               	addwfc	fsr1h,f,c
 16599  01771C  0012               	return		;funcret
 16600  01771E                     __end_of_stoa:
 16601                           	opt callstack 0
 16602                           
 16603 ;; *************** function _efgtoa *****************
 16604 ;; Defined at:
 16605 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16606 ;; Parameters:    Size  Location     Type
 16607 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16608 ;;		 -> f(6), NULL(0), 
 16609 ;;  f               4  [STACK] PTR struct _IO_FILE
 16610 ;;  c               1  [STACK] unsigned char 
 16611 ;; Auto vars:     Size  Location     Type
 16612 ;;  u               4  [STACK] unsigned char 
 16613 ;;  g               4  [STACK] unsigned char 
 16614 ;;  l               4  [STACK] unsigned char 
 16615 ;;  h               4  [STACK] unsigned char 
 16616 ;;  ou              4  [STACK] unsigned char 
 16617 ;;  n               2  [STACK] int 
 16618 ;;  e               2  [STACK] int 
 16619 ;;  i               2  [STACK] int 
 16620 ;;  w               2  [STACK] int 
 16621 ;;  p               2  [STACK] int 
 16622 ;;  sign            2  [STACK] int 
 16623 ;;  d               2  [STACK] int 
 16624 ;;  ne              2  [STACK] int 
 16625 ;;  m               2  [STACK] int 
 16626 ;;  pp              2  [STACK] int 
 16627 ;;  t               2  [STACK] int 
 16628 ;;  mode            1  [STACK] unsigned char 
 16629 ;;  nmode           1  [STACK] unsigned char 
 16630 ;; Return value:  Size  Location     Type
 16631 ;;                  2  [STACK] int 
 16632 ;; Registers used:
 16633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16634 ;; Tracked objects:
 16635 ;;		On entry : 0/0
 16636 ;;		On exit  : 0/0
 16637 ;;		Unchanged: 0/0
 16638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16643 ;;Total ram usage:        0 bytes
 16644 ;; Hardware stack levels used:    1
 16645 ;; Hardware stack levels required when called:   20
 16646 ;; This function calls:
 16647 ;;		___awdiv
 16648 ;;		___awmod
 16649 ;;		___fladd
 16650 ;;		___fldiv
 16651 ;;		___fleq
 16652 ;;		___flge
 16653 ;;		___flmul
 16654 ;;		___flneg
 16655 ;;		___flsub
 16656 ;;		___fltol
 16657 ;;		___fpclassifyf
 16658 ;;		_floorf
 16659 ;;		_isupper
 16660 ;;		_pad
 16661 ;;		_strcpy
 16662 ;;		_tolower
 16663 ;; This function is called by:
 16664 ;;		_vfpfcnvrt
 16665 ;; This function uses a reentrant model
 16666 ;;
 16667                           
 16668                           	psect	text62
 16669  010000                     __ptext62:
 16670                           	opt callstack 0
 16671  010000                     _efgtoa:
 16672                           	opt callstack 0
 16673                           
 16674                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16675  010000  0E38               	movlw	56
 16676  010002  26E1               	addwf	fsr1l,f,c
 16677  010004  0E00               	movlw	0
 16678  010006  22E2               	addwfc	fsr1h,f,c
 16679                           
 16680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 16681                           ;stkvar	_sign @ sp[(-56)+42]
 16682                           
 16683                           ;incstack = 0
 16684 ;; hardware stack exceeded
 16685  010008  0EF2               	movlw	-14
 16686  01000A  6AE3               	clrf	plusw1,c
 16687  01000C  0EF3               	movlw	-13
 16688  01000E  6AE3               	clrf	plusw1,c
 16689                           
 16690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 16691                           ;stkvar	_f @ sp[(-56)+-6]
 16692  010010  0EC2               	movlw	-62
 16693  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 16694  010018  0EC3               	movlw	-61
 16695  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 16696  010020  0EC4               	movlw	-60
 16697  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 16698  010028  0EC5               	movlw	-59
 16699  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 16700                           
 16701                           ;stkvar	_g @ sp[(-56)+16]
 16702  010030  0ED8               	movlw	-40
 16703  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 16704  010038  0ED9               	movlw	-39
 16705  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16706  010040  0EDA               	movlw	-38
 16707  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16708  010048  0EDB               	movlw	-37
 16709  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 16710                           
 16711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 16712                           ;stkvar	_g @ sp[(-56)+16]
 16713  010050  0EDB               	movlw	-37
 16714  010052  AEE3               	btfss	plusw1,7,c
 16715  010054  D02B               	goto	l12269
 16716                           
 16717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 16718  010056  0E01               	movlw	1
 16719  010058  6E0B               	movwf	(btemp+10)^0,c
 16720  01005A  0E00               	movlw	0
 16721  01005C  6E0C               	movwf	(btemp+11)^0,c
 16722                           
 16723                           ;stkvar	_sign @ sp[(-56)+42]
 16724  01005E  0EF2               	movlw	-14
 16725  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16726  010066  0EF3               	movlw	-13
 16727  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 16728                           
 16729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 16730                           ;stkvar	_g @ sp[(-56)+16]
 16731  01006E  0ED8               	movlw	-40
 16732  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 16733  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 16734  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 16735  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 16736  010088  EC12  F0DC         	call	___flneg	;wreg free
 16737                           
 16738                           ;stkvar	_g @ sp[(-56)+16]
 16739  01008C  0ED8               	movlw	-40
 16740  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 16741  010094  0ED9               	movlw	-39
 16742  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16743  01009C  0EDA               	movlw	-38
 16744  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16745  0100A4  0EDB               	movlw	-37
 16746  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 16747  0100AC                     l12269:
 16748                           
 16749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 16750                           ;stkvar	_n @ sp[(-56)+32]
 16751  0100AC  0EE8               	movlw	-24
 16752  0100AE  6AE3               	clrf	plusw1,c
 16753  0100B0  0EE9               	movlw	-23
 16754  0100B2  6AE3               	clrf	plusw1,c
 16755                           
 16756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 16757                           ;stkvar	_w @ sp[(-56)+38]
 16758  0100B4  0EEE               	movlw	-18
 16759  0100B6  0060  F0EB  FFE3   	movff	_width,plusw1
 16760  0100BC  0EEF               	movlw	-17
 16761  0100BE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 16762                           
 16763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 16764                           ;stkvar	_sign @ sp[(-56)+42]
 16765  0100C4  0EF2               	movlw	-14
 16766  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 16767  0100CC  0EF3               	movlw	-13
 16768  0100CE  50E3               	movf	plusw1,w,c
 16769  0100D0  1001               	iorwf	btemp^0,w,c
 16770  0100D2  A4D8               	btfss	status,2,c
 16771  0100D4  D002               	goto	u11290
 16772  0100D6  A43E               	btfss	_flags^0,2,c
 16773  0100D8  D036               	goto	l12289
 16774  0100DA                     u11290:
 16775                           
 16776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 16777                           ;stkvar	_sign @ sp[(-56)+42]
 16778  0100DA  0EF2               	movlw	-14
 16779  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 16780  0100E2  0EF3               	movlw	-13
 16781  0100E4  50E3               	movf	plusw1,w,c
 16782  0100E6  1001               	iorwf	btemp^0,w,c
 16783  0100E8  A4D8               	btfss	status,2,c
 16784  0100EA  D002               	goto	l12281
 16785  0100EC  0E2B               	movlw	43
 16786  0100EE  D001               	goto	L17
 16787  0100F0                     l12281:
 16788  0100F0  0E2D               	movlw	45
 16789  0100F2                     L17:
 16790  0100F2  6E0B               	movwf	(btemp+10)^0,c
 16791  0100F4  0E00               	movlw	0
 16792  0100F6  6E0C               	movwf	(btemp+11)^0,c
 16793                           
 16794                           ;stkvar	_efgtoa$5706 @ sp[(-56)+10]
 16795  0100F8  0ED2               	movlw	-46
 16796  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16797  010100  0ED3               	movlw	-45
 16798  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 16799                           
 16800                           ;stkvar	_efgtoa$5706 @ sp[(-56)+10]
 16801  010108  0ED2               	movlw	-46
 16802  01010A  006F FF8C  F297    	movff	plusw1,_dbuf
 16803                           
 16804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 16805                           ;stkvar	_n @ sp[(-56)+32]
 16806  010110  0EE8               	movlw	-24
 16807  010112  50E3               	movf	plusw1,w,c
 16808  010114  0F01               	addlw	1
 16809  010116  6E01               	movwf	btemp^0,c
 16810  010118  0EE8               	movlw	-24
 16811  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 16812  010120  6A01               	clrf	btemp^0,c
 16813  010122  0EE9               	movlw	-23
 16814  010124  50E3               	movf	plusw1,w,c
 16815  010126  2001               	addwfc	btemp^0,w,c
 16816  010128  6E01               	movwf	btemp^0,c
 16817  01012A  0EE9               	movlw	-23
 16818  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 16819                           
 16820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 16821                           ;stkvar	_w @ sp[(-56)+38]
 16822  010132  50E1               	movf	fsr1l,w,c
 16823  010134  0FEE               	addlw	-18
 16824  010136  6ED9               	movwf	fsr2l,c
 16825  010138  50E2               	movf	fsr1h,w,c
 16826  01013A  6EDA               	movwf	fsr2h,c
 16827  01013C  0EFF               	movlw	255
 16828  01013E  22DA               	addwfc	fsr2h,f,c
 16829  010140  06DE               	decf	postinc2,f,c
 16830  010142  0E00               	movlw	0
 16831  010144  5ADD               	subwfb	postdec2,f,c
 16832  010146                     l12289:
 16833                           
 16834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 16835                           ;stkvar	_g @ sp[(-56)+16]
 16836  010146  0ED8               	movlw	-40
 16837  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 16838  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 16839  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 16840  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 16841  010160  EC03  F0C6         	call	___fpclassifyf	;wreg free
 16842  010164  0401               	decf	btemp^0,w,c
 16843  010166  1002               	iorwf	(btemp+1)^0,w,c
 16844  010168  A4D8               	btfss	status,2,c
 16845  01016A  D076               	goto	l12307
 16846  01016C  0EBF               	movlw	191
 16847  01016E  6E0B               	movwf	(btemp+10)^0,c
 16848  010170  0EFF               	movlw	255
 16849  010172  6E0C               	movwf	(btemp+11)^0,c
 16850                           
 16851                           ;stkvar	_c @ sp[(-56)+-7]
 16852  010174  0EC1               	movlw	-63
 16853  010176  50E3               	movf	plusw1,w,c
 16854  010178  6E09               	movwf	(btemp+8)^0,c
 16855  01017A  6A0A               	clrf	(btemp+9)^0,c
 16856  01017C  500B               	movf	(btemp+10)^0,w,c
 16857  01017E  2609               	addwf	(btemp+8)^0,f,c
 16858  010180  500C               	movf	(btemp+11)^0,w,c
 16859  010182  220A               	addwfc	(btemp+9)^0,f,c
 16860  010184  500A               	movf	(btemp+9)^0,w,c
 16861  010186  E106               	bnz	u11320
 16862  010188  0E1A               	movlw	26
 16863  01018A  5C09               	subwf	(btemp+8)^0,w,c
 16864  01018C  B0D8               	btfsc	status,0,c
 16865  01018E  D002               	goto	u11320
 16866  010190  0E01               	movlw	1
 16867  010192  D001               	goto	u11330
 16868  010194                     u11320:
 16869  010194  0E00               	movlw	0
 16870  010196                     u11330:
 16871  010196  6E0B               	movwf	(btemp+10)^0,c
 16872  010198  6A0C               	clrf	(btemp+11)^0,c
 16873                           
 16874                           ;stkvar	_efgtoa$5707 @ sp[(-56)+8]
 16875  01019A  0ED0               	movlw	-48
 16876  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16877  0101A2  0ED1               	movlw	-47
 16878  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16879                           
 16880                           ;stkvar	_efgtoa$5707 @ sp[(-56)+8]
 16881  0101AA  0ED0               	movlw	-48
 16882  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 16883  0101B2  0ED1               	movlw	-47
 16884  0101B4  50E3               	movf	plusw1,w,c
 16885  0101B6  1001               	iorwf	btemp^0,w,c
 16886  0101B8  B4D8               	btfsc	status,2,c
 16887  0101BA  D017               	goto	l12299
 16888                           
 16889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 16890  0101BC  0ED7               	movlw	low STR_65
 16891  0101BE  6EE6               	movwf	postinc1,c
 16892  0101C0  0EFF               	movlw	high STR_65
 16893  0101C2  6EE6               	movwf	postinc1,c
 16894                           
 16895                           ;stkvar	_n @ sp[(-58)+32]
 16896  0101C4  0E97               	movlw	low _dbuf
 16897  0101C6  6E0B               	movwf	(btemp+10)^0,c
 16898  0101C8  0E02               	movlw	high _dbuf
 16899  0101CA  6E0C               	movwf	(btemp+11)^0,c
 16900  0101CC  0EE6               	movlw	-26
 16901  0101CE  50E3               	movf	plusw1,w,c
 16902  0101D0  260B               	addwf	(btemp+10)^0,f,c
 16903  0101D2  0EE7               	movlw	-25
 16904  0101D4  50E3               	movf	plusw1,w,c
 16905  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 16906  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16907  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 16908  0101E4  ECF9  F0D1         	call	_strcpy	;wreg free
 16909                           
 16910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 16911  0101E8  D016               	goto	l12301
 16912  0101EA                     l12299:
 16913                           
 16914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 16915  0101EA  0EDF               	movlw	low STR_66
 16916  0101EC  6EE6               	movwf	postinc1,c
 16917  0101EE  0EFF               	movlw	high STR_66
 16918  0101F0  6EE6               	movwf	postinc1,c
 16919                           
 16920                           ;stkvar	_n @ sp[(-58)+32]
 16921  0101F2  0E97               	movlw	low _dbuf
 16922  0101F4  6E0B               	movwf	(btemp+10)^0,c
 16923  0101F6  0E02               	movlw	high _dbuf
 16924  0101F8  6E0C               	movwf	(btemp+11)^0,c
 16925  0101FA  0EE6               	movlw	-26
 16926  0101FC  50E3               	movf	plusw1,w,c
 16927  0101FE  260B               	addwf	(btemp+10)^0,f,c
 16928  010200  0EE7               	movlw	-25
 16929  010202  50E3               	movf	plusw1,w,c
 16930  010204  220C               	addwfc	(btemp+11)^0,f,c
 16931  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16932  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16933  010212  ECF9  F0D1         	call	_strcpy	;wreg free
 16934  010216                     l12301:
 16935                           
 16936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 16937                           ;stkvar	_w @ sp[(-56)+38]
 16938  010216  50E1               	movf	fsr1l,w,c
 16939  010218  0FEE               	addlw	-18
 16940  01021A  6ED9               	movwf	fsr2l,c
 16941  01021C  50E2               	movf	fsr1h,w,c
 16942  01021E  6EDA               	movwf	fsr2h,c
 16943  010220  0EFF               	movlw	255
 16944  010222  22DA               	addwfc	fsr2h,f,c
 16945  010224  0EFD               	movlw	253
 16946  010226  26DE               	addwf	postinc2,f,c
 16947  010228  0EFF               	movlw	255
 16948  01022A  22DD               	addwfc	postdec2,f,c
 16949  01022C                     l12303:
 16950                           
 16951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 16952                           ;stkvar	_w @ sp[(-56)+38]
 16953  01022C  0EEE               	movlw	-18
 16954  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 16955  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 16956  01023A  0E97               	movlw	low _dbuf
 16957  01023C  6EE6               	movwf	postinc1,c
 16958  01023E  0E02               	movlw	high _dbuf
 16959  010240  6EE6               	movwf	postinc1,c
 16960                           
 16961                           ;stkvar	_fp @ sp[(-60)+-2]
 16962  010242  0EC2               	movlw	-62
 16963  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 16964  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 16965  010250  EC90  F0CE         	call	_pad	;wreg free
 16966  010254  EF1D  F089         	goto	l2275
 16967  010258                     l12307:
 16968                           
 16969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 16970                           ;stkvar	_g @ sp[(-56)+16]
 16971  010258  0ED8               	movlw	-40
 16972  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 16973  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 16974  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 16975  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 16976  010272  EC03  F0C6         	call	___fpclassifyf	;wreg free
 16977  010276  5001               	movf	btemp^0,w,c
 16978  010278  1002               	iorwf	(btemp+1)^0,w,c
 16979  01027A  A4D8               	btfss	status,2,c
 16980  01027C  D056               	goto	l12325
 16981  01027E  0EBF               	movlw	191
 16982  010280  6E0B               	movwf	(btemp+10)^0,c
 16983  010282  0EFF               	movlw	255
 16984  010284  6E0C               	movwf	(btemp+11)^0,c
 16985                           
 16986                           ;stkvar	_c @ sp[(-56)+-7]
 16987  010286  0EC1               	movlw	-63
 16988  010288  50E3               	movf	plusw1,w,c
 16989  01028A  6E09               	movwf	(btemp+8)^0,c
 16990  01028C  6A0A               	clrf	(btemp+9)^0,c
 16991  01028E  500B               	movf	(btemp+10)^0,w,c
 16992  010290  2609               	addwf	(btemp+8)^0,f,c
 16993  010292  500C               	movf	(btemp+11)^0,w,c
 16994  010294  220A               	addwfc	(btemp+9)^0,f,c
 16995  010296  500A               	movf	(btemp+9)^0,w,c
 16996  010298  E106               	bnz	u11360
 16997  01029A  0E1A               	movlw	26
 16998  01029C  5C09               	subwf	(btemp+8)^0,w,c
 16999  01029E  B0D8               	btfsc	status,0,c
 17000  0102A0  D002               	goto	u11360
 17001  0102A2  0E01               	movlw	1
 17002  0102A4  D001               	goto	u11370
 17003  0102A6                     u11360:
 17004  0102A6  0E00               	movlw	0
 17005  0102A8                     u11370:
 17006  0102A8  6E0B               	movwf	(btemp+10)^0,c
 17007  0102AA  6A0C               	clrf	(btemp+11)^0,c
 17008                           
 17009                           ;stkvar	_efgtoa$5711 @ sp[(-56)+6]
 17010  0102AC  0ECE               	movlw	-50
 17011  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17012  0102B4  0ECF               	movlw	-49
 17013  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 17014                           
 17015                           ;stkvar	_efgtoa$5711 @ sp[(-56)+6]
 17016  0102BC  0ECE               	movlw	-50
 17017  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 17018  0102C4  0ECF               	movlw	-49
 17019  0102C6  50E3               	movf	plusw1,w,c
 17020  0102C8  1001               	iorwf	btemp^0,w,c
 17021  0102CA  B4D8               	btfsc	status,2,c
 17022  0102CC  D017               	goto	l12317
 17023                           
 17024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 17025  0102CE  0EDB               	movlw	low STR_69
 17026  0102D0  6EE6               	movwf	postinc1,c
 17027  0102D2  0EFF               	movlw	high STR_69
 17028  0102D4  6EE6               	movwf	postinc1,c
 17029                           
 17030                           ;stkvar	_n @ sp[(-58)+32]
 17031  0102D6  0E97               	movlw	low _dbuf
 17032  0102D8  6E0B               	movwf	(btemp+10)^0,c
 17033  0102DA  0E02               	movlw	high _dbuf
 17034  0102DC  6E0C               	movwf	(btemp+11)^0,c
 17035  0102DE  0EE6               	movlw	-26
 17036  0102E0  50E3               	movf	plusw1,w,c
 17037  0102E2  260B               	addwf	(btemp+10)^0,f,c
 17038  0102E4  0EE7               	movlw	-25
 17039  0102E6  50E3               	movf	plusw1,w,c
 17040  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 17041  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17042  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 17043  0102F6  ECF9  F0D1         	call	_strcpy	;wreg free
 17044                           
 17045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 17046  0102FA  D78D               	goto	l12301
 17047  0102FC                     l12317:
 17048                           
 17049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 17050  0102FC  0EE3               	movlw	low STR_70
 17051  0102FE  6EE6               	movwf	postinc1,c
 17052  010300  0EFF               	movlw	high STR_70
 17053  010302  6EE6               	movwf	postinc1,c
 17054                           
 17055                           ;stkvar	_n @ sp[(-58)+32]
 17056  010304  0E97               	movlw	low _dbuf
 17057  010306  6E0B               	movwf	(btemp+10)^0,c
 17058  010308  0E02               	movlw	high _dbuf
 17059  01030A  6E0C               	movwf	(btemp+11)^0,c
 17060  01030C  0EE6               	movlw	-26
 17061  01030E  50E3               	movf	plusw1,w,c
 17062  010310  260B               	addwf	(btemp+10)^0,f,c
 17063  010312  0EE7               	movlw	-25
 17064  010314  50E3               	movf	plusw1,w,c
 17065  010316  220C               	addwfc	(btemp+11)^0,f,c
 17066  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17067  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 17068  010324  ECF9  F0D1         	call	_strcpy	;wreg free
 17069  010328  D776               	goto	l12301
 17070  01032A                     l12325:
 17071                           
 17072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 17073  01032A  0E00               	movlw	0
 17074  01032C  6E09               	movwf	(btemp+8)^0,c
 17075  01032E  0E00               	movlw	0
 17076  010330  6E0A               	movwf	(btemp+9)^0,c
 17077  010332  0E80               	movlw	128
 17078  010334  6E0B               	movwf	(btemp+10)^0,c
 17079  010336  0E3F               	movlw	63
 17080  010338  6E0C               	movwf	(btemp+11)^0,c
 17081                           
 17082                           ;stkvar	_u @ sp[(-56)+12]
 17083  01033A  0ED4               	movlw	-44
 17084  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 17085  010342  0ED5               	movlw	-43
 17086  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17087  01034A  0ED6               	movlw	-42
 17088  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17089  010352  0ED7               	movlw	-41
 17090  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 17091                           
 17092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 17093                           ;stkvar	_e @ sp[(-56)+34]
 17094  01035A  0EEA               	movlw	-22
 17095  01035C  6AE3               	clrf	plusw1,c
 17096  01035E  0EEB               	movlw	-21
 17097  010360  6AE3               	clrf	plusw1,c
 17098                           
 17099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 17100  010362  0E00               	movlw	0
 17101  010364  6EE6               	movwf	postinc1,c
 17102  010366  0E00               	movlw	0
 17103  010368  6EE6               	movwf	postinc1,c
 17104  01036A  0E00               	movlw	0
 17105  01036C  6EE6               	movwf	postinc1,c
 17106  01036E  0E00               	movlw	0
 17107  010370  6EE6               	movwf	postinc1,c
 17108                           
 17109                           ;stkvar	_g @ sp[(-60)+16]
 17110  010372  0ED4               	movlw	-44
 17111  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 17112  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 17113  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 17114  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 17115  01038C  EC33  F0D3         	call	___fleq	;wreg free
 17116  010390  A001               	btfss	btemp& (0+255),0,c
 17117  010392  D039               	goto	l12337
 17118  010394  D0BC               	goto	u11410
 17119  010396                     l12333:
 17120                           
 17121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 17122  010396  0E00               	movlw	0
 17123  010398  6EE6               	movwf	postinc1,c
 17124  01039A  0E00               	movlw	0
 17125  01039C  6EE6               	movwf	postinc1,c
 17126  01039E  0E20               	movlw	32
 17127  0103A0  6EE6               	movwf	postinc1,c
 17128  0103A2  0E41               	movlw	65
 17129  0103A4  6EE6               	movwf	postinc1,c
 17130                           
 17131                           ;stkvar	_u @ sp[(-60)+12]
 17132  0103A6  0ED0               	movlw	-48
 17133  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17134  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 17135  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 17136  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 17137  0103C0  ECE5  F09E         	call	___flmul	;wreg free
 17138                           
 17139                           ;stkvar	_u @ sp[(-56)+12]
 17140  0103C4  0ED4               	movlw	-44
 17141  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 17142  0103CC  0ED5               	movlw	-43
 17143  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17144  0103D4  0ED6               	movlw	-42
 17145  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17146  0103DC  0ED7               	movlw	-41
 17147  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 17148                           
 17149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 17150                           ;stkvar	_e @ sp[(-56)+34]
 17151  0103E4  0EEA               	movlw	-22
 17152  0103E6  50E3               	movf	plusw1,w,c
 17153  0103E8  0F01               	addlw	1
 17154  0103EA  6E01               	movwf	btemp^0,c
 17155  0103EC  0EEA               	movlw	-22
 17156  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 17157  0103F4  6A01               	clrf	btemp^0,c
 17158  0103F6  0EEB               	movlw	-21
 17159  0103F8  50E3               	movf	plusw1,w,c
 17160  0103FA  2001               	addwfc	btemp^0,w,c
 17161  0103FC  6E01               	movwf	btemp^0,c
 17162  0103FE  0EEB               	movlw	-21
 17163  010400  0060  F007  FFE3   	movff	btemp,plusw1
 17164  010406                     l12337:
 17165                           
 17166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 17167  010406  0E00               	movlw	0
 17168  010408  6EE6               	movwf	postinc1,c
 17169  01040A  0E00               	movlw	0
 17170  01040C  6EE6               	movwf	postinc1,c
 17171  01040E  0E20               	movlw	32
 17172  010410  6EE6               	movwf	postinc1,c
 17173  010412  0E41               	movlw	65
 17174  010414  6EE6               	movwf	postinc1,c
 17175                           
 17176                           ;stkvar	_u @ sp[(-60)+12]
 17177  010416  0ED0               	movlw	-48
 17178  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 17179  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 17180  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 17181  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 17182  010430  ECE5  F09E         	call	___flmul	;wreg free
 17183  010434  0060  F007  FFE6   	movff	btemp,postinc1
 17184  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17185  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17186  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 17187                           
 17188                           ;stkvar	_g @ sp[(-60)+16]
 17189  01044C  0ED4               	movlw	-44
 17190  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 17191  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 17192  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 17193  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 17194  010466  EC0A  F0C9         	call	___flge	;wreg free
 17195  01046A  A001               	btfss	btemp& (0+255),0,c
 17196  01046C  D032               	goto	l12343
 17197  01046E  D793               	goto	l12333
 17198  010470                     l12339:
 17199                           
 17200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 17201  010470  0E00               	movlw	0
 17202  010472  6EE6               	movwf	postinc1,c
 17203  010474  0E00               	movlw	0
 17204  010476  6EE6               	movwf	postinc1,c
 17205  010478  0E20               	movlw	32
 17206  01047A  6EE6               	movwf	postinc1,c
 17207  01047C  0E41               	movlw	65
 17208  01047E  6EE6               	movwf	postinc1,c
 17209                           
 17210                           ;stkvar	_u @ sp[(-60)+12]
 17211  010480  0ED0               	movlw	-48
 17212  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 17213  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 17214  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 17215  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 17216  01049A  ECD8  F0A6         	call	___fldiv	;wreg free
 17217                           
 17218                           ;stkvar	_u @ sp[(-56)+12]
 17219  01049E  0ED4               	movlw	-44
 17220  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 17221  0104A6  0ED5               	movlw	-43
 17222  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17223  0104AE  0ED6               	movlw	-42
 17224  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17225  0104B6  0ED7               	movlw	-41
 17226  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 17227                           
 17228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 17229                           ;stkvar	_e @ sp[(-56)+34]
 17230  0104BE  50E1               	movf	fsr1l,w,c
 17231  0104C0  0FEA               	addlw	-22
 17232  0104C2  6ED9               	movwf	fsr2l,c
 17233  0104C4  50E2               	movf	fsr1h,w,c
 17234  0104C6  6EDA               	movwf	fsr2h,c
 17235  0104C8  0EFF               	movlw	255
 17236  0104CA  22DA               	addwfc	fsr2h,f,c
 17237  0104CC  06DE               	decf	postinc2,f,c
 17238  0104CE  0E00               	movlw	0
 17239  0104D0  5ADD               	subwfb	postdec2,f,c
 17240  0104D2                     l12343:
 17241                           
 17242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 17243                           ;stkvar	_u @ sp[(-56)+12]
 17244  0104D2  0ED4               	movlw	-44
 17245  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 17246  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 17247  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 17248  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 17249                           
 17250                           ;stkvar	_g @ sp[(-60)+16]
 17251  0104EC  0ED4               	movlw	-44
 17252  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 17253  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 17254  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 17255  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 17256  010506  EC0A  F0C9         	call	___flge	;wreg free
 17257  01050A  A001               	btfss	btemp& (0+255),0,c
 17258  01050C  D7B1               	goto	l12339
 17259  01050E                     u11410:
 17260                           
 17261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 17262                           ;stkvar	_c @ sp[(-56)+-7]
 17263  01050E  0EC1               	movlw	-63
 17264  010510  50E3               	movf	plusw1,w,c
 17265  010512  6EE6               	movwf	postinc1,c
 17266  010514  0E00               	movlw	0
 17267  010516  6EE6               	movwf	postinc1,c
 17268  010518  EC02  F0D8         	call	_tolower	;wreg free
 17269                           
 17270                           ;stkvar	_mode @ sp[(-56)+54]
 17271  01051C  0EFE               	movlw	-2
 17272  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 17273                           
 17274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 17275                           ;stkvar	_mode @ sp[(-56)+54]
 17276                           ;stkvar	_nmode @ sp[(-56)+55]
 17277  010524  0EFE               	movlw	-2
 17278  010526  006F FF8C  F001    	movff	plusw1,btemp
 17279  01052C  0EFF               	movlw	-1
 17280  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 17281                           
 17282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 17283                           ;stkvar	_mode @ sp[(-56)+54]
 17284  010534  0EFE               	movlw	-2
 17285  010536  006F FF8C  F001    	movff	plusw1,btemp
 17286  01053C  0E67               	movlw	103
 17287  01053E  1801               	xorwf	btemp^0,w,c
 17288  010540  A4D8               	btfss	status,2,c
 17289  010542  D025               	goto	l12361
 17290                           
 17291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 17292  010544  503C               	movf	_prec^0,w,c
 17293  010546  103D               	iorwf	(_prec+1)^0,w,c
 17294  010548  A4D8               	btfss	status,2,c
 17295  01054A  D004               	goto	l12355
 17296                           
 17297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 17298  01054C  0E00               	movlw	0
 17299  01054E  6E3D               	movwf	(_prec+1)^0,c
 17300  010550  0E01               	movlw	1
 17301  010552  6E3C               	movwf	_prec^0,c
 17302  010554                     l12355:
 17303                           
 17304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 17305  010554  BE3D               	btfsc	(_prec+1)^0,7,c
 17306  010556  D005               	goto	u11440
 17307  010558  503D               	movf	(_prec+1)^0,w,c
 17308  01055A  E110               	bnz	l12359
 17309  01055C  043C               	decf	_prec^0,w,c
 17310  01055E  B0D8               	btfsc	status,0,c
 17311  010560  D00D               	goto	l12359
 17312  010562                     u11440:
 17313  010562  0E06               	movlw	6
 17314  010564  6E0B               	movwf	(btemp+10)^0,c
 17315  010566  0E00               	movlw	0
 17316  010568  6E0C               	movwf	(btemp+11)^0,c
 17317                           
 17318                           ;stkvar	_p @ sp[(-56)+40]
 17319  01056A  0EF0               	movlw	-16
 17320  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17321  010572  0EF1               	movlw	-15
 17322  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 17323  01057A  D00C               	goto	l12367
 17324  01057C                     l12359:
 17325                           
 17326                           ;stkvar	_p @ sp[(-56)+40]
 17327  01057C  0EF0               	movlw	-16
 17328  01057E  0060  F0F3  FFE3   	movff	_prec,plusw1
 17329  010584  0EF1               	movlw	-15
 17330  010586  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 17331  01058C  D003               	goto	l12367
 17332  01058E                     l12361:
 17333                           
 17334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 17335  01058E  AE3D               	btfss	(_prec+1)^0,7,c
 17336  010590  D7F5               	goto	l12359
 17337  010592  D7E7               	goto	u11440
 17338  010594                     l12367:
 17339                           
 17340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 17341                           ;stkvar	_mode @ sp[(-56)+54]
 17342  010594  0EFE               	movlw	-2
 17343  010596  006F FF8C  F001    	movff	plusw1,btemp
 17344  01059C  0E67               	movlw	103
 17345  01059E  1801               	xorwf	btemp^0,w,c
 17346  0105A0  A4D8               	btfss	status,2,c
 17347  0105A2  D02F               	goto	l12377
 17348                           
 17349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 17350                           ;stkvar	_e @ sp[(-56)+34]
 17351  0105A4  0EEB               	movlw	-21
 17352  0105A6  AEE3               	btfss	plusw1,7,c
 17353  0105A8  D00E               	goto	u11470
 17354  0105AA  0EEA               	movlw	-22
 17355  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 17356  0105B2  0EFC               	movlw	252
 17357  0105B4  5E01               	subwf	btemp^0,f,c
 17358  0105B6  0EEB               	movlw	-21
 17359  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 17360  0105BE  0EFF               	movlw	255
 17361  0105C0  5A01               	subwfb	btemp^0,f,c
 17362  0105C2  A0D8               	btfss	status,0,c
 17363  0105C4  D018               	goto	l12375
 17364  0105C6                     u11470:
 17365                           
 17366                           ;stkvar	_e @ sp[(-56)+34]
 17367                           ;stkvar	_p @ sp[(-56)+40]
 17368  0105C6  0EF0               	movlw	-16
 17369  0105C8  50E3               	movf	plusw1,w,c
 17370  0105CA  0FFF               	addlw	255
 17371  0105CC  6E0B               	movwf	(btemp+10)^0,c
 17372  0105CE  0EF1               	movlw	-15
 17373  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 17374  0105D6  0EFF               	movlw	255
 17375  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 17376  0105DA  0EEA               	movlw	-22
 17377  0105DC  50E3               	movf	plusw1,w,c
 17378  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 17379  0105E0  500C               	movf	(btemp+11)^0,w,c
 17380  0105E2  0A80               	xorlw	128
 17381  0105E4  6E01               	movwf	btemp^0,c
 17382  0105E6  0EEB               	movlw	-21
 17383  0105E8  50E3               	movf	plusw1,w,c
 17384  0105EA  0A80               	xorlw	128
 17385  0105EC  5801               	subwfb	btemp^0,w,c
 17386  0105EE  A0D8               	btfss	status,0,c
 17387  0105F0  D002               	goto	l12375
 17388                           
 17389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 17390  0105F2  0E66               	movlw	102
 17391  0105F4  D001               	goto	L18
 17392  0105F6                     l12375:
 17393                           
 17394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 17395  0105F6  0E65               	movlw	101
 17396  0105F8                     L18:
 17397  0105F8  6E0C               	movwf	(btemp+11)^0,c
 17398                           
 17399                           ;stkvar	_nmode @ sp[(-56)+55]
 17400  0105FA  0EFF               	movlw	-1
 17401  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17402  010602                     l12377:
 17403                           
 17404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 17405                           ;stkvar	_p @ sp[(-56)+40]
 17406                           ;stkvar	_m @ sp[(-56)+48]
 17407  010602  0EF0               	movlw	-16
 17408  010604  006F FF8C  F001    	movff	plusw1,btemp
 17409  01060A  0EF8               	movlw	-8
 17410  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 17411  010612  0EF1               	movlw	-15
 17412  010614  006F FF8C  F001    	movff	plusw1,btemp
 17413  01061A  0EF9               	movlw	-7
 17414  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 17415                           
 17416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 17417                           ;stkvar	_mode @ sp[(-56)+54]
 17418  010622  0EFE               	movlw	-2
 17419  010624  006F FF8C  F001    	movff	plusw1,btemp
 17420  01062A  0E67               	movlw	103
 17421  01062C  1801               	xorwf	btemp^0,w,c
 17422  01062E  A4D8               	btfss	status,2,c
 17423  010630  D00B               	goto	u11510
 17424                           
 17425                           ;stkvar	_nmode @ sp[(-56)+55]
 17426  010632  0EFF               	movlw	-1
 17427  010634  006F FF8C  F001    	movff	plusw1,btemp
 17428  01063A  0E66               	movlw	102
 17429  01063C  1801               	xorwf	btemp^0,w,c
 17430  01063E  A4D8               	btfss	status,2,c
 17431  010640  D014               	goto	l2304
 17432                           
 17433                           ;stkvar	_e @ sp[(-56)+34]
 17434  010642  0EEB               	movlw	-21
 17435  010644  AEE3               	btfss	plusw1,7,c
 17436  010646  D011               	goto	l2304
 17437  010648                     u11510:
 17438                           
 17439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 17440                           ;stkvar	_m @ sp[(-56)+48]
 17441  010648  0EF8               	movlw	-8
 17442  01064A  50E3               	movf	plusw1,w,c
 17443  01064C  0F01               	addlw	1
 17444  01064E  6E01               	movwf	btemp^0,c
 17445  010650  0EF8               	movlw	-8
 17446  010652  0060  F007  FFE3   	movff	btemp,plusw1
 17447  010658  6A01               	clrf	btemp^0,c
 17448  01065A  0EF9               	movlw	-7
 17449  01065C  50E3               	movf	plusw1,w,c
 17450  01065E  2001               	addwfc	btemp^0,w,c
 17451  010660  6E01               	movwf	btemp^0,c
 17452  010662  0EF9               	movlw	-7
 17453  010664  0060  F007  FFE3   	movff	btemp,plusw1
 17454  01066A                     l2304:
 17455                           
 17456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 17457                           ;stkvar	_nmode @ sp[(-56)+55]
 17458  01066A  0EFF               	movlw	-1
 17459  01066C  006F FF8C  F001    	movff	plusw1,btemp
 17460  010672  0E66               	movlw	102
 17461  010674  1801               	xorwf	btemp^0,w,c
 17462  010676  A4D8               	btfss	status,2,c
 17463  010678  D03B               	goto	l12397
 17464                           
 17465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 17466                           ;stkvar	_e @ sp[(-56)+34]
 17467  01067A  0EEB               	movlw	-21
 17468  01067C  AEE3               	btfss	plusw1,7,c
 17469  01067E  D01C               	goto	l12393
 17470                           
 17471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 17472  010680  0E00               	movlw	0
 17473  010682  6E09               	movwf	(btemp+8)^0,c
 17474  010684  0E00               	movlw	0
 17475  010686  6E0A               	movwf	(btemp+9)^0,c
 17476  010688  0E80               	movlw	128
 17477  01068A  6E0B               	movwf	(btemp+10)^0,c
 17478  01068C  0E3F               	movlw	63
 17479  01068E  6E0C               	movwf	(btemp+11)^0,c
 17480                           
 17481                           ;stkvar	_u @ sp[(-56)+12]
 17482  010690  0ED4               	movlw	-44
 17483  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 17484  010698  0ED5               	movlw	-43
 17485  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17486  0106A0  0ED6               	movlw	-42
 17487  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17488  0106A8  0ED7               	movlw	-41
 17489  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17490                           
 17491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 17492                           ;stkvar	_e @ sp[(-56)+34]
 17493  0106B0  0EEA               	movlw	-22
 17494  0106B2  6AE3               	clrf	plusw1,c
 17495  0106B4  0EEB               	movlw	-21
 17496  0106B6  6AE3               	clrf	plusw1,c
 17497  0106B8                     l12393:
 17498                           
 17499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 17500                           ;stkvar	_mode @ sp[(-56)+54]
 17501  0106B8  0EFE               	movlw	-2
 17502  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 17503  0106C0  0E67               	movlw	103
 17504  0106C2  1801               	xorwf	btemp^0,w,c
 17505  0106C4  B4D8               	btfsc	status,2,c
 17506  0106C6  D014               	goto	l12397
 17507                           
 17508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 17509                           ;stkvar	_e @ sp[(-56)+34]
 17510                           ;stkvar	_m @ sp[(-56)+48]
 17511  0106C8  0EF8               	movlw	-8
 17512  0106CA  50E3               	movf	plusw1,w,c
 17513  0106CC  6E01               	movwf	btemp^0,c
 17514  0106CE  0EEA               	movlw	-22
 17515  0106D0  50E3               	movf	plusw1,w,c
 17516  0106D2  2601               	addwf	btemp^0,f,c
 17517  0106D4  0EF8               	movlw	-8
 17518  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 17519  0106DC  0EF9               	movlw	-7
 17520  0106DE  50E3               	movf	plusw1,w,c
 17521  0106E0  6E01               	movwf	btemp^0,c
 17522  0106E2  0EEB               	movlw	-21
 17523  0106E4  50E3               	movf	plusw1,w,c
 17524  0106E6  2201               	addwfc	btemp^0,f,c
 17525  0106E8  0EF9               	movlw	-7
 17526  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 17527  0106F0                     l12397:
 17528                           
 17529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 17530                           ;stkvar	_i @ sp[(-56)+36]
 17531  0106F0  0EEC               	movlw	-20
 17532  0106F2  6AE3               	clrf	plusw1,c
 17533  0106F4  0EED               	movlw	-19
 17534  0106F6  6AE3               	clrf	plusw1,c
 17535                           
 17536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 17537                           ;stkvar	_g @ sp[(-56)+16]
 17538  0106F8  0ED8               	movlw	-40
 17539  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 17540  010700  0ED9               	movlw	-39
 17541  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 17542  010708  0EDA               	movlw	-38
 17543  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17544  010710  0EDB               	movlw	-37
 17545  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 17546                           
 17547                           ;stkvar	_h @ sp[(-56)+24]
 17548  010718  0EE0               	movlw	-32
 17549  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17550  010720  0EE1               	movlw	-31
 17551  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17552  010728  0EE2               	movlw	-30
 17553  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17554  010730  0EE3               	movlw	-29
 17555  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 17556                           
 17557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 17558                           ;stkvar	_u @ sp[(-56)+12]
 17559  010738  0ED4               	movlw	-44
 17560  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 17561  010740  0ED5               	movlw	-43
 17562  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 17563  010748  0ED6               	movlw	-42
 17564  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17565  010750  0ED7               	movlw	-41
 17566  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 17567                           
 17568                           ;stkvar	_ou @ sp[(-56)+28]
 17569  010758  0EE4               	movlw	-28
 17570  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17571  010760  0EE5               	movlw	-27
 17572  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17573  010768  0EE6               	movlw	-26
 17574  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17575  010770  0EE7               	movlw	-25
 17576  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 17577                           
 17578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 17579  010778  D0D6               	goto	l12413
 17580  01077A                     l12403:
 17581                           
 17582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 17583                           ;stkvar	_u @ sp[(-56)+12]
 17584  01077A  0ED4               	movlw	-44
 17585  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 17586  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 17587  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 17588  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 17589                           
 17590                           ;stkvar	_h @ sp[(-60)+24]
 17591  010794  0EDC               	movlw	-36
 17592  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 17593  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 17594  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 17595  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17596  0107AE  ECD8  F0A6         	call	___fldiv	;wreg free
 17597  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 17598  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17599  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17600  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 17601  0107CA  EC62  F0B2         	call	_floorf	;wreg free
 17602                           
 17603                           ;stkvar	_l @ sp[(-56)+20]
 17604  0107CE  0EDC               	movlw	-36
 17605  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 17606  0107D6  0EDD               	movlw	-35
 17607  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17608  0107DE  0EDE               	movlw	-34
 17609  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17610  0107E6  0EDF               	movlw	-33
 17611  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 17612                           
 17613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 17614                           ;stkvar	_l @ sp[(-56)+20]
 17615  0107EE  0EDC               	movlw	-36
 17616  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 17617  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 17618  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 17619  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 17620  010808  EC51  F0C8         	call	___fltol	;wreg free
 17621  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 17622  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 17623                           
 17624                           ;stkvar	_d @ sp[(-56)+44]
 17625  010818  0EF4               	movlw	-12
 17626  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17627  010820  0EF5               	movlw	-11
 17628  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 17629                           
 17630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 17631                           ;stkvar	_u @ sp[(-56)+12]
 17632  010828  0ED4               	movlw	-44
 17633  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 17634  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 17635  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 17636  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 17637                           
 17638                           ;stkvar	_l @ sp[(-60)+20]
 17639  010842  0ED8               	movlw	-40
 17640  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 17641  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 17642  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 17643  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 17644  01085C  ECE5  F09E         	call	___flmul	;wreg free
 17645  010860  0060  F007  FFE6   	movff	btemp,postinc1
 17646  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17647  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17648  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 17649                           
 17650                           ;stkvar	_h @ sp[(-60)+24]
 17651  010878  0EDC               	movlw	-36
 17652  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 17653  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 17654  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 17655  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 17656  010892  ECE8  F0DC         	call	___flsub	;wreg free
 17657                           
 17658                           ;stkvar	_h @ sp[(-56)+24]
 17659  010896  0EE0               	movlw	-32
 17660  010898  0060  F007  FFE3   	movff	btemp,plusw1
 17661  01089E  0EE1               	movlw	-31
 17662  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17663  0108A6  0EE2               	movlw	-30
 17664  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17665  0108AE  0EE3               	movlw	-29
 17666  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 17667                           
 17668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 17669  0108B6  0E00               	movlw	0
 17670  0108B8  6EE6               	movwf	postinc1,c
 17671  0108BA  0E00               	movlw	0
 17672  0108BC  6EE6               	movwf	postinc1,c
 17673  0108BE  0E20               	movlw	32
 17674  0108C0  6EE6               	movwf	postinc1,c
 17675  0108C2  0E41               	movlw	65
 17676  0108C4  6EE6               	movwf	postinc1,c
 17677                           
 17678                           ;stkvar	_u @ sp[(-60)+12]
 17679  0108C6  0ED0               	movlw	-48
 17680  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 17681  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 17682  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 17683  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 17684  0108E0  ECD8  F0A6         	call	___fldiv	;wreg free
 17685                           
 17686                           ;stkvar	_u @ sp[(-56)+12]
 17687  0108E4  0ED4               	movlw	-44
 17688  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 17689  0108EC  0ED5               	movlw	-43
 17690  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17691  0108F4  0ED6               	movlw	-42
 17692  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17693  0108FC  0ED7               	movlw	-41
 17694  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 17695                           
 17696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 17697                           ;stkvar	_i @ sp[(-56)+36]
 17698  010904  0EEC               	movlw	-20
 17699  010906  50E3               	movf	plusw1,w,c
 17700  010908  0F01               	addlw	1
 17701  01090A  6E01               	movwf	btemp^0,c
 17702  01090C  0EEC               	movlw	-20
 17703  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 17704  010914  6A01               	clrf	btemp^0,c
 17705  010916  0EED               	movlw	-19
 17706  010918  50E3               	movf	plusw1,w,c
 17707  01091A  2001               	addwfc	btemp^0,w,c
 17708  01091C  6E01               	movwf	btemp^0,c
 17709  01091E  0EED               	movlw	-19
 17710  010920  0060  F007  FFE3   	movff	btemp,plusw1
 17711  010926                     l12413:
 17712                           
 17713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 17714                           ;stkvar	_m @ sp[(-56)+48]
 17715                           ;stkvar	_i @ sp[(-56)+36]
 17716  010926  50E1               	movf	fsr1l,w,c
 17717  010928  0FEC               	addlw	-20
 17718  01092A  6ED9               	movwf	fsr2l,c
 17719  01092C  50E2               	movf	fsr1h,w,c
 17720  01092E  6EDA               	movwf	fsr2h,c
 17721  010930  0EFF               	movlw	255
 17722  010932  22DA               	addwfc	fsr2h,f,c
 17723  010934  0EF8               	movlw	-8
 17724  010936  50E3               	movf	plusw1,w,c
 17725  010938  5CDE               	subwf	postinc2,w,c
 17726  01093A  50DE               	movf	postinc2,w,c
 17727  01093C  0A80               	xorlw	128
 17728  01093E  6E01               	movwf	btemp^0,c
 17729  010940  0EF9               	movlw	-7
 17730  010942  50E3               	movf	plusw1,w,c
 17731  010944  0A80               	xorlw	128
 17732  010946  5801               	subwfb	btemp^0,w,c
 17733  010948  A0D8               	btfss	status,0,c
 17734  01094A  D717               	goto	l12403
 17735                           
 17736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 17737  01094C  0E00               	movlw	0
 17738  01094E  6EE6               	movwf	postinc1,c
 17739  010950  0E00               	movlw	0
 17740  010952  6EE6               	movwf	postinc1,c
 17741  010954  0EA0               	movlw	160
 17742  010956  6EE6               	movwf	postinc1,c
 17743  010958  0E40               	movlw	64
 17744  01095A  6EE6               	movwf	postinc1,c
 17745                           
 17746                           ;stkvar	_u @ sp[(-60)+12]
 17747  01095C  0ED0               	movlw	-48
 17748  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 17749  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 17750  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 17751  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 17752  010976  ECE5  F09E         	call	___flmul	;wreg free
 17753                           
 17754                           ;stkvar	_l @ sp[(-56)+20]
 17755  01097A  0EDC               	movlw	-36
 17756  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 17757  010982  0EDD               	movlw	-35
 17758  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17759  01098A  0EDE               	movlw	-34
 17760  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17761  010992  0EDF               	movlw	-33
 17762  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 17763                           
 17764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 17765                           ;stkvar	_l @ sp[(-56)+20]
 17766  01099A  0EDC               	movlw	-36
 17767  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 17768  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 17769  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17770  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 17771                           
 17772                           ;stkvar	_h @ sp[(-60)+24]
 17773  0109B4  0EDC               	movlw	-36
 17774  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 17775  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 17776  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 17777  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 17778  0109CE  EC0A  F0C9         	call	___flge	;wreg free
 17779  0109D2  A001               	btfss	btemp& (0+255),0,c
 17780  0109D4  D021               	goto	u11580
 17781                           
 17782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 17783                           ;stkvar	_l @ sp[(-56)+20]
 17784                           
 17785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 17786                           
 17787                           ;stkvar	_l @ sp[(-56)+20]
 17788                           
 17789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 17790  0109D6  0EDC               	movlw	-36
 17791  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 17792  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 17793  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 17794  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 17795                           
 17796                           ;stkvar	_h @ sp[(-60)+24]
 17797  0109F0  0EDC               	movlw	-36
 17798  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 17799  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 17800  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 17801  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 17802  010A0A  EC33  F0D3         	call	___fleq	;wreg free
 17803  010A0E  A001               	btfss	btemp& (0+255),0,c
 17804  010A10  D01B               	goto	l12427
 17805                           
 17806                           ;stkvar	_d @ sp[(-56)+44]
 17807  010A12  0EF4               	movlw	-12
 17808  010A14  B0E3               	btfsc	plusw1,0,c
 17809  010A16  D018               	goto	l12427
 17810  010A18                     u11580:
 17811                           
 17812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 17813  010A18  0E00               	movlw	0
 17814  010A1A  6E09               	movwf	(btemp+8)^0,c
 17815  010A1C  0E00               	movlw	0
 17816  010A1E  6E0A               	movwf	(btemp+9)^0,c
 17817  010A20  0E00               	movlw	0
 17818  010A22  6E0B               	movwf	(btemp+10)^0,c
 17819  010A24  0E00               	movlw	0
 17820  010A26  6E0C               	movwf	(btemp+11)^0,c
 17821                           
 17822                           ;stkvar	_l @ sp[(-56)+20]
 17823  010A28  0EDC               	movlw	-36
 17824  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17825  010A30  0EDD               	movlw	-35
 17826  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17827  010A38  0EDE               	movlw	-34
 17828  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17829  010A40  0EDF               	movlw	-33
 17830  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 17831  010A48                     l12427:
 17832                           
 17833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 17834                           ;stkvar	_l @ sp[(-56)+20]
 17835  010A48  0EDC               	movlw	-36
 17836  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 17837  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 17838  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 17839  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17840                           
 17841                           ;stkvar	_g @ sp[(-60)+16]
 17842  010A62  0ED4               	movlw	-44
 17843  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 17844  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 17845  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 17846  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 17847  010A7C  ECFA  F0A2         	call	___fladd	;wreg free
 17848                           
 17849                           ;stkvar	_h @ sp[(-56)+24]
 17850  010A80  0EE0               	movlw	-32
 17851  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 17852  010A88  0EE1               	movlw	-31
 17853  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17854  010A90  0EE2               	movlw	-30
 17855  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17856  010A98  0EE3               	movlw	-29
 17857  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 17858                           
 17859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 17860                           ;stkvar	_ou @ sp[(-56)+28]
 17861  010AA0  0EE4               	movlw	-28
 17862  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 17863  010AA8  0EE5               	movlw	-27
 17864  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 17865  010AB0  0EE6               	movlw	-26
 17866  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 17867  010AB8  0EE7               	movlw	-25
 17868  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 17869                           
 17870                           ;stkvar	_u @ sp[(-56)+12]
 17871  010AC0  0ED4               	movlw	-44
 17872  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 17873  010AC8  0ED5               	movlw	-43
 17874  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17875  010AD0  0ED6               	movlw	-42
 17876  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17877  010AD8  0ED7               	movlw	-41
 17878  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17879                           
 17880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 17881                           ;stkvar	_nmode @ sp[(-56)+55]
 17882  010AE0  0EFF               	movlw	-1
 17883  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 17884  010AE8  0E65               	movlw	101
 17885  010AEA  1801               	xorwf	btemp^0,w,c
 17886  010AEC  B4D8               	btfsc	status,2,c
 17887  010AEE  D011               	goto	l12435
 17888                           
 17889                           ;stkvar	_e @ sp[(-56)+34]
 17890                           ;stkvar	_ne @ sp[(-56)+46]
 17891  010AF0  0EEA               	movlw	-22
 17892  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 17893  010AF8  0EF6               	movlw	-10
 17894  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 17895  010B00  0EEB               	movlw	-21
 17896  010B02  006F FF8C  F001    	movff	plusw1,btemp
 17897  010B08  0EF7               	movlw	-9
 17898  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 17899  010B10  D004               	goto	l2319
 17900  010B12                     l12435:
 17901                           
 17902                           ;stkvar	_ne @ sp[(-56)+46]
 17903  010B12  0EF6               	movlw	-10
 17904  010B14  6AE3               	clrf	plusw1,c
 17905  010B16  0EF7               	movlw	-9
 17906  010B18  6AE3               	clrf	plusw1,c
 17907  010B1A                     l2319:
 17908                           
 17909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 17910                           ;stkvar	_pp @ sp[(-56)+50]
 17911  010B1A  0EFA               	movlw	-6
 17912  010B1C  6AE3               	clrf	plusw1,c
 17913  010B1E  0EFB               	movlw	-5
 17914  010B20  6AE3               	clrf	plusw1,c
 17915                           
 17916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 17917                           ;stkvar	_t @ sp[(-56)+52]
 17918  010B22  0EFC               	movlw	-4
 17919  010B24  6AE3               	clrf	plusw1,c
 17920  010B26  0EFD               	movlw	-3
 17921  010B28  6AE3               	clrf	plusw1,c
 17922                           
 17923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 17924                           ;stkvar	_i @ sp[(-56)+36]
 17925  010B2A  0EEC               	movlw	-20
 17926  010B2C  6AE3               	clrf	plusw1,c
 17927  010B2E  0EED               	movlw	-19
 17928  010B30  6AE3               	clrf	plusw1,c
 17929                           
 17930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 17931  010B32  D1B7               	goto	l12487
 17932  010B34                     l12437:
 17933                           
 17934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 17935                           ;stkvar	_u @ sp[(-56)+12]
 17936  010B34  0ED4               	movlw	-44
 17937  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 17938  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 17939  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 17940  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 17941                           
 17942                           ;stkvar	_h @ sp[(-60)+24]
 17943  010B4E  0EDC               	movlw	-36
 17944  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 17945  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 17946  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17947  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 17948  010B68  ECD8  F0A6         	call	___fldiv	;wreg free
 17949  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 17950  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17951  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17952  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 17953  010B84  EC62  F0B2         	call	_floorf	;wreg free
 17954                           
 17955                           ;stkvar	_l @ sp[(-56)+20]
 17956  010B88  0EDC               	movlw	-36
 17957  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 17958  010B90  0EDD               	movlw	-35
 17959  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17960  010B98  0EDE               	movlw	-34
 17961  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17962  010BA0  0EDF               	movlw	-33
 17963  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 17964                           
 17965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 17966                           ;stkvar	_l @ sp[(-56)+20]
 17967  010BA8  0EDC               	movlw	-36
 17968  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 17969  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 17970  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 17971  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 17972  010BC2  EC51  F0C8         	call	___fltol	;wreg free
 17973  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 17974  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 17975                           
 17976                           ;stkvar	_d @ sp[(-56)+44]
 17977  010BD2  0EF4               	movlw	-12
 17978  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17979  010BDA  0EF5               	movlw	-11
 17980  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17981                           
 17982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 17983  010BE2  B83E               	btfsc	_flags^0,4,c
 17984  010BE4  D026               	goto	l12451
 17985                           
 17986                           ;stkvar	_d @ sp[(-56)+44]
 17987  010BE6  0EF4               	movlw	-12
 17988  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 17989  010BEE  0EF5               	movlw	-11
 17990  010BF0  50E3               	movf	plusw1,w,c
 17991  010BF2  1001               	iorwf	btemp^0,w,c
 17992  010BF4  A4D8               	btfss	status,2,c
 17993  010BF6  D01D               	goto	l12451
 17994                           
 17995                           ;stkvar	_mode @ sp[(-56)+54]
 17996  010BF8  0EFE               	movlw	-2
 17997  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 17998  010C00  0E67               	movlw	103
 17999  010C02  1801               	xorwf	btemp^0,w,c
 18000  010C04  A4D8               	btfss	status,2,c
 18001  010C06  D015               	goto	l12451
 18002                           
 18003                           ;stkvar	_ne @ sp[(-56)+46]
 18004  010C08  0EF7               	movlw	-9
 18005  010C0A  AEE3               	btfss	plusw1,7,c
 18006  010C0C  D012               	goto	l12451
 18007                           
 18008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 18009                           ;stkvar	_t @ sp[(-56)+52]
 18010  010C0E  0EFC               	movlw	-4
 18011  010C10  50E3               	movf	plusw1,w,c
 18012  010C12  0F01               	addlw	1
 18013  010C14  6E01               	movwf	btemp^0,c
 18014  010C16  0EFC               	movlw	-4
 18015  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 18016  010C1E  6A01               	clrf	btemp^0,c
 18017  010C20  0EFD               	movlw	-3
 18018  010C22  50E3               	movf	plusw1,w,c
 18019  010C24  2001               	addwfc	btemp^0,w,c
 18020  010C26  6E01               	movwf	btemp^0,c
 18021  010C28  0EFD               	movlw	-3
 18022  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 18023                           
 18024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 18025  010C30  D0AF               	goto	l12479
 18026  010C32                     l12451:
 18027                           
 18028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 18029                           ;stkvar	_pp @ sp[(-56)+50]
 18030  010C32  0EFA               	movlw	-6
 18031  010C34  006F FF8C  F001    	movff	plusw1,btemp
 18032  010C3A  0EFB               	movlw	-5
 18033  010C3C  50E3               	movf	plusw1,w,c
 18034  010C3E  1001               	iorwf	btemp^0,w,c
 18035  010C40  A4D8               	btfss	status,2,c
 18036  010C42  D070               	goto	l12471
 18037                           
 18038                           ;stkvar	_ne @ sp[(-56)+46]
 18039  010C44  0EF7               	movlw	-9
 18040  010C46  AEE3               	btfss	plusw1,7,c
 18041  010C48  D06D               	goto	l12471
 18042                           
 18043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 18044                           ;stkvar	_n @ sp[(-56)+32]
 18045  010C4A  0EE8               	movlw	-24
 18046  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18047  010C52  0EE9               	movlw	-23
 18048  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 18049  010C5A  0E97               	movlw	low _dbuf
 18050  010C5C  240B               	addwf	(btemp+10)^0,w,c
 18051  010C5E  6ED9               	movwf	fsr2l,c
 18052  010C60  0E02               	movlw	high _dbuf
 18053  010C62  200C               	addwfc	(btemp+11)^0,w,c
 18054  010C64  6EDA               	movwf	fsr2h,c
 18055  010C66  0E2E               	movlw	46
 18056  010C68  6EDF               	movwf	indf2,c
 18057                           
 18058                           ;stkvar	_n @ sp[(-56)+32]
 18059  010C6A  0EE8               	movlw	-24
 18060  010C6C  50E3               	movf	plusw1,w,c
 18061  010C6E  0F01               	addlw	1
 18062  010C70  6E01               	movwf	btemp^0,c
 18063  010C72  0EE8               	movlw	-24
 18064  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 18065  010C7A  6A01               	clrf	btemp^0,c
 18066  010C7C  0EE9               	movlw	-23
 18067  010C7E  50E3               	movf	plusw1,w,c
 18068  010C80  2001               	addwfc	btemp^0,w,c
 18069  010C82  6E01               	movwf	btemp^0,c
 18070  010C84  0EE9               	movlw	-23
 18071  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 18072                           
 18073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 18074                           ;stkvar	_w @ sp[(-56)+38]
 18075  010C8C  50E1               	movf	fsr1l,w,c
 18076  010C8E  0FEE               	addlw	-18
 18077  010C90  6ED9               	movwf	fsr2l,c
 18078  010C92  50E2               	movf	fsr1h,w,c
 18079  010C94  6EDA               	movwf	fsr2h,c
 18080  010C96  0EFF               	movlw	255
 18081  010C98  22DA               	addwfc	fsr2h,f,c
 18082  010C9A  06DE               	decf	postinc2,f,c
 18083  010C9C  0E00               	movlw	0
 18084  010C9E  5ADD               	subwfb	postdec2,f,c
 18085                           
 18086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 18087  010CA0  0E01               	movlw	1
 18088  010CA2  6E0B               	movwf	(btemp+10)^0,c
 18089  010CA4  0E00               	movlw	0
 18090  010CA6  6E0C               	movwf	(btemp+11)^0,c
 18091                           
 18092                           ;stkvar	_pp @ sp[(-56)+50]
 18093  010CA8  0EFA               	movlw	-6
 18094  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18095  010CB0  0EFB               	movlw	-5
 18096  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 18097  010CB8  D035               	goto	l12471
 18098  010CBA                     l12463:
 18099                           
 18100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 18101                           ;stkvar	_n @ sp[(-56)+32]
 18102  010CBA  0EE8               	movlw	-24
 18103  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18104  010CC2  0EE9               	movlw	-23
 18105  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18106  010CCA  0E97               	movlw	low _dbuf
 18107  010CCC  240B               	addwf	(btemp+10)^0,w,c
 18108  010CCE  6ED9               	movwf	fsr2l,c
 18109  010CD0  0E02               	movlw	high _dbuf
 18110  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 18111  010CD4  6EDA               	movwf	fsr2h,c
 18112  010CD6  0E30               	movlw	48
 18113  010CD8  6EDF               	movwf	indf2,c
 18114                           
 18115                           ;stkvar	_n @ sp[(-56)+32]
 18116  010CDA  0EE8               	movlw	-24
 18117  010CDC  50E3               	movf	plusw1,w,c
 18118  010CDE  0F01               	addlw	1
 18119  010CE0  6E01               	movwf	btemp^0,c
 18120  010CE2  0EE8               	movlw	-24
 18121  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 18122  010CEA  6A01               	clrf	btemp^0,c
 18123  010CEC  0EE9               	movlw	-23
 18124  010CEE  50E3               	movf	plusw1,w,c
 18125  010CF0  2001               	addwfc	btemp^0,w,c
 18126  010CF2  6E01               	movwf	btemp^0,c
 18127  010CF4  0EE9               	movlw	-23
 18128  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 18129                           
 18130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 18131                           ;stkvar	_w @ sp[(-56)+38]
 18132  010CFC  50E1               	movf	fsr1l,w,c
 18133  010CFE  0FEE               	addlw	-18
 18134  010D00  6ED9               	movwf	fsr2l,c
 18135  010D02  50E2               	movf	fsr1h,w,c
 18136  010D04  6EDA               	movwf	fsr2h,c
 18137  010D06  0EFF               	movlw	255
 18138  010D08  22DA               	addwfc	fsr2h,f,c
 18139  010D0A  06DE               	decf	postinc2,f,c
 18140  010D0C  0E00               	movlw	0
 18141  010D0E  5ADD               	subwfb	postdec2,f,c
 18142                           
 18143                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 18144                           ;stkvar	_t @ sp[(-56)+52]
 18145  010D10  50E1               	movf	fsr1l,w,c
 18146  010D12  0FFC               	addlw	-4
 18147  010D14  6ED9               	movwf	fsr2l,c
 18148  010D16  50E2               	movf	fsr1h,w,c
 18149  010D18  6EDA               	movwf	fsr2h,c
 18150  010D1A  0EFF               	movlw	255
 18151  010D1C  22DA               	addwfc	fsr2h,f,c
 18152  010D1E  06DE               	decf	postinc2,f,c
 18153  010D20  0E00               	movlw	0
 18154  010D22  5ADD               	subwfb	postdec2,f,c
 18155  010D24                     l12471:
 18156                           
 18157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 18158                           ;stkvar	_t @ sp[(-56)+52]
 18159  010D24  0EFC               	movlw	-4
 18160  010D26  006F FF8C  F001    	movff	plusw1,btemp
 18161  010D2C  0EFD               	movlw	-3
 18162  010D2E  50E3               	movf	plusw1,w,c
 18163  010D30  1001               	iorwf	btemp^0,w,c
 18164  010D32  A4D8               	btfss	status,2,c
 18165  010D34  D7C2               	goto	l12463
 18166                           
 18167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 18168                           ;stkvar	_n @ sp[(-56)+32]
 18169  010D36  0EE8               	movlw	-24
 18170  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 18171  010D3E  0EE9               	movlw	-23
 18172  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 18173  010D46  0E97               	movlw	low _dbuf
 18174  010D48  240B               	addwf	(btemp+10)^0,w,c
 18175  010D4A  6ED9               	movwf	fsr2l,c
 18176  010D4C  0E02               	movlw	high _dbuf
 18177  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 18178  010D50  6EDA               	movwf	fsr2h,c
 18179                           
 18180                           ;stkvar	_d @ sp[(-56)+44]
 18181  010D52  0EF4               	movlw	-12
 18182  010D54  50E3               	movf	plusw1,w,c
 18183  010D56  0F30               	addlw	48
 18184  010D58  6EDF               	movwf	indf2,c
 18185                           
 18186                           ;stkvar	_n @ sp[(-56)+32]
 18187  010D5A  0EE8               	movlw	-24
 18188  010D5C  50E3               	movf	plusw1,w,c
 18189  010D5E  0F01               	addlw	1
 18190  010D60  6E01               	movwf	btemp^0,c
 18191  010D62  0EE8               	movlw	-24
 18192  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 18193  010D6A  6A01               	clrf	btemp^0,c
 18194  010D6C  0EE9               	movlw	-23
 18195  010D6E  50E3               	movf	plusw1,w,c
 18196  010D70  2001               	addwfc	btemp^0,w,c
 18197  010D72  6E01               	movwf	btemp^0,c
 18198  010D74  0EE9               	movlw	-23
 18199  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 18200                           
 18201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 18202                           ;stkvar	_w @ sp[(-56)+38]
 18203  010D7C  50E1               	movf	fsr1l,w,c
 18204  010D7E  0FEE               	addlw	-18
 18205  010D80  6ED9               	movwf	fsr2l,c
 18206  010D82  50E2               	movf	fsr1h,w,c
 18207  010D84  6EDA               	movwf	fsr2h,c
 18208  010D86  0EFF               	movlw	255
 18209  010D88  22DA               	addwfc	fsr2h,f,c
 18210  010D8A  06DE               	decf	postinc2,f,c
 18211  010D8C  0E00               	movlw	0
 18212  010D8E  5ADD               	subwfb	postdec2,f,c
 18213  010D90                     l12479:
 18214                           
 18215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 18216                           ;stkvar	_u @ sp[(-56)+12]
 18217  010D90  0ED4               	movlw	-44
 18218  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 18219  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 18220  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 18221  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 18222                           
 18223                           ;stkvar	_l @ sp[(-60)+20]
 18224  010DAA  0ED8               	movlw	-40
 18225  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 18226  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 18227  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 18228  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 18229  010DC4  ECE5  F09E         	call	___flmul	;wreg free
 18230  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 18231  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 18232  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 18233  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 18234                           
 18235                           ;stkvar	_h @ sp[(-60)+24]
 18236  010DE0  0EDC               	movlw	-36
 18237  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 18238  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 18239  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 18240  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 18241  010DFA  ECE8  F0DC         	call	___flsub	;wreg free
 18242                           
 18243                           ;stkvar	_h @ sp[(-56)+24]
 18244  010DFE  0EE0               	movlw	-32
 18245  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 18246  010E06  0EE1               	movlw	-31
 18247  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18248  010E0E  0EE2               	movlw	-30
 18249  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18250  010E16  0EE3               	movlw	-29
 18251  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 18252                           
 18253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 18254  010E1E  0E00               	movlw	0
 18255  010E20  6EE6               	movwf	postinc1,c
 18256  010E22  0E00               	movlw	0
 18257  010E24  6EE6               	movwf	postinc1,c
 18258  010E26  0E20               	movlw	32
 18259  010E28  6EE6               	movwf	postinc1,c
 18260  010E2A  0E41               	movlw	65
 18261  010E2C  6EE6               	movwf	postinc1,c
 18262                           
 18263                           ;stkvar	_u @ sp[(-60)+12]
 18264  010E2E  0ED0               	movlw	-48
 18265  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 18266  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 18267  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 18268  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 18269  010E48  ECD8  F0A6         	call	___fldiv	;wreg free
 18270                           
 18271                           ;stkvar	_u @ sp[(-56)+12]
 18272  010E4C  0ED4               	movlw	-44
 18273  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 18274  010E54  0ED5               	movlw	-43
 18275  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18276  010E5C  0ED6               	movlw	-42
 18277  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18278  010E64  0ED7               	movlw	-41
 18279  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 18280                           
 18281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 18282                           ;stkvar	_ne @ sp[(-56)+46]
 18283  010E6C  50E1               	movf	fsr1l,w,c
 18284  010E6E  0FF6               	addlw	-10
 18285  010E70  6ED9               	movwf	fsr2l,c
 18286  010E72  50E2               	movf	fsr1h,w,c
 18287  010E74  6EDA               	movwf	fsr2h,c
 18288  010E76  0EFF               	movlw	255
 18289  010E78  22DA               	addwfc	fsr2h,f,c
 18290  010E7A  06DE               	decf	postinc2,f,c
 18291  010E7C  0E00               	movlw	0
 18292  010E7E  5ADD               	subwfb	postdec2,f,c
 18293                           
 18294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 18295                           ;stkvar	_i @ sp[(-56)+36]
 18296  010E80  0EEC               	movlw	-20
 18297  010E82  50E3               	movf	plusw1,w,c
 18298  010E84  0F01               	addlw	1
 18299  010E86  6E01               	movwf	btemp^0,c
 18300  010E88  0EEC               	movlw	-20
 18301  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 18302  010E90  6A01               	clrf	btemp^0,c
 18303  010E92  0EED               	movlw	-19
 18304  010E94  50E3               	movf	plusw1,w,c
 18305  010E96  2001               	addwfc	btemp^0,w,c
 18306  010E98  6E01               	movwf	btemp^0,c
 18307  010E9A  0EED               	movlw	-19
 18308  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 18309  010EA2                     l12487:
 18310                           
 18311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 18312                           ;stkvar	_m @ sp[(-56)+48]
 18313                           ;stkvar	_i @ sp[(-56)+36]
 18314  010EA2  50E1               	movf	fsr1l,w,c
 18315  010EA4  0FEC               	addlw	-20
 18316  010EA6  6ED9               	movwf	fsr2l,c
 18317  010EA8  50E2               	movf	fsr1h,w,c
 18318  010EAA  6EDA               	movwf	fsr2h,c
 18319  010EAC  0EFF               	movlw	255
 18320  010EAE  22DA               	addwfc	fsr2h,f,c
 18321  010EB0  0EF8               	movlw	-8
 18322  010EB2  50E3               	movf	plusw1,w,c
 18323  010EB4  5CDE               	subwf	postinc2,w,c
 18324  010EB6  50DE               	movf	postinc2,w,c
 18325  010EB8  0A80               	xorlw	128
 18326  010EBA  6E01               	movwf	btemp^0,c
 18327  010EBC  0EF9               	movlw	-7
 18328  010EBE  50E3               	movf	plusw1,w,c
 18329  010EC0  0A80               	xorlw	128
 18330  010EC2  5801               	subwfb	btemp^0,w,c
 18331  010EC4  B0D8               	btfsc	status,0,c
 18332  010EC6  D00E               	goto	u11680
 18333                           
 18334                           ;stkvar	_n @ sp[(-56)+32]
 18335  010EC8  0EE9               	movlw	-23
 18336  010ECA  BEE3               	btfsc	plusw1,7,c
 18337  010ECC  D633               	goto	l12437
 18338  010ECE  0EE9               	movlw	-23
 18339  010ED0  50E3               	movf	plusw1,w,c
 18340  010ED2  E108               	bnz	u11680
 18341  010ED4  0EE8               	movlw	-24
 18342  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 18343  010EDC  0E4B               	movlw	75
 18344  010EDE  5E01               	subwf	btemp^0,f,c
 18345  010EE0  A0D8               	btfss	status,0,c
 18346  010EE2  D628               	goto	l12437
 18347  010EE4                     u11680:
 18348                           
 18349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 18350                           ;stkvar	_pp @ sp[(-56)+50]
 18351  010EE4  0EFA               	movlw	-6
 18352  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 18353  010EEC  0EFB               	movlw	-5
 18354  010EEE  50E3               	movf	plusw1,w,c
 18355  010EF0  1001               	iorwf	btemp^0,w,c
 18356  010EF2  B4D8               	btfsc	status,2,c
 18357  010EF4  A83E               	btfss	_flags^0,4,c
 18358  010EF6  D021               	goto	l12499
 18359                           
 18360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 18361                           ;stkvar	_n @ sp[(-56)+32]
 18362  010EF8  0EE8               	movlw	-24
 18363  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 18364  010F00  0EE9               	movlw	-23
 18365  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 18366  010F08  0E97               	movlw	low _dbuf
 18367  010F0A  240B               	addwf	(btemp+10)^0,w,c
 18368  010F0C  6ED9               	movwf	fsr2l,c
 18369  010F0E  0E02               	movlw	high _dbuf
 18370  010F10  200C               	addwfc	(btemp+11)^0,w,c
 18371  010F12  6EDA               	movwf	fsr2h,c
 18372  010F14  0E2E               	movlw	46
 18373  010F16  6EDF               	movwf	indf2,c
 18374                           
 18375                           ;stkvar	_n @ sp[(-56)+32]
 18376  010F18  0EE8               	movlw	-24
 18377  010F1A  50E3               	movf	plusw1,w,c
 18378  010F1C  0F01               	addlw	1
 18379  010F1E  6E01               	movwf	btemp^0,c
 18380  010F20  0EE8               	movlw	-24
 18381  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 18382  010F28  6A01               	clrf	btemp^0,c
 18383  010F2A  0EE9               	movlw	-23
 18384  010F2C  50E3               	movf	plusw1,w,c
 18385  010F2E  2001               	addwfc	btemp^0,w,c
 18386  010F30  6E01               	movwf	btemp^0,c
 18387  010F32  0EE9               	movlw	-23
 18388  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 18389  010F3A                     l12499:
 18390                           
 18391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 18392                           ;stkvar	_n @ sp[(-56)+32]
 18393  010F3A  0EE8               	movlw	-24
 18394  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18395  010F42  0EE9               	movlw	-23
 18396  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 18397  010F4A  0E97               	movlw	low _dbuf
 18398  010F4C  240B               	addwf	(btemp+10)^0,w,c
 18399  010F4E  6ED9               	movwf	fsr2l,c
 18400  010F50  0E02               	movlw	high _dbuf
 18401  010F52  200C               	addwfc	(btemp+11)^0,w,c
 18402  010F54  6EDA               	movwf	fsr2h,c
 18403  010F56  0E00               	movlw	0
 18404  010F58  6EDF               	movwf	indf2,c
 18405                           
 18406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 18407                           ;stkvar	_nmode @ sp[(-56)+55]
 18408  010F5A  0EFF               	movlw	-1
 18409  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 18410  010F62  0E65               	movlw	101
 18411  010F64  1801               	xorwf	btemp^0,w,c
 18412  010F66  A4D8               	btfss	status,2,c
 18413  010F68  EF16  F081         	goto	l12303
 18414                           
 18415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 18416  010F6C  0E4F               	movlw	79
 18417  010F6E  6E0B               	movwf	(btemp+10)^0,c
 18418  010F70  0E00               	movlw	0
 18419  010F72  6E0C               	movwf	(btemp+11)^0,c
 18420                           
 18421                           ;stkvar	_i @ sp[(-56)+36]
 18422  010F74  0EEC               	movlw	-20
 18423  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18424  010F7C  0EED               	movlw	-19
 18425  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18426                           
 18427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 18428                           ;stkvar	_i @ sp[(-56)+36]
 18429  010F84  0EEC               	movlw	-20
 18430  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 18431  010F8C  0EED               	movlw	-19
 18432  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18433  010F94  0E97               	movlw	low _dbuf
 18434  010F96  240B               	addwf	(btemp+10)^0,w,c
 18435  010F98  6ED9               	movwf	fsr2l,c
 18436  010F9A  0E02               	movlw	high _dbuf
 18437  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 18438  010F9E  6EDA               	movwf	fsr2h,c
 18439  010FA0  0E00               	movlw	0
 18440  010FA2  6EDF               	movwf	indf2,c
 18441                           
 18442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 18443                           ;stkvar	_sign @ sp[(-56)+42]
 18444  010FA4  0EF2               	movlw	-14
 18445  010FA6  6AE3               	clrf	plusw1,c
 18446  010FA8  0EF3               	movlw	-13
 18447  010FAA  6AE3               	clrf	plusw1,c
 18448                           
 18449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 18450                           ;stkvar	_e @ sp[(-56)+34]
 18451  010FAC  0EEB               	movlw	-21
 18452  010FAE  AEE3               	btfss	plusw1,7,c
 18453  010FB0  D012               	goto	l12513
 18454                           
 18455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 18456  010FB2  0E01               	movlw	1
 18457  010FB4  6E0B               	movwf	(btemp+10)^0,c
 18458  010FB6  0E00               	movlw	0
 18459  010FB8  6E0C               	movwf	(btemp+11)^0,c
 18460                           
 18461                           ;stkvar	_sign @ sp[(-56)+42]
 18462  010FBA  0EF2               	movlw	-14
 18463  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18464  010FC2  0EF3               	movlw	-13
 18465  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18466                           
 18467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 18468                           ;stkvar	_e @ sp[(-56)+34]
 18469                           ;stkvar	_e @ sp[(-56)+34]
 18470  010FCA  0EEA               	movlw	-22
 18471  010FCC  6CE3               	negf	plusw1,c
 18472  010FCE  0EEB               	movlw	-21
 18473  010FD0  1EE3               	comf	plusw1,f,c
 18474  010FD2  B0D8               	btfsc	status,0,c
 18475  010FD4  2AE3               	incf	plusw1,f,c
 18476  010FD6                     l12513:
 18477                           
 18478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 18479  010FD6  0E02               	movlw	2
 18480  010FD8  6E0B               	movwf	(btemp+10)^0,c
 18481  010FDA  0E00               	movlw	0
 18482  010FDC  6E0C               	movwf	(btemp+11)^0,c
 18483                           
 18484                           ;stkvar	_p @ sp[(-56)+40]
 18485  010FDE  0EF0               	movlw	-16
 18486  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18487  010FE6  0EF1               	movlw	-15
 18488  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 18489                           
 18490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 18491  010FEE  D051               	goto	l12525
 18492  010FF0                     l12515:
 18493                           
 18494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 18495                           ;stkvar	_i @ sp[(-56)+36]
 18496  010FF0  50E1               	movf	fsr1l,w,c
 18497  010FF2  0FEC               	addlw	-20
 18498  010FF4  6ED9               	movwf	fsr2l,c
 18499  010FF6  50E2               	movf	fsr1h,w,c
 18500  010FF8  6EDA               	movwf	fsr2h,c
 18501  010FFA  0EFF               	movlw	255
 18502  010FFC  22DA               	addwfc	fsr2h,f,c
 18503  010FFE  06DE               	decf	postinc2,f,c
 18504  011000  0E00               	movlw	0
 18505  011002  5ADD               	subwfb	postdec2,f,c
 18506                           
 18507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 18508                           ;stkvar	_i @ sp[(-56)+36]
 18509  011004  0EEC               	movlw	-20
 18510  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 18511  01100C  0EED               	movlw	-19
 18512  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18513  011014  0E97               	movlw	low _dbuf
 18514  011016  240B               	addwf	(btemp+10)^0,w,c
 18515  011018  6ED9               	movwf	fsr2l,c
 18516  01101A  0E02               	movlw	high _dbuf
 18517  01101C  200C               	addwfc	(btemp+11)^0,w,c
 18518  01101E  6EDA               	movwf	fsr2h,c
 18519  011020  0E0A               	movlw	10
 18520  011022  6EE6               	movwf	postinc1,c
 18521  011024  0E00               	movlw	0
 18522  011026  6EE6               	movwf	postinc1,c
 18523                           
 18524                           ;stkvar	_e @ sp[(-58)+34]
 18525  011028  0EE8               	movlw	-24
 18526  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 18527  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 18528  011036  EC04  F0CE         	call	___awmod	;wreg free
 18529  01103A  5001               	movf	btemp^0,w,c
 18530  01103C  0F30               	addlw	48
 18531  01103E  6EDF               	movwf	indf2,c
 18532                           
 18533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 18534  011040  0E0A               	movlw	10
 18535  011042  6EE6               	movwf	postinc1,c
 18536  011044  0E00               	movlw	0
 18537  011046  6EE6               	movwf	postinc1,c
 18538                           
 18539                           ;stkvar	_e @ sp[(-58)+34]
 18540  011048  0EE8               	movlw	-24
 18541  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 18542  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 18543  011056  EC6D  F0CA         	call	___awdiv	;wreg free
 18544                           
 18545                           ;stkvar	_e @ sp[(-56)+34]
 18546  01105A  0EEA               	movlw	-22
 18547  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 18548  011062  0EEB               	movlw	-21
 18549  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18550                           
 18551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 18552                           ;stkvar	_p @ sp[(-56)+40]
 18553  01106A  50E1               	movf	fsr1l,w,c
 18554  01106C  0FF0               	addlw	-16
 18555  01106E  6ED9               	movwf	fsr2l,c
 18556  011070  50E2               	movf	fsr1h,w,c
 18557  011072  6EDA               	movwf	fsr2h,c
 18558  011074  0EFF               	movlw	255
 18559  011076  22DA               	addwfc	fsr2h,f,c
 18560  011078  06DE               	decf	postinc2,f,c
 18561  01107A  0E00               	movlw	0
 18562  01107C  5ADD               	subwfb	postdec2,f,c
 18563                           
 18564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 18565                           ;stkvar	_w @ sp[(-56)+38]
 18566  01107E  50E1               	movf	fsr1l,w,c
 18567  011080  0FEE               	addlw	-18
 18568  011082  6ED9               	movwf	fsr2l,c
 18569  011084  50E2               	movf	fsr1h,w,c
 18570  011086  6EDA               	movwf	fsr2h,c
 18571  011088  0EFF               	movlw	255
 18572  01108A  22DA               	addwfc	fsr2h,f,c
 18573  01108C  06DE               	decf	postinc2,f,c
 18574  01108E  0E00               	movlw	0
 18575  011090  5ADD               	subwfb	postdec2,f,c
 18576  011092                     l12525:
 18577                           
 18578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 18579                           ;stkvar	_e @ sp[(-56)+34]
 18580  011092  0EEA               	movlw	-22
 18581  011094  006F FF8C  F001    	movff	plusw1,btemp
 18582  01109A  0EEB               	movlw	-21
 18583  01109C  50E3               	movf	plusw1,w,c
 18584  01109E  1001               	iorwf	btemp^0,w,c
 18585  0110A0  A4D8               	btfss	status,2,c
 18586  0110A2  D7A6               	goto	l12515
 18587                           
 18588                           ;stkvar	_p @ sp[(-56)+40]
 18589  0110A4  0EF1               	movlw	-15
 18590  0110A6  BEE3               	btfsc	plusw1,7,c
 18591  0110A8  D007               	goto	u11740
 18592  0110AA  0EF1               	movlw	-15
 18593  0110AC  50E3               	movf	plusw1,w,c
 18594  0110AE  E1A0               	bnz	l12515
 18595  0110B0  0EF0               	movlw	-16
 18596  0110B2  04E3               	decf	plusw1,w,c
 18597  0110B4  B0D8               	btfsc	status,0,c
 18598  0110B6  D79C               	goto	l12515
 18599  0110B8                     u11740:
 18600                           
 18601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 18602                           ;stkvar	_i @ sp[(-56)+36]
 18603  0110B8  50E1               	movf	fsr1l,w,c
 18604  0110BA  0FEC               	addlw	-20
 18605  0110BC  6ED9               	movwf	fsr2l,c
 18606  0110BE  50E2               	movf	fsr1h,w,c
 18607  0110C0  6EDA               	movwf	fsr2h,c
 18608  0110C2  0EFF               	movlw	255
 18609  0110C4  22DA               	addwfc	fsr2h,f,c
 18610  0110C6  06DE               	decf	postinc2,f,c
 18611  0110C8  0E00               	movlw	0
 18612  0110CA  5ADD               	subwfb	postdec2,f,c
 18613                           
 18614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 18615                           ;stkvar	_sign @ sp[(-56)+42]
 18616  0110CC  0EF2               	movlw	-14
 18617  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 18618  0110D4  0EF3               	movlw	-13
 18619  0110D6  50E3               	movf	plusw1,w,c
 18620  0110D8  1001               	iorwf	btemp^0,w,c
 18621  0110DA  A4D8               	btfss	status,2,c
 18622  0110DC  D002               	goto	l12535
 18623  0110DE  0E2B               	movlw	43
 18624  0110E0  D001               	goto	L19
 18625  0110E2                     l12535:
 18626  0110E2  0E2D               	movlw	45
 18627  0110E4                     L19:
 18628  0110E4  6E0B               	movwf	(btemp+10)^0,c
 18629  0110E6  0E00               	movlw	0
 18630  0110E8  6E0C               	movwf	(btemp+11)^0,c
 18631                           
 18632                           ;stkvar	_efgtoa$5715 @ sp[(-56)+4]
 18633  0110EA  0ECC               	movlw	-52
 18634  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18635  0110F2  0ECD               	movlw	-51
 18636  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18637                           
 18638                           ;stkvar	_efgtoa$5715 @ sp[(-56)+4]
 18639                           ;stkvar	_i @ sp[(-56)+36]
 18640  0110FA  0EEC               	movlw	-20
 18641  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18642  011102  0EED               	movlw	-19
 18643  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 18644  01110A  0E97               	movlw	low _dbuf
 18645  01110C  240B               	addwf	(btemp+10)^0,w,c
 18646  01110E  6ED9               	movwf	fsr2l,c
 18647  011110  0E02               	movlw	high _dbuf
 18648  011112  200C               	addwfc	(btemp+11)^0,w,c
 18649  011114  6EDA               	movwf	fsr2h,c
 18650  011116  0ECC               	movlw	-52
 18651  011118  006F FF8F FFDF     	movff	plusw1,indf2
 18652                           
 18653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 18654                           ;stkvar	_w @ sp[(-56)+38]
 18655  01111E  50E1               	movf	fsr1l,w,c
 18656  011120  0FEE               	addlw	-18
 18657  011122  6ED9               	movwf	fsr2l,c
 18658  011124  50E2               	movf	fsr1h,w,c
 18659  011126  6EDA               	movwf	fsr2h,c
 18660  011128  0EFF               	movlw	255
 18661  01112A  22DA               	addwfc	fsr2h,f,c
 18662  01112C  06DE               	decf	postinc2,f,c
 18663  01112E  0E00               	movlw	0
 18664  011130  5ADD               	subwfb	postdec2,f,c
 18665                           
 18666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 18667                           ;stkvar	_i @ sp[(-56)+36]
 18668  011132  50E1               	movf	fsr1l,w,c
 18669  011134  0FEC               	addlw	-20
 18670  011136  6ED9               	movwf	fsr2l,c
 18671  011138  50E2               	movf	fsr1h,w,c
 18672  01113A  6EDA               	movwf	fsr2h,c
 18673  01113C  0EFF               	movlw	255
 18674  01113E  22DA               	addwfc	fsr2h,f,c
 18675  011140  06DE               	decf	postinc2,f,c
 18676  011142  0E00               	movlw	0
 18677  011144  5ADD               	subwfb	postdec2,f,c
 18678  011146  0EBF               	movlw	191
 18679  011148  6E0B               	movwf	(btemp+10)^0,c
 18680  01114A  0EFF               	movlw	255
 18681  01114C  6E0C               	movwf	(btemp+11)^0,c
 18682                           
 18683                           ;stkvar	_c @ sp[(-56)+-7]
 18684  01114E  0EC1               	movlw	-63
 18685  011150  50E3               	movf	plusw1,w,c
 18686  011152  6E09               	movwf	(btemp+8)^0,c
 18687  011154  6A0A               	clrf	(btemp+9)^0,c
 18688  011156  500B               	movf	(btemp+10)^0,w,c
 18689  011158  2609               	addwf	(btemp+8)^0,f,c
 18690  01115A  500C               	movf	(btemp+11)^0,w,c
 18691  01115C  220A               	addwfc	(btemp+9)^0,f,c
 18692  01115E  500A               	movf	(btemp+9)^0,w,c
 18693  011160  E106               	bnz	u11760
 18694  011162  0E1A               	movlw	26
 18695  011164  5C09               	subwf	(btemp+8)^0,w,c
 18696  011166  B0D8               	btfsc	status,0,c
 18697  011168  D002               	goto	u11760
 18698  01116A  0E01               	movlw	1
 18699  01116C  D001               	goto	u11770
 18700  01116E                     u11760:
 18701  01116E  0E00               	movlw	0
 18702  011170                     u11770:
 18703  011170  6E0B               	movwf	(btemp+10)^0,c
 18704  011172  6A0C               	clrf	(btemp+11)^0,c
 18705                           
 18706                           ;stkvar	_efgtoa$5717 @ sp[(-56)+0]
 18707  011174  0EC8               	movlw	-56
 18708  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18709  01117C  0EC9               	movlw	-55
 18710  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18711                           
 18712                           ;stkvar	_efgtoa$5717 @ sp[(-56)+0]
 18713  011184  0EC8               	movlw	-56
 18714  011186  006F FF8C  F001    	movff	plusw1,btemp
 18715  01118C  0EC9               	movlw	-55
 18716  01118E  50E3               	movf	plusw1,w,c
 18717  011190  1001               	iorwf	btemp^0,w,c
 18718  011192  A4D8               	btfss	status,2,c
 18719  011194  D002               	goto	l12551
 18720  011196  0E65               	movlw	101
 18721  011198  D001               	goto	L20
 18722  01119A                     l12551:
 18723  01119A  0E45               	movlw	69
 18724  01119C                     L20:
 18725  01119C  6E0B               	movwf	(btemp+10)^0,c
 18726  01119E  0E00               	movlw	0
 18727  0111A0  6E0C               	movwf	(btemp+11)^0,c
 18728                           
 18729                           ;stkvar	_efgtoa$5716 @ sp[(-56)+2]
 18730  0111A2  0ECA               	movlw	-54
 18731  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18732  0111AA  0ECB               	movlw	-53
 18733  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 18734                           
 18735                           ;stkvar	_efgtoa$5716 @ sp[(-56)+2]
 18736                           ;stkvar	_i @ sp[(-56)+36]
 18737  0111B2  0EEC               	movlw	-20
 18738  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 18739  0111BA  0EED               	movlw	-19
 18740  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 18741  0111C2  0E97               	movlw	low _dbuf
 18742  0111C4  240B               	addwf	(btemp+10)^0,w,c
 18743  0111C6  6ED9               	movwf	fsr2l,c
 18744  0111C8  0E02               	movlw	high _dbuf
 18745  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 18746  0111CC  6EDA               	movwf	fsr2h,c
 18747  0111CE  0ECA               	movlw	-54
 18748  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 18749                           
 18750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 18751                           ;stkvar	_w @ sp[(-56)+38]
 18752  0111D6  50E1               	movf	fsr1l,w,c
 18753  0111D8  0FEE               	addlw	-18
 18754  0111DA  6ED9               	movwf	fsr2l,c
 18755  0111DC  50E2               	movf	fsr1h,w,c
 18756  0111DE  6EDA               	movwf	fsr2h,c
 18757  0111E0  0EFF               	movlw	255
 18758  0111E2  22DA               	addwfc	fsr2h,f,c
 18759  0111E4  06DE               	decf	postinc2,f,c
 18760  0111E6  0E00               	movlw	0
 18761  0111E8  5ADD               	subwfb	postdec2,f,c
 18762                           
 18763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 18764                           ;stkvar	_i @ sp[(-56)+36]
 18765  0111EA  0EEC               	movlw	-20
 18766  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18767  0111F2  0EED               	movlw	-19
 18768  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18769  0111FA  0E97               	movlw	low _dbuf
 18770  0111FC  240B               	addwf	(btemp+10)^0,w,c
 18771  0111FE  6E09               	movwf	(btemp+8)^0,c
 18772  011200  0E02               	movlw	high _dbuf
 18773  011202  200C               	addwfc	(btemp+11)^0,w,c
 18774  011204  6E0A               	movwf	(btemp+9)^0,c
 18775  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 18776  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 18777                           
 18778                           ;stkvar	_n @ sp[(-58)+32]
 18779  011212  0E97               	movlw	low _dbuf
 18780  011214  6E0B               	movwf	(btemp+10)^0,c
 18781  011216  0E02               	movlw	high _dbuf
 18782  011218  6E0C               	movwf	(btemp+11)^0,c
 18783  01121A  0EE6               	movlw	-26
 18784  01121C  50E3               	movf	plusw1,w,c
 18785  01121E  260B               	addwf	(btemp+10)^0,f,c
 18786  011220  0EE7               	movlw	-25
 18787  011222  50E3               	movf	plusw1,w,c
 18788  011224  220C               	addwfc	(btemp+11)^0,f,c
 18789  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18790  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 18791  011232  ECF9  F0D1         	call	_strcpy	;wreg free
 18792  011236  EF16  F081         	goto	l12303
 18793  01123A                     l2275:
 18794                           
 18795                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 18796  01123A  0EC1               	movlw	193
 18797  01123C  26E1               	addwf	fsr1l,f,c
 18798  01123E  0EFF               	movlw	255
 18799  011240  22E2               	addwfc	fsr1h,f,c
 18800  011242  0012               	return		;funcret
 18801  011244                     __end_of_efgtoa:
 18802                           	opt callstack 0
 18803                           
 18804 ;; *************** function _tolower *****************
 18805 ;; Defined at:
 18806 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 18807 ;; Parameters:    Size  Location     Type
 18808 ;;  c               2  [STACK] int 
 18809 ;; Auto vars:     Size  Location     Type
 18810 ;;		None
 18811 ;; Return value:  Size  Location     Type
 18812 ;;                  2  [STACK] int 
 18813 ;; Registers used:
 18814 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 18815 ;; Tracked objects:
 18816 ;;		On entry : 0/0
 18817 ;;		On exit  : 0/0
 18818 ;;		Unchanged: 0/0
 18819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18824 ;;Total ram usage:        0 bytes
 18825 ;; Hardware stack levels used:    1
 18826 ;; Hardware stack levels required when called:   16
 18827 ;; This function calls:
 18828 ;;		_isupper
 18829 ;; This function is called by:
 18830 ;;		_efgtoa
 18831 ;;		_vfpfcnvrt
 18832 ;; This function uses a reentrant model
 18833 ;;
 18834                           
 18835                           	psect	text63
 18836  01B004                     __ptext63:
 18837                           	opt callstack 0
 18838  01B004                     _tolower:
 18839                           	opt callstack 0
 18840                           
 18841                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18842  01B004  52E6               	movf	postinc1,f,c
 18843  01B006  52E6               	movf	postinc1,f,c
 18844                           
 18845                           ;stkvar	_c @ sp[(-2)+-2]
 18846                           
 18847                           ;incstack = 0
 18848 ;; hardware stack exceeded
 18849  01B008  0EFC               	movlw	-4
 18850  01B00A  50E3               	movf	plusw1,w,c
 18851  01B00C  0FBF               	addlw	191
 18852  01B00E  6E0B               	movwf	(btemp+10)^0,c
 18853  01B010  0EFD               	movlw	-3
 18854  01B012  006F FF8C  F00C    	movff	plusw1,btemp+11
 18855  01B018  0EFF               	movlw	255
 18856  01B01A  220C               	addwfc	(btemp+11)^0,f,c
 18857  01B01C  500C               	movf	(btemp+11)^0,w,c
 18858  01B01E  E106               	bnz	u6190
 18859  01B020  0E1A               	movlw	26
 18860  01B022  5C0B               	subwf	(btemp+10)^0,w,c
 18861  01B024  B0D8               	btfsc	status,0,c
 18862  01B026  D002               	goto	u6190
 18863  01B028  0E01               	movlw	1
 18864  01B02A  D001               	goto	u6200
 18865  01B02C                     u6190:
 18866  01B02C  0E00               	movlw	0
 18867  01B02E                     u6200:
 18868  01B02E  6E0B               	movwf	(btemp+10)^0,c
 18869  01B030  6A0C               	clrf	(btemp+11)^0,c
 18870                           
 18871                           ;stkvar	_tolower$6536 @ sp[(-2)+0]
 18872  01B032  0EFE               	movlw	-2
 18873  01B034  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18874  01B03A  0EFF               	movlw	-1
 18875  01B03C  0060  F033  FFE3   	movff	btemp+11,plusw1
 18876                           
 18877                           ;stkvar	_tolower$6536 @ sp[(-2)+0]
 18878  01B042  0EFE               	movlw	-2
 18879  01B044  006F FF8C  F001    	movff	plusw1,btemp
 18880  01B04A  0EFF               	movlw	-1
 18881  01B04C  50E3               	movf	plusw1,w,c
 18882  01B04E  1001               	iorwf	btemp^0,w,c
 18883  01B050  B4D8               	btfsc	status,2,c
 18884  01B052  D00D               	goto	l8217
 18885                           
 18886                           ;stkvar	_c @ sp[(-2)+-2]
 18887  01B054  0EFC               	movlw	-4
 18888  01B056  006F FF8C  F001    	movff	plusw1,btemp
 18889  01B05C  0EFD               	movlw	-3
 18890  01B05E  006F FF8C  F002    	movff	plusw1,btemp+1
 18891  01B064  0E20               	movlw	32
 18892  01B066  1201               	iorwf	btemp^0,f,c
 18893  01B068  0E00               	movlw	0
 18894  01B06A  1202               	iorwf	(btemp+1)^0,f,c
 18895  01B06C  D008               	goto	l3547
 18896  01B06E                     l8217:
 18897                           
 18898                           ;stkvar	_c @ sp[(-2)+-2]
 18899  01B06E  0EFC               	movlw	-4
 18900  01B070  006F FF8C  F001    	movff	plusw1,btemp
 18901  01B076  0EFD               	movlw	-3
 18902  01B078  006F FF8C  F002    	movff	plusw1,btemp+1
 18903  01B07E                     l3547:
 18904                           
 18905                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18906  01B07E  52E5               	movf	postdec1,f,c
 18907  01B080  52E5               	movf	postdec1,f,c
 18908  01B082  52E5               	movf	postdec1,f,c
 18909  01B084  52E5               	movf	postdec1,f,c
 18910  01B086  0012               	return		;funcret
 18911  01B088                     __end_of_tolower:
 18912                           	opt callstack 0
 18913                           
 18914 ;; *************** function _isupper *****************
 18915 ;; Defined at:
 18916 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 18917 ;; Parameters:    Size  Location     Type
 18918 ;;  c               2  [STACK] int 
 18919 ;; Auto vars:     Size  Location     Type
 18920 ;;		None
 18921 ;; Return value:  Size  Location     Type
 18922 ;;                  2  [STACK] int 
 18923 ;; Registers used:
 18924 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18925 ;; Tracked objects:
 18926 ;;		On entry : 0/0
 18927 ;;		On exit  : 0/0
 18928 ;;		Unchanged: 0/0
 18929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18934 ;;Total ram usage:        0 bytes
 18935 ;; Hardware stack levels used:    1
 18936 ;; Hardware stack levels required when called:   15
 18937 ;; This function calls:
 18938 ;;		Nothing
 18939 ;; This function is called by:
 18940 ;;		_efgtoa
 18941 ;;		_xtoa
 18942 ;;		_vfpfcnvrt
 18943 ;;		_tolower
 18944 ;; This function uses a reentrant model
 18945 ;;
 18946                           
 18947                           	psect	text64
 18948  01BE60                     __ptext64:
 18949                           	opt callstack 0
 18950  01BE60                     _isupper:
 18951                           	opt callstack 0
 18952                           
 18953                           ;stkvar	_c @ sp[(0)+-2]
 18954                           
 18955                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18956                           ;incstack = 0
 18957 ;; hardware stack exceeded
 18958  01BE60  0EFE               	movlw	-2
 18959  01BE62  50E3               	movf	plusw1,w,c
 18960  01BE64  0FBF               	addlw	191
 18961  01BE66  6E0B               	movwf	(btemp+10)^0,c
 18962  01BE68  0EFF               	movlw	-1
 18963  01BE6A  006F FF8C  F00C    	movff	plusw1,btemp+11
 18964  01BE70  0EFF               	movlw	255
 18965  01BE72  220C               	addwfc	(btemp+11)^0,f,c
 18966  01BE74  500C               	movf	(btemp+11)^0,w,c
 18967  01BE76  E106               	bnz	u5540
 18968  01BE78  0E1A               	movlw	26
 18969  01BE7A  5C0B               	subwf	(btemp+10)^0,w,c
 18970  01BE7C  B0D8               	btfsc	status,0,c
 18971  01BE7E  D002               	goto	u5540
 18972  01BE80  0E01               	movlw	1
 18973  01BE82  D001               	goto	u5550
 18974  01BE84                     u5540:
 18975  01BE84  0E00               	movlw	0
 18976  01BE86                     u5550:
 18977  01BE86  6E01               	movwf	btemp^0,c
 18978  01BE88  6A02               	clrf	(btemp+1)^0,c
 18979                           
 18980                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18981  01BE8A  52E5               	movf	postdec1,f,c
 18982  01BE8C  52E5               	movf	postdec1,f,c
 18983  01BE8E  0012               	return		;funcret
 18984  01BE90                     __end_of_isupper:
 18985                           	opt callstack 0
 18986                           
 18987 ;; *************** function _strcpy *****************
 18988 ;; Defined at:
 18989 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 18990 ;; Parameters:    Size  Location     Type
 18991 ;;  dest            2  [STACK] PTR unsigned char 
 18992 ;;		 -> dbuf(80), 
 18993 ;;  src             2  [STACK] PTR const unsigned char 
 18994 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 18995 ;;		 -> dbuf(80), 
 18996 ;; Auto vars:     Size  Location     Type
 18997 ;;  d               2  [STACK] PTR unsigned char 
 18998 ;;		 -> dbuf(80), 
 18999 ;;  s               2  [STACK] PTR const unsigned char 
 19000 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 19001 ;;		 -> dbuf(80), 
 19002 ;; Return value:  Size  Location     Type
 19003 ;;                  2  [STACK] PTR unsigned char 
 19004 ;; Registers used:
 19005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 19006 ;; Tracked objects:
 19007 ;;		On entry : 0/0
 19008 ;;		On exit  : 0/0
 19009 ;;		Unchanged: 0/0
 19010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19015 ;;Total ram usage:        0 bytes
 19016 ;; Hardware stack levels used:    1
 19017 ;; Hardware stack levels required when called:   15
 19018 ;; This function calls:
 19019 ;;		Nothing
 19020 ;; This function is called by:
 19021 ;;		_efgtoa
 19022 ;; This function uses a reentrant model
 19023 ;;
 19024                           
 19025                           	psect	text65
 19026  01A3F2                     __ptext65:
 19027                           	opt callstack 0
 19028  01A3F2                     _strcpy:
 19029                           	opt callstack 0
 19030                           
 19031                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19032  01A3F2  52E6               	movf	postinc1,f,c
 19033  01A3F4  52E6               	movf	postinc1,f,c
 19034  01A3F6  52E6               	movf	postinc1,f,c
 19035  01A3F8  52E6               	movf	postinc1,f,c
 19036                           
 19037                           ;stkvar	_src @ sp[(-4)+-4]
 19038                           
 19039                           ;incstack = 0
 19040 ;; hardware stack exceeded
 19041  01A3FA  0EF8               	movlw	-8
 19042  01A3FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19043  01A402  0EF9               	movlw	-7
 19044  01A404  006F FF8C  F00C    	movff	plusw1,btemp+11
 19045                           
 19046                           ;stkvar	_s @ sp[(-4)+2]
 19047  01A40A  0EFF               	movlw	-1
 19048  01A40C  0060  F033  FFE3   	movff	btemp+11,plusw1
 19049  01A412  0EFE               	movlw	-2
 19050  01A414  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19051                           
 19052                           ;stkvar	_dest @ sp[(-4)+-2]
 19053  01A41A  0EFA               	movlw	-6
 19054  01A41C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19055  01A422  0EFB               	movlw	-5
 19056  01A424  006F FF8C  F00C    	movff	plusw1,btemp+11
 19057                           
 19058                           ;stkvar	_d @ sp[(-4)+0]
 19059  01A42A  0EFD               	movlw	-3
 19060  01A42C  0060  F033  FFE3   	movff	btemp+11,plusw1
 19061  01A432  0EFC               	movlw	-4
 19062  01A434  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19063  01A43A                     l12165:
 19064                           
 19065                           ;stkvar	_s @ sp[(-4)+2]
 19066  01A43A  50E1               	movf	fsr1l,w,c
 19067  01A43C  0FFE               	addlw	-2
 19068  01A43E  6ED9               	movwf	fsr2l,c
 19069  01A440  50E2               	movf	fsr1h,w,c
 19070  01A442  6EDA               	movwf	fsr2h,c
 19071  01A444  0EFF               	movlw	255
 19072  01A446  22DA               	addwfc	fsr2h,f,c
 19073  01A448  006F FF7C  F00B    	movff	indf2,btemp+10
 19074  01A44E  0E01               	movlw	1
 19075  01A450  26DE               	addwf	postinc2,f,c
 19076  01A452  006F FF7C  F00C    	movff	indf2,btemp+11
 19077  01A458  0E00               	movlw	0
 19078  01A45A  22DD               	addwfc	postdec2,f,c
 19079  01A45C  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 19080  01A462  0060  F033  FFF7   	movff	btemp+11,tblptrh
 19081  01A468  0E00               	movlw	low (__mediumconst shr (0+16))
 19082  01A46A  6EF8               	movwf	tblptru,c
 19083                           
 19084                           ;stkvar	_d @ sp[(-4)+0]
 19085  01A46C  50E1               	movf	fsr1l,w,c
 19086  01A46E  0FFC               	addlw	-4
 19087  01A470  6ED9               	movwf	fsr2l,c
 19088  01A472  50E2               	movf	fsr1h,w,c
 19089  01A474  6EDA               	movwf	fsr2h,c
 19090  01A476  0EFF               	movlw	255
 19091  01A478  22DA               	addwfc	fsr2h,f,c
 19092  01A47A  006F FF7C  F00B    	movff	indf2,btemp+10
 19093  01A480  0E01               	movlw	1
 19094  01A482  26DE               	addwf	postinc2,f,c
 19095  01A484  006F FF7C  F00C    	movff	indf2,btemp+11
 19096  01A48A  0E00               	movlw	0
 19097  01A48C  22DD               	addwfc	postdec2,f,c
 19098  01A48E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 19099  01A494  0060  F033  FFDA   	movff	btemp+11,fsr2h
 19100  01A49A  0E1F               	movlw	(high __ramtop+-1)
 19101  01A49C  64F7               	cpfsgt	tblptrh,c
 19102  01A49E  D003               	bra	u11067
 19103  01A4A0  0008               	tblrd		*
 19104  01A4A2  50F5               	movf	tablat,w,c
 19105  01A4A4  D007               	bra	u11060
 19106  01A4A6                     u11067:
 19107  01A4A6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19108  01A4AC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19109  01A4B2  50EF               	movf	indf0,w,c
 19110  01A4B4                     u11060:
 19111  01A4B4  6EDF               	movwf	indf2,c
 19112  01A4B6  50DF               	movf	indf2,w,c
 19113  01A4B8  A4D8               	btfss	status,2,c
 19114  01A4BA  D7BF               	goto	l12165
 19115                           
 19116                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 19117  01A4BC  0EF8               	movlw	248
 19118  01A4BE  26E1               	addwf	fsr1l,f,c
 19119  01A4C0  0EFF               	movlw	255
 19120  01A4C2  22E2               	addwfc	fsr1h,f,c
 19121  01A4C4  0012               	return		;funcret
 19122  01A4C6                     __end_of_strcpy:
 19123                           	opt callstack 0
 19124                           
 19125 ;; *************** function _floorf *****************
 19126 ;; Defined at:
 19127 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 19128 ;; Parameters:    Size  Location     Type
 19129 ;;  x               4  [STACK] float 
 19130 ;; Auto vars:     Size  Location     Type
 19131 ;;  u               4  [STACK] struct .
 19132 ;;  m               4  [STACK] unsigned long 
 19133 ;;  e               2  [STACK] int 
 19134 ;; Return value:  Size  Location     Type
 19135 ;;                  4  [STACK] float 
 19136 ;; Registers used:
 19137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 19138 ;; Tracked objects:
 19139 ;;		On entry : 0/0
 19140 ;;		On exit  : 0/0
 19141 ;;		Unchanged: 0/0
 19142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19147 ;;Total ram usage:        0 bytes
 19148 ;; Hardware stack levels used:    1
 19149 ;; Hardware stack levels required when called:   15
 19150 ;; This function calls:
 19151 ;;		Nothing
 19152 ;; This function is called by:
 19153 ;;		_efgtoa
 19154 ;; This function uses a reentrant model
 19155 ;;
 19156                           
 19157                           	psect	text66
 19158  0164C4                     __ptext66:
 19159                           	opt callstack 0
 19160  0164C4                     _floorf:
 19161                           	opt callstack 0
 19162                           
 19163                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 19164  0164C4  0E0A               	movlw	10
 19165  0164C6  26E1               	addwf	fsr1l,f,c
 19166  0164C8  0E00               	movlw	0
 19167  0164CA  22E2               	addwfc	fsr1h,f,c
 19168                           
 19169                           ;incstack = 0
 19170 ;; hardware stack exceeded
 19171  0164CC  0060  F79C  F009   	movff	floorf@F524,btemp+8
 19172  0164D2  0060  F7A0  F00A   	movff	floorf@F524+1,btemp+9
 19173  0164D8  0060  F7A4  F00B   	movff	floorf@F524+2,btemp+10
 19174  0164DE  0060  F7A8  F00C   	movff	floorf@F524+3,btemp+11
 19175                           
 19176                           ;stkvar	_u @ sp[(-10)+0]
 19177  0164E4  0EF6               	movlw	-10
 19178  0164E6  0060  F027  FFE3   	movff	btemp+8,plusw1
 19179  0164EC  0EF7               	movlw	-9
 19180  0164EE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19181  0164F4  0EF8               	movlw	-8
 19182  0164F6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19183  0164FC  0EF9               	movlw	-7
 19184  0164FE  0060  F033  FFE3   	movff	btemp+11,plusw1
 19185                           
 19186                           ;stkvar	_x @ sp[(-10)+-4]
 19187  016504  0EF2               	movlw	-14
 19188  016506  006F FF8C  F009    	movff	plusw1,btemp+8
 19189  01650C  0EF3               	movlw	-13
 19190  01650E  006F FF8C  F00A    	movff	plusw1,btemp+9
 19191  016514  0EF4               	movlw	-12
 19192  016516  006F FF8C  F00B    	movff	plusw1,btemp+10
 19193  01651C  0EF5               	movlw	-11
 19194  01651E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19195                           
 19196                           ;stkvar	_u @ sp[(-10)+0]
 19197  016524  0EF6               	movlw	-10
 19198  016526  0060  F027  FFE3   	movff	btemp+8,plusw1
 19199  01652C  0EF7               	movlw	-9
 19200  01652E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19201  016534  0EF8               	movlw	-8
 19202  016536  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19203  01653C  0EF9               	movlw	-7
 19204  01653E  0060  F033  FFE3   	movff	btemp+11,plusw1
 19205  016544  0E81               	movlw	129
 19206  016546  6E0B               	movwf	(btemp+10)^0,c
 19207  016548  0EFF               	movlw	255
 19208  01654A  6E0C               	movwf	(btemp+11)^0,c
 19209                           
 19210                           ;stkvar	_u @ sp[(-10)+0]
 19211  01654C  0EF6               	movlw	-10
 19212  01654E  006F FF8C  F005    	movff	plusw1,btemp+4
 19213  016554  0EF7               	movlw	-9
 19214  016556  006F FF8C  F006    	movff	plusw1,btemp+5
 19215  01655C  0EF8               	movlw	-8
 19216  01655E  006F FF8C  F007    	movff	plusw1,btemp+6
 19217  016564  0EF9               	movlw	-7
 19218  016566  006F FF8C  F008    	movff	plusw1,btemp+7
 19219  01656C  0E18               	movlw	24
 19220  01656E  D005               	goto	u6220
 19221  016570                     u6225:
 19222  016570  90D8               	bcf	status,0,c
 19223  016572  3208               	rrcf	(btemp+7)^0,f,c
 19224  016574  3207               	rrcf	(btemp+6)^0,f,c
 19225  016576  3206               	rrcf	(btemp+5)^0,f,c
 19226  016578  3205               	rrcf	(btemp+4)^0,f,c
 19227  01657A                     u6220:
 19228  01657A  2EE8               	decfsz	wreg,f,c
 19229  01657C  D7F9               	goto	u6225
 19230  01657E  0060  F014  F009   	movff	btemp+4,btemp+8
 19231  016584  0060  F018  F00A   	movff	btemp+5,btemp+9
 19232  01658A  0EFF               	movlw	255
 19233  01658C  1609               	andwf	(btemp+8)^0,f,c
 19234  01658E  0E00               	movlw	0
 19235  016590  160A               	andwf	(btemp+9)^0,f,c
 19236  016592  500B               	movf	(btemp+10)^0,w,c
 19237  016594  2609               	addwf	(btemp+8)^0,f,c
 19238  016596  500C               	movf	(btemp+11)^0,w,c
 19239  016598  220A               	addwfc	(btemp+9)^0,f,c
 19240                           
 19241                           ;stkvar	_e @ sp[(-10)+8]
 19242  01659A  0EFE               	movlw	-2
 19243  01659C  0060  F027  FFE3   	movff	btemp+8,plusw1
 19244  0165A2  0EFF               	movlw	-1
 19245  0165A4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19246                           
 19247                           ;stkvar	_e @ sp[(-10)+8]
 19248  0165AA  0EFF               	movlw	-1
 19249  0165AC  BEE3               	btfsc	plusw1,7,c
 19250  0165AE  D019               	goto	l8231
 19251  0165B0  0EFF               	movlw	-1
 19252  0165B2  50E3               	movf	plusw1,w,c
 19253  0165B4  E108               	bnz	u6230
 19254  0165B6  0EFE               	movlw	-2
 19255  0165B8  006F FF8C  F001    	movff	plusw1,btemp
 19256  0165BE  0E17               	movlw	23
 19257  0165C0  5E01               	subwf	btemp^0,f,c
 19258  0165C2  A0D8               	btfss	status,0,c
 19259  0165C4  D00E               	goto	l8231
 19260  0165C6                     u6230:
 19261                           
 19262                           ;stkvar	_x @ sp[(-10)+-4]
 19263  0165C6  0EF2               	movlw	-14
 19264  0165C8  006F FF8C  F001    	movff	plusw1,btemp
 19265  0165CE  0EF3               	movlw	-13
 19266  0165D0  006F FF8C  F002    	movff	plusw1,btemp+1
 19267  0165D6  0EF4               	movlw	-12
 19268  0165D8  006F FF8C  F003    	movff	plusw1,btemp+2
 19269  0165DE  0EF5               	movlw	-11
 19270  0165E0  D11F               	goto	L21
 19271  0165E2                     l8231:
 19272                           
 19273                           ;stkvar	_e @ sp[(-10)+8]
 19274  0165E2  0EFF               	movlw	-1
 19275  0165E4  BEE3               	btfsc	plusw1,7,c
 19276  0165E6  D0B4               	goto	l8247
 19277                           
 19278                           ;stkvar	_e @ sp[(-10)+8]
 19279  0165E8  0EFE               	movlw	-2
 19280  0165EA  006F FF8C  F00C    	movff	plusw1,btemp+11
 19281  0165F0  0EFF               	movlw	255
 19282  0165F2  6E05               	movwf	(btemp+4)^0,c
 19283  0165F4  0EFF               	movlw	255
 19284  0165F6  6E06               	movwf	(btemp+5)^0,c
 19285  0165F8  0E7F               	movlw	127
 19286  0165FA  6E07               	movwf	(btemp+6)^0,c
 19287  0165FC  0E00               	movlw	0
 19288  0165FE  6E08               	movwf	(btemp+7)^0,c
 19289  016600                     u6255:
 19290  016600  660C               	tstfsz	(btemp+11)^0,c
 19291  016602  D001               	goto	u6256
 19292  016604  D007               	goto	u6257
 19293  016606                     u6256:
 19294  016606  3408               	rlcf	(btemp+7)^0,w,c
 19295  016608  3208               	rrcf	(btemp+7)^0,f,c
 19296  01660A  3207               	rrcf	(btemp+6)^0,f,c
 19297  01660C  3206               	rrcf	(btemp+5)^0,f,c
 19298  01660E  3205               	rrcf	(btemp+4)^0,f,c
 19299  016610  2E0C               	decfsz	(btemp+11)^0,f,c
 19300  016612  D7F6               	goto	u6255
 19301  016614                     u6257:
 19302                           
 19303                           ;stkvar	_m @ sp[(-10)+4]
 19304  016614  0EFA               	movlw	-6
 19305  016616  0060  F017  FFE3   	movff	btemp+4,plusw1
 19306  01661C  0EFB               	movlw	-5
 19307  01661E  0060  F01B  FFE3   	movff	btemp+5,plusw1
 19308  016624  0EFC               	movlw	-4
 19309  016626  0060  F01F  FFE3   	movff	btemp+6,plusw1
 19310  01662C  0EFD               	movlw	-3
 19311  01662E  0060  F023  FFE3   	movff	btemp+7,plusw1
 19312                           
 19313                           ;stkvar	_m @ sp[(-10)+4]
 19314                           ;stkvar	_u @ sp[(-10)+0]
 19315  016634  0EF6               	movlw	-10
 19316  016636  006F FF8C  F009    	movff	plusw1,btemp+8
 19317  01663C  0EF7               	movlw	-9
 19318  01663E  006F FF8C  F00A    	movff	plusw1,btemp+9
 19319  016644  0EF8               	movlw	-8
 19320  016646  006F FF8C  F00B    	movff	plusw1,btemp+10
 19321  01664C  0EF9               	movlw	-7
 19322  01664E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19323  016654  0EFA               	movlw	-6
 19324  016656  50E3               	movf	plusw1,w,c
 19325  016658  1609               	andwf	(btemp+8)^0,f,c
 19326  01665A  0EFB               	movlw	-5
 19327  01665C  50E3               	movf	plusw1,w,c
 19328  01665E  160A               	andwf	(btemp+9)^0,f,c
 19329  016660  0EFC               	movlw	-4
 19330  016662  50E3               	movf	plusw1,w,c
 19331  016664  160B               	andwf	(btemp+10)^0,f,c
 19332  016666  0EFD               	movlw	-3
 19333  016668  50E3               	movf	plusw1,w,c
 19334  01666A  160C               	andwf	(btemp+11)^0,f,c
 19335  01666C  5009               	movf	(btemp+8)^0,w,c
 19336  01666E  100A               	iorwf	(btemp+9)^0,w,c
 19337  016670  100B               	iorwf	(btemp+10)^0,w,c
 19338  016672  100C               	iorwf	(btemp+11)^0,w,c
 19339  016674  B4D8               	btfsc	status,2,c
 19340  016676  D7A7               	goto	u6230
 19341                           
 19342                           ;stkvar	_u @ sp[(-10)+0]
 19343  016678  0EF6               	movlw	-10
 19344  01667A  006F FF8C  F009    	movff	plusw1,btemp+8
 19345  016680  0EF7               	movlw	-9
 19346  016682  006F FF8C  F00A    	movff	plusw1,btemp+9
 19347  016688  0EF8               	movlw	-8
 19348  01668A  006F FF8C  F00B    	movff	plusw1,btemp+10
 19349  016690  0EF9               	movlw	-7
 19350  016692  006F FF8C  F00C    	movff	plusw1,btemp+11
 19351  016698  0E20               	movlw	32
 19352  01669A  D005               	goto	u6270
 19353  01669C                     u6275:
 19354  01669C  90D8               	bcf	status,0,c
 19355  01669E  320C               	rrcf	(btemp+11)^0,f,c
 19356  0166A0  320B               	rrcf	(btemp+10)^0,f,c
 19357  0166A2  320A               	rrcf	(btemp+9)^0,f,c
 19358  0166A4  3209               	rrcf	(btemp+8)^0,f,c
 19359  0166A6                     u6270:
 19360  0166A6  2EE8               	decfsz	wreg,f,c
 19361  0166A8  D7F9               	goto	u6275
 19362  0166AA  5009               	movf	(btemp+8)^0,w,c
 19363  0166AC  B4D8               	btfsc	status,2,c
 19364  0166AE  D028               	goto	l8245
 19365                           
 19366                           ;stkvar	_m @ sp[(-10)+4]
 19367                           ;stkvar	_u @ sp[(-10)+0]
 19368  0166B0  0EF6               	movlw	-10
 19369  0166B2  50E3               	movf	plusw1,w,c
 19370  0166B4  6E01               	movwf	btemp^0,c
 19371  0166B6  0EFA               	movlw	-6
 19372  0166B8  50E3               	movf	plusw1,w,c
 19373  0166BA  2601               	addwf	btemp^0,f,c
 19374  0166BC  0EF6               	movlw	-10
 19375  0166BE  0060  F007  FFE3   	movff	btemp,plusw1
 19376  0166C4  0EF7               	movlw	-9
 19377  0166C6  50E3               	movf	plusw1,w,c
 19378  0166C8  6E01               	movwf	btemp^0,c
 19379  0166CA  0EFB               	movlw	-5
 19380  0166CC  50E3               	movf	plusw1,w,c
 19381  0166CE  2201               	addwfc	btemp^0,f,c
 19382  0166D0  0EF7               	movlw	-9
 19383  0166D2  0060  F007  FFE3   	movff	btemp,plusw1
 19384  0166D8  0EF8               	movlw	-8
 19385  0166DA  50E3               	movf	plusw1,w,c
 19386  0166DC  6E01               	movwf	btemp^0,c
 19387  0166DE  0EFC               	movlw	-4
 19388  0166E0  50E3               	movf	plusw1,w,c
 19389  0166E2  2201               	addwfc	btemp^0,f,c
 19390  0166E4  0EF8               	movlw	-8
 19391  0166E6  0060  F007  FFE3   	movff	btemp,plusw1
 19392  0166EC  0EF9               	movlw	-7
 19393  0166EE  50E3               	movf	plusw1,w,c
 19394  0166F0  6E01               	movwf	btemp^0,c
 19395  0166F2  0EFD               	movlw	-3
 19396  0166F4  50E3               	movf	plusw1,w,c
 19397  0166F6  2201               	addwfc	btemp^0,f,c
 19398  0166F8  0EF9               	movlw	-7
 19399  0166FA  0060  F007  FFE3   	movff	btemp,plusw1
 19400  016700                     l8245:
 19401                           
 19402                           ;stkvar	_m @ sp[(-10)+4]
 19403  016700  0EFA               	movlw	-6
 19404  016702  006F FF8C  F009    	movff	plusw1,btemp+8
 19405  016708  0EFB               	movlw	-5
 19406  01670A  006F FF8C  F00A    	movff	plusw1,btemp+9
 19407  016710  0EFC               	movlw	-4
 19408  016712  006F FF8C  F00B    	movff	plusw1,btemp+10
 19409  016718  0EFD               	movlw	-3
 19410  01671A  006F FF8C  F00C    	movff	plusw1,btemp+11
 19411  016720  1C09               	comf	(btemp+8)^0,w,c
 19412  016722  6E05               	movwf	(btemp+4)^0,c
 19413  016724  1C0A               	comf	(btemp+9)^0,w,c
 19414  016726  6E06               	movwf	(btemp+5)^0,c
 19415  016728  1C0B               	comf	(btemp+10)^0,w,c
 19416  01672A  6E07               	movwf	(btemp+6)^0,c
 19417  01672C  1C0C               	comf	(btemp+11)^0,w,c
 19418  01672E  6E08               	movwf	(btemp+7)^0,c
 19419                           
 19420                           ;stkvar	_u @ sp[(-10)+0]
 19421  016730  50E1               	movf	fsr1l,w,c
 19422  016732  0FF6               	addlw	-10
 19423  016734  6ED9               	movwf	fsr2l,c
 19424  016736  50E2               	movf	fsr1h,w,c
 19425  016738  6EDA               	movwf	fsr2h,c
 19426  01673A  0EFF               	movlw	255
 19427  01673C  22DA               	addwfc	fsr2h,f,c
 19428  01673E  5005               	movf	(btemp+4)^0,w,c
 19429  016740  16DE               	andwf	postinc2,f,c
 19430  016742  5006               	movf	(btemp+5)^0,w,c
 19431  016744  16DE               	andwf	postinc2,f,c
 19432  016746  5007               	movf	(btemp+6)^0,w,c
 19433  016748  16DE               	andwf	postinc2,f,c
 19434  01674A  5008               	movf	(btemp+7)^0,w,c
 19435  01674C  16DE               	andwf	postinc2,f,c
 19436  01674E  D05B               	goto	l8255
 19437  016750                     l8247:
 19438                           
 19439                           ;stkvar	_u @ sp[(-10)+0]
 19440  016750  0EF6               	movlw	-10
 19441  016752  006F FF8C  F009    	movff	plusw1,btemp+8
 19442  016758  0EF7               	movlw	-9
 19443  01675A  006F FF8C  F00A    	movff	plusw1,btemp+9
 19444  016760  0EF8               	movlw	-8
 19445  016762  006F FF8C  F00B    	movff	plusw1,btemp+10
 19446  016768  0EF9               	movlw	-7
 19447  01676A  006F FF8C  F00C    	movff	plusw1,btemp+11
 19448  016770  0E20               	movlw	32
 19449  016772  D005               	goto	u6290
 19450  016774                     u6295:
 19451  016774  90D8               	bcf	status,0,c
 19452  016776  320C               	rrcf	(btemp+11)^0,f,c
 19453  016778  320B               	rrcf	(btemp+10)^0,f,c
 19454  01677A  320A               	rrcf	(btemp+9)^0,f,c
 19455  01677C  3209               	rrcf	(btemp+8)^0,f,c
 19456  01677E                     u6290:
 19457  01677E  2EE8               	decfsz	wreg,f,c
 19458  016780  D7F9               	goto	u6295
 19459  016782  6609               	tstfsz	(btemp+8)^0,c
 19460  016784  D009               	goto	l8251
 19461                           
 19462                           ;stkvar	_u @ sp[(-10)+0]
 19463  016786  0EF6               	movlw	-10
 19464  016788  6AE3               	clrf	plusw1,c
 19465  01678A  0EF7               	movlw	-9
 19466  01678C  6AE3               	clrf	plusw1,c
 19467  01678E  0EF8               	movlw	-8
 19468  016790  6AE3               	clrf	plusw1,c
 19469  016792  0EF9               	movlw	-7
 19470  016794  6AE3               	clrf	plusw1,c
 19471  016796  D037               	goto	l8255
 19472  016798                     l8251:
 19473                           
 19474                           ;stkvar	_u @ sp[(-10)+0]
 19475  016798  0EF6               	movlw	-10
 19476  01679A  006F FF8C  F009    	movff	plusw1,btemp+8
 19477  0167A0  0EF7               	movlw	-9
 19478  0167A2  006F FF8C  F00A    	movff	plusw1,btemp+9
 19479  0167A8  0EF8               	movlw	-8
 19480  0167AA  006F FF8C  F00B    	movff	plusw1,btemp+10
 19481  0167B0  0EF9               	movlw	-7
 19482  0167B2  006F FF8C  F00C    	movff	plusw1,btemp+11
 19483  0167B8  90D8               	bcf	status,0,c
 19484  0167BA  3409               	rlcf	(btemp+8)^0,w,c
 19485  0167BC  6E05               	movwf	(btemp+4)^0,c
 19486  0167BE  340A               	rlcf	(btemp+9)^0,w,c
 19487  0167C0  6E06               	movwf	(btemp+5)^0,c
 19488  0167C2  340B               	rlcf	(btemp+10)^0,w,c
 19489  0167C4  6E07               	movwf	(btemp+6)^0,c
 19490  0167C6  340C               	rlcf	(btemp+11)^0,w,c
 19491  0167C8  6E08               	movwf	(btemp+7)^0,c
 19492  0167CA  5005               	movf	(btemp+4)^0,w,c
 19493  0167CC  1006               	iorwf	(btemp+5)^0,w,c
 19494  0167CE  1007               	iorwf	(btemp+6)^0,w,c
 19495  0167D0  1008               	iorwf	(btemp+7)^0,w,c
 19496  0167D2  B4D8               	btfsc	status,2,c
 19497  0167D4  D018               	goto	l8255
 19498  0167D6  0E00               	movlw	0
 19499  0167D8  6E09               	movwf	(btemp+8)^0,c
 19500  0167DA  0E00               	movlw	0
 19501  0167DC  6E0A               	movwf	(btemp+9)^0,c
 19502  0167DE  0E80               	movlw	128
 19503  0167E0  6E0B               	movwf	(btemp+10)^0,c
 19504  0167E2  0EBF               	movlw	191
 19505  0167E4  6E0C               	movwf	(btemp+11)^0,c
 19506                           
 19507                           ;stkvar	_u @ sp[(-10)+0]
 19508  0167E6  0EF6               	movlw	-10
 19509  0167E8  0060  F027  FFE3   	movff	btemp+8,plusw1
 19510  0167EE  0EF7               	movlw	-9
 19511  0167F0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19512  0167F6  0EF8               	movlw	-8
 19513  0167F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19514  0167FE  0EF9               	movlw	-7
 19515  016800  0060  F033  FFE3   	movff	btemp+11,plusw1
 19516  016806                     l8255:
 19517                           
 19518                           ;stkvar	_u @ sp[(-10)+0]
 19519  016806  0EF6               	movlw	-10
 19520  016808  006F FF8C  F001    	movff	plusw1,btemp
 19521  01680E  0EF7               	movlw	-9
 19522  016810  006F FF8C  F002    	movff	plusw1,btemp+1
 19523  016816  0EF8               	movlw	-8
 19524  016818  006F FF8C  F003    	movff	plusw1,btemp+2
 19525  01681E  0EF9               	movlw	-7
 19526  016820                     L21:
 19527  016820  006F FF8C  F004    	movff	plusw1,btemp+3
 19528                           
 19529                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19530  016826  0EF2               	movlw	242
 19531  016828  26E1               	addwf	fsr1l,f,c
 19532  01682A  0EFF               	movlw	255
 19533  01682C  22E2               	addwfc	fsr1h,f,c
 19534  01682E  0012               	return		;funcret
 19535  016830                     __end_of_floorf:
 19536                           	opt callstack 0
 19537                           
 19538 ;; *************** function ___fpclassifyf *****************
 19539 ;; Defined at:
 19540 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 19541 ;; Parameters:    Size  Location     Type
 19542 ;;  x               4  [STACK] float 
 19543 ;; Auto vars:     Size  Location     Type
 19544 ;;  u               4  [STACK] struct .
 19545 ;;  e               2  [STACK] int 
 19546 ;; Return value:  Size  Location     Type
 19547 ;;                  2  [STACK] int 
 19548 ;; Registers used:
 19549 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 19550 ;; Tracked objects:
 19551 ;;		On entry : 0/0
 19552 ;;		On exit  : 0/0
 19553 ;;		Unchanged: 0/0
 19554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19559 ;;Total ram usage:        0 bytes
 19560 ;; Hardware stack levels used:    1
 19561 ;; Hardware stack levels required when called:   15
 19562 ;; This function calls:
 19563 ;;		Nothing
 19564 ;; This function is called by:
 19565 ;;		_efgtoa
 19566 ;; This function uses a reentrant model
 19567 ;;
 19568                           
 19569                           	psect	text67
 19570  018C06                     __ptext67:
 19571                           	opt callstack 0
 19572  018C06                     ___fpclassifyf:
 19573                           	opt callstack 0
 19574                           
 19575                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19576  018C06  0E06               	movlw	6
 19577  018C08  26E1               	addwf	fsr1l,f,c
 19578  018C0A  0E00               	movlw	0
 19579  018C0C  22E2               	addwfc	fsr1h,f,c
 19580                           
 19581                           ;incstack = 0
 19582 ;; hardware stack exceeded
 19583  018C0E  0060  F190  F009   	movff	___fpclassifyf@F463,btemp+8
 19584  018C14  0060  F194  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 19585  018C1A  0060  F198  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 19586  018C20  0060  F19C  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 19587                           
 19588                           ;stkvar	_u @ sp[(-6)+0]
 19589  018C26  0EFA               	movlw	-6
 19590  018C28  0060  F027  FFE3   	movff	btemp+8,plusw1
 19591  018C2E  0EFB               	movlw	-5
 19592  018C30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19593  018C36  0EFC               	movlw	-4
 19594  018C38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19595  018C3E  0EFD               	movlw	-3
 19596  018C40  0060  F033  FFE3   	movff	btemp+11,plusw1
 19597                           
 19598                           ;stkvar	_x @ sp[(-6)+-4]
 19599  018C46  0EF6               	movlw	-10
 19600  018C48  006F FF8C  F009    	movff	plusw1,btemp+8
 19601  018C4E  0EF7               	movlw	-9
 19602  018C50  006F FF8C  F00A    	movff	plusw1,btemp+9
 19603  018C56  0EF8               	movlw	-8
 19604  018C58  006F FF8C  F00B    	movff	plusw1,btemp+10
 19605  018C5E  0EF9               	movlw	-7
 19606  018C60  006F FF8C  F00C    	movff	plusw1,btemp+11
 19607                           
 19608                           ;stkvar	_u @ sp[(-6)+0]
 19609  018C66  0EFA               	movlw	-6
 19610  018C68  0060  F027  FFE3   	movff	btemp+8,plusw1
 19611  018C6E  0EFB               	movlw	-5
 19612  018C70  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19613  018C76  0EFC               	movlw	-4
 19614  018C78  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19615  018C7E  0EFD               	movlw	-3
 19616  018C80  0060  F033  FFE3   	movff	btemp+11,plusw1
 19617                           
 19618                           ;stkvar	_u @ sp[(-6)+0]
 19619  018C86  0EFA               	movlw	-6
 19620  018C88  006F FF8C  F009    	movff	plusw1,btemp+8
 19621  018C8E  0EFB               	movlw	-5
 19622  018C90  006F FF8C  F00A    	movff	plusw1,btemp+9
 19623  018C96  0EFC               	movlw	-4
 19624  018C98  006F FF8C  F00B    	movff	plusw1,btemp+10
 19625  018C9E  0EFD               	movlw	-3
 19626  018CA0  006F FF8C  F00C    	movff	plusw1,btemp+11
 19627  018CA6  0E18               	movlw	24
 19628  018CA8  D005               	goto	u6100
 19629  018CAA                     u6105:
 19630  018CAA  90D8               	bcf	status,0,c
 19631  018CAC  320C               	rrcf	(btemp+11)^0,f,c
 19632  018CAE  320B               	rrcf	(btemp+10)^0,f,c
 19633  018CB0  320A               	rrcf	(btemp+9)^0,f,c
 19634  018CB2  3209               	rrcf	(btemp+8)^0,f,c
 19635  018CB4                     u6100:
 19636  018CB4  2EE8               	decfsz	wreg,f,c
 19637  018CB6  D7F9               	goto	u6105
 19638  018CB8  0060  F024  F007   	movff	btemp+8,btemp+6
 19639  018CBE  0060  F028  F008   	movff	btemp+9,btemp+7
 19640  018CC4  0EFF               	movlw	255
 19641  018CC6  1607               	andwf	(btemp+6)^0,f,c
 19642  018CC8  0E00               	movlw	0
 19643  018CCA  1608               	andwf	(btemp+7)^0,f,c
 19644                           
 19645                           ;stkvar	_e @ sp[(-6)+4]
 19646  018CCC  0EFE               	movlw	-2
 19647  018CCE  0060  F01F  FFE3   	movff	btemp+6,plusw1
 19648  018CD4  0EFF               	movlw	-1
 19649  018CD6  0060  F023  FFE3   	movff	btemp+7,plusw1
 19650                           
 19651                           ;stkvar	_e @ sp[(-6)+4]
 19652  018CDC  0EFE               	movlw	-2
 19653  018CDE  006F FF8C  F001    	movff	plusw1,btemp
 19654  018CE4  0EFF               	movlw	-1
 19655  018CE6  50E3               	movf	plusw1,w,c
 19656  018CE8  1001               	iorwf	btemp^0,w,c
 19657  018CEA  A4D8               	btfss	status,2,c
 19658  018CEC  D023               	goto	l8193
 19659                           
 19660                           ;stkvar	_u @ sp[(-6)+0]
 19661  018CEE  0EFA               	movlw	-6
 19662  018CF0  006F FF8C  F009    	movff	plusw1,btemp+8
 19663  018CF6  0EFB               	movlw	-5
 19664  018CF8  006F FF8C  F00A    	movff	plusw1,btemp+9
 19665  018CFE  0EFC               	movlw	-4
 19666  018D00  006F FF8C  F00B    	movff	plusw1,btemp+10
 19667  018D06  0EFD               	movlw	-3
 19668  018D08  006F FF8C  F00C    	movff	plusw1,btemp+11
 19669  018D0E  90D8               	bcf	status,0,c
 19670  018D10  3409               	rlcf	(btemp+8)^0,w,c
 19671  018D12  6E05               	movwf	(btemp+4)^0,c
 19672  018D14  340A               	rlcf	(btemp+9)^0,w,c
 19673  018D16  6E06               	movwf	(btemp+5)^0,c
 19674  018D18  340B               	rlcf	(btemp+10)^0,w,c
 19675  018D1A  6E07               	movwf	(btemp+6)^0,c
 19676  018D1C  340C               	rlcf	(btemp+11)^0,w,c
 19677  018D1E  6E08               	movwf	(btemp+7)^0,c
 19678  018D20  5005               	movf	(btemp+4)^0,w,c
 19679  018D22  1006               	iorwf	(btemp+5)^0,w,c
 19680  018D24  1007               	iorwf	(btemp+6)^0,w,c
 19681  018D26  1008               	iorwf	(btemp+7)^0,w,c
 19682  018D28  A4D8               	btfss	status,2,c
 19683  018D2A  D002               	goto	l8189
 19684  018D2C  0E02               	movlw	2
 19685  018D2E  D02E               	goto	L22
 19686  018D30                     l8189:
 19687  018D30  0E03               	movlw	3
 19688  018D32  D02C               	goto	L22
 19689  018D34                     l8193:
 19690                           
 19691                           ;stkvar	_e @ sp[(-6)+4]
 19692  018D34  0EFE               	movlw	-2
 19693  018D36  28E3               	incf	plusw1,w,c
 19694  018D38  E128               	bnz	l8199
 19695  018D3A  0EFF               	movlw	-1
 19696  018D3C  50E3               	movf	plusw1,w,c
 19697  018D3E  A4D8               	btfss	status,2,c
 19698  018D40  D024               	goto	l8199
 19699                           
 19700                           ;stkvar	_u @ sp[(-6)+0]
 19701  018D42  0EFA               	movlw	-6
 19702  018D44  006F FF8C  F009    	movff	plusw1,btemp+8
 19703  018D4A  0EFB               	movlw	-5
 19704  018D4C  006F FF8C  F00A    	movff	plusw1,btemp+9
 19705  018D52  0EFC               	movlw	-4
 19706  018D54  006F FF8C  F00B    	movff	plusw1,btemp+10
 19707  018D5A  0EFD               	movlw	-3
 19708  018D5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19709  018D62  0E09               	movlw	9
 19710  018D64                     u6145:
 19711  018D64  90D8               	bcf	status,0,c
 19712  018D66  3609               	rlcf	(btemp+8)^0,f,c
 19713  018D68  360A               	rlcf	(btemp+9)^0,f,c
 19714  018D6A  360B               	rlcf	(btemp+10)^0,f,c
 19715  018D6C  360C               	rlcf	(btemp+11)^0,f,c
 19716  018D6E  2EE8               	decfsz	wreg,f,c
 19717  018D70  D7F9               	goto	u6145
 19718  018D72  5009               	movf	(btemp+8)^0,w,c
 19719  018D74  100A               	iorwf	(btemp+9)^0,w,c
 19720  018D76  100B               	iorwf	(btemp+10)^0,w,c
 19721  018D78  100C               	iorwf	(btemp+11)^0,w,c
 19722  018D7A  A4D8               	btfss	status,2,c
 19723  018D7C  D002               	goto	u6150
 19724  018D7E  0E01               	movlw	1
 19725  018D80  D001               	goto	u6160
 19726  018D82                     u6150:
 19727  018D82  0E00               	movlw	0
 19728  018D84                     u6160:
 19729  018D84  6E01               	movwf	btemp^0,c
 19730  018D86  6A02               	clrf	(btemp+1)^0,c
 19731  018D88  D004               	goto	l3157
 19732  018D8A                     l8199:
 19733  018D8A  0E04               	movlw	4
 19734  018D8C                     L22:
 19735  018D8C  6E01               	movwf	btemp^0,c
 19736  018D8E  0E00               	movlw	0
 19737  018D90  6E02               	movwf	(btemp+1)^0,c
 19738  018D92                     l3157:
 19739                           
 19740                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 19741  018D92  0EF6               	movlw	246
 19742  018D94  26E1               	addwf	fsr1l,f,c
 19743  018D96  0EFF               	movlw	255
 19744  018D98  22E2               	addwfc	fsr1h,f,c
 19745  018D9A  0012               	return		;funcret
 19746  018D9C                     __end_of___fpclassifyf:
 19747                           	opt callstack 0
 19748                           
 19749 ;; *************** function ___fltol *****************
 19750 ;; Defined at:
 19751 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 19752 ;; Parameters:    Size  Location     Type
 19753 ;;  f1              4  [STACK] int 
 19754 ;; Auto vars:     Size  Location     Type
 19755 ;;  exp1            1  [STACK] unsigned char 
 19756 ;;  sign1           1  [STACK] unsigned char 
 19757 ;; Return value:  Size  Location     Type
 19758 ;;                  4  [STACK] long 
 19759 ;; Registers used:
 19760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 19761 ;; Tracked objects:
 19762 ;;		On entry : 0/0
 19763 ;;		On exit  : 0/0
 19764 ;;		Unchanged: 0/0
 19765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19770 ;;Total ram usage:        0 bytes
 19771 ;; Hardware stack levels used:    1
 19772 ;; Hardware stack levels required when called:   15
 19773 ;; This function calls:
 19774 ;;		Nothing
 19775 ;; This function is called by:
 19776 ;;		_main
 19777 ;;		_convert_dac_raw
 19778 ;;		_calc_bsoc
 19779 ;;		_init_bsoc
 19780 ;;		_efgtoa
 19781 ;; This function uses a reentrant model
 19782 ;;
 19783                           
 19784                           	psect	text68
 19785  0190A2                     __ptext68:
 19786                           	opt callstack 0
 19787  0190A2                     ___fltol:
 19788                           	opt callstack 0
 19789                           
 19790                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19791  0190A2  52E6               	movf	postinc1,f,c
 19792  0190A4  52E6               	movf	postinc1,f,c
 19793                           
 19794                           ;stkvar	_f1 @ sp[(-2)+-4]
 19795                           
 19796                           ;incstack = 0
 19797 ;; hardware stack exceeded
 19798  0190A6  0EFA               	movlw	-6
 19799  0190A8  006F FF8C  F009    	movff	plusw1,btemp+8
 19800  0190AE  0EFB               	movlw	-5
 19801  0190B0  006F FF8C  F00A    	movff	plusw1,btemp+9
 19802  0190B6  0EFC               	movlw	-4
 19803  0190B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 19804  0190BE  0EFD               	movlw	-3
 19805  0190C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 19806  0190C6  0E18               	movlw	24
 19807  0190C8  D005               	goto	u7310
 19808  0190CA                     u7315:
 19809  0190CA  90D8               	bcf	status,0,c
 19810  0190CC  320C               	rrcf	(btemp+11)^0,f,c
 19811  0190CE  320B               	rrcf	(btemp+10)^0,f,c
 19812  0190D0  320A               	rrcf	(btemp+9)^0,f,c
 19813  0190D2  3209               	rrcf	(btemp+8)^0,f,c
 19814  0190D4                     u7310:
 19815  0190D4  2EE8               	decfsz	wreg,f,c
 19816  0190D6  D7F9               	goto	u7315
 19817                           
 19818                           ;stkvar	_exp1 @ sp[(-2)+0]
 19819  0190D8  0EFE               	movlw	-2
 19820  0190DA  0060  F027  FFE3   	movff	btemp+8,plusw1
 19821  0190E0  0EFE               	movlw	-2
 19822  0190E2  50E3               	movf	plusw1,w,c
 19823  0190E4  A4D8               	btfss	status,2,c
 19824  0190E6  D006               	goto	l8819
 19825  0190E8                     u7320:
 19826  0190E8  0E00               	movlw	0
 19827  0190EA  6E01               	movwf	btemp^0,c
 19828  0190EC  6A02               	clrf	(btemp+1)^0,c
 19829  0190EE  6A03               	clrf	(btemp+2)^0,c
 19830  0190F0  6A04               	clrf	(btemp+3)^0,c
 19831  0190F2  D08B               	goto	l2773
 19832  0190F4                     l8819:
 19833                           
 19834                           ;stkvar	_f1 @ sp[(-2)+-4]
 19835  0190F4  0EFA               	movlw	-6
 19836  0190F6  006F FF8C  F009    	movff	plusw1,btemp+8
 19837  0190FC  0EFB               	movlw	-5
 19838  0190FE  006F FF8C  F00A    	movff	plusw1,btemp+9
 19839  019104  0EFC               	movlw	-4
 19840  019106  006F FF8C  F00B    	movff	plusw1,btemp+10
 19841  01910C  0EFD               	movlw	-3
 19842  01910E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19843  019114  0E20               	movlw	32
 19844  019116  D005               	goto	u7330
 19845  019118                     u7335:
 19846  019118  90D8               	bcf	status,0,c
 19847  01911A  320C               	rrcf	(btemp+11)^0,f,c
 19848  01911C  320B               	rrcf	(btemp+10)^0,f,c
 19849  01911E  320A               	rrcf	(btemp+9)^0,f,c
 19850  019120  3209               	rrcf	(btemp+8)^0,f,c
 19851  019122                     u7330:
 19852  019122  2EE8               	decfsz	wreg,f,c
 19853  019124  D7F9               	goto	u7335
 19854                           
 19855                           ;stkvar	_sign1 @ sp[(-2)+1]
 19856  019126  0EFF               	movlw	-1
 19857  019128  0060  F027  FFE3   	movff	btemp+8,plusw1
 19858                           
 19859                           ;stkvar	_f1 @ sp[(-2)+-4]
 19860  01912E  0EFC               	movlw	-4
 19861  019130  8EE3               	bsf	plusw1,7,c
 19862                           
 19863                           ;stkvar	_f1 @ sp[(-2)+-4]
 19864  019132  50E1               	movf	fsr1l,w,c
 19865  019134  0FFA               	addlw	-6
 19866  019136  6ED9               	movwf	fsr2l,c
 19867  019138  50E2               	movf	fsr1h,w,c
 19868  01913A  6EDA               	movwf	fsr2h,c
 19869  01913C  0EFF               	movlw	255
 19870  01913E  22DA               	addwfc	fsr2h,f,c
 19871  019140  0EFF               	movlw	255
 19872  019142  16DE               	andwf	postinc2,f,c
 19873  019144  0EFF               	movlw	255
 19874  019146  16DE               	andwf	postinc2,f,c
 19875  019148  0EFF               	movlw	255
 19876  01914A  16DE               	andwf	postinc2,f,c
 19877  01914C  0E00               	movlw	0
 19878  01914E  16DE               	andwf	postinc2,f,c
 19879                           
 19880                           ;stkvar	_exp1 @ sp[(-2)+0]
 19881  019150  0EFE               	movlw	-2
 19882  019152  006F FF8C  F001    	movff	plusw1,btemp
 19883  019158  0E96               	movlw	150
 19884  01915A  5E01               	subwf	btemp^0,f,c
 19885  01915C  0EFE               	movlw	-2
 19886  01915E  0060  F007  FFE3   	movff	btemp,plusw1
 19887                           
 19888                           ;stkvar	_exp1 @ sp[(-2)+0]
 19889  019164  0EFE               	movlw	-2
 19890  019166  AEE3               	btfss	plusw1,7,c
 19891  019168  D014               	goto	l8837
 19892                           
 19893                           ;stkvar	_exp1 @ sp[(-2)+0]
 19894  01916A  0EFE               	movlw	-2
 19895  01916C  50E3               	movf	plusw1,w,c
 19896  01916E  0A80               	xorlw	128
 19897  019170  0F97               	addlw	151
 19898  019172  A0D8               	btfss	status,0,c
 19899  019174  D7B9               	goto	u7320
 19900  019176                     l8835:
 19901                           
 19902                           ;stkvar	_f1 @ sp[(-2)+-4]
 19903  019176  90D8               	bcf	status,0,c
 19904  019178  0EFD               	movlw	-3
 19905  01917A  32E3               	rrcf	plusw1,f,c
 19906  01917C  0EFC               	movlw	-4
 19907  01917E  32E3               	rrcf	plusw1,f,c
 19908  019180  0EFB               	movlw	-5
 19909  019182  32E3               	rrcf	plusw1,f,c
 19910  019184  0EFA               	movlw	-6
 19911  019186  32E3               	rrcf	plusw1,f,c
 19912                           
 19913                           ;stkvar	_exp1 @ sp[(-2)+0]
 19914  019188  0EFE               	movlw	-2
 19915  01918A  2AE3               	incf	plusw1,f,c
 19916  01918C  B4D8               	btfsc	status,2,c
 19917  01918E  D018               	goto	u7380
 19918  019190  D7F2               	goto	l8835
 19919  019192                     l8837:
 19920                           
 19921                           ;stkvar	_exp1 @ sp[(-2)+0]
 19922  019192  0EFE               	movlw	-2
 19923  019194  006F FF8C  F001    	movff	plusw1,btemp
 19924  01919A  0E1F               	movlw	31
 19925  01919C  6401               	cpfsgt	btemp^0,c
 19926  01919E  D00C               	goto	l8845
 19927  0191A0  D7A3               	goto	u7320
 19928  0191A2                     l8843:
 19929                           
 19930                           ;stkvar	_f1 @ sp[(-2)+-4]
 19931  0191A2  90D8               	bcf	status,0,c
 19932  0191A4  0EFA               	movlw	-6
 19933  0191A6  36E3               	rlcf	plusw1,f,c
 19934  0191A8  0EFB               	movlw	-5
 19935  0191AA  36E3               	rlcf	plusw1,f,c
 19936  0191AC  0EFC               	movlw	-4
 19937  0191AE  36E3               	rlcf	plusw1,f,c
 19938  0191B0  0EFD               	movlw	-3
 19939  0191B2  36E3               	rlcf	plusw1,f,c
 19940                           
 19941                           ;stkvar	_exp1 @ sp[(-2)+0]
 19942  0191B4  0EFE               	movlw	-2
 19943  0191B6  06E3               	decf	plusw1,f,c
 19944  0191B8                     l8845:
 19945                           
 19946                           ;stkvar	_exp1 @ sp[(-2)+0]
 19947  0191B8  0EFE               	movlw	-2
 19948  0191BA  50E3               	movf	plusw1,w,c
 19949  0191BC  A4D8               	btfss	status,2,c
 19950  0191BE  D7F1               	goto	l8843
 19951  0191C0                     u7380:
 19952                           
 19953                           ;stkvar	_sign1 @ sp[(-2)+1]
 19954  0191C0  0EFF               	movlw	-1
 19955  0191C2  50E3               	movf	plusw1,w,c
 19956  0191C4  B4D8               	btfsc	status,2,c
 19957  0191C6  D011               	goto	u7400
 19958                           
 19959                           ;stkvar	_f1 @ sp[(-2)+-4]
 19960                           ;stkvar	_f1 @ sp[(-2)+-4]
 19961  0191C8  0EFA               	movlw	-6
 19962  0191CA  6CE3               	negf	plusw1,c
 19963  0191CC  0EFB               	movlw	-5
 19964  0191CE  1EE3               	comf	plusw1,f,c
 19965  0191D0  0EFC               	movlw	-4
 19966  0191D2  1EE3               	comf	plusw1,f,c
 19967  0191D4  0EFD               	movlw	-3
 19968  0191D6  1EE3               	comf	plusw1,f,c
 19969  0191D8  E308               	bnc	u7400
 19970  0191DA  0EFB               	movlw	-5
 19971  0191DC  2AE3               	incf	plusw1,f,c
 19972  0191DE  E305               	bnc	u7400
 19973  0191E0  0EFC               	movlw	-4
 19974  0191E2  2AE3               	incf	plusw1,f,c
 19975  0191E4  E302               	bnc	u7400
 19976  0191E6  0EFD               	movlw	-3
 19977  0191E8  2AE3               	incf	plusw1,f,c
 19978  0191EA                     u7400:
 19979                           
 19980                           ;stkvar	_f1 @ sp[(-2)+-4]
 19981  0191EA  0EFA               	movlw	-6
 19982  0191EC  006F FF8C  F001    	movff	plusw1,btemp
 19983  0191F2  0EFB               	movlw	-5
 19984  0191F4  006F FF8C  F002    	movff	plusw1,btemp+1
 19985  0191FA  0EFC               	movlw	-4
 19986  0191FC  006F FF8C  F003    	movff	plusw1,btemp+2
 19987  019202  0EFD               	movlw	-3
 19988  019204  006F FF8C  F004    	movff	plusw1,btemp+3
 19989  01920A                     l2773:
 19990                           
 19991                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19992  01920A  0EFA               	movlw	250
 19993  01920C  26E1               	addwf	fsr1l,f,c
 19994  01920E  0EFF               	movlw	255
 19995  019210  22E2               	addwfc	fsr1h,f,c
 19996  019212  0012               	return		;funcret
 19997  019214                     __end_of___fltol:
 19998                           	opt callstack 0
 19999                           
 20000 ;; *************** function ___flneg *****************
 20001 ;; Defined at:
 20002 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 20003 ;; Parameters:    Size  Location     Type
 20004 ;;  f1              4  [STACK] long 
 20005 ;; Auto vars:     Size  Location     Type
 20006 ;;		None
 20007 ;; Return value:  Size  Location     Type
 20008 ;;                  4  [STACK] long 
 20009 ;; Registers used:
 20010 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 20011 ;; Tracked objects:
 20012 ;;		On entry : 0/0
 20013 ;;		On exit  : 0/0
 20014 ;;		Unchanged: 0/0
 20015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20020 ;;Total ram usage:        0 bytes
 20021 ;; Hardware stack levels used:    1
 20022 ;; Hardware stack levels required when called:   15
 20023 ;; This function calls:
 20024 ;;		Nothing
 20025 ;; This function is called by:
 20026 ;;		_calc_bsoc
 20027 ;;		_efgtoa
 20028 ;; This function uses a reentrant model
 20029 ;;
 20030                           
 20031                           	psect	text69
 20032  01B824                     __ptext69:
 20033                           	opt callstack 0
 20034  01B824                     ___flneg:
 20035                           	opt callstack 0
 20036                           
 20037                           ;stkvar	_f1 @ sp[(0)+-4]
 20038                           
 20039                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20040                           ;incstack = 0
 20041 ;; hardware stack exceeded
 20042  01B824  0EFC               	movlw	-4
 20043  01B826  50E3               	movf	plusw1,w,c
 20044  01B828  E10A               	bnz	u7300
 20045  01B82A  0EFD               	movlw	-3
 20046  01B82C  50E3               	movf	plusw1,w,c
 20047  01B82E  E107               	bnz	u7300
 20048  01B830  0EFE               	movlw	-2
 20049  01B832  50E3               	movf	plusw1,w,c
 20050  01B834  E104               	bnz	u7300
 20051  01B836  0EFF               	movlw	-1
 20052  01B838  50E3               	movf	plusw1,w,c
 20053  01B83A  B4D8               	btfsc	status,2,c
 20054  01B83C  D002               	goto	l8809
 20055  01B83E                     u7300:
 20056                           
 20057                           ;stkvar	_f1 @ sp[(0)+-4]
 20058  01B83E  0EFF               	movlw	-1
 20059  01B840  7EE3               	btg	plusw1,7,c
 20060  01B842                     l8809:
 20061                           
 20062                           ;stkvar	_f1 @ sp[(0)+-4]
 20063  01B842  0EFC               	movlw	-4
 20064  01B844  006F FF8C  F001    	movff	plusw1,btemp
 20065  01B84A  0EFD               	movlw	-3
 20066  01B84C  006F FF8C  F002    	movff	plusw1,btemp+1
 20067  01B852  0EFE               	movlw	-2
 20068  01B854  006F FF8C  F003    	movff	plusw1,btemp+2
 20069  01B85A  0EFF               	movlw	-1
 20070  01B85C  006F FF8C  F004    	movff	plusw1,btemp+3
 20071                           
 20072                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20073  01B862  52E5               	movf	postdec1,f,c
 20074  01B864  52E5               	movf	postdec1,f,c
 20075  01B866  52E5               	movf	postdec1,f,c
 20076  01B868  52E5               	movf	postdec1,f,c
 20077  01B86A  0012               	return		;funcret
 20078  01B86C                     __end_of___flneg:
 20079                           	opt callstack 0
 20080                           
 20081 ;; *************** function ___fleq *****************
 20082 ;; Defined at:
 20083 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 20084 ;; Parameters:    Size  Location     Type
 20085 ;;  ff1             4  [STACK] long 
 20086 ;;  ff2             4  [STACK] long 
 20087 ;; Auto vars:     Size  Location     Type
 20088 ;;		None
 20089 ;; Return value:  Size  Location     Type
 20090 ;;		None               void
 20091 ;; Registers used:
 20092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20093 ;; Tracked objects:
 20094 ;;		On entry : 0/0
 20095 ;;		On exit  : 0/0
 20096 ;;		Unchanged: 0/0
 20097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20102 ;;Total ram usage:        0 bytes
 20103 ;; Hardware stack levels used:    1
 20104 ;; Hardware stack levels required when called:   15
 20105 ;; This function calls:
 20106 ;;		Nothing
 20107 ;; This function is called by:
 20108 ;;		_efgtoa
 20109 ;; This function uses a reentrant model
 20110 ;;
 20111                           
 20112                           	psect	text70
 20113  01A666                     __ptext70:
 20114                           	opt callstack 0
 20115  01A666                     ___fleq:
 20116                           	opt callstack 0
 20117                           
 20118                           ;stkvar	_ff1 @ sp[(0)+-4]
 20119                           
 20120                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20121                           ;incstack = 0
 20122 ;; hardware stack exceeded
 20123  01A666  50E1               	movf	fsr1l,w,c
 20124  01A668  0FFC               	addlw	-4
 20125  01A66A  6ED9               	movwf	fsr2l,c
 20126  01A66C  50E2               	movf	fsr1h,w,c
 20127  01A66E  6EDA               	movwf	fsr2h,c
 20128  01A670  0EFF               	movlw	255
 20129  01A672  22DA               	addwfc	fsr2h,f,c
 20130  01A674  0E00               	movlw	0
 20131  01A676  14DE               	andwf	postinc2,w,c
 20132  01A678  6E09               	movwf	(btemp+8)^0,c
 20133  01A67A  0E00               	movlw	0
 20134  01A67C  14DE               	andwf	postinc2,w,c
 20135  01A67E  6E0A               	movwf	(btemp+9)^0,c
 20136  01A680  0E80               	movlw	128
 20137  01A682  14DE               	andwf	postinc2,w,c
 20138  01A684  6E0B               	movwf	(btemp+10)^0,c
 20139  01A686  0E7F               	movlw	127
 20140  01A688  14DE               	andwf	postinc2,w,c
 20141  01A68A  6E0C               	movwf	(btemp+11)^0,c
 20142  01A68C  5009               	movf	(btemp+8)^0,w,c
 20143  01A68E  100A               	iorwf	(btemp+9)^0,w,c
 20144  01A690  100B               	iorwf	(btemp+10)^0,w,c
 20145  01A692  100C               	iorwf	(btemp+11)^0,w,c
 20146  01A694  A4D8               	btfss	status,2,c
 20147  01A696  D008               	goto	l8767
 20148                           
 20149                           ;stkvar	_ff1 @ sp[(0)+-4]
 20150  01A698  0EFC               	movlw	-4
 20151  01A69A  6AE3               	clrf	plusw1,c
 20152  01A69C  0EFD               	movlw	-3
 20153  01A69E  6AE3               	clrf	plusw1,c
 20154  01A6A0  0EFE               	movlw	-2
 20155  01A6A2  6AE3               	clrf	plusw1,c
 20156  01A6A4  0EFF               	movlw	-1
 20157  01A6A6  6AE3               	clrf	plusw1,c
 20158  01A6A8                     l8767:
 20159                           
 20160                           ;stkvar	_ff2 @ sp[(0)+-8]
 20161  01A6A8  50E1               	movf	fsr1l,w,c
 20162  01A6AA  0FF8               	addlw	-8
 20163  01A6AC  6ED9               	movwf	fsr2l,c
 20164  01A6AE  50E2               	movf	fsr1h,w,c
 20165  01A6B0  6EDA               	movwf	fsr2h,c
 20166  01A6B2  0EFF               	movlw	255
 20167  01A6B4  22DA               	addwfc	fsr2h,f,c
 20168  01A6B6  0E00               	movlw	0
 20169  01A6B8  14DE               	andwf	postinc2,w,c
 20170  01A6BA  6E09               	movwf	(btemp+8)^0,c
 20171  01A6BC  0E00               	movlw	0
 20172  01A6BE  14DE               	andwf	postinc2,w,c
 20173  01A6C0  6E0A               	movwf	(btemp+9)^0,c
 20174  01A6C2  0E80               	movlw	128
 20175  01A6C4  14DE               	andwf	postinc2,w,c
 20176  01A6C6  6E0B               	movwf	(btemp+10)^0,c
 20177  01A6C8  0E7F               	movlw	127
 20178  01A6CA  14DE               	andwf	postinc2,w,c
 20179  01A6CC  6E0C               	movwf	(btemp+11)^0,c
 20180  01A6CE  5009               	movf	(btemp+8)^0,w,c
 20181  01A6D0  100A               	iorwf	(btemp+9)^0,w,c
 20182  01A6D2  100B               	iorwf	(btemp+10)^0,w,c
 20183  01A6D4  100C               	iorwf	(btemp+11)^0,w,c
 20184  01A6D6  A4D8               	btfss	status,2,c
 20185  01A6D8  D008               	goto	l8771
 20186                           
 20187                           ;stkvar	_ff2 @ sp[(0)+-8]
 20188  01A6DA  0EF8               	movlw	-8
 20189  01A6DC  6AE3               	clrf	plusw1,c
 20190  01A6DE  0EF9               	movlw	-7
 20191  01A6E0  6AE3               	clrf	plusw1,c
 20192  01A6E2  0EFA               	movlw	-6
 20193  01A6E4  6AE3               	clrf	plusw1,c
 20194  01A6E6  0EFB               	movlw	-5
 20195  01A6E8  6AE3               	clrf	plusw1,c
 20196  01A6EA                     l8771:
 20197                           
 20198                           ;stkvar	_ff2 @ sp[(0)+-8]
 20199                           ;stkvar	_ff1 @ sp[(0)+-4]
 20200  01A6EA  50E1               	movf	fsr1l,w,c
 20201  01A6EC  0FFC               	addlw	-4
 20202  01A6EE  6ED9               	movwf	fsr2l,c
 20203  01A6F0  50E2               	movf	fsr1h,w,c
 20204  01A6F2  6EDA               	movwf	fsr2h,c
 20205  01A6F4  0EFF               	movlw	255
 20206  01A6F6  22DA               	addwfc	fsr2h,f,c
 20207  01A6F8  0EF8               	movlw	-8
 20208  01A6FA  50E3               	movf	plusw1,w,c
 20209  01A6FC  18DE               	xorwf	postinc2,w,c
 20210  01A6FE  E10D               	bnz	u7240
 20211  01A700  0EF9               	movlw	-7
 20212  01A702  50E3               	movf	plusw1,w,c
 20213  01A704  18DE               	xorwf	postinc2,w,c
 20214  01A706  E109               	bnz	u7240
 20215  01A708  0EFA               	movlw	-6
 20216  01A70A  50E3               	movf	plusw1,w,c
 20217  01A70C  18DE               	xorwf	postinc2,w,c
 20218  01A70E  E105               	bnz	u7240
 20219  01A710  0EFB               	movlw	-5
 20220  01A712  50E3               	movf	plusw1,w,c
 20221  01A714  18DE               	xorwf	postinc2,w,c
 20222  01A716  B4D8               	btfsc	status,2,c
 20223  01A718  D002               	goto	l8775
 20224  01A71A                     u7240:
 20225  01A71A  9001               	bcf	btemp& (0+255),0,c
 20226  01A71C  D001               	goto	l2735
 20227  01A71E                     l8775:
 20228  01A71E  8001               	bsf	btemp& (0+255),0,c
 20229  01A720                     l2735:
 20230                           
 20231                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 20232  01A720  0EF8               	movlw	248
 20233  01A722  26E1               	addwf	fsr1l,f,c
 20234  01A724  0EFF               	movlw	255
 20235  01A726  22E2               	addwfc	fsr1h,f,c
 20236  01A728  0012               	return		;funcret
 20237  01A72A                     __end_of___fleq:
 20238                           	opt callstack 0
 20239                           
 20240 ;; *************** function ___awmod *****************
 20241 ;; Defined at:
 20242 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 20243 ;; Parameters:    Size  Location     Type
 20244 ;;  dividend        2  [STACK] int 
 20245 ;;  divisor         2  [STACK] int 
 20246 ;; Auto vars:     Size  Location     Type
 20247 ;;  sign            1  [STACK] unsigned char 
 20248 ;;  counter         1  [STACK] unsigned char 
 20249 ;; Return value:  Size  Location     Type
 20250 ;;                  2  [STACK] int 
 20251 ;; Registers used:
 20252 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 20253 ;; Tracked objects:
 20254 ;;		On entry : 0/0
 20255 ;;		On exit  : 0/0
 20256 ;;		Unchanged: 0/0
 20257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20262 ;;Total ram usage:        0 bytes
 20263 ;; Hardware stack levels used:    1
 20264 ;; Hardware stack levels required when called:   15
 20265 ;; This function calls:
 20266 ;;		Nothing
 20267 ;; This function is called by:
 20268 ;;		_efgtoa
 20269 ;; This function uses a reentrant model
 20270 ;;
 20271                           
 20272                           	psect	text71
 20273  019C08                     __ptext71:
 20274                           	opt callstack 0
 20275  019C08                     ___awmod:
 20276                           	opt callstack 0
 20277                           
 20278                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20279  019C08  52E6               	movf	postinc1,f,c
 20280  019C0A  52E6               	movf	postinc1,f,c
 20281                           
 20282                           ;stkvar	_sign @ sp[(-2)+0]
 20283                           
 20284                           ;incstack = 0
 20285 ;; hardware stack exceeded
 20286  019C0C  0EFE               	movlw	-2
 20287  019C0E  6AE3               	clrf	plusw1,c
 20288                           
 20289                           ;stkvar	_dividend @ sp[(-2)+-2]
 20290  019C10  0EFD               	movlw	-3
 20291  019C12  AEE3               	btfss	plusw1,7,c
 20292  019C14  D009               	goto	l8733
 20293                           
 20294                           ;stkvar	_dividend @ sp[(-2)+-2]
 20295                           ;stkvar	_dividend @ sp[(-2)+-2]
 20296  019C16  0EFC               	movlw	-4
 20297  019C18  6CE3               	negf	plusw1,c
 20298  019C1A  0EFD               	movlw	-3
 20299  019C1C  1EE3               	comf	plusw1,f,c
 20300  019C1E  B0D8               	btfsc	status,0,c
 20301  019C20  2AE3               	incf	plusw1,f,c
 20302                           
 20303                           ;stkvar	_sign @ sp[(-2)+0]
 20304  019C22  0EFE               	movlw	-2
 20305  019C24  6AE3               	clrf	plusw1,c
 20306  019C26  2AE3               	incf	plusw1,f,c
 20307  019C28                     l8733:
 20308                           
 20309                           ;stkvar	_divisor @ sp[(-2)+-4]
 20310  019C28  0EFB               	movlw	-5
 20311  019C2A  AEE3               	btfss	plusw1,7,c
 20312  019C2C  D006               	goto	l8737
 20313                           
 20314                           ;stkvar	_divisor @ sp[(-2)+-4]
 20315                           ;stkvar	_divisor @ sp[(-2)+-4]
 20316  019C2E  0EFA               	movlw	-6
 20317  019C30  6CE3               	negf	plusw1,c
 20318  019C32  0EFB               	movlw	-5
 20319  019C34  1EE3               	comf	plusw1,f,c
 20320  019C36  B0D8               	btfsc	status,0,c
 20321  019C38  2AE3               	incf	plusw1,f,c
 20322  019C3A                     l8737:
 20323                           
 20324                           ;stkvar	_divisor @ sp[(-2)+-4]
 20325  019C3A  0EFA               	movlw	-6
 20326  019C3C  006F FF8C  F001    	movff	plusw1,btemp
 20327  019C42  0EFB               	movlw	-5
 20328  019C44  50E3               	movf	plusw1,w,c
 20329  019C46  1001               	iorwf	btemp^0,w,c
 20330  019C48  B4D8               	btfsc	status,2,c
 20331  019C4A  D053               	goto	u7200
 20332                           
 20333                           ;stkvar	_counter @ sp[(-2)+1]
 20334  019C4C  0EFF               	movlw	-1
 20335  019C4E  6AE3               	clrf	plusw1,c
 20336  019C50  D012               	goto	L23
 20337  019C52                     l8741:
 20338                           
 20339                           ;stkvar	_divisor @ sp[(-2)+-4]
 20340  019C52  0EFA               	movlw	-6
 20341  019C54  50E3               	movf	plusw1,w,c
 20342  019C56  90D8               	bcf	status,0,c
 20343  019C58  34E8               	rlcf	wreg,w,c
 20344  019C5A  6E01               	movwf	btemp^0,c
 20345  019C5C  0EFA               	movlw	-6
 20346  019C5E  0060  F007  FFE3   	movff	btemp,plusw1
 20347  019C64  0EFB               	movlw	-5
 20348  019C66  50E3               	movf	plusw1,w,c
 20349  019C68  34E8               	rlcf	wreg,w,c
 20350  019C6A  6E01               	movwf	btemp^0,c
 20351  019C6C  0EFB               	movlw	-5
 20352  019C6E  0060  F007  FFE3   	movff	btemp,plusw1
 20353                           
 20354                           ;stkvar	_counter @ sp[(-2)+1]
 20355  019C74  0EFF               	movlw	-1
 20356  019C76                     L23:
 20357  019C76  2AE3               	incf	plusw1,f,c
 20358                           
 20359                           ;stkvar	_divisor @ sp[(-2)+-4]
 20360  019C78  0EFB               	movlw	-5
 20361  019C7A  AEE3               	btfss	plusw1,7,c
 20362  019C7C  D7EA               	goto	l8741
 20363  019C7E                     u7180:
 20364                           
 20365                           ;stkvar	_divisor @ sp[(-2)+-4]
 20366  019C7E  0EFA               	movlw	-6
 20367  019C80  006F FF8C  F00B    	movff	plusw1,btemp+10
 20368  019C86  0EFB               	movlw	-5
 20369  019C88  006F FF8C  F00C    	movff	plusw1,btemp+11
 20370                           
 20371                           ;stkvar	_dividend @ sp[(-2)+-2]
 20372  019C8E  0EFC               	movlw	-4
 20373  019C90  006F FF8C  F009    	movff	plusw1,btemp+8
 20374  019C96  0EFD               	movlw	-3
 20375  019C98  006F FF8C  F00A    	movff	plusw1,btemp+9
 20376  019C9E  500B               	movf	(btemp+10)^0,w,c
 20377  019CA0  5C09               	subwf	(btemp+8)^0,w,c
 20378  019CA2  500C               	movf	(btemp+11)^0,w,c
 20379  019CA4  580A               	subwfb	(btemp+9)^0,w,c
 20380  019CA6  A0D8               	btfss	status,0,c
 20381  019CA8  D014               	goto	l8751
 20382                           
 20383                           ;stkvar	_divisor @ sp[(-2)+-4]
 20384                           ;stkvar	_dividend @ sp[(-2)+-2]
 20385  019CAA  0EFC               	movlw	-4
 20386  019CAC  50E3               	movf	plusw1,w,c
 20387  019CAE  6E01               	movwf	btemp^0,c
 20388  019CB0  0EFA               	movlw	-6
 20389  019CB2  50E3               	movf	plusw1,w,c
 20390  019CB4  5E01               	subwf	btemp^0,f,c
 20391  019CB6  0EFC               	movlw	-4
 20392  019CB8  0060  F007  FFE3   	movff	btemp,plusw1
 20393  019CBE  0EFD               	movlw	-3
 20394  019CC0  50E3               	movf	plusw1,w,c
 20395  019CC2  6E01               	movwf	btemp^0,c
 20396  019CC4  0EFB               	movlw	-5
 20397  019CC6  50E3               	movf	plusw1,w,c
 20398  019CC8  5A01               	subwfb	btemp^0,f,c
 20399  019CCA  0EFD               	movlw	-3
 20400  019CCC  0060  F007  FFE3   	movff	btemp,plusw1
 20401  019CD2                     l8751:
 20402                           
 20403                           ;stkvar	_divisor @ sp[(-2)+-4]
 20404  019CD2  90D8               	bcf	status,0,c
 20405  019CD4  0EFB               	movlw	-5
 20406  019CD6  32E3               	rrcf	plusw1,f,c
 20407  019CD8  0EFA               	movlw	-6
 20408  019CDA  32E3               	rrcf	plusw1,f,c
 20409                           
 20410                           ;stkvar	_counter @ sp[(-2)+1]
 20411  019CDC  0EFF               	movlw	-1
 20412  019CDE  50E3               	movf	plusw1,w,c
 20413  019CE0  6E01               	movwf	btemp^0,c
 20414  019CE2  0E01               	movlw	1
 20415  019CE4  5E01               	subwf	btemp^0,f,c
 20416  019CE6  0EFF               	movlw	-1
 20417  019CE8  0060  F007  FFE3   	movff	btemp,plusw1
 20418  019CEE  A4D8               	btfss	status,2,c
 20419  019CF0  D7C6               	goto	u7180
 20420  019CF2                     u7200:
 20421                           
 20422                           ;stkvar	_sign @ sp[(-2)+0]
 20423  019CF2  0EFE               	movlw	-2
 20424  019CF4  50E3               	movf	plusw1,w,c
 20425  019CF6  B4D8               	btfsc	status,2,c
 20426  019CF8  D006               	goto	l8759
 20427                           
 20428                           ;stkvar	_dividend @ sp[(-2)+-2]
 20429                           ;stkvar	_dividend @ sp[(-2)+-2]
 20430  019CFA  0EFC               	movlw	-4
 20431  019CFC  6CE3               	negf	plusw1,c
 20432  019CFE  0EFD               	movlw	-3
 20433  019D00  1EE3               	comf	plusw1,f,c
 20434  019D02  B0D8               	btfsc	status,0,c
 20435  019D04  2AE3               	incf	plusw1,f,c
 20436  019D06                     l8759:
 20437                           
 20438                           ;stkvar	_dividend @ sp[(-2)+-2]
 20439  019D06  0EFC               	movlw	-4
 20440  019D08  006F FF8C  F001    	movff	plusw1,btemp
 20441  019D0E  0EFD               	movlw	-3
 20442  019D10  006F FF8C  F002    	movff	plusw1,btemp+1
 20443                           
 20444                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20445  019D16  0EFA               	movlw	250
 20446  019D18  26E1               	addwf	fsr1l,f,c
 20447  019D1A  0EFF               	movlw	255
 20448  019D1C  22E2               	addwfc	fsr1h,f,c
 20449  019D1E  0012               	return		;funcret
 20450  019D20                     __end_of___awmod:
 20451                           	opt callstack 0
 20452                           
 20453 ;; *************** function ___awdiv *****************
 20454 ;; Defined at:
 20455 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 20456 ;; Parameters:    Size  Location     Type
 20457 ;;  dividend        2  [STACK] int 
 20458 ;;  divisor         2  [STACK] int 
 20459 ;; Auto vars:     Size  Location     Type
 20460 ;;  quotient        2  [STACK] int 
 20461 ;;  sign            1  [STACK] unsigned char 
 20462 ;;  counter         1  [STACK] unsigned char 
 20463 ;; Return value:  Size  Location     Type
 20464 ;;                  2  [STACK] int 
 20465 ;; Registers used:
 20466 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 20467 ;; Tracked objects:
 20468 ;;		On entry : 0/0
 20469 ;;		On exit  : 0/0
 20470 ;;		Unchanged: 0/0
 20471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20476 ;;Total ram usage:        0 bytes
 20477 ;; Hardware stack levels used:    1
 20478 ;; Hardware stack levels required when called:   15
 20479 ;; This function calls:
 20480 ;;		Nothing
 20481 ;; This function is called by:
 20482 ;;		_efgtoa
 20483 ;; This function uses a reentrant model
 20484 ;;
 20485                           
 20486                           	psect	text72
 20487  0194DA                     __ptext72:
 20488                           	opt callstack 0
 20489  0194DA                     ___awdiv:
 20490                           	opt callstack 0
 20491                           
 20492                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20493  0194DA  52E6               	movf	postinc1,f,c
 20494  0194DC  52E6               	movf	postinc1,f,c
 20495  0194DE  52E6               	movf	postinc1,f,c
 20496  0194E0  52E6               	movf	postinc1,f,c
 20497                           
 20498                           ;stkvar	_sign @ sp[(-4)+2]
 20499                           
 20500                           ;incstack = 0
 20501 ;; hardware stack exceeded
 20502  0194E2  0EFE               	movlw	-2
 20503  0194E4  6AE3               	clrf	plusw1,c
 20504                           
 20505                           ;stkvar	_divisor @ sp[(-4)+-4]
 20506  0194E6  0EF9               	movlw	-7
 20507  0194E8  AEE3               	btfss	plusw1,7,c
 20508  0194EA  D009               	goto	l8687
 20509                           
 20510                           ;stkvar	_divisor @ sp[(-4)+-4]
 20511                           ;stkvar	_divisor @ sp[(-4)+-4]
 20512  0194EC  0EF8               	movlw	-8
 20513  0194EE  6CE3               	negf	plusw1,c
 20514  0194F0  0EF9               	movlw	-7
 20515  0194F2  1EE3               	comf	plusw1,f,c
 20516  0194F4  B0D8               	btfsc	status,0,c
 20517  0194F6  2AE3               	incf	plusw1,f,c
 20518                           
 20519                           ;stkvar	_sign @ sp[(-4)+2]
 20520  0194F8  0EFE               	movlw	-2
 20521  0194FA  6AE3               	clrf	plusw1,c
 20522  0194FC  2AE3               	incf	plusw1,f,c
 20523  0194FE                     l8687:
 20524                           
 20525                           ;stkvar	_dividend @ sp[(-4)+-2]
 20526  0194FE  0EFB               	movlw	-5
 20527  019500  AEE3               	btfss	plusw1,7,c
 20528  019502  D008               	goto	l8693
 20529                           
 20530                           ;stkvar	_dividend @ sp[(-4)+-2]
 20531                           ;stkvar	_dividend @ sp[(-4)+-2]
 20532  019504  0EFA               	movlw	-6
 20533  019506  6CE3               	negf	plusw1,c
 20534  019508  0EFB               	movlw	-5
 20535  01950A  1EE3               	comf	plusw1,f,c
 20536  01950C  B0D8               	btfsc	status,0,c
 20537  01950E  2AE3               	incf	plusw1,f,c
 20538                           
 20539                           ;stkvar	_sign @ sp[(-4)+2]
 20540  019510  0EFE               	movlw	-2
 20541  019512  70E3               	btg	plusw1,0,c
 20542  019514                     l8693:
 20543                           
 20544                           ;stkvar	_quotient @ sp[(-4)+0]
 20545  019514  0EFC               	movlw	-4
 20546  019516  6AE3               	clrf	plusw1,c
 20547  019518  0EFD               	movlw	-3
 20548  01951A  6AE3               	clrf	plusw1,c
 20549                           
 20550                           ;stkvar	_divisor @ sp[(-4)+-4]
 20551  01951C  0EF8               	movlw	-8
 20552  01951E  006F FF8C  F001    	movff	plusw1,btemp
 20553  019524  0EF9               	movlw	-7
 20554  019526  50E3               	movf	plusw1,w,c
 20555  019528  1001               	iorwf	btemp^0,w,c
 20556  01952A  B4D8               	btfsc	status,2,c
 20557  01952C  D066               	goto	u7130
 20558                           
 20559                           ;stkvar	_counter @ sp[(-4)+3]
 20560  01952E  0EFF               	movlw	-1
 20561  019530  6AE3               	clrf	plusw1,c
 20562  019532  D012               	goto	L24
 20563  019534                     l8699:
 20564                           
 20565                           ;stkvar	_divisor @ sp[(-4)+-4]
 20566  019534  0EF8               	movlw	-8
 20567  019536  50E3               	movf	plusw1,w,c
 20568  019538  90D8               	bcf	status,0,c
 20569  01953A  34E8               	rlcf	wreg,w,c
 20570  01953C  6E01               	movwf	btemp^0,c
 20571  01953E  0EF8               	movlw	-8
 20572  019540  0060  F007  FFE3   	movff	btemp,plusw1
 20573  019546  0EF9               	movlw	-7
 20574  019548  50E3               	movf	plusw1,w,c
 20575  01954A  34E8               	rlcf	wreg,w,c
 20576  01954C  6E01               	movwf	btemp^0,c
 20577  01954E  0EF9               	movlw	-7
 20578  019550  0060  F007  FFE3   	movff	btemp,plusw1
 20579                           
 20580                           ;stkvar	_counter @ sp[(-4)+3]
 20581  019556  0EFF               	movlw	-1
 20582  019558                     L24:
 20583  019558  2AE3               	incf	plusw1,f,c
 20584                           
 20585                           ;stkvar	_divisor @ sp[(-4)+-4]
 20586  01955A  0EF9               	movlw	-7
 20587  01955C  AEE3               	btfss	plusw1,7,c
 20588  01955E  D7EA               	goto	l8699
 20589  019560                     u7110:
 20590                           
 20591                           ;stkvar	_quotient @ sp[(-4)+0]
 20592  019560  0EFC               	movlw	-4
 20593  019562  50E3               	movf	plusw1,w,c
 20594  019564  90D8               	bcf	status,0,c
 20595  019566  34E8               	rlcf	wreg,w,c
 20596  019568  6E01               	movwf	btemp^0,c
 20597  01956A  0EFC               	movlw	-4
 20598  01956C  0060  F007  FFE3   	movff	btemp,plusw1
 20599  019572  0EFD               	movlw	-3
 20600  019574  50E3               	movf	plusw1,w,c
 20601  019576  34E8               	rlcf	wreg,w,c
 20602  019578  6E01               	movwf	btemp^0,c
 20603  01957A  0EFD               	movlw	-3
 20604  01957C  0060  F007  FFE3   	movff	btemp,plusw1
 20605                           
 20606                           ;stkvar	_divisor @ sp[(-4)+-4]
 20607  019582  0EF8               	movlw	-8
 20608  019584  006F FF8C  F00B    	movff	plusw1,btemp+10
 20609  01958A  0EF9               	movlw	-7
 20610  01958C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20611                           
 20612                           ;stkvar	_dividend @ sp[(-4)+-2]
 20613  019592  0EFA               	movlw	-6
 20614  019594  006F FF8C  F009    	movff	plusw1,btemp+8
 20615  01959A  0EFB               	movlw	-5
 20616  01959C  006F FF8C  F00A    	movff	plusw1,btemp+9
 20617  0195A2  500B               	movf	(btemp+10)^0,w,c
 20618  0195A4  5C09               	subwf	(btemp+8)^0,w,c
 20619  0195A6  500C               	movf	(btemp+11)^0,w,c
 20620  0195A8  580A               	subwfb	(btemp+9)^0,w,c
 20621  0195AA  A0D8               	btfss	status,0,c
 20622  0195AC  D016               	goto	l8713
 20623                           
 20624                           ;stkvar	_divisor @ sp[(-4)+-4]
 20625                           ;stkvar	_dividend @ sp[(-4)+-2]
 20626  0195AE  0EFA               	movlw	-6
 20627  0195B0  50E3               	movf	plusw1,w,c
 20628  0195B2  6E01               	movwf	btemp^0,c
 20629  0195B4  0EF8               	movlw	-8
 20630  0195B6  50E3               	movf	plusw1,w,c
 20631  0195B8  5E01               	subwf	btemp^0,f,c
 20632  0195BA  0EFA               	movlw	-6
 20633  0195BC  0060  F007  FFE3   	movff	btemp,plusw1
 20634  0195C2  0EFB               	movlw	-5
 20635  0195C4  50E3               	movf	plusw1,w,c
 20636  0195C6  6E01               	movwf	btemp^0,c
 20637  0195C8  0EF9               	movlw	-7
 20638  0195CA  50E3               	movf	plusw1,w,c
 20639  0195CC  5A01               	subwfb	btemp^0,f,c
 20640  0195CE  0EFB               	movlw	-5
 20641  0195D0  0060  F007  FFE3   	movff	btemp,plusw1
 20642                           
 20643                           ;stkvar	_quotient @ sp[(-4)+0]
 20644  0195D6  0EFC               	movlw	-4
 20645  0195D8  80E3               	bsf	plusw1,0,c
 20646  0195DA                     l8713:
 20647                           
 20648                           ;stkvar	_divisor @ sp[(-4)+-4]
 20649  0195DA  90D8               	bcf	status,0,c
 20650  0195DC  0EF9               	movlw	-7
 20651  0195DE  32E3               	rrcf	plusw1,f,c
 20652  0195E0  0EF8               	movlw	-8
 20653  0195E2  32E3               	rrcf	plusw1,f,c
 20654                           
 20655                           ;stkvar	_counter @ sp[(-4)+3]
 20656  0195E4  0EFF               	movlw	-1
 20657  0195E6  50E3               	movf	plusw1,w,c
 20658  0195E8  6E01               	movwf	btemp^0,c
 20659  0195EA  0E01               	movlw	1
 20660  0195EC  5E01               	subwf	btemp^0,f,c
 20661  0195EE  0EFF               	movlw	-1
 20662  0195F0  0060  F007  FFE3   	movff	btemp,plusw1
 20663  0195F6  A4D8               	btfss	status,2,c
 20664  0195F8  D7B3               	goto	u7110
 20665  0195FA                     u7130:
 20666                           
 20667                           ;stkvar	_sign @ sp[(-4)+2]
 20668  0195FA  0EFE               	movlw	-2
 20669  0195FC  50E3               	movf	plusw1,w,c
 20670  0195FE  B4D8               	btfsc	status,2,c
 20671  019600  D006               	goto	l8721
 20672                           
 20673                           ;stkvar	_quotient @ sp[(-4)+0]
 20674                           ;stkvar	_quotient @ sp[(-4)+0]
 20675  019602  0EFC               	movlw	-4
 20676  019604  6CE3               	negf	plusw1,c
 20677  019606  0EFD               	movlw	-3
 20678  019608  1EE3               	comf	plusw1,f,c
 20679  01960A  B0D8               	btfsc	status,0,c
 20680  01960C  2AE3               	incf	plusw1,f,c
 20681  01960E                     l8721:
 20682                           
 20683                           ;stkvar	_quotient @ sp[(-4)+0]
 20684  01960E  0EFC               	movlw	-4
 20685  019610  006F FF8C  F001    	movff	plusw1,btemp
 20686  019616  0EFD               	movlw	-3
 20687  019618  006F FF8C  F002    	movff	plusw1,btemp+1
 20688                           
 20689                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20690  01961E  0EF8               	movlw	248
 20691  019620  26E1               	addwf	fsr1l,f,c
 20692  019622  0EFF               	movlw	255
 20693  019624  22E2               	addwfc	fsr1h,f,c
 20694  019626  0012               	return		;funcret
 20695  019628                     __end_of___awdiv:
 20696                           	opt callstack 0
 20697                           
 20698 ;; *************** function _dtoa *****************
 20699 ;; Defined at:
 20700 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20701 ;; Parameters:    Size  Location     Type
 20702 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20703 ;;		 -> f(6), NULL(0), 
 20704 ;;  d               8  [STACK] long long 
 20705 ;; Auto vars:     Size  Location     Type
 20706 ;;  n               8  [STACK] long long 
 20707 ;;  i               2  [STACK] int 
 20708 ;;  s               2  [STACK] int 
 20709 ;;  w               2  [STACK] int 
 20710 ;;  p               2  [STACK] int 
 20711 ;; Return value:  Size  Location     Type
 20712 ;;                  2  [STACK] int 
 20713 ;; Registers used:
 20714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 20715 ;; Tracked objects:
 20716 ;;		On entry : 0/0
 20717 ;;		On exit  : 0/0
 20718 ;;		Unchanged: 0/0
 20719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20724 ;;Total ram usage:        0 bytes
 20725 ;; Hardware stack levels used:    1
 20726 ;; Hardware stack levels required when called:   20
 20727 ;; This function calls:
 20728 ;;		___aodiv
 20729 ;;		___aomod
 20730 ;;		_abs
 20731 ;;		_pad
 20732 ;; This function is called by:
 20733 ;;		_vfpfcnvrt
 20734 ;; This function uses a reentrant model
 20735 ;;
 20736                           
 20737                           	psect	text73
 20738  01583E                     __ptext73:
 20739                           	opt callstack 0
 20740  01583E                     _dtoa:
 20741                           	opt callstack 0
 20742                           
 20743                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 20744  01583E  0E12               	movlw	18
 20745  015840  26E1               	addwf	fsr1l,f,c
 20746  015842  0E00               	movlw	0
 20747  015844  22E2               	addwfc	fsr1h,f,c
 20748                           
 20749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 20750                           ;stkvar	_d @ sp[(-18)+-10]
 20751                           
 20752                           ;incstack = 0
 20753 ;; hardware stack exceeded
 20754  015846  0EE4               	movlw	228
 20755  015848  24E1               	addwf	fsr1l,w,c
 20756  01584A  6ED9               	movwf	fsr2l,c
 20757  01584C  0EFF               	movlw	255
 20758  01584E  20E2               	addwfc	fsr1h,w,c
 20759  015850  6EDA               	movwf	fsr2h,c
 20760                           
 20761                           ;stkvar	_n @ sp[(-18)+2]
 20762  015852  0E08               	movlw	8
 20763  015854  6E01               	movwf	btemp^0,c
 20764  015856  0EF0               	movlw	-16
 20765  015858                     us1110999:
 20766  015858  006F FF7B FFE3     	movff	postinc2,plusw1
 20767  01585E  28E8               	incf	wreg,w,c
 20768  015860  2E01               	decfsz	btemp^0,f,c
 20769  015862  D7FA               	bra	us1110999
 20770                           
 20771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 20772                           ;stkvar	_n @ sp[(-18)+2]
 20773  015864  0EF7               	movlw	-9
 20774  015866  AEE3               	btfss	plusw1,7,c
 20775  015868  D002               	goto	u11110
 20776  01586A  0E01               	movlw	1
 20777  01586C  D001               	goto	u11120
 20778  01586E                     u11110:
 20779  01586E  0E00               	movlw	0
 20780  015870                     u11120:
 20781  015870  6E0B               	movwf	(btemp+10)^0,c
 20782  015872  6A0C               	clrf	(btemp+11)^0,c
 20783                           
 20784                           ;stkvar	_s @ sp[(-18)+12]
 20785  015874  0EFA               	movlw	-6
 20786  015876  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20787  01587C  0EFB               	movlw	-5
 20788  01587E  0060  F033  FFE3   	movff	btemp+11,plusw1
 20789                           
 20790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 20791                           ;stkvar	_s @ sp[(-18)+12]
 20792  015884  0EFA               	movlw	-6
 20793  015886  006F FF8C  F001    	movff	plusw1,btemp
 20794  01588C  0EFB               	movlw	-5
 20795  01588E  50E3               	movf	plusw1,w,c
 20796  015890  1001               	iorwf	btemp^0,w,c
 20797  015892  B4D8               	btfsc	status,2,c
 20798  015894  D025               	goto	u11140
 20799                           
 20800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 20801                           ;stkvar	_n @ sp[(-18)+2]
 20802                           ;stkvar	_n @ sp[(-18)+2]
 20803  015896  0EF0               	movlw	-16
 20804  015898  6CE3               	negf	plusw1,c
 20805  01589A  0EF1               	movlw	-15
 20806  01589C  1EE3               	comf	plusw1,f,c
 20807  01589E  0EF2               	movlw	-14
 20808  0158A0  1EE3               	comf	plusw1,f,c
 20809  0158A2  0EF3               	movlw	-13
 20810  0158A4  1EE3               	comf	plusw1,f,c
 20811  0158A6  0EF4               	movlw	-12
 20812  0158A8  1EE3               	comf	plusw1,f,c
 20813  0158AA  0EF5               	movlw	-11
 20814  0158AC  1EE3               	comf	plusw1,f,c
 20815  0158AE  0EF6               	movlw	-10
 20816  0158B0  1EE3               	comf	plusw1,f,c
 20817  0158B2  0EF7               	movlw	-9
 20818  0158B4  1EE3               	comf	plusw1,f,c
 20819  0158B6  E314               	bnc	u11140
 20820  0158B8  0EF1               	movlw	-15
 20821  0158BA  2AE3               	incf	plusw1,f,c
 20822  0158BC  E311               	bnc	u11140
 20823  0158BE  0EF2               	movlw	-14
 20824  0158C0  2AE3               	incf	plusw1,f,c
 20825  0158C2  E30E               	bnc	u11140
 20826  0158C4  0EF3               	movlw	-13
 20827  0158C6  2AE3               	incf	plusw1,f,c
 20828  0158C8  E30B               	bnc	u11140
 20829  0158CA  0EF4               	movlw	-12
 20830  0158CC  2AE3               	incf	plusw1,f,c
 20831  0158CE  E308               	bnc	u11140
 20832  0158D0  0EF5               	movlw	-11
 20833  0158D2  2AE3               	incf	plusw1,f,c
 20834  0158D4  E305               	bnc	u11140
 20835  0158D6  0EF6               	movlw	-10
 20836  0158D8  2AE3               	incf	plusw1,f,c
 20837  0158DA  E302               	bnc	u11140
 20838  0158DC  0EF7               	movlw	-9
 20839  0158DE  2AE3               	incf	plusw1,f,c
 20840  0158E0                     u11140:
 20841                           
 20842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 20843  0158E0  AE3D               	btfss	(_prec+1)^0,7,c
 20844                           
 20845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 20846  0158E2  923E               	bcf	_flags^0,1,c
 20847                           
 20848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 20849  0158E4  BE3D               	btfsc	(_prec+1)^0,7,c
 20850  0158E6  D005               	goto	u11160
 20851  0158E8  503D               	movf	(_prec+1)^0,w,c
 20852  0158EA  E110               	bnz	l12209
 20853  0158EC  043C               	decf	_prec^0,w,c
 20854  0158EE  B0D8               	btfsc	status,0,c
 20855  0158F0  D00D               	goto	l12209
 20856  0158F2                     u11160:
 20857  0158F2  0E01               	movlw	1
 20858  0158F4  6E0B               	movwf	(btemp+10)^0,c
 20859  0158F6  0E00               	movlw	0
 20860  0158F8  6E0C               	movwf	(btemp+11)^0,c
 20861                           
 20862                           ;stkvar	_p @ sp[(-18)+16]
 20863  0158FA  0EFE               	movlw	-2
 20864  0158FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20865  015902  0EFF               	movlw	-1
 20866  015904  0060  F033  FFE3   	movff	btemp+11,plusw1
 20867  01590A  D008               	goto	l2239
 20868  01590C                     l12209:
 20869                           
 20870                           ;stkvar	_p @ sp[(-18)+16]
 20871  01590C  0EFE               	movlw	-2
 20872  01590E  0060  F0F3  FFE3   	movff	_prec,plusw1
 20873  015914  0EFF               	movlw	-1
 20874  015916  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 20875  01591C                     l2239:
 20876                           
 20877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 20878                           ;stkvar	_w @ sp[(-18)+14]
 20879  01591C  0EFC               	movlw	-4
 20880  01591E  0060  F0EB  FFE3   	movff	_width,plusw1
 20881  015924  0EFD               	movlw	-3
 20882  015926  0060  F0EF  FFE3   	movff	_width+1,plusw1
 20883                           
 20884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 20885                           ;stkvar	_s @ sp[(-18)+12]
 20886  01592C  0EFA               	movlw	-6
 20887  01592E  006F FF8C  F001    	movff	plusw1,btemp
 20888  015934  0EFB               	movlw	-5
 20889  015936  50E3               	movf	plusw1,w,c
 20890  015938  1001               	iorwf	btemp^0,w,c
 20891  01593A  A4D8               	btfss	status,2,c
 20892  01593C  D002               	goto	u11180
 20893  01593E  A43E               	btfss	_flags^0,2,c
 20894  015940  D00A               	goto	l12217
 20895  015942                     u11180:
 20896                           
 20897                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 20898                           ;stkvar	_w @ sp[(-18)+14]
 20899  015942  50E1               	movf	fsr1l,w,c
 20900  015944  0FFC               	addlw	-4
 20901  015946  6ED9               	movwf	fsr2l,c
 20902  015948  50E2               	movf	fsr1h,w,c
 20903  01594A  6EDA               	movwf	fsr2h,c
 20904  01594C  0EFF               	movlw	255
 20905  01594E  22DA               	addwfc	fsr2h,f,c
 20906  015950  06DE               	decf	postinc2,f,c
 20907  015952  0E00               	movlw	0
 20908  015954  5ADD               	subwfb	postdec2,f,c
 20909  015956                     l12217:
 20910                           
 20911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 20912  015956  0E4F               	movlw	79
 20913  015958  6E0B               	movwf	(btemp+10)^0,c
 20914  01595A  0E00               	movlw	0
 20915  01595C  6E0C               	movwf	(btemp+11)^0,c
 20916                           
 20917                           ;stkvar	_i @ sp[(-18)+10]
 20918  01595E  0EF8               	movlw	-8
 20919  015960  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20920  015966  0EF9               	movlw	-7
 20921  015968  0060  F033  FFE3   	movff	btemp+11,plusw1
 20922                           
 20923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 20924  01596E  0102               	movlb	2	; () banked
 20925  015970  6BE6               	clrf	(_dbuf+79)& (0+255),b
 20926                           
 20927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20928  015972  D109               	goto	l12231
 20929  015974                     l12221:
 20930                           
 20931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 20932                           ;stkvar	_i @ sp[(-18)+10]
 20933  015974  50E1               	movf	fsr1l,w,c
 20934  015976  0FF8               	addlw	-8
 20935  015978  6ED9               	movwf	fsr2l,c
 20936  01597A  50E2               	movf	fsr1h,w,c
 20937  01597C  6EDA               	movwf	fsr2h,c
 20938  01597E  0EFF               	movlw	255
 20939  015980  22DA               	addwfc	fsr2h,f,c
 20940  015982  06DE               	decf	postinc2,f,c
 20941  015984  0E00               	movlw	0
 20942  015986  5ADD               	subwfb	postdec2,f,c
 20943                           
 20944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 20945  015988  0E0A               	movlw	10
 20946  01598A  6EE6               	movwf	postinc1,c
 20947  01598C  0E00               	movlw	0
 20948  01598E  6EE6               	movwf	postinc1,c
 20949  015990  0E00               	movlw	0
 20950  015992  6EE6               	movwf	postinc1,c
 20951  015994  0E00               	movlw	0
 20952  015996  6EE6               	movwf	postinc1,c
 20953  015998  0E00               	movlw	0
 20954  01599A  6EE6               	movwf	postinc1,c
 20955  01599C  0E00               	movlw	0
 20956  01599E  6EE6               	movwf	postinc1,c
 20957  0159A0  0E00               	movlw	0
 20958  0159A2  6EE6               	movwf	postinc1,c
 20959  0159A4  0E00               	movlw	0
 20960  0159A6  6EE6               	movwf	postinc1,c
 20961                           
 20962                           ;stkvar	_n @ sp[(-26)+2]
 20963  0159A8  50E1               	movf	fsr1l,w,c
 20964  0159AA  0FE8               	addlw	-24
 20965  0159AC  6ED9               	movwf	fsr2l,c
 20966  0159AE  50E2               	movf	fsr1h,w,c
 20967  0159B0  6EDA               	movwf	fsr2h,c
 20968  0159B2  0EFF               	movlw	255
 20969  0159B4  22DA               	addwfc	fsr2h,f,c
 20970  0159B6  006F FF7B FFE6     	movff	postinc2,postinc1
 20971  0159BC  006F FF7B FFE6     	movff	postinc2,postinc1
 20972  0159C2  006F FF7B FFE6     	movff	postinc2,postinc1
 20973  0159C8  006F FF7B FFE6     	movff	postinc2,postinc1
 20974  0159CE  006F FF7B FFE6     	movff	postinc2,postinc1
 20975  0159D4  006F FF7B FFE6     	movff	postinc2,postinc1
 20976  0159DA  006F FF7B FFE6     	movff	postinc2,postinc1
 20977  0159E0  006F FF7B FFE6     	movff	postinc2,postinc1
 20978  0159E6  EC2C  F0BF         	call	___aomod	;wreg free
 20979  0159EA  52E5               	movf	postdec1,f,c
 20980  0159EC  006F FF9C  F018    	movff	indf1,btemp+23
 20981  0159F2  52E5               	movf	postdec1,f,c
 20982  0159F4  006F FF9C  F017    	movff	indf1,btemp+22
 20983  0159FA  52E5               	movf	postdec1,f,c
 20984  0159FC  006F FF9C  F016    	movff	indf1,btemp+21
 20985  015A02  52E5               	movf	postdec1,f,c
 20986  015A04  006F FF9C  F015    	movff	indf1,btemp+20
 20987  015A0A  52E5               	movf	postdec1,f,c
 20988  015A0C  006F FF9C  F014    	movff	indf1,btemp+19
 20989  015A12  52E5               	movf	postdec1,f,c
 20990  015A14  006F FF9C  F013    	movff	indf1,btemp+18
 20991  015A1A  52E5               	movf	postdec1,f,c
 20992  015A1C  006F FF9C  F012    	movff	indf1,btemp+17
 20993  015A22  52E5               	movf	postdec1,f,c
 20994  015A24  006F FF9C  F011    	movff	indf1,btemp+16
 20995  015A2A  0EF8               	movlw	248
 20996  015A2C  26E1               	addwf	fsr1l,f,c
 20997  015A2E  0EFF               	movlw	255
 20998  015A30  22E2               	addwfc	fsr1h,f,c
 20999  015A32  0060  F044  F00B   	movff	btemp+16,btemp+10
 21000  015A38  0060  F048  F00C   	movff	btemp+17,btemp+11
 21001  015A3E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21002  015A44  0060  F033  FFE6   	movff	btemp+11,postinc1
 21003  015A4A  ECC5  F0DC         	call	_abs	;wreg free
 21004  015A4E  0E30               	movlw	48
 21005  015A50  2601               	addwf	btemp^0,f,c
 21006                           
 21007                           ;stkvar	_i @ sp[(-18)+10]
 21008  015A52  0EF8               	movlw	-8
 21009  015A54  006F FF8C  F00B    	movff	plusw1,btemp+10
 21010  015A5A  0EF9               	movlw	-7
 21011  015A5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21012  015A62  0E97               	movlw	low _dbuf
 21013  015A64  240B               	addwf	(btemp+10)^0,w,c
 21014  015A66  6ED9               	movwf	fsr2l,c
 21015  015A68  0E02               	movlw	high _dbuf
 21016  015A6A  200C               	addwfc	(btemp+11)^0,w,c
 21017  015A6C  6EDA               	movwf	fsr2h,c
 21018  015A6E  0060  F007  FFDF   	movff	btemp,indf2
 21019                           
 21020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 21021                           ;stkvar	_p @ sp[(-18)+16]
 21022  015A74  50E1               	movf	fsr1l,w,c
 21023  015A76  0FFE               	addlw	-2
 21024  015A78  6ED9               	movwf	fsr2l,c
 21025  015A7A  50E2               	movf	fsr1h,w,c
 21026  015A7C  6EDA               	movwf	fsr2h,c
 21027  015A7E  0EFF               	movlw	255
 21028  015A80  22DA               	addwfc	fsr2h,f,c
 21029  015A82  06DE               	decf	postinc2,f,c
 21030  015A84  0E00               	movlw	0
 21031  015A86  5ADD               	subwfb	postdec2,f,c
 21032                           
 21033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 21034                           ;stkvar	_w @ sp[(-18)+14]
 21035  015A88  50E1               	movf	fsr1l,w,c
 21036  015A8A  0FFC               	addlw	-4
 21037  015A8C  6ED9               	movwf	fsr2l,c
 21038  015A8E  50E2               	movf	fsr1h,w,c
 21039  015A90  6EDA               	movwf	fsr2h,c
 21040  015A92  0EFF               	movlw	255
 21041  015A94  22DA               	addwfc	fsr2h,f,c
 21042  015A96  06DE               	decf	postinc2,f,c
 21043  015A98  0E00               	movlw	0
 21044  015A9A  5ADD               	subwfb	postdec2,f,c
 21045                           
 21046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 21047  015A9C  0E0A               	movlw	10
 21048  015A9E  6EE6               	movwf	postinc1,c
 21049  015AA0  0E00               	movlw	0
 21050  015AA2  6EE6               	movwf	postinc1,c
 21051  015AA4  0E00               	movlw	0
 21052  015AA6  6EE6               	movwf	postinc1,c
 21053  015AA8  0E00               	movlw	0
 21054  015AAA  6EE6               	movwf	postinc1,c
 21055  015AAC  0E00               	movlw	0
 21056  015AAE  6EE6               	movwf	postinc1,c
 21057  015AB0  0E00               	movlw	0
 21058  015AB2  6EE6               	movwf	postinc1,c
 21059  015AB4  0E00               	movlw	0
 21060  015AB6  6EE6               	movwf	postinc1,c
 21061  015AB8  0E00               	movlw	0
 21062  015ABA  6EE6               	movwf	postinc1,c
 21063                           
 21064                           ;stkvar	_n @ sp[(-26)+2]
 21065  015ABC  50E1               	movf	fsr1l,w,c
 21066  015ABE  0FE8               	addlw	-24
 21067  015AC0  6ED9               	movwf	fsr2l,c
 21068  015AC2  50E2               	movf	fsr1h,w,c
 21069  015AC4  6EDA               	movwf	fsr2h,c
 21070  015AC6  0EFF               	movlw	255
 21071  015AC8  22DA               	addwfc	fsr2h,f,c
 21072  015ACA  006F FF7B FFE6     	movff	postinc2,postinc1
 21073  015AD0  006F FF7B FFE6     	movff	postinc2,postinc1
 21074  015AD6  006F FF7B FFE6     	movff	postinc2,postinc1
 21075  015ADC  006F FF7B FFE6     	movff	postinc2,postinc1
 21076  015AE2  006F FF7B FFE6     	movff	postinc2,postinc1
 21077  015AE8  006F FF7B FFE6     	movff	postinc2,postinc1
 21078  015AEE  006F FF7B FFE6     	movff	postinc2,postinc1
 21079  015AF4  006F FF7B FFE6     	movff	postinc2,postinc1
 21080  015AFA  EC8F  F0BB         	call	___aodiv	;wreg free
 21081  015AFE  52E5               	movf	postdec1,f,c
 21082  015B00  006F FF9C  F018    	movff	indf1,btemp+23
 21083  015B06  52E5               	movf	postdec1,f,c
 21084  015B08  006F FF9C  F017    	movff	indf1,btemp+22
 21085  015B0E  52E5               	movf	postdec1,f,c
 21086  015B10  006F FF9C  F016    	movff	indf1,btemp+21
 21087  015B16  52E5               	movf	postdec1,f,c
 21088  015B18  006F FF9C  F015    	movff	indf1,btemp+20
 21089  015B1E  52E5               	movf	postdec1,f,c
 21090  015B20  006F FF9C  F014    	movff	indf1,btemp+19
 21091  015B26  52E5               	movf	postdec1,f,c
 21092  015B28  006F FF9C  F013    	movff	indf1,btemp+18
 21093  015B2E  52E5               	movf	postdec1,f,c
 21094  015B30  006F FF9C  F012    	movff	indf1,btemp+17
 21095  015B36  52E5               	movf	postdec1,f,c
 21096  015B38  006F FF9C  F011    	movff	indf1,btemp+16
 21097  015B3E  0EF8               	movlw	248
 21098  015B40  26E1               	addwf	fsr1l,f,c
 21099  015B42  0EFF               	movlw	255
 21100  015B44  22E2               	addwfc	fsr1h,f,c
 21101                           
 21102                           ;stkvar	_n @ sp[(-18)+2]
 21103  015B46  0EF0               	movlw	-16
 21104  015B48  0060  F047  FFE3   	movff	btemp+16,plusw1
 21105  015B4E  0EF1               	movlw	-15
 21106  015B50  0060  F04B  FFE3   	movff	btemp+17,plusw1
 21107  015B56  0EF2               	movlw	-14
 21108  015B58  0060  F04F  FFE3   	movff	btemp+18,plusw1
 21109  015B5E  0EF3               	movlw	-13
 21110  015B60  0060  F053  FFE3   	movff	btemp+19,plusw1
 21111  015B66  0EF4               	movlw	-12
 21112  015B68  0060  F057  FFE3   	movff	btemp+20,plusw1
 21113  015B6E  0EF5               	movlw	-11
 21114  015B70  0060  F05B  FFE3   	movff	btemp+21,plusw1
 21115  015B76  0EF6               	movlw	-10
 21116  015B78  0060  F05F  FFE3   	movff	btemp+22,plusw1
 21117  015B7E  0EF7               	movlw	-9
 21118  015B80  0060  F063  FFE3   	movff	btemp+23,plusw1
 21119  015B86                     l12231:
 21120                           
 21121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21122                           ;stkvar	_i @ sp[(-18)+10]
 21123  015B86  0EF9               	movlw	-7
 21124  015B88  BEE3               	btfsc	plusw1,7,c
 21125  015B8A  D036               	goto	u11230
 21126  015B8C  0EF9               	movlw	-7
 21127  015B8E  50E3               	movf	plusw1,w,c
 21128  015B90  E104               	bnz	u11190
 21129  015B92  0EF8               	movlw	-8
 21130  015B94  04E3               	decf	plusw1,w,c
 21131  015B96  A0D8               	btfss	status,0,c
 21132  015B98  D02F               	goto	u11230
 21133  015B9A                     u11190:
 21134                           
 21135                           ;stkvar	_n @ sp[(-18)+2]
 21136  015B9A  0EF0               	movlw	-16
 21137  015B9C  50E3               	movf	plusw1,w,c
 21138  015B9E  E115               	bnz	u11201
 21139  015BA0  0EF1               	movlw	-15
 21140  015BA2  50E3               	movf	plusw1,w,c
 21141  015BA4  E112               	bnz	u11201
 21142  015BA6  0EF2               	movlw	-14
 21143  015BA8  50E3               	movf	plusw1,w,c
 21144  015BAA  E10F               	bnz	u11201
 21145  015BAC  0EF3               	movlw	-13
 21146  015BAE  50E3               	movf	plusw1,w,c
 21147  015BB0  E10C               	bnz	u11201
 21148  015BB2  0EF4               	movlw	-12
 21149  015BB4  50E3               	movf	plusw1,w,c
 21150  015BB6  E109               	bnz	u11201
 21151  015BB8  0EF5               	movlw	-11
 21152  015BBA  50E3               	movf	plusw1,w,c
 21153  015BBC  E106               	bnz	u11201
 21154  015BBE  0EF6               	movlw	-10
 21155  015BC0  50E3               	movf	plusw1,w,c
 21156  015BC2  E103               	bnz	u11201
 21157  015BC4  0EF7               	movlw	-9
 21158  015BC6  50E3               	movf	plusw1,w,c
 21159  015BC8  A4D8               	btfss	status,2,c
 21160  015BCA                     u11201:
 21161  015BCA  D6D4               	goto	l12221
 21162                           
 21163                           ;stkvar	_p @ sp[(-18)+16]
 21164  015BCC  0EFF               	movlw	-1
 21165  015BCE  BEE3               	btfsc	plusw1,7,c
 21166  015BD0  D007               	goto	u11210
 21167  015BD2  0EFF               	movlw	-1
 21168  015BD4  50E3               	movf	plusw1,w,c
 21169  015BD6  E103               	bnz	u11211
 21170  015BD8  0EFE               	movlw	-2
 21171  015BDA  04E3               	decf	plusw1,w,c
 21172  015BDC  B0D8               	btfsc	status,0,c
 21173  015BDE                     u11211:
 21174  015BDE  D6CA               	goto	l12221
 21175  015BE0                     u11210:
 21176                           
 21177                           ;stkvar	_w @ sp[(-18)+14]
 21178  015BE0  0EFD               	movlw	-3
 21179  015BE2  BEE3               	btfsc	plusw1,7,c
 21180  015BE4  D009               	goto	u11230
 21181  015BE6  0EFD               	movlw	-3
 21182  015BE8  50E3               	movf	plusw1,w,c
 21183  015BEA  E104               	bnz	u11220
 21184  015BEC  0EFC               	movlw	-4
 21185  015BEE  04E3               	decf	plusw1,w,c
 21186  015BF0  A0D8               	btfss	status,0,c
 21187  015BF2  D002               	goto	u11230
 21188  015BF4                     u11220:
 21189  015BF4  B23E               	btfsc	_flags^0,1,c
 21190  015BF6  D6BE               	goto	l12221
 21191  015BF8                     u11230:
 21192                           
 21193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 21194                           ;stkvar	_s @ sp[(-18)+12]
 21195  015BF8  0EFA               	movlw	-6
 21196  015BFA  006F FF8C  F001    	movff	plusw1,btemp
 21197  015C00  0EFB               	movlw	-5
 21198  015C02  50E3               	movf	plusw1,w,c
 21199  015C04  1001               	iorwf	btemp^0,w,c
 21200  015C06  A4D8               	btfss	status,2,c
 21201  015C08  D002               	goto	u11250
 21202  015C0A  A43E               	btfss	_flags^0,2,c
 21203  015C0C  D033               	goto	l12255
 21204  015C0E                     u11250:
 21205                           
 21206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 21207                           ;stkvar	_i @ sp[(-18)+10]
 21208  015C0E  50E1               	movf	fsr1l,w,c
 21209  015C10  0FF8               	addlw	-8
 21210  015C12  6ED9               	movwf	fsr2l,c
 21211  015C14  50E2               	movf	fsr1h,w,c
 21212  015C16  6EDA               	movwf	fsr2h,c
 21213  015C18  0EFF               	movlw	255
 21214  015C1A  22DA               	addwfc	fsr2h,f,c
 21215  015C1C  06DE               	decf	postinc2,f,c
 21216  015C1E  0E00               	movlw	0
 21217  015C20  5ADD               	subwfb	postdec2,f,c
 21218                           
 21219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 21220                           ;stkvar	_s @ sp[(-18)+12]
 21221  015C22  0EFA               	movlw	-6
 21222  015C24  006F FF8C  F001    	movff	plusw1,btemp
 21223  015C2A  0EFB               	movlw	-5
 21224  015C2C  50E3               	movf	plusw1,w,c
 21225  015C2E  1001               	iorwf	btemp^0,w,c
 21226  015C30  A4D8               	btfss	status,2,c
 21227  015C32  D002               	goto	l12251
 21228  015C34  0E2B               	movlw	43
 21229  015C36  D001               	goto	L25
 21230  015C38                     l12251:
 21231  015C38  0E2D               	movlw	45
 21232  015C3A                     L25:
 21233  015C3A  6E0B               	movwf	(btemp+10)^0,c
 21234  015C3C  0E00               	movlw	0
 21235  015C3E  6E0C               	movwf	(btemp+11)^0,c
 21236                           
 21237                           ;stkvar	_dtoa$5683 @ sp[(-18)+0]
 21238  015C40  0EEE               	movlw	-18
 21239  015C42  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21240  015C48  0EEF               	movlw	-17
 21241  015C4A  0060  F033  FFE3   	movff	btemp+11,plusw1
 21242                           
 21243                           ;stkvar	_dtoa$5683 @ sp[(-18)+0]
 21244                           ;stkvar	_i @ sp[(-18)+10]
 21245  015C50  0EF8               	movlw	-8
 21246  015C52  006F FF8C  F00B    	movff	plusw1,btemp+10
 21247  015C58  0EF9               	movlw	-7
 21248  015C5A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21249  015C60  0E97               	movlw	low _dbuf
 21250  015C62  240B               	addwf	(btemp+10)^0,w,c
 21251  015C64  6ED9               	movwf	fsr2l,c
 21252  015C66  0E02               	movlw	high _dbuf
 21253  015C68  200C               	addwfc	(btemp+11)^0,w,c
 21254  015C6A  6EDA               	movwf	fsr2h,c
 21255  015C6C  0EEE               	movlw	-18
 21256  015C6E  006F FF8F FFDF     	movff	plusw1,indf2
 21257  015C74                     l12255:
 21258                           
 21259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 21260                           ;stkvar	_w @ sp[(-18)+14]
 21261  015C74  0EFC               	movlw	-4
 21262  015C76  006F FF8F FFE6     	movff	plusw1,postinc1
 21263  015C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 21264                           
 21265                           ;stkvar	_i @ sp[(-20)+10]
 21266  015C82  0E97               	movlw	low _dbuf
 21267  015C84  6E0B               	movwf	(btemp+10)^0,c
 21268  015C86  0E02               	movlw	high _dbuf
 21269  015C88  6E0C               	movwf	(btemp+11)^0,c
 21270  015C8A  0EF6               	movlw	-10
 21271  015C8C  50E3               	movf	plusw1,w,c
 21272  015C8E  260B               	addwf	(btemp+10)^0,f,c
 21273  015C90  0EF7               	movlw	-9
 21274  015C92  50E3               	movf	plusw1,w,c
 21275  015C94  220C               	addwfc	(btemp+11)^0,f,c
 21276  015C96  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21277  015C9C  0060  F033  FFE6   	movff	btemp+11,postinc1
 21278                           
 21279                           ;stkvar	_fp @ sp[(-22)+-2]
 21280  015CA2  0EE8               	movlw	-24
 21281  015CA4  006F FF8F FFE6     	movff	plusw1,postinc1
 21282  015CAA  006F FF8F FFE6     	movff	plusw1,postinc1
 21283  015CB0  EC90  F0CE         	call	_pad	;wreg free
 21284                           
 21285                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 21286  015CB4  0EE4               	movlw	228
 21287  015CB6  26E1               	addwf	fsr1l,f,c
 21288  015CB8  0EFF               	movlw	255
 21289  015CBA  22E2               	addwfc	fsr1h,f,c
 21290  015CBC  0012               	return		;funcret
 21291  015CBE                     __end_of_dtoa:
 21292                           	opt callstack 0
 21293                           
 21294 ;; *************** function _abs *****************
 21295 ;; Defined at:
 21296 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 21297 ;; Parameters:    Size  Location     Type
 21298 ;;  a               2  [STACK] int 
 21299 ;; Auto vars:     Size  Location     Type
 21300 ;;		None
 21301 ;; Return value:  Size  Location     Type
 21302 ;;                  2  [STACK] int 
 21303 ;; Registers used:
 21304 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 21305 ;; Tracked objects:
 21306 ;;		On entry : 0/2
 21307 ;;		On exit  : 0/0
 21308 ;;		Unchanged: 0/0
 21309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21314 ;;Total ram usage:        0 bytes
 21315 ;; Hardware stack levels used:    1
 21316 ;; Hardware stack levels required when called:   15
 21317 ;; This function calls:
 21318 ;;		Nothing
 21319 ;; This function is called by:
 21320 ;;		_dtoa
 21321 ;; This function uses a reentrant model
 21322 ;;
 21323                           
 21324                           	psect	text74
 21325  01B98A                     __ptext74:
 21326                           	opt callstack 0
 21327  01B98A                     _abs:
 21328                           	opt callstack 0
 21329                           
 21330                           ;stkvar	_a @ sp[(0)+-2]
 21331                           
 21332                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21333                           ;incstack = 0
 21334 ;; hardware stack exceeded
 21335  01B98A  0EFF               	movlw	-1
 21336  01B98C  BEE3               	btfsc	plusw1,7,c
 21337  01B98E  D007               	goto	u6090
 21338  01B990  0EFF               	movlw	-1
 21339  01B992  50E3               	movf	plusw1,w,c
 21340  01B994  E112               	bnz	l8175
 21341  01B996  0EFE               	movlw	-2
 21342  01B998  04E3               	decf	plusw1,w,c
 21343  01B99A  B0D8               	btfsc	status,0,c
 21344  01B99C  D00E               	goto	l8175
 21345  01B99E                     u6090:
 21346                           
 21347                           ;stkvar	_a @ sp[(0)+-2]
 21348  01B99E  0EFE               	movlw	-2
 21349  01B9A0  006F FF8C  F001    	movff	plusw1,btemp
 21350  01B9A6  1E01               	comf	btemp^0,f,c
 21351  01B9A8  0EFF               	movlw	-1
 21352  01B9AA  006F FF8C  F002    	movff	plusw1,btemp+1
 21353  01B9B0  1E02               	comf	(btemp+1)^0,f,c
 21354  01B9B2  2A01               	incf	btemp^0,f,c
 21355  01B9B4  B4D8               	btfsc	status,2,c
 21356  01B9B6  2A02               	incf	(btemp+1)^0,f,c
 21357  01B9B8  D008               	goto	l3165
 21358  01B9BA                     l8175:
 21359                           
 21360                           ;stkvar	_a @ sp[(0)+-2]
 21361  01B9BA  0EFE               	movlw	-2
 21362  01B9BC  006F FF8C  F001    	movff	plusw1,btemp
 21363  01B9C2  0EFF               	movlw	-1
 21364  01B9C4  006F FF8C  F002    	movff	plusw1,btemp+1
 21365  01B9CA                     l3165:
 21366                           
 21367                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 21368  01B9CA  52E5               	movf	postdec1,f,c
 21369  01B9CC  52E5               	movf	postdec1,f,c
 21370  01B9CE  0012               	return		;funcret
 21371  01B9D0                     __end_of_abs:
 21372                           	opt callstack 0
 21373                           
 21374 ;; *************** function ___aomod *****************
 21375 ;; Defined at:
 21376 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 21377 ;; Parameters:    Size  Location     Type
 21378 ;;  dividend        8  [STACK] long long 
 21379 ;;  divisor         8  [STACK] long long 
 21380 ;; Auto vars:     Size  Location     Type
 21381 ;;  sign            1  [STACK] unsigned char 
 21382 ;;  counter         1  [STACK] unsigned char 
 21383 ;; Return value:  Size  Location     Type
 21384 ;;                  8  [STACK] long long 
 21385 ;; Registers used:
 21386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21387 ;; Tracked objects:
 21388 ;;		On entry : 0/2
 21389 ;;		On exit  : 0/0
 21390 ;;		Unchanged: 0/0
 21391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21396 ;;Total ram usage:        0 bytes
 21397 ;; Hardware stack levels used:    1
 21398 ;; Hardware stack levels required when called:   15
 21399 ;; This function calls:
 21400 ;;		Nothing
 21401 ;; This function is called by:
 21402 ;;		_dtoa
 21403 ;; This function uses a reentrant model
 21404 ;;
 21405                           
 21406                           	psect	text75
 21407  017E58                     __ptext75:
 21408                           	opt callstack 0
 21409  017E58                     ___aomod:
 21410                           	opt callstack 0
 21411                           
 21412                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 21413  017E58  52E6               	movf	postinc1,f,c
 21414  017E5A  52E6               	movf	postinc1,f,c
 21415                           
 21416                           ;stkvar	_sign @ sp[(-2)+0]
 21417                           
 21418                           ;incstack = 0
 21419 ;; hardware stack exceeded
 21420  017E5C  0EFE               	movlw	-2
 21421  017E5E  6AE3               	clrf	plusw1,c
 21422                           
 21423                           ;stkvar	_dividend @ sp[(-2)+-8]
 21424  017E60  0EFD               	movlw	-3
 21425  017E62  AEE3               	btfss	plusw1,7,c
 21426  017E64  D028               	goto	l8333
 21427                           
 21428                           ;stkvar	_dividend @ sp[(-2)+-8]
 21429                           ;stkvar	_dividend @ sp[(-2)+-8]
 21430  017E66  0EF6               	movlw	-10
 21431  017E68  6CE3               	negf	plusw1,c
 21432  017E6A  0EF7               	movlw	-9
 21433  017E6C  1EE3               	comf	plusw1,f,c
 21434  017E6E  0EF8               	movlw	-8
 21435  017E70  1EE3               	comf	plusw1,f,c
 21436  017E72  0EF9               	movlw	-7
 21437  017E74  1EE3               	comf	plusw1,f,c
 21438  017E76  0EFA               	movlw	-6
 21439  017E78  1EE3               	comf	plusw1,f,c
 21440  017E7A  0EFB               	movlw	-5
 21441  017E7C  1EE3               	comf	plusw1,f,c
 21442  017E7E  0EFC               	movlw	-4
 21443  017E80  1EE3               	comf	plusw1,f,c
 21444  017E82  0EFD               	movlw	-3
 21445  017E84  1EE3               	comf	plusw1,f,c
 21446  017E86  E314               	bnc	u6520
 21447  017E88  0EF7               	movlw	-9
 21448  017E8A  2AE3               	incf	plusw1,f,c
 21449  017E8C  E311               	bnc	u6520
 21450  017E8E  0EF8               	movlw	-8
 21451  017E90  2AE3               	incf	plusw1,f,c
 21452  017E92  E30E               	bnc	u6520
 21453  017E94  0EF9               	movlw	-7
 21454  017E96  2AE3               	incf	plusw1,f,c
 21455  017E98  E30B               	bnc	u6520
 21456  017E9A  0EFA               	movlw	-6
 21457  017E9C  2AE3               	incf	plusw1,f,c
 21458  017E9E  E308               	bnc	u6520
 21459  017EA0  0EFB               	movlw	-5
 21460  017EA2  2AE3               	incf	plusw1,f,c
 21461  017EA4  E305               	bnc	u6520
 21462  017EA6  0EFC               	movlw	-4
 21463  017EA8  2AE3               	incf	plusw1,f,c
 21464  017EAA  E302               	bnc	u6520
 21465  017EAC  0EFD               	movlw	-3
 21466  017EAE  2AE3               	incf	plusw1,f,c
 21467  017EB0                     u6520:
 21468                           
 21469                           ;stkvar	_sign @ sp[(-2)+0]
 21470  017EB0  0EFE               	movlw	-2
 21471  017EB2  6AE3               	clrf	plusw1,c
 21472  017EB4  2AE3               	incf	plusw1,f,c
 21473  017EB6                     l8333:
 21474                           
 21475                           ;stkvar	_divisor @ sp[(-2)+-16]
 21476  017EB6  0EF5               	movlw	-11
 21477  017EB8  AEE3               	btfss	plusw1,7,c
 21478  017EBA  D025               	goto	u6540
 21479                           
 21480                           ;stkvar	_divisor @ sp[(-2)+-16]
 21481                           ;stkvar	_divisor @ sp[(-2)+-16]
 21482  017EBC  0EEE               	movlw	-18
 21483  017EBE  6CE3               	negf	plusw1,c
 21484  017EC0  0EEF               	movlw	-17
 21485  017EC2  1EE3               	comf	plusw1,f,c
 21486  017EC4  0EF0               	movlw	-16
 21487  017EC6  1EE3               	comf	plusw1,f,c
 21488  017EC8  0EF1               	movlw	-15
 21489  017ECA  1EE3               	comf	plusw1,f,c
 21490  017ECC  0EF2               	movlw	-14
 21491  017ECE  1EE3               	comf	plusw1,f,c
 21492  017ED0  0EF3               	movlw	-13
 21493  017ED2  1EE3               	comf	plusw1,f,c
 21494  017ED4  0EF4               	movlw	-12
 21495  017ED6  1EE3               	comf	plusw1,f,c
 21496  017ED8  0EF5               	movlw	-11
 21497  017EDA  1EE3               	comf	plusw1,f,c
 21498  017EDC  E314               	bnc	u6540
 21499  017EDE  0EEF               	movlw	-17
 21500  017EE0  2AE3               	incf	plusw1,f,c
 21501  017EE2  E311               	bnc	u6540
 21502  017EE4  0EF0               	movlw	-16
 21503  017EE6  2AE3               	incf	plusw1,f,c
 21504  017EE8  E30E               	bnc	u6540
 21505  017EEA  0EF1               	movlw	-15
 21506  017EEC  2AE3               	incf	plusw1,f,c
 21507  017EEE  E30B               	bnc	u6540
 21508  017EF0  0EF2               	movlw	-14
 21509  017EF2  2AE3               	incf	plusw1,f,c
 21510  017EF4  E308               	bnc	u6540
 21511  017EF6  0EF3               	movlw	-13
 21512  017EF8  2AE3               	incf	plusw1,f,c
 21513  017EFA  E305               	bnc	u6540
 21514  017EFC  0EF4               	movlw	-12
 21515  017EFE  2AE3               	incf	plusw1,f,c
 21516  017F00  E302               	bnc	u6540
 21517  017F02  0EF5               	movlw	-11
 21518  017F04  2AE3               	incf	plusw1,f,c
 21519  017F06                     u6540:
 21520                           
 21521                           ;stkvar	_divisor @ sp[(-2)+-16]
 21522  017F06  0EEE               	movlw	-18
 21523  017F08  50E3               	movf	plusw1,w,c
 21524  017F0A  E116               	bnz	u6550
 21525  017F0C  0EEF               	movlw	-17
 21526  017F0E  50E3               	movf	plusw1,w,c
 21527  017F10  E113               	bnz	u6550
 21528  017F12  0EF0               	movlw	-16
 21529  017F14  50E3               	movf	plusw1,w,c
 21530  017F16  E110               	bnz	u6550
 21531  017F18  0EF1               	movlw	-15
 21532  017F1A  50E3               	movf	plusw1,w,c
 21533  017F1C  E10D               	bnz	u6550
 21534  017F1E  0EF2               	movlw	-14
 21535  017F20  50E3               	movf	plusw1,w,c
 21536  017F22  E10A               	bnz	u6550
 21537  017F24  0EF3               	movlw	-13
 21538  017F26  50E3               	movf	plusw1,w,c
 21539  017F28  E107               	bnz	u6550
 21540  017F2A  0EF4               	movlw	-12
 21541  017F2C  50E3               	movf	plusw1,w,c
 21542  017F2E  E104               	bnz	u6550
 21543  017F30  0EF5               	movlw	-11
 21544  017F32  50E3               	movf	plusw1,w,c
 21545  017F34  B4D8               	btfsc	status,2,c
 21546  017F36  D075               	goto	u6580
 21547  017F38                     u6550:
 21548                           
 21549                           ;stkvar	_counter @ sp[(-2)+1]
 21550  017F38  0EFF               	movlw	-1
 21551  017F3A  6AE3               	clrf	plusw1,c
 21552  017F3C  D012               	goto	L26
 21553  017F3E                     l8341:
 21554                           
 21555                           ;stkvar	_divisor @ sp[(-2)+-16]
 21556  017F3E  90D8               	bcf	status,0,c
 21557  017F40  0EEE               	movlw	-18
 21558  017F42  36E3               	rlcf	plusw1,f,c
 21559  017F44  0EEF               	movlw	-17
 21560  017F46  36E3               	rlcf	plusw1,f,c
 21561  017F48  0EF0               	movlw	-16
 21562  017F4A  36E3               	rlcf	plusw1,f,c
 21563  017F4C  0EF1               	movlw	-15
 21564  017F4E  36E3               	rlcf	plusw1,f,c
 21565  017F50  0EF2               	movlw	-14
 21566  017F52  36E3               	rlcf	plusw1,f,c
 21567  017F54  0EF3               	movlw	-13
 21568  017F56  36E3               	rlcf	plusw1,f,c
 21569  017F58  0EF4               	movlw	-12
 21570  017F5A  36E3               	rlcf	plusw1,f,c
 21571  017F5C  0EF5               	movlw	-11
 21572  017F5E  36E3               	rlcf	plusw1,f,c
 21573                           
 21574                           ;stkvar	_counter @ sp[(-2)+1]
 21575  017F60  0EFF               	movlw	-1
 21576  017F62                     L26:
 21577  017F62  2AE3               	incf	plusw1,f,c
 21578                           
 21579                           ;stkvar	_divisor @ sp[(-2)+-16]
 21580  017F64  0EF5               	movlw	-11
 21581  017F66  AEE3               	btfss	plusw1,7,c
 21582  017F68  D7EA               	goto	l8341
 21583  017F6A                     u6560:
 21584                           
 21585                           ;stkvar	_divisor @ sp[(-2)+-16]
 21586                           ;stkvar	_dividend @ sp[(-2)+-8]
 21587  017F6A  50E1               	movf	fsr1l,w,c
 21588  017F6C  0FF6               	addlw	-10
 21589  017F6E  6ED9               	movwf	fsr2l,c
 21590  017F70  50E2               	movf	fsr1h,w,c
 21591  017F72  6EDA               	movwf	fsr2h,c
 21592  017F74  0EFF               	movlw	255
 21593  017F76  22DA               	addwfc	fsr2h,f,c
 21594  017F78  0EEE               	movlw	-18
 21595  017F7A  50E3               	movf	plusw1,w,c
 21596  017F7C  5CDE               	subwf	postinc2,w,c
 21597  017F7E  0EEF               	movlw	-17
 21598  017F80  50E3               	movf	plusw1,w,c
 21599  017F82  58DE               	subwfb	postinc2,w,c
 21600  017F84  0EF0               	movlw	-16
 21601  017F86  50E3               	movf	plusw1,w,c
 21602  017F88  58DE               	subwfb	postinc2,w,c
 21603  017F8A  0EF1               	movlw	-15
 21604  017F8C  50E3               	movf	plusw1,w,c
 21605  017F8E  58DE               	subwfb	postinc2,w,c
 21606  017F90  0EF2               	movlw	-14
 21607  017F92  50E3               	movf	plusw1,w,c
 21608  017F94  58DE               	subwfb	postinc2,w,c
 21609  017F96  0EF3               	movlw	-13
 21610  017F98  50E3               	movf	plusw1,w,c
 21611  017F9A  58DE               	subwfb	postinc2,w,c
 21612  017F9C  0EF4               	movlw	-12
 21613  017F9E  50E3               	movf	plusw1,w,c
 21614  017FA0  58DE               	subwfb	postinc2,w,c
 21615  017FA2  0EF5               	movlw	-11
 21616  017FA4  50E3               	movf	plusw1,w,c
 21617  017FA6  58DE               	subwfb	postinc2,w,c
 21618  017FA8  A0D8               	btfss	status,0,c
 21619  017FAA  D01F               	goto	l8349
 21620                           
 21621                           ;stkvar	_divisor @ sp[(-2)+-16]
 21622                           ;stkvar	_dividend @ sp[(-2)+-8]
 21623  017FAC  50E1               	movf	fsr1l,w,c
 21624  017FAE  0FF6               	addlw	-10
 21625  017FB0  6ED9               	movwf	fsr2l,c
 21626  017FB2  50E2               	movf	fsr1h,w,c
 21627  017FB4  6EDA               	movwf	fsr2h,c
 21628  017FB6  0EFF               	movlw	255
 21629  017FB8  22DA               	addwfc	fsr2h,f,c
 21630  017FBA  0EEE               	movlw	-18
 21631  017FBC  50E3               	movf	plusw1,w,c
 21632  017FBE  5EDE               	subwf	postinc2,f,c
 21633  017FC0  0EEF               	movlw	-17
 21634  017FC2  50E3               	movf	plusw1,w,c
 21635  017FC4  5ADE               	subwfb	postinc2,f,c
 21636  017FC6  0EF0               	movlw	-16
 21637  017FC8  50E3               	movf	plusw1,w,c
 21638  017FCA  5ADE               	subwfb	postinc2,f,c
 21639  017FCC  0EF1               	movlw	-15
 21640  017FCE  50E3               	movf	plusw1,w,c
 21641  017FD0  5ADE               	subwfb	postinc2,f,c
 21642  017FD2  0EF2               	movlw	-14
 21643  017FD4  50E3               	movf	plusw1,w,c
 21644  017FD6  5ADE               	subwfb	postinc2,f,c
 21645  017FD8  0EF3               	movlw	-13
 21646  017FDA  50E3               	movf	plusw1,w,c
 21647  017FDC  5ADE               	subwfb	postinc2,f,c
 21648  017FDE  0EF4               	movlw	-12
 21649  017FE0  50E3               	movf	plusw1,w,c
 21650  017FE2  5ADE               	subwfb	postinc2,f,c
 21651  017FE4  0EF5               	movlw	-11
 21652  017FE6  50E3               	movf	plusw1,w,c
 21653  017FE8  5ADE               	subwfb	postinc2,f,c
 21654  017FEA                     l8349:
 21655                           
 21656                           ;stkvar	_divisor @ sp[(-2)+-16]
 21657  017FEA  90D8               	bcf	status,0,c
 21658  017FEC  0EF5               	movlw	-11
 21659  017FEE  32E3               	rrcf	plusw1,f,c
 21660  017FF0  0EF4               	movlw	-12
 21661  017FF2  32E3               	rrcf	plusw1,f,c
 21662  017FF4  0EF3               	movlw	-13
 21663  017FF6  32E3               	rrcf	plusw1,f,c
 21664  017FF8  0EF2               	movlw	-14
 21665  017FFA  32E3               	rrcf	plusw1,f,c
 21666  017FFC  0EF1               	movlw	-15
 21667  017FFE  32E3               	rrcf	plusw1,f,c
 21668  018000  0EF0               	movlw	-16
 21669  018002  32E3               	rrcf	plusw1,f,c
 21670  018004  0EEF               	movlw	-17
 21671  018006  32E3               	rrcf	plusw1,f,c
 21672  018008  0EEE               	movlw	-18
 21673  01800A  32E3               	rrcf	plusw1,f,c
 21674                           
 21675                           ;stkvar	_counter @ sp[(-2)+1]
 21676  01800C  0EFF               	movlw	-1
 21677  01800E  50E3               	movf	plusw1,w,c
 21678  018010  6E01               	movwf	btemp^0,c
 21679  018012  0E01               	movlw	1
 21680  018014  5E01               	subwf	btemp^0,f,c
 21681  018016  0EFF               	movlw	-1
 21682  018018  0060  F007  FFE3   	movff	btemp,plusw1
 21683  01801E  A4D8               	btfss	status,2,c
 21684  018020  D7A4               	goto	u6560
 21685  018022                     u6580:
 21686                           
 21687                           ;stkvar	_sign @ sp[(-2)+0]
 21688  018022  0EFE               	movlw	-2
 21689  018024  50E3               	movf	plusw1,w,c
 21690  018026  B4D8               	btfsc	status,2,c
 21691  018028  D025               	goto	u6600
 21692                           
 21693                           ;stkvar	_dividend @ sp[(-2)+-8]
 21694                           ;stkvar	_dividend @ sp[(-2)+-8]
 21695  01802A  0EF6               	movlw	-10
 21696  01802C  6CE3               	negf	plusw1,c
 21697  01802E  0EF7               	movlw	-9
 21698  018030  1EE3               	comf	plusw1,f,c
 21699  018032  0EF8               	movlw	-8
 21700  018034  1EE3               	comf	plusw1,f,c
 21701  018036  0EF9               	movlw	-7
 21702  018038  1EE3               	comf	plusw1,f,c
 21703  01803A  0EFA               	movlw	-6
 21704  01803C  1EE3               	comf	plusw1,f,c
 21705  01803E  0EFB               	movlw	-5
 21706  018040  1EE3               	comf	plusw1,f,c
 21707  018042  0EFC               	movlw	-4
 21708  018044  1EE3               	comf	plusw1,f,c
 21709  018046  0EFD               	movlw	-3
 21710  018048  1EE3               	comf	plusw1,f,c
 21711  01804A  E314               	bnc	u6600
 21712  01804C  0EF7               	movlw	-9
 21713  01804E  2AE3               	incf	plusw1,f,c
 21714  018050  E311               	bnc	u6600
 21715  018052  0EF8               	movlw	-8
 21716  018054  2AE3               	incf	plusw1,f,c
 21717  018056  E30E               	bnc	u6600
 21718  018058  0EF9               	movlw	-7
 21719  01805A  2AE3               	incf	plusw1,f,c
 21720  01805C  E30B               	bnc	u6600
 21721  01805E  0EFA               	movlw	-6
 21722  018060  2AE3               	incf	plusw1,f,c
 21723  018062  E308               	bnc	u6600
 21724  018064  0EFB               	movlw	-5
 21725  018066  2AE3               	incf	plusw1,f,c
 21726  018068  E305               	bnc	u6600
 21727  01806A  0EFC               	movlw	-4
 21728  01806C  2AE3               	incf	plusw1,f,c
 21729  01806E  E302               	bnc	u6600
 21730  018070  0EFD               	movlw	-3
 21731  018072  2AE3               	incf	plusw1,f,c
 21732  018074                     u6600:
 21733                           
 21734                           ;stkvar	_dividend @ sp[(-2)+-8]
 21735  018074  0EF6               	movlw	246
 21736  018076  24E1               	addwf	fsr1l,w,c
 21737  018078  6ED9               	movwf	fsr2l,c
 21738  01807A  0EFF               	movlw	255
 21739  01807C  20E2               	addwfc	fsr1h,w,c
 21740  01807E  6EDA               	movwf	fsr2h,c
 21741                           
 21742                           ;stkvar	?___aomod @ sp[(-2)+-8]
 21743  018080  0E08               	movlw	8
 21744  018082  6E01               	movwf	btemp^0,c
 21745  018084  0EF6               	movlw	-10
 21746  018086                     us661999:
 21747  018086  006F FF7B FFE3     	movff	postinc2,plusw1
 21748  01808C  28E8               	incf	wreg,w,c
 21749  01808E  2E01               	decfsz	btemp^0,f,c
 21750  018090  D7FA               	bra	us661999
 21751                           
 21752                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 21753  018092  52E5               	movf	postdec1,f,c
 21754  018094  52E5               	movf	postdec1,f,c
 21755  018096  0012               	return		;funcret
 21756  018098                     __end_of___aomod:
 21757                           	opt callstack 0
 21758                           
 21759 ;; *************** function ___aodiv *****************
 21760 ;; Defined at:
 21761 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 21762 ;; Parameters:    Size  Location     Type
 21763 ;;  dividend        8  [STACK] long long 
 21764 ;;  divisor         8  [STACK] long long 
 21765 ;; Auto vars:     Size  Location     Type
 21766 ;;  quotient        8  [STACK] long long 
 21767 ;;  sign            1  [STACK] unsigned char 
 21768 ;;  counter         1  [STACK] unsigned char 
 21769 ;; Return value:  Size  Location     Type
 21770 ;;                  8  [STACK] long long 
 21771 ;; Registers used:
 21772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21773 ;; Tracked objects:
 21774 ;;		On entry : 0/2
 21775 ;;		On exit  : 0/0
 21776 ;;		Unchanged: 0/0
 21777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21782 ;;Total ram usage:        0 bytes
 21783 ;; Hardware stack levels used:    1
 21784 ;; Hardware stack levels required when called:   15
 21785 ;; This function calls:
 21786 ;;		Nothing
 21787 ;; This function is called by:
 21788 ;;		_dtoa
 21789 ;; This function uses a reentrant model
 21790 ;;
 21791                           
 21792                           	psect	text76
 21793  01771E                     __ptext76:
 21794                           	opt callstack 0
 21795  01771E                     ___aodiv:
 21796                           	opt callstack 0
 21797                           
 21798                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 21799  01771E  0E0A               	movlw	10
 21800  017720  26E1               	addwf	fsr1l,f,c
 21801  017722  0E00               	movlw	0
 21802  017724  22E2               	addwfc	fsr1h,f,c
 21803                           
 21804                           ;stkvar	_sign @ sp[(-10)+8]
 21805                           
 21806                           ;incstack = 0
 21807 ;; hardware stack exceeded
 21808  017726  0EFE               	movlw	-2
 21809  017728  6AE3               	clrf	plusw1,c
 21810                           
 21811                           ;stkvar	_divisor @ sp[(-10)+-16]
 21812  01772A  0EED               	movlw	-19
 21813  01772C  AEE3               	btfss	plusw1,7,c
 21814  01772E  D028               	goto	l8289
 21815                           
 21816                           ;stkvar	_divisor @ sp[(-10)+-16]
 21817                           ;stkvar	_divisor @ sp[(-10)+-16]
 21818  017730  0EE6               	movlw	-26
 21819  017732  6CE3               	negf	plusw1,c
 21820  017734  0EE7               	movlw	-25
 21821  017736  1EE3               	comf	plusw1,f,c
 21822  017738  0EE8               	movlw	-24
 21823  01773A  1EE3               	comf	plusw1,f,c
 21824  01773C  0EE9               	movlw	-23
 21825  01773E  1EE3               	comf	plusw1,f,c
 21826  017740  0EEA               	movlw	-22
 21827  017742  1EE3               	comf	plusw1,f,c
 21828  017744  0EEB               	movlw	-21
 21829  017746  1EE3               	comf	plusw1,f,c
 21830  017748  0EEC               	movlw	-20
 21831  01774A  1EE3               	comf	plusw1,f,c
 21832  01774C  0EED               	movlw	-19
 21833  01774E  1EE3               	comf	plusw1,f,c
 21834  017750  E314               	bnc	u6400
 21835  017752  0EE7               	movlw	-25
 21836  017754  2AE3               	incf	plusw1,f,c
 21837  017756  E311               	bnc	u6400
 21838  017758  0EE8               	movlw	-24
 21839  01775A  2AE3               	incf	plusw1,f,c
 21840  01775C  E30E               	bnc	u6400
 21841  01775E  0EE9               	movlw	-23
 21842  017760  2AE3               	incf	plusw1,f,c
 21843  017762  E30B               	bnc	u6400
 21844  017764  0EEA               	movlw	-22
 21845  017766  2AE3               	incf	plusw1,f,c
 21846  017768  E308               	bnc	u6400
 21847  01776A  0EEB               	movlw	-21
 21848  01776C  2AE3               	incf	plusw1,f,c
 21849  01776E  E305               	bnc	u6400
 21850  017770  0EEC               	movlw	-20
 21851  017772  2AE3               	incf	plusw1,f,c
 21852  017774  E302               	bnc	u6400
 21853  017776  0EED               	movlw	-19
 21854  017778  2AE3               	incf	plusw1,f,c
 21855  01777A                     u6400:
 21856                           
 21857                           ;stkvar	_sign @ sp[(-10)+8]
 21858  01777A  0EFE               	movlw	-2
 21859  01777C  6AE3               	clrf	plusw1,c
 21860  01777E  2AE3               	incf	plusw1,f,c
 21861  017780                     l8289:
 21862                           
 21863                           ;stkvar	_dividend @ sp[(-10)+-8]
 21864  017780  0EF5               	movlw	-11
 21865  017782  AEE3               	btfss	plusw1,7,c
 21866  017784  D027               	goto	l8295
 21867                           
 21868                           ;stkvar	_dividend @ sp[(-10)+-8]
 21869                           ;stkvar	_dividend @ sp[(-10)+-8]
 21870  017786  0EEE               	movlw	-18
 21871  017788  6CE3               	negf	plusw1,c
 21872  01778A  0EEF               	movlw	-17
 21873  01778C  1EE3               	comf	plusw1,f,c
 21874  01778E  0EF0               	movlw	-16
 21875  017790  1EE3               	comf	plusw1,f,c
 21876  017792  0EF1               	movlw	-15
 21877  017794  1EE3               	comf	plusw1,f,c
 21878  017796  0EF2               	movlw	-14
 21879  017798  1EE3               	comf	plusw1,f,c
 21880  01779A  0EF3               	movlw	-13
 21881  01779C  1EE3               	comf	plusw1,f,c
 21882  01779E  0EF4               	movlw	-12
 21883  0177A0  1EE3               	comf	plusw1,f,c
 21884  0177A2  0EF5               	movlw	-11
 21885  0177A4  1EE3               	comf	plusw1,f,c
 21886  0177A6  E314               	bnc	u6420
 21887  0177A8  0EEF               	movlw	-17
 21888  0177AA  2AE3               	incf	plusw1,f,c
 21889  0177AC  E311               	bnc	u6420
 21890  0177AE  0EF0               	movlw	-16
 21891  0177B0  2AE3               	incf	plusw1,f,c
 21892  0177B2  E30E               	bnc	u6420
 21893  0177B4  0EF1               	movlw	-15
 21894  0177B6  2AE3               	incf	plusw1,f,c
 21895  0177B8  E30B               	bnc	u6420
 21896  0177BA  0EF2               	movlw	-14
 21897  0177BC  2AE3               	incf	plusw1,f,c
 21898  0177BE  E308               	bnc	u6420
 21899  0177C0  0EF3               	movlw	-13
 21900  0177C2  2AE3               	incf	plusw1,f,c
 21901  0177C4  E305               	bnc	u6420
 21902  0177C6  0EF4               	movlw	-12
 21903  0177C8  2AE3               	incf	plusw1,f,c
 21904  0177CA  E302               	bnc	u6420
 21905  0177CC  0EF5               	movlw	-11
 21906  0177CE  2AE3               	incf	plusw1,f,c
 21907  0177D0                     u6420:
 21908                           
 21909                           ;stkvar	_sign @ sp[(-10)+8]
 21910  0177D0  0EFE               	movlw	-2
 21911  0177D2  70E3               	btg	plusw1,0,c
 21912  0177D4                     l8295:
 21913                           
 21914                           ;stkvar	_quotient @ sp[(-10)+0]
 21915  0177D4  0E07               	movlw	7
 21916  0177D6  6E01               	movwf	btemp^0,c
 21917  0177D8  0EF6               	movlw	-10
 21918  0177DA                     u6431:
 21919  0177DA  6AE3               	clrf	plusw1,c
 21920  0177DC  2AE8               	incf	wreg,f,c
 21921  0177DE  0601               	decf	btemp^0,f,c
 21922  0177E0  E2FC               	bc	u6431
 21923                           
 21924                           ;stkvar	_divisor @ sp[(-10)+-16]
 21925  0177E2  0EE6               	movlw	-26
 21926  0177E4  50E3               	movf	plusw1,w,c
 21927  0177E6  E116               	bnz	u6440
 21928  0177E8  0EE7               	movlw	-25
 21929  0177EA  50E3               	movf	plusw1,w,c
 21930  0177EC  E113               	bnz	u6440
 21931  0177EE  0EE8               	movlw	-24
 21932  0177F0  50E3               	movf	plusw1,w,c
 21933  0177F2  E110               	bnz	u6440
 21934  0177F4  0EE9               	movlw	-23
 21935  0177F6  50E3               	movf	plusw1,w,c
 21936  0177F8  E10D               	bnz	u6440
 21937  0177FA  0EEA               	movlw	-22
 21938  0177FC  50E3               	movf	plusw1,w,c
 21939  0177FE  E10A               	bnz	u6440
 21940  017800  0EEB               	movlw	-21
 21941  017802  50E3               	movf	plusw1,w,c
 21942  017804  E107               	bnz	u6440
 21943  017806  0EEC               	movlw	-20
 21944  017808  50E3               	movf	plusw1,w,c
 21945  01780A  E104               	bnz	u6440
 21946  01780C  0EED               	movlw	-19
 21947  01780E  50E3               	movf	plusw1,w,c
 21948  017810  B4D8               	btfsc	status,2,c
 21949  017812  D088               	goto	u6470
 21950  017814                     u6440:
 21951                           
 21952                           ;stkvar	_counter @ sp[(-10)+9]
 21953  017814  0EFF               	movlw	-1
 21954  017816  6AE3               	clrf	plusw1,c
 21955  017818  D012               	goto	L27
 21956  01781A                     l8301:
 21957                           
 21958                           ;stkvar	_divisor @ sp[(-10)+-16]
 21959  01781A  90D8               	bcf	status,0,c
 21960  01781C  0EE6               	movlw	-26
 21961  01781E  36E3               	rlcf	plusw1,f,c
 21962  017820  0EE7               	movlw	-25
 21963  017822  36E3               	rlcf	plusw1,f,c
 21964  017824  0EE8               	movlw	-24
 21965  017826  36E3               	rlcf	plusw1,f,c
 21966  017828  0EE9               	movlw	-23
 21967  01782A  36E3               	rlcf	plusw1,f,c
 21968  01782C  0EEA               	movlw	-22
 21969  01782E  36E3               	rlcf	plusw1,f,c
 21970  017830  0EEB               	movlw	-21
 21971  017832  36E3               	rlcf	plusw1,f,c
 21972  017834  0EEC               	movlw	-20
 21973  017836  36E3               	rlcf	plusw1,f,c
 21974  017838  0EED               	movlw	-19
 21975  01783A  36E3               	rlcf	plusw1,f,c
 21976                           
 21977                           ;stkvar	_counter @ sp[(-10)+9]
 21978  01783C  0EFF               	movlw	-1
 21979  01783E                     L27:
 21980  01783E  2AE3               	incf	plusw1,f,c
 21981                           
 21982                           ;stkvar	_divisor @ sp[(-10)+-16]
 21983  017840  0EED               	movlw	-19
 21984  017842  AEE3               	btfss	plusw1,7,c
 21985  017844  D7EA               	goto	l8301
 21986  017846                     u6450:
 21987                           
 21988                           ;stkvar	_quotient @ sp[(-10)+0]
 21989  017846  90D8               	bcf	status,0,c
 21990  017848  0EF6               	movlw	-10
 21991  01784A  36E3               	rlcf	plusw1,f,c
 21992  01784C  0EF7               	movlw	-9
 21993  01784E  36E3               	rlcf	plusw1,f,c
 21994  017850  0EF8               	movlw	-8
 21995  017852  36E3               	rlcf	plusw1,f,c
 21996  017854  0EF9               	movlw	-7
 21997  017856  36E3               	rlcf	plusw1,f,c
 21998  017858  0EFA               	movlw	-6
 21999  01785A  36E3               	rlcf	plusw1,f,c
 22000  01785C  0EFB               	movlw	-5
 22001  01785E  36E3               	rlcf	plusw1,f,c
 22002  017860  0EFC               	movlw	-4
 22003  017862  36E3               	rlcf	plusw1,f,c
 22004  017864  0EFD               	movlw	-3
 22005  017866  36E3               	rlcf	plusw1,f,c
 22006                           
 22007                           ;stkvar	_divisor @ sp[(-10)+-16]
 22008                           ;stkvar	_dividend @ sp[(-10)+-8]
 22009  017868  50E1               	movf	fsr1l,w,c
 22010  01786A  0FEE               	addlw	-18
 22011  01786C  6ED9               	movwf	fsr2l,c
 22012  01786E  50E2               	movf	fsr1h,w,c
 22013  017870  6EDA               	movwf	fsr2h,c
 22014  017872  0EFF               	movlw	255
 22015  017874  22DA               	addwfc	fsr2h,f,c
 22016  017876  0EE6               	movlw	-26
 22017  017878  50E3               	movf	plusw1,w,c
 22018  01787A  5CDE               	subwf	postinc2,w,c
 22019  01787C  0EE7               	movlw	-25
 22020  01787E  50E3               	movf	plusw1,w,c
 22021  017880  58DE               	subwfb	postinc2,w,c
 22022  017882  0EE8               	movlw	-24
 22023  017884  50E3               	movf	plusw1,w,c
 22024  017886  58DE               	subwfb	postinc2,w,c
 22025  017888  0EE9               	movlw	-23
 22026  01788A  50E3               	movf	plusw1,w,c
 22027  01788C  58DE               	subwfb	postinc2,w,c
 22028  01788E  0EEA               	movlw	-22
 22029  017890  50E3               	movf	plusw1,w,c
 22030  017892  58DE               	subwfb	postinc2,w,c
 22031  017894  0EEB               	movlw	-21
 22032  017896  50E3               	movf	plusw1,w,c
 22033  017898  58DE               	subwfb	postinc2,w,c
 22034  01789A  0EEC               	movlw	-20
 22035  01789C  50E3               	movf	plusw1,w,c
 22036  01789E  58DE               	subwfb	postinc2,w,c
 22037  0178A0  0EED               	movlw	-19
 22038  0178A2  50E3               	movf	plusw1,w,c
 22039  0178A4  58DE               	subwfb	postinc2,w,c
 22040  0178A6  A0D8               	btfss	status,0,c
 22041  0178A8  D021               	goto	l8313
 22042                           
 22043                           ;stkvar	_divisor @ sp[(-10)+-16]
 22044                           ;stkvar	_dividend @ sp[(-10)+-8]
 22045  0178AA  50E1               	movf	fsr1l,w,c
 22046  0178AC  0FEE               	addlw	-18
 22047  0178AE  6ED9               	movwf	fsr2l,c
 22048  0178B0  50E2               	movf	fsr1h,w,c
 22049  0178B2  6EDA               	movwf	fsr2h,c
 22050  0178B4  0EFF               	movlw	255
 22051  0178B6  22DA               	addwfc	fsr2h,f,c
 22052  0178B8  0EE6               	movlw	-26
 22053  0178BA  50E3               	movf	plusw1,w,c
 22054  0178BC  5EDE               	subwf	postinc2,f,c
 22055  0178BE  0EE7               	movlw	-25
 22056  0178C0  50E3               	movf	plusw1,w,c
 22057  0178C2  5ADE               	subwfb	postinc2,f,c
 22058  0178C4  0EE8               	movlw	-24
 22059  0178C6  50E3               	movf	plusw1,w,c
 22060  0178C8  5ADE               	subwfb	postinc2,f,c
 22061  0178CA  0EE9               	movlw	-23
 22062  0178CC  50E3               	movf	plusw1,w,c
 22063  0178CE  5ADE               	subwfb	postinc2,f,c
 22064  0178D0  0EEA               	movlw	-22
 22065  0178D2  50E3               	movf	plusw1,w,c
 22066  0178D4  5ADE               	subwfb	postinc2,f,c
 22067  0178D6  0EEB               	movlw	-21
 22068  0178D8  50E3               	movf	plusw1,w,c
 22069  0178DA  5ADE               	subwfb	postinc2,f,c
 22070  0178DC  0EEC               	movlw	-20
 22071  0178DE  50E3               	movf	plusw1,w,c
 22072  0178E0  5ADE               	subwfb	postinc2,f,c
 22073  0178E2  0EED               	movlw	-19
 22074  0178E4  50E3               	movf	plusw1,w,c
 22075  0178E6  5ADE               	subwfb	postinc2,f,c
 22076                           
 22077                           ;stkvar	_quotient @ sp[(-10)+0]
 22078  0178E8  0EF6               	movlw	-10
 22079  0178EA  80E3               	bsf	plusw1,0,c
 22080  0178EC                     l8313:
 22081                           
 22082                           ;stkvar	_divisor @ sp[(-10)+-16]
 22083  0178EC  90D8               	bcf	status,0,c
 22084  0178EE  0EED               	movlw	-19
 22085  0178F0  32E3               	rrcf	plusw1,f,c
 22086  0178F2  0EEC               	movlw	-20
 22087  0178F4  32E3               	rrcf	plusw1,f,c
 22088  0178F6  0EEB               	movlw	-21
 22089  0178F8  32E3               	rrcf	plusw1,f,c
 22090  0178FA  0EEA               	movlw	-22
 22091  0178FC  32E3               	rrcf	plusw1,f,c
 22092  0178FE  0EE9               	movlw	-23
 22093  017900  32E3               	rrcf	plusw1,f,c
 22094  017902  0EE8               	movlw	-24
 22095  017904  32E3               	rrcf	plusw1,f,c
 22096  017906  0EE7               	movlw	-25
 22097  017908  32E3               	rrcf	plusw1,f,c
 22098  01790A  0EE6               	movlw	-26
 22099  01790C  32E3               	rrcf	plusw1,f,c
 22100                           
 22101                           ;stkvar	_counter @ sp[(-10)+9]
 22102  01790E  0EFF               	movlw	-1
 22103  017910  50E3               	movf	plusw1,w,c
 22104  017912  6E01               	movwf	btemp^0,c
 22105  017914  0E01               	movlw	1
 22106  017916  5E01               	subwf	btemp^0,f,c
 22107  017918  0EFF               	movlw	-1
 22108  01791A  0060  F007  FFE3   	movff	btemp,plusw1
 22109  017920  A4D8               	btfss	status,2,c
 22110  017922  D791               	goto	u6450
 22111  017924                     u6470:
 22112                           
 22113                           ;stkvar	_sign @ sp[(-10)+8]
 22114  017924  0EFE               	movlw	-2
 22115  017926  50E3               	movf	plusw1,w,c
 22116  017928  B4D8               	btfsc	status,2,c
 22117  01792A  D025               	goto	u6490
 22118                           
 22119                           ;stkvar	_quotient @ sp[(-10)+0]
 22120                           ;stkvar	_quotient @ sp[(-10)+0]
 22121  01792C  0EF6               	movlw	-10
 22122  01792E  6CE3               	negf	plusw1,c
 22123  017930  0EF7               	movlw	-9
 22124  017932  1EE3               	comf	plusw1,f,c
 22125  017934  0EF8               	movlw	-8
 22126  017936  1EE3               	comf	plusw1,f,c
 22127  017938  0EF9               	movlw	-7
 22128  01793A  1EE3               	comf	plusw1,f,c
 22129  01793C  0EFA               	movlw	-6
 22130  01793E  1EE3               	comf	plusw1,f,c
 22131  017940  0EFB               	movlw	-5
 22132  017942  1EE3               	comf	plusw1,f,c
 22133  017944  0EFC               	movlw	-4
 22134  017946  1EE3               	comf	plusw1,f,c
 22135  017948  0EFD               	movlw	-3
 22136  01794A  1EE3               	comf	plusw1,f,c
 22137  01794C  E314               	bnc	u6490
 22138  01794E  0EF7               	movlw	-9
 22139  017950  2AE3               	incf	plusw1,f,c
 22140  017952  E311               	bnc	u6490
 22141  017954  0EF8               	movlw	-8
 22142  017956  2AE3               	incf	plusw1,f,c
 22143  017958  E30E               	bnc	u6490
 22144  01795A  0EF9               	movlw	-7
 22145  01795C  2AE3               	incf	plusw1,f,c
 22146  01795E  E30B               	bnc	u6490
 22147  017960  0EFA               	movlw	-6
 22148  017962  2AE3               	incf	plusw1,f,c
 22149  017964  E308               	bnc	u6490
 22150  017966  0EFB               	movlw	-5
 22151  017968  2AE3               	incf	plusw1,f,c
 22152  01796A  E305               	bnc	u6490
 22153  01796C  0EFC               	movlw	-4
 22154  01796E  2AE3               	incf	plusw1,f,c
 22155  017970  E302               	bnc	u6490
 22156  017972  0EFD               	movlw	-3
 22157  017974  2AE3               	incf	plusw1,f,c
 22158  017976                     u6490:
 22159                           
 22160                           ;stkvar	_quotient @ sp[(-10)+0]
 22161  017976  0EF6               	movlw	246
 22162  017978  24E1               	addwf	fsr1l,w,c
 22163  01797A  6ED9               	movwf	fsr2l,c
 22164  01797C  0EFF               	movlw	255
 22165  01797E  20E2               	addwfc	fsr1h,w,c
 22166  017980  6EDA               	movwf	fsr2h,c
 22167                           
 22168                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 22169  017982  0E08               	movlw	8
 22170  017984  6E01               	movwf	btemp^0,c
 22171  017986  0EEE               	movlw	-18
 22172  017988                     us650999:
 22173  017988  006F FF7B FFE3     	movff	postinc2,plusw1
 22174  01798E  28E8               	incf	wreg,w,c
 22175  017990  2E01               	decfsz	btemp^0,f,c
 22176  017992  D7FA               	bra	us650999
 22177                           
 22178                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 22179  017994  0EF6               	movlw	246
 22180  017996  26E1               	addwf	fsr1l,f,c
 22181  017998  0EFF               	movlw	255
 22182  01799A  22E2               	addwfc	fsr1h,f,c
 22183  01799C  0012               	return		;funcret
 22184  01799E                     __end_of___aodiv:
 22185                           	opt callstack 0
 22186                           
 22187 ;; *************** function _ctoa *****************
 22188 ;; Defined at:
 22189 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22190 ;; Parameters:    Size  Location     Type
 22191 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22192 ;;		 -> f(6), NULL(0), 
 22193 ;;  c               1  [STACK] unsigned char 
 22194 ;; Auto vars:     Size  Location     Type
 22195 ;;  w               2  [STACK] int 
 22196 ;;  l               2    0        int 
 22197 ;; Return value:  Size  Location     Type
 22198 ;;                  2  [STACK] int 
 22199 ;; Registers used:
 22200 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 22201 ;; Tracked objects:
 22202 ;;		On entry : 0/0
 22203 ;;		On exit  : 0/0
 22204 ;;		Unchanged: 0/0
 22205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22210 ;;Total ram usage:        0 bytes
 22211 ;; Hardware stack levels used:    1
 22212 ;; Hardware stack levels required when called:   20
 22213 ;; This function calls:
 22214 ;;		_pad
 22215 ;; This function is called by:
 22216 ;;		_vfpfcnvrt
 22217 ;; This function uses a reentrant model
 22218 ;;
 22219                           
 22220                           	psect	text77
 22221  01AEF8                     __ptext77:
 22222                           	opt callstack 0
 22223  01AEF8                     _ctoa:
 22224                           	opt callstack 0
 22225                           
 22226                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22227  01AEF8  52E6               	movf	postinc1,f,c
 22228  01AEFA  52E6               	movf	postinc1,f,c
 22229                           
 22230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 22231                           
 22232                           ;incstack = 0
 22233 ;; hardware stack exceeded
 22234  01AEFC  503A               	movf	_width^0,w,c
 22235  01AEFE  103B               	iorwf	(_width+1)^0,w,c
 22236  01AF00  A4D8               	btfss	status,2,c
 22237  01AF02  D009               	goto	l12183
 22238                           
 22239                           ;stkvar	_w @ sp[(-2)+0]
 22240  01AF04  0EFE               	movlw	-2
 22241  01AF06  0060  F0EB  FFE3   	movff	_width,plusw1
 22242  01AF0C  0EFF               	movlw	-1
 22243  01AF0E  0060  F0EF  FFE3   	movff	_width+1,plusw1
 22244  01AF14  D016               	goto	l12185
 22245  01AF16                     l12183:
 22246  01AF16  0EFF               	movlw	255
 22247  01AF18  6E0B               	movwf	(btemp+10)^0,c
 22248  01AF1A  0EFF               	movlw	255
 22249  01AF1C  6E0C               	movwf	(btemp+11)^0,c
 22250  01AF1E  0060  F0E8  F009   	movff	_width,btemp+8
 22251  01AF24  0060  F0EC  F00A   	movff	_width+1,btemp+9
 22252  01AF2A  500B               	movf	(btemp+10)^0,w,c
 22253  01AF2C  2609               	addwf	(btemp+8)^0,f,c
 22254  01AF2E  500C               	movf	(btemp+11)^0,w,c
 22255  01AF30  220A               	addwfc	(btemp+9)^0,f,c
 22256                           
 22257                           ;stkvar	_w @ sp[(-2)+0]
 22258  01AF32  0EFE               	movlw	-2
 22259  01AF34  0060  F027  FFE3   	movff	btemp+8,plusw1
 22260  01AF3A  0EFF               	movlw	-1
 22261  01AF3C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22262  01AF42                     l12185:
 22263                           
 22264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 22265                           ;stkvar	_c @ sp[(-2)+-3]
 22266  01AF42  0EFB               	movlw	-5
 22267  01AF44  006F FF8C  F297    	movff	plusw1,_dbuf
 22268                           
 22269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 22270  01AF4A  0102               	movlb	2	; () banked
 22271  01AF4C  6B98               	clrf	(_dbuf+1)& (0+255),b
 22272                           
 22273                           ; BSR set to: 2
 22274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 22275                           ;stkvar	_w @ sp[(-2)+0]
 22276  01AF4E  0EFE               	movlw	-2
 22277  01AF50  006F FF8F FFE6     	movff	plusw1,postinc1
 22278  01AF56  006F FF8F FFE6     	movff	plusw1,postinc1
 22279  01AF5C  0E97               	movlw	low _dbuf
 22280  01AF5E  6EE6               	movwf	postinc1,c
 22281  01AF60  0E02               	movlw	high _dbuf
 22282  01AF62  6EE6               	movwf	postinc1,c
 22283                           
 22284                           ;stkvar	_fp @ sp[(-6)+-2]
 22285  01AF64  0EF8               	movlw	-8
 22286  01AF66  006F FF8F FFE6     	movff	plusw1,postinc1
 22287  01AF6C  006F FF8F FFE6     	movff	plusw1,postinc1
 22288  01AF72  EC90  F0CE         	call	_pad	;wreg free
 22289                           
 22290                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 22291  01AF76  0EFB               	movlw	251
 22292  01AF78  26E1               	addwf	fsr1l,f,c
 22293  01AF7A  0EFF               	movlw	255
 22294  01AF7C  22E2               	addwfc	fsr1h,f,c
 22295  01AF7E  0012               	return		;funcret
 22296  01AF80                     __end_of_ctoa:
 22297                           	opt callstack 0
 22298                           
 22299 ;; *************** function _pad *****************
 22300 ;; Defined at:
 22301 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22302 ;; Parameters:    Size  Location     Type
 22303 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22304 ;;		 -> f(6), NULL(0), 
 22305 ;;  buf             2  [STACK] PTR unsigned char 
 22306 ;;		 -> dbuf(80), 
 22307 ;;  p               2  [STACK] int 
 22308 ;; Auto vars:     Size  Location     Type
 22309 ;;  w               2  [STACK] int 
 22310 ;;  i               2  [STACK] int 
 22311 ;; Return value:  Size  Location     Type
 22312 ;;                  2  [STACK] int 
 22313 ;; Registers used:
 22314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 22315 ;; Tracked objects:
 22316 ;;		On entry : 0/2
 22317 ;;		On exit  : 0/0
 22318 ;;		Unchanged: 0/0
 22319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22324 ;;Total ram usage:        0 bytes
 22325 ;; Hardware stack levels used:    1
 22326 ;; Hardware stack levels required when called:   19
 22327 ;; This function calls:
 22328 ;;		_fputc
 22329 ;;		_fputs
 22330 ;;		_strlen
 22331 ;; This function is called by:
 22332 ;;		_ctoa
 22333 ;;		_dtoa
 22334 ;;		_efgtoa
 22335 ;;		_utoa
 22336 ;;		_xtoa
 22337 ;; This function uses a reentrant model
 22338 ;;
 22339                           
 22340                           	psect	text78
 22341  019D20                     __ptext78:
 22342                           	opt callstack 0
 22343  019D20                     _pad:
 22344                           	opt callstack 0
 22345                           
 22346                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22347  019D20  52E6               	movf	postinc1,f,c
 22348  019D22  52E6               	movf	postinc1,f,c
 22349  019D24  52E6               	movf	postinc1,f,c
 22350  019D26  52E6               	movf	postinc1,f,c
 22351                           
 22352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 22353                           
 22354                           ;incstack = 0
 22355 ;; hardware stack exceeded
 22356  019D28  A03E               	btfss	_flags^0,0,c
 22357  019D2A  D010               	goto	l12145
 22358                           
 22359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 22360                           ;stkvar	_fp @ sp[(-4)+-2]
 22361  019D2C  0EFA               	movlw	-6
 22362  019D2E  006F FF8F FFE6     	movff	plusw1,postinc1
 22363  019D34  006F FF8F FFE6     	movff	plusw1,postinc1
 22364                           
 22365                           ;stkvar	_buf @ sp[(-6)+-4]
 22366  019D3A  0EF6               	movlw	-10
 22367  019D3C  006F FF8F FFE6     	movff	plusw1,postinc1
 22368  019D42  006F FF8F FFE6     	movff	plusw1,postinc1
 22369  019D48  EC9E  F0D6         	call	_fputs	;wreg free
 22370  019D4C                     l12145:
 22371                           
 22372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 22373                           ;stkvar	_p @ sp[(-4)+-6]
 22374  019D4C  0EF7               	movlw	-9
 22375  019D4E  BEE3               	btfsc	plusw1,7,c
 22376  019D50  D011               	goto	l12149
 22377                           
 22378                           ;stkvar	_p @ sp[(-4)+-6]
 22379                           ;stkvar	_w @ sp[(-4)+0]
 22380  019D52  0EF6               	movlw	-10
 22381  019D54  006F FF8C  F001    	movff	plusw1,btemp
 22382  019D5A  0EFC               	movlw	-4
 22383  019D5C  0060  F007  FFE3   	movff	btemp,plusw1
 22384  019D62  0EF7               	movlw	-9
 22385  019D64  006F FF8C  F001    	movff	plusw1,btemp
 22386  019D6A  0EFD               	movlw	-3
 22387  019D6C  0060  F007  FFE3   	movff	btemp,plusw1
 22388  019D72  D004               	goto	l2219
 22389  019D74                     l12149:
 22390                           
 22391                           ;stkvar	_w @ sp[(-4)+0]
 22392  019D74  0EFC               	movlw	-4
 22393  019D76  6AE3               	clrf	plusw1,c
 22394  019D78  0EFD               	movlw	-3
 22395  019D7A  6AE3               	clrf	plusw1,c
 22396  019D7C                     l2219:
 22397                           
 22398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 22399                           ;stkvar	_i @ sp[(-4)+2]
 22400  019D7C  0EFE               	movlw	-2
 22401  019D7E  6AE3               	clrf	plusw1,c
 22402  019D80  0EFF               	movlw	-1
 22403  019D82  6AE3               	clrf	plusw1,c
 22404                           
 22405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 22406  019D84  D01E               	goto	l12155
 22407  019D86                     l12151:
 22408                           
 22409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 22410                           ;stkvar	_fp @ sp[(-4)+-2]
 22411  019D86  0EFA               	movlw	-6
 22412  019D88  006F FF8F FFE6     	movff	plusw1,postinc1
 22413  019D8E  006F FF8F FFE6     	movff	plusw1,postinc1
 22414  019D94  0E20               	movlw	32
 22415  019D96  6EE6               	movwf	postinc1,c
 22416  019D98  0E00               	movlw	0
 22417  019D9A  6EE6               	movwf	postinc1,c
 22418  019D9C  ECE6  F0CC         	call	_fputc	;wreg free
 22419                           
 22420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 22421                           ;stkvar	_i @ sp[(-4)+2]
 22422  019DA0  0EFE               	movlw	-2
 22423  019DA2  50E3               	movf	plusw1,w,c
 22424  019DA4  0F01               	addlw	1
 22425  019DA6  6E01               	movwf	btemp^0,c
 22426  019DA8  0EFE               	movlw	-2
 22427  019DAA  0060  F007  FFE3   	movff	btemp,plusw1
 22428  019DB0  6A01               	clrf	btemp^0,c
 22429  019DB2  0EFF               	movlw	-1
 22430  019DB4  50E3               	movf	plusw1,w,c
 22431  019DB6  2001               	addwfc	btemp^0,w,c
 22432  019DB8  6E01               	movwf	btemp^0,c
 22433  019DBA  0EFF               	movlw	-1
 22434  019DBC  0060  F007  FFE3   	movff	btemp,plusw1
 22435  019DC2                     l12155:
 22436                           
 22437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 22438                           ;stkvar	_w @ sp[(-4)+0]
 22439                           ;stkvar	_i @ sp[(-4)+2]
 22440  019DC2  50E1               	movf	fsr1l,w,c
 22441  019DC4  0FFE               	addlw	-2
 22442  019DC6  6ED9               	movwf	fsr2l,c
 22443  019DC8  50E2               	movf	fsr1h,w,c
 22444  019DCA  6EDA               	movwf	fsr2h,c
 22445  019DCC  0EFF               	movlw	255
 22446  019DCE  22DA               	addwfc	fsr2h,f,c
 22447  019DD0  0EFC               	movlw	-4
 22448  019DD2  50E3               	movf	plusw1,w,c
 22449  019DD4  5CDE               	subwf	postinc2,w,c
 22450  019DD6  50DE               	movf	postinc2,w,c
 22451  019DD8  0A80               	xorlw	128
 22452  019DDA  6E01               	movwf	btemp^0,c
 22453  019DDC  0EFD               	movlw	-3
 22454  019DDE  50E3               	movf	plusw1,w,c
 22455  019DE0  0A80               	xorlw	128
 22456  019DE2  5801               	subwfb	btemp^0,w,c
 22457  019DE4  A0D8               	btfss	status,0,c
 22458  019DE6  D7CF               	goto	l12151
 22459                           
 22460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 22461  019DE8  B03E               	btfsc	_flags^0,0,c
 22462  019DEA  D010               	goto	l12159
 22463                           
 22464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 22465                           ;stkvar	_fp @ sp[(-4)+-2]
 22466  019DEC  0EFA               	movlw	-6
 22467  019DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 22468  019DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 22469                           
 22470                           ;stkvar	_buf @ sp[(-6)+-4]
 22471  019DFA  0EF6               	movlw	-10
 22472  019DFC  006F FF8F FFE6     	movff	plusw1,postinc1
 22473  019E02  006F FF8F FFE6     	movff	plusw1,postinc1
 22474  019E08  EC9E  F0D6         	call	_fputs	;wreg free
 22475  019E0C                     l12159:
 22476                           
 22477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 22478                           ;stkvar	_w @ sp[(-4)+0]
 22479                           ;stkvar	_buf @ sp[(-4)+-4]
 22480  019E0C  0EF8               	movlw	-8
 22481  019E0E  006F FF8F FFE6     	movff	plusw1,postinc1
 22482  019E14  006F FF8F FFE6     	movff	plusw1,postinc1
 22483  019E1A  EC4D  F0D6         	call	_strlen	;wreg free
 22484  019E1E  0EFC               	movlw	-4
 22485  019E20  50E3               	movf	plusw1,w,c
 22486  019E22  2601               	addwf	btemp^0,f,c
 22487  019E24  0EFD               	movlw	-3
 22488  019E26  50E3               	movf	plusw1,w,c
 22489  019E28  2202               	addwfc	(btemp+1)^0,f,c
 22490                           
 22491                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 22492  019E2A  0EF6               	movlw	246
 22493  019E2C  26E1               	addwf	fsr1l,f,c
 22494  019E2E  0EFF               	movlw	255
 22495  019E30  22E2               	addwfc	fsr1h,f,c
 22496  019E32  0012               	return		;funcret
 22497  019E34                     __end_of_pad:
 22498                           	opt callstack 0
 22499                           
 22500 ;; *************** function _strlen *****************
 22501 ;; Defined at:
 22502 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 22503 ;; Parameters:    Size  Location     Type
 22504 ;;  s               2  [STACK] PTR const unsigned char 
 22505 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 22506 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 22507 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 22508 ;;		 -> V(191), 
 22509 ;; Auto vars:     Size  Location     Type
 22510 ;;  a               2  [STACK] PTR const unsigned char 
 22511 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 22512 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 22513 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 22514 ;;		 -> V(191), 
 22515 ;; Return value:  Size  Location     Type
 22516 ;;                  2  [STACK] unsigned int 
 22517 ;; Registers used:
 22518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 22519 ;; Tracked objects:
 22520 ;;		On entry : 0/0
 22521 ;;		On exit  : 0/0
 22522 ;;		Unchanged: 0/0
 22523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22528 ;;Total ram usage:        0 bytes
 22529 ;; Hardware stack levels used:    1
 22530 ;; Hardware stack levels required when called:   15
 22531 ;; This function calls:
 22532 ;;		Nothing
 22533 ;; This function is called by:
 22534 ;;		_eaDogM_WriteString
 22535 ;;		_spinners
 22536 ;;		_calc_bsoc
 22537 ;;		_pad
 22538 ;;		_stoa
 22539 ;; This function uses a reentrant model
 22540 ;;
 22541                           
 22542                           	psect	text79
 22543  01AC9A                     __ptext79:
 22544                           	opt callstack 0
 22545  01AC9A                     _strlen:
 22546                           	opt callstack 0
 22547                           
 22548                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22549  01AC9A  52E6               	movf	postinc1,f,c
 22550  01AC9C  52E6               	movf	postinc1,f,c
 22551                           
 22552                           ;stkvar	_s @ sp[(-2)+-2]
 22553                           
 22554                           ;incstack = 0
 22555 ;; hardware stack exceeded
 22556  01AC9E  0EFC               	movlw	-4
 22557  01ACA0  006F FF8C  F00B    	movff	plusw1,btemp+10
 22558  01ACA6  0EFD               	movlw	-3
 22559  01ACA8  006F FF8C  F00C    	movff	plusw1,btemp+11
 22560                           
 22561                           ;stkvar	_a @ sp[(-2)+0]
 22562  01ACAE  0EFF               	movlw	-1
 22563  01ACB0  0060  F033  FFE3   	movff	btemp+11,plusw1
 22564  01ACB6  0EFE               	movlw	-2
 22565  01ACB8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22566  01ACBE  D011               	goto	l7865
 22567  01ACC0                     l7863:
 22568                           
 22569                           ;stkvar	_s @ sp[(-2)+-2]
 22570  01ACC0  0EFC               	movlw	-4
 22571  01ACC2  50E3               	movf	plusw1,w,c
 22572  01ACC4  0F01               	addlw	1
 22573  01ACC6  6E01               	movwf	btemp^0,c
 22574  01ACC8  0EFC               	movlw	-4
 22575  01ACCA  0060  F007  FFE3   	movff	btemp,plusw1
 22576  01ACD0  6A01               	clrf	btemp^0,c
 22577  01ACD2  0EFD               	movlw	-3
 22578  01ACD4  50E3               	movf	plusw1,w,c
 22579  01ACD6  2001               	addwfc	btemp^0,w,c
 22580  01ACD8  6E01               	movwf	btemp^0,c
 22581  01ACDA  0EFD               	movlw	-3
 22582  01ACDC  0060  F007  FFE3   	movff	btemp,plusw1
 22583  01ACE2                     l7865:
 22584                           
 22585                           ;stkvar	_s @ sp[(-2)+-2]
 22586  01ACE2  0EFC               	movlw	-4
 22587  01ACE4  006F FF8F FFF6     	movff	plusw1,tblptrl
 22588  01ACEA  0EFD               	movlw	-3
 22589  01ACEC  006F FF8F FFF7     	movff	plusw1,tblptrh
 22590  01ACF2  0E00               	movlw	low (__mediumconst shr (0+16))
 22591  01ACF4  6EF8               	movwf	tblptru,c
 22592  01ACF6  0E1F               	movlw	(high __ramtop+-1)
 22593  01ACF8  64F7               	cpfsgt	tblptrh,c
 22594  01ACFA  D003               	bra	u5517
 22595  01ACFC  0008               	tblrd		*
 22596  01ACFE  50F5               	movf	tablat,w,c
 22597  01AD00  D007               	bra	u5510
 22598  01AD02                     u5517:
 22599  01AD02  006F FFDB FFE9     	movff	tblptrl,fsr0l
 22600  01AD08  006F FFDF FFEA     	movff	tblptrh,fsr0h
 22601  01AD0E  50EF               	movf	indf0,w,c
 22602  01AD10                     u5510:
 22603  01AD10  0900               	iorlw	0
 22604  01AD12  A4D8               	btfss	status,2,c
 22605  01AD14  D7D5               	goto	l7863
 22606                           
 22607                           ;stkvar	_a @ sp[(-2)+0]
 22608                           ;stkvar	_s @ sp[(-2)+-2]
 22609  01AD16  0EFC               	movlw	-4
 22610  01AD18  006F FF8C  F001    	movff	plusw1,btemp
 22611  01AD1E  0EFD               	movlw	-3
 22612  01AD20  006F FF8C  F002    	movff	plusw1,btemp+1
 22613  01AD26  0EFE               	movlw	-2
 22614  01AD28  50E3               	movf	plusw1,w,c
 22615  01AD2A  5E01               	subwf	btemp^0,f,c
 22616  01AD2C  0EFF               	movlw	-1
 22617  01AD2E  50E3               	movf	plusw1,w,c
 22618  01AD30  5A02               	subwfb	(btemp+1)^0,f,c
 22619                           
 22620                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 22621  01AD32  52E5               	movf	postdec1,f,c
 22622  01AD34  52E5               	movf	postdec1,f,c
 22623  01AD36  52E5               	movf	postdec1,f,c
 22624  01AD38  52E5               	movf	postdec1,f,c
 22625  01AD3A  0012               	return		;funcret
 22626  01AD3C                     __end_of_strlen:
 22627                           	opt callstack 0
 22628                           
 22629 ;; *************** function _fputs *****************
 22630 ;; Defined at:
 22631 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 22632 ;; Parameters:    Size  Location     Type
 22633 ;;  s               2  [STACK] PTR const unsigned char 
 22634 ;;		 -> dbuf(80), 
 22635 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22636 ;;		 -> f(6), NULL(0), 
 22637 ;; Auto vars:     Size  Location     Type
 22638 ;;  i               2  [STACK] int 
 22639 ;;  c               1  [STACK] unsigned char 
 22640 ;; Return value:  Size  Location     Type
 22641 ;;                  2  [STACK] int 
 22642 ;; Registers used:
 22643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 22644 ;; Tracked objects:
 22645 ;;		On entry : 0/2
 22646 ;;		On exit  : 0/0
 22647 ;;		Unchanged: 0/0
 22648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22653 ;;Total ram usage:        0 bytes
 22654 ;; Hardware stack levels used:    1
 22655 ;; Hardware stack levels required when called:   18
 22656 ;; This function calls:
 22657 ;;		_fputc
 22658 ;; This function is called by:
 22659 ;;		_pad
 22660 ;; This function uses a reentrant model
 22661 ;;
 22662                           
 22663                           	psect	text80
 22664  01AD3C                     __ptext80:
 22665                           	opt callstack 0
 22666  01AD3C                     _fputs:
 22667                           	opt callstack 0
 22668                           
 22669                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22670  01AD3C  52E6               	movf	postinc1,f,c
 22671  01AD3E  52E6               	movf	postinc1,f,c
 22672  01AD40  52E6               	movf	postinc1,f,c
 22673                           
 22674                           ;stkvar	_i @ sp[(-3)+0]
 22675                           
 22676                           ;incstack = 0
 22677 ;; hardware stack exceeded
 22678  01AD42  0EFD               	movlw	-3
 22679  01AD44  6AE3               	clrf	plusw1,c
 22680  01AD46  0EFE               	movlw	-2
 22681  01AD48  6AE3               	clrf	plusw1,c
 22682  01AD4A  D01F               	goto	l12097
 22683  01AD4C                     l12093:
 22684                           
 22685                           ;stkvar	_fp @ sp[(-3)+-4]
 22686  01AD4C  0EF9               	movlw	-7
 22687  01AD4E  006F FF8F FFE6     	movff	plusw1,postinc1
 22688  01AD54  006F FF8F FFE6     	movff	plusw1,postinc1
 22689                           
 22690                           ;stkvar	_c @ sp[(-5)+2]
 22691  01AD5A  0EFD               	movlw	-3
 22692  01AD5C  50E3               	movf	plusw1,w,c
 22693  01AD5E  6EE6               	movwf	postinc1,c
 22694  01AD60  0E00               	movlw	0
 22695  01AD62  6EE6               	movwf	postinc1,c
 22696  01AD64  ECE6  F0CC         	call	_fputc	;wreg free
 22697                           
 22698                           ;stkvar	_i @ sp[(-3)+0]
 22699  01AD68  0EFD               	movlw	-3
 22700  01AD6A  50E3               	movf	plusw1,w,c
 22701  01AD6C  0F01               	addlw	1
 22702  01AD6E  6E01               	movwf	btemp^0,c
 22703  01AD70  0EFD               	movlw	-3
 22704  01AD72  0060  F007  FFE3   	movff	btemp,plusw1
 22705  01AD78  6A01               	clrf	btemp^0,c
 22706  01AD7A  0EFE               	movlw	-2
 22707  01AD7C  50E3               	movf	plusw1,w,c
 22708  01AD7E  2001               	addwfc	btemp^0,w,c
 22709  01AD80  6E01               	movwf	btemp^0,c
 22710  01AD82  0EFE               	movlw	-2
 22711  01AD84  0060  F007  FFE3   	movff	btemp,plusw1
 22712  01AD8A                     l12097:
 22713                           
 22714                           ;stkvar	_i @ sp[(-3)+0]
 22715  01AD8A  0EFD               	movlw	-3
 22716  01AD8C  006F FF8C  F00B    	movff	plusw1,btemp+10
 22717  01AD92  0EFE               	movlw	-2
 22718  01AD94  006F FF8C  F00C    	movff	plusw1,btemp+11
 22719                           
 22720                           ;stkvar	_s @ sp[(-3)+-2]
 22721  01AD9A  0EFB               	movlw	-5
 22722  01AD9C  006F FF8C  F009    	movff	plusw1,btemp+8
 22723  01ADA2  0EFC               	movlw	-4
 22724  01ADA4  006F FF8C  F00A    	movff	plusw1,btemp+9
 22725  01ADAA  500B               	movf	(btemp+10)^0,w,c
 22726  01ADAC  2409               	addwf	(btemp+8)^0,w,c
 22727  01ADAE  6ED9               	movwf	fsr2l,c
 22728  01ADB0  500C               	movf	(btemp+11)^0,w,c
 22729  01ADB2  200A               	addwfc	(btemp+9)^0,w,c
 22730  01ADB4  6EDA               	movwf	fsr2h,c
 22731  01ADB6  50DF               	movf	indf2,w,c
 22732  01ADB8  6E0C               	movwf	(btemp+11)^0,c
 22733                           
 22734                           ;stkvar	_c @ sp[(-3)+2]
 22735  01ADBA  0EFF               	movlw	-1
 22736  01ADBC  0060  F033  FFE3   	movff	btemp+11,plusw1
 22737  01ADC2  0EFF               	movlw	-1
 22738  01ADC4  50E3               	movf	plusw1,w,c
 22739  01ADC6  A4D8               	btfss	status,2,c
 22740  01ADC8  D7C1               	goto	l12093
 22741                           
 22742                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22743  01ADCA  0EF9               	movlw	249
 22744  01ADCC  26E1               	addwf	fsr1l,f,c
 22745  01ADCE  0EFF               	movlw	255
 22746  01ADD0  22E2               	addwfc	fsr1h,f,c
 22747  01ADD2  0012               	return		;funcret
 22748  01ADD4                     __end_of_fputs:
 22749                           	opt callstack 0
 22750                           
 22751 ;; *************** function _fputc *****************
 22752 ;; Defined at:
 22753 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 22754 ;; Parameters:    Size  Location     Type
 22755 ;;  c               2  [STACK] int 
 22756 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22757 ;;		 -> f(6), NULL(0), 
 22758 ;; Auto vars:     Size  Location     Type
 22759 ;;		None
 22760 ;; Return value:  Size  Location     Type
 22761 ;;                  2  [STACK] int 
 22762 ;; Registers used:
 22763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 22764 ;; Tracked objects:
 22765 ;;		On entry : 0/0
 22766 ;;		On exit  : 0/0
 22767 ;;		Unchanged: 0/0
 22768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22773 ;;Total ram usage:        0 bytes
 22774 ;; Hardware stack levels used:    1
 22775 ;; Hardware stack levels required when called:   17
 22776 ;; This function calls:
 22777 ;;		_putch
 22778 ;; This function is called by:
 22779 ;;		_pad
 22780 ;;		_stoa
 22781 ;;		_vfpfcnvrt
 22782 ;;		_fputs
 22783 ;; This function uses a reentrant model
 22784 ;;
 22785                           
 22786                           	psect	text81
 22787  0199CC                     __ptext81:
 22788                           	opt callstack 0
 22789  0199CC                     _fputc:
 22790                           	opt callstack 0
 22791                           
 22792                           ;stkvar	_fp @ sp[(0)+-4]
 22793                           
 22794                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22795                           ;incstack = 0
 22796 ;; hardware stack exceeded
 22797  0199CC  0EFC               	movlw	-4
 22798  0199CE  006F FF8C  F001    	movff	plusw1,btemp
 22799  0199D4  0EFD               	movlw	-3
 22800  0199D6  50E3               	movf	plusw1,w,c
 22801  0199D8  1001               	iorwf	btemp^0,w,c
 22802  0199DA  B4D8               	btfsc	status,2,c
 22803  0199DC  D009               	goto	u10930
 22804                           
 22805                           ;stkvar	_fp @ sp[(0)+-4]
 22806  0199DE  0EFC               	movlw	-4
 22807  0199E0  006F FF8C  F001    	movff	plusw1,btemp
 22808  0199E6  0EFD               	movlw	-3
 22809  0199E8  50E3               	movf	plusw1,w,c
 22810  0199EA  1001               	iorwf	btemp^0,w,c
 22811  0199EC  A4D8               	btfss	status,2,c
 22812  0199EE  D006               	goto	l12081
 22813  0199F0                     u10930:
 22814                           
 22815                           ;stkvar	_c @ sp[(0)+-2]
 22816  0199F0  0EFE               	movlw	-2
 22817  0199F2  50E3               	movf	plusw1,w,c
 22818  0199F4  6EE6               	movwf	postinc1,c
 22819  0199F6  EC06  F0E2         	call	_putch	;wreg free
 22820  0199FA  D075               	goto	l3265
 22821  0199FC                     l12081:
 22822                           
 22823                           ;stkvar	_fp @ sp[(0)+-4]
 22824  0199FC  0EFC               	movlw	-4
 22825  0199FE  006F FF8C  F00B    	movff	plusw1,btemp+10
 22826  019A04  0EFD               	movlw	-3
 22827  019A06  006F FF8C  F00C    	movff	plusw1,btemp+11
 22828  019A0C  0E04               	movlw	4
 22829  019A0E  240B               	addwf	(btemp+10)^0,w,c
 22830  019A10  6ED9               	movwf	fsr2l,c
 22831  019A12  0E00               	movlw	0
 22832  019A14  200C               	addwfc	(btemp+11)^0,w,c
 22833  019A16  6EDA               	movwf	fsr2h,c
 22834  019A18  50DE               	movf	postinc2,w,c
 22835  019A1A  10DE               	iorwf	postinc2,w,c
 22836  019A1C  B4D8               	btfsc	status,2,c
 22837  019A1E  D026               	goto	u10950
 22838                           
 22839                           ;stkvar	_fp @ sp[(0)+-4]
 22840  019A20  0EFC               	movlw	-4
 22841  019A22  006F FF8C  F00B    	movff	plusw1,btemp+10
 22842  019A28  0EFD               	movlw	-3
 22843  019A2A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22844  019A30  0E04               	movlw	4
 22845  019A32  240B               	addwf	(btemp+10)^0,w,c
 22846  019A34  6ED9               	movwf	fsr2l,c
 22847  019A36  0E00               	movlw	0
 22848  019A38  200C               	addwfc	(btemp+11)^0,w,c
 22849  019A3A  6EDA               	movwf	fsr2h,c
 22850                           
 22851                           ;stkvar	_fp @ sp[(0)+-4]
 22852  019A3C  0EFC               	movlw	-4
 22853  019A3E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22854  019A44  0EFD               	movlw	-3
 22855  019A46  006F FF8C  F00C    	movff	plusw1,btemp+11
 22856  019A4C  0E02               	movlw	2
 22857  019A4E  240B               	addwf	(btemp+10)^0,w,c
 22858  019A50  6EE9               	movwf	fsr0l,c
 22859  019A52  0E00               	movlw	0
 22860  019A54  200C               	addwfc	(btemp+11)^0,w,c
 22861  019A56  6EEA               	movwf	fsr0h,c
 22862  019A58  50DE               	movf	postinc2,w,c
 22863  019A5A  5CEE               	subwf	postinc0,w,c
 22864  019A5C  50EE               	movf	postinc0,w,c
 22865  019A5E  0A80               	xorlw	128
 22866  019A60  6E01               	movwf	btemp^0,c
 22867  019A62  50DE               	movf	postinc2,w,c
 22868  019A64  0A80               	xorlw	128
 22869  019A66  5801               	subwfb	btemp^0,w,c
 22870  019A68  B0D8               	btfsc	status,0,c
 22871  019A6A  D03D               	goto	l3265
 22872  019A6C                     u10950:
 22873                           
 22874                           ;stkvar	_c @ sp[(0)+-2]
 22875                           ;stkvar	_fp @ sp[(0)+-4]
 22876  019A6C  0EFC               	movlw	-4
 22877  019A6E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22878  019A74  0EFD               	movlw	-3
 22879  019A76  006F FF8C  F00C    	movff	plusw1,btemp+11
 22880  019A7C  0E02               	movlw	2
 22881  019A7E  240B               	addwf	(btemp+10)^0,w,c
 22882  019A80  6ED9               	movwf	fsr2l,c
 22883  019A82  0E00               	movlw	0
 22884  019A84  200C               	addwfc	(btemp+11)^0,w,c
 22885  019A86  6EDA               	movwf	fsr2h,c
 22886  019A88  006F FF78  F00B    	movff	postinc2,btemp+10
 22887  019A8E  006F FF74  F00C    	movff	postdec2,btemp+11
 22888                           
 22889                           ;stkvar	_fp @ sp[(0)+-4]
 22890  019A94  0EFC               	movlw	-4
 22891  019A96  006F FF8F FFD9     	movff	plusw1,fsr2l
 22892  019A9C  0EFD               	movlw	-3
 22893  019A9E  006F FF8F FFDA     	movff	plusw1,fsr2h
 22894  019AA4  006F FF78  F009    	movff	postinc2,btemp+8
 22895  019AAA  006F FF74  F00A    	movff	postdec2,btemp+9
 22896  019AB0  500B               	movf	(btemp+10)^0,w,c
 22897  019AB2  2409               	addwf	(btemp+8)^0,w,c
 22898  019AB4  6ED9               	movwf	fsr2l,c
 22899  019AB6  500C               	movf	(btemp+11)^0,w,c
 22900  019AB8  200A               	addwfc	(btemp+9)^0,w,c
 22901  019ABA  6EDA               	movwf	fsr2h,c
 22902  019ABC  0EFE               	movlw	-2
 22903  019ABE  006F FF8F FFDF     	movff	plusw1,indf2
 22904                           
 22905                           ;stkvar	_fp @ sp[(0)+-4]
 22906  019AC4  0EFC               	movlw	-4
 22907  019AC6  006F FF8C  F00B    	movff	plusw1,btemp+10
 22908  019ACC  0EFD               	movlw	-3
 22909  019ACE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22910  019AD4  0E02               	movlw	2
 22911  019AD6  240B               	addwf	(btemp+10)^0,w,c
 22912  019AD8  6ED9               	movwf	fsr2l,c
 22913  019ADA  0E00               	movlw	0
 22914  019ADC  200C               	addwfc	(btemp+11)^0,w,c
 22915  019ADE  6EDA               	movwf	fsr2h,c
 22916  019AE0  2ADE               	incf	postinc2,f,c
 22917  019AE2  0E00               	movlw	0
 22918  019AE4  22DD               	addwfc	postdec2,f,c
 22919  019AE6                     l3265:
 22920                           
 22921                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22922  019AE6  52E5               	movf	postdec1,f,c
 22923  019AE8  52E5               	movf	postdec1,f,c
 22924  019AEA  52E5               	movf	postdec1,f,c
 22925  019AEC  52E5               	movf	postdec1,f,c
 22926  019AEE  0012               	return		;funcret
 22927  019AF0                     __end_of_fputc:
 22928                           	opt callstack 0
 22929                           
 22930 ;; *************** function _putch *****************
 22931 ;; Defined at:
 22932 ;;		line 421 in file "eadog.c"
 22933 ;; Parameters:    Size  Location     Type
 22934 ;;  c               1  [STACK] unsigned char 
 22935 ;; Auto vars:     Size  Location     Type
 22936 ;;		None
 22937 ;; Return value:  Size  Location     Type
 22938 ;;                  1  [STACK] void 
 22939 ;; Registers used:
 22940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22941 ;; Tracked objects:
 22942 ;;		On entry : 0/0
 22943 ;;		On exit  : 0/0
 22944 ;;		Unchanged: 0/0
 22945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22950 ;;Total ram usage:        0 bytes
 22951 ;; Hardware stack levels used:    1
 22952 ;; Hardware stack levels required when called:   16
 22953 ;; This function calls:
 22954 ;;		_ringBufS_put_dma
 22955 ;; This function is called by:
 22956 ;;		_fputc
 22957 ;; This function uses a reentrant model
 22958 ;;
 22959                           
 22960                           	psect	text82
 22961  01C40C                     __ptext82:
 22962                           	opt callstack 0
 22963  01C40C                     _putch:
 22964                           	opt callstack 0
 22965                           
 22966                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 22967                           ;stkvar	_c @ sp[(0)+-1]
 22968                           
 22969                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22970                           ;incstack = 0
 22971 ;; hardware stack exceeded
 22972  01C40C  0EFF               	movlw	-1
 22973  01C40E  50E3               	movf	plusw1,w,c
 22974  01C410  6EE6               	movwf	postinc1,c
 22975  01C412  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
 22976  01C418  0060  F753  FFE6   	movff	_spi_link+7,postinc1
 22977  01C41E  EC51  F0D5         	call	_ringBufS_put_dma	;wreg free
 22978                           
 22979                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 22980  01C422  52E5               	movf	postdec1,f,c
 22981  01C424  0012               	return		;funcret
 22982  01C426                     __end_of_putch:
 22983                           	opt callstack 0
 22984                           
 22985 ;; *************** function _ringBufS_put_dma *****************
 22986 ;; Defined at:
 22987 ;;		line 67 in file "ringbufs.c"
 22988 ;; Parameters:    Size  Location     Type
 22989 ;;  _this           2  [STACK] PTR struct ringBufS_t
 22990 ;;		 -> ring_buf1(67), 
 22991 ;;  c               1  [STACK] const unsigned char 
 22992 ;; Auto vars:     Size  Location     Type
 22993 ;;		None
 22994 ;; Return value:  Size  Location     Type
 22995 ;;                  1  [STACK] void 
 22996 ;; Registers used:
 22997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22998 ;; Tracked objects:
 22999 ;;		On entry : 0/0
 23000 ;;		On exit  : 0/0
 23001 ;;		Unchanged: 0/0
 23002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23007 ;;Total ram usage:        0 bytes
 23008 ;; Hardware stack levels used:    1
 23009 ;; Hardware stack levels required when called:   15
 23010 ;; This function calls:
 23011 ;;		Nothing
 23012 ;; This function is called by:
 23013 ;;		_putch
 23014 ;; This function uses a reentrant model
 23015 ;;
 23016                           
 23017                           	psect	text83
 23018  01AAA2                     __ptext83:
 23019                           	opt callstack 0
 23020  01AAA2                     _ringBufS_put_dma:
 23021                           	opt callstack 0
 23022                           
 23023                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 23024                           ;stkvar	__this @ sp[(0)+-2]
 23025                           
 23026                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23027                           ;incstack = 0
 23028 ;; hardware stack exceeded
 23029  01AAA2  0EFE               	movlw	-2
 23030  01AAA4  006F FF8C  F00B    	movff	plusw1,btemp+10
 23031  01AAAA  0EFF               	movlw	-1
 23032  01AAAC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23033  01AAB2  0E42               	movlw	66
 23034  01AAB4  240B               	addwf	(btemp+10)^0,w,c
 23035  01AAB6  6ED9               	movwf	fsr2l,c
 23036  01AAB8  0E00               	movlw	0
 23037  01AABA  200C               	addwfc	(btemp+11)^0,w,c
 23038  01AABC  6EDA               	movwf	fsr2h,c
 23039  01AABE  0E40               	movlw	64
 23040  01AAC0  60DF               	cpfslt	indf2,c
 23041  01AAC2  D040               	goto	l1597
 23042                           
 23043                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 23044                           ;stkvar	_c @ sp[(0)+-3]
 23045                           ;stkvar	__this @ sp[(0)+-2]
 23046  01AAC4  0EFE               	movlw	-2
 23047  01AAC6  006F FF8C  F00B    	movff	plusw1,btemp+10
 23048  01AACC  0EFF               	movlw	-1
 23049  01AACE  006F FF8C  F00C    	movff	plusw1,btemp+11
 23050  01AAD4  0E40               	movlw	64
 23051  01AAD6  240B               	addwf	(btemp+10)^0,w,c
 23052  01AAD8  6ED9               	movwf	fsr2l,c
 23053  01AADA  0E00               	movlw	0
 23054  01AADC  200C               	addwfc	(btemp+11)^0,w,c
 23055  01AADE  6EDA               	movwf	fsr2h,c
 23056  01AAE0  50DF               	movf	indf2,w,c
 23057  01AAE2  6E0C               	movwf	(btemp+11)^0,c
 23058                           
 23059                           ;stkvar	__this @ sp[(0)+-2]
 23060  01AAE4  0EFE               	movlw	-2
 23061  01AAE6  006F FF8C  F009    	movff	plusw1,btemp+8
 23062  01AAEC  0EFF               	movlw	-1
 23063  01AAEE  006F FF8C  F00A    	movff	plusw1,btemp+9
 23064  01AAF4  500C               	movf	(btemp+11)^0,w,c
 23065  01AAF6  2409               	addwf	(btemp+8)^0,w,c
 23066  01AAF8  6ED9               	movwf	fsr2l,c
 23067  01AAFA  0E00               	movlw	0
 23068  01AAFC  200A               	addwfc	(btemp+9)^0,w,c
 23069  01AAFE  6EDA               	movwf	fsr2h,c
 23070  01AB00  0EFD               	movlw	-3
 23071  01AB02  006F FF8F FFDF     	movff	plusw1,indf2
 23072                           
 23073                           ;ringbufs.c: 71:   ++_this->head;
 23074                           ;stkvar	__this @ sp[(0)+-2]
 23075  01AB08  0EFE               	movlw	-2
 23076  01AB0A  006F FF8C  F00B    	movff	plusw1,btemp+10
 23077  01AB10  0EFF               	movlw	-1
 23078  01AB12  006F FF8C  F00C    	movff	plusw1,btemp+11
 23079  01AB18  0E40               	movlw	64
 23080  01AB1A  240B               	addwf	(btemp+10)^0,w,c
 23081  01AB1C  6ED9               	movwf	fsr2l,c
 23082  01AB1E  0E00               	movlw	0
 23083  01AB20  200C               	addwfc	(btemp+11)^0,w,c
 23084  01AB22  6EDA               	movwf	fsr2h,c
 23085  01AB24  2ADF               	incf	indf2,f,c
 23086                           
 23087                           ;ringbufs.c: 72:   ++_this->count;
 23088                           ;stkvar	__this @ sp[(0)+-2]
 23089  01AB26  0EFE               	movlw	-2
 23090  01AB28  006F FF8C  F00B    	movff	plusw1,btemp+10
 23091  01AB2E  0EFF               	movlw	-1
 23092  01AB30  006F FF8C  F00C    	movff	plusw1,btemp+11
 23093  01AB36  0E42               	movlw	66
 23094  01AB38  240B               	addwf	(btemp+10)^0,w,c
 23095  01AB3A  6ED9               	movwf	fsr2l,c
 23096  01AB3C  0E00               	movlw	0
 23097  01AB3E  200C               	addwfc	(btemp+11)^0,w,c
 23098  01AB40  6EDA               	movwf	fsr2h,c
 23099  01AB42  2ADF               	incf	indf2,f,c
 23100  01AB44                     l1597:
 23101                           
 23102                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 23103  01AB44  52E5               	movf	postdec1,f,c
 23104  01AB46  52E5               	movf	postdec1,f,c
 23105  01AB48  52E5               	movf	postdec1,f,c
 23106  01AB4A  0012               	return		;funcret
 23107  01AB4C                     __end_of_ringBufS_put_dma:
 23108                           	opt callstack 0
 23109                           
 23110 ;; *************** function _atoi *****************
 23111 ;; Defined at:
 23112 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 23113 ;; Parameters:    Size  Location     Type
 23114 ;;  s               2  [STACK] PTR const unsigned char 
 23115 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 23116 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 23117 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 23118 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 23119 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 23120 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 23121 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 23122 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 23123 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 23124 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 23125 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 23126 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 23127 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 23128 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 23129 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 23130 ;; Auto vars:     Size  Location     Type
 23131 ;;  n               2  [STACK] int 
 23132 ;;  neg             2  [STACK] int 
 23133 ;; Return value:  Size  Location     Type
 23134 ;;                  2  [STACK] int 
 23135 ;; Registers used:
 23136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 23137 ;; Tracked objects:
 23138 ;;		On entry : 0/0
 23139 ;;		On exit  : 0/0
 23140 ;;		Unchanged: 0/0
 23141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23146 ;;Total ram usage:        0 bytes
 23147 ;; Hardware stack levels used:    1
 23148 ;; Hardware stack levels required when called:   16
 23149 ;; This function calls:
 23150 ;;		_isdigit
 23151 ;;		_isspace
 23152 ;; This function is called by:
 23153 ;;		_vfpfcnvrt
 23154 ;; This function uses a reentrant model
 23155 ;;
 23156                           
 23157                           	psect	text84
 23158  01799E                     __ptext84:
 23159                           	opt callstack 0
 23160  01799E                     _atoi:
 23161                           	opt callstack 0
 23162                           
 23163                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23164  01799E  0E09               	movlw	9
 23165  0179A0  26E1               	addwf	fsr1l,f,c
 23166  0179A2  0E00               	movlw	0
 23167  0179A4  22E2               	addwfc	fsr1h,f,c
 23168                           
 23169                           ;stkvar	_n @ sp[(-9)+5]
 23170                           
 23171                           ;incstack = 0
 23172 ;; hardware stack exceeded
 23173  0179A6  0EFC               	movlw	-4
 23174  0179A8  6AE3               	clrf	plusw1,c
 23175  0179AA  0EFD               	movlw	-3
 23176  0179AC  6AE3               	clrf	plusw1,c
 23177                           
 23178                           ;stkvar	_neg @ sp[(-9)+7]
 23179  0179AE  0EFE               	movlw	-2
 23180  0179B0  6AE3               	clrf	plusw1,c
 23181  0179B2  0EFF               	movlw	-1
 23182  0179B4  6AE3               	clrf	plusw1,c
 23183  0179B6  D011               	goto	l9489
 23184  0179B8                     l9487:
 23185                           
 23186                           ;stkvar	_s @ sp[(-9)+-2]
 23187  0179B8  0EF5               	movlw	-11
 23188  0179BA  50E3               	movf	plusw1,w,c
 23189  0179BC  0F01               	addlw	1
 23190  0179BE  6E01               	movwf	btemp^0,c
 23191  0179C0  0EF5               	movlw	-11
 23192  0179C2  0060  F007  FFE3   	movff	btemp,plusw1
 23193  0179C8  6A01               	clrf	btemp^0,c
 23194  0179CA  0EF6               	movlw	-10
 23195  0179CC  50E3               	movf	plusw1,w,c
 23196  0179CE  2001               	addwfc	btemp^0,w,c
 23197  0179D0  6E01               	movwf	btemp^0,c
 23198  0179D2  0EF6               	movlw	-10
 23199  0179D4  0060  F007  FFE3   	movff	btemp,plusw1
 23200  0179DA                     l9489:
 23201                           
 23202                           ;stkvar	_atoi$6266 @ sp[(-9)+4]
 23203  0179DA  0EFB               	movlw	-5
 23204  0179DC  6AE3               	clrf	plusw1,c
 23205  0179DE  2AE3               	incf	plusw1,f,c
 23206                           
 23207                           ;stkvar	_s @ sp[(-9)+-2]
 23208  0179E0  50E1               	movf	fsr1l,w,c
 23209  0179E2  0FF5               	addlw	-11
 23210  0179E4  6ED9               	movwf	fsr2l,c
 23211  0179E6  50E2               	movf	fsr1h,w,c
 23212  0179E8  6EDA               	movwf	fsr2h,c
 23213  0179EA  0EFF               	movlw	255
 23214  0179EC  22DA               	addwfc	fsr2h,f,c
 23215  0179EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 23216  0179F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 23217  0179FA                     	if	0	;tblptru may be non-zero
 23218  0179FA                     	endif
 23219  0179FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23220  0179FA  0E00               	movlw	low (__mediumconst shr (0+16))
 23221  0179FC  6EF8               	movwf	tblptru,c
 23222  0179FE                     	endif
 23223  0179FE  0008               	tblrd		*
 23224  017A00  50F5               	movf	tablat,w,c
 23225  017A02  0A20               	xorlw	32
 23226  017A04  B4D8               	btfsc	status,2,c
 23227  017A06  D023               	goto	l9497
 23228  017A08  0EF7               	movlw	247
 23229  017A0A  6E0B               	movwf	(btemp+10)^0,c
 23230  017A0C  0EFF               	movlw	255
 23231  017A0E  6E0C               	movwf	(btemp+11)^0,c
 23232                           
 23233                           ;stkvar	_s @ sp[(-9)+-2]
 23234  017A10  50E1               	movf	fsr1l,w,c
 23235  017A12  0FF5               	addlw	-11
 23236  017A14  6ED9               	movwf	fsr2l,c
 23237  017A16  50E2               	movf	fsr1h,w,c
 23238  017A18  6EDA               	movwf	fsr2h,c
 23239  017A1A  0EFF               	movlw	255
 23240  017A1C  22DA               	addwfc	fsr2h,f,c
 23241  017A1E  006F FF7B FFF6     	movff	postinc2,tblptrl
 23242  017A24  006F FF77 FFF7     	movff	postdec2,tblptrh
 23243  017A2A                     	if	0	;tblptru may be non-zero
 23244  017A2A                     	endif
 23245  017A2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23246  017A2A  0E00               	movlw	low (__mediumconst shr (0+16))
 23247  017A2C  6EF8               	movwf	tblptru,c
 23248  017A2E                     	endif
 23249  017A2E  0008               	tblrd		*
 23250  017A30  50F5               	movf	tablat,w,c
 23251  017A32  6E09               	movwf	(btemp+8)^0,c
 23252  017A34  6A0A               	clrf	(btemp+9)^0,c
 23253  017A36  500B               	movf	(btemp+10)^0,w,c
 23254  017A38  2609               	addwf	(btemp+8)^0,f,c
 23255  017A3A  500C               	movf	(btemp+11)^0,w,c
 23256  017A3C  220A               	addwfc	(btemp+9)^0,f,c
 23257  017A3E  500A               	movf	(btemp+9)^0,w,c
 23258  017A40  E104               	bnz	u8630
 23259  017A42  0E05               	movlw	5
 23260  017A44  5C09               	subwf	(btemp+8)^0,w,c
 23261  017A46  A0D8               	btfss	status,0,c
 23262  017A48  D002               	goto	l9497
 23263  017A4A                     u8630:
 23264                           
 23265                           ;stkvar	_atoi$6266 @ sp[(-9)+4]
 23266  017A4A  0EFB               	movlw	-5
 23267  017A4C  6AE3               	clrf	plusw1,c
 23268  017A4E                     l9497:
 23269                           
 23270                           ;stkvar	_atoi$6266 @ sp[(-9)+4]
 23271  017A4E  0EFB               	movlw	-5
 23272  017A50  50E3               	movf	plusw1,w,c
 23273  017A52  6E0B               	movwf	(btemp+10)^0,c
 23274  017A54  6A0C               	clrf	(btemp+11)^0,c
 23275                           
 23276                           ;stkvar	_atoi$6265 @ sp[(-9)+2]
 23277  017A56  0EF9               	movlw	-7
 23278  017A58  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23279  017A5E  0EFA               	movlw	-6
 23280  017A60  0060  F033  FFE3   	movff	btemp+11,plusw1
 23281                           
 23282                           ;stkvar	_atoi$6265 @ sp[(-9)+2]
 23283  017A66  0EF9               	movlw	-7
 23284  017A68  006F FF8C  F001    	movff	plusw1,btemp
 23285  017A6E  0EFA               	movlw	-6
 23286  017A70  50E3               	movf	plusw1,w,c
 23287  017A72  1001               	iorwf	btemp^0,w,c
 23288  017A74  B4D8               	btfsc	status,2,c
 23289  017A76  D01F               	goto	l9507
 23290  017A78  D79F               	goto	l9487
 23291  017A7A                     l9503:
 23292  017A7A  0E01               	movlw	1
 23293  017A7C  6E0B               	movwf	(btemp+10)^0,c
 23294  017A7E  0E00               	movlw	0
 23295  017A80  6E0C               	movwf	(btemp+11)^0,c
 23296                           
 23297                           ;stkvar	_neg @ sp[(-9)+7]
 23298  017A82  0EFE               	movlw	-2
 23299  017A84  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23300  017A8A  0EFF               	movlw	-1
 23301  017A8C  0060  F033  FFE3   	movff	btemp+11,plusw1
 23302  017A92                     l9505:
 23303                           
 23304                           ;stkvar	_s @ sp[(-9)+-2]
 23305  017A92  0EF5               	movlw	-11
 23306  017A94  50E3               	movf	plusw1,w,c
 23307  017A96  0F01               	addlw	1
 23308  017A98  6E01               	movwf	btemp^0,c
 23309  017A9A  0EF5               	movlw	-11
 23310  017A9C  0060  F007  FFE3   	movff	btemp,plusw1
 23311  017AA2  6A01               	clrf	btemp^0,c
 23312  017AA4  0EF6               	movlw	-10
 23313  017AA6  50E3               	movf	plusw1,w,c
 23314  017AA8  2001               	addwfc	btemp^0,w,c
 23315  017AAA  6E01               	movwf	btemp^0,c
 23316  017AAC  0EF6               	movlw	-10
 23317  017AAE  0060  F007  FFE3   	movff	btemp,plusw1
 23318  017AB4  D053               	goto	l9513
 23319  017AB6                     l9507:
 23320                           
 23321                           ;stkvar	_s @ sp[(-9)+-2]
 23322  017AB6  50E1               	movf	fsr1l,w,c
 23323  017AB8  0FF5               	addlw	-11
 23324  017ABA  6ED9               	movwf	fsr2l,c
 23325  017ABC  50E2               	movf	fsr1h,w,c
 23326  017ABE  6EDA               	movwf	fsr2h,c
 23327  017AC0  0EFF               	movlw	255
 23328  017AC2  22DA               	addwfc	fsr2h,f,c
 23329  017AC4  006F FF7B FFF6     	movff	postinc2,tblptrl
 23330  017ACA  006F FF77 FFF7     	movff	postdec2,tblptrh
 23331  017AD0                     	if	0	;tblptru may be non-zero
 23332  017AD0                     	endif
 23333  017AD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23334  017AD0  0E00               	movlw	low (__mediumconst shr (0+16))
 23335  017AD2  6EF8               	movwf	tblptru,c
 23336  017AD4                     	endif
 23337  017AD4  0008               	tblrd		*
 23338  017AD6  50F5               	movf	tablat,w,c
 23339  017AD8  6E0B               	movwf	(btemp+10)^0,c
 23340  017ADA  6A0C               	clrf	(btemp+11)^0,c
 23341                           
 23342                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23343                           ; Switch size 1, requested type "simple"
 23344                           ; Number of cases is 1, Range of values is 0 to 0
 23345                           ; switch strategies available:
 23346                           ; Name         Instructions Cycles
 23347                           ; simple_byte            4     3 (average)
 23348                           ;	Chosen strategy is simple_byte
 23349  017ADC  500C               	movf	(btemp+11)^0,w,c
 23350  017ADE  0A00               	xorlw	0	; case 0
 23351  017AE0  A4D8               	btfss	status,2,c
 23352  017AE2  D03C               	goto	l9513
 23353                           
 23354                           ; Switch size 1, requested type "simple"
 23355                           ; Number of cases is 2, Range of values is 43 to 45
 23356                           ; switch strategies available:
 23357                           ; Name         Instructions Cycles
 23358                           ; simple_byte            7     4 (average)
 23359                           ;	Chosen strategy is simple_byte
 23360  017AE4  500B               	movf	(btemp+10)^0,w,c
 23361  017AE6  0A2B               	xorlw	43	; case 43
 23362  017AE8  B4D8               	btfsc	status,2,c
 23363  017AEA  D7D3               	goto	l9505
 23364  017AEC  0A06               	xorlw	6	; case 45
 23365  017AEE  B4D8               	btfsc	status,2,c
 23366  017AF0  D7C4               	goto	l9503
 23367  017AF2  D034               	goto	l9513
 23368  017AF4                     l9509:
 23369                           
 23370                           ;stkvar	_n @ sp[(-9)+5]
 23371  017AF4  0EFC               	movlw	-4
 23372  017AF6  006F FF8C  F00B    	movff	plusw1,btemp+10
 23373  017AFC  0EFD               	movlw	-3
 23374  017AFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 23375  017B04  0E0A               	movlw	10
 23376  017B06  020B               	mulwf	(btemp+10)^0,c
 23377  017B08  006F FFCC  F009    	movff	prodl,btemp+8
 23378  017B0E  006F FFD0  F00A    	movff	prodh,btemp+9
 23379  017B14  020C               	mulwf	(btemp+11)^0,c
 23380  017B16  50F3               	movf	prodl,w,c
 23381  017B18  260A               	addwf	(btemp+9)^0,f,c
 23382                           
 23383                           ;stkvar	_s @ sp[(-9)+-2]
 23384  017B1A  50E1               	movf	fsr1l,w,c
 23385  017B1C  0FF5               	addlw	-11
 23386  017B1E  6ED9               	movwf	fsr2l,c
 23387  017B20  50E2               	movf	fsr1h,w,c
 23388  017B22  6EDA               	movwf	fsr2h,c
 23389  017B24  0EFF               	movlw	255
 23390  017B26  22DA               	addwfc	fsr2h,f,c
 23391  017B28  006F FF7B FFF6     	movff	postinc2,tblptrl
 23392  017B2E  006F FF77 FFF7     	movff	postdec2,tblptrh
 23393  017B34                     	if	0	;tblptru may be non-zero
 23394  017B34                     	endif
 23395  017B34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23396  017B34  0E00               	movlw	low (__mediumconst shr (0+16))
 23397  017B36  6EF8               	movwf	tblptru,c
 23398  017B38                     	endif
 23399  017B38  0008               	tblrd		*
 23400  017B3A  50F5               	movf	tablat,w,c
 23401  017B3C  5E09               	subwf	(btemp+8)^0,f,c
 23402  017B3E  0E00               	movlw	0
 23403  017B40  5A0A               	subwfb	(btemp+9)^0,f,c
 23404  017B42  0E30               	movlw	48
 23405  017B44  2609               	addwf	(btemp+8)^0,f,c
 23406  017B46  0E00               	movlw	0
 23407  017B48  220A               	addwfc	(btemp+9)^0,f,c
 23408                           
 23409                           ;stkvar	_n @ sp[(-9)+5]
 23410  017B4A  0EFC               	movlw	-4
 23411  017B4C  0060  F027  FFE3   	movff	btemp+8,plusw1
 23412  017B52  0EFD               	movlw	-3
 23413  017B54  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23414  017B5A  D79B               	goto	l9505
 23415  017B5C                     l9513:
 23416  017B5C  0ED0               	movlw	208
 23417  017B5E  6E0B               	movwf	(btemp+10)^0,c
 23418  017B60  0EFF               	movlw	255
 23419  017B62  6E0C               	movwf	(btemp+11)^0,c
 23420                           
 23421                           ;stkvar	_s @ sp[(-9)+-2]
 23422  017B64  50E1               	movf	fsr1l,w,c
 23423  017B66  0FF5               	addlw	-11
 23424  017B68  6ED9               	movwf	fsr2l,c
 23425  017B6A  50E2               	movf	fsr1h,w,c
 23426  017B6C  6EDA               	movwf	fsr2h,c
 23427  017B6E  0EFF               	movlw	255
 23428  017B70  22DA               	addwfc	fsr2h,f,c
 23429  017B72  006F FF7B FFF6     	movff	postinc2,tblptrl
 23430  017B78  006F FF77 FFF7     	movff	postdec2,tblptrh
 23431  017B7E                     	if	0	;tblptru may be non-zero
 23432  017B7E                     	endif
 23433  017B7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23434  017B7E  0E00               	movlw	low (__mediumconst shr (0+16))
 23435  017B80  6EF8               	movwf	tblptru,c
 23436  017B82                     	endif
 23437  017B82  0008               	tblrd		*
 23438  017B84  50F5               	movf	tablat,w,c
 23439  017B86  6E09               	movwf	(btemp+8)^0,c
 23440  017B88  6A0A               	clrf	(btemp+9)^0,c
 23441  017B8A  500B               	movf	(btemp+10)^0,w,c
 23442  017B8C  2609               	addwf	(btemp+8)^0,f,c
 23443  017B8E  500C               	movf	(btemp+11)^0,w,c
 23444  017B90  220A               	addwfc	(btemp+9)^0,f,c
 23445  017B92  500A               	movf	(btemp+9)^0,w,c
 23446  017B94  E106               	bnz	u8650
 23447  017B96  0E0A               	movlw	10
 23448  017B98  5C09               	subwf	(btemp+8)^0,w,c
 23449  017B9A  B0D8               	btfsc	status,0,c
 23450  017B9C  D002               	goto	u8650
 23451  017B9E  0E01               	movlw	1
 23452  017BA0  D001               	goto	u8660
 23453  017BA2                     u8650:
 23454  017BA2  0E00               	movlw	0
 23455  017BA4                     u8660:
 23456  017BA4  6E0B               	movwf	(btemp+10)^0,c
 23457  017BA6  6A0C               	clrf	(btemp+11)^0,c
 23458                           
 23459                           ;stkvar	_atoi$6267 @ sp[(-9)+0]
 23460  017BA8  0EF7               	movlw	-9
 23461  017BAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23462  017BB0  0EF8               	movlw	-8
 23463  017BB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 23464                           
 23465                           ;stkvar	_atoi$6267 @ sp[(-9)+0]
 23466  017BB8  0EF7               	movlw	-9
 23467  017BBA  006F FF8C  F001    	movff	plusw1,btemp
 23468  017BC0  0EF8               	movlw	-8
 23469  017BC2  50E3               	movf	plusw1,w,c
 23470  017BC4  1001               	iorwf	btemp^0,w,c
 23471  017BC6  A4D8               	btfss	status,2,c
 23472  017BC8  D795               	goto	l9509
 23473                           
 23474                           ;stkvar	_neg @ sp[(-9)+7]
 23475  017BCA  0EFE               	movlw	-2
 23476  017BCC  006F FF8C  F001    	movff	plusw1,btemp
 23477  017BD2  0EFF               	movlw	-1
 23478  017BD4  50E3               	movf	plusw1,w,c
 23479  017BD6  1001               	iorwf	btemp^0,w,c
 23480  017BD8  A4D8               	btfss	status,2,c
 23481  017BDA  D00E               	goto	l9523
 23482                           
 23483                           ;stkvar	_n @ sp[(-9)+5]
 23484  017BDC  0EFC               	movlw	-4
 23485  017BDE  006F FF8C  F001    	movff	plusw1,btemp
 23486  017BE4  1E01               	comf	btemp^0,f,c
 23487  017BE6  0EFD               	movlw	-3
 23488  017BE8  006F FF8C  F002    	movff	plusw1,btemp+1
 23489  017BEE  1E02               	comf	(btemp+1)^0,f,c
 23490  017BF0  2A01               	incf	btemp^0,f,c
 23491  017BF2  B4D8               	btfsc	status,2,c
 23492  017BF4  2A02               	incf	(btemp+1)^0,f,c
 23493  017BF6  D008               	goto	l3196
 23494  017BF8                     l9523:
 23495                           
 23496                           ;stkvar	_n @ sp[(-9)+5]
 23497  017BF8  0EFC               	movlw	-4
 23498  017BFA  006F FF8C  F001    	movff	plusw1,btemp
 23499  017C00  0EFD               	movlw	-3
 23500  017C02  006F FF8C  F002    	movff	plusw1,btemp+1
 23501  017C08                     l3196:
 23502                           
 23503                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 23504  017C08  0EF5               	movlw	245
 23505  017C0A  26E1               	addwf	fsr1l,f,c
 23506  017C0C  0EFF               	movlw	255
 23507  017C0E  22E2               	addwfc	fsr1h,f,c
 23508  017C10  0012               	return		;funcret
 23509  017C12                     __end_of_atoi:
 23510                           	opt callstack 0
 23511                           
 23512 ;; *************** function _isspace *****************
 23513 ;; Defined at:
 23514 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 23515 ;; Parameters:    Size  Location     Type
 23516 ;;  c               2  [STACK] int 
 23517 ;; Auto vars:     Size  Location     Type
 23518 ;;		None
 23519 ;; Return value:  Size  Location     Type
 23520 ;;                  2  [STACK] int 
 23521 ;; Registers used:
 23522 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 23523 ;; Tracked objects:
 23524 ;;		On entry : 0/0
 23525 ;;		On exit  : 0/0
 23526 ;;		Unchanged: 0/0
 23527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23532 ;;Total ram usage:        0 bytes
 23533 ;; Hardware stack levels used:    1
 23534 ;; Hardware stack levels required when called:   15
 23535 ;; This function calls:
 23536 ;;		Nothing
 23537 ;; This function is called by:
 23538 ;;		_atoi
 23539 ;; This function uses a reentrant model
 23540 ;;
 23541                           
 23542                           	psect	text85
 23543  01B69E                     __ptext85:
 23544                           	opt callstack 0
 23545  01B69E                     _isspace:
 23546                           	opt callstack 0
 23547                           
 23548                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23549  01B69E  52E6               	movf	postinc1,f,c
 23550                           
 23551                           ;stkvar	_isspace$6316 @ sp[(-1)+0]
 23552                           
 23553                           ;incstack = 0
 23554 ;; hardware stack exceeded
 23555  01B6A0  0EFF               	movlw	-1
 23556  01B6A2  6AE3               	clrf	plusw1,c
 23557  01B6A4  2AE3               	incf	plusw1,f,c
 23558                           
 23559                           ;stkvar	_c @ sp[(-1)+-2]
 23560  01B6A6  0EFD               	movlw	-3
 23561  01B6A8  006F FF8C  F001    	movff	plusw1,btemp
 23562  01B6AE  0E20               	movlw	32
 23563  01B6B0  1801               	xorwf	btemp^0,w,c
 23564  01B6B2  E104               	bnz	u7520
 23565  01B6B4  0EFE               	movlw	-2
 23566  01B6B6  50E3               	movf	plusw1,w,c
 23567  01B6B8  B4D8               	btfsc	status,2,c
 23568  01B6BA  D012               	goto	l8907
 23569  01B6BC                     u7520:
 23570                           
 23571                           ;stkvar	_c @ sp[(-1)+-2]
 23572  01B6BC  0EFD               	movlw	-3
 23573  01B6BE  50E3               	movf	plusw1,w,c
 23574  01B6C0  0FF7               	addlw	247
 23575  01B6C2  6E0B               	movwf	(btemp+10)^0,c
 23576  01B6C4  0EFE               	movlw	-2
 23577  01B6C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 23578  01B6CC  0EFF               	movlw	255
 23579  01B6CE  220C               	addwfc	(btemp+11)^0,f,c
 23580  01B6D0  500C               	movf	(btemp+11)^0,w,c
 23581  01B6D2  E104               	bnz	u7530
 23582  01B6D4  0E05               	movlw	5
 23583  01B6D6  5C0B               	subwf	(btemp+10)^0,w,c
 23584  01B6D8  A0D8               	btfss	status,0,c
 23585  01B6DA  D002               	goto	l8907
 23586  01B6DC                     u7530:
 23587                           
 23588                           ;stkvar	_isspace$6316 @ sp[(-1)+0]
 23589  01B6DC  0EFF               	movlw	-1
 23590  01B6DE  6AE3               	clrf	plusw1,c
 23591  01B6E0                     l8907:
 23592                           
 23593                           ;stkvar	_isspace$6316 @ sp[(-1)+0]
 23594  01B6E0  0EFF               	movlw	-1
 23595  01B6E2  50E3               	movf	plusw1,w,c
 23596  01B6E4  6E01               	movwf	btemp^0,c
 23597  01B6E6  6A02               	clrf	(btemp+1)^0,c
 23598                           
 23599                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 23600  01B6E8  52E5               	movf	postdec1,f,c
 23601  01B6EA  52E5               	movf	postdec1,f,c
 23602  01B6EC  52E5               	movf	postdec1,f,c
 23603  01B6EE  0012               	return		;funcret
 23604  01B6F0                     __end_of_isspace:
 23605                           	opt callstack 0
 23606                           
 23607 ;; *************** function _isdigit *****************
 23608 ;; Defined at:
 23609 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 23610 ;; Parameters:    Size  Location     Type
 23611 ;;  c               2  [STACK] int 
 23612 ;; Auto vars:     Size  Location     Type
 23613 ;;		None
 23614 ;; Return value:  Size  Location     Type
 23615 ;;                  2  [STACK] int 
 23616 ;; Registers used:
 23617 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 23618 ;; Tracked objects:
 23619 ;;		On entry : 0/0
 23620 ;;		On exit  : 0/0
 23621 ;;		Unchanged: 0/0
 23622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23627 ;;Total ram usage:        0 bytes
 23628 ;; Hardware stack levels used:    1
 23629 ;; Hardware stack levels required when called:   15
 23630 ;; This function calls:
 23631 ;;		Nothing
 23632 ;; This function is called by:
 23633 ;;		_vfpfcnvrt
 23634 ;;		_atoi
 23635 ;; This function uses a reentrant model
 23636 ;;
 23637                           
 23638                           	psect	text86
 23639  01BE90                     __ptext86:
 23640                           	opt callstack 0
 23641  01BE90                     _isdigit:
 23642                           	opt callstack 0
 23643                           
 23644                           ;stkvar	_c @ sp[(0)+-2]
 23645                           
 23646                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23647                           ;incstack = 0
 23648 ;; hardware stack exceeded
 23649  01BE90  0EFE               	movlw	-2
 23650  01BE92  50E3               	movf	plusw1,w,c
 23651  01BE94  0FD0               	addlw	208
 23652  01BE96  6E0B               	movwf	(btemp+10)^0,c
 23653  01BE98  0EFF               	movlw	-1
 23654  01BE9A  006F FF8C  F00C    	movff	plusw1,btemp+11
 23655  01BEA0  0EFF               	movlw	255
 23656  01BEA2  220C               	addwfc	(btemp+11)^0,f,c
 23657  01BEA4  500C               	movf	(btemp+11)^0,w,c
 23658  01BEA6  E106               	bnz	u6370
 23659  01BEA8  0E0A               	movlw	10
 23660  01BEAA  5C0B               	subwf	(btemp+10)^0,w,c
 23661  01BEAC  B0D8               	btfsc	status,0,c
 23662  01BEAE  D002               	goto	u6370
 23663  01BEB0  0E01               	movlw	1
 23664  01BEB2  D001               	goto	u6380
 23665  01BEB4                     u6370:
 23666  01BEB4  0E00               	movlw	0
 23667  01BEB6                     u6380:
 23668  01BEB6  6E01               	movwf	btemp^0,c
 23669  01BEB8  6A02               	clrf	(btemp+1)^0,c
 23670                           
 23671                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 23672  01BEBA  52E5               	movf	postdec1,f,c
 23673  01BEBC  52E5               	movf	postdec1,f,c
 23674  01BEBE  0012               	return		;funcret
 23675  01BEC0                     __end_of_isdigit:
 23676                           	opt callstack 0
 23677                           
 23678 ;; *************** function _set_vterm *****************
 23679 ;; Defined at:
 23680 ;;		line 107 in file "mconfig.c"
 23681 ;; Parameters:    Size  Location     Type
 23682 ;;  vterm           1  [STACK] const unsigned char 
 23683 ;; Auto vars:     Size  Location     Type
 23684 ;;		None
 23685 ;; Return value:  Size  Location     Type
 23686 ;;                  1  [STACK] unsigned char 
 23687 ;; Registers used:
 23688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 23689 ;; Tracked objects:
 23690 ;;		On entry : 0/1
 23691 ;;		On exit  : 0/0
 23692 ;;		Unchanged: 0/0
 23693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23698 ;;Total ram usage:        0 bytes
 23699 ;; Hardware stack levels used:    1
 23700 ;; Hardware stack levels required when called:   15
 23701 ;; This function calls:
 23702 ;;		Nothing
 23703 ;; This function is called by:
 23704 ;;		_main
 23705 ;;		_check_help
 23706 ;; This function uses a reentrant model
 23707 ;;
 23708                           
 23709                           	psect	text87
 23710  01C3B2                     __ptext87:
 23711                           	opt callstack 0
 23712  01C3B2                     _set_vterm:
 23713                           	opt callstack 15
 23714                           
 23715                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 23716                           ;stkvar	_vterm @ sp[(0)+-1]
 23717                           
 23718                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23719                           ;incstack = 0
 23720  01C3B2  0EFF               	movlw	-1
 23721  01C3B4  006F FF8C  F00C    	movff	plusw1,btemp+11
 23722  01C3BA  0E03               	movlw	3
 23723  01C3BC  160C               	andwf	(btemp+11)^0,f,c
 23724  01C3BE  EE22  F20A         	lfsr	2,_D+480
 23725  01C3C2  50DF               	movf	223,w,c
 23726  01C3C4  180C               	xorwf	(btemp+11)^0,w,c
 23727  01C3C6  0BFE               	andlw	-2
 23728  01C3C8  180C               	xorwf	(btemp+11)^0,w,c
 23729  01C3CA  6EDF               	movwf	223,c
 23730                           
 23731                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 23732  01C3CC  52E5               	movf	postdec1,f,c
 23733  01C3CE  0012               	return		;funcret
 23734  01C3D0                     __end_of_set_vterm:
 23735                           	opt callstack 0
 23736                           
 23737 ;; *************** function _set_temp_display_help *****************
 23738 ;; Defined at:
 23739 ;;		line 211 in file "mconfig.c"
 23740 ;; Parameters:    Size  Location     Type
 23741 ;;  new_response    1  [STACK] const enum E16509
 23742 ;; Auto vars:     Size  Location     Type
 23743 ;;		None
 23744 ;; Return value:  Size  Location     Type
 23745 ;;                  1  [STACK] enum E16509
 23746 ;; Registers used:
 23747 ;;		wreg, fsr1l, fsr1h
 23748 ;; Tracked objects:
 23749 ;;		On entry : 0/1
 23750 ;;		On exit  : 3F/1
 23751 ;;		Unchanged: 0/0
 23752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23757 ;;Total ram usage:        0 bytes
 23758 ;; Hardware stack levels used:    1
 23759 ;; Hardware stack levels required when called:   15
 23760 ;; This function calls:
 23761 ;;		Nothing
 23762 ;; This function is called by:
 23763 ;;		_check_help
 23764 ;; This function uses a reentrant model
 23765 ;;
 23766                           
 23767                           	psect	text88
 23768  01C4FA                     __ptext88:
 23769                           	opt callstack 0
 23770  01C4FA                     _set_temp_display_help:
 23771                           	opt callstack 14
 23772                           
 23773                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 23774                           
 23775                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23776                           ;incstack = 0
 23777  01C4FA  0101               	movlb	1	; () banked
 23778  01C4FC  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 23779                           
 23780                           ; BSR set to: 1
 23781                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 23782                           ;stkvar	_new_response_info @ sp[(0)+-1]
 23783  01C4FE  0EFF               	movlw	-1
 23784  01C500  006F FF8C  F1AC    	movff	plusw1,_V+165	;volatile
 23785                           
 23786                           ; BSR set to: 1
 23787                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 23788  01C506  52E5               	movf	postdec1,f,c
 23789  01C508  0012               	return		;funcret
 23790  01C50A                     __end_of_set_temp_display_help:
 23791                           	opt callstack 0
 23792                           
 23793 ;; *************** function _set_display_info *****************
 23794 ;; Defined at:
 23795 ;;		line 200 in file "mconfig.c"
 23796 ;; Parameters:    Size  Location     Type
 23797 ;;  new_response    1  [STACK] const enum E16509
 23798 ;; Auto vars:     Size  Location     Type
 23799 ;;		None
 23800 ;; Return value:  Size  Location     Type
 23801 ;;                  1  [STACK] enum E16994
 23802 ;; Registers used:
 23803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23804 ;; Tracked objects:
 23805 ;;		On entry : 0/1
 23806 ;;		On exit  : 0/0
 23807 ;;		Unchanged: 0/0
 23808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23813 ;;Total ram usage:        0 bytes
 23814 ;; Hardware stack levels used:    1
 23815 ;; Hardware stack levels required when called:   16
 23816 ;; This function calls:
 23817 ;;		_TimerDone
 23818 ;; This function is called by:
 23819 ;;		_main
 23820 ;;		_check_help
 23821 ;; This function uses a reentrant model
 23822 ;;
 23823                           
 23824                           	psect	text89
 23825  01C3D0                     __ptext89:
 23826                           	opt callstack 0
 23827  01C3D0                     _set_display_info:
 23828                           	opt callstack 14
 23829                           
 23830                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 23831                           
 23832                           ; BSR set to: 1
 23833                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23834                           ;incstack = 0
 23835  01C3D0  0E07               	movlw	7
 23836  01C3D2  6EE6               	movwf	postinc1,c
 23837  01C3D4  ECE3  F0DF         	call	_TimerDone	;wreg free
 23838  01C3D8  5001               	movf	btemp^0,w,c
 23839  01C3DA  B4D8               	btfsc	status,2,c
 23840  01C3DC  D006               	goto	l1732
 23841                           
 23842                           ;mconfig.c: 205:   old_info = V.response.info;
 23843  01C3DE  0101               	movlb	1	; () banked
 23844  01C3E0  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 23845                           
 23846                           ; BSR set to: 1
 23847                           ;mconfig.c: 206:   V.response.info = new_response_info;
 23848                           ;stkvar	_new_response_info @ sp[(0)+-1]
 23849  01C3E2  0EFF               	movlw	-1
 23850  01C3E4  006F FF8C  F1AB    	movff	plusw1,_V+164	;volatile
 23851  01C3EA                     l1732:
 23852                           
 23853                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 23854  01C3EA  52E5               	movf	postdec1,f,c
 23855  01C3EC  0012               	return		;funcret
 23856  01C3EE                     __end_of_set_display_info:
 23857                           	opt callstack 0
 23858                           
 23859 ;; *************** function _mode_lamp_dim *****************
 23860 ;; Defined at:
 23861 ;;		line 13 in file "mconfig.c"
 23862 ;; Parameters:    Size  Location     Type
 23863 ;;  level           2  [STACK] const unsigned short 
 23864 ;; Auto vars:     Size  Location     Type
 23865 ;;		None
 23866 ;; Return value:  Size  Location     Type
 23867 ;;                  1  [STACK] void 
 23868 ;; Registers used:
 23869 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23870 ;; Tracked objects:
 23871 ;;		On entry : 0/1
 23872 ;;		On exit  : 0/0
 23873 ;;		Unchanged: 0/0
 23874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23879 ;;Total ram usage:        0 bytes
 23880 ;; Hardware stack levels used:    1
 23881 ;; Hardware stack levels required when called:   16
 23882 ;; This function calls:
 23883 ;;		_PWM8_LoadDutyValue
 23884 ;; This function is called by:
 23885 ;;		_main
 23886 ;;		_check_help
 23887 ;; This function uses a reentrant model
 23888 ;;
 23889                           
 23890                           	psect	text90
 23891  01C442                     __ptext90:
 23892                           	opt callstack 0
 23893  01C442                     _mode_lamp_dim:
 23894                           	opt callstack 14
 23895                           
 23896                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 23897                           ;stkvar	_level @ sp[(0)+-2]
 23898                           
 23899                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23900                           ;incstack = 0
 23901  01C442  0EFE               	movlw	-2
 23902  01C444  006F FF8F FFE6     	movff	plusw1,postinc1
 23903  01C44A  006F FF8F FFE6     	movff	plusw1,postinc1
 23904  01C450  EC2D  F0DD         	call	_PWM8_LoadDutyValue	;wreg free
 23905                           
 23906                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 23907  01C454  52E5               	movf	postdec1,f,c
 23908  01C456  52E5               	movf	postdec1,f,c
 23909  01C458  0012               	return		;funcret
 23910  01C45A                     __end_of_mode_lamp_dim:
 23911                           	opt callstack 0
 23912                           
 23913 ;; *************** function _mode_lamp_bright *****************
 23914 ;; Defined at:
 23915 ;;		line 18 in file "mconfig.c"
 23916 ;; Parameters:    Size  Location     Type
 23917 ;;		None
 23918 ;; Auto vars:     Size  Location     Type
 23919 ;;		None
 23920 ;; Return value:  Size  Location     Type
 23921 ;;                  1  [STACK] void 
 23922 ;; Registers used:
 23923 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23924 ;; Tracked objects:
 23925 ;;		On entry : 0/0
 23926 ;;		On exit  : 0/0
 23927 ;;		Unchanged: 0/0
 23928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23933 ;;Total ram usage:        0 bytes
 23934 ;; Hardware stack levels used:    1
 23935 ;; Hardware stack levels required when called:   16
 23936 ;; This function calls:
 23937 ;;		_PWM8_LoadDutyValue
 23938 ;; This function is called by:
 23939 ;;		_check_help
 23940 ;; This function uses a reentrant model
 23941 ;;
 23942                           
 23943                           	psect	text91
 23944  01C528                     __ptext91:
 23945                           	opt callstack 0
 23946  01C528                     _mode_lamp_bright:
 23947                           	opt callstack 13
 23948                           
 23949                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 23950                           
 23951                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23952                           ;incstack = 0
 23953  01C528  0E2C               	movlw	44
 23954  01C52A  6EE6               	movwf	postinc1,c
 23955  01C52C  0E01               	movlw	1
 23956  01C52E  6EE6               	movwf	postinc1,c
 23957  01C530  EC2D  F0DD         	call	_PWM8_LoadDutyValue	;wreg free
 23958                           
 23959                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23960  01C534  0012               	return		;funcret
 23961  01C536                     __end_of_mode_lamp_bright:
 23962                           	opt callstack 0
 23963                           
 23964 ;; *************** function _PWM8_LoadDutyValue *****************
 23965 ;; Defined at:
 23966 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 23967 ;; Parameters:    Size  Location     Type
 23968 ;;  dutyValue       2  [STACK] unsigned short 
 23969 ;; Auto vars:     Size  Location     Type
 23970 ;;		None
 23971 ;; Return value:  Size  Location     Type
 23972 ;;                  1  [STACK] void 
 23973 ;; Registers used:
 23974 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23975 ;; Tracked objects:
 23976 ;;		On entry : 0/1
 23977 ;;		On exit  : 0/0
 23978 ;;		Unchanged: 0/0
 23979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23984 ;;Total ram usage:        0 bytes
 23985 ;; Hardware stack levels used:    1
 23986 ;; Hardware stack levels required when called:   15
 23987 ;; This function calls:
 23988 ;;		Nothing
 23989 ;; This function is called by:
 23990 ;;		_mode_lamp_dim
 23991 ;;		_mode_lamp_bright
 23992 ;; This function uses a reentrant model
 23993 ;;
 23994                           
 23995                           	psect	text92
 23996  01BA5A                     __ptext92:
 23997                           	opt callstack 0
 23998  01BA5A                     _PWM8_LoadDutyValue:
 23999                           	opt callstack 14
 24000                           
 24001                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 24002                           ;stkvar	_dutyValue @ sp[(0)+-2]
 24003                           
 24004                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24005                           ;incstack = 0
 24006  01BA5A  0EFE               	movlw	-2
 24007  01BA5C  006F FF8C  F00B    	movff	plusw1,btemp+10
 24008  01BA62  0EFF               	movlw	-1
 24009  01BA64  006F FF8C  F00C    	movff	plusw1,btemp+11
 24010  01BA6A  90D8               	bcf	status,0,c
 24011  01BA6C  320C               	rrcf	(btemp+11)^0,f,c
 24012  01BA6E  320B               	rrcf	(btemp+10)^0,f,c
 24013  01BA70  90D8               	bcf	status,0,c
 24014  01BA72  320C               	rrcf	(btemp+11)^0,f,c
 24015  01BA74  320B               	rrcf	(btemp+10)^0,f,c
 24016  01BA76  500B               	movf	(btemp+10)^0,w,c
 24017  01BA78  6E61               	movwf	97,c	;volatile
 24018                           
 24019                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 24020                           ;stkvar	_dutyValue @ sp[(0)+-2]
 24021  01BA7A  0EFE               	movlw	-2
 24022  01BA7C  006F FF8C  F00C    	movff	plusw1,btemp+11
 24023  01BA82  0E03               	movlw	3
 24024  01BA84  160C               	andwf	(btemp+11)^0,f,c
 24025  01BA86  0E06               	movlw	6
 24026  01BA88  6E01               	movwf	btemp^0,c
 24027  01BA8A                     u9475:
 24028  01BA8A  90D8               	bcf	status,0,c
 24029  01BA8C  360C               	rlcf	(btemp+11)^0,f,c
 24030  01BA8E  2E01               	decfsz	btemp^0,f,c
 24031  01BA90  D7FC               	goto	u9475
 24032  01BA92  500C               	movf	(btemp+11)^0,w,c
 24033  01BA94  6E60               	movwf	96,c	;volatile
 24034                           
 24035                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 24036  01BA96  52E5               	movf	postdec1,f,c
 24037  01BA98  52E5               	movf	postdec1,f,c
 24038  01BA9A  0012               	return		;funcret
 24039  01BA9C                     __end_of_PWM8_LoadDutyValue:
 24040                           	opt callstack 0
 24041                           
 24042 ;; *************** function _help_button *****************
 24043 ;; Defined at:
 24044 ;;		line 26 in file "mconfig.c"
 24045 ;; Parameters:    Size  Location     Type
 24046 ;;		None
 24047 ;; Auto vars:     Size  Location     Type
 24048 ;;		None
 24049 ;; Return value:  Size  Location     Type
 24050 ;;                  1  [STACK] _Bool 
 24051 ;; Registers used:
 24052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24053 ;; Tracked objects:
 24054 ;;		On entry : 0/1
 24055 ;;		On exit  : 0/0
 24056 ;;		Unchanged: 0/0
 24057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24062 ;;Total ram usage:        0 bytes
 24063 ;; Hardware stack levels used:    1
 24064 ;; Hardware stack levels required when called:   16
 24065 ;; This function calls:
 24066 ;;		_StartTimer
 24067 ;;		_TimerDone
 24068 ;; This function is called by:
 24069 ;;		_check_help
 24070 ;; This function uses a reentrant model
 24071 ;;
 24072                           
 24073                           	psect	text93
 24074  01BC54                     __ptext93:
 24075                           	opt callstack 0
 24076  01BC54                     _help_button:
 24077                           	opt callstack 13
 24078                           
 24079                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 24080                           
 24081                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24082                           ;incstack = 0
 24083  01BC54  B0CB               	btfsc	203,0,c	;volatile
 24084  01BC56  D00C               	goto	l1675
 24085                           
 24086                           ;mconfig.c: 29:   V.help = 1;
 24087  01BC58  0101               	movlb	1	; () banked
 24088  01BC5A  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 24089                           
 24090                           ; BSR set to: 1
 24091                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 24092  01BC5C  0E08               	movlw	8
 24093  01BC5E  6EE6               	movwf	postinc1,c
 24094  01BC60  ECE3  F0DF         	call	_TimerDone	;wreg free
 24095  01BC64  5001               	movf	btemp^0,w,c
 24096  01BC66  B4D8               	btfsc	status,2,c
 24097  01BC68  D003               	goto	l1675
 24098                           
 24099                           ;mconfig.c: 31:    return 1;
 24100  01BC6A  0E01               	movlw	1
 24101  01BC6C  6E01               	movwf	btemp^0,c
 24102  01BC6E  0012               	return	
 24103  01BC70                     l1675:
 24104                           
 24105                           ;mconfig.c: 34:  if (!V.help)
 24106  01BC70  0101               	movlb	1	; () banked
 24107  01BC72  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 24108  01BC74  D008               	goto	l10635
 24109                           
 24110                           ; BSR set to: 1
 24111                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 24112  01BC76  0E2C               	movlw	44
 24113  01BC78  6EE6               	movwf	postinc1,c
 24114  01BC7A  0E01               	movlw	1
 24115  01BC7C  6EE6               	movwf	postinc1,c
 24116  01BC7E  0E08               	movlw	8
 24117  01BC80  6EE6               	movwf	postinc1,c
 24118  01BC82  EC8E  F0DD         	call	_StartTimer	;wreg free
 24119  01BC86                     l10635:
 24120                           
 24121                           ;mconfig.c: 37:  return 0;
 24122  01BC86  0E00               	movlw	0
 24123  01BC88  6E01               	movwf	btemp^0,c
 24124                           
 24125                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 24126  01BC8A  0012               	return		;funcret
 24127  01BC8C                     __end_of_help_button:
 24128                           	opt callstack 0
 24129                           
 24130 ;; *************** function _TimerDone *****************
 24131 ;; Defined at:
 24132 ;;		line 20 in file "timers.c"
 24133 ;; Parameters:    Size  Location     Type
 24134 ;;  timer           1  [STACK] const unsigned char 
 24135 ;; Auto vars:     Size  Location     Type
 24136 ;;		None
 24137 ;; Return value:  Size  Location     Type
 24138 ;;                  1  [STACK] _Bool 
 24139 ;; Registers used:
 24140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 24141 ;; Tracked objects:
 24142 ;;		On entry : 0/1
 24143 ;;		On exit  : 0/0
 24144 ;;		Unchanged: 0/0
 24145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24150 ;;Total ram usage:        0 bytes
 24151 ;; Hardware stack levels used:    1
 24152 ;; Hardware stack levels required when called:   15
 24153 ;; This function calls:
 24154 ;;		Nothing
 24155 ;; This function is called by:
 24156 ;;		_main
 24157 ;;		_WaitMs
 24158 ;;		_help_button
 24159 ;;		_check_help
 24160 ;;		_set_display_info
 24161 ;;		_update_adc_result
 24162 ;;		_esr_check
 24163 ;; This function uses a reentrant model
 24164 ;;
 24165                           
 24166                           	psect	text94
 24167  01BFC6                     __ptext94:
 24168                           	opt callstack 0
 24169  01BFC6                     _TimerDone:
 24170                           	opt callstack 14
 24171                           
 24172                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24173                           ;incstack = 0
 24174  01BFC6  0004               	clrwdt		;# 
 24175                           
 24176                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 24177                           ;stkvar	_timer @ sp[(0)+-1]
 24178  01BFC8  0EFF               	movlw	-1
 24179  01BFCA  50E3               	movf	plusw1,w,c
 24180  01BFCC  0D02               	mullw	2
 24181  01BFCE  0E7D               	movlw	low _tickCount
 24182  01BFD0  24F3               	addwf	243,w,c
 24183  01BFD2  6ED9               	movwf	fsr2l,c
 24184  01BFD4  0E02               	movlw	high _tickCount
 24185  01BFD6  20F4               	addwfc	prodh,w,c
 24186  01BFD8  6EDA               	movwf	fsr2h,c
 24187  01BFDA  50DE               	movf	postinc2,w,c
 24188  01BFDC  10DE               	iorwf	postinc2,w,c
 24189  01BFDE  A4D8               	btfss	status,2,c
 24190  01BFE0  D002               	goto	l9921
 24191                           
 24192                           ;timers.c: 24:   return 1;
 24193  01BFE2  0E01               	movlw	1
 24194  01BFE4  D001               	goto	L28
 24195  01BFE6                     l9921:
 24196                           
 24197                           ;timers.c: 26:  return 0;
 24198  01BFE6  0E00               	movlw	0
 24199  01BFE8                     L28:
 24200  01BFE8  6E01               	movwf	btemp^0,c
 24201                           
 24202                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 24203  01BFEA  52E5               	movf	postdec1,f,c
 24204  01BFEC  0012               	return		;funcret
 24205  01BFEE                     __end_of_TimerDone:
 24206                           	opt callstack 0
 24207                           
 24208 ;; *************** function _StartTimer *****************
 24209 ;; Defined at:
 24210 ;;		line 12 in file "timers.c"
 24211 ;; Parameters:    Size  Location     Type
 24212 ;;  timer           1  [STACK] const unsigned char 
 24213 ;;  count           2  [STACK] const unsigned short 
 24214 ;; Auto vars:     Size  Location     Type
 24215 ;;		None
 24216 ;; Return value:  Size  Location     Type
 24217 ;;                  1  [STACK] void 
 24218 ;; Registers used:
 24219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24220 ;; Tracked objects:
 24221 ;;		On entry : 0/0
 24222 ;;		On exit  : 0/0
 24223 ;;		Unchanged: 0/0
 24224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24229 ;;Total ram usage:        0 bytes
 24230 ;; Hardware stack levels used:    1
 24231 ;; Hardware stack levels required when called:   15
 24232 ;; This function calls:
 24233 ;;		Nothing
 24234 ;; This function is called by:
 24235 ;;		_main
 24236 ;;		_WaitMs
 24237 ;;		_help_button
 24238 ;;		_check_help
 24239 ;;		_update_adc_result
 24240 ;;		_calc_bsoc
 24241 ;;		_esr_check
 24242 ;; This function uses a reentrant model
 24243 ;;
 24244                           
 24245                           	psect	text95
 24246  01BB1C                     __ptext95:
 24247                           	opt callstack 0
 24248  01BB1C                     _StartTimer:
 24249                           	opt callstack 0
 24250                           
 24251                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 24252                           ;stkvar	_count @ sp[(0)+-3]
 24253                           
 24254                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24255                           ;incstack = 0
 24256 ;; hardware stack exceeded
 24257  01BB1C  0EFD               	movlw	-3
 24258  01BB1E  006F FF8C  F00B    	movff	plusw1,btemp+10
 24259  01BB24  0EFE               	movlw	-2
 24260  01BB26  006F FF8C  F00C    	movff	plusw1,btemp+11
 24261  01BB2C  90D8               	bcf	status,0,c
 24262  01BB2E  340B               	rlcf	(btemp+10)^0,w,c
 24263  01BB30  6E09               	movwf	(btemp+8)^0,c
 24264  01BB32  340C               	rlcf	(btemp+11)^0,w,c
 24265  01BB34  6E0A               	movwf	(btemp+9)^0,c
 24266                           
 24267                           ;stkvar	_timer @ sp[(0)+-1]
 24268  01BB36  0EFF               	movlw	-1
 24269  01BB38  50E3               	movf	plusw1,w,c
 24270  01BB3A  0D02               	mullw	2
 24271  01BB3C  0E7D               	movlw	low _tickCount
 24272  01BB3E  24F3               	addwf	243,w,c
 24273  01BB40  6ED9               	movwf	fsr2l,c
 24274  01BB42  0E02               	movlw	high _tickCount
 24275  01BB44  20F4               	addwfc	prodh,w,c
 24276  01BB46  6EDA               	movwf	fsr2h,c
 24277  01BB48  0060  F027  FFDE   	movff	btemp+8,postinc2
 24278  01BB4E  0060  F02B  FFDD   	movff	btemp+9,postdec2
 24279                           
 24280                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 24281  01BB54  52E5               	movf	postdec1,f,c
 24282  01BB56  52E5               	movf	postdec1,f,c
 24283  01BB58  52E5               	movf	postdec1,f,c
 24284  01BB5A  0012               	return		;funcret
 24285  01BB5C                     __end_of_StartTimer:
 24286                           	opt callstack 0
 24287                           
 24288 ;; *************** function _display_info *****************
 24289 ;; Defined at:
 24290 ;;		line 190 in file "mconfig.c"
 24291 ;; Parameters:    Size  Location     Type
 24292 ;;		None
 24293 ;; Auto vars:     Size  Location     Type
 24294 ;;		None
 24295 ;; Return value:  Size  Location     Type
 24296 ;;                  1  [STACK] enum E16509
 24297 ;; Registers used:
 24298 ;;		btemp
 24299 ;; Tracked objects:
 24300 ;;		On entry : 0/1
 24301 ;;		On exit  : 0/0
 24302 ;;		Unchanged: 0/0
 24303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24308 ;;Total ram usage:        0 bytes
 24309 ;; Hardware stack levels used:    1
 24310 ;; Hardware stack levels required when called:   15
 24311 ;; This function calls:
 24312 ;;		Nothing
 24313 ;; This function is called by:
 24314 ;;		_check_help
 24315 ;; This function uses a reentrant model
 24316 ;;
 24317                           
 24318                           	psect	text96
 24319  01C5AA                     __ptext96:
 24320                           	opt callstack 0
 24321  01C5AA                     _display_info:
 24322                           	opt callstack 14
 24323                           
 24324                           ;mconfig.c: 192:  return V.response.info;
 24325                           
 24326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24327                           ;incstack = 0
 24328  01C5AA  0060  F6AC  F001   	movff	_V+164,btemp	;volatile
 24329                           
 24330                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24331  01C5B0  0012               	return		;funcret
 24332  01C5B2                     __end_of_display_info:
 24333                           	opt callstack 0
 24334                           
 24335 ;; *************** function _display_help *****************
 24336 ;; Defined at:
 24337 ;;		line 195 in file "mconfig.c"
 24338 ;; Parameters:    Size  Location     Type
 24339 ;;		None
 24340 ;; Auto vars:     Size  Location     Type
 24341 ;;		None
 24342 ;; Return value:  Size  Location     Type
 24343 ;;                  1  [STACK] enum E16509
 24344 ;; Registers used:
 24345 ;;		btemp
 24346 ;; Tracked objects:
 24347 ;;		On entry : 3F/1
 24348 ;;		On exit  : 0/0
 24349 ;;		Unchanged: 0/0
 24350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24355 ;;Total ram usage:        0 bytes
 24356 ;; Hardware stack levels used:    1
 24357 ;; Hardware stack levels required when called:   15
 24358 ;; This function calls:
 24359 ;;		Nothing
 24360 ;; This function is called by:
 24361 ;;		_check_help
 24362 ;; This function uses a reentrant model
 24363 ;;
 24364                           
 24365                           	psect	text97
 24366  01C5B2                     __ptext97:
 24367                           	opt callstack 0
 24368  01C5B2                     _display_help:
 24369                           	opt callstack 14
 24370                           
 24371                           ;mconfig.c: 197:  return V.response.help_temp;
 24372                           
 24373                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24374                           ;incstack = 0
 24375  01C5B2  0060  F6B0  F001   	movff	_V+165,btemp	;volatile
 24376                           
 24377                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24378  01C5B8  0012               	return		;funcret
 24379  01C5BA                     __end_of_display_help:
 24380                           	opt callstack 0
 24381                           
 24382 ;; *************** function _check_enter_button *****************
 24383 ;; Defined at:
 24384 ;;		line 42 in file "hid.c"
 24385 ;; Parameters:    Size  Location     Type
 24386 ;;  h               2  [STACK] PTR struct H_data
 24387 ;;		 -> H(7), 
 24388 ;; Auto vars:     Size  Location     Type
 24389 ;;		None
 24390 ;; Return value:  Size  Location     Type
 24391 ;;                  1  [STACK] _Bool 
 24392 ;; Registers used:
 24393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 24394 ;; Tracked objects:
 24395 ;;		On entry : 0/0
 24396 ;;		On exit  : 0/0
 24397 ;;		Unchanged: 0/0
 24398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24403 ;;Total ram usage:        0 bytes
 24404 ;; Hardware stack levels used:    1
 24405 ;; Hardware stack levels required when called:   15
 24406 ;; This function calls:
 24407 ;;		Nothing
 24408 ;; This function is called by:
 24409 ;;		_main
 24410 ;; This function uses a reentrant model
 24411 ;;
 24412                           
 24413                           	psect	text98
 24414  01B1F2                     __ptext98:
 24415                           	opt callstack 0
 24416  01B1F2                     _check_enter_button:
 24417                           	opt callstack 15
 24418                           
 24419                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 24420                           ;stkvar	_h @ sp[(0)+-2]
 24421                           
 24422                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24423                           ;incstack = 0
 24424  01B1F2  0EFE               	movlw	-2
 24425  01B1F4  006F FF8C  F00B    	movff	plusw1,btemp+10
 24426  01B1FA  0EFF               	movlw	-1
 24427  01B1FC  006F FF8C  F00C    	movff	plusw1,btemp+11
 24428  01B202  0E04               	movlw	4
 24429  01B204  240B               	addwf	(btemp+10)^0,w,c
 24430  01B206  6ED9               	movwf	fsr2l,c
 24431  01B208  0E00               	movlw	0
 24432  01B20A  200C               	addwfc	(btemp+11)^0,w,c
 24433  01B20C  6EDA               	movwf	fsr2h,c
 24434  01B20E  50DF               	movf	indf2,w,c
 24435  01B210  A4D8               	btfss	status,2,c
 24436  01B212  D023               	goto	l13281
 24437                           
 24438                           ;stkvar	_h @ sp[(0)+-2]
 24439  01B214  0EFE               	movlw	-2
 24440  01B216  006F FF8C  F00B    	movff	plusw1,btemp+10
 24441  01B21C  0EFF               	movlw	-1
 24442  01B21E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24443  01B224  0E05               	movlw	5
 24444  01B226  240B               	addwf	(btemp+10)^0,w,c
 24445  01B228  6ED9               	movwf	fsr2l,c
 24446  01B22A  0E00               	movlw	0
 24447  01B22C  200C               	addwfc	(btemp+11)^0,w,c
 24448  01B22E  6EDA               	movwf	fsr2h,c
 24449  01B230  50DF               	movf	indf2,w,c
 24450  01B232  A4D8               	btfss	status,2,c
 24451  01B234  D012               	goto	l13281
 24452                           
 24453                           ;hid.c: 45:   h->wait_enter = 1;
 24454                           ;stkvar	_h @ sp[(0)+-2]
 24455  01B236  0EFE               	movlw	-2
 24456  01B238  006F FF8C  F00B    	movff	plusw1,btemp+10
 24457  01B23E  0EFF               	movlw	-1
 24458  01B240  006F FF8C  F00C    	movff	plusw1,btemp+11
 24459  01B246  0E04               	movlw	4
 24460  01B248  240B               	addwf	(btemp+10)^0,w,c
 24461  01B24A  6ED9               	movwf	fsr2l,c
 24462  01B24C  0E00               	movlw	0
 24463  01B24E  200C               	addwfc	(btemp+11)^0,w,c
 24464  01B250  6EDA               	movwf	fsr2h,c
 24465  01B252  0E01               	movlw	1
 24466  01B254  6EDF               	movwf	indf2,c
 24467                           
 24468                           ;hid.c: 46:   return 1;
 24469  01B256  0E01               	movlw	1
 24470  01B258  D001               	goto	L29
 24471  01B25A                     l13281:
 24472                           
 24473                           ;hid.c: 48:  return 0;
 24474  01B25A  0E00               	movlw	0
 24475  01B25C                     L29:
 24476  01B25C  6E01               	movwf	btemp^0,c
 24477                           
 24478                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 24479  01B25E  52E5               	movf	postdec1,f,c
 24480  01B260  52E5               	movf	postdec1,f,c
 24481  01B262  0012               	return		;funcret
 24482  01B264                     __end_of_check_enter_button:
 24483                           	opt callstack 0
 24484                           
 24485 ;; *************** function _calc_ror_data *****************
 24486 ;; Defined at:
 24487 ;;		line 102 in file "mbmc.c"
 24488 ;; Parameters:    Size  Location     Type
 24489 ;;		None
 24490 ;; Auto vars:     Size  Location     Type
 24491 ;;		None
 24492 ;; Return value:  Size  Location     Type
 24493 ;;                  1  [STACK] void 
 24494 ;; Registers used:
 24495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24496 ;; Tracked objects:
 24497 ;;		On entry : 0/39
 24498 ;;		On exit  : 0/0
 24499 ;;		Unchanged: 0/0
 24500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24505 ;;Total ram usage:        0 bytes
 24506 ;; Hardware stack levels used:    1
 24507 ;; Hardware stack levels required when called:   18
 24508 ;; This function calls:
 24509 ;;		___flge
 24510 ;;		___flsub
 24511 ;;		_conv_raw_result
 24512 ;;		_fabsf
 24513 ;; This function is called by:
 24514 ;;		_main
 24515 ;; This function uses a reentrant model
 24516 ;;
 24517                           
 24518                           	psect	text99
 24519  018D9C                     __ptext99:
 24520                           	opt callstack 0
 24521  018D9C                     _calc_ror_data:
 24522                           	opt callstack 12
 24523                           
 24524                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 24525                           
 24526                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24527                           ;incstack = 0
 24528  018D9C  0060  F1A3  FFE6   	movff	calc_ror_data@bcror,postinc1
 24529  018DA2  0060  F1A7  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 24530  018DA8  0060  F1AB  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 24531  018DAE  0060  F1AF  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 24532  018DB4  0E00               	movlw	0
 24533  018DB6  6EE6               	movwf	postinc1,c
 24534  018DB8  0E00               	movlw	0
 24535  018DBA  6EE6               	movwf	postinc1,c
 24536  018DBC  EC95  F0A9         	call	_conv_raw_result	;wreg free
 24537  018DC0  0060  F007  FFE6   	movff	btemp,postinc1
 24538  018DC6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24539  018DCC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24540  018DD2  0060  F013  FFE6   	movff	btemp+3,postinc1
 24541  018DD8  ECE8  F0DC         	call	___flsub	;wreg free
 24542  018DDC  0060  F007  FFE6   	movff	btemp,postinc1
 24543  018DE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24544  018DE8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24545  018DEE  0060  F013  FFE6   	movff	btemp+3,postinc1
 24546  018DF4  EC4E  F0D4         	call	_fabsf	;wreg free
 24547  018DF8  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 24548  018DFE  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 24549  018E04  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 24550  018E0A  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 24551                           
 24552                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 24553  018E10  0E00               	movlw	0
 24554  018E12  6EE6               	movwf	postinc1,c
 24555  018E14  0E00               	movlw	0
 24556  018E16  6EE6               	movwf	postinc1,c
 24557  018E18  EC95  F0A9         	call	_conv_raw_result	;wreg free
 24558  018E1C  0060  F004  F068   	movff	btemp,calc_ror_data@bcror
 24559  018E22  0060  F008  F069   	movff	btemp+1,calc_ror_data@bcror+1
 24560  018E28  0060  F00C  F06A   	movff	btemp+2,calc_ror_data@bcror+2
 24561  018E2E  0060  F010  F06B   	movff	btemp+3,calc_ror_data@bcror+3
 24562                           
 24563                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 24564  018E34  0060  F1B3  FFE6   	movff	calc_ror_data@bvror,postinc1
 24565  018E3A  0060  F1B7  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 24566  018E40  0060  F1BB  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 24567  018E46  0060  F1BF  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 24568  018E4C  0E00               	movlw	0
 24569  018E4E  6EE6               	movwf	postinc1,c
 24570  018E50  0E04               	movlw	4
 24571  018E52  6EE6               	movwf	postinc1,c
 24572  018E54  EC95  F0A9         	call	_conv_raw_result	;wreg free
 24573  018E58  0060  F007  FFE6   	movff	btemp,postinc1
 24574  018E5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24575  018E64  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24576  018E6A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24577  018E70  ECE8  F0DC         	call	___flsub	;wreg free
 24578  018E74  0060  F007  FFE6   	movff	btemp,postinc1
 24579  018E7A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24580  018E80  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24581  018E86  0060  F013  FFE6   	movff	btemp+3,postinc1
 24582  018E8C  EC4E  F0D4         	call	_fabsf	;wreg free
 24583  018E90  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 24584  018E96  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 24585  018E9C  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 24586  018EA2  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 24587                           
 24588                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 24589  018EA8  0EE7               	movlw	231
 24590  018EAA  6EE6               	movwf	postinc1,c
 24591  018EAC  0E1D               	movlw	29
 24592  018EAE  6EE6               	movwf	postinc1,c
 24593  018EB0  0EA7               	movlw	167
 24594  018EB2  6EE6               	movwf	postinc1,c
 24595  018EB4  0E3B               	movlw	59
 24596  018EB6  6EE6               	movwf	postinc1,c
 24597  018EB8  EE21  F36B         	lfsr	2,_C+108	;volatile
 24598  018EBC  006F FF7B FFE6     	movff	postinc2,postinc1
 24599  018EC2  006F FF7B FFE6     	movff	postinc2,postinc1
 24600  018EC8  006F FF7B FFE6     	movff	postinc2,postinc1
 24601  018ECE  006F FF7B FFE6     	movff	postinc2,postinc1
 24602  018ED4  EC0A  F0C9         	call	___flge	;wreg free
 24603  018ED8  B001               	btfsc	btemp& (0+255),0,c
 24604  018EDA  D010               	goto	l11095
 24605                           
 24606                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 24607  018EDC  0EB0               	movlw	176
 24608  018EDE  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 24609  018EE4  0E03               	movlw	3
 24610  018EE6  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 24611  018EEC  0E67               	movlw	103
 24612  018EEE  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 24613  018EF4  0E3C               	movlw	60
 24614  018EF6  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 24615  018EFC                     l11095:
 24616                           
 24617                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 24618  018EFC  0E00               	movlw	0
 24619  018EFE  6EE6               	movwf	postinc1,c
 24620  018F00  0E04               	movlw	4
 24621  018F02  6EE6               	movwf	postinc1,c
 24622  018F04  EC95  F0A9         	call	_conv_raw_result	;wreg free
 24623  018F08  0060  F004  F06C   	movff	btemp,calc_ror_data@bvror
 24624  018F0E  0060  F008  F06D   	movff	btemp+1,calc_ror_data@bvror+1
 24625  018F14  0060  F00C  F06E   	movff	btemp+2,calc_ror_data@bvror+2
 24626  018F1A  0060  F010  F06F   	movff	btemp+3,calc_ror_data@bvror+3
 24627                           
 24628                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 24629  018F20  0012               	return		;funcret
 24630  018F22                     __end_of_calc_ror_data:
 24631                           	opt callstack 0
 24632                           
 24633 ;; *************** function _fabsf *****************
 24634 ;; Defined at:
 24635 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 24636 ;; Parameters:    Size  Location     Type
 24637 ;;  x               4  [STACK] float 
 24638 ;; Auto vars:     Size  Location     Type
 24639 ;;  u               4  [STACK] struct .
 24640 ;; Return value:  Size  Location     Type
 24641 ;;                  4  [STACK] float 
 24642 ;; Registers used:
 24643 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 24644 ;; Tracked objects:
 24645 ;;		On entry : 0/0
 24646 ;;		On exit  : 0/0
 24647 ;;		Unchanged: 0/0
 24648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24653 ;;Total ram usage:        0 bytes
 24654 ;; Hardware stack levels used:    1
 24655 ;; Hardware stack levels required when called:   15
 24656 ;; This function calls:
 24657 ;;		Nothing
 24658 ;; This function is called by:
 24659 ;;		_main
 24660 ;;		_calc_ror_data
 24661 ;;		_calc_bsoc
 24662 ;;		_esr_check
 24663 ;; This function uses a reentrant model
 24664 ;;
 24665                           
 24666                           	psect	text100
 24667  01A89C                     __ptext100:
 24668                           	opt callstack 0
 24669  01A89C                     _fabsf:
 24670                           	opt callstack 0
 24671                           
 24672                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24673  01A89C  52E6               	movf	postinc1,f,c
 24674  01A89E  52E6               	movf	postinc1,f,c
 24675  01A8A0  52E6               	movf	postinc1,f,c
 24676  01A8A2  52E6               	movf	postinc1,f,c
 24677                           
 24678                           ;incstack = 0
 24679 ;; hardware stack exceeded
 24680  01A8A4  0060  F180  F009   	movff	fabsf@F463,btemp+8
 24681  01A8AA  0060  F184  F00A   	movff	fabsf@F463+1,btemp+9
 24682  01A8B0  0060  F188  F00B   	movff	fabsf@F463+2,btemp+10
 24683  01A8B6  0060  F18C  F00C   	movff	fabsf@F463+3,btemp+11
 24684                           
 24685                           ;stkvar	_u @ sp[(-4)+0]
 24686  01A8BC  0EFC               	movlw	-4
 24687  01A8BE  0060  F027  FFE3   	movff	btemp+8,plusw1
 24688  01A8C4  0EFD               	movlw	-3
 24689  01A8C6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24690  01A8CC  0EFE               	movlw	-2
 24691  01A8CE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24692  01A8D4  0EFF               	movlw	-1
 24693  01A8D6  0060  F033  FFE3   	movff	btemp+11,plusw1
 24694                           
 24695                           ;stkvar	_x @ sp[(-4)+-4]
 24696  01A8DC  0EF8               	movlw	-8
 24697  01A8DE  006F FF8C  F009    	movff	plusw1,btemp+8
 24698  01A8E4  0EF9               	movlw	-7
 24699  01A8E6  006F FF8C  F00A    	movff	plusw1,btemp+9
 24700  01A8EC  0EFA               	movlw	-6
 24701  01A8EE  006F FF8C  F00B    	movff	plusw1,btemp+10
 24702  01A8F4  0EFB               	movlw	-5
 24703  01A8F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 24704                           
 24705                           ;stkvar	_u @ sp[(-4)+0]
 24706  01A8FC  0EFC               	movlw	-4
 24707  01A8FE  0060  F027  FFE3   	movff	btemp+8,plusw1
 24708  01A904  0EFD               	movlw	-3
 24709  01A906  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24710  01A90C  0EFE               	movlw	-2
 24711  01A90E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24712  01A914  0EFF               	movlw	-1
 24713  01A916  0060  F033  FFE3   	movff	btemp+11,plusw1
 24714                           
 24715                           ;stkvar	_u @ sp[(-4)+0]
 24716  01A91C  0EFF               	movlw	-1
 24717  01A91E  9EE3               	bcf	plusw1,7,c
 24718                           
 24719                           ;stkvar	_u @ sp[(-4)+0]
 24720  01A920  0EFC               	movlw	-4
 24721  01A922  006F FF8C  F001    	movff	plusw1,btemp
 24722  01A928  0EFD               	movlw	-3
 24723  01A92A  006F FF8C  F002    	movff	plusw1,btemp+1
 24724  01A930  0EFE               	movlw	-2
 24725  01A932  006F FF8C  F003    	movff	plusw1,btemp+2
 24726  01A938  0EFF               	movlw	-1
 24727  01A93A  006F FF8C  F004    	movff	plusw1,btemp+3
 24728                           
 24729                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 24730  01A940  0EF8               	movlw	248
 24731  01A942  26E1               	addwf	fsr1l,f,c
 24732  01A944  0EFF               	movlw	255
 24733  01A946  22E2               	addwfc	fsr1h,f,c
 24734  01A948  0012               	return		;funcret
 24735  01A94A                     __end_of_fabsf:
 24736                           	opt callstack 0
 24737                           
 24738 ;; *************** function _conv_raw_result *****************
 24739 ;; Defined at:
 24740 ;;		line 120 in file "daq.c"
 24741 ;; Parameters:    Size  Location     Type
 24742 ;;  chan            1  [STACK] const enum E16590
 24743 ;;  to_what         1  [STACK] const enum E16652
 24744 ;; Auto vars:     Size  Location     Type
 24745 ;;		None
 24746 ;; Return value:  Size  Location     Type
 24747 ;;                  4  [STACK] float 
 24748 ;; Registers used:
 24749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24750 ;; Tracked objects:
 24751 ;;		On entry : 0/39
 24752 ;;		On exit  : 0/0
 24753 ;;		Unchanged: 0/0
 24754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24759 ;;Total ram usage:        0 bytes
 24760 ;; Hardware stack levels used:    1
 24761 ;; Hardware stack levels required when called:   17
 24762 ;; This function calls:
 24763 ;;		___fladd
 24764 ;;		___fldiv
 24765 ;;		___flmul
 24766 ;;		___flsub
 24767 ;;		___xxtofl
 24768 ;;		_get_raw_result
 24769 ;;		_nanf
 24770 ;; This function is called by:
 24771 ;;		_main
 24772 ;;		_convert_adc_data
 24773 ;;		_calc_ror_data
 24774 ;;		_check_day_time
 24775 ;;		_init_bsoc
 24776 ;;		_esr_check
 24777 ;; This function uses a reentrant model
 24778 ;;
 24779                           
 24780                           	psect	text101
 24781  01532A                     __ptext101:
 24782                           	opt callstack 0
 24783  01532A                     _conv_raw_result:
 24784                           	opt callstack 0
 24785                           
 24786                           ;daq.c: 120: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 121: {;daq.c: 123:  switch (to_what) {
 24787                           
 24788                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24789                           ;incstack = 0
 24790 ;; hardware stack exceeded
 24791  01532A  D276               	goto	l9903
 24792  01532C                     l9849:
 24793                           
 24794                           ;daq.c: 125:   if (!(0b0011110001110111 >> chan & 0x1))
 24795                           ;stkvar	_chan @ sp[(0)+-1]
 24796  01532C  0EFF               	movlw	-1
 24797  01532E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24798  015334  0E77               	movlw	119
 24799  015336  6E09               	movwf	(btemp+8)^0,c
 24800  015338  0E3C               	movlw	60
 24801  01533A  6E0A               	movwf	(btemp+9)^0,c
 24802  01533C  2A0C               	incf	(btemp+11)^0,f,c
 24803  01533E  D003               	goto	u9194
 24804  015340                     u9195:
 24805  015340  340A               	rlcf	(btemp+9)^0,w,c
 24806  015342  320A               	rrcf	(btemp+9)^0,f,c
 24807  015344  3209               	rrcf	(btemp+8)^0,f,c
 24808  015346                     u9194:
 24809  015346  2E0C               	decfsz	(btemp+11)^0,f,c
 24810  015348  D7FB               	goto	u9195
 24811  01534A  B009               	btfsc	(btemp+8)^0,0,c
 24812  01534C  D007               	goto	l9855
 24813                           
 24814                           ;daq.c: 126:    return nanf("");
 24815  01534E  0E49               	movlw	low (STR_64+120)
 24816  015350  6EE6               	movwf	postinc1,c
 24817  015352  0EFC               	movlw	high (STR_64+120)
 24818  015354  6EE6               	movwf	postinc1,c
 24819  015356  EC67  F0DA         	call	_nanf	;wreg free
 24820  01535A  D26E               	goto	l1814
 24821  01535C                     l9855:
 24822                           
 24823                           ;daq.c: 128:   if (0b0000000000000011 >> chan & 0x1) {
 24824                           ;stkvar	_chan @ sp[(0)+-1]
 24825  01535C  0EFF               	movlw	-1
 24826  01535E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24827  015364  0E03               	movlw	3
 24828  015366  6E09               	movwf	(btemp+8)^0,c
 24829  015368  0E00               	movlw	0
 24830  01536A  6E0A               	movwf	(btemp+9)^0,c
 24831  01536C  2A0C               	incf	(btemp+11)^0,f,c
 24832  01536E  D003               	goto	u9214
 24833  015370                     u9215:
 24834  015370  340A               	rlcf	(btemp+9)^0,w,c
 24835  015372  320A               	rrcf	(btemp+9)^0,f,c
 24836  015374  3209               	rrcf	(btemp+8)^0,f,c
 24837  015376                     u9214:
 24838  015376  2E0C               	decfsz	(btemp+11)^0,f,c
 24839  015378  D7FB               	goto	u9215
 24840  01537A  A009               	btfss	(btemp+8)^0,0,c
 24841  01537C  D11F               	goto	l9869
 24842                           
 24843                           ;daq.c: 129:    if (0b0000000000000001 >> chan & 0x1) {
 24844                           ;stkvar	_chan @ sp[(0)+-1]
 24845  01537E  0EFF               	movlw	-1
 24846  015380  006F FF8C  F00C    	movff	plusw1,btemp+11
 24847  015386  0E01               	movlw	1
 24848  015388  6E09               	movwf	(btemp+8)^0,c
 24849  01538A  0E00               	movlw	0
 24850  01538C  6E0A               	movwf	(btemp+9)^0,c
 24851  01538E  2A0C               	incf	(btemp+11)^0,f,c
 24852  015390  D003               	goto	u9234
 24853  015392                     u9235:
 24854  015392  340A               	rlcf	(btemp+9)^0,w,c
 24855  015394  320A               	rrcf	(btemp+9)^0,f,c
 24856  015396  3209               	rrcf	(btemp+8)^0,f,c
 24857  015398                     u9234:
 24858  015398  2E0C               	decfsz	(btemp+11)^0,f,c
 24859  01539A  D7FB               	goto	u9235
 24860  01539C  A009               	btfss	(btemp+8)^0,0,c
 24861  01539E  D087               	goto	l9865
 24862                           
 24863                           ;daq.c: 130:     return R.n_zero[0]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[0]) * 0.0850000;
 24864  0153A0  0060  F367  FFE6   	movff	_R+42,postinc1
 24865  0153A6  0060  F36B  FFE6   	movff	_R+43,postinc1
 24866  0153AC  0060  F36F  FFE6   	movff	_R+44,postinc1
 24867  0153B2  0060  F373  FFE6   	movff	_R+45,postinc1
 24868  0153B8  0E7B               	movlw	123
 24869  0153BA  6EE6               	movwf	postinc1,c
 24870  0153BC  0E14               	movlw	20
 24871  0153BE  6EE6               	movwf	postinc1,c
 24872  0153C0  0EAE               	movlw	174
 24873  0153C2  6EE6               	movwf	postinc1,c
 24874  0153C4  0E3D               	movlw	61
 24875  0153C6  6EE6               	movwf	postinc1,c
 24876  0153C8  0060  F354  F009   	movff	_R+38,btemp+8	;volatile
 24877  0153CE  0060  F358  F00A   	movff	_R+39,btemp+9	;volatile
 24878  0153D4  0E00               	movlw	0
 24879  0153D6  BE0A               	btfsc	(btemp+9)^0,7,c
 24880  0153D8  0EFF               	movlw	255
 24881  0153DA  6E0B               	movwf	(btemp+10)^0,c
 24882  0153DC  6E0C               	movwf	(btemp+11)^0,c
 24883  0153DE  0060  F027  FFE6   	movff	btemp+8,postinc1
 24884  0153E4  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24885  0153EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24886  0153F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 24887  0153F6  0E01               	movlw	1
 24888  0153F8  6EE6               	movwf	postinc1,c
 24889  0153FA  EC65  F0C2         	call	___xxtofl	;wreg free
 24890  0153FE  0060  F007  FFE6   	movff	btemp,postinc1
 24891  015404  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24892  01540A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24893  015410  0060  F013  FFE6   	movff	btemp+3,postinc1
 24894                           
 24895                           ;stkvar	_chan @ sp[(-12)+-1]
 24896  015416  0EF3               	movlw	-13
 24897  015418  50E3               	movf	plusw1,w,c
 24898  01541A  6EE6               	movwf	postinc1,c
 24899  01541C  ECF7  F0E1         	call	_get_raw_result	;wreg free
 24900  015420  0060  F004  F00B   	movff	btemp,btemp+10
 24901  015426  0060  F008  F00C   	movff	btemp+1,btemp+11
 24902  01542C  500B               	movf	(btemp+10)^0,w,c
 24903  01542E  6E05               	movwf	(btemp+4)^0,c
 24904  015430  500C               	movf	(btemp+11)^0,w,c
 24905  015432  6E06               	movwf	(btemp+5)^0,c
 24906  015434  6A07               	clrf	(btemp+6)^0,c
 24907  015436  6A08               	clrf	(btemp+7)^0,c
 24908  015438  0060  F017  FFE6   	movff	btemp+4,postinc1
 24909  01543E  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24910  015444  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24911  01544A  0060  F023  FFE6   	movff	btemp+7,postinc1
 24912  015450  0E00               	movlw	0
 24913  015452  6EE6               	movwf	postinc1,c
 24914  015454  EC65  F0C2         	call	___xxtofl	;wreg free
 24915  015458  0060  F007  FFE6   	movff	btemp,postinc1
 24916  01545E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24917  015464  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24918  01546A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24919  015470  ECE8  F0DC         	call	___flsub	;wreg free
 24920  015474  0060  F007  FFE6   	movff	btemp,postinc1
 24921  01547A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24922  015480  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24923  015486  0060  F013  FFE6   	movff	btemp+3,postinc1
 24924  01548C  ECE5  F09E         	call	___flmul	;wreg free
 24925  015490  0060  F007  FFE6   	movff	btemp,postinc1
 24926  015496  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24927  01549C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24928  0154A2  0060  F013  FFE6   	movff	btemp+3,postinc1
 24929  0154A8  ECFA  F0A2         	call	___fladd	;wreg free
 24930  0154AC  D1C5               	goto	l1814
 24931  0154AE                     l9865:
 24932                           
 24933                           ;daq.c: 132:     return R.n_zero[1]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[1]) * 0.0350000;
 24934  0154AE  0060  F377  FFE6   	movff	_R+46,postinc1
 24935  0154B4  0060  F37B  FFE6   	movff	_R+47,postinc1
 24936  0154BA  0060  F37F  FFE6   	movff	_R+48,postinc1
 24937  0154C0  0060  F383  FFE6   	movff	_R+49,postinc1
 24938  0154C6  0E29               	movlw	41
 24939  0154C8  6EE6               	movwf	postinc1,c
 24940  0154CA  0E5C               	movlw	92
 24941  0154CC  6EE6               	movwf	postinc1,c
 24942  0154CE  0E0F               	movlw	15
 24943  0154D0  6EE6               	movwf	postinc1,c
 24944  0154D2  0E3D               	movlw	61
 24945  0154D4  6EE6               	movwf	postinc1,c
 24946  0154D6  0060  F35C  F009   	movff	_R+40,btemp+8	;volatile
 24947  0154DC  0060  F360  F00A   	movff	_R+41,btemp+9	;volatile
 24948  0154E2  0E00               	movlw	0
 24949  0154E4  BE0A               	btfsc	(btemp+9)^0,7,c
 24950  0154E6  0EFF               	movlw	255
 24951  0154E8  6E0B               	movwf	(btemp+10)^0,c
 24952  0154EA  6E0C               	movwf	(btemp+11)^0,c
 24953  0154EC  0060  F027  FFE6   	movff	btemp+8,postinc1
 24954  0154F2  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24955  0154F8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24956  0154FE  0060  F033  FFE6   	movff	btemp+11,postinc1
 24957  015504  0E01               	movlw	1
 24958  015506  6EE6               	movwf	postinc1,c
 24959  015508  EC65  F0C2         	call	___xxtofl	;wreg free
 24960  01550C  0060  F007  FFE6   	movff	btemp,postinc1
 24961  015512  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24962  015518  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24963  01551E  0060  F013  FFE6   	movff	btemp+3,postinc1
 24964                           
 24965                           ;stkvar	_chan @ sp[(-12)+-1]
 24966  015524  0EF3               	movlw	-13
 24967  015526  50E3               	movf	plusw1,w,c
 24968  015528  6EE6               	movwf	postinc1,c
 24969  01552A  ECF7  F0E1         	call	_get_raw_result	;wreg free
 24970  01552E  0060  F004  F00B   	movff	btemp,btemp+10
 24971  015534  0060  F008  F00C   	movff	btemp+1,btemp+11
 24972  01553A  500B               	movf	(btemp+10)^0,w,c
 24973  01553C  6E05               	movwf	(btemp+4)^0,c
 24974  01553E  500C               	movf	(btemp+11)^0,w,c
 24975  015540  6E06               	movwf	(btemp+5)^0,c
 24976  015542  6A07               	clrf	(btemp+6)^0,c
 24977  015544  6A08               	clrf	(btemp+7)^0,c
 24978  015546  0060  F017  FFE6   	movff	btemp+4,postinc1
 24979  01554C  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24980  015552  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24981  015558  0060  F023  FFE6   	movff	btemp+7,postinc1
 24982  01555E  0E00               	movlw	0
 24983  015560  6EE6               	movwf	postinc1,c
 24984  015562  EC65  F0C2         	call	___xxtofl	;wreg free
 24985  015566  0060  F007  FFE6   	movff	btemp,postinc1
 24986  01556C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24987  015572  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24988  015578  0060  F013  FFE6   	movff	btemp+3,postinc1
 24989  01557E  ECE8  F0DC         	call	___flsub	;wreg free
 24990  015582  0060  F007  FFE6   	movff	btemp,postinc1
 24991  015588  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24992  01558E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24993  015594  0060  F013  FFE6   	movff	btemp+3,postinc1
 24994  01559A  ECE5  F09E         	call	___flmul	;wreg free
 24995  01559E  0060  F007  FFE6   	movff	btemp,postinc1
 24996  0155A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24997  0155AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24998  0155B0  0060  F013  FFE6   	movff	btemp+3,postinc1
 24999  0155B6  ECFA  F0A2         	call	___fladd	;wreg free
 25000  0155BA  D13E               	goto	l1814
 25001  0155BC                     l9869:
 25002                           
 25003                           ;daq.c: 135:    if (0b0000100000000000 >> chan & 0x1) {
 25004                           ;stkvar	_chan @ sp[(0)+-1]
 25005  0155BC  0EFF               	movlw	-1
 25006  0155BE  006F FF8C  F00C    	movff	plusw1,btemp+11
 25007  0155C4  0E00               	movlw	0
 25008  0155C6  6E09               	movwf	(btemp+8)^0,c
 25009  0155C8  0E08               	movlw	8
 25010  0155CA  6E0A               	movwf	(btemp+9)^0,c
 25011  0155CC  2A0C               	incf	(btemp+11)^0,f,c
 25012  0155CE  D003               	goto	u9254
 25013  0155D0                     u9255:
 25014  0155D0  340A               	rlcf	(btemp+9)^0,w,c
 25015  0155D2  320A               	rrcf	(btemp+9)^0,f,c
 25016  0155D4  3209               	rrcf	(btemp+8)^0,f,c
 25017  0155D6                     u9254:
 25018  0155D6  2E0C               	decfsz	(btemp+11)^0,f,c
 25019  0155D8  D7FB               	goto	u9255
 25020  0155DA  A009               	btfss	(btemp+8)^0,0,c
 25021  0155DC  D008               	goto	l9877
 25022                           
 25023                           ;daq.c: 136:     return 25.0;
 25024  0155DE  0E00               	movlw	0
 25025  0155E0  6E01               	movwf	btemp^0,c
 25026  0155E2  0E00               	movlw	0
 25027  0155E4  6E02               	movwf	(btemp+1)^0,c
 25028  0155E6  0EC8               	movlw	200
 25029  0155E8  6E03               	movwf	(btemp+2)^0,c
 25030  0155EA  0E41               	movlw	65
 25031  0155EC  D113               	goto	L30
 25032  0155EE                     l9877:
 25033                           
 25034                           ;daq.c: 138:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 25035  0155EE  0E00               	movlw	0
 25036  0155F0  6EE6               	movwf	postinc1,c
 25037  0155F2  0E00               	movlw	0
 25038  0155F4  6EE6               	movwf	postinc1,c
 25039  0155F6  0E7A               	movlw	122
 25040  0155F8  6EE6               	movwf	postinc1,c
 25041  0155FA  0E44               	movlw	68
 25042  0155FC  6EE6               	movwf	postinc1,c
 25043  0155FE  0E61               	movlw	97
 25044  015600  6EE6               	movwf	postinc1,c
 25045  015602  0E03               	movlw	3
 25046  015604  6EE6               	movwf	postinc1,c
 25047  015606  0E84               	movlw	132
 25048  015608  6EE6               	movwf	postinc1,c
 25049  01560A  0E40               	movlw	64
 25050  01560C  6EE6               	movwf	postinc1,c
 25051                           
 25052                           ;stkvar	_chan @ sp[(-8)+-1]
 25053  01560E  0EF7               	movlw	-9
 25054  015610  50E3               	movf	plusw1,w,c
 25055  015612  6EE6               	movwf	postinc1,c
 25056  015614  ECF7  F0E1         	call	_get_raw_result	;wreg free
 25057  015618  0060  F004  F00B   	movff	btemp,btemp+10
 25058  01561E  0060  F008  F00C   	movff	btemp+1,btemp+11
 25059  015624  500B               	movf	(btemp+10)^0,w,c
 25060  015626  6E05               	movwf	(btemp+4)^0,c
 25061  015628  500C               	movf	(btemp+11)^0,w,c
 25062  01562A  6E06               	movwf	(btemp+5)^0,c
 25063  01562C  6A07               	clrf	(btemp+6)^0,c
 25064  01562E  6A08               	clrf	(btemp+7)^0,c
 25065  015630  0060  F017  FFE6   	movff	btemp+4,postinc1
 25066  015636  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25067  01563C  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25068  015642  0060  F023  FFE6   	movff	btemp+7,postinc1
 25069  015648  0E00               	movlw	0
 25070  01564A  6EE6               	movwf	postinc1,c
 25071  01564C  EC65  F0C2         	call	___xxtofl	;wreg free
 25072  015650  0060  F007  FFE6   	movff	btemp,postinc1
 25073  015656  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25074  01565C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25075  015662  0060  F013  FFE6   	movff	btemp+3,postinc1
 25076  015668  ECE5  F09E         	call	___flmul	;wreg free
 25077  01566C  0060  F007  FFE6   	movff	btemp,postinc1
 25078  015672  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25079  015678  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25080  01567E  0060  F013  FFE6   	movff	btemp+3,postinc1
 25081  015684  ECD8  F0A6         	call	___fldiv	;wreg free
 25082  015688  D0D7               	goto	l1814
 25083  01568A                     l9881:
 25084                           
 25085                           ;daq.c: 143:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 25086                           ;stkvar	_chan @ sp[(0)+-1]
 25087  01568A  0EFF               	movlw	-1
 25088  01568C  006F FF8C  F00C    	movff	plusw1,btemp+11
 25089  015692  0E03               	movlw	3
 25090  015694  6E09               	movwf	(btemp+8)^0,c
 25091  015696  0E00               	movlw	0
 25092  015698  6E0A               	movwf	(btemp+9)^0,c
 25093  01569A  2A0C               	incf	(btemp+11)^0,f,c
 25094  01569C  D003               	goto	u9274
 25095  01569E                     u9275:
 25096  01569E  340A               	rlcf	(btemp+9)^0,w,c
 25097  0156A0  320A               	rrcf	(btemp+9)^0,f,c
 25098  0156A2  3209               	rrcf	(btemp+8)^0,f,c
 25099  0156A4                     u9274:
 25100  0156A4  2E0C               	decfsz	(btemp+11)^0,f,c
 25101  0156A6  D7FB               	goto	u9275
 25102  0156A8  B009               	btfsc	(btemp+8)^0,0,c
 25103  0156AA  D011               	goto	u9300
 25104                           
 25105                           ;stkvar	_chan @ sp[(0)+-1]
 25106  0156AC  0EFF               	movlw	-1
 25107  0156AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 25108  0156B4  0E00               	movlw	0
 25109  0156B6  6E09               	movwf	(btemp+8)^0,c
 25110  0156B8  0E08               	movlw	8
 25111  0156BA  6E0A               	movwf	(btemp+9)^0,c
 25112  0156BC  2A0C               	incf	(btemp+11)^0,f,c
 25113  0156BE  D003               	goto	u9294
 25114  0156C0                     u9295:
 25115  0156C0  340A               	rlcf	(btemp+9)^0,w,c
 25116  0156C2  320A               	rrcf	(btemp+9)^0,f,c
 25117  0156C4  3209               	rrcf	(btemp+8)^0,f,c
 25118  0156C6                     u9294:
 25119  0156C6  2E0C               	decfsz	(btemp+11)^0,f,c
 25120  0156C8  D7FB               	goto	u9295
 25121  0156CA  A009               	btfss	(btemp+8)^0,0,c
 25122  0156CC  D04E               	goto	l9889
 25123  0156CE                     u9300:
 25124                           
 25125                           ;daq.c: 144:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 25126  0156CE  0E00               	movlw	0
 25127  0156D0  6EE6               	movwf	postinc1,c
 25128  0156D2  0E00               	movlw	0
 25129  0156D4  6EE6               	movwf	postinc1,c
 25130  0156D6  0E7A               	movlw	122
 25131  0156D8  6EE6               	movwf	postinc1,c
 25132  0156DA  0E44               	movlw	68
 25133  0156DC  6EE6               	movwf	postinc1,c
 25134  0156DE  0E00               	movlw	0
 25135  0156E0  6EE6               	movwf	postinc1,c
 25136  0156E2  0E00               	movlw	0
 25137  0156E4  6EE6               	movwf	postinc1,c
 25138  0156E6  0E20               	movlw	32
 25139  0156E8  6EE6               	movwf	postinc1,c
 25140  0156EA  0E3F               	movlw	63
 25141  0156EC  6EE6               	movwf	postinc1,c
 25142                           
 25143                           ;stkvar	_chan @ sp[(-8)+-1]
 25144  0156EE  0EF7               	movlw	-9
 25145  0156F0  50E3               	movf	plusw1,w,c
 25146  0156F2  6EE6               	movwf	postinc1,c
 25147  0156F4  ECF7  F0E1         	call	_get_raw_result	;wreg free
 25148  0156F8  0060  F004  F00B   	movff	btemp,btemp+10
 25149  0156FE  0060  F008  F00C   	movff	btemp+1,btemp+11
 25150  015704  500B               	movf	(btemp+10)^0,w,c
 25151  015706  6E05               	movwf	(btemp+4)^0,c
 25152  015708  500C               	movf	(btemp+11)^0,w,c
 25153  01570A  6E06               	movwf	(btemp+5)^0,c
 25154  01570C  6A07               	clrf	(btemp+6)^0,c
 25155  01570E  6A08               	clrf	(btemp+7)^0,c
 25156  015710  0060  F017  FFE6   	movff	btemp+4,postinc1
 25157  015716  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25158  01571C  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25159  015722  0060  F023  FFE6   	movff	btemp+7,postinc1
 25160  015728  0E00               	movlw	0
 25161  01572A  6EE6               	movwf	postinc1,c
 25162  01572C  EC65  F0C2         	call	___xxtofl	;wreg free
 25163  015730  0060  F007  FFE6   	movff	btemp,postinc1
 25164  015736  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25165  01573C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25166  015742  0060  F013  FFE6   	movff	btemp+3,postinc1
 25167  015748  ECE5  F09E         	call	___flmul	;wreg free
 25168  01574C  0060  F007  FFE6   	movff	btemp,postinc1
 25169  015752  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25170  015758  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25171  01575E  0060  F013  FFE6   	movff	btemp+3,postinc1
 25172  015764  ECD8  F0A6         	call	___fldiv	;wreg free
 25173  015768  D067               	goto	l1814
 25174  01576A                     l9889:
 25175                           
 25176                           ;daq.c: 146:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 25177  01576A  0E00               	movlw	0
 25178  01576C  6EE6               	movwf	postinc1,c
 25179  01576E  0E00               	movlw	0
 25180  015770  6EE6               	movwf	postinc1,c
 25181  015772  0E7A               	movlw	122
 25182  015774  6EE6               	movwf	postinc1,c
 25183  015776  0E44               	movlw	68
 25184  015778  6EE6               	movwf	postinc1,c
 25185  01577A  0E61               	movlw	97
 25186  01577C  6EE6               	movwf	postinc1,c
 25187  01577E  0E03               	movlw	3
 25188  015780  6EE6               	movwf	postinc1,c
 25189  015782  0E84               	movlw	132
 25190  015784  6EE6               	movwf	postinc1,c
 25191  015786  0E40               	movlw	64
 25192  015788  6EE6               	movwf	postinc1,c
 25193                           
 25194                           ;stkvar	_chan @ sp[(-8)+-1]
 25195  01578A  0EF7               	movlw	-9
 25196  01578C  50E3               	movf	plusw1,w,c
 25197  01578E  6EE6               	movwf	postinc1,c
 25198  015790  ECF7  F0E1         	call	_get_raw_result	;wreg free
 25199  015794  0060  F004  F00B   	movff	btemp,btemp+10
 25200  01579A  0060  F008  F00C   	movff	btemp+1,btemp+11
 25201  0157A0  500B               	movf	(btemp+10)^0,w,c
 25202  0157A2  6E05               	movwf	(btemp+4)^0,c
 25203  0157A4  500C               	movf	(btemp+11)^0,w,c
 25204  0157A6  6E06               	movwf	(btemp+5)^0,c
 25205  0157A8  6A07               	clrf	(btemp+6)^0,c
 25206  0157AA  6A08               	clrf	(btemp+7)^0,c
 25207  0157AC  0060  F017  FFE6   	movff	btemp+4,postinc1
 25208  0157B2  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25209  0157B8  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25210  0157BE  0060  F023  FFE6   	movff	btemp+7,postinc1
 25211  0157C4  0E00               	movlw	0
 25212  0157C6  6EE6               	movwf	postinc1,c
 25213  0157C8  EC65  F0C2         	call	___xxtofl	;wreg free
 25214  0157CC  0060  F007  FFE6   	movff	btemp,postinc1
 25215  0157D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25216  0157D8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25217  0157DE  0060  F013  FFE6   	movff	btemp+3,postinc1
 25218  0157E4  ECE5  F09E         	call	___flmul	;wreg free
 25219  0157E8  0060  F007  FFE6   	movff	btemp,postinc1
 25220  0157EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25221  0157F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25222  0157FA  0060  F013  FFE6   	movff	btemp+3,postinc1
 25223  015800  ECD8  F0A6         	call	___fldiv	;wreg free
 25224  015804  D019               	goto	l1814
 25225  015806                     l9895:
 25226                           
 25227                           ;daq.c: 149:   return 0.0;
 25228  015806  0E00               	movlw	0
 25229  015808  6E01               	movwf	btemp^0,c
 25230  01580A  0E00               	movlw	0
 25231  01580C  6E02               	movwf	(btemp+1)^0,c
 25232  01580E  0E00               	movlw	0
 25233  015810  6E03               	movwf	(btemp+2)^0,c
 25234  015812  0E00               	movlw	0
 25235  015814                     L30:
 25236  015814  6E04               	movwf	(btemp+3)^0,c
 25237  015816  D010               	goto	l1814
 25238  015818                     l9903:
 25239                           
 25240                           ;stkvar	_to_what @ sp[(0)+-2]
 25241  015818  0EFE               	movlw	-2
 25242  01581A  50E3               	movf	plusw1,w,c
 25243  01581C  6E0B               	movwf	(btemp+10)^0,c
 25244  01581E  6A0C               	clrf	(btemp+11)^0,c
 25245                           
 25246                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25247                           ; Switch size 1, requested type "simple"
 25248                           ; Number of cases is 1, Range of values is 0 to 0
 25249                           ; switch strategies available:
 25250                           ; Name         Instructions Cycles
 25251                           ; simple_byte            4     3 (average)
 25252                           ;	Chosen strategy is simple_byte
 25253  015820  500C               	movf	(btemp+11)^0,w,c
 25254  015822  0A00               	xorlw	0	; case 0
 25255  015824  A4D8               	btfss	status,2,c
 25256  015826  D7EF               	goto	l9895
 25257                           
 25258                           ; Switch size 1, requested type "simple"
 25259                           ; Number of cases is 2, Range of values is 0 to 1
 25260                           ; switch strategies available:
 25261                           ; Name         Instructions Cycles
 25262                           ; simple_byte            7     4 (average)
 25263                           ;	Chosen strategy is simple_byte
 25264  015828  500B               	movf	(btemp+10)^0,w,c
 25265  01582A  0A00               	xorlw	0	; case 0
 25266  01582C  B4D8               	btfsc	status,2,c
 25267  01582E  D57E               	goto	l9849
 25268  015830  0A01               	xorlw	1	; case 1
 25269  015832  B4D8               	btfsc	status,2,c
 25270  015834  D72A               	goto	l9881
 25271  015836  D7E7               	goto	l9895
 25272  015838                     l1814:
 25273                           
 25274                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 25275  015838  52E5               	movf	postdec1,f,c
 25276  01583A  52E5               	movf	postdec1,f,c
 25277  01583C  0012               	return		;funcret
 25278  01583E                     __end_of_conv_raw_result:
 25279                           	opt callstack 0
 25280                           
 25281 ;; *************** function _nanf *****************
 25282 ;; Defined at:
 25283 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 25284 ;; Parameters:    Size  Location     Type
 25285 ;;  s               2  [STACK] PTR const unsigned char 
 25286 ;;		 -> STR_101(1), STR_63(1), 
 25287 ;; Auto vars:     Size  Location     Type
 25288 ;;  u               4  [STACK] struct .
 25289 ;; Return value:  Size  Location     Type
 25290 ;;                  4  [STACK] float 
 25291 ;; Registers used:
 25292 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 25293 ;; Tracked objects:
 25294 ;;		On entry : 0/39
 25295 ;;		On exit  : 0/0
 25296 ;;		Unchanged: 0/0
 25297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25302 ;;Total ram usage:        0 bytes
 25303 ;; Hardware stack levels used:    1
 25304 ;; Hardware stack levels required when called:   15
 25305 ;; This function calls:
 25306 ;;		Nothing
 25307 ;; This function is called by:
 25308 ;;		_conv_raw_result
 25309 ;; This function uses a reentrant model
 25310 ;;
 25311                           
 25312                           	psect	text102
 25313  01B4CE                     __ptext102:
 25314                           	opt callstack 0
 25315  01B4CE                     _nanf:
 25316                           	opt callstack 0
 25317                           
 25318                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25319  01B4CE  52E6               	movf	postinc1,f,c
 25320  01B4D0  52E6               	movf	postinc1,f,c
 25321  01B4D2  52E6               	movf	postinc1,f,c
 25322  01B4D4  52E6               	movf	postinc1,f,c
 25323                           
 25324                           ;incstack = 0
 25325 ;; hardware stack exceeded
 25326  01B4D6  0EFF               	movlw	255
 25327  01B4D8  6E09               	movwf	(btemp+8)^0,c
 25328  01B4DA  0EFF               	movlw	255
 25329  01B4DC  6E0A               	movwf	(btemp+9)^0,c
 25330  01B4DE  0EFF               	movlw	255
 25331  01B4E0  6E0B               	movwf	(btemp+10)^0,c
 25332  01B4E2  0E7F               	movlw	127
 25333  01B4E4  6E0C               	movwf	(btemp+11)^0,c
 25334                           
 25335                           ;stkvar	_u @ sp[(-4)+0]
 25336  01B4E6  0EFC               	movlw	-4
 25337  01B4E8  0060  F027  FFE3   	movff	btemp+8,plusw1
 25338  01B4EE  0EFD               	movlw	-3
 25339  01B4F0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25340  01B4F6  0EFE               	movlw	-2
 25341  01B4F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25342  01B4FE  0EFF               	movlw	-1
 25343  01B500  0060  F033  FFE3   	movff	btemp+11,plusw1
 25344                           
 25345                           ;stkvar	_u @ sp[(-4)+0]
 25346  01B506  0EFC               	movlw	-4
 25347  01B508  006F FF8C  F001    	movff	plusw1,btemp
 25348  01B50E  0EFD               	movlw	-3
 25349  01B510  006F FF8C  F002    	movff	plusw1,btemp+1
 25350  01B516  0EFE               	movlw	-2
 25351  01B518  006F FF8C  F003    	movff	plusw1,btemp+2
 25352  01B51E  0EFF               	movlw	-1
 25353  01B520  006F FF8C  F004    	movff	plusw1,btemp+3
 25354                           
 25355                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 25356  01B526  0EFA               	movlw	250
 25357  01B528  26E1               	addwf	fsr1l,f,c
 25358  01B52A  0EFF               	movlw	255
 25359  01B52C  22E2               	addwfc	fsr1h,f,c
 25360  01B52E  0012               	return		;funcret
 25361  01B530                     __end_of_nanf:
 25362                           	opt callstack 0
 25363                           
 25364 ;; *************** function _get_raw_result *****************
 25365 ;; Defined at:
 25366 ;;		line 112 in file "daq.c"
 25367 ;; Parameters:    Size  Location     Type
 25368 ;;  index           1  [STACK] const enum E16590
 25369 ;; Auto vars:     Size  Location     Type
 25370 ;;		None
 25371 ;; Return value:  Size  Location     Type
 25372 ;;                  2  [STACK] unsigned short 
 25373 ;; Registers used:
 25374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 25375 ;; Tracked objects:
 25376 ;;		On entry : 0/1
 25377 ;;		On exit  : 0/0
 25378 ;;		Unchanged: 0/0
 25379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25384 ;;Total ram usage:        0 bytes
 25385 ;; Hardware stack levels used:    1
 25386 ;; Hardware stack levels required when called:   15
 25387 ;; This function calls:
 25388 ;;		Nothing
 25389 ;; This function is called by:
 25390 ;;		_main
 25391 ;;		_conv_raw_result
 25392 ;; This function uses a reentrant model
 25393 ;;
 25394                           
 25395                           	psect	text103
 25396  01C3EE                     __ptext103:
 25397                           	opt callstack 0
 25398  01C3EE                     _get_raw_result:
 25399                           	opt callstack 0
 25400                           
 25401                           ;daq.c: 112: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 113: {;daq.c
      +                          : 114:  return R.raw_adc[index];
 25402                           ;stkvar	_index @ sp[(0)+-1]
 25403                           
 25404                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25405                           ;incstack = 0
 25406 ;; hardware stack exceeded
 25407  01C3EE  0EFF               	movlw	-1
 25408  01C3F0  50E3               	movf	plusw1,w,c
 25409  01C3F2  0D02               	mullw	2
 25410  01C3F4  50F3               	movf	243,w,c
 25411  01C3F6  0FAF               	addlw	low _R
 25412  01C3F8  6ED9               	movwf	fsr2l,c
 25413  01C3FA  6ADA               	clrf	fsr2h,c
 25414  01C3FC  006F FF78  F001    	movff	postinc2,btemp
 25415  01C402  006F FF74  F002    	movff	postdec2,btemp+1
 25416                           
 25417                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 25418  01C408  52E5               	movf	postdec1,f,c
 25419  01C40A  0012               	return		;funcret
 25420  01C40C                     __end_of_get_raw_result:
 25421                           	opt callstack 0
 25422                           
 25423 ;; *************** function ___xxtofl *****************
 25424 ;; Defined at:
 25425 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 25426 ;; Parameters:    Size  Location     Type
 25427 ;;  sign            1  [STACK] unsigned char 
 25428 ;;  val             4  [STACK] long 
 25429 ;; Auto vars:     Size  Location     Type
 25430 ;;  arg             4  [STACK] unsigned long 
 25431 ;;  exp             1  [STACK] unsigned char 
 25432 ;; Return value:  Size  Location     Type
 25433 ;;                  4  [STACK] unsigned char 
 25434 ;; Registers used:
 25435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 25436 ;; Tracked objects:
 25437 ;;		On entry : 0/0
 25438 ;;		On exit  : 0/0
 25439 ;;		Unchanged: 0/0
 25440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25445 ;;Total ram usage:        0 bytes
 25446 ;; Hardware stack levels used:    1
 25447 ;; Hardware stack levels required when called:   15
 25448 ;; This function calls:
 25449 ;;		Nothing
 25450 ;; This function is called by:
 25451 ;;		_conv_raw_result
 25452 ;;		_init_bsoc
 25453 ;; This function uses a reentrant model
 25454 ;;
 25455                           
 25456                           	psect	text104
 25457  0184CA                     __ptext104:
 25458                           	opt callstack 0
 25459  0184CA                     ___xxtofl:
 25460                           	opt callstack 0
 25461                           
 25462                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25463  0184CA  0E05               	movlw	5
 25464  0184CC  26E1               	addwf	fsr1l,f,c
 25465  0184CE  0E00               	movlw	0
 25466  0184D0  22E2               	addwfc	fsr1h,f,c
 25467                           
 25468                           ;stkvar	_sign @ sp[(-5)+-1]
 25469                           
 25470                           ;incstack = 0
 25471 ;; hardware stack exceeded
 25472  0184D2  0EFA               	movlw	-6
 25473  0184D4  50E3               	movf	plusw1,w,c
 25474  0184D6  B4D8               	btfsc	status,2,c
 25475  0184D8  D01D               	goto	l9797
 25476                           
 25477                           ;stkvar	_val @ sp[(-5)+-5]
 25478  0184DA  0EF9               	movlw	-7
 25479  0184DC  AEE3               	btfss	plusw1,7,c
 25480  0184DE  D01A               	goto	l9797
 25481                           
 25482                           ;stkvar	_val @ sp[(-5)+-5]
 25483  0184E0  0EF6               	movlw	-10
 25484  0184E2  006F FF8C  F009    	movff	plusw1,btemp+8
 25485  0184E8  0EF7               	movlw	-9
 25486  0184EA  006F FF8C  F00A    	movff	plusw1,btemp+9
 25487  0184F0  0EF8               	movlw	-8
 25488  0184F2  006F FF8C  F00B    	movff	plusw1,btemp+10
 25489  0184F8  0EF9               	movlw	-7
 25490  0184FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 25491  018500  1E09               	comf	(btemp+8)^0,f,c
 25492  018502  1E0A               	comf	(btemp+9)^0,f,c
 25493  018504  1E0B               	comf	(btemp+10)^0,f,c
 25494  018506  1E0C               	comf	(btemp+11)^0,f,c
 25495  018508  2A09               	incf	(btemp+8)^0,f,c
 25496  01850A  0E00               	movlw	0
 25497  01850C  220A               	addwfc	(btemp+9)^0,f,c
 25498  01850E  220B               	addwfc	(btemp+10)^0,f,c
 25499  018510  220C               	addwfc	(btemp+11)^0,f,c
 25500  018512  D010               	goto	L31
 25501  018514                     l9797:
 25502                           
 25503                           ;stkvar	_val @ sp[(-5)+-5]
 25504  018514  0EF6               	movlw	-10
 25505  018516  006F FF8C  F009    	movff	plusw1,btemp+8
 25506  01851C  0EF7               	movlw	-9
 25507  01851E  006F FF8C  F00A    	movff	plusw1,btemp+9
 25508  018524  0EF8               	movlw	-8
 25509  018526  006F FF8C  F00B    	movff	plusw1,btemp+10
 25510  01852C  0EF9               	movlw	-7
 25511  01852E  006F FF8C  F00C    	movff	plusw1,btemp+11
 25512  018534                     L31:
 25513                           
 25514                           ;stkvar	_arg @ sp[(-5)+0]
 25515  018534  0EFB               	movlw	-5
 25516  018536  0060  F027  FFE3   	movff	btemp+8,plusw1
 25517  01853C  0EFC               	movlw	-4
 25518  01853E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25519  018544  0EFD               	movlw	-3
 25520  018546  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25521  01854C  0EFE               	movlw	-2
 25522  01854E  0060  F033  FFE3   	movff	btemp+11,plusw1
 25523                           
 25524                           ;stkvar	_val @ sp[(-5)+-5]
 25525  018554  0EF6               	movlw	-10
 25526  018556  50E3               	movf	plusw1,w,c
 25527  018558  E113               	bnz	l9805
 25528  01855A  0EF7               	movlw	-9
 25529  01855C  50E3               	movf	plusw1,w,c
 25530  01855E  E110               	bnz	l9805
 25531  018560  0EF8               	movlw	-8
 25532  018562  50E3               	movf	plusw1,w,c
 25533  018564  E10D               	bnz	l9805
 25534  018566  0EF9               	movlw	-7
 25535  018568  50E3               	movf	plusw1,w,c
 25536  01856A  A4D8               	btfss	status,2,c
 25537  01856C  D009               	goto	l9805
 25538  01856E  0E00               	movlw	0
 25539  018570  6E01               	movwf	btemp^0,c
 25540  018572  0E00               	movlw	0
 25541  018574  6E02               	movwf	(btemp+1)^0,c
 25542  018576  0E00               	movlw	0
 25543  018578  6E03               	movwf	(btemp+2)^0,c
 25544  01857A  0E00               	movlw	0
 25545  01857C  6E04               	movwf	(btemp+3)^0,c
 25546  01857E  D0A2               	goto	l3134
 25547  018580                     l9805:
 25548  018580  0E96               	movlw	150
 25549  018582  6E0C               	movwf	(btemp+11)^0,c
 25550                           
 25551                           ;stkvar	_exp @ sp[(-5)+4]
 25552  018584  0EFF               	movlw	-1
 25553  018586  0060  F033  FFE3   	movff	btemp+11,plusw1
 25554  01858C  D00B               	goto	l9809
 25555  01858E                     l9807:
 25556                           
 25557                           ;stkvar	_exp @ sp[(-5)+4]
 25558  01858E  0EFF               	movlw	-1
 25559  018590  2AE3               	incf	plusw1,f,c
 25560                           
 25561                           ;stkvar	_arg @ sp[(-5)+0]
 25562  018592  90D8               	bcf	status,0,c
 25563  018594  0EFE               	movlw	-2
 25564  018596  32E3               	rrcf	plusw1,f,c
 25565  018598  0EFD               	movlw	-3
 25566  01859A  32E3               	rrcf	plusw1,f,c
 25567  01859C  0EFC               	movlw	-4
 25568  01859E  32E3               	rrcf	plusw1,f,c
 25569  0185A0  0EFB               	movlw	-5
 25570  0185A2  32E3               	rrcf	plusw1,f,c
 25571  0185A4                     l9809:
 25572                           
 25573                           ;stkvar	_arg @ sp[(-5)+0]
 25574  0185A4  50E1               	movf	fsr1l,w,c
 25575  0185A6  0FFB               	addlw	-5
 25576  0185A8  6ED9               	movwf	fsr2l,c
 25577  0185AA  50E2               	movf	fsr1h,w,c
 25578  0185AC  6EDA               	movwf	fsr2h,c
 25579  0185AE  0EFF               	movlw	255
 25580  0185B0  22DA               	addwfc	fsr2h,f,c
 25581  0185B2  52DE               	movf	postinc2,f,c
 25582  0185B4  52DE               	movf	postinc2,f,c
 25583  0185B6  52DE               	movf	postinc2,f,c
 25584  0185B8  0EFE               	movlw	254
 25585  0185BA  14DD               	andwf	postdec2,w,c
 25586  0185BC  B4D8               	btfsc	status,2,c
 25587  0185BE  D018               	goto	l9817
 25588  0185C0  D7E6               	goto	l9807
 25589  0185C2                     l9811:
 25590                           
 25591                           ;stkvar	_exp @ sp[(-5)+4]
 25592  0185C2  0EFF               	movlw	-1
 25593  0185C4  2AE3               	incf	plusw1,f,c
 25594                           
 25595                           ;stkvar	_arg @ sp[(-5)+0]
 25596  0185C6  50E1               	movf	fsr1l,w,c
 25597  0185C8  0FFB               	addlw	-5
 25598  0185CA  6ED9               	movwf	fsr2l,c
 25599  0185CC  50E2               	movf	fsr1h,w,c
 25600  0185CE  6EDA               	movwf	fsr2h,c
 25601  0185D0  0EFF               	movlw	255
 25602  0185D2  22DA               	addwfc	fsr2h,f,c
 25603  0185D4  2ADE               	incf	postinc2,f,c
 25604  0185D6  0E00               	movlw	0
 25605  0185D8  22DE               	addwfc	postinc2,f,c
 25606  0185DA  22DE               	addwfc	postinc2,f,c
 25607  0185DC  22DE               	addwfc	postinc2,f,c
 25608                           
 25609                           ;stkvar	_arg @ sp[(-5)+0]
 25610  0185DE  90D8               	bcf	status,0,c
 25611  0185E0  0EFE               	movlw	-2
 25612  0185E2  32E3               	rrcf	plusw1,f,c
 25613  0185E4  0EFD               	movlw	-3
 25614  0185E6  32E3               	rrcf	plusw1,f,c
 25615  0185E8  0EFC               	movlw	-4
 25616  0185EA  32E3               	rrcf	plusw1,f,c
 25617  0185EC  0EFB               	movlw	-5
 25618  0185EE  32E3               	rrcf	plusw1,f,c
 25619  0185F0                     l9817:
 25620                           
 25621                           ;stkvar	_arg @ sp[(-5)+0]
 25622  0185F0  50E1               	movf	fsr1l,w,c
 25623  0185F2  0FFB               	addlw	-5
 25624  0185F4  6ED9               	movwf	fsr2l,c
 25625  0185F6  50E2               	movf	fsr1h,w,c
 25626  0185F8  6EDA               	movwf	fsr2h,c
 25627  0185FA  0EFF               	movlw	255
 25628  0185FC  22DA               	addwfc	fsr2h,f,c
 25629  0185FE  52DE               	movf	postinc2,f,c
 25630  018600  52DE               	movf	postinc2,f,c
 25631  018602  52DE               	movf	postinc2,f,c
 25632  018604  0EFF               	movlw	255
 25633  018606  14DD               	andwf	postdec2,w,c
 25634  018608  B4D8               	btfsc	status,2,c
 25635  01860A  D00C               	goto	l9821
 25636  01860C  D7DA               	goto	l9811
 25637  01860E                     l9819:
 25638                           
 25639                           ;stkvar	_exp @ sp[(-5)+4]
 25640  01860E  0EFF               	movlw	-1
 25641  018610  06E3               	decf	plusw1,f,c
 25642                           
 25643                           ;stkvar	_arg @ sp[(-5)+0]
 25644  018612  90D8               	bcf	status,0,c
 25645  018614  0EFB               	movlw	-5
 25646  018616  36E3               	rlcf	plusw1,f,c
 25647  018618  0EFC               	movlw	-4
 25648  01861A  36E3               	rlcf	plusw1,f,c
 25649  01861C  0EFD               	movlw	-3
 25650  01861E  36E3               	rlcf	plusw1,f,c
 25651  018620  0EFE               	movlw	-2
 25652  018622  36E3               	rlcf	plusw1,f,c
 25653  018624                     l9821:
 25654                           
 25655                           ;stkvar	_arg @ sp[(-5)+0]
 25656  018624  0EFD               	movlw	-3
 25657  018626  BEE3               	btfsc	plusw1,7,c
 25658  018628  D007               	goto	u9150
 25659                           
 25660                           ;stkvar	_exp @ sp[(-5)+4]
 25661  01862A  0EFF               	movlw	-1
 25662  01862C  006F FF8C  F001    	movff	plusw1,btemp
 25663  018632  0E02               	movlw	2
 25664  018634  6001               	cpfslt	btemp^0,c
 25665  018636  D7EB               	goto	l9819
 25666  018638                     u9150:
 25667                           
 25668                           ;stkvar	_exp @ sp[(-5)+4]
 25669  018638  0EFF               	movlw	-1
 25670  01863A  B0E3               	btfsc	plusw1,0,c
 25671  01863C  D002               	goto	l9829
 25672                           
 25673                           ;stkvar	_arg @ sp[(-5)+0]
 25674  01863E  0EFD               	movlw	-3
 25675  018640  9EE3               	bcf	plusw1,7,c
 25676  018642                     l9829:
 25677                           
 25678                           ;stkvar	_exp @ sp[(-5)+4]
 25679  018642  50E1               	movf	fsr1l,w,c
 25680  018644  0FFF               	addlw	-1
 25681  018646  6ED9               	movwf	fsr2l,c
 25682  018648  50E2               	movf	fsr1h,w,c
 25683  01864A  6EDA               	movwf	fsr2h,c
 25684  01864C  0EFF               	movlw	255
 25685  01864E  22DA               	addwfc	fsr2h,f,c
 25686  018650  90D8               	bcf	status,0,c
 25687  018652  32DF               	rrcf	indf2,f,c
 25688                           
 25689                           ;stkvar	_exp @ sp[(-5)+4]
 25690  018654  0EFF               	movlw	-1
 25691  018656  006F FF8C  F00C    	movff	plusw1,btemp+11
 25692  01865C  0060  F030  F005   	movff	btemp+11,btemp+4
 25693  018662  6A06               	clrf	(btemp+5)^0,c
 25694  018664  6A07               	clrf	(btemp+6)^0,c
 25695  018666  6A08               	clrf	(btemp+7)^0,c
 25696  018668  0060  F014  F008   	movff	btemp+4,btemp+7
 25697  01866E  6A07               	clrf	(btemp+6)^0,c
 25698  018670  6A06               	clrf	(btemp+5)^0,c
 25699  018672  6A05               	clrf	(btemp+4)^0,c
 25700                           
 25701                           ;stkvar	_arg @ sp[(-5)+0]
 25702  018674  50E1               	movf	fsr1l,w,c
 25703  018676  0FFB               	addlw	-5
 25704  018678  6ED9               	movwf	fsr2l,c
 25705  01867A  50E2               	movf	fsr1h,w,c
 25706  01867C  6EDA               	movwf	fsr2h,c
 25707  01867E  0EFF               	movlw	255
 25708  018680  22DA               	addwfc	fsr2h,f,c
 25709  018682  5005               	movf	(btemp+4)^0,w,c
 25710  018684  12DE               	iorwf	postinc2,f,c
 25711  018686  5006               	movf	(btemp+5)^0,w,c
 25712  018688  12DE               	iorwf	postinc2,f,c
 25713  01868A  5007               	movf	(btemp+6)^0,w,c
 25714  01868C  12DE               	iorwf	postinc2,f,c
 25715  01868E  5008               	movf	(btemp+7)^0,w,c
 25716  018690  12DE               	iorwf	postinc2,f,c
 25717                           
 25718                           ;stkvar	_sign @ sp[(-5)+-1]
 25719  018692  0EFA               	movlw	-6
 25720  018694  50E3               	movf	plusw1,w,c
 25721  018696  B4D8               	btfsc	status,2,c
 25722  018698  D005               	goto	l9839
 25723                           
 25724                           ;stkvar	_val @ sp[(-5)+-5]
 25725  01869A  0EF9               	movlw	-7
 25726  01869C  AEE3               	btfss	plusw1,7,c
 25727  01869E  D002               	goto	l9839
 25728                           
 25729                           ;stkvar	_arg @ sp[(-5)+0]
 25730  0186A0  0EFE               	movlw	-2
 25731  0186A2  8EE3               	bsf	plusw1,7,c
 25732  0186A4                     l9839:
 25733                           
 25734                           ;stkvar	_arg @ sp[(-5)+0]
 25735  0186A4  0EFB               	movlw	-5
 25736  0186A6  006F FF8C  F001    	movff	plusw1,btemp
 25737  0186AC  0EFC               	movlw	-4
 25738  0186AE  006F FF8C  F002    	movff	plusw1,btemp+1
 25739  0186B4  0EFD               	movlw	-3
 25740  0186B6  006F FF8C  F003    	movff	plusw1,btemp+2
 25741  0186BC  0EFE               	movlw	-2
 25742  0186BE  006F FF8C  F004    	movff	plusw1,btemp+3
 25743  0186C4                     l3134:
 25744                           
 25745                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 25746  0186C4  0EF6               	movlw	246
 25747  0186C6  26E1               	addwf	fsr1l,f,c
 25748  0186C8  0EFF               	movlw	255
 25749  0186CA  22E2               	addwfc	fsr1h,f,c
 25750  0186CC  0012               	return		;funcret
 25751  0186CE                     __end_of___xxtofl:
 25752                           	opt callstack 0
 25753                           
 25754 ;; *************** function ___fldiv *****************
 25755 ;; Defined at:
 25756 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 25757 ;; Parameters:    Size  Location     Type
 25758 ;;  b               4  [STACK] unsigned char 
 25759 ;;  a               4  [STACK] unsigned char 
 25760 ;; Auto vars:     Size  Location     Type
 25761 ;;  grs             4  [STACK] unsigned long 
 25762 ;;  rem             4  [STACK] unsigned long 
 25763 ;;  new_exp         2  [STACK] short 
 25764 ;;  aexp            1  [STACK] unsigned char 
 25765 ;;  bexp            1  [STACK] unsigned char 
 25766 ;;  sign            1  [STACK] unsigned char 
 25767 ;; Return value:  Size  Location     Type
 25768 ;;                  4  [STACK] unsigned char 
 25769 ;; Registers used:
 25770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 25771 ;; Tracked objects:
 25772 ;;		On entry : 0/0
 25773 ;;		On exit  : 0/0
 25774 ;;		Unchanged: 0/0
 25775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25780 ;;Total ram usage:        0 bytes
 25781 ;; Hardware stack levels used:    1
 25782 ;; Hardware stack levels required when called:   15
 25783 ;; This function calls:
 25784 ;;		Nothing
 25785 ;; This function is called by:
 25786 ;;		_conv_raw_result
 25787 ;;		_convert_dac_raw
 25788 ;;		_calc_bsoc
 25789 ;;		_init_bsoc
 25790 ;;		_esr_check
 25791 ;;		_efgtoa
 25792 ;; This function uses a reentrant model
 25793 ;;
 25794                           
 25795                           	psect	text105
 25796  014DB0                     __ptext105:
 25797                           	opt callstack 0
 25798  014DB0                     ___fldiv:
 25799                           	opt callstack 0
 25800                           
 25801                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 25802  014DB0  0E0D               	movlw	13
 25803  014DB2  26E1               	addwf	fsr1l,f,c
 25804  014DB4  0E00               	movlw	0
 25805  014DB6  22E2               	addwfc	fsr1h,f,c
 25806                           
 25807                           ;stkvar	_b @ sp[(-13)+-4]
 25808                           
 25809                           ;incstack = 0
 25810 ;; hardware stack exceeded
 25811  014DB8  0EF2               	movlw	242
 25812  014DBA  24E1               	addwf	fsr1l,w,c
 25813  014DBC  6ED9               	movwf	fsr2l,c
 25814  014DBE  0EFF               	movlw	255
 25815  014DC0  20E2               	addwfc	fsr1h,w,c
 25816  014DC2  6EDA               	movwf	fsr2h,c
 25817  014DC4  50DF               	movf	indf2,w,c
 25818  014DC6  6E0C               	movwf	(btemp+11)^0,c
 25819  014DC8  0E80               	movlw	128
 25820  014DCA  160C               	andwf	(btemp+11)^0,f,c
 25821                           
 25822                           ;stkvar	_sign @ sp[(-13)+12]
 25823  014DCC  0EFF               	movlw	-1
 25824  014DCE  0060  F033  FFE3   	movff	btemp+11,plusw1
 25825                           
 25826                           ;stkvar	_b @ sp[(-13)+-4]
 25827  014DD4  0EF2               	movlw	242
 25828  014DD6  24E1               	addwf	fsr1l,w,c
 25829  014DD8  6ED9               	movwf	fsr2l,c
 25830  014DDA  0EFF               	movlw	255
 25831  014DDC  20E2               	addwfc	fsr1h,w,c
 25832  014DDE  6EDA               	movwf	fsr2h,c
 25833  014DE0  50DF               	movf	indf2,w,c
 25834  014DE2  6E0C               	movwf	(btemp+11)^0,c
 25835  014DE4  90D8               	bcf	status,0,c
 25836  014DE6  340C               	rlcf	(btemp+11)^0,w,c
 25837  014DE8  6E0B               	movwf	(btemp+10)^0,c
 25838                           
 25839                           ;stkvar	_bexp @ sp[(-13)+11]
 25840  014DEA  0EFE               	movlw	-2
 25841  014DEC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25842                           
 25843                           ;stkvar	_b @ sp[(-13)+-4]
 25844  014DF2  0EF1               	movlw	241
 25845  014DF4  24E1               	addwf	fsr1l,w,c
 25846  014DF6  6ED9               	movwf	fsr2l,c
 25847  014DF8  0EFF               	movlw	255
 25848  014DFA  20E2               	addwfc	fsr1h,w,c
 25849  014DFC  6EDA               	movwf	fsr2h,c
 25850  014DFE  AEDF               	btfss	indf2,7,c
 25851  014E00  D002               	goto	l8369
 25852                           
 25853                           ;stkvar	_bexp @ sp[(-13)+11]
 25854  014E02  0EFE               	movlw	-2
 25855  014E04  80E3               	bsf	plusw1,0,c
 25856  014E06                     l8369:
 25857                           
 25858                           ;stkvar	_bexp @ sp[(-13)+11]
 25859  014E06  0EFE               	movlw	-2
 25860  014E08  50E3               	movf	plusw1,w,c
 25861  014E0A  B4D8               	btfsc	status,2,c
 25862  014E0C  D027               	goto	l8379
 25863                           
 25864                           ;stkvar	_bexp @ sp[(-13)+11]
 25865  014E0E  0EFE               	movlw	-2
 25866  014E10  28E3               	incf	plusw1,w,c
 25867  014E12  A4D8               	btfss	status,2,c
 25868  014E14  D018               	goto	l8375
 25869  014E16  0E00               	movlw	0
 25870  014E18  6E09               	movwf	(btemp+8)^0,c
 25871  014E1A  0E00               	movlw	0
 25872  014E1C  6E0A               	movwf	(btemp+9)^0,c
 25873  014E1E  0E00               	movlw	0
 25874  014E20  6E0B               	movwf	(btemp+10)^0,c
 25875  014E22  0E00               	movlw	0
 25876  014E24  6E0C               	movwf	(btemp+11)^0,c
 25877                           
 25878                           ;stkvar	_b @ sp[(-13)+-4]
 25879  014E26  0EEF               	movlw	-17
 25880  014E28  0060  F027  FFE3   	movff	btemp+8,plusw1
 25881  014E2E  0EF0               	movlw	-16
 25882  014E30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25883  014E36  0EF1               	movlw	-15
 25884  014E38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25885  014E3E  0EF2               	movlw	-14
 25886  014E40  0060  F033  FFE3   	movff	btemp+11,plusw1
 25887  014E46                     l8375:
 25888                           
 25889                           ;stkvar	_b @ sp[(-13)+-4]
 25890  014E46  0EF1               	movlw	-15
 25891  014E48  8EE3               	bsf	plusw1,7,c
 25892                           
 25893                           ;stkvar	_b @ sp[(-13)+-4]
 25894  014E4A  0EF2               	movlw	242
 25895  014E4C  24E1               	addwf	fsr1l,w,c
 25896  014E4E  6ED9               	movwf	fsr2l,c
 25897  014E50  0EFF               	movlw	255
 25898  014E52  20E2               	addwfc	fsr1h,w,c
 25899  014E54  6EDA               	movwf	fsr2h,c
 25900  014E56  0E00               	movlw	0
 25901  014E58  6EDF               	movwf	indf2,c
 25902  014E5A  D018               	goto	l8381
 25903  014E5C                     l8379:
 25904  014E5C  0E00               	movlw	0
 25905  014E5E  6E09               	movwf	(btemp+8)^0,c
 25906  014E60  0E00               	movlw	0
 25907  014E62  6E0A               	movwf	(btemp+9)^0,c
 25908  014E64  0E00               	movlw	0
 25909  014E66  6E0B               	movwf	(btemp+10)^0,c
 25910  014E68  0E00               	movlw	0
 25911  014E6A  6E0C               	movwf	(btemp+11)^0,c
 25912                           
 25913                           ;stkvar	_b @ sp[(-13)+-4]
 25914  014E6C  0EEF               	movlw	-17
 25915  014E6E  0060  F027  FFE3   	movff	btemp+8,plusw1
 25916  014E74  0EF0               	movlw	-16
 25917  014E76  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25918  014E7C  0EF1               	movlw	-15
 25919  014E7E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25920  014E84  0EF2               	movlw	-14
 25921  014E86  0060  F033  FFE3   	movff	btemp+11,plusw1
 25922  014E8C                     l8381:
 25923                           
 25924                           ;stkvar	_a @ sp[(-13)+-8]
 25925  014E8C  0EEE               	movlw	238
 25926  014E8E  24E1               	addwf	fsr1l,w,c
 25927  014E90  6ED9               	movwf	fsr2l,c
 25928  014E92  0EFF               	movlw	255
 25929  014E94  20E2               	addwfc	fsr1h,w,c
 25930  014E96  6EDA               	movwf	fsr2h,c
 25931  014E98  50DF               	movf	indf2,w,c
 25932  014E9A  6E0C               	movwf	(btemp+11)^0,c
 25933  014E9C  0E80               	movlw	128
 25934  014E9E  160C               	andwf	(btemp+11)^0,f,c
 25935                           
 25936                           ;stkvar	_sign @ sp[(-13)+12]
 25937  014EA0  50E1               	movf	fsr1l,w,c
 25938  014EA2  0FFF               	addlw	-1
 25939  014EA4  6ED9               	movwf	fsr2l,c
 25940  014EA6  50E2               	movf	fsr1h,w,c
 25941  014EA8  6EDA               	movwf	fsr2h,c
 25942  014EAA  0EFF               	movlw	255
 25943  014EAC  22DA               	addwfc	fsr2h,f,c
 25944  014EAE  500C               	movf	(btemp+11)^0,w,c
 25945  014EB0  1ADF               	xorwf	indf2,f,c
 25946                           
 25947                           ;stkvar	_a @ sp[(-13)+-8]
 25948  014EB2  0EEE               	movlw	238
 25949  014EB4  24E1               	addwf	fsr1l,w,c
 25950  014EB6  6ED9               	movwf	fsr2l,c
 25951  014EB8  0EFF               	movlw	255
 25952  014EBA  20E2               	addwfc	fsr1h,w,c
 25953  014EBC  6EDA               	movwf	fsr2h,c
 25954  014EBE  50DF               	movf	indf2,w,c
 25955  014EC0  6E0C               	movwf	(btemp+11)^0,c
 25956  014EC2  90D8               	bcf	status,0,c
 25957  014EC4  340C               	rlcf	(btemp+11)^0,w,c
 25958  014EC6  6E0B               	movwf	(btemp+10)^0,c
 25959                           
 25960                           ;stkvar	_aexp @ sp[(-13)+10]
 25961  014EC8  0EFD               	movlw	-3
 25962  014ECA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25963                           
 25964                           ;stkvar	_a @ sp[(-13)+-8]
 25965  014ED0  0EED               	movlw	237
 25966  014ED2  24E1               	addwf	fsr1l,w,c
 25967  014ED4  6ED9               	movwf	fsr2l,c
 25968  014ED6  0EFF               	movlw	255
 25969  014ED8  20E2               	addwfc	fsr1h,w,c
 25970  014EDA  6EDA               	movwf	fsr2h,c
 25971  014EDC  AEDF               	btfss	indf2,7,c
 25972  014EDE  D002               	goto	l8389
 25973                           
 25974                           ;stkvar	_aexp @ sp[(-13)+10]
 25975  014EE0  0EFD               	movlw	-3
 25976  014EE2  80E3               	bsf	plusw1,0,c
 25977  014EE4                     l8389:
 25978                           
 25979                           ;stkvar	_aexp @ sp[(-13)+10]
 25980  014EE4  0EFD               	movlw	-3
 25981  014EE6  50E3               	movf	plusw1,w,c
 25982  014EE8  B4D8               	btfsc	status,2,c
 25983  014EEA  D027               	goto	l8399
 25984                           
 25985                           ;stkvar	_aexp @ sp[(-13)+10]
 25986  014EEC  0EFD               	movlw	-3
 25987  014EEE  28E3               	incf	plusw1,w,c
 25988  014EF0  A4D8               	btfss	status,2,c
 25989  014EF2  D018               	goto	l8395
 25990  014EF4  0E00               	movlw	0
 25991  014EF6  6E09               	movwf	(btemp+8)^0,c
 25992  014EF8  0E00               	movlw	0
 25993  014EFA  6E0A               	movwf	(btemp+9)^0,c
 25994  014EFC  0E00               	movlw	0
 25995  014EFE  6E0B               	movwf	(btemp+10)^0,c
 25996  014F00  0E00               	movlw	0
 25997  014F02  6E0C               	movwf	(btemp+11)^0,c
 25998                           
 25999                           ;stkvar	_a @ sp[(-13)+-8]
 26000  014F04  0EEB               	movlw	-21
 26001  014F06  0060  F027  FFE3   	movff	btemp+8,plusw1
 26002  014F0C  0EEC               	movlw	-20
 26003  014F0E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26004  014F14  0EED               	movlw	-19
 26005  014F16  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26006  014F1C  0EEE               	movlw	-18
 26007  014F1E  0060  F033  FFE3   	movff	btemp+11,plusw1
 26008  014F24                     l8395:
 26009                           
 26010                           ;stkvar	_a @ sp[(-13)+-8]
 26011  014F24  0EED               	movlw	-19
 26012  014F26  8EE3               	bsf	plusw1,7,c
 26013                           
 26014                           ;stkvar	_a @ sp[(-13)+-8]
 26015  014F28  0EEE               	movlw	238
 26016  014F2A  24E1               	addwf	fsr1l,w,c
 26017  014F2C  6ED9               	movwf	fsr2l,c
 26018  014F2E  0EFF               	movlw	255
 26019  014F30  20E2               	addwfc	fsr1h,w,c
 26020  014F32  6EDA               	movwf	fsr2h,c
 26021  014F34  0E00               	movlw	0
 26022  014F36  6EDF               	movwf	indf2,c
 26023  014F38  D018               	goto	l8401
 26024  014F3A                     l8399:
 26025  014F3A  0E00               	movlw	0
 26026  014F3C  6E09               	movwf	(btemp+8)^0,c
 26027  014F3E  0E00               	movlw	0
 26028  014F40  6E0A               	movwf	(btemp+9)^0,c
 26029  014F42  0E00               	movlw	0
 26030  014F44  6E0B               	movwf	(btemp+10)^0,c
 26031  014F46  0E00               	movlw	0
 26032  014F48  6E0C               	movwf	(btemp+11)^0,c
 26033                           
 26034                           ;stkvar	_a @ sp[(-13)+-8]
 26035  014F4A  0EEB               	movlw	-21
 26036  014F4C  0060  F027  FFE3   	movff	btemp+8,plusw1
 26037  014F52  0EEC               	movlw	-20
 26038  014F54  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26039  014F5A  0EED               	movlw	-19
 26040  014F5C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26041  014F62  0EEE               	movlw	-18
 26042  014F64  0060  F033  FFE3   	movff	btemp+11,plusw1
 26043  014F6A                     l8401:
 26044                           
 26045                           ;stkvar	_a @ sp[(-13)+-8]
 26046  014F6A  0EEB               	movlw	-21
 26047  014F6C  50E3               	movf	plusw1,w,c
 26048  014F6E  E139               	bnz	l8413
 26049  014F70  0EEC               	movlw	-20
 26050  014F72  50E3               	movf	plusw1,w,c
 26051  014F74  E136               	bnz	l8413
 26052  014F76  0EED               	movlw	-19
 26053  014F78  50E3               	movf	plusw1,w,c
 26054  014F7A  E133               	bnz	l8413
 26055  014F7C  0EEE               	movlw	-18
 26056  014F7E  50E3               	movf	plusw1,w,c
 26057  014F80  A4D8               	btfss	status,2,c
 26058  014F82  D02F               	goto	l8413
 26059                           
 26060                           ;stkvar	_b @ sp[(-13)+-4]
 26061  014F84  0EEF               	movlw	-17
 26062  014F86  6AE3               	clrf	plusw1,c
 26063  014F88  0EF0               	movlw	-16
 26064  014F8A  6AE3               	clrf	plusw1,c
 26065  014F8C  0EF1               	movlw	-15
 26066  014F8E  6AE3               	clrf	plusw1,c
 26067  014F90  0EF2               	movlw	-14
 26068  014F92  6AE3               	clrf	plusw1,c
 26069                           
 26070                           ;stkvar	_b @ sp[(-13)+-4]
 26071  014F94  0EF1               	movlw	241
 26072  014F96  24E1               	addwf	fsr1l,w,c
 26073  014F98  6ED9               	movwf	fsr2l,c
 26074  014F9A  0EFF               	movlw	255
 26075  014F9C  20E2               	addwfc	fsr1h,w,c
 26076  014F9E  6EDA               	movwf	fsr2h,c
 26077  014FA0  0E80               	movlw	128
 26078  014FA2  12DE               	iorwf	postinc2,f,c
 26079  014FA4  0E7F               	movlw	127
 26080  014FA6  12DD               	iorwf	postdec2,f,c
 26081  014FA8                     l8407:
 26082                           
 26083                           ;stkvar	_sign @ sp[(-13)+12]
 26084  014FA8  0EFF               	movlw	-1
 26085  014FAA  006F FF8C  F00C    	movff	plusw1,btemp+11
 26086                           
 26087                           ;stkvar	_b @ sp[(-13)+-4]
 26088  014FB0  0EF2               	movlw	242
 26089  014FB2  24E1               	addwf	fsr1l,w,c
 26090  014FB4  6ED9               	movwf	fsr2l,c
 26091  014FB6  0EFF               	movlw	255
 26092  014FB8  20E2               	addwfc	fsr1h,w,c
 26093  014FBA  6EDA               	movwf	fsr2h,c
 26094  014FBC  500C               	movf	(btemp+11)^0,w,c
 26095  014FBE  12DF               	iorwf	indf2,f,c
 26096                           
 26097                           ;stkvar	_b @ sp[(-13)+-4]
 26098  014FC0  0EEF               	movlw	-17
 26099  014FC2  006F FF8C  F001    	movff	plusw1,btemp
 26100  014FC8  0EF0               	movlw	-16
 26101  014FCA  006F FF8C  F002    	movff	plusw1,btemp+1
 26102  014FD0  0EF1               	movlw	-15
 26103  014FD2  006F FF8C  F003    	movff	plusw1,btemp+2
 26104  014FD8  0EF2               	movlw	-14
 26105  014FDA  006F FF8C  F004    	movff	plusw1,btemp+3
 26106  014FE0  D19F               	goto	l3058
 26107  014FE2                     l8413:
 26108                           
 26109                           ;stkvar	_bexp @ sp[(-13)+11]
 26110  014FE2  0EFE               	movlw	-2
 26111  014FE4  50E3               	movf	plusw1,w,c
 26112  014FE6  A4D8               	btfss	status,2,c
 26113  014FE8  D009               	goto	l8421
 26114  014FEA  0E00               	movlw	0
 26115  014FEC  6E01               	movwf	btemp^0,c
 26116  014FEE  0E00               	movlw	0
 26117  014FF0  6E02               	movwf	(btemp+1)^0,c
 26118  014FF2  0E00               	movlw	0
 26119  014FF4  6E03               	movwf	(btemp+2)^0,c
 26120  014FF6  0E00               	movlw	0
 26121  014FF8  6E04               	movwf	(btemp+3)^0,c
 26122  014FFA  D192               	goto	l3058
 26123  014FFC                     l8421:
 26124                           
 26125                           ;stkvar	_bexp @ sp[(-13)+11]
 26126  014FFC  0EFE               	movlw	-2
 26127  014FFE  50E3               	movf	plusw1,w,c
 26128  015000  6E0B               	movwf	(btemp+10)^0,c
 26129  015002  6A0C               	clrf	(btemp+11)^0,c
 26130                           
 26131                           ;stkvar	_aexp @ sp[(-13)+10]
 26132  015004  0EFD               	movlw	-3
 26133  015006  50E3               	movf	plusw1,w,c
 26134  015008  5E0B               	subwf	(btemp+10)^0,f,c
 26135  01500A  0E00               	movlw	0
 26136  01500C  5A0C               	subwfb	(btemp+11)^0,f,c
 26137  01500E  0E7F               	movlw	127
 26138  015010  260B               	addwf	(btemp+10)^0,f,c
 26139  015012  0E00               	movlw	0
 26140  015014  220C               	addwfc	(btemp+11)^0,f,c
 26141                           
 26142                           ;stkvar	_new_exp @ sp[(-13)+8]
 26143  015016  0EFB               	movlw	-5
 26144  015018  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26145  01501E  0EFC               	movlw	-4
 26146  015020  0060  F033  FFE3   	movff	btemp+11,plusw1
 26147                           
 26148                           ;stkvar	_b @ sp[(-13)+-4]
 26149  015026  0EEF               	movlw	-17
 26150  015028  006F FF8C  F009    	movff	plusw1,btemp+8
 26151  01502E  0EF0               	movlw	-16
 26152  015030  006F FF8C  F00A    	movff	plusw1,btemp+9
 26153  015036  0EF1               	movlw	-15
 26154  015038  006F FF8C  F00B    	movff	plusw1,btemp+10
 26155  01503E  0EF2               	movlw	-14
 26156  015040  006F FF8C  F00C    	movff	plusw1,btemp+11
 26157                           
 26158                           ;stkvar	_rem @ sp[(-13)+4]
 26159  015046  0EF7               	movlw	-9
 26160  015048  0060  F027  FFE3   	movff	btemp+8,plusw1
 26161  01504E  0EF8               	movlw	-8
 26162  015050  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26163  015056  0EF9               	movlw	-7
 26164  015058  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26165  01505E  0EFA               	movlw	-6
 26166  015060  0060  F033  FFE3   	movff	btemp+11,plusw1
 26167                           
 26168                           ;stkvar	_b @ sp[(-13)+-4]
 26169  015066  0EEF               	movlw	-17
 26170  015068  6AE3               	clrf	plusw1,c
 26171  01506A  0EF0               	movlw	-16
 26172  01506C  6AE3               	clrf	plusw1,c
 26173  01506E  0EF1               	movlw	-15
 26174  015070  6AE3               	clrf	plusw1,c
 26175  015072  0EF2               	movlw	-14
 26176  015074  6AE3               	clrf	plusw1,c
 26177                           
 26178                           ;stkvar	_grs @ sp[(-13)+0]
 26179  015076  0EF3               	movlw	-13
 26180  015078  6AE3               	clrf	plusw1,c
 26181  01507A  0EF4               	movlw	-12
 26182  01507C  6AE3               	clrf	plusw1,c
 26183  01507E  0EF5               	movlw	-11
 26184  015080  6AE3               	clrf	plusw1,c
 26185  015082  0EF6               	movlw	-10
 26186  015084  6AE3               	clrf	plusw1,c
 26187                           
 26188                           ;stkvar	_aexp @ sp[(-13)+10]
 26189  015086  0EFD               	movlw	-3
 26190  015088  6AE3               	clrf	plusw1,c
 26191  01508A  D050               	goto	l8449
 26192  01508C                     l8431:
 26193                           
 26194                           ;stkvar	_aexp @ sp[(-13)+10]
 26195  01508C  0EFD               	movlw	-3
 26196  01508E  50E3               	movf	plusw1,w,c
 26197  015090  B4D8               	btfsc	status,2,c
 26198  015092  D020               	goto	l8441
 26199                           
 26200                           ;stkvar	_rem @ sp[(-13)+4]
 26201  015094  90D8               	bcf	status,0,c
 26202  015096  0EF7               	movlw	-9
 26203  015098  36E3               	rlcf	plusw1,f,c
 26204  01509A  0EF8               	movlw	-8
 26205  01509C  36E3               	rlcf	plusw1,f,c
 26206  01509E  0EF9               	movlw	-7
 26207  0150A0  36E3               	rlcf	plusw1,f,c
 26208  0150A2  0EFA               	movlw	-6
 26209  0150A4  36E3               	rlcf	plusw1,f,c
 26210                           
 26211                           ;stkvar	_b @ sp[(-13)+-4]
 26212  0150A6  90D8               	bcf	status,0,c
 26213  0150A8  0EEF               	movlw	-17
 26214  0150AA  36E3               	rlcf	plusw1,f,c
 26215  0150AC  0EF0               	movlw	-16
 26216  0150AE  36E3               	rlcf	plusw1,f,c
 26217  0150B0  0EF1               	movlw	-15
 26218  0150B2  36E3               	rlcf	plusw1,f,c
 26219  0150B4  0EF2               	movlw	-14
 26220  0150B6  36E3               	rlcf	plusw1,f,c
 26221                           
 26222                           ;stkvar	_grs @ sp[(-13)+0]
 26223  0150B8  0EF6               	movlw	-10
 26224  0150BA  AEE3               	btfss	plusw1,7,c
 26225  0150BC  D002               	goto	l8439
 26226                           
 26227                           ;stkvar	_b @ sp[(-13)+-4]
 26228  0150BE  0EEF               	movlw	-17
 26229  0150C0  80E3               	bsf	plusw1,0,c
 26230  0150C2                     l8439:
 26231                           
 26232                           ;stkvar	_grs @ sp[(-13)+0]
 26233  0150C2  90D8               	bcf	status,0,c
 26234  0150C4  0EF3               	movlw	-13
 26235  0150C6  36E3               	rlcf	plusw1,f,c
 26236  0150C8  0EF4               	movlw	-12
 26237  0150CA  36E3               	rlcf	plusw1,f,c
 26238  0150CC  0EF5               	movlw	-11
 26239  0150CE  36E3               	rlcf	plusw1,f,c
 26240  0150D0  0EF6               	movlw	-10
 26241  0150D2  36E3               	rlcf	plusw1,f,c
 26242  0150D4                     l8441:
 26243                           
 26244                           ;stkvar	_a @ sp[(-13)+-8]
 26245                           ;stkvar	_rem @ sp[(-13)+4]
 26246  0150D4  50E1               	movf	fsr1l,w,c
 26247  0150D6  0FF7               	addlw	-9
 26248  0150D8  6ED9               	movwf	fsr2l,c
 26249  0150DA  50E2               	movf	fsr1h,w,c
 26250  0150DC  6EDA               	movwf	fsr2h,c
 26251  0150DE  0EFF               	movlw	255
 26252  0150E0  22DA               	addwfc	fsr2h,f,c
 26253  0150E2  0EEB               	movlw	-21
 26254  0150E4  50E3               	movf	plusw1,w,c
 26255  0150E6  5CDE               	subwf	postinc2,w,c
 26256  0150E8  0EEC               	movlw	-20
 26257  0150EA  50E3               	movf	plusw1,w,c
 26258  0150EC  58DE               	subwfb	postinc2,w,c
 26259  0150EE  0EED               	movlw	-19
 26260  0150F0  50E3               	movf	plusw1,w,c
 26261  0150F2  58DE               	subwfb	postinc2,w,c
 26262  0150F4  0EEE               	movlw	-18
 26263  0150F6  50E3               	movf	plusw1,w,c
 26264  0150F8  58DE               	subwfb	postinc2,w,c
 26265  0150FA  A0D8               	btfss	status,0,c
 26266  0150FC  D015               	goto	l8447
 26267                           
 26268                           ;stkvar	_grs @ sp[(-13)+0]
 26269  0150FE  0EF6               	movlw	-10
 26270  015100  8CE3               	bsf	plusw1,6,c
 26271                           
 26272                           ;stkvar	_a @ sp[(-13)+-8]
 26273                           ;stkvar	_rem @ sp[(-13)+4]
 26274  015102  50E1               	movf	fsr1l,w,c
 26275  015104  0FF7               	addlw	-9
 26276  015106  6ED9               	movwf	fsr2l,c
 26277  015108  50E2               	movf	fsr1h,w,c
 26278  01510A  6EDA               	movwf	fsr2h,c
 26279  01510C  0EFF               	movlw	255
 26280  01510E  22DA               	addwfc	fsr2h,f,c
 26281  015110  0EEB               	movlw	-21
 26282  015112  50E3               	movf	plusw1,w,c
 26283  015114  5EDE               	subwf	postinc2,f,c
 26284  015116  0EEC               	movlw	-20
 26285  015118  50E3               	movf	plusw1,w,c
 26286  01511A  5ADE               	subwfb	postinc2,f,c
 26287  01511C  0EED               	movlw	-19
 26288  01511E  50E3               	movf	plusw1,w,c
 26289  015120  5ADE               	subwfb	postinc2,f,c
 26290  015122  0EEE               	movlw	-18
 26291  015124  50E3               	movf	plusw1,w,c
 26292  015126  5ADE               	subwfb	postinc2,f,c
 26293  015128                     l8447:
 26294                           
 26295                           ;stkvar	_aexp @ sp[(-13)+10]
 26296  015128  0EFD               	movlw	-3
 26297  01512A  2AE3               	incf	plusw1,f,c
 26298  01512C                     l8449:
 26299                           
 26300                           ;stkvar	_aexp @ sp[(-13)+10]
 26301  01512C  0EFD               	movlw	-3
 26302  01512E  006F FF8C  F001    	movff	plusw1,btemp
 26303  015134  0E19               	movlw	25
 26304  015136  6401               	cpfsgt	btemp^0,c
 26305  015138  D7A9               	goto	l8431
 26306                           
 26307                           ;stkvar	_rem @ sp[(-13)+4]
 26308  01513A  0EF7               	movlw	-9
 26309  01513C  50E3               	movf	plusw1,w,c
 26310  01513E  E10A               	bnz	u6740
 26311  015140  0EF8               	movlw	-8
 26312  015142  50E3               	movf	plusw1,w,c
 26313  015144  E107               	bnz	u6740
 26314  015146  0EF9               	movlw	-7
 26315  015148  50E3               	movf	plusw1,w,c
 26316  01514A  E104               	bnz	u6740
 26317  01514C  0EFA               	movlw	-6
 26318  01514E  50E3               	movf	plusw1,w,c
 26319  015150  B4D8               	btfsc	status,2,c
 26320  015152  D024               	goto	l8465
 26321  015154                     u6740:
 26322                           
 26323                           ;stkvar	_grs @ sp[(-13)+0]
 26324  015154  0EF3               	movlw	-13
 26325  015156  80E3               	bsf	plusw1,0,c
 26326  015158  D021               	goto	l8465
 26327  01515A                     l8455:
 26328                           
 26329                           ;stkvar	_b @ sp[(-13)+-4]
 26330  01515A  90D8               	bcf	status,0,c
 26331  01515C  0EEF               	movlw	-17
 26332  01515E  36E3               	rlcf	plusw1,f,c
 26333  015160  0EF0               	movlw	-16
 26334  015162  36E3               	rlcf	plusw1,f,c
 26335  015164  0EF1               	movlw	-15
 26336  015166  36E3               	rlcf	plusw1,f,c
 26337  015168  0EF2               	movlw	-14
 26338  01516A  36E3               	rlcf	plusw1,f,c
 26339                           
 26340                           ;stkvar	_grs @ sp[(-13)+0]
 26341  01516C  0EF6               	movlw	-10
 26342  01516E  AEE3               	btfss	plusw1,7,c
 26343  015170  D002               	goto	l8461
 26344                           
 26345                           ;stkvar	_b @ sp[(-13)+-4]
 26346  015172  0EEF               	movlw	-17
 26347  015174  80E3               	bsf	plusw1,0,c
 26348  015176                     l8461:
 26349                           
 26350                           ;stkvar	_grs @ sp[(-13)+0]
 26351  015176  90D8               	bcf	status,0,c
 26352  015178  0EF3               	movlw	-13
 26353  01517A  36E3               	rlcf	plusw1,f,c
 26354  01517C  0EF4               	movlw	-12
 26355  01517E  36E3               	rlcf	plusw1,f,c
 26356  015180  0EF5               	movlw	-11
 26357  015182  36E3               	rlcf	plusw1,f,c
 26358  015184  0EF6               	movlw	-10
 26359  015186  36E3               	rlcf	plusw1,f,c
 26360                           
 26361                           ;stkvar	_new_exp @ sp[(-13)+8]
 26362  015188  50E1               	movf	fsr1l,w,c
 26363  01518A  0FFB               	addlw	-5
 26364  01518C  6ED9               	movwf	fsr2l,c
 26365  01518E  50E2               	movf	fsr1h,w,c
 26366  015190  6EDA               	movwf	fsr2h,c
 26367  015192  0EFF               	movlw	255
 26368  015194  22DA               	addwfc	fsr2h,f,c
 26369  015196  06DE               	decf	postinc2,f,c
 26370  015198  0E00               	movlw	0
 26371  01519A  5ADD               	subwfb	postdec2,f,c
 26372  01519C                     l8465:
 26373                           
 26374                           ;stkvar	_b @ sp[(-13)+-4]
 26375  01519C  0EF1               	movlw	-15
 26376  01519E  AEE3               	btfss	plusw1,7,c
 26377  0151A0  D7DC               	goto	l8455
 26378                           
 26379                           ;stkvar	_aexp @ sp[(-13)+10]
 26380  0151A2  0EFD               	movlw	-3
 26381  0151A4  6AE3               	clrf	plusw1,c
 26382                           
 26383                           ;stkvar	_grs @ sp[(-13)+0]
 26384  0151A6  0EF6               	movlw	-10
 26385  0151A8  AEE3               	btfss	plusw1,7,c
 26386  0151AA  D020               	goto	l8479
 26387                           
 26388                           ;stkvar	_grs @ sp[(-13)+0]
 26389  0151AC  50E1               	movf	fsr1l,w,c
 26390  0151AE  0FF3               	addlw	-13
 26391  0151B0  6ED9               	movwf	fsr2l,c
 26392  0151B2  50E2               	movf	fsr1h,w,c
 26393  0151B4  6EDA               	movwf	fsr2h,c
 26394  0151B6  0EFF               	movlw	255
 26395  0151B8  22DA               	addwfc	fsr2h,f,c
 26396  0151BA  0EFF               	movlw	255
 26397  0151BC  14DE               	andwf	postinc2,w,c
 26398  0151BE  6E09               	movwf	(btemp+8)^0,c
 26399  0151C0  0EFF               	movlw	255
 26400  0151C2  14DE               	andwf	postinc2,w,c
 26401  0151C4  6E0A               	movwf	(btemp+9)^0,c
 26402  0151C6  0EFF               	movlw	255
 26403  0151C8  14DE               	andwf	postinc2,w,c
 26404  0151CA  6E0B               	movwf	(btemp+10)^0,c
 26405  0151CC  0E7F               	movlw	127
 26406  0151CE  14DE               	andwf	postinc2,w,c
 26407  0151D0  6E0C               	movwf	(btemp+11)^0,c
 26408  0151D2  5009               	movf	(btemp+8)^0,w,c
 26409  0151D4  100A               	iorwf	(btemp+9)^0,w,c
 26410  0151D6  100B               	iorwf	(btemp+10)^0,w,c
 26411  0151D8  100C               	iorwf	(btemp+11)^0,w,c
 26412  0151DA  B4D8               	btfsc	status,2,c
 26413  0151DC  D004               	goto	l8475
 26414  0151DE                     u6780:
 26415                           
 26416                           ;stkvar	_aexp @ sp[(-13)+10]
 26417  0151DE  0EFD               	movlw	-3
 26418  0151E0  6AE3               	clrf	plusw1,c
 26419  0151E2  2AE3               	incf	plusw1,f,c
 26420  0151E4  D003               	goto	l8479
 26421  0151E6                     l8475:
 26422                           
 26423                           ;stkvar	_b @ sp[(-13)+-4]
 26424  0151E6  0EEF               	movlw	-17
 26425  0151E8  B0E3               	btfsc	plusw1,0,c
 26426  0151EA  D7F9               	goto	u6780
 26427  0151EC                     l8479:
 26428                           
 26429                           ;stkvar	_aexp @ sp[(-13)+10]
 26430  0151EC  0EFD               	movlw	-3
 26431  0151EE  50E3               	movf	plusw1,w,c
 26432  0151F0  B4D8               	btfsc	status,2,c
 26433  0151F2  D036               	goto	l8489
 26434                           
 26435                           ;stkvar	_b @ sp[(-13)+-4]
 26436  0151F4  50E1               	movf	fsr1l,w,c
 26437  0151F6  0FEF               	addlw	-17
 26438  0151F8  6ED9               	movwf	fsr2l,c
 26439  0151FA  50E2               	movf	fsr1h,w,c
 26440  0151FC  6EDA               	movwf	fsr2h,c
 26441  0151FE  0EFF               	movlw	255
 26442  015200  22DA               	addwfc	fsr2h,f,c
 26443  015202  2ADE               	incf	postinc2,f,c
 26444  015204  0E00               	movlw	0
 26445  015206  22DE               	addwfc	postinc2,f,c
 26446  015208  22DE               	addwfc	postinc2,f,c
 26447  01520A  22DE               	addwfc	postinc2,f,c
 26448                           
 26449                           ;stkvar	_b @ sp[(-13)+-4]
 26450  01520C  0EF2               	movlw	-14
 26451  01520E  A0E3               	btfss	plusw1,0,c
 26452  015210  D027               	goto	l8489
 26453  015212  0E01               	movlw	1
 26454  015214  6E0C               	movwf	(btemp+11)^0,c
 26455                           
 26456                           ;stkvar	_b @ sp[(-13)+-4]
 26457  015216  50E1               	movf	fsr1l,w,c
 26458  015218  0FEF               	addlw	-17
 26459  01521A  6ED9               	movwf	fsr2l,c
 26460  01521C  50E2               	movf	fsr1h,w,c
 26461  01521E  6EDA               	movwf	fsr2h,c
 26462  015220  0EFF               	movlw	255
 26463  015222  22DA               	addwfc	fsr2h,f,c
 26464  015224  280C               	incf	(btemp+11)^0,w,c
 26465  015226  52DE               	movf	postinc2,f,c
 26466  015228  D008               	goto	u6820
 26467  01522A                     u6825:
 26468  01522A  52DE               	movf	postinc2,f,c
 26469  01522C  90D8               	bcf	status,0,c
 26470  01522E  BEDC               	btfsc	preinc2,7,c
 26471  015230  80D8               	bsf	status,0,c
 26472  015232  32DD               	rrcf	postdec2,f,c
 26473  015234  32DD               	rrcf	postdec2,f,c
 26474  015236  32DD               	rrcf	postdec2,f,c
 26475  015238  32DE               	rrcf	postinc2,f,c
 26476  01523A                     u6820:
 26477  01523A  2EE8               	decfsz	wreg,f,c
 26478  01523C  D7F6               	goto	u6825
 26479                           
 26480                           ;stkvar	_new_exp @ sp[(-13)+8]
 26481  01523E  0EFB               	movlw	-5
 26482  015240  50E3               	movf	plusw1,w,c
 26483  015242  0F01               	addlw	1
 26484  015244  6E01               	movwf	btemp^0,c
 26485  015246  0EFB               	movlw	-5
 26486  015248  0060  F007  FFE3   	movff	btemp,plusw1
 26487  01524E  6A01               	clrf	btemp^0,c
 26488  015250  0EFC               	movlw	-4
 26489  015252  50E3               	movf	plusw1,w,c
 26490  015254  2001               	addwfc	btemp^0,w,c
 26491  015256  6E01               	movwf	btemp^0,c
 26492  015258  0EFC               	movlw	-4
 26493  01525A  0060  F007  FFE3   	movff	btemp,plusw1
 26494  015260                     l8489:
 26495                           
 26496                           ;stkvar	_new_exp @ sp[(-13)+8]
 26497  015260  0EFC               	movlw	-4
 26498  015262  BEE3               	btfsc	plusw1,7,c
 26499  015264  D01B               	goto	l8495
 26500  015266  0EFC               	movlw	-4
 26501  015268  50E3               	movf	plusw1,w,c
 26502  01526A  E104               	bnz	u6830
 26503  01526C  0EFB               	movlw	-5
 26504  01526E  28E3               	incf	plusw1,w,c
 26505  015270  A0D8               	btfss	status,0,c
 26506  015272  D014               	goto	l8495
 26507  015274                     u6830:
 26508  015274  0EFF               	movlw	255
 26509  015276  6E0B               	movwf	(btemp+10)^0,c
 26510  015278  0E00               	movlw	0
 26511  01527A  6E0C               	movwf	(btemp+11)^0,c
 26512                           
 26513                           ;stkvar	_new_exp @ sp[(-13)+8]
 26514  01527C  0EFB               	movlw	-5
 26515  01527E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26516  015284  0EFC               	movlw	-4
 26517  015286  0060  F033  FFE3   	movff	btemp+11,plusw1
 26518                           
 26519                           ;stkvar	_b @ sp[(-13)+-4]
 26520  01528C  0EEF               	movlw	-17
 26521  01528E  6AE3               	clrf	plusw1,c
 26522  015290  0EF0               	movlw	-16
 26523  015292  6AE3               	clrf	plusw1,c
 26524  015294  0EF1               	movlw	-15
 26525  015296  6AE3               	clrf	plusw1,c
 26526  015298  0EF2               	movlw	-14
 26527  01529A  6AE3               	clrf	plusw1,c
 26528  01529C                     l8495:
 26529                           
 26530                           ;stkvar	_new_exp @ sp[(-13)+8]
 26531  01529C  0EFC               	movlw	-4
 26532  01529E  BEE3               	btfsc	plusw1,7,c
 26533  0152A0  D007               	goto	u6840
 26534  0152A2  0EFC               	movlw	-4
 26535  0152A4  50E3               	movf	plusw1,w,c
 26536  0152A6  E112               	bnz	l8501
 26537  0152A8  0EFB               	movlw	-5
 26538  0152AA  04E3               	decf	plusw1,w,c
 26539  0152AC  B0D8               	btfsc	status,0,c
 26540  0152AE  D00E               	goto	l8501
 26541  0152B0                     u6840:
 26542                           
 26543                           ;stkvar	_new_exp @ sp[(-13)+8]
 26544  0152B0  0EFB               	movlw	-5
 26545  0152B2  6AE3               	clrf	plusw1,c
 26546  0152B4  0EFC               	movlw	-4
 26547  0152B6  6AE3               	clrf	plusw1,c
 26548                           
 26549                           ;stkvar	_b @ sp[(-13)+-4]
 26550  0152B8  0EEF               	movlw	-17
 26551  0152BA  6AE3               	clrf	plusw1,c
 26552  0152BC  0EF0               	movlw	-16
 26553  0152BE  6AE3               	clrf	plusw1,c
 26554  0152C0  0EF1               	movlw	-15
 26555  0152C2  6AE3               	clrf	plusw1,c
 26556  0152C4  0EF2               	movlw	-14
 26557  0152C6  6AE3               	clrf	plusw1,c
 26558                           
 26559                           ;stkvar	_sign @ sp[(-13)+12]
 26560  0152C8  0EFF               	movlw	-1
 26561  0152CA  6AE3               	clrf	plusw1,c
 26562  0152CC                     l8501:
 26563                           
 26564                           ;stkvar	_new_exp @ sp[(-13)+8]
 26565                           ;stkvar	_bexp @ sp[(-13)+11]
 26566  0152CC  0EFB               	movlw	-5
 26567  0152CE  006F FF8C  F001    	movff	plusw1,btemp
 26568  0152D4  0EFE               	movlw	-2
 26569  0152D6  0060  F007  FFE3   	movff	btemp,plusw1
 26570                           
 26571                           ;stkvar	_bexp @ sp[(-13)+11]
 26572  0152DC  0EFE               	movlw	-2
 26573  0152DE  A0E3               	btfss	plusw1,0,c
 26574  0152E0  D009               	goto	l8507
 26575                           
 26576                           ;stkvar	_b @ sp[(-13)+-4]
 26577  0152E2  0EF1               	movlw	241
 26578  0152E4  24E1               	addwf	fsr1l,w,c
 26579  0152E6  6ED9               	movwf	fsr2l,c
 26580  0152E8  0EFF               	movlw	255
 26581  0152EA  20E2               	addwfc	fsr1h,w,c
 26582  0152EC  6EDA               	movwf	fsr2h,c
 26583  0152EE  0E00               	movlw	0
 26584  0152F0  8EDB               	bsf	plusw2,7,c
 26585  0152F2  D008               	goto	l8509
 26586  0152F4                     l8507:
 26587                           
 26588                           ;stkvar	_b @ sp[(-13)+-4]
 26589  0152F4  0EF1               	movlw	241
 26590  0152F6  24E1               	addwf	fsr1l,w,c
 26591  0152F8  6ED9               	movwf	fsr2l,c
 26592  0152FA  0EFF               	movlw	255
 26593  0152FC  20E2               	addwfc	fsr1h,w,c
 26594  0152FE  6EDA               	movwf	fsr2h,c
 26595  015300  0E7F               	movlw	127
 26596  015302  16DF               	andwf	indf2,f,c
 26597  015304                     l8509:
 26598                           
 26599                           ;stkvar	_b @ sp[(-13)+-4]
 26600  015304  0EF2               	movlw	242
 26601  015306  24E1               	addwf	fsr1l,w,c
 26602  015308  6ED9               	movwf	fsr2l,c
 26603  01530A  0EFF               	movlw	255
 26604  01530C  20E2               	addwfc	fsr1h,w,c
 26605  01530E  6EDA               	movwf	fsr2h,c
 26606                           
 26607                           ;stkvar	_bexp @ sp[(-13)+11]
 26608  015310  0EFE               	movlw	-2
 26609  015312  006F FF8C  F00C    	movff	plusw1,btemp+11
 26610  015318  90D8               	bcf	status,0,c
 26611  01531A  300C               	rrcf	(btemp+11)^0,w,c
 26612  01531C  6EDF               	movwf	indf2,c
 26613  01531E  D644               	goto	l8407
 26614  015320                     l3058:
 26615                           
 26616                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 26617  015320  0EEB               	movlw	235
 26618  015322  26E1               	addwf	fsr1l,f,c
 26619  015324  0EFF               	movlw	255
 26620  015326  22E2               	addwfc	fsr1h,f,c
 26621  015328  0012               	return		;funcret
 26622  01532A                     __end_of___fldiv:
 26623                           	opt callstack 0
 26624                           
 26625 ;; *************** function ___flge *****************
 26626 ;; Defined at:
 26627 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 26628 ;; Parameters:    Size  Location     Type
 26629 ;;  ff1             4  [STACK] unsigned char 
 26630 ;;  ff2             4  [STACK] unsigned char 
 26631 ;; Auto vars:     Size  Location     Type
 26632 ;;		None
 26633 ;; Return value:  Size  Location     Type
 26634 ;;		None               void
 26635 ;; Registers used:
 26636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 26637 ;; Tracked objects:
 26638 ;;		On entry : 0/0
 26639 ;;		On exit  : 0/0
 26640 ;;		Unchanged: 0/0
 26641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26646 ;;Total ram usage:        0 bytes
 26647 ;; Hardware stack levels used:    1
 26648 ;; Hardware stack levels required when called:   15
 26649 ;; This function calls:
 26650 ;;		Nothing
 26651 ;; This function is called by:
 26652 ;;		_main
 26653 ;;		_convert_dac_raw
 26654 ;;		_calc_ror_data
 26655 ;;		_check_day_time
 26656 ;;		_calc_bsoc
 26657 ;;		_efgtoa
 26658 ;; This function uses a reentrant model
 26659 ;;
 26660                           
 26661                           	psect	text106
 26662  019214                     __ptext106:
 26663                           	opt callstack 0
 26664  019214                     ___flge:
 26665                           	opt callstack 0
 26666                           
 26667                           ;stkvar	_ff1 @ sp[(0)+-4]
 26668                           
 26669                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26670                           ;incstack = 0
 26671 ;; hardware stack exceeded
 26672  019214  50E1               	movf	fsr1l,w,c
 26673  019216  0FFC               	addlw	-4
 26674  019218  6ED9               	movwf	fsr2l,c
 26675  01921A  50E2               	movf	fsr1h,w,c
 26676  01921C  6EDA               	movwf	fsr2h,c
 26677  01921E  0EFF               	movlw	255
 26678  019220  22DA               	addwfc	fsr2h,f,c
 26679  019222  0E00               	movlw	0
 26680  019224  14DE               	andwf	postinc2,w,c
 26681  019226  6E09               	movwf	(btemp+8)^0,c
 26682  019228  0E00               	movlw	0
 26683  01922A  14DE               	andwf	postinc2,w,c
 26684  01922C  6E0A               	movwf	(btemp+9)^0,c
 26685  01922E  0E80               	movlw	128
 26686  019230  14DE               	andwf	postinc2,w,c
 26687  019232  6E0B               	movwf	(btemp+10)^0,c
 26688  019234  0E7F               	movlw	127
 26689  019236  14DE               	andwf	postinc2,w,c
 26690  019238  6E0C               	movwf	(btemp+11)^0,c
 26691  01923A  5009               	movf	(btemp+8)^0,w,c
 26692  01923C  100A               	iorwf	(btemp+9)^0,w,c
 26693  01923E  100B               	iorwf	(btemp+10)^0,w,c
 26694  019240  100C               	iorwf	(btemp+11)^0,w,c
 26695  019242  A4D8               	btfss	status,2,c
 26696  019244  D008               	goto	l8783
 26697                           
 26698                           ;stkvar	_ff1 @ sp[(0)+-4]
 26699  019246  0EFC               	movlw	-4
 26700  019248  6AE3               	clrf	plusw1,c
 26701  01924A  0EFD               	movlw	-3
 26702  01924C  6AE3               	clrf	plusw1,c
 26703  01924E  0EFE               	movlw	-2
 26704  019250  6AE3               	clrf	plusw1,c
 26705  019252  0EFF               	movlw	-1
 26706  019254  6AE3               	clrf	plusw1,c
 26707  019256                     l8783:
 26708                           
 26709                           ;stkvar	_ff2 @ sp[(0)+-8]
 26710  019256  50E1               	movf	fsr1l,w,c
 26711  019258  0FF8               	addlw	-8
 26712  01925A  6ED9               	movwf	fsr2l,c
 26713  01925C  50E2               	movf	fsr1h,w,c
 26714  01925E  6EDA               	movwf	fsr2h,c
 26715  019260  0EFF               	movlw	255
 26716  019262  22DA               	addwfc	fsr2h,f,c
 26717  019264  0E00               	movlw	0
 26718  019266  14DE               	andwf	postinc2,w,c
 26719  019268  6E09               	movwf	(btemp+8)^0,c
 26720  01926A  0E00               	movlw	0
 26721  01926C  14DE               	andwf	postinc2,w,c
 26722  01926E  6E0A               	movwf	(btemp+9)^0,c
 26723  019270  0E80               	movlw	128
 26724  019272  14DE               	andwf	postinc2,w,c
 26725  019274  6E0B               	movwf	(btemp+10)^0,c
 26726  019276  0E7F               	movlw	127
 26727  019278  14DE               	andwf	postinc2,w,c
 26728  01927A  6E0C               	movwf	(btemp+11)^0,c
 26729  01927C  5009               	movf	(btemp+8)^0,w,c
 26730  01927E  100A               	iorwf	(btemp+9)^0,w,c
 26731  019280  100B               	iorwf	(btemp+10)^0,w,c
 26732  019282  100C               	iorwf	(btemp+11)^0,w,c
 26733  019284  A4D8               	btfss	status,2,c
 26734  019286  D008               	goto	l2739
 26735                           
 26736                           ;stkvar	_ff2 @ sp[(0)+-8]
 26737  019288  0EF8               	movlw	-8
 26738  01928A  6AE3               	clrf	plusw1,c
 26739  01928C  0EF9               	movlw	-7
 26740  01928E  6AE3               	clrf	plusw1,c
 26741  019290  0EFA               	movlw	-6
 26742  019292  6AE3               	clrf	plusw1,c
 26743  019294  0EFB               	movlw	-5
 26744  019296  6AE3               	clrf	plusw1,c
 26745  019298                     l2739:
 26746                           
 26747                           ;stkvar	_ff1 @ sp[(0)+-4]
 26748  019298  0EFF               	movlw	-1
 26749  01929A  AEE3               	btfss	plusw1,7,c
 26750  01929C  D024               	goto	l8789
 26751                           
 26752                           ;stkvar	_ff1 @ sp[(0)+-4]
 26753  01929E  0E00               	movlw	0
 26754  0192A0  6E09               	movwf	(btemp+8)^0,c
 26755  0192A2  0E00               	movlw	0
 26756  0192A4  6E0A               	movwf	(btemp+9)^0,c
 26757  0192A6  0E00               	movlw	0
 26758  0192A8  6E0B               	movwf	(btemp+10)^0,c
 26759  0192AA  0E80               	movlw	128
 26760  0192AC  6E0C               	movwf	(btemp+11)^0,c
 26761  0192AE  0EFC               	movlw	-4
 26762  0192B0  50E3               	movf	plusw1,w,c
 26763  0192B2  5E09               	subwf	(btemp+8)^0,f,c
 26764  0192B4  0EFD               	movlw	-3
 26765  0192B6  50E3               	movf	plusw1,w,c
 26766  0192B8  5A0A               	subwfb	(btemp+9)^0,f,c
 26767  0192BA  0EFE               	movlw	-2
 26768  0192BC  50E3               	movf	plusw1,w,c
 26769  0192BE  5A0B               	subwfb	(btemp+10)^0,f,c
 26770  0192C0  0EFF               	movlw	-1
 26771  0192C2  50E3               	movf	plusw1,w,c
 26772  0192C4  5A0C               	subwfb	(btemp+11)^0,f,c
 26773                           
 26774                           ;stkvar	_ff1 @ sp[(0)+-4]
 26775  0192C6  0EFC               	movlw	-4
 26776  0192C8  0060  F027  FFE3   	movff	btemp+8,plusw1
 26777  0192CE  0EFD               	movlw	-3
 26778  0192D0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26779  0192D6  0EFE               	movlw	-2
 26780  0192D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26781  0192DE  0EFF               	movlw	-1
 26782  0192E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 26783  0192E6                     l8789:
 26784                           
 26785                           ;stkvar	_ff2 @ sp[(0)+-8]
 26786  0192E6  0EFB               	movlw	-5
 26787  0192E8  AEE3               	btfss	plusw1,7,c
 26788  0192EA  D024               	goto	l8793
 26789                           
 26790                           ;stkvar	_ff2 @ sp[(0)+-8]
 26791  0192EC  0E00               	movlw	0
 26792  0192EE  6E09               	movwf	(btemp+8)^0,c
 26793  0192F0  0E00               	movlw	0
 26794  0192F2  6E0A               	movwf	(btemp+9)^0,c
 26795  0192F4  0E00               	movlw	0
 26796  0192F6  6E0B               	movwf	(btemp+10)^0,c
 26797  0192F8  0E80               	movlw	128
 26798  0192FA  6E0C               	movwf	(btemp+11)^0,c
 26799  0192FC  0EF8               	movlw	-8
 26800  0192FE  50E3               	movf	plusw1,w,c
 26801  019300  5E09               	subwf	(btemp+8)^0,f,c
 26802  019302  0EF9               	movlw	-7
 26803  019304  50E3               	movf	plusw1,w,c
 26804  019306  5A0A               	subwfb	(btemp+9)^0,f,c
 26805  019308  0EFA               	movlw	-6
 26806  01930A  50E3               	movf	plusw1,w,c
 26807  01930C  5A0B               	subwfb	(btemp+10)^0,f,c
 26808  01930E  0EFB               	movlw	-5
 26809  019310  50E3               	movf	plusw1,w,c
 26810  019312  5A0C               	subwfb	(btemp+11)^0,f,c
 26811                           
 26812                           ;stkvar	_ff2 @ sp[(0)+-8]
 26813  019314  0EF8               	movlw	-8
 26814  019316  0060  F027  FFE3   	movff	btemp+8,plusw1
 26815  01931C  0EF9               	movlw	-7
 26816  01931E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26817  019324  0EFA               	movlw	-6
 26818  019326  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26819  01932C  0EFB               	movlw	-5
 26820  01932E  0060  F033  FFE3   	movff	btemp+11,plusw1
 26821  019334                     l8793:
 26822                           
 26823                           ;stkvar	_ff1 @ sp[(0)+-4]
 26824  019334  0EFF               	movlw	-1
 26825  019336  7EE3               	btg	plusw1,7,c
 26826                           
 26827                           ;stkvar	_ff2 @ sp[(0)+-8]
 26828  019338  0EFB               	movlw	-5
 26829  01933A  7EE3               	btg	plusw1,7,c
 26830                           
 26831                           ;stkvar	_ff2 @ sp[(0)+-8]
 26832                           ;stkvar	_ff1 @ sp[(0)+-4]
 26833  01933C  50E1               	movf	fsr1l,w,c
 26834  01933E  0FFC               	addlw	-4
 26835  019340  6ED9               	movwf	fsr2l,c
 26836  019342  50E2               	movf	fsr1h,w,c
 26837  019344  6EDA               	movwf	fsr2h,c
 26838  019346  0EFF               	movlw	255
 26839  019348  22DA               	addwfc	fsr2h,f,c
 26840  01934A  0EF8               	movlw	-8
 26841  01934C  50E3               	movf	plusw1,w,c
 26842  01934E  5CDE               	subwf	postinc2,w,c
 26843  019350  0EF9               	movlw	-7
 26844  019352  50E3               	movf	plusw1,w,c
 26845  019354  58DE               	subwfb	postinc2,w,c
 26846  019356  0EFA               	movlw	-6
 26847  019358  50E3               	movf	plusw1,w,c
 26848  01935A  58DE               	subwfb	postinc2,w,c
 26849  01935C  0EFB               	movlw	-5
 26850  01935E  50E3               	movf	plusw1,w,c
 26851  019360  58DE               	subwfb	postinc2,w,c
 26852  019362  B0D8               	btfsc	status,0,c
 26853  019364  D002               	goto	l8801
 26854  019366  9001               	bcf	btemp& (0+255),0,c
 26855  019368  D001               	goto	l2746
 26856  01936A                     l8801:
 26857  01936A  8001               	bsf	btemp& (0+255),0,c
 26858  01936C                     l2746:
 26859                           
 26860                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 26861  01936C  0EF8               	movlw	248
 26862  01936E  26E1               	addwf	fsr1l,f,c
 26863  019370  0EFF               	movlw	255
 26864  019372  22E2               	addwfc	fsr1h,f,c
 26865  019374  0012               	return		;funcret
 26866  019376                     __end_of___flge:
 26867                           	opt callstack 0
 26868                           
 26869 ;; *************** function _calc_model_data *****************
 26870 ;; Defined at:
 26871 ;;		line 67 in file "mbmc.c"
 26872 ;; Parameters:    Size  Location     Type
 26873 ;;		None
 26874 ;; Auto vars:     Size  Location     Type
 26875 ;;		None
 26876 ;; Return value:  Size  Location     Type
 26877 ;;                  1  [STACK] void 
 26878 ;; Registers used:
 26879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26880 ;; Tracked objects:
 26881 ;;		On entry : 0/1
 26882 ;;		On exit  : 3F/39
 26883 ;;		Unchanged: 0/0
 26884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26889 ;;Total ram usage:        0 bytes
 26890 ;; Hardware stack levels used:    1
 26891 ;; Hardware stack levels required when called:   18
 26892 ;; This function calls:
 26893 ;;		___fladd
 26894 ;;		___flmul
 26895 ;;		___flsub
 26896 ;;		_lp_filter
 26897 ;;		_start_bsoc
 26898 ;;		_stop_bsoc
 26899 ;; This function is called by:
 26900 ;;		_main
 26901 ;; This function uses a reentrant model
 26902 ;;
 26903                           
 26904                           	psect	text107
 26905  015CBE                     __ptext107:
 26906                           	opt callstack 0
 26907  015CBE                     _calc_model_data:
 26908                           	opt callstack 12
 26909                           
 26910                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 26911                           
 26912                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26913                           ;incstack = 0
 26914  015CBE  ECEA  F0E2         	call	_stop_bsoc	;wreg free
 26915                           
 26916                           ; BSR set to: 57
 26917                           ;mbmc.c: 72:  if (!V.calib) {
 26918  015CC2  0101               	movlb	1	; () banked
 26919  015CC4  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 26920  015CC6  A4D8               	btfss	status,2,c
 26921  015CC8  D219               	goto	l11261
 26922                           
 26923                           ; BSR set to: 1
 26924                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 26925  015CCA  EE21  F2FF         	lfsr	2,_C
 26926  015CCE  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 26927  015CD4  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 26928  015CDA  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 26929  015CE0  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 26930                           
 26931                           ; BSR set to: 1
 26932                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 26933  015CE6  0060  F1C3  FFE6   	movff	calc_model_data@bcror,postinc1
 26934  015CEC  0060  F1C7  FFE6   	movff	calc_model_data@bcror+1,postinc1
 26935  015CF2  0060  F1CB  FFE6   	movff	calc_model_data@bcror+2,postinc1
 26936  015CF8  0060  F1CF  FFE6   	movff	calc_model_data@bcror+3,postinc1
 26937  015CFE  EE21  F343         	lfsr	2,_C+68	;volatile
 26938  015D02  006F FF7B FFE6     	movff	postinc2,postinc1
 26939  015D08  006F FF7B FFE6     	movff	postinc2,postinc1
 26940  015D0E  006F FF7B FFE6     	movff	postinc2,postinc1
 26941  015D14  006F FF7B FFE6     	movff	postinc2,postinc1
 26942  015D1A  ECE8  F0DC         	call	___flsub	;wreg free
 26943  015D1E  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 26944  015D24  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 26945  015D2A  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 26946  015D30  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 26947                           
 26948                           ;mbmc.c: 75:   bcror = C.c_bat;
 26949  015D36  C743  F070         	movff	_C+68,calc_model_data@bcror	;volatile
 26950  015D3A  C744  F071         	movff	_C+69,calc_model_data@bcror+1	;volatile
 26951  015D3E  C745  F072         	movff	_C+70,calc_model_data@bcror+2	;volatile
 26952  015D42  C746  F073         	movff	_C+71,calc_model_data@bcror+3	;volatile
 26953                           
 26954                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 26955  015D46  EE21  F303         	lfsr	2,_C+4	;volatile
 26956  015D4A  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 26957  015D50  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 26958  015D56  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 26959  015D5C  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 26960                           
 26961                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 26962  015D62  EE21  F30F         	lfsr	2,_C+16	;volatile
 26963  015D66  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 26964  015D6C  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 26965  015D72  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 26966  015D78  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 26967                           
 26968                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 26969  015D7E  EE21  F333         	lfsr	2,_C+52	;volatile
 26970  015D82  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 26971  015D88  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 26972  015D8E  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 26973  015D94  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 26974                           
 26975                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 26976  015D9A  0060  F1D3  FFE6   	movff	calc_model_data@bvror,postinc1
 26977  015DA0  0060  F1D7  FFE6   	movff	calc_model_data@bvror+1,postinc1
 26978  015DA6  0060  F1DB  FFE6   	movff	calc_model_data@bvror+2,postinc1
 26979  015DAC  0060  F1DF  FFE6   	movff	calc_model_data@bvror+3,postinc1
 26980  015DB2  EE21  F353         	lfsr	2,_C+84	;volatile
 26981  015DB6  006F FF7B FFE6     	movff	postinc2,postinc1
 26982  015DBC  006F FF7B FFE6     	movff	postinc2,postinc1
 26983  015DC2  006F FF7B FFE6     	movff	postinc2,postinc1
 26984  015DC8  006F FF7B FFE6     	movff	postinc2,postinc1
 26985  015DCE  ECE8  F0DC         	call	___flsub	;wreg free
 26986  015DD2  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 26987  015DD8  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 26988  015DDE  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 26989  015DE4  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 26990                           
 26991                           ;mbmc.c: 80:   bvror = C.v_bat;
 26992  015DEA  C753  F074         	movff	_C+84,calc_model_data@bvror	;volatile
 26993  015DEE  C754  F075         	movff	_C+85,calc_model_data@bvror+1	;volatile
 26994  015DF2  C755  F076         	movff	_C+86,calc_model_data@bvror+2	;volatile
 26995  015DF6  C756  F077         	movff	_C+87,calc_model_data@bvror+3	;volatile
 26996                           
 26997                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 26998  015DFA  EE21  F313         	lfsr	2,_C+20	;volatile
 26999  015DFE  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 27000  015E04  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 27001  015E0A  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 27002  015E10  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 27003                           
 27004                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 27005  015E16  EE21  F307         	lfsr	2,_C+8	;volatile
 27006  015E1A  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 27007  015E20  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 27008  015E26  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 27009  015E2C  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 27010                           
 27011                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 27012  015E32  EE21  F32F         	lfsr	2,_C+48	;volatile
 27013  015E36  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 27014  015E3C  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 27015  015E42  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 27016  015E48  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 27017                           
 27018                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 27019  015E4E  0E01               	movlw	1
 27020  015E50  6EE6               	movwf	postinc1,c
 27021  015E52  0E10               	movlw	16
 27022  015E54  6EE6               	movwf	postinc1,c
 27023  015E56  EE21  F2FF         	lfsr	2,_C
 27024  015E5A  006F FF7B FFE6     	movff	postinc2,postinc1
 27025  015E60  006F FF7B FFE6     	movff	postinc2,postinc1
 27026  015E66  006F FF7B FFE6     	movff	postinc2,postinc1
 27027  015E6C  006F FF7B FFE6     	movff	postinc2,postinc1
 27028  015E72  EE21  F303         	lfsr	2,_C+4	;volatile
 27029  015E76  006F FF7B FFE6     	movff	postinc2,postinc1
 27030  015E7C  006F FF7B FFE6     	movff	postinc2,postinc1
 27031  015E82  006F FF7B FFE6     	movff	postinc2,postinc1
 27032  015E88  006F FF7B FFE6     	movff	postinc2,postinc1
 27033  015E8E  ECE8  F0DC         	call	___flsub	;wreg free
 27034  015E92  0060  F007  FFE6   	movff	btemp,postinc1
 27035  015E98  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27036  015E9E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27037  015EA4  0060  F013  FFE6   	movff	btemp+3,postinc1
 27038  015EAA  EC55  F0C4         	call	_lp_filter	;wreg free
 27039  015EAE  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 27040  015EB4  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 27041  015EBA  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 27042  015EC0  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 27043                           
 27044                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 27045  015EC6  0E01               	movlw	1
 27046  015EC8  6EE6               	movwf	postinc1,c
 27047  015ECA  0E11               	movlw	17
 27048  015ECC  6EE6               	movwf	postinc1,c
 27049  015ECE  EE21  F353         	lfsr	2,_C+84	;volatile
 27050  015ED2  006F FF7B FFE6     	movff	postinc2,postinc1
 27051  015ED8  006F FF7B FFE6     	movff	postinc2,postinc1
 27052  015EDE  006F FF7B FFE6     	movff	postinc2,postinc1
 27053  015EE4  006F FF7B FFE6     	movff	postinc2,postinc1
 27054  015EEA  EE21  F33F         	lfsr	2,_C+64	;volatile
 27055  015EEE  006F FF7B FFE6     	movff	postinc2,postinc1
 27056  015EF4  006F FF7B FFE6     	movff	postinc2,postinc1
 27057  015EFA  006F FF7B FFE6     	movff	postinc2,postinc1
 27058  015F00  006F FF7B FFE6     	movff	postinc2,postinc1
 27059  015F06  ECE5  F09E         	call	___flmul	;wreg free
 27060  015F0A  0060  F007  FFE6   	movff	btemp,postinc1
 27061  015F10  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27062  015F16  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27063  015F1C  0060  F013  FFE6   	movff	btemp+3,postinc1
 27064  015F22  EC55  F0C4         	call	_lp_filter	;wreg free
 27065  015F26  0060  F004  F773   	movff	btemp,_C+116	;volatile
 27066  015F2C  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 27067  015F32  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 27068  015F38  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 27069                           
 27070                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 27071  015F3E  0E01               	movlw	1
 27072  015F40  6EE6               	movwf	postinc1,c
 27073  015F42  0E12               	movlw	18
 27074  015F44  6EE6               	movwf	postinc1,c
 27075  015F46  EE21  F34F         	lfsr	2,_C+80	;volatile
 27076  015F4A  006F FF7B FFE6     	movff	postinc2,postinc1
 27077  015F50  006F FF7B FFE6     	movff	postinc2,postinc1
 27078  015F56  006F FF7B FFE6     	movff	postinc2,postinc1
 27079  015F5C  006F FF7B FFE6     	movff	postinc2,postinc1
 27080  015F62  EE21  F347         	lfsr	2,_C+72	;volatile
 27081  015F66  006F FF7B FFE6     	movff	postinc2,postinc1
 27082  015F6C  006F FF7B FFE6     	movff	postinc2,postinc1
 27083  015F72  006F FF7B FFE6     	movff	postinc2,postinc1
 27084  015F78  006F FF7B FFE6     	movff	postinc2,postinc1
 27085  015F7E  ECE5  F09E         	call	___flmul	;wreg free
 27086  015F82  0060  F007  FFE6   	movff	btemp,postinc1
 27087  015F88  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27088  015F8E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27089  015F94  0060  F013  FFE6   	movff	btemp+3,postinc1
 27090  015F9A  EC55  F0C4         	call	_lp_filter	;wreg free
 27091  015F9E  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 27092  015FA4  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 27093  015FAA  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 27094  015FB0  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 27095                           
 27096                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 27097  015FB6  0E01               	movlw	1
 27098  015FB8  6EE6               	movwf	postinc1,c
 27099  015FBA  0E13               	movlw	19
 27100  015FBC  6EE6               	movwf	postinc1,c
 27101  015FBE  0E00               	movlw	0
 27102  015FC0  6EE6               	movwf	postinc1,c
 27103  015FC2  0E00               	movlw	0
 27104  015FC4  6EE6               	movwf	postinc1,c
 27105  015FC6  0E60               	movlw	96
 27106  015FC8  6EE6               	movwf	postinc1,c
 27107  015FCA  0EC1               	movlw	193
 27108  015FCC  6EE6               	movwf	postinc1,c
 27109  015FCE  EE21  F363         	lfsr	2,_C+100	;volatile
 27110  015FD2  006F FF7B FFE6     	movff	postinc2,postinc1
 27111  015FD8  006F FF7B FFE6     	movff	postinc2,postinc1
 27112  015FDE  006F FF7B FFE6     	movff	postinc2,postinc1
 27113  015FE4  006F FF7B FFE6     	movff	postinc2,postinc1
 27114  015FEA  EE21  F33F         	lfsr	2,_C+64	;volatile
 27115  015FEE  006F FF7B FFE6     	movff	postinc2,postinc1
 27116  015FF4  006F FF7B FFE6     	movff	postinc2,postinc1
 27117  015FFA  006F FF7B FFE6     	movff	postinc2,postinc1
 27118  016000  006F FF7B FFE6     	movff	postinc2,postinc1
 27119  016006  ECE5  F09E         	call	___flmul	;wreg free
 27120  01600A  0060  F007  FFE6   	movff	btemp,postinc1
 27121  016010  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27122  016016  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27123  01601C  0060  F013  FFE6   	movff	btemp+3,postinc1
 27124  016022  ECFA  F0A2         	call	___fladd	;wreg free
 27125  016026  0060  F007  FFE6   	movff	btemp,postinc1
 27126  01602C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27127  016032  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27128  016038  0060  F013  FFE6   	movff	btemp+3,postinc1
 27129  01603E  EC55  F0C4         	call	_lp_filter	;wreg free
 27130  016042  0060  F004  F777   	movff	btemp,_C+120	;volatile
 27131  016048  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 27132  01604E  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 27133  016054  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 27134                           
 27135                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 27136  01605A  0E01               	movlw	1
 27137  01605C  6EE6               	movwf	postinc1,c
 27138  01605E  0E14               	movlw	20
 27139  016060  6EE6               	movwf	postinc1,c
 27140  016062  EE21  F353         	lfsr	2,_C+84	;volatile
 27141  016066  006F FF7B FFE6     	movff	postinc2,postinc1
 27142  01606C  006F FF7B FFE6     	movff	postinc2,postinc1
 27143  016072  006F FF7B FFE6     	movff	postinc2,postinc1
 27144  016078  006F FF7B FFE6     	movff	postinc2,postinc1
 27145  01607E  EE21  F343         	lfsr	2,_C+68	;volatile
 27146  016082  006F FF7B FFE6     	movff	postinc2,postinc1
 27147  016088  006F FF7B FFE6     	movff	postinc2,postinc1
 27148  01608E  006F FF7B FFE6     	movff	postinc2,postinc1
 27149  016094  006F FF7B FFE6     	movff	postinc2,postinc1
 27150  01609A  ECE5  F09E         	call	___flmul	;wreg free
 27151  01609E  0060  F007  FFE6   	movff	btemp,postinc1
 27152  0160A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27153  0160AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27154  0160B0  0060  F013  FFE6   	movff	btemp+3,postinc1
 27155  0160B6  EC55  F0C4         	call	_lp_filter	;wreg free
 27156  0160BA  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 27157  0160C0  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 27158  0160C6  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 27159  0160CC  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 27160                           
 27161                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 27162  0160D2  EE21  F377         	lfsr	2,_C+120	;volatile
 27163  0160D6  0E03               	movlw	3
 27164  0160D8  AEDB               	btfss	plusw2,7,c
 27165  0160DA  D010               	goto	l11261
 27166                           
 27167                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 27168  0160DC  0E17               	movlw	23
 27169  0160DE  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 27170  0160E4  0EB7               	movlw	183
 27171  0160E6  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 27172  0160EC  0ED1               	movlw	209
 27173  0160EE  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 27174  0160F4  0E38               	movlw	56
 27175  0160F6  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 27176  0160FC                     l11261:
 27177                           
 27178                           ;mbmc.c: 95:  start_bsoc();
 27179  0160FC  EC79  F0E1         	call	_start_bsoc	;wreg free
 27180                           
 27181                           ; BSR set to: 57
 27182                           ;mbmc.c: 96:  C.update = 1;
 27183  016100  0E01               	movlw	1
 27184  016102  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 27185                           
 27186                           ; BSR set to: 57
 27187                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27188  016108  0012               	return		;funcret
 27189  01610A                     __end_of_calc_model_data:
 27190                           	opt callstack 0
 27191                           
 27192 ;; *************** function _stop_bsoc *****************
 27193 ;; Defined at:
 27194 ;;		line 129 in file "bsoc.c"
 27195 ;; Parameters:    Size  Location     Type
 27196 ;;		None
 27197 ;; Auto vars:     Size  Location     Type
 27198 ;;		None
 27199 ;; Return value:  Size  Location     Type
 27200 ;;                  1  [STACK] void 
 27201 ;; Registers used:
 27202 ;;		None
 27203 ;; Tracked objects:
 27204 ;;		On entry : 0/1
 27205 ;;		On exit  : 3F/39
 27206 ;;		Unchanged: 0/0
 27207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27212 ;;Total ram usage:        0 bytes
 27213 ;; Hardware stack levels used:    1
 27214 ;; Hardware stack levels required when called:   15
 27215 ;; This function calls:
 27216 ;;		Nothing
 27217 ;; This function is called by:
 27218 ;;		_calc_model_data
 27219 ;; This function uses a reentrant model
 27220 ;;
 27221                           
 27222                           	psect	text108
 27223  01C5D4                     __ptext108:
 27224                           	opt callstack 0
 27225  01C5D4                     _stop_bsoc:
 27226                           	opt callstack 14
 27227                           
 27228                           ;bsoc.c: 132:  PIE6bits.TMR3IE = 0;
 27229                           
 27230                           ; BSR set to: 57
 27231                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27232                           ;incstack = 0
 27233  01C5D4  0139               	movlb	57	; () banked
 27234  01C5D6  9D96               	bcf	150,6,b	;volatile
 27235                           
 27236                           ; BSR set to: 57
 27237                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 27238  01C5D8  0012               	return		;funcret
 27239  01C5DA                     __end_of_stop_bsoc:
 27240                           	opt callstack 0
 27241                           
 27242 ;; *************** function _start_bsoc *****************
 27243 ;; Defined at:
 27244 ;;		line 120 in file "bsoc.c"
 27245 ;; Parameters:    Size  Location     Type
 27246 ;;		None
 27247 ;; Auto vars:     Size  Location     Type
 27248 ;;		None
 27249 ;; Return value:  Size  Location     Type
 27250 ;;                  1  [STACK] void 
 27251 ;; Registers used:
 27252 ;;		wreg, status,2, status,0, btemp+11
 27253 ;; Tracked objects:
 27254 ;;		On entry : 0/1
 27255 ;;		On exit  : 3F/39
 27256 ;;		Unchanged: 0/0
 27257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27262 ;;Total ram usage:        0 bytes
 27263 ;; Hardware stack levels used:    1
 27264 ;; Hardware stack levels required when called:   15
 27265 ;; This function calls:
 27266 ;;		Nothing
 27267 ;; This function is called by:
 27268 ;;		_calc_model_data
 27269 ;; This function uses a reentrant model
 27270 ;;
 27271                           
 27272                           	psect	text109
 27273  01C2F2                     __ptext109:
 27274                           	opt callstack 0
 27275  01C2F2                     _start_bsoc:
 27276                           	opt callstack 14
 27277                           
 27278                           ;bsoc.c: 123:  PIE6bits.TMR3IE = 1;
 27279                           
 27280                           ; BSR set to: 57
 27281                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27282                           ;incstack = 0
 27283  01C2F2  0139               	movlb	57	; () banked
 27284  01C2F4  8D96               	bsf	150,6,b	;volatile
 27285                           
 27286                           ; BSR set to: 57
 27287  01C2F6  A4BE               	btfss	190,2,c	;volatile
 27288  01C2F8  D002               	goto	u9790
 27289  01C2FA  0E01               	movlw	1
 27290  01C2FC  D001               	goto	u9796
 27291  01C2FE                     u9790:
 27292  01C2FE  0E00               	movlw	0
 27293  01C300                     u9796:
 27294  01C300  0AFF               	xorlw	255
 27295  01C302  6E0C               	movwf	(btemp+11)^0,c
 27296  01C304  460C               	rlncf	(btemp+11)^0,f,c
 27297  01C306  460C               	rlncf	(btemp+11)^0,f,c
 27298  01C308  50BE               	movf	190,w,c	;volatile
 27299  01C30A  180C               	xorwf	(btemp+11)^0,w,c
 27300  01C30C  0BFB               	andlw	-5
 27301  01C30E  180C               	xorwf	(btemp+11)^0,w,c
 27302  01C310  6EBE               	movwf	190,c	;volatile
 27303                           
 27304                           ; BSR set to: 57
 27305                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 27306  01C312  0012               	return		;funcret
 27307  01C314                     __end_of_start_bsoc:
 27308                           	opt callstack 0
 27309                           
 27310 ;; *************** function _lp_filter *****************
 27311 ;; Defined at:
 27312 ;;		line 29 in file "mbmc.c"
 27313 ;; Parameters:    Size  Location     Type
 27314 ;;  new             4  [STACK] const float 
 27315 ;;  bn              1  [STACK] const unsigned char 
 27316 ;;  slow            1  [STACK] const char 
 27317 ;; Auto vars:     Size  Location     Type
 27318 ;;  lp_speed        4  [STACK] float 
 27319 ;; Return value:  Size  Location     Type
 27320 ;;                  4  [STACK] float 
 27321 ;; Registers used:
 27322 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27323 ;; Tracked objects:
 27324 ;;		On entry : 0/1
 27325 ;;		On exit  : 0/0
 27326 ;;		Unchanged: 0/0
 27327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27332 ;;Total ram usage:        0 bytes
 27333 ;; Hardware stack levels used:    1
 27334 ;; Hardware stack levels required when called:   17
 27335 ;; This function calls:
 27336 ;;		___fladd
 27337 ;;		___flmul
 27338 ;;		___flsub
 27339 ;; This function is called by:
 27340 ;;		_main
 27341 ;;		_convert_adc_data
 27342 ;;		_calc_model_data
 27343 ;; This function uses a reentrant model
 27344 ;;
 27345                           
 27346                           	psect	text110
 27347  0188AA                     __ptext110:
 27348                           	opt callstack 0
 27349  0188AA                     _lp_filter:
 27350                           	opt callstack 0
 27351                           
 27352                           ; BSR set to: 57
 27353                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27354  0188AA  52E6               	movf	postinc1,f,c
 27355  0188AC  52E6               	movf	postinc1,f,c
 27356  0188AE  52E6               	movf	postinc1,f,c
 27357  0188B0  52E6               	movf	postinc1,f,c
 27358                           
 27359                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 27360                           ;stkvar	_bn @ sp[(-4)+-5]
 27361                           
 27362                           ;incstack = 0
 27363  0188B2  0EF7               	movlw	-9
 27364  0188B4  006F FF8C  F001    	movff	plusw1,btemp
 27365  0188BA  0E14               	movlw	20
 27366  0188BC  6401               	cpfsgt	btemp^0,c
 27367  0188BE  D011               	goto	l10585
 27368  0188C0                     u9650:
 27369                           
 27370                           ;mbmc.c: 35:   return new;
 27371                           ;stkvar	_new @ sp[(-4)+-4]
 27372  0188C0  0EF8               	movlw	-8
 27373  0188C2  006F FF8C  F001    	movff	plusw1,btemp
 27374  0188C8  0EF9               	movlw	-7
 27375  0188CA  006F FF8C  F002    	movff	plusw1,btemp+1
 27376  0188D0  0EFA               	movlw	-6
 27377  0188D2  006F FF8C  F003    	movff	plusw1,btemp+2
 27378  0188D8  0EFB               	movlw	-5
 27379  0188DA  006F FF8C  F004    	movff	plusw1,btemp+3
 27380  0188E0  D0BD               	goto	l1913
 27381  0188E2                     l10585:
 27382                           
 27383                           ;mbmc.c: 37:  if (slow == (-1)) {
 27384                           ;stkvar	_slow @ sp[(-4)+-6]
 27385  0188E2  0EF6               	movlw	-10
 27386  0188E4  28E3               	incf	plusw1,w,c
 27387  0188E6  A4D8               	btfss	status,2,c
 27388  0188E8  D012               	goto	l10593
 27389                           
 27390                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 27391                           ;stkvar	_bn @ sp[(-4)+-5]
 27392  0188EA  0EF7               	movlw	-9
 27393  0188EC  50E3               	movf	plusw1,w,c
 27394  0188EE  0D04               	mullw	4
 27395  0188F0  0E00               	movlw	low lp_filter@smooth
 27396  0188F2  24F3               	addwf	243,w,c
 27397  0188F4  6ED9               	movwf	fsr2l,c
 27398  0188F6  0E02               	movlw	high lp_filter@smooth
 27399  0188F8  20F4               	addwfc	prodh,w,c
 27400  0188FA  6EDA               	movwf	fsr2h,c
 27401  0188FC  0E00               	movlw	0
 27402  0188FE  6EDE               	movwf	postinc2,c
 27403  018900  0E00               	movlw	0
 27404  018902  6EDE               	movwf	postinc2,c
 27405  018904  0E00               	movlw	0
 27406  018906  6EDE               	movwf	postinc2,c
 27407  018908  0E00               	movlw	0
 27408  01890A  6EDD               	movwf	postdec2,c
 27409  01890C  D7D9               	goto	u9650
 27410  01890E                     l10593:
 27411                           
 27412                           ;mbmc.c: 42:  if (slow) {
 27413                           ;stkvar	_slow @ sp[(-4)+-6]
 27414  01890E  0EF6               	movlw	-10
 27415  018910  50E3               	movf	plusw1,w,c
 27416  018912  B4D8               	btfsc	status,2,c
 27417  018914  D006               	goto	l10597
 27418                           
 27419                           ;mbmc.c: 43:   lp_speed = 0.033;
 27420  018916  0E02               	movlw	2
 27421  018918  6E09               	movwf	(btemp+8)^0,c
 27422  01891A  0E2B               	movlw	43
 27423  01891C  6E0A               	movwf	(btemp+9)^0,c
 27424  01891E  0E07               	movlw	7
 27425  018920  D005               	goto	L32
 27426  018922                     l10597:
 27427                           
 27428                           ;mbmc.c: 45:   lp_speed = 0.066;
 27429  018922  0E02               	movlw	2
 27430  018924  6E09               	movwf	(btemp+8)^0,c
 27431  018926  0E2B               	movlw	43
 27432  018928  6E0A               	movwf	(btemp+9)^0,c
 27433  01892A  0E87               	movlw	135
 27434  01892C                     L32:
 27435  01892C  6E0B               	movwf	(btemp+10)^0,c
 27436  01892E  0E3D               	movlw	61
 27437  018930  6E0C               	movwf	(btemp+11)^0,c
 27438                           
 27439                           ;stkvar	_lp_speed @ sp[(-4)+0]
 27440  018932  0EFC               	movlw	-4
 27441  018934  0060  F027  FFE3   	movff	btemp+8,plusw1
 27442  01893A  0EFD               	movlw	-3
 27443  01893C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27444  018942  0EFE               	movlw	-2
 27445  018944  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27446  01894A  0EFF               	movlw	-1
 27447  01894C  0060  F033  FFE3   	movff	btemp+11,plusw1
 27448                           
 27449                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 27450                           ;stkvar	_bn @ sp[(-4)+-5]
 27451  018952  0EF7               	movlw	-9
 27452  018954  50E3               	movf	plusw1,w,c
 27453  018956  0D04               	mullw	4
 27454  018958  0E00               	movlw	low lp_filter@smooth
 27455  01895A  24F3               	addwf	243,w,c
 27456  01895C  6ED9               	movwf	fsr2l,c
 27457  01895E  0E02               	movlw	high lp_filter@smooth
 27458  018960  20F4               	addwfc	prodh,w,c
 27459  018962  6EDA               	movwf	fsr2h,c
 27460  018964  006F FF7B FFE6     	movff	postinc2,postinc1
 27461  01896A  006F FF7B FFE6     	movff	postinc2,postinc1
 27462  018970  006F FF7B FFE6     	movff	postinc2,postinc1
 27463  018976  006F FF7B FFE6     	movff	postinc2,postinc1
 27464                           
 27465                           ;stkvar	_lp_speed @ sp[(-8)+0]
 27466  01897C  0EF8               	movlw	-8
 27467  01897E  006F FF8F FFE6     	movff	plusw1,postinc1
 27468  018984  006F FF8F FFE6     	movff	plusw1,postinc1
 27469  01898A  006F FF8F FFE6     	movff	plusw1,postinc1
 27470  018990  006F FF8F FFE6     	movff	plusw1,postinc1
 27471                           
 27472                           ;stkvar	_bn @ sp[(-12)+-5]
 27473  018996  0EEF               	movlw	-17
 27474  018998  50E3               	movf	plusw1,w,c
 27475  01899A  0D04               	mullw	4
 27476  01899C  0E00               	movlw	low lp_filter@smooth
 27477  01899E  24F3               	addwf	243,w,c
 27478  0189A0  6ED9               	movwf	fsr2l,c
 27479  0189A2  0E02               	movlw	high lp_filter@smooth
 27480  0189A4  20F4               	addwfc	prodh,w,c
 27481  0189A6  6EDA               	movwf	fsr2h,c
 27482  0189A8  006F FF7B FFE6     	movff	postinc2,postinc1
 27483  0189AE  006F FF7B FFE6     	movff	postinc2,postinc1
 27484  0189B4  006F FF7B FFE6     	movff	postinc2,postinc1
 27485  0189BA  006F FF7B FFE6     	movff	postinc2,postinc1
 27486                           
 27487                           ;stkvar	_new @ sp[(-16)+-4]
 27488  0189C0  0EEC               	movlw	-20
 27489  0189C2  006F FF8F FFE6     	movff	plusw1,postinc1
 27490  0189C8  006F FF8F FFE6     	movff	plusw1,postinc1
 27491  0189CE  006F FF8F FFE6     	movff	plusw1,postinc1
 27492  0189D4  006F FF8F FFE6     	movff	plusw1,postinc1
 27493  0189DA  ECE8  F0DC         	call	___flsub	;wreg free
 27494  0189DE  0060  F007  FFE6   	movff	btemp,postinc1
 27495  0189E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27496  0189EA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27497  0189F0  0060  F013  FFE6   	movff	btemp+3,postinc1
 27498  0189F6  ECE5  F09E         	call	___flmul	;wreg free
 27499  0189FA  0060  F007  FFE6   	movff	btemp,postinc1
 27500  018A00  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27501  018A06  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27502  018A0C  0060  F013  FFE6   	movff	btemp+3,postinc1
 27503  018A12  ECFA  F0A2         	call	___fladd	;wreg free
 27504                           
 27505                           ;stkvar	_bn @ sp[(-4)+-5]
 27506  018A16  0EF7               	movlw	-9
 27507  018A18  50E3               	movf	plusw1,w,c
 27508  018A1A  0D04               	mullw	4
 27509  018A1C  0E00               	movlw	low lp_filter@smooth
 27510  018A1E  24F3               	addwf	243,w,c
 27511  018A20  6ED9               	movwf	fsr2l,c
 27512  018A22  0E02               	movlw	high lp_filter@smooth
 27513  018A24  20F4               	addwfc	prodh,w,c
 27514  018A26  6EDA               	movwf	fsr2h,c
 27515  018A28  0060  F007  FFDE   	movff	btemp,postinc2
 27516  018A2E  0060  F00B  FFDE   	movff	btemp+1,postinc2
 27517  018A34  0060  F00F  FFDE   	movff	btemp+2,postinc2
 27518  018A3A  0060  F013  FFDD   	movff	btemp+3,postdec2
 27519  018A40  52DD               	movf	postdec2,f,c
 27520  018A42  52DD               	movf	postdec2,f,c
 27521  018A44  006F FF78  F001    	movff	postinc2,btemp
 27522  018A4A  006F FF78  F002    	movff	postinc2,btemp+1
 27523  018A50  006F FF78  F003    	movff	postinc2,btemp+2
 27524  018A56  006F FF78  F004    	movff	postinc2,btemp+3
 27525  018A5C                     l1913:
 27526                           
 27527                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 27528  018A5C  0EF6               	movlw	246
 27529  018A5E  26E1               	addwf	fsr1l,f,c
 27530  018A60  0EFF               	movlw	255
 27531  018A62  22E2               	addwfc	fsr1h,f,c
 27532  018A64  0012               	return		;funcret
 27533  018A66                     __end_of_lp_filter:
 27534                           	opt callstack 0
 27535                           
 27536 ;; *************** function ___flsub *****************
 27537 ;; Defined at:
 27538 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 27539 ;; Parameters:    Size  Location     Type
 27540 ;;  b               4  [STACK] float 
 27541 ;;  a               4  [STACK] float 
 27542 ;; Auto vars:     Size  Location     Type
 27543 ;;		None
 27544 ;; Return value:  Size  Location     Type
 27545 ;;                  4  [STACK] float 
 27546 ;; Registers used:
 27547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 27548 ;; Tracked objects:
 27549 ;;		On entry : 0/0
 27550 ;;		On exit  : 0/0
 27551 ;;		Unchanged: 0/0
 27552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27557 ;;Total ram usage:        0 bytes
 27558 ;; Hardware stack levels used:    1
 27559 ;; Hardware stack levels required when called:   16
 27560 ;; This function calls:
 27561 ;;		___fladd
 27562 ;; This function is called by:
 27563 ;;		_conv_raw_result
 27564 ;;		_lp_filter
 27565 ;;		_calc_model_data
 27566 ;;		_calc_ror_data
 27567 ;;		_esr_check
 27568 ;;		_efgtoa
 27569 ;; This function uses a reentrant model
 27570 ;;
 27571                           
 27572                           	psect	text111
 27573  01B9D0                     __ptext111:
 27574                           	opt callstack 0
 27575  01B9D0                     ___flsub:
 27576                           	opt callstack 0
 27577                           
 27578                           ;stkvar	_a @ sp[(0)+-8]
 27579                           
 27580                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27581                           ;incstack = 0
 27582 ;; hardware stack exceeded
 27583  01B9D0  0EFB               	movlw	-5
 27584  01B9D2  7EE3               	btg	plusw1,7,c
 27585                           
 27586                           ;stkvar	_a @ sp[(0)+-8]
 27587  01B9D4  0EF8               	movlw	-8
 27588  01B9D6  006F FF8F FFE6     	movff	plusw1,postinc1
 27589  01B9DC  006F FF8F FFE6     	movff	plusw1,postinc1
 27590  01B9E2  006F FF8F FFE6     	movff	plusw1,postinc1
 27591  01B9E8  006F FF8F FFE6     	movff	plusw1,postinc1
 27592                           
 27593                           ;stkvar	_b @ sp[(-4)+-4]
 27594  01B9EE  0EF8               	movlw	-8
 27595  01B9F0  006F FF8F FFE6     	movff	plusw1,postinc1
 27596  01B9F6  006F FF8F FFE6     	movff	plusw1,postinc1
 27597  01B9FC  006F FF8F FFE6     	movff	plusw1,postinc1
 27598  01BA02  006F FF8F FFE6     	movff	plusw1,postinc1
 27599  01BA08  ECFA  F0A2         	call	___fladd	;wreg free
 27600                           
 27601                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27602  01BA0C  0EF8               	movlw	248
 27603  01BA0E  26E1               	addwf	fsr1l,f,c
 27604  01BA10  0EFF               	movlw	255
 27605  01BA12  22E2               	addwfc	fsr1h,f,c
 27606  01BA14  0012               	return		;funcret
 27607  01BA16                     __end_of___flsub:
 27608                           	opt callstack 0
 27609                           
 27610 ;; *************** function ___fladd *****************
 27611 ;; Defined at:
 27612 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 27613 ;; Parameters:    Size  Location     Type
 27614 ;;  b               4  [STACK] float 
 27615 ;;  a               4  [STACK] float 
 27616 ;; Auto vars:     Size  Location     Type
 27617 ;;  grs             1  [STACK] unsigned char 
 27618 ;;  bexp            1  [STACK] unsigned char 
 27619 ;;  aexp            1  [STACK] unsigned char 
 27620 ;;  signs           1  [STACK] unsigned char 
 27621 ;; Return value:  Size  Location     Type
 27622 ;;                  4  [STACK] unsigned char 
 27623 ;; Registers used:
 27624 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 27625 ;; Tracked objects:
 27626 ;;		On entry : 0/0
 27627 ;;		On exit  : 0/0
 27628 ;;		Unchanged: 0/0
 27629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27634 ;;Total ram usage:        0 bytes
 27635 ;; Hardware stack levels used:    1
 27636 ;; Hardware stack levels required when called:   15
 27637 ;; This function calls:
 27638 ;;		Nothing
 27639 ;; This function is called by:
 27640 ;;		_main
 27641 ;;		_conv_raw_result
 27642 ;;		_lp_filter
 27643 ;;		_calc_model_data
 27644 ;;		_efgtoa
 27645 ;;		___asfladd
 27646 ;;		___flsub
 27647 ;; This function uses a reentrant model
 27648 ;;
 27649                           
 27650                           	psect	text112
 27651  0145F4                     __ptext112:
 27652                           	opt callstack 0
 27653  0145F4                     ___fladd:
 27654                           	opt callstack 0
 27655                           
 27656                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27657  0145F4  52E6               	movf	postinc1,f,c
 27658  0145F6  52E6               	movf	postinc1,f,c
 27659  0145F8  52E6               	movf	postinc1,f,c
 27660  0145FA  52E6               	movf	postinc1,f,c
 27661                           
 27662                           ;stkvar	_b @ sp[(-4)+-4]
 27663                           
 27664                           ;incstack = 0
 27665 ;; hardware stack exceeded
 27666  0145FC  0EFB               	movlw	251
 27667  0145FE  24E1               	addwf	fsr1l,w,c
 27668  014600  6ED9               	movwf	fsr2l,c
 27669  014602  0EFF               	movlw	255
 27670  014604  20E2               	addwfc	fsr1h,w,c
 27671  014606  6EDA               	movwf	fsr2h,c
 27672  014608  50DF               	movf	indf2,w,c
 27673  01460A  6E0C               	movwf	(btemp+11)^0,c
 27674  01460C  0E80               	movlw	128
 27675  01460E  160C               	andwf	(btemp+11)^0,f,c
 27676                           
 27677                           ;stkvar	_signs @ sp[(-4)+3]
 27678  014610  0EFF               	movlw	-1
 27679  014612  0060  F033  FFE3   	movff	btemp+11,plusw1
 27680                           
 27681                           ;stkvar	_b @ sp[(-4)+-4]
 27682  014618  0EFB               	movlw	251
 27683  01461A  24E1               	addwf	fsr1l,w,c
 27684  01461C  6ED9               	movwf	fsr2l,c
 27685  01461E  0EFF               	movlw	255
 27686  014620  20E2               	addwfc	fsr1h,w,c
 27687  014622  6EDA               	movwf	fsr2h,c
 27688  014624  50DF               	movf	indf2,w,c
 27689  014626  6E0C               	movwf	(btemp+11)^0,c
 27690  014628  90D8               	bcf	status,0,c
 27691  01462A  340C               	rlcf	(btemp+11)^0,w,c
 27692  01462C  6E0B               	movwf	(btemp+10)^0,c
 27693                           
 27694                           ;stkvar	_bexp @ sp[(-4)+1]
 27695  01462E  0EFD               	movlw	-3
 27696  014630  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27697                           
 27698                           ;stkvar	_b @ sp[(-4)+-4]
 27699  014636  0EFA               	movlw	250
 27700  014638  24E1               	addwf	fsr1l,w,c
 27701  01463A  6ED9               	movwf	fsr2l,c
 27702  01463C  0EFF               	movlw	255
 27703  01463E  20E2               	addwfc	fsr1h,w,c
 27704  014640  6EDA               	movwf	fsr2h,c
 27705  014642  AEDF               	btfss	indf2,7,c
 27706  014644  D002               	goto	l7891
 27707                           
 27708                           ;stkvar	_bexp @ sp[(-4)+1]
 27709  014646  0EFD               	movlw	-3
 27710  014648  80E3               	bsf	plusw1,0,c
 27711  01464A                     l7891:
 27712                           
 27713                           ;stkvar	_bexp @ sp[(-4)+1]
 27714  01464A  0EFD               	movlw	-3
 27715  01464C  50E3               	movf	plusw1,w,c
 27716  01464E  B4D8               	btfsc	status,2,c
 27717  014650  D027               	goto	l7901
 27718                           
 27719                           ;stkvar	_bexp @ sp[(-4)+1]
 27720  014652  0EFD               	movlw	-3
 27721  014654  28E3               	incf	plusw1,w,c
 27722  014656  A4D8               	btfss	status,2,c
 27723  014658  D018               	goto	l7897
 27724  01465A  0E00               	movlw	0
 27725  01465C  6E09               	movwf	(btemp+8)^0,c
 27726  01465E  0E00               	movlw	0
 27727  014660  6E0A               	movwf	(btemp+9)^0,c
 27728  014662  0E00               	movlw	0
 27729  014664  6E0B               	movwf	(btemp+10)^0,c
 27730  014666  0E00               	movlw	0
 27731  014668  6E0C               	movwf	(btemp+11)^0,c
 27732                           
 27733                           ;stkvar	_b @ sp[(-4)+-4]
 27734  01466A  0EF8               	movlw	-8
 27735  01466C  0060  F027  FFE3   	movff	btemp+8,plusw1
 27736  014672  0EF9               	movlw	-7
 27737  014674  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27738  01467A  0EFA               	movlw	-6
 27739  01467C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27740  014682  0EFB               	movlw	-5
 27741  014684  0060  F033  FFE3   	movff	btemp+11,plusw1
 27742  01468A                     l7897:
 27743                           
 27744                           ;stkvar	_b @ sp[(-4)+-4]
 27745  01468A  0EFA               	movlw	-6
 27746  01468C  8EE3               	bsf	plusw1,7,c
 27747                           
 27748                           ;stkvar	_b @ sp[(-4)+-4]
 27749  01468E  0EFB               	movlw	251
 27750  014690  24E1               	addwf	fsr1l,w,c
 27751  014692  6ED9               	movwf	fsr2l,c
 27752  014694  0EFF               	movlw	255
 27753  014696  20E2               	addwfc	fsr1h,w,c
 27754  014698  6EDA               	movwf	fsr2h,c
 27755  01469A  0E00               	movlw	0
 27756  01469C  6EDF               	movwf	indf2,c
 27757  01469E  D018               	goto	l7903
 27758  0146A0                     l7901:
 27759  0146A0  0E00               	movlw	0
 27760  0146A2  6E09               	movwf	(btemp+8)^0,c
 27761  0146A4  0E00               	movlw	0
 27762  0146A6  6E0A               	movwf	(btemp+9)^0,c
 27763  0146A8  0E00               	movlw	0
 27764  0146AA  6E0B               	movwf	(btemp+10)^0,c
 27765  0146AC  0E00               	movlw	0
 27766  0146AE  6E0C               	movwf	(btemp+11)^0,c
 27767                           
 27768                           ;stkvar	_b @ sp[(-4)+-4]
 27769  0146B0  0EF8               	movlw	-8
 27770  0146B2  0060  F027  FFE3   	movff	btemp+8,plusw1
 27771  0146B8  0EF9               	movlw	-7
 27772  0146BA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27773  0146C0  0EFA               	movlw	-6
 27774  0146C2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27775  0146C8  0EFB               	movlw	-5
 27776  0146CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 27777  0146D0                     l7903:
 27778                           
 27779                           ;stkvar	_a @ sp[(-4)+-8]
 27780  0146D0  0EF7               	movlw	247
 27781  0146D2  24E1               	addwf	fsr1l,w,c
 27782  0146D4  6ED9               	movwf	fsr2l,c
 27783  0146D6  0EFF               	movlw	255
 27784  0146D8  20E2               	addwfc	fsr1h,w,c
 27785  0146DA  6EDA               	movwf	fsr2h,c
 27786  0146DC  50DF               	movf	indf2,w,c
 27787  0146DE  6E0C               	movwf	(btemp+11)^0,c
 27788  0146E0  0E80               	movlw	128
 27789  0146E2  160C               	andwf	(btemp+11)^0,f,c
 27790                           
 27791                           ;stkvar	_aexp @ sp[(-4)+2]
 27792  0146E4  0EFE               	movlw	-2
 27793  0146E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 27794                           
 27795                           ;stkvar	_signs @ sp[(-4)+3]
 27796                           ;stkvar	_aexp @ sp[(-4)+2]
 27797  0146EC  50E1               	movf	fsr1l,w,c
 27798  0146EE  0FFE               	addlw	-2
 27799  0146F0  6ED9               	movwf	fsr2l,c
 27800  0146F2  50E2               	movf	fsr1h,w,c
 27801  0146F4  6EDA               	movwf	fsr2h,c
 27802  0146F6  0EFF               	movlw	255
 27803  0146F8  22DA               	addwfc	fsr2h,f,c
 27804  0146FA  0EFF               	movlw	-1
 27805  0146FC  50E3               	movf	plusw1,w,c
 27806  0146FE  18DE               	xorwf	postinc2,w,c
 27807  014700  B4D8               	btfsc	status,2,c
 27808  014702  D002               	goto	l7909
 27809                           
 27810                           ;stkvar	_signs @ sp[(-4)+3]
 27811  014704  0EFF               	movlw	-1
 27812  014706  8CE3               	bsf	plusw1,6,c
 27813  014708                     l7909:
 27814                           
 27815                           ;stkvar	_a @ sp[(-4)+-8]
 27816  014708  0EF7               	movlw	247
 27817  01470A  24E1               	addwf	fsr1l,w,c
 27818  01470C  6ED9               	movwf	fsr2l,c
 27819  01470E  0EFF               	movlw	255
 27820  014710  20E2               	addwfc	fsr1h,w,c
 27821  014712  6EDA               	movwf	fsr2h,c
 27822  014714  50DF               	movf	indf2,w,c
 27823  014716  6E0C               	movwf	(btemp+11)^0,c
 27824  014718  90D8               	bcf	status,0,c
 27825  01471A  340C               	rlcf	(btemp+11)^0,w,c
 27826  01471C  6E0B               	movwf	(btemp+10)^0,c
 27827                           
 27828                           ;stkvar	_aexp @ sp[(-4)+2]
 27829  01471E  0EFE               	movlw	-2
 27830  014720  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27831                           
 27832                           ;stkvar	_a @ sp[(-4)+-8]
 27833  014726  0EF6               	movlw	246
 27834  014728  24E1               	addwf	fsr1l,w,c
 27835  01472A  6ED9               	movwf	fsr2l,c
 27836  01472C  0EFF               	movlw	255
 27837  01472E  20E2               	addwfc	fsr1h,w,c
 27838  014730  6EDA               	movwf	fsr2h,c
 27839  014732  AEDF               	btfss	indf2,7,c
 27840  014734  D002               	goto	l7915
 27841                           
 27842                           ;stkvar	_aexp @ sp[(-4)+2]
 27843  014736  0EFE               	movlw	-2
 27844  014738  80E3               	bsf	plusw1,0,c
 27845  01473A                     l7915:
 27846                           
 27847                           ;stkvar	_aexp @ sp[(-4)+2]
 27848  01473A  0EFE               	movlw	-2
 27849  01473C  50E3               	movf	plusw1,w,c
 27850  01473E  B4D8               	btfsc	status,2,c
 27851  014740  D027               	goto	l7925
 27852                           
 27853                           ;stkvar	_aexp @ sp[(-4)+2]
 27854  014742  0EFE               	movlw	-2
 27855  014744  28E3               	incf	plusw1,w,c
 27856  014746  A4D8               	btfss	status,2,c
 27857  014748  D018               	goto	l7921
 27858  01474A  0E00               	movlw	0
 27859  01474C  6E09               	movwf	(btemp+8)^0,c
 27860  01474E  0E00               	movlw	0
 27861  014750  6E0A               	movwf	(btemp+9)^0,c
 27862  014752  0E00               	movlw	0
 27863  014754  6E0B               	movwf	(btemp+10)^0,c
 27864  014756  0E00               	movlw	0
 27865  014758  6E0C               	movwf	(btemp+11)^0,c
 27866                           
 27867                           ;stkvar	_a @ sp[(-4)+-8]
 27868  01475A  0EF4               	movlw	-12
 27869  01475C  0060  F027  FFE3   	movff	btemp+8,plusw1
 27870  014762  0EF5               	movlw	-11
 27871  014764  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27872  01476A  0EF6               	movlw	-10
 27873  01476C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27874  014772  0EF7               	movlw	-9
 27875  014774  0060  F033  FFE3   	movff	btemp+11,plusw1
 27876  01477A                     l7921:
 27877                           
 27878                           ;stkvar	_a @ sp[(-4)+-8]
 27879  01477A  0EF6               	movlw	-10
 27880  01477C  8EE3               	bsf	plusw1,7,c
 27881                           
 27882                           ;stkvar	_a @ sp[(-4)+-8]
 27883  01477E  0EF7               	movlw	247
 27884  014780  24E1               	addwf	fsr1l,w,c
 27885  014782  6ED9               	movwf	fsr2l,c
 27886  014784  0EFF               	movlw	255
 27887  014786  20E2               	addwfc	fsr1h,w,c
 27888  014788  6EDA               	movwf	fsr2h,c
 27889  01478A  0E00               	movlw	0
 27890  01478C  6EDF               	movwf	indf2,c
 27891  01478E  D018               	goto	l7927
 27892  014790                     l7925:
 27893  014790  0E00               	movlw	0
 27894  014792  6E09               	movwf	(btemp+8)^0,c
 27895  014794  0E00               	movlw	0
 27896  014796  6E0A               	movwf	(btemp+9)^0,c
 27897  014798  0E00               	movlw	0
 27898  01479A  6E0B               	movwf	(btemp+10)^0,c
 27899  01479C  0E00               	movlw	0
 27900  01479E  6E0C               	movwf	(btemp+11)^0,c
 27901                           
 27902                           ;stkvar	_a @ sp[(-4)+-8]
 27903  0147A0  0EF4               	movlw	-12
 27904  0147A2  0060  F027  FFE3   	movff	btemp+8,plusw1
 27905  0147A8  0EF5               	movlw	-11
 27906  0147AA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27907  0147B0  0EF6               	movlw	-10
 27908  0147B2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27909  0147B8  0EF7               	movlw	-9
 27910  0147BA  0060  F033  FFE3   	movff	btemp+11,plusw1
 27911  0147C0                     l7927:
 27912                           
 27913                           ;stkvar	_bexp @ sp[(-4)+1]
 27914                           ;stkvar	_aexp @ sp[(-4)+2]
 27915  0147C0  50E1               	movf	fsr1l,w,c
 27916  0147C2  0FFE               	addlw	-2
 27917  0147C4  6ED9               	movwf	fsr2l,c
 27918  0147C6  50E2               	movf	fsr1h,w,c
 27919  0147C8  6EDA               	movwf	fsr2h,c
 27920  0147CA  0EFF               	movlw	255
 27921  0147CC  22DA               	addwfc	fsr2h,f,c
 27922  0147CE  0EFD               	movlw	-3
 27923  0147D0  50E3               	movf	plusw1,w,c
 27924  0147D2  5CDE               	subwf	postinc2,w,c
 27925  0147D4  B0D8               	btfsc	status,0,c
 27926  0147D6  D0A4               	goto	l7963
 27927                           
 27928                           ;stkvar	_signs @ sp[(-4)+3]
 27929  0147D8  0EFF               	movlw	-1
 27930  0147DA  ACE3               	btfss	plusw1,6,c
 27931  0147DC  D002               	goto	l7933
 27932                           
 27933                           ;stkvar	_signs @ sp[(-4)+3]
 27934  0147DE  0EFF               	movlw	-1
 27935  0147E0  7EE3               	btg	plusw1,7,c
 27936  0147E2                     l7933:
 27937                           
 27938                           ;stkvar	_bexp @ sp[(-4)+1]
 27939                           ;stkvar	_grs @ sp[(-4)+0]
 27940  0147E2  0EFD               	movlw	-3
 27941  0147E4  006F FF8C  F001    	movff	plusw1,btemp
 27942  0147EA  0EFC               	movlw	-4
 27943  0147EC  0060  F007  FFE3   	movff	btemp,plusw1
 27944                           
 27945                           ;stkvar	_aexp @ sp[(-4)+2]
 27946                           ;stkvar	_bexp @ sp[(-4)+1]
 27947  0147F2  0EFE               	movlw	-2
 27948  0147F4  006F FF8C  F001    	movff	plusw1,btemp
 27949  0147FA  0EFD               	movlw	-3
 27950  0147FC  0060  F007  FFE3   	movff	btemp,plusw1
 27951                           
 27952                           ;stkvar	_grs @ sp[(-4)+0]
 27953                           ;stkvar	_aexp @ sp[(-4)+2]
 27954  014802  0EFC               	movlw	-4
 27955  014804  006F FF8C  F001    	movff	plusw1,btemp
 27956  01480A  0EFE               	movlw	-2
 27957  01480C  0060  F007  FFE3   	movff	btemp,plusw1
 27958                           
 27959                           ;stkvar	_b @ sp[(-4)+-4]
 27960                           ;stkvar	_grs @ sp[(-4)+0]
 27961  014812  0EF8               	movlw	-8
 27962  014814  006F FF8C  F001    	movff	plusw1,btemp
 27963  01481A  0EFC               	movlw	-4
 27964  01481C  0060  F007  FFE3   	movff	btemp,plusw1
 27965                           
 27966                           ;stkvar	_a @ sp[(-4)+-8]
 27967                           ;stkvar	_b @ sp[(-4)+-4]
 27968  014822  0EF4               	movlw	-12
 27969  014824  006F FF8C  F001    	movff	plusw1,btemp
 27970  01482A  0EF8               	movlw	-8
 27971  01482C  0060  F007  FFE3   	movff	btemp,plusw1
 27972                           
 27973                           ;stkvar	_grs @ sp[(-4)+0]
 27974                           ;stkvar	_a @ sp[(-4)+-8]
 27975  014832  0EFC               	movlw	-4
 27976  014834  006F FF8C  F001    	movff	plusw1,btemp
 27977  01483A  0EF4               	movlw	-12
 27978  01483C  0060  F007  FFE3   	movff	btemp,plusw1
 27979                           
 27980                           ;stkvar	_b @ sp[(-4)+-4]
 27981  014842  0EF9               	movlw	249
 27982  014844  24E1               	addwf	fsr1l,w,c
 27983  014846  6ED9               	movwf	fsr2l,c
 27984  014848  0EFF               	movlw	255
 27985  01484A  20E2               	addwfc	fsr1h,w,c
 27986  01484C  6EDA               	movwf	fsr2h,c
 27987  01484E  50DF               	movf	indf2,w,c
 27988  014850  6E0C               	movwf	(btemp+11)^0,c
 27989                           
 27990                           ;stkvar	_grs @ sp[(-4)+0]
 27991  014852  0EFC               	movlw	-4
 27992  014854  0060  F033  FFE3   	movff	btemp+11,plusw1
 27993                           
 27994                           ;stkvar	_a @ sp[(-4)+-8]
 27995  01485A  0EF5               	movlw	245
 27996  01485C  24E1               	addwf	fsr1l,w,c
 27997  01485E  6ED9               	movwf	fsr2l,c
 27998  014860  0EFF               	movlw	255
 27999  014862  20E2               	addwfc	fsr1h,w,c
 28000  014864  6EDA               	movwf	fsr2h,c
 28001                           
 28002                           ;stkvar	_b @ sp[(-4)+-4]
 28003  014866  0EF9               	movlw	249
 28004  014868  24E1               	addwf	fsr1l,w,c
 28005  01486A  6EE9               	movwf	fsr0l,c
 28006  01486C  0EFF               	movlw	255
 28007  01486E  20E2               	addwfc	fsr1h,w,c
 28008  014870  6EEA               	movwf	fsr0h,c
 28009  014872  006F FF7F FFEF     	movff	indf2,indf0
 28010                           
 28011                           ;stkvar	_grs @ sp[(-4)+0]
 28012                           ;stkvar	_a @ sp[(-4)+-8]
 28013  014878  0EF5               	movlw	245
 28014  01487A  24E1               	addwf	fsr1l,w,c
 28015  01487C  6ED9               	movwf	fsr2l,c
 28016  01487E  0EFF               	movlw	255
 28017  014880  20E2               	addwfc	fsr1h,w,c
 28018  014882  6EDA               	movwf	fsr2h,c
 28019  014884  0EFC               	movlw	-4
 28020  014886  006F FF8F FFDF     	movff	plusw1,indf2
 28021                           
 28022                           ;stkvar	_b @ sp[(-4)+-4]
 28023  01488C  0EFA               	movlw	250
 28024  01488E  24E1               	addwf	fsr1l,w,c
 28025  014890  6ED9               	movwf	fsr2l,c
 28026  014892  0EFF               	movlw	255
 28027  014894  20E2               	addwfc	fsr1h,w,c
 28028  014896  6EDA               	movwf	fsr2h,c
 28029  014898  50DF               	movf	indf2,w,c
 28030  01489A  6E0C               	movwf	(btemp+11)^0,c
 28031                           
 28032                           ;stkvar	_grs @ sp[(-4)+0]
 28033  01489C  0EFC               	movlw	-4
 28034  01489E  0060  F033  FFE3   	movff	btemp+11,plusw1
 28035                           
 28036                           ;stkvar	_a @ sp[(-4)+-8]
 28037  0148A4  0EF6               	movlw	246
 28038  0148A6  24E1               	addwf	fsr1l,w,c
 28039  0148A8  6ED9               	movwf	fsr2l,c
 28040  0148AA  0EFF               	movlw	255
 28041  0148AC  20E2               	addwfc	fsr1h,w,c
 28042  0148AE  6EDA               	movwf	fsr2h,c
 28043                           
 28044                           ;stkvar	_b @ sp[(-4)+-4]
 28045  0148B0  0EFA               	movlw	250
 28046  0148B2  24E1               	addwf	fsr1l,w,c
 28047  0148B4  6EE9               	movwf	fsr0l,c
 28048  0148B6  0EFF               	movlw	255
 28049  0148B8  20E2               	addwfc	fsr1h,w,c
 28050  0148BA  6EEA               	movwf	fsr0h,c
 28051  0148BC  006F FF7F FFEF     	movff	indf2,indf0
 28052                           
 28053                           ;stkvar	_grs @ sp[(-4)+0]
 28054                           ;stkvar	_a @ sp[(-4)+-8]
 28055  0148C2  0EF6               	movlw	246
 28056  0148C4  24E1               	addwf	fsr1l,w,c
 28057  0148C6  6ED9               	movwf	fsr2l,c
 28058  0148C8  0EFF               	movlw	255
 28059  0148CA  20E2               	addwfc	fsr1h,w,c
 28060  0148CC  6EDA               	movwf	fsr2h,c
 28061  0148CE  0EFC               	movlw	-4
 28062  0148D0  006F FF8F FFDF     	movff	plusw1,indf2
 28063                           
 28064                           ;stkvar	_b @ sp[(-4)+-4]
 28065  0148D6  0EFB               	movlw	251
 28066  0148D8  24E1               	addwf	fsr1l,w,c
 28067  0148DA  6ED9               	movwf	fsr2l,c
 28068  0148DC  0EFF               	movlw	255
 28069  0148DE  20E2               	addwfc	fsr1h,w,c
 28070  0148E0  6EDA               	movwf	fsr2h,c
 28071  0148E2  50DF               	movf	indf2,w,c
 28072  0148E4  6E0C               	movwf	(btemp+11)^0,c
 28073                           
 28074                           ;stkvar	_grs @ sp[(-4)+0]
 28075  0148E6  0EFC               	movlw	-4
 28076  0148E8  0060  F033  FFE3   	movff	btemp+11,plusw1
 28077                           
 28078                           ;stkvar	_a @ sp[(-4)+-8]
 28079  0148EE  0EF7               	movlw	247
 28080  0148F0  24E1               	addwf	fsr1l,w,c
 28081  0148F2  6ED9               	movwf	fsr2l,c
 28082  0148F4  0EFF               	movlw	255
 28083  0148F6  20E2               	addwfc	fsr1h,w,c
 28084  0148F8  6EDA               	movwf	fsr2h,c
 28085                           
 28086                           ;stkvar	_b @ sp[(-4)+-4]
 28087  0148FA  0EFB               	movlw	251
 28088  0148FC  24E1               	addwf	fsr1l,w,c
 28089  0148FE  6EE9               	movwf	fsr0l,c
 28090  014900  0EFF               	movlw	255
 28091  014902  20E2               	addwfc	fsr1h,w,c
 28092  014904  6EEA               	movwf	fsr0h,c
 28093  014906  006F FF7F FFEF     	movff	indf2,indf0
 28094                           
 28095                           ;stkvar	_grs @ sp[(-4)+0]
 28096                           ;stkvar	_a @ sp[(-4)+-8]
 28097  01490C  0EF7               	movlw	247
 28098  01490E  24E1               	addwf	fsr1l,w,c
 28099  014910  6ED9               	movwf	fsr2l,c
 28100  014912  0EFF               	movlw	255
 28101  014914  20E2               	addwfc	fsr1h,w,c
 28102  014916  6EDA               	movwf	fsr2h,c
 28103  014918  0EFC               	movlw	-4
 28104  01491A  006F FF8F FFDF     	movff	plusw1,indf2
 28105  014920                     l7963:
 28106                           
 28107                           ;stkvar	_grs @ sp[(-4)+0]
 28108  014920  0EFC               	movlw	-4
 28109  014922  6AE3               	clrf	plusw1,c
 28110                           
 28111                           ;stkvar	_aexp @ sp[(-4)+2]
 28112  014924  0EFE               	movlw	-2
 28113  014926  50E3               	movf	plusw1,w,c
 28114  014928  6E0B               	movwf	(btemp+10)^0,c
 28115  01492A  6A0C               	clrf	(btemp+11)^0,c
 28116                           
 28117                           ;stkvar	_bexp @ sp[(-4)+1]
 28118  01492C  0EFD               	movlw	-3
 28119  01492E  50E3               	movf	plusw1,w,c
 28120  014930  5E0B               	subwf	(btemp+10)^0,f,c
 28121  014932  0E00               	movlw	0
 28122  014934  5A0C               	subwfb	(btemp+11)^0,f,c
 28123  014936  BE0C               	btfsc	(btemp+11)^0,7,c
 28124  014938  D062               	goto	l7987
 28125  01493A  500C               	movf	(btemp+11)^0,w,c
 28126  01493C  E104               	bnz	u5650
 28127  01493E  0E1A               	movlw	26
 28128  014940  5C0B               	subwf	(btemp+10)^0,w,c
 28129  014942  A0D8               	btfss	status,0,c
 28130  014944  D05C               	goto	l7987
 28131  014946                     u5650:
 28132                           
 28133                           ;stkvar	_b @ sp[(-4)+-4]
 28134  014946  0EF8               	movlw	-8
 28135  014948  50E3               	movf	plusw1,w,c
 28136  01494A  E10A               	bnz	u5661
 28137  01494C  0EF9               	movlw	-7
 28138  01494E  50E3               	movf	plusw1,w,c
 28139  014950  E107               	bnz	u5661
 28140  014952  0EFA               	movlw	-6
 28141  014954  50E3               	movf	plusw1,w,c
 28142  014956  E104               	bnz	u5661
 28143  014958  0EFB               	movlw	-5
 28144  01495A  50E3               	movf	plusw1,w,c
 28145  01495C  B4D8               	btfsc	status,2,c
 28146  01495E  D003               	goto	u5660
 28147  014960                     u5661:
 28148  014960  6A0C               	clrf	(btemp+11)^0,c
 28149  014962  2A0C               	incf	(btemp+11)^0,f,c
 28150  014964  D001               	goto	u5678
 28151  014966                     u5660:
 28152  014966  6A0C               	clrf	(btemp+11)^0,c
 28153  014968                     u5678:
 28154                           
 28155                           ;stkvar	_grs @ sp[(-4)+0]
 28156  014968  0EFC               	movlw	-4
 28157  01496A  0060  F033  FFE3   	movff	btemp+11,plusw1
 28158                           
 28159                           ;stkvar	_b @ sp[(-4)+-4]
 28160  014970  0EF8               	movlw	-8
 28161  014972  6AE3               	clrf	plusw1,c
 28162  014974  0EF9               	movlw	-7
 28163  014976  6AE3               	clrf	plusw1,c
 28164  014978  0EFA               	movlw	-6
 28165  01497A  6AE3               	clrf	plusw1,c
 28166  01497C  0EFB               	movlw	-5
 28167  01497E  6AE3               	clrf	plusw1,c
 28168                           
 28169                           ;stkvar	_aexp @ sp[(-4)+2]
 28170                           ;stkvar	_bexp @ sp[(-4)+1]
 28171  014980  0EFE               	movlw	-2
 28172  014982  006F FF8C  F001    	movff	plusw1,btemp
 28173  014988  0EFD               	movlw	-3
 28174  01498A  0060  F007  FFE3   	movff	btemp,plusw1
 28175  014990  D042               	goto	u5710
 28176  014992                     l7973:
 28177                           
 28178                           ;stkvar	_grs @ sp[(-4)+0]
 28179  014992  0EFC               	movlw	-4
 28180  014994  A0E3               	btfss	plusw1,0,c
 28181  014996  D00D               	goto	l7977
 28182                           
 28183                           ;stkvar	_grs @ sp[(-4)+0]
 28184  014998  0EFC               	movlw	-4
 28185  01499A  006F FF8C  F00C    	movff	plusw1,btemp+11
 28186  0149A0  90D8               	bcf	status,0,c
 28187  0149A2  320C               	rrcf	(btemp+11)^0,f,c
 28188  0149A4  0E01               	movlw	1
 28189  0149A6  120C               	iorwf	(btemp+11)^0,f,c
 28190                           
 28191                           ;stkvar	_grs @ sp[(-4)+0]
 28192  0149A8  0EFC               	movlw	-4
 28193  0149AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 28194  0149B0  D009               	goto	l7979
 28195  0149B2                     l7977:
 28196                           
 28197                           ;stkvar	_grs @ sp[(-4)+0]
 28198  0149B2  50E1               	movf	fsr1l,w,c
 28199  0149B4  0FFC               	addlw	-4
 28200  0149B6  6ED9               	movwf	fsr2l,c
 28201  0149B8  50E2               	movf	fsr1h,w,c
 28202  0149BA  6EDA               	movwf	fsr2h,c
 28203  0149BC  0EFF               	movlw	255
 28204  0149BE  22DA               	addwfc	fsr2h,f,c
 28205  0149C0  90D8               	bcf	status,0,c
 28206  0149C2  32DF               	rrcf	indf2,f,c
 28207  0149C4                     l7979:
 28208                           
 28209                           ;stkvar	_b @ sp[(-4)+-4]
 28210  0149C4  0EF8               	movlw	-8
 28211  0149C6  A0E3               	btfss	plusw1,0,c
 28212  0149C8  D002               	goto	l7983
 28213                           
 28214                           ;stkvar	_grs @ sp[(-4)+0]
 28215  0149CA  0EFC               	movlw	-4
 28216  0149CC  8EE3               	bsf	plusw1,7,c
 28217  0149CE                     l7983:
 28218  0149CE  0E01               	movlw	1
 28219  0149D0  6E0C               	movwf	(btemp+11)^0,c
 28220                           
 28221                           ;stkvar	_b @ sp[(-4)+-4]
 28222  0149D2  50E1               	movf	fsr1l,w,c
 28223  0149D4  0FF8               	addlw	-8
 28224  0149D6  6ED9               	movwf	fsr2l,c
 28225  0149D8  50E2               	movf	fsr1h,w,c
 28226  0149DA  6EDA               	movwf	fsr2h,c
 28227  0149DC  0EFF               	movlw	255
 28228  0149DE  22DA               	addwfc	fsr2h,f,c
 28229  0149E0  280C               	incf	(btemp+11)^0,w,c
 28230  0149E2  52DE               	movf	postinc2,f,c
 28231  0149E4  D008               	goto	u5700
 28232  0149E6                     u5705:
 28233  0149E6  52DE               	movf	postinc2,f,c
 28234  0149E8  90D8               	bcf	status,0,c
 28235  0149EA  BEDC               	btfsc	preinc2,7,c
 28236  0149EC  80D8               	bsf	status,0,c
 28237  0149EE  32DD               	rrcf	postdec2,f,c
 28238  0149F0  32DD               	rrcf	postdec2,f,c
 28239  0149F2  32DD               	rrcf	postdec2,f,c
 28240  0149F4  32DE               	rrcf	postinc2,f,c
 28241  0149F6                     u5700:
 28242  0149F6  2EE8               	decfsz	wreg,f,c
 28243  0149F8  D7F6               	goto	u5705
 28244                           
 28245                           ;stkvar	_bexp @ sp[(-4)+1]
 28246  0149FA  0EFD               	movlw	-3
 28247  0149FC  2AE3               	incf	plusw1,f,c
 28248  0149FE                     l7987:
 28249                           
 28250                           ;stkvar	_aexp @ sp[(-4)+2]
 28251                           ;stkvar	_bexp @ sp[(-4)+1]
 28252  0149FE  50E1               	movf	fsr1l,w,c
 28253  014A00  0FFD               	addlw	-3
 28254  014A02  6ED9               	movwf	fsr2l,c
 28255  014A04  50E2               	movf	fsr1h,w,c
 28256  014A06  6EDA               	movwf	fsr2h,c
 28257  014A08  0EFF               	movlw	255
 28258  014A0A  22DA               	addwfc	fsr2h,f,c
 28259  014A0C  0EFE               	movlw	-2
 28260  014A0E  50E3               	movf	plusw1,w,c
 28261  014A10  5CDE               	subwf	postinc2,w,c
 28262  014A12  A0D8               	btfss	status,0,c
 28263  014A14  D7BE               	goto	l7973
 28264  014A16                     u5710:
 28265                           
 28266                           ;stkvar	_signs @ sp[(-4)+3]
 28267  014A16  0EFF               	movlw	-1
 28268  014A18  BCE3               	btfsc	plusw1,6,c
 28269  014A1A  D066               	goto	l8015
 28270                           
 28271                           ;stkvar	_bexp @ sp[(-4)+1]
 28272  014A1C  0EFD               	movlw	-3
 28273  014A1E  50E3               	movf	plusw1,w,c
 28274  014A20  B4D8               	btfsc	status,2,c
 28275  014A22  D0F2               	goto	u5810
 28276                           
 28277                           ;stkvar	_a @ sp[(-4)+-8]
 28278                           ;stkvar	_b @ sp[(-4)+-4]
 28279  014A24  0EF8               	movlw	-8
 28280  014A26  50E3               	movf	plusw1,w,c
 28281  014A28  6E01               	movwf	btemp^0,c
 28282  014A2A  0EF4               	movlw	-12
 28283  014A2C  50E3               	movf	plusw1,w,c
 28284  014A2E  2601               	addwf	btemp^0,f,c
 28285  014A30  0EF8               	movlw	-8
 28286  014A32  0060  F007  FFE3   	movff	btemp,plusw1
 28287  014A38  0EF9               	movlw	-7
 28288  014A3A  50E3               	movf	plusw1,w,c
 28289  014A3C  6E01               	movwf	btemp^0,c
 28290  014A3E  0EF5               	movlw	-11
 28291  014A40  50E3               	movf	plusw1,w,c
 28292  014A42  2201               	addwfc	btemp^0,f,c
 28293  014A44  0EF9               	movlw	-7
 28294  014A46  0060  F007  FFE3   	movff	btemp,plusw1
 28295  014A4C  0EFA               	movlw	-6
 28296  014A4E  50E3               	movf	plusw1,w,c
 28297  014A50  6E01               	movwf	btemp^0,c
 28298  014A52  0EF6               	movlw	-10
 28299  014A54  50E3               	movf	plusw1,w,c
 28300  014A56  2201               	addwfc	btemp^0,f,c
 28301  014A58  0EFA               	movlw	-6
 28302  014A5A  0060  F007  FFE3   	movff	btemp,plusw1
 28303  014A60  0EFB               	movlw	-5
 28304  014A62  50E3               	movf	plusw1,w,c
 28305  014A64  6E01               	movwf	btemp^0,c
 28306  014A66  0EF7               	movlw	-9
 28307  014A68  50E3               	movf	plusw1,w,c
 28308  014A6A  2201               	addwfc	btemp^0,f,c
 28309  014A6C  0EFB               	movlw	-5
 28310  014A6E  0060  F007  FFE3   	movff	btemp,plusw1
 28311                           
 28312                           ;stkvar	_b @ sp[(-4)+-4]
 28313  014A74  0EFB               	movlw	-5
 28314  014A76  A0E3               	btfss	plusw1,0,c
 28315  014A78  D101               	goto	u5850
 28316                           
 28317                           ;stkvar	_grs @ sp[(-4)+0]
 28318  014A7A  0EFC               	movlw	-4
 28319  014A7C  A0E3               	btfss	plusw1,0,c
 28320  014A7E  D00D               	goto	l8005
 28321                           
 28322                           ;stkvar	_grs @ sp[(-4)+0]
 28323  014A80  0EFC               	movlw	-4
 28324  014A82  006F FF8C  F00C    	movff	plusw1,btemp+11
 28325  014A88  90D8               	bcf	status,0,c
 28326  014A8A  320C               	rrcf	(btemp+11)^0,f,c
 28327  014A8C  0E01               	movlw	1
 28328  014A8E  120C               	iorwf	(btemp+11)^0,f,c
 28329                           
 28330                           ;stkvar	_grs @ sp[(-4)+0]
 28331  014A90  0EFC               	movlw	-4
 28332  014A92  0060  F033  FFE3   	movff	btemp+11,plusw1
 28333  014A98  D009               	goto	l8007
 28334  014A9A                     l8005:
 28335                           
 28336                           ;stkvar	_grs @ sp[(-4)+0]
 28337  014A9A  50E1               	movf	fsr1l,w,c
 28338  014A9C  0FFC               	addlw	-4
 28339  014A9E  6ED9               	movwf	fsr2l,c
 28340  014AA0  50E2               	movf	fsr1h,w,c
 28341  014AA2  6EDA               	movwf	fsr2h,c
 28342  014AA4  0EFF               	movlw	255
 28343  014AA6  22DA               	addwfc	fsr2h,f,c
 28344  014AA8  90D8               	bcf	status,0,c
 28345  014AAA  32DF               	rrcf	indf2,f,c
 28346  014AAC                     l8007:
 28347                           
 28348                           ;stkvar	_b @ sp[(-4)+-4]
 28349  014AAC  0EF8               	movlw	-8
 28350  014AAE  A0E3               	btfss	plusw1,0,c
 28351  014AB0  D002               	goto	l8011
 28352                           
 28353                           ;stkvar	_grs @ sp[(-4)+0]
 28354  014AB2  0EFC               	movlw	-4
 28355  014AB4  8EE3               	bsf	plusw1,7,c
 28356  014AB6                     l8011:
 28357  014AB6  0E01               	movlw	1
 28358  014AB8  6E0C               	movwf	(btemp+11)^0,c
 28359                           
 28360                           ;stkvar	_b @ sp[(-4)+-4]
 28361  014ABA  50E1               	movf	fsr1l,w,c
 28362  014ABC  0FF8               	addlw	-8
 28363  014ABE  6ED9               	movwf	fsr2l,c
 28364  014AC0  50E2               	movf	fsr1h,w,c
 28365  014AC2  6EDA               	movwf	fsr2h,c
 28366  014AC4  0EFF               	movlw	255
 28367  014AC6  22DA               	addwfc	fsr2h,f,c
 28368  014AC8  280C               	incf	(btemp+11)^0,w,c
 28369  014ACA  52DE               	movf	postinc2,f,c
 28370  014ACC  D008               	goto	u5770
 28371  014ACE                     u5775:
 28372  014ACE  52DE               	movf	postinc2,f,c
 28373  014AD0  90D8               	bcf	status,0,c
 28374  014AD2  BEDC               	btfsc	preinc2,7,c
 28375  014AD4  80D8               	bsf	status,0,c
 28376  014AD6  32DD               	rrcf	postdec2,f,c
 28377  014AD8  32DD               	rrcf	postdec2,f,c
 28378  014ADA  32DD               	rrcf	postdec2,f,c
 28379  014ADC  32DE               	rrcf	postinc2,f,c
 28380  014ADE                     u5770:
 28381  014ADE  2EE8               	decfsz	wreg,f,c
 28382  014AE0  D7F6               	goto	u5775
 28383                           
 28384                           ;stkvar	_bexp @ sp[(-4)+1]
 28385  014AE2  0EFD               	movlw	-3
 28386  014AE4  2AE3               	incf	plusw1,f,c
 28387  014AE6  D0CA               	goto	u5850
 28388  014AE8                     l8015:
 28389                           
 28390                           ;stkvar	_a @ sp[(-4)+-8]
 28391                           ;stkvar	_b @ sp[(-4)+-4]
 28392  014AE8  50E1               	movf	fsr1l,w,c
 28393  014AEA  0FF8               	addlw	-8
 28394  014AEC  6ED9               	movwf	fsr2l,c
 28395  014AEE  50E2               	movf	fsr1h,w,c
 28396  014AF0  6EDA               	movwf	fsr2h,c
 28397  014AF2  0EFF               	movlw	255
 28398  014AF4  22DA               	addwfc	fsr2h,f,c
 28399  014AF6  0EF4               	movlw	-12
 28400  014AF8  50E3               	movf	plusw1,w,c
 28401  014AFA  5CDE               	subwf	postinc2,w,c
 28402  014AFC  0EF5               	movlw	-11
 28403  014AFE  50E3               	movf	plusw1,w,c
 28404  014B00  58DE               	subwfb	postinc2,w,c
 28405  014B02  0EF6               	movlw	-10
 28406  014B04  50E3               	movf	plusw1,w,c
 28407  014B06  58DE               	subwfb	postinc2,w,c
 28408  014B08  50DE               	movf	postinc2,w,c
 28409  014B0A  0A80               	xorlw	128
 28410  014B0C  6E01               	movwf	btemp^0,c
 28411  014B0E  0EF7               	movlw	-9
 28412  014B10  50E3               	movf	plusw1,w,c
 28413  014B12  0A80               	xorlw	128
 28414  014B14  5801               	subwfb	btemp^0,w,c
 28415  014B16  B0D8               	btfsc	status,0,c
 28416  014B18  D053               	goto	l8027
 28417                           
 28418                           ;stkvar	_b @ sp[(-4)+-4]
 28419                           ;stkvar	_a @ sp[(-4)+-8]
 28420  014B1A  0EF4               	movlw	-12
 28421  014B1C  006F FF8C  F009    	movff	plusw1,btemp+8
 28422  014B22  0EF5               	movlw	-11
 28423  014B24  006F FF8C  F00A    	movff	plusw1,btemp+9
 28424  014B2A  0EF6               	movlw	-10
 28425  014B2C  006F FF8C  F00B    	movff	plusw1,btemp+10
 28426  014B32  0EF7               	movlw	-9
 28427  014B34  006F FF8C  F00C    	movff	plusw1,btemp+11
 28428  014B3A  0EF8               	movlw	-8
 28429  014B3C  50E3               	movf	plusw1,w,c
 28430  014B3E  5E09               	subwf	(btemp+8)^0,f,c
 28431  014B40  0EF9               	movlw	-7
 28432  014B42  50E3               	movf	plusw1,w,c
 28433  014B44  5A0A               	subwfb	(btemp+9)^0,f,c
 28434  014B46  0EFA               	movlw	-6
 28435  014B48  50E3               	movf	plusw1,w,c
 28436  014B4A  5A0B               	subwfb	(btemp+10)^0,f,c
 28437  014B4C  0EFB               	movlw	-5
 28438  014B4E  50E3               	movf	plusw1,w,c
 28439  014B50  5A0C               	subwfb	(btemp+11)^0,f,c
 28440  014B52  0EFF               	movlw	255
 28441  014B54  2409               	addwf	(btemp+8)^0,w,c
 28442  014B56  6E05               	movwf	(btemp+4)^0,c
 28443  014B58  0EFF               	movlw	255
 28444  014B5A  200A               	addwfc	(btemp+9)^0,w,c
 28445  014B5C  6E06               	movwf	(btemp+5)^0,c
 28446  014B5E  0EFF               	movlw	255
 28447  014B60  200B               	addwfc	(btemp+10)^0,w,c
 28448  014B62  6E07               	movwf	(btemp+6)^0,c
 28449  014B64  0EFF               	movlw	255
 28450  014B66  200C               	addwfc	(btemp+11)^0,w,c
 28451  014B68  6E08               	movwf	(btemp+7)^0,c
 28452                           
 28453                           ;stkvar	_b @ sp[(-4)+-4]
 28454  014B6A  0EF8               	movlw	-8
 28455  014B6C  0060  F017  FFE3   	movff	btemp+4,plusw1
 28456  014B72  0EF9               	movlw	-7
 28457  014B74  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28458  014B7A  0EFA               	movlw	-6
 28459  014B7C  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28460  014B82  0EFB               	movlw	-5
 28461  014B84  0060  F023  FFE3   	movff	btemp+7,plusw1
 28462                           
 28463                           ;stkvar	_signs @ sp[(-4)+3]
 28464  014B8A  0EFF               	movlw	-1
 28465  014B8C  7EE3               	btg	plusw1,7,c
 28466                           
 28467                           ;stkvar	_grs @ sp[(-4)+0]
 28468  014B8E  0EFC               	movlw	-4
 28469  014B90  50E3               	movf	plusw1,w,c
 28470  014B92  0800               	sublw	0
 28471  014B94  6E0C               	movwf	(btemp+11)^0,c
 28472                           
 28473                           ;stkvar	_grs @ sp[(-4)+0]
 28474  014B96  0EFC               	movlw	-4
 28475  014B98  0060  F033  FFE3   	movff	btemp+11,plusw1
 28476                           
 28477                           ;stkvar	_grs @ sp[(-4)+0]
 28478  014B9E  0EFC               	movlw	-4
 28479  014BA0  50E3               	movf	plusw1,w,c
 28480  014BA2  A4D8               	btfss	status,2,c
 28481  014BA4  D020               	goto	l8029
 28482                           
 28483                           ;stkvar	_b @ sp[(-4)+-4]
 28484  014BA6  50E1               	movf	fsr1l,w,c
 28485  014BA8  0FF8               	addlw	-8
 28486  014BAA  6ED9               	movwf	fsr2l,c
 28487  014BAC  50E2               	movf	fsr1h,w,c
 28488  014BAE  6EDA               	movwf	fsr2h,c
 28489  014BB0  0EFF               	movlw	255
 28490  014BB2  22DA               	addwfc	fsr2h,f,c
 28491  014BB4  2ADE               	incf	postinc2,f,c
 28492  014BB6  0E00               	movlw	0
 28493  014BB8  22DE               	addwfc	postinc2,f,c
 28494  014BBA  22DE               	addwfc	postinc2,f,c
 28495  014BBC  22DE               	addwfc	postinc2,f,c
 28496  014BBE  D013               	goto	l8029
 28497  014BC0                     l8027:
 28498                           
 28499                           ;stkvar	_a @ sp[(-4)+-8]
 28500                           ;stkvar	_b @ sp[(-4)+-4]
 28501  014BC0  50E1               	movf	fsr1l,w,c
 28502  014BC2  0FF8               	addlw	-8
 28503  014BC4  6ED9               	movwf	fsr2l,c
 28504  014BC6  50E2               	movf	fsr1h,w,c
 28505  014BC8  6EDA               	movwf	fsr2h,c
 28506  014BCA  0EFF               	movlw	255
 28507  014BCC  22DA               	addwfc	fsr2h,f,c
 28508  014BCE  0EF4               	movlw	-12
 28509  014BD0  50E3               	movf	plusw1,w,c
 28510  014BD2  5EDE               	subwf	postinc2,f,c
 28511  014BD4  0EF5               	movlw	-11
 28512  014BD6  50E3               	movf	plusw1,w,c
 28513  014BD8  5ADE               	subwfb	postinc2,f,c
 28514  014BDA  0EF6               	movlw	-10
 28515  014BDC  50E3               	movf	plusw1,w,c
 28516  014BDE  5ADE               	subwfb	postinc2,f,c
 28517  014BE0  0EF7               	movlw	-9
 28518  014BE2  50E3               	movf	plusw1,w,c
 28519  014BE4  5ADE               	subwfb	postinc2,f,c
 28520  014BE6                     l8029:
 28521                           
 28522                           ;stkvar	_b @ sp[(-4)+-4]
 28523  014BE6  0EF8               	movlw	-8
 28524  014BE8  50E3               	movf	plusw1,w,c
 28525  014BEA  E145               	bnz	l8051
 28526  014BEC  0EF9               	movlw	-7
 28527  014BEE  50E3               	movf	plusw1,w,c
 28528  014BF0  E142               	bnz	l8051
 28529  014BF2  0EFA               	movlw	-6
 28530  014BF4  50E3               	movf	plusw1,w,c
 28531  014BF6  E13F               	bnz	l8051
 28532  014BF8  0EFB               	movlw	-5
 28533  014BFA  50E3               	movf	plusw1,w,c
 28534  014BFC  A4D8               	btfss	status,2,c
 28535  014BFE  D03B               	goto	l8051
 28536                           
 28537                           ;stkvar	_grs @ sp[(-4)+0]
 28538  014C00  0EFC               	movlw	-4
 28539  014C02  50E3               	movf	plusw1,w,c
 28540  014C04  A4D8               	btfss	status,2,c
 28541  014C06  D037               	goto	l8051
 28542  014C08                     u5810:
 28543  014C08  0E00               	movlw	0
 28544  014C0A  6E01               	movwf	btemp^0,c
 28545  014C0C  0E00               	movlw	0
 28546  014C0E  6E02               	movwf	(btemp+1)^0,c
 28547  014C10  0E00               	movlw	0
 28548  014C12  6E03               	movwf	(btemp+2)^0,c
 28549  014C14  0E00               	movlw	0
 28550  014C16  6E04               	movwf	(btemp+3)^0,c
 28551  014C18  D0C6               	goto	l3013
 28552  014C1A                     l8037:
 28553                           
 28554                           ;stkvar	_b @ sp[(-4)+-4]
 28555  014C1A  90D8               	bcf	status,0,c
 28556  014C1C  0EF8               	movlw	-8
 28557  014C1E  36E3               	rlcf	plusw1,f,c
 28558  014C20  0EF9               	movlw	-7
 28559  014C22  36E3               	rlcf	plusw1,f,c
 28560  014C24  0EFA               	movlw	-6
 28561  014C26  36E3               	rlcf	plusw1,f,c
 28562  014C28  0EFB               	movlw	-5
 28563  014C2A  36E3               	rlcf	plusw1,f,c
 28564                           
 28565                           ;stkvar	_grs @ sp[(-4)+0]
 28566  014C2C  0EFC               	movlw	-4
 28567  014C2E  AEE3               	btfss	plusw1,7,c
 28568  014C30  D002               	goto	l3025
 28569                           
 28570                           ;stkvar	_b @ sp[(-4)+-4]
 28571  014C32  0EF8               	movlw	-8
 28572  014C34  80E3               	bsf	plusw1,0,c
 28573  014C36                     l3025:
 28574                           
 28575                           ;stkvar	_grs @ sp[(-4)+0]
 28576  014C36  0EFC               	movlw	-4
 28577  014C38  A0E3               	btfss	plusw1,0,c
 28578  014C3A  D00E               	goto	l8045
 28579                           
 28580                           ;stkvar	_grs @ sp[(-4)+0]
 28581  014C3C  0EFC               	movlw	-4
 28582  014C3E  006F FF8C  F00C    	movff	plusw1,btemp+11
 28583  014C44  90D8               	bcf	status,0,c
 28584  014C46  340C               	rlcf	(btemp+11)^0,w,c
 28585  014C48  6E0B               	movwf	(btemp+10)^0,c
 28586  014C4A  0E01               	movlw	1
 28587  014C4C  120B               	iorwf	(btemp+10)^0,f,c
 28588                           
 28589                           ;stkvar	_grs @ sp[(-4)+0]
 28590  014C4E  0EFC               	movlw	-4
 28591  014C50  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28592  014C56  D009               	goto	l8047
 28593  014C58                     l8045:
 28594                           
 28595                           ;stkvar	_grs @ sp[(-4)+0]
 28596  014C58  50E1               	movf	fsr1l,w,c
 28597  014C5A  0FFC               	addlw	-4
 28598  014C5C  6ED9               	movwf	fsr2l,c
 28599  014C5E  50E2               	movf	fsr1h,w,c
 28600  014C60  6EDA               	movwf	fsr2h,c
 28601  014C62  0EFF               	movlw	255
 28602  014C64  22DA               	addwfc	fsr2h,f,c
 28603  014C66  90D8               	bcf	status,0,c
 28604  014C68  36DF               	rlcf	indf2,f,c
 28605  014C6A                     l8047:
 28606                           
 28607                           ;stkvar	_bexp @ sp[(-4)+1]
 28608  014C6A  0EFD               	movlw	-3
 28609  014C6C  50E3               	movf	plusw1,w,c
 28610  014C6E  B4D8               	btfsc	status,2,c
 28611  014C70  D002               	goto	l8051
 28612                           
 28613                           ;stkvar	_bexp @ sp[(-4)+1]
 28614  014C72  0EFD               	movlw	-3
 28615  014C74  06E3               	decf	plusw1,f,c
 28616  014C76                     l8051:
 28617                           
 28618                           ;stkvar	_b @ sp[(-4)+-4]
 28619  014C76  0EFA               	movlw	-6
 28620  014C78  AEE3               	btfss	plusw1,7,c
 28621  014C7A  D7CF               	goto	l8037
 28622  014C7C                     u5850:
 28623                           
 28624                           ;stkvar	_aexp @ sp[(-4)+2]
 28625  014C7C  0EFE               	movlw	-2
 28626  014C7E  6AE3               	clrf	plusw1,c
 28627                           
 28628                           ;stkvar	_grs @ sp[(-4)+0]
 28629  014C80  0EFC               	movlw	-4
 28630  014C82  AEE3               	btfss	plusw1,7,c
 28631  014C84  D00F               	goto	l8065
 28632                           
 28633                           ;stkvar	_grs @ sp[(-4)+0]
 28634  014C86  0EFC               	movlw	-4
 28635  014C88  006F FF8C  F00C    	movff	plusw1,btemp+11
 28636  014C8E  0E7F               	movlw	127
 28637  014C90  160C               	andwf	(btemp+11)^0,f,c
 28638  014C92  B4D8               	btfsc	status,2,c
 28639  014C94  D004               	goto	l8061
 28640  014C96                     u5870:
 28641                           
 28642                           ;stkvar	_aexp @ sp[(-4)+2]
 28643  014C96  0EFE               	movlw	-2
 28644  014C98  6AE3               	clrf	plusw1,c
 28645  014C9A  2AE3               	incf	plusw1,f,c
 28646  014C9C  D003               	goto	l8065
 28647  014C9E                     l8061:
 28648                           
 28649                           ;stkvar	_b @ sp[(-4)+-4]
 28650  014C9E  0EF8               	movlw	-8
 28651  014CA0  B0E3               	btfsc	plusw1,0,c
 28652  014CA2  D7F9               	goto	u5870
 28653  014CA4                     l8065:
 28654                           
 28655                           ;stkvar	_aexp @ sp[(-4)+2]
 28656  014CA4  0EFE               	movlw	-2
 28657  014CA6  50E3               	movf	plusw1,w,c
 28658  014CA8  B4D8               	btfsc	status,2,c
 28659  014CAA  D02B               	goto	l8077
 28660                           
 28661                           ;stkvar	_b @ sp[(-4)+-4]
 28662  014CAC  50E1               	movf	fsr1l,w,c
 28663  014CAE  0FF8               	addlw	-8
 28664  014CB0  6ED9               	movwf	fsr2l,c
 28665  014CB2  50E2               	movf	fsr1h,w,c
 28666  014CB4  6EDA               	movwf	fsr2h,c
 28667  014CB6  0EFF               	movlw	255
 28668  014CB8  22DA               	addwfc	fsr2h,f,c
 28669  014CBA  2ADE               	incf	postinc2,f,c
 28670  014CBC  0E00               	movlw	0
 28671  014CBE  22DE               	addwfc	postinc2,f,c
 28672  014CC0  22DE               	addwfc	postinc2,f,c
 28673  014CC2  22DE               	addwfc	postinc2,f,c
 28674                           
 28675                           ;stkvar	_b @ sp[(-4)+-4]
 28676  014CC4  0EFB               	movlw	-5
 28677  014CC6  A0E3               	btfss	plusw1,0,c
 28678  014CC8  D01C               	goto	l8077
 28679  014CCA  0E01               	movlw	1
 28680  014CCC  6E0C               	movwf	(btemp+11)^0,c
 28681                           
 28682                           ;stkvar	_b @ sp[(-4)+-4]
 28683  014CCE  50E1               	movf	fsr1l,w,c
 28684  014CD0  0FF8               	addlw	-8
 28685  014CD2  6ED9               	movwf	fsr2l,c
 28686  014CD4  50E2               	movf	fsr1h,w,c
 28687  014CD6  6EDA               	movwf	fsr2h,c
 28688  014CD8  0EFF               	movlw	255
 28689  014CDA  22DA               	addwfc	fsr2h,f,c
 28690  014CDC  280C               	incf	(btemp+11)^0,w,c
 28691  014CDE  52DE               	movf	postinc2,f,c
 28692  014CE0  D008               	goto	u5910
 28693  014CE2                     u5915:
 28694  014CE2  52DE               	movf	postinc2,f,c
 28695  014CE4  90D8               	bcf	status,0,c
 28696  014CE6  BEDC               	btfsc	preinc2,7,c
 28697  014CE8  80D8               	bsf	status,0,c
 28698  014CEA  32DD               	rrcf	postdec2,f,c
 28699  014CEC  32DD               	rrcf	postdec2,f,c
 28700  014CEE  32DD               	rrcf	postdec2,f,c
 28701  014CF0  32DE               	rrcf	postinc2,f,c
 28702  014CF2                     u5910:
 28703  014CF2  2EE8               	decfsz	wreg,f,c
 28704  014CF4  D7F6               	goto	u5915
 28705                           
 28706                           ;stkvar	_bexp @ sp[(-4)+1]
 28707  014CF6  0EFD               	movlw	-3
 28708  014CF8  28E3               	incf	plusw1,w,c
 28709  014CFA  B4D8               	btfsc	status,2,c
 28710  014CFC  D002               	goto	l8077
 28711                           
 28712                           ;stkvar	_bexp @ sp[(-4)+1]
 28713  014CFE  0EFD               	movlw	-3
 28714  014D00  2AE3               	incf	plusw1,f,c
 28715  014D02                     l8077:
 28716                           
 28717                           ;stkvar	_bexp @ sp[(-4)+1]
 28718  014D02  0EFD               	movlw	-3
 28719  014D04  28E3               	incf	plusw1,w,c
 28720  014D06  B4D8               	btfsc	status,2,c
 28721  014D08  D004               	goto	u5940
 28722                           
 28723                           ;stkvar	_bexp @ sp[(-4)+1]
 28724  014D0A  0EFD               	movlw	-3
 28725  014D0C  50E3               	movf	plusw1,w,c
 28726  014D0E  A4D8               	btfss	status,2,c
 28727  014D10  D00E               	goto	l8087
 28728  014D12                     u5940:
 28729                           
 28730                           ;stkvar	_b @ sp[(-4)+-4]
 28731  014D12  0EF8               	movlw	-8
 28732  014D14  6AE3               	clrf	plusw1,c
 28733  014D16  0EF9               	movlw	-7
 28734  014D18  6AE3               	clrf	plusw1,c
 28735  014D1A  0EFA               	movlw	-6
 28736  014D1C  6AE3               	clrf	plusw1,c
 28737  014D1E  0EFB               	movlw	-5
 28738  014D20  6AE3               	clrf	plusw1,c
 28739                           
 28740                           ;stkvar	_bexp @ sp[(-4)+1]
 28741  014D22  0EFD               	movlw	-3
 28742  014D24  50E3               	movf	plusw1,w,c
 28743  014D26  A4D8               	btfss	status,2,c
 28744  014D28  D002               	goto	l8087
 28745                           
 28746                           ;stkvar	_signs @ sp[(-4)+3]
 28747  014D2A  0EFF               	movlw	-1
 28748  014D2C  6AE3               	clrf	plusw1,c
 28749  014D2E                     l8087:
 28750                           
 28751                           ;stkvar	_bexp @ sp[(-4)+1]
 28752  014D2E  0EFD               	movlw	-3
 28753  014D30  A0E3               	btfss	plusw1,0,c
 28754  014D32  D009               	goto	l8091
 28755                           
 28756                           ;stkvar	_b @ sp[(-4)+-4]
 28757  014D34  0EFA               	movlw	250
 28758  014D36  24E1               	addwf	fsr1l,w,c
 28759  014D38  6ED9               	movwf	fsr2l,c
 28760  014D3A  0EFF               	movlw	255
 28761  014D3C  20E2               	addwfc	fsr1h,w,c
 28762  014D3E  6EDA               	movwf	fsr2h,c
 28763  014D40  0E00               	movlw	0
 28764  014D42  8EDB               	bsf	plusw2,7,c
 28765  014D44  D008               	goto	l8093
 28766  014D46                     l8091:
 28767                           
 28768                           ;stkvar	_b @ sp[(-4)+-4]
 28769  014D46  0EFA               	movlw	250
 28770  014D48  24E1               	addwf	fsr1l,w,c
 28771  014D4A  6ED9               	movwf	fsr2l,c
 28772  014D4C  0EFF               	movlw	255
 28773  014D4E  20E2               	addwfc	fsr1h,w,c
 28774  014D50  6EDA               	movwf	fsr2h,c
 28775  014D52  0E7F               	movlw	127
 28776  014D54  16DF               	andwf	indf2,f,c
 28777  014D56                     l8093:
 28778                           
 28779                           ;stkvar	_b @ sp[(-4)+-4]
 28780  014D56  0EFB               	movlw	251
 28781  014D58  24E1               	addwf	fsr1l,w,c
 28782  014D5A  6ED9               	movwf	fsr2l,c
 28783  014D5C  0EFF               	movlw	255
 28784  014D5E  20E2               	addwfc	fsr1h,w,c
 28785  014D60  6EDA               	movwf	fsr2h,c
 28786                           
 28787                           ;stkvar	_bexp @ sp[(-4)+1]
 28788  014D62  0EFD               	movlw	-3
 28789  014D64  006F FF8C  F00C    	movff	plusw1,btemp+11
 28790  014D6A  90D8               	bcf	status,0,c
 28791  014D6C  300C               	rrcf	(btemp+11)^0,w,c
 28792  014D6E  6EDF               	movwf	indf2,c
 28793                           
 28794                           ;stkvar	_signs @ sp[(-4)+3]
 28795  014D70  0EFF               	movlw	-1
 28796  014D72  AEE3               	btfss	plusw1,7,c
 28797  014D74  D008               	goto	l8099
 28798                           
 28799                           ;stkvar	_b @ sp[(-4)+-4]
 28800  014D76  0EFB               	movlw	251
 28801  014D78  24E1               	addwf	fsr1l,w,c
 28802  014D7A  6ED9               	movwf	fsr2l,c
 28803  014D7C  0EFF               	movlw	255
 28804  014D7E  20E2               	addwfc	fsr1h,w,c
 28805  014D80  6EDA               	movwf	fsr2h,c
 28806  014D82  0E00               	movlw	0
 28807  014D84  8EDB               	bsf	plusw2,7,c
 28808  014D86                     l8099:
 28809                           
 28810                           ;stkvar	_b @ sp[(-4)+-4]
 28811  014D86  0EF8               	movlw	-8
 28812  014D88  006F FF8C  F001    	movff	plusw1,btemp
 28813  014D8E  0EF9               	movlw	-7
 28814  014D90  006F FF8C  F002    	movff	plusw1,btemp+1
 28815  014D96  0EFA               	movlw	-6
 28816  014D98  006F FF8C  F003    	movff	plusw1,btemp+2
 28817  014D9E  0EFB               	movlw	-5
 28818  014DA0  006F FF8C  F004    	movff	plusw1,btemp+3
 28819  014DA6                     l3013:
 28820                           
 28821                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 28822  014DA6  0EF4               	movlw	244
 28823  014DA8  26E1               	addwf	fsr1l,f,c
 28824  014DAA  0EFF               	movlw	255
 28825  014DAC  22E2               	addwfc	fsr1h,f,c
 28826  014DAE  0012               	return		;funcret
 28827  014DB0                     __end_of___fladd:
 28828                           	opt callstack 0
 28829                           
 28830 ;; *************** function ___flmul *****************
 28831 ;; Defined at:
 28832 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 28833 ;; Parameters:    Size  Location     Type
 28834 ;;  b               4  [STACK] unsigned char 
 28835 ;;  a               4  [STACK] unsigned char 
 28836 ;; Auto vars:     Size  Location     Type
 28837 ;;  prod            4  [STACK] struct .
 28838 ;;  grs             4  [STACK] unsigned long 
 28839 ;;  temp            2  [STACK] struct .
 28840 ;;  bexp            1  [STACK] unsigned char 
 28841 ;;  aexp            1  [STACK] unsigned char 
 28842 ;;  sign            1  [STACK] unsigned char 
 28843 ;; Return value:  Size  Location     Type
 28844 ;;                  4  [STACK] unsigned char 
 28845 ;; Registers used:
 28846 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28847 ;; Tracked objects:
 28848 ;;		On entry : 0/0
 28849 ;;		On exit  : 0/0
 28850 ;;		Unchanged: 0/0
 28851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28856 ;;Total ram usage:        0 bytes
 28857 ;; Hardware stack levels used:    1
 28858 ;; Hardware stack levels required when called:   15
 28859 ;; This function calls:
 28860 ;;		Nothing
 28861 ;; This function is called by:
 28862 ;;		_conv_raw_result
 28863 ;;		_lp_filter
 28864 ;;		_calc_model_data
 28865 ;;		_calc_bsoc
 28866 ;;		_init_bsoc
 28867 ;;		_efgtoa
 28868 ;; This function uses a reentrant model
 28869 ;;
 28870                           
 28871                           	psect	text113
 28872  013DCA                     __ptext113:
 28873                           	opt callstack 0
 28874  013DCA                     ___flmul:
 28875                           	opt callstack 0
 28876                           
 28877                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 28878  013DCA  0E0D               	movlw	13
 28879  013DCC  26E1               	addwf	fsr1l,f,c
 28880  013DCE  0E00               	movlw	0
 28881  013DD0  22E2               	addwfc	fsr1h,f,c
 28882                           
 28883                           ;stkvar	_b @ sp[(-13)+-4]
 28884                           
 28885                           ;incstack = 0
 28886 ;; hardware stack exceeded
 28887  013DD2  0EF2               	movlw	242
 28888  013DD4  24E1               	addwf	fsr1l,w,c
 28889  013DD6  6ED9               	movwf	fsr2l,c
 28890  013DD8  0EFF               	movlw	255
 28891  013DDA  20E2               	addwfc	fsr1h,w,c
 28892  013DDC  6EDA               	movwf	fsr2h,c
 28893  013DDE  50DF               	movf	indf2,w,c
 28894  013DE0  6E0C               	movwf	(btemp+11)^0,c
 28895  013DE2  0E80               	movlw	128
 28896  013DE4  160C               	andwf	(btemp+11)^0,f,c
 28897                           
 28898                           ;stkvar	_sign @ sp[(-13)+12]
 28899  013DE6  0EFF               	movlw	-1
 28900  013DE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 28901                           
 28902                           ;stkvar	_b @ sp[(-13)+-4]
 28903  013DEE  0EF2               	movlw	242
 28904  013DF0  24E1               	addwf	fsr1l,w,c
 28905  013DF2  6ED9               	movwf	fsr2l,c
 28906  013DF4  0EFF               	movlw	255
 28907  013DF6  20E2               	addwfc	fsr1h,w,c
 28908  013DF8  6EDA               	movwf	fsr2h,c
 28909  013DFA  50DF               	movf	indf2,w,c
 28910  013DFC  6E0C               	movwf	(btemp+11)^0,c
 28911  013DFE  90D8               	bcf	status,0,c
 28912  013E00  340C               	rlcf	(btemp+11)^0,w,c
 28913  013E02  6E0B               	movwf	(btemp+10)^0,c
 28914                           
 28915                           ;stkvar	_bexp @ sp[(-13)+10]
 28916  013E04  0EFD               	movlw	-3
 28917  013E06  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28918                           
 28919                           ;stkvar	_b @ sp[(-13)+-4]
 28920  013E0C  0EF1               	movlw	241
 28921  013E0E  24E1               	addwf	fsr1l,w,c
 28922  013E10  6ED9               	movwf	fsr2l,c
 28923  013E12  0EFF               	movlw	255
 28924  013E14  20E2               	addwfc	fsr1h,w,c
 28925  013E16  6EDA               	movwf	fsr2h,c
 28926  013E18  AEDF               	btfss	indf2,7,c
 28927  013E1A  D002               	goto	l8525
 28928                           
 28929                           ;stkvar	_bexp @ sp[(-13)+10]
 28930  013E1C  0EFD               	movlw	-3
 28931  013E1E  80E3               	bsf	plusw1,0,c
 28932  013E20                     l8525:
 28933                           
 28934                           ;stkvar	_bexp @ sp[(-13)+10]
 28935  013E20  0EFD               	movlw	-3
 28936  013E22  50E3               	movf	plusw1,w,c
 28937  013E24  B4D8               	btfsc	status,2,c
 28938  013E26  D01F               	goto	l8533
 28939                           
 28940                           ;stkvar	_bexp @ sp[(-13)+10]
 28941  013E28  0EFD               	movlw	-3
 28942  013E2A  28E3               	incf	plusw1,w,c
 28943  013E2C  A4D8               	btfss	status,2,c
 28944  013E2E  D018               	goto	l8531
 28945  013E30  0E00               	movlw	0
 28946  013E32  6E09               	movwf	(btemp+8)^0,c
 28947  013E34  0E00               	movlw	0
 28948  013E36  6E0A               	movwf	(btemp+9)^0,c
 28949  013E38  0E00               	movlw	0
 28950  013E3A  6E0B               	movwf	(btemp+10)^0,c
 28951  013E3C  0E00               	movlw	0
 28952  013E3E  6E0C               	movwf	(btemp+11)^0,c
 28953                           
 28954                           ;stkvar	_b @ sp[(-13)+-4]
 28955  013E40  0EEF               	movlw	-17
 28956  013E42  0060  F027  FFE3   	movff	btemp+8,plusw1
 28957  013E48  0EF0               	movlw	-16
 28958  013E4A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28959  013E50  0EF1               	movlw	-15
 28960  013E52  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28961  013E58  0EF2               	movlw	-14
 28962  013E5A  0060  F033  FFE3   	movff	btemp+11,plusw1
 28963  013E60                     l8531:
 28964                           
 28965                           ;stkvar	_b @ sp[(-13)+-4]
 28966  013E60  0EF1               	movlw	-15
 28967  013E62  8EE3               	bsf	plusw1,7,c
 28968  013E64  D018               	goto	l8535
 28969  013E66                     l8533:
 28970  013E66  0E00               	movlw	0
 28971  013E68  6E09               	movwf	(btemp+8)^0,c
 28972  013E6A  0E00               	movlw	0
 28973  013E6C  6E0A               	movwf	(btemp+9)^0,c
 28974  013E6E  0E00               	movlw	0
 28975  013E70  6E0B               	movwf	(btemp+10)^0,c
 28976  013E72  0E00               	movlw	0
 28977  013E74  6E0C               	movwf	(btemp+11)^0,c
 28978                           
 28979                           ;stkvar	_b @ sp[(-13)+-4]
 28980  013E76  0EEF               	movlw	-17
 28981  013E78  0060  F027  FFE3   	movff	btemp+8,plusw1
 28982  013E7E  0EF0               	movlw	-16
 28983  013E80  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28984  013E86  0EF1               	movlw	-15
 28985  013E88  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28986  013E8E  0EF2               	movlw	-14
 28987  013E90  0060  F033  FFE3   	movff	btemp+11,plusw1
 28988  013E96                     l8535:
 28989                           
 28990                           ;stkvar	_a @ sp[(-13)+-8]
 28991  013E96  0EEE               	movlw	238
 28992  013E98  24E1               	addwf	fsr1l,w,c
 28993  013E9A  6ED9               	movwf	fsr2l,c
 28994  013E9C  0EFF               	movlw	255
 28995  013E9E  20E2               	addwfc	fsr1h,w,c
 28996  013EA0  6EDA               	movwf	fsr2h,c
 28997  013EA2  50DF               	movf	indf2,w,c
 28998  013EA4  6E0C               	movwf	(btemp+11)^0,c
 28999  013EA6  0E80               	movlw	128
 29000  013EA8  160C               	andwf	(btemp+11)^0,f,c
 29001                           
 29002                           ;stkvar	_sign @ sp[(-13)+12]
 29003  013EAA  50E1               	movf	fsr1l,w,c
 29004  013EAC  0FFF               	addlw	-1
 29005  013EAE  6ED9               	movwf	fsr2l,c
 29006  013EB0  50E2               	movf	fsr1h,w,c
 29007  013EB2  6EDA               	movwf	fsr2h,c
 29008  013EB4  0EFF               	movlw	255
 29009  013EB6  22DA               	addwfc	fsr2h,f,c
 29010  013EB8  500C               	movf	(btemp+11)^0,w,c
 29011  013EBA  1ADF               	xorwf	indf2,f,c
 29012                           
 29013                           ;stkvar	_a @ sp[(-13)+-8]
 29014  013EBC  0EEE               	movlw	238
 29015  013EBE  24E1               	addwf	fsr1l,w,c
 29016  013EC0  6ED9               	movwf	fsr2l,c
 29017  013EC2  0EFF               	movlw	255
 29018  013EC4  20E2               	addwfc	fsr1h,w,c
 29019  013EC6  6EDA               	movwf	fsr2h,c
 29020  013EC8  50DF               	movf	indf2,w,c
 29021  013ECA  6E0C               	movwf	(btemp+11)^0,c
 29022  013ECC  90D8               	bcf	status,0,c
 29023  013ECE  340C               	rlcf	(btemp+11)^0,w,c
 29024  013ED0  6E0B               	movwf	(btemp+10)^0,c
 29025                           
 29026                           ;stkvar	_aexp @ sp[(-13)+11]
 29027  013ED2  0EFE               	movlw	-2
 29028  013ED4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29029                           
 29030                           ;stkvar	_a @ sp[(-13)+-8]
 29031  013EDA  0EED               	movlw	237
 29032  013EDC  24E1               	addwf	fsr1l,w,c
 29033  013EDE  6ED9               	movwf	fsr2l,c
 29034  013EE0  0EFF               	movlw	255
 29035  013EE2  20E2               	addwfc	fsr1h,w,c
 29036  013EE4  6EDA               	movwf	fsr2h,c
 29037  013EE6  AEDF               	btfss	indf2,7,c
 29038  013EE8  D002               	goto	l8543
 29039                           
 29040                           ;stkvar	_aexp @ sp[(-13)+11]
 29041  013EEA  0EFE               	movlw	-2
 29042  013EEC  80E3               	bsf	plusw1,0,c
 29043  013EEE                     l8543:
 29044                           
 29045                           ;stkvar	_aexp @ sp[(-13)+11]
 29046  013EEE  0EFE               	movlw	-2
 29047  013EF0  50E3               	movf	plusw1,w,c
 29048  013EF2  B4D8               	btfsc	status,2,c
 29049  013EF4  D01F               	goto	l8551
 29050                           
 29051                           ;stkvar	_aexp @ sp[(-13)+11]
 29052  013EF6  0EFE               	movlw	-2
 29053  013EF8  28E3               	incf	plusw1,w,c
 29054  013EFA  A4D8               	btfss	status,2,c
 29055  013EFC  D018               	goto	l8549
 29056  013EFE  0E00               	movlw	0
 29057  013F00  6E09               	movwf	(btemp+8)^0,c
 29058  013F02  0E00               	movlw	0
 29059  013F04  6E0A               	movwf	(btemp+9)^0,c
 29060  013F06  0E00               	movlw	0
 29061  013F08  6E0B               	movwf	(btemp+10)^0,c
 29062  013F0A  0E00               	movlw	0
 29063  013F0C  6E0C               	movwf	(btemp+11)^0,c
 29064                           
 29065                           ;stkvar	_a @ sp[(-13)+-8]
 29066  013F0E  0EEB               	movlw	-21
 29067  013F10  0060  F027  FFE3   	movff	btemp+8,plusw1
 29068  013F16  0EEC               	movlw	-20
 29069  013F18  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29070  013F1E  0EED               	movlw	-19
 29071  013F20  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29072  013F26  0EEE               	movlw	-18
 29073  013F28  0060  F033  FFE3   	movff	btemp+11,plusw1
 29074  013F2E                     l8549:
 29075                           
 29076                           ;stkvar	_a @ sp[(-13)+-8]
 29077  013F2E  0EED               	movlw	-19
 29078  013F30  8EE3               	bsf	plusw1,7,c
 29079  013F32  D018               	goto	l8553
 29080  013F34                     l8551:
 29081  013F34  0E00               	movlw	0
 29082  013F36  6E09               	movwf	(btemp+8)^0,c
 29083  013F38  0E00               	movlw	0
 29084  013F3A  6E0A               	movwf	(btemp+9)^0,c
 29085  013F3C  0E00               	movlw	0
 29086  013F3E  6E0B               	movwf	(btemp+10)^0,c
 29087  013F40  0E00               	movlw	0
 29088  013F42  6E0C               	movwf	(btemp+11)^0,c
 29089                           
 29090                           ;stkvar	_a @ sp[(-13)+-8]
 29091  013F44  0EEB               	movlw	-21
 29092  013F46  0060  F027  FFE3   	movff	btemp+8,plusw1
 29093  013F4C  0EEC               	movlw	-20
 29094  013F4E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29095  013F54  0EED               	movlw	-19
 29096  013F56  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29097  013F5C  0EEE               	movlw	-18
 29098  013F5E  0060  F033  FFE3   	movff	btemp+11,plusw1
 29099  013F64                     l8553:
 29100                           
 29101                           ;stkvar	_aexp @ sp[(-13)+11]
 29102  013F64  0EFE               	movlw	-2
 29103  013F66  50E3               	movf	plusw1,w,c
 29104  013F68  B4D8               	btfsc	status,2,c
 29105  013F6A  D004               	goto	u6930
 29106                           
 29107                           ;stkvar	_bexp @ sp[(-13)+10]
 29108  013F6C  0EFD               	movlw	-3
 29109  013F6E  50E3               	movf	plusw1,w,c
 29110  013F70  A4D8               	btfss	status,2,c
 29111  013F72  D009               	goto	l8561
 29112  013F74                     u6930:
 29113  013F74  0E00               	movlw	0
 29114  013F76  6E01               	movwf	btemp^0,c
 29115  013F78  0E00               	movlw	0
 29116  013F7A  6E02               	movwf	(btemp+1)^0,c
 29117  013F7C  0E00               	movlw	0
 29118  013F7E  6E03               	movwf	(btemp+2)^0,c
 29119  013F80  0E00               	movlw	0
 29120  013F82  6E04               	movwf	(btemp+3)^0,c
 29121  013F84  D332               	goto	l3094
 29122  013F86                     l8561:
 29123                           
 29124                           ;stkvar	_b @ sp[(-13)+-4]
 29125  013F86  0EEF               	movlw	-17
 29126  013F88  006F FF8C  F00C    	movff	plusw1,btemp+11
 29127                           
 29128                           ;stkvar	_a @ sp[(-13)+-8]
 29129  013F8E  0EED               	movlw	237
 29130  013F90  24E1               	addwf	fsr1l,w,c
 29131  013F92  6ED9               	movwf	fsr2l,c
 29132  013F94  0EFF               	movlw	255
 29133  013F96  20E2               	addwfc	fsr1h,w,c
 29134  013F98  6EDA               	movwf	fsr2h,c
 29135  013F9A  50DF               	movf	indf2,w,c
 29136  013F9C  020C               	mulwf	(btemp+11)^0,c
 29137                           
 29138                           ;stkvar	_temp @ sp[(-13)+8]
 29139  013F9E  0EFB               	movlw	-5
 29140  013FA0  006F FFCF FFE3     	movff	prodl,plusw1
 29141  013FA6  0EFC               	movlw	-4
 29142  013FA8  006F FFD3 FFE3     	movff	prodh,plusw1
 29143                           
 29144                           ;stkvar	_temp @ sp[(-13)+8]
 29145  013FAE  0EFB               	movlw	-5
 29146  013FB0  006F FF8C  F00C    	movff	plusw1,btemp+11
 29147  013FB6  0060  F030  F005   	movff	btemp+11,btemp+4
 29148  013FBC  6A06               	clrf	(btemp+5)^0,c
 29149  013FBE  6A07               	clrf	(btemp+6)^0,c
 29150  013FC0  6A08               	clrf	(btemp+7)^0,c
 29151                           
 29152                           ;stkvar	_grs @ sp[(-13)+4]
 29153  013FC2  0EF7               	movlw	-9
 29154  013FC4  0060  F017  FFE3   	movff	btemp+4,plusw1
 29155  013FCA  0EF8               	movlw	-8
 29156  013FCC  0060  F01B  FFE3   	movff	btemp+5,plusw1
 29157  013FD2  0EF9               	movlw	-7
 29158  013FD4  0060  F01F  FFE3   	movff	btemp+6,plusw1
 29159  013FDA  0EFA               	movlw	-6
 29160  013FDC  0060  F023  FFE3   	movff	btemp+7,plusw1
 29161                           
 29162                           ;stkvar	_temp @ sp[(-13)+8]
 29163  013FE2  0EFC               	movlw	252
 29164  013FE4  24E1               	addwf	fsr1l,w,c
 29165  013FE6  6ED9               	movwf	fsr2l,c
 29166  013FE8  0EFF               	movlw	255
 29167  013FEA  20E2               	addwfc	fsr1h,w,c
 29168  013FEC  6EDA               	movwf	fsr2h,c
 29169  013FEE  50DF               	movf	indf2,w,c
 29170  013FF0  6E0C               	movwf	(btemp+11)^0,c
 29171  013FF2  0060  F030  F005   	movff	btemp+11,btemp+4
 29172  013FF8  6A06               	clrf	(btemp+5)^0,c
 29173  013FFA  6A07               	clrf	(btemp+6)^0,c
 29174  013FFC  6A08               	clrf	(btemp+7)^0,c
 29175                           
 29176                           ;stkvar	_prod @ sp[(-13)+0]
 29177  013FFE  0EF3               	movlw	-13
 29178  014000  0060  F017  FFE3   	movff	btemp+4,plusw1
 29179  014006  0EF4               	movlw	-12
 29180  014008  0060  F01B  FFE3   	movff	btemp+5,plusw1
 29181  01400E  0EF5               	movlw	-11
 29182  014010  0060  F01F  FFE3   	movff	btemp+6,plusw1
 29183  014016  0EF6               	movlw	-10
 29184  014018  0060  F023  FFE3   	movff	btemp+7,plusw1
 29185                           
 29186                           ;stkvar	_b @ sp[(-13)+-4]
 29187  01401E  0EF0               	movlw	240
 29188  014020  24E1               	addwf	fsr1l,w,c
 29189  014022  6ED9               	movwf	fsr2l,c
 29190  014024  0EFF               	movlw	255
 29191  014026  20E2               	addwfc	fsr1h,w,c
 29192  014028  6EDA               	movwf	fsr2h,c
 29193  01402A  50DF               	movf	indf2,w,c
 29194  01402C  6E0C               	movwf	(btemp+11)^0,c
 29195                           
 29196                           ;stkvar	_a @ sp[(-13)+-8]
 29197  01402E  0EEC               	movlw	236
 29198  014030  24E1               	addwf	fsr1l,w,c
 29199  014032  6ED9               	movwf	fsr2l,c
 29200  014034  0EFF               	movlw	255
 29201  014036  20E2               	addwfc	fsr1h,w,c
 29202  014038  6EDA               	movwf	fsr2h,c
 29203  01403A  50DF               	movf	indf2,w,c
 29204  01403C  020C               	mulwf	(btemp+11)^0,c
 29205                           
 29206                           ;stkvar	_temp @ sp[(-13)+8]
 29207  01403E  0EFB               	movlw	-5
 29208  014040  006F FFCF FFE3     	movff	prodl,plusw1
 29209  014046  0EFC               	movlw	-4
 29210  014048  006F FFD3 FFE3     	movff	prodh,plusw1
 29211                           
 29212                           ;stkvar	_grs @ sp[(-13)+4]
 29213  01404E  50E1               	movf	fsr1l,w,c
 29214  014050  0FF7               	addlw	-9
 29215  014052  6ED9               	movwf	fsr2l,c
 29216  014054  50E2               	movf	fsr1h,w,c
 29217  014056  6EDA               	movwf	fsr2h,c
 29218  014058  0EFF               	movlw	255
 29219  01405A  22DA               	addwfc	fsr2h,f,c
 29220                           
 29221                           ;stkvar	_temp @ sp[(-13)+8]
 29222  01405C  0EFB               	movlw	-5
 29223  01405E  50E3               	movf	plusw1,w,c
 29224  014060  26DE               	addwf	postinc2,f,c
 29225  014062  0E00               	movlw	0
 29226  014064  22DE               	addwfc	postinc2,f,c
 29227  014066  22DE               	addwfc	postinc2,f,c
 29228  014068  22DE               	addwfc	postinc2,f,c
 29229                           
 29230                           ;stkvar	_prod @ sp[(-13)+0]
 29231  01406A  50E1               	movf	fsr1l,w,c
 29232  01406C  0FF3               	addlw	-13
 29233  01406E  6ED9               	movwf	fsr2l,c
 29234  014070  50E2               	movf	fsr1h,w,c
 29235  014072  6EDA               	movwf	fsr2h,c
 29236  014074  0EFF               	movlw	255
 29237  014076  22DA               	addwfc	fsr2h,f,c
 29238                           
 29239                           ;stkvar	_temp @ sp[(-13)+8]
 29240  014078  0EFC               	movlw	252
 29241  01407A  24E1               	addwf	fsr1l,w,c
 29242  01407C  6EE9               	movwf	fsr0l,c
 29243  01407E  0EFF               	movlw	255
 29244  014080  20E2               	addwfc	fsr1h,w,c
 29245  014082  6EEA               	movwf	fsr0h,c
 29246  014084  50EF               	movf	indf0,w,c
 29247  014086  26DE               	addwf	postinc2,f,c
 29248  014088  0E00               	movlw	0
 29249  01408A  22DE               	addwfc	postinc2,f,c
 29250  01408C  22DE               	addwfc	postinc2,f,c
 29251  01408E  22DE               	addwfc	postinc2,f,c
 29252                           
 29253                           ;stkvar	_b @ sp[(-13)+-4]
 29254  014090  0EF1               	movlw	241
 29255  014092  24E1               	addwf	fsr1l,w,c
 29256  014094  6ED9               	movwf	fsr2l,c
 29257  014096  0EFF               	movlw	255
 29258  014098  20E2               	addwfc	fsr1h,w,c
 29259  01409A  6EDA               	movwf	fsr2h,c
 29260  01409C  50DF               	movf	indf2,w,c
 29261  01409E  6E0C               	movwf	(btemp+11)^0,c
 29262                           
 29263                           ;stkvar	_a @ sp[(-13)+-8]
 29264  0140A0  0EEB               	movlw	-21
 29265  0140A2  50E3               	movf	plusw1,w,c
 29266  0140A4  020C               	mulwf	(btemp+11)^0,c
 29267                           
 29268                           ;stkvar	_temp @ sp[(-13)+8]
 29269  0140A6  0EFB               	movlw	-5
 29270  0140A8  006F FFCF FFE3     	movff	prodl,plusw1
 29271  0140AE  0EFC               	movlw	-4
 29272  0140B0  006F FFD3 FFE3     	movff	prodh,plusw1
 29273                           
 29274                           ;stkvar	_grs @ sp[(-13)+4]
 29275  0140B6  50E1               	movf	fsr1l,w,c
 29276  0140B8  0FF7               	addlw	-9
 29277  0140BA  6ED9               	movwf	fsr2l,c
 29278  0140BC  50E2               	movf	fsr1h,w,c
 29279  0140BE  6EDA               	movwf	fsr2h,c
 29280  0140C0  0EFF               	movlw	255
 29281  0140C2  22DA               	addwfc	fsr2h,f,c
 29282                           
 29283                           ;stkvar	_temp @ sp[(-13)+8]
 29284  0140C4  0EFB               	movlw	-5
 29285  0140C6  50E3               	movf	plusw1,w,c
 29286  0140C8  26DE               	addwf	postinc2,f,c
 29287  0140CA  0E00               	movlw	0
 29288  0140CC  22DE               	addwfc	postinc2,f,c
 29289  0140CE  22DE               	addwfc	postinc2,f,c
 29290  0140D0  22DE               	addwfc	postinc2,f,c
 29291                           
 29292                           ;stkvar	_prod @ sp[(-13)+0]
 29293  0140D2  50E1               	movf	fsr1l,w,c
 29294  0140D4  0FF3               	addlw	-13
 29295  0140D6  6ED9               	movwf	fsr2l,c
 29296  0140D8  50E2               	movf	fsr1h,w,c
 29297  0140DA  6EDA               	movwf	fsr2h,c
 29298  0140DC  0EFF               	movlw	255
 29299  0140DE  22DA               	addwfc	fsr2h,f,c
 29300                           
 29301                           ;stkvar	_temp @ sp[(-13)+8]
 29302  0140E0  0EFC               	movlw	252
 29303  0140E2  24E1               	addwf	fsr1l,w,c
 29304  0140E4  6EE9               	movwf	fsr0l,c
 29305  0140E6  0EFF               	movlw	255
 29306  0140E8  20E2               	addwfc	fsr1h,w,c
 29307  0140EA  6EEA               	movwf	fsr0h,c
 29308  0140EC  50EF               	movf	indf0,w,c
 29309  0140EE  26DE               	addwf	postinc2,f,c
 29310  0140F0  0E00               	movlw	0
 29311  0140F2  22DE               	addwfc	postinc2,f,c
 29312  0140F4  22DE               	addwfc	postinc2,f,c
 29313  0140F6  22DE               	addwfc	postinc2,f,c
 29314                           
 29315                           ;stkvar	_grs @ sp[(-13)+4]
 29316  0140F8  50E1               	movf	fsr1l,w,c
 29317  0140FA  0FF7               	addlw	-9
 29318  0140FC  6ED9               	movwf	fsr2l,c
 29319  0140FE  50E2               	movf	fsr1h,w,c
 29320  014100  6EDA               	movwf	fsr2h,c
 29321  014102  0EFF               	movlw	255
 29322  014104  22DA               	addwfc	fsr2h,f,c
 29323  014106  0E08               	movlw	8
 29324  014108                     u6945:
 29325  014108  90D8               	bcf	status,0,c
 29326  01410A  36DE               	rlcf	postinc2,f,c
 29327  01410C  36DE               	rlcf	postinc2,f,c
 29328  01410E  36DE               	rlcf	postinc2,f,c
 29329  014110  36DD               	rlcf	postdec2,f,c
 29330  014112  52DD               	movf	postdec2,f,c
 29331  014114  52DD               	movf	postdec2,f,c
 29332  014116  2EE8               	decfsz	wreg,f,c
 29333  014118  D7F7               	goto	u6945
 29334                           
 29335                           ;stkvar	_b @ sp[(-13)+-4]
 29336  01411A  0EF0               	movlw	240
 29337  01411C  24E1               	addwf	fsr1l,w,c
 29338  01411E  6ED9               	movwf	fsr2l,c
 29339  014120  0EFF               	movlw	255
 29340  014122  20E2               	addwfc	fsr1h,w,c
 29341  014124  6EDA               	movwf	fsr2h,c
 29342  014126  50DF               	movf	indf2,w,c
 29343  014128  6E0C               	movwf	(btemp+11)^0,c
 29344                           
 29345                           ;stkvar	_a @ sp[(-13)+-8]
 29346  01412A  0EEB               	movlw	-21
 29347  01412C  50E3               	movf	plusw1,w,c
 29348  01412E  020C               	mulwf	(btemp+11)^0,c
 29349                           
 29350                           ;stkvar	_temp @ sp[(-13)+8]
 29351  014130  0EFB               	movlw	-5
 29352  014132  006F FFCF FFE3     	movff	prodl,plusw1
 29353  014138  0EFC               	movlw	-4
 29354  01413A  006F FFD3 FFE3     	movff	prodh,plusw1
 29355                           
 29356                           ;stkvar	_temp @ sp[(-13)+8]
 29357  014140  0EFB               	movlw	-5
 29358  014142  006F FF8C  F00B    	movff	plusw1,btemp+10
 29359  014148  0EFC               	movlw	-4
 29360  01414A  006F FF8C  F00C    	movff	plusw1,btemp+11
 29361                           
 29362                           ;stkvar	_grs @ sp[(-13)+4]
 29363  014150  50E1               	movf	fsr1l,w,c
 29364  014152  0FF7               	addlw	-9
 29365  014154  6ED9               	movwf	fsr2l,c
 29366  014156  50E2               	movf	fsr1h,w,c
 29367  014158  6EDA               	movwf	fsr2h,c
 29368  01415A  0EFF               	movlw	255
 29369  01415C  22DA               	addwfc	fsr2h,f,c
 29370  01415E  500B               	movf	(btemp+10)^0,w,c
 29371  014160  26DE               	addwf	postinc2,f,c
 29372  014162  500C               	movf	(btemp+11)^0,w,c
 29373  014164  22DE               	addwfc	postinc2,f,c
 29374  014166  0E00               	movlw	0
 29375  014168  22DE               	addwfc	postinc2,f,c
 29376  01416A  22DE               	addwfc	postinc2,f,c
 29377                           
 29378                           ;stkvar	_b @ sp[(-13)+-4]
 29379  01416C  0EEF               	movlw	-17
 29380  01416E  006F FF8C  F00C    	movff	plusw1,btemp+11
 29381                           
 29382                           ;stkvar	_a @ sp[(-13)+-8]
 29383  014174  0EEC               	movlw	236
 29384  014176  24E1               	addwf	fsr1l,w,c
 29385  014178  6ED9               	movwf	fsr2l,c
 29386  01417A  0EFF               	movlw	255
 29387  01417C  20E2               	addwfc	fsr1h,w,c
 29388  01417E  6EDA               	movwf	fsr2h,c
 29389  014180  50DF               	movf	indf2,w,c
 29390  014182  020C               	mulwf	(btemp+11)^0,c
 29391                           
 29392                           ;stkvar	_temp @ sp[(-13)+8]
 29393  014184  0EFB               	movlw	-5
 29394  014186  006F FFCF FFE3     	movff	prodl,plusw1
 29395  01418C  0EFC               	movlw	-4
 29396  01418E  006F FFD3 FFE3     	movff	prodh,plusw1
 29397                           
 29398                           ;stkvar	_temp @ sp[(-13)+8]
 29399  014194  0EFB               	movlw	-5
 29400  014196  006F FF8C  F00B    	movff	plusw1,btemp+10
 29401  01419C  0EFC               	movlw	-4
 29402  01419E  006F FF8C  F00C    	movff	plusw1,btemp+11
 29403                           
 29404                           ;stkvar	_grs @ sp[(-13)+4]
 29405  0141A4  50E1               	movf	fsr1l,w,c
 29406  0141A6  0FF7               	addlw	-9
 29407  0141A8  6ED9               	movwf	fsr2l,c
 29408  0141AA  50E2               	movf	fsr1h,w,c
 29409  0141AC  6EDA               	movwf	fsr2h,c
 29410  0141AE  0EFF               	movlw	255
 29411  0141B0  22DA               	addwfc	fsr2h,f,c
 29412  0141B2  500B               	movf	(btemp+10)^0,w,c
 29413  0141B4  26DE               	addwf	postinc2,f,c
 29414  0141B6  500C               	movf	(btemp+11)^0,w,c
 29415  0141B8  22DE               	addwfc	postinc2,f,c
 29416  0141BA  0E00               	movlw	0
 29417  0141BC  22DE               	addwfc	postinc2,f,c
 29418  0141BE  22DE               	addwfc	postinc2,f,c
 29419                           
 29420                           ;stkvar	_grs @ sp[(-13)+4]
 29421  0141C0  50E1               	movf	fsr1l,w,c
 29422  0141C2  0FF7               	addlw	-9
 29423  0141C4  6ED9               	movwf	fsr2l,c
 29424  0141C6  50E2               	movf	fsr1h,w,c
 29425  0141C8  6EDA               	movwf	fsr2h,c
 29426  0141CA  0EFF               	movlw	255
 29427  0141CC  22DA               	addwfc	fsr2h,f,c
 29428  0141CE  0E08               	movlw	8
 29429  0141D0                     u6955:
 29430  0141D0  90D8               	bcf	status,0,c
 29431  0141D2  36DE               	rlcf	postinc2,f,c
 29432  0141D4  36DE               	rlcf	postinc2,f,c
 29433  0141D6  36DE               	rlcf	postinc2,f,c
 29434  0141D8  36DD               	rlcf	postdec2,f,c
 29435  0141DA  52DD               	movf	postdec2,f,c
 29436  0141DC  52DD               	movf	postdec2,f,c
 29437  0141DE  2EE8               	decfsz	wreg,f,c
 29438  0141E0  D7F7               	goto	u6955
 29439                           
 29440                           ;stkvar	_b @ sp[(-13)+-4]
 29441  0141E2  0EEF               	movlw	-17
 29442  0141E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 29443                           
 29444                           ;stkvar	_a @ sp[(-13)+-8]
 29445  0141EA  0EEB               	movlw	-21
 29446  0141EC  50E3               	movf	plusw1,w,c
 29447  0141EE  020C               	mulwf	(btemp+11)^0,c
 29448                           
 29449                           ;stkvar	_temp @ sp[(-13)+8]
 29450  0141F0  0EFB               	movlw	-5
 29451  0141F2  006F FFCF FFE3     	movff	prodl,plusw1
 29452  0141F8  0EFC               	movlw	-4
 29453  0141FA  006F FFD3 FFE3     	movff	prodh,plusw1
 29454                           
 29455                           ;stkvar	_temp @ sp[(-13)+8]
 29456  014200  0EFB               	movlw	-5
 29457  014202  006F FF8C  F00B    	movff	plusw1,btemp+10
 29458  014208  0EFC               	movlw	-4
 29459  01420A  006F FF8C  F00C    	movff	plusw1,btemp+11
 29460                           
 29461                           ;stkvar	_grs @ sp[(-13)+4]
 29462  014210  50E1               	movf	fsr1l,w,c
 29463  014212  0FF7               	addlw	-9
 29464  014214  6ED9               	movwf	fsr2l,c
 29465  014216  50E2               	movf	fsr1h,w,c
 29466  014218  6EDA               	movwf	fsr2h,c
 29467  01421A  0EFF               	movlw	255
 29468  01421C  22DA               	addwfc	fsr2h,f,c
 29469  01421E  500B               	movf	(btemp+10)^0,w,c
 29470  014220  26DE               	addwf	postinc2,f,c
 29471  014222  500C               	movf	(btemp+11)^0,w,c
 29472  014224  22DE               	addwfc	postinc2,f,c
 29473  014226  0E00               	movlw	0
 29474  014228  22DE               	addwfc	postinc2,f,c
 29475  01422A  22DE               	addwfc	postinc2,f,c
 29476                           
 29477                           ;stkvar	_b @ sp[(-13)+-4]
 29478  01422C  0EF0               	movlw	240
 29479  01422E  24E1               	addwf	fsr1l,w,c
 29480  014230  6ED9               	movwf	fsr2l,c
 29481  014232  0EFF               	movlw	255
 29482  014234  20E2               	addwfc	fsr1h,w,c
 29483  014236  6EDA               	movwf	fsr2h,c
 29484  014238  50DF               	movf	indf2,w,c
 29485  01423A  6E0C               	movwf	(btemp+11)^0,c
 29486                           
 29487                           ;stkvar	_a @ sp[(-13)+-8]
 29488  01423C  0EED               	movlw	237
 29489  01423E  24E1               	addwf	fsr1l,w,c
 29490  014240  6ED9               	movwf	fsr2l,c
 29491  014242  0EFF               	movlw	255
 29492  014244  20E2               	addwfc	fsr1h,w,c
 29493  014246  6EDA               	movwf	fsr2h,c
 29494  014248  50DF               	movf	indf2,w,c
 29495  01424A  020C               	mulwf	(btemp+11)^0,c
 29496                           
 29497                           ;stkvar	_temp @ sp[(-13)+8]
 29498  01424C  0EFB               	movlw	-5
 29499  01424E  006F FFCF FFE3     	movff	prodl,plusw1
 29500  014254  0EFC               	movlw	-4
 29501  014256  006F FFD3 FFE3     	movff	prodh,plusw1
 29502                           
 29503                           ;stkvar	_temp @ sp[(-13)+8]
 29504  01425C  0EFB               	movlw	-5
 29505  01425E  006F FF8C  F00B    	movff	plusw1,btemp+10
 29506  014264  0EFC               	movlw	-4
 29507  014266  006F FF8C  F00C    	movff	plusw1,btemp+11
 29508                           
 29509                           ;stkvar	_prod @ sp[(-13)+0]
 29510  01426C  50E1               	movf	fsr1l,w,c
 29511  01426E  0FF3               	addlw	-13
 29512  014270  6ED9               	movwf	fsr2l,c
 29513  014272  50E2               	movf	fsr1h,w,c
 29514  014274  6EDA               	movwf	fsr2h,c
 29515  014276  0EFF               	movlw	255
 29516  014278  22DA               	addwfc	fsr2h,f,c
 29517  01427A  500B               	movf	(btemp+10)^0,w,c
 29518  01427C  26DE               	addwf	postinc2,f,c
 29519  01427E  500C               	movf	(btemp+11)^0,w,c
 29520  014280  22DE               	addwfc	postinc2,f,c
 29521  014282  0E00               	movlw	0
 29522  014284  22DE               	addwfc	postinc2,f,c
 29523  014286  22DE               	addwfc	postinc2,f,c
 29524                           
 29525                           ;stkvar	_b @ sp[(-13)+-4]
 29526  014288  0EF1               	movlw	241
 29527  01428A  24E1               	addwf	fsr1l,w,c
 29528  01428C  6ED9               	movwf	fsr2l,c
 29529  01428E  0EFF               	movlw	255
 29530  014290  20E2               	addwfc	fsr1h,w,c
 29531  014292  6EDA               	movwf	fsr2h,c
 29532  014294  50DF               	movf	indf2,w,c
 29533  014296  6E0C               	movwf	(btemp+11)^0,c
 29534                           
 29535                           ;stkvar	_a @ sp[(-13)+-8]
 29536  014298  0EEC               	movlw	236
 29537  01429A  24E1               	addwf	fsr1l,w,c
 29538  01429C  6ED9               	movwf	fsr2l,c
 29539  01429E  0EFF               	movlw	255
 29540  0142A0  20E2               	addwfc	fsr1h,w,c
 29541  0142A2  6EDA               	movwf	fsr2h,c
 29542  0142A4  50DF               	movf	indf2,w,c
 29543  0142A6  020C               	mulwf	(btemp+11)^0,c
 29544                           
 29545                           ;stkvar	_temp @ sp[(-13)+8]
 29546  0142A8  0EFB               	movlw	-5
 29547  0142AA  006F FFCF FFE3     	movff	prodl,plusw1
 29548  0142B0  0EFC               	movlw	-4
 29549  0142B2  006F FFD3 FFE3     	movff	prodh,plusw1
 29550                           
 29551                           ;stkvar	_temp @ sp[(-13)+8]
 29552  0142B8  0EFB               	movlw	-5
 29553  0142BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 29554  0142C0  0EFC               	movlw	-4
 29555  0142C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 29556                           
 29557                           ;stkvar	_prod @ sp[(-13)+0]
 29558  0142C8  50E1               	movf	fsr1l,w,c
 29559  0142CA  0FF3               	addlw	-13
 29560  0142CC  6ED9               	movwf	fsr2l,c
 29561  0142CE  50E2               	movf	fsr1h,w,c
 29562  0142D0  6EDA               	movwf	fsr2h,c
 29563  0142D2  0EFF               	movlw	255
 29564  0142D4  22DA               	addwfc	fsr2h,f,c
 29565  0142D6  500B               	movf	(btemp+10)^0,w,c
 29566  0142D8  26DE               	addwf	postinc2,f,c
 29567  0142DA  500C               	movf	(btemp+11)^0,w,c
 29568  0142DC  22DE               	addwfc	postinc2,f,c
 29569  0142DE  0E00               	movlw	0
 29570  0142E0  22DE               	addwfc	postinc2,f,c
 29571  0142E2  22DE               	addwfc	postinc2,f,c
 29572                           
 29573                           ;stkvar	_b @ sp[(-13)+-4]
 29574  0142E4  0EF1               	movlw	241
 29575  0142E6  24E1               	addwf	fsr1l,w,c
 29576  0142E8  6ED9               	movwf	fsr2l,c
 29577  0142EA  0EFF               	movlw	255
 29578  0142EC  20E2               	addwfc	fsr1h,w,c
 29579  0142EE  6EDA               	movwf	fsr2h,c
 29580  0142F0  50DF               	movf	indf2,w,c
 29581  0142F2  6E0C               	movwf	(btemp+11)^0,c
 29582                           
 29583                           ;stkvar	_a @ sp[(-13)+-8]
 29584  0142F4  0EED               	movlw	237
 29585  0142F6  24E1               	addwf	fsr1l,w,c
 29586  0142F8  6ED9               	movwf	fsr2l,c
 29587  0142FA  0EFF               	movlw	255
 29588  0142FC  20E2               	addwfc	fsr1h,w,c
 29589  0142FE  6EDA               	movwf	fsr2h,c
 29590  014300  50DF               	movf	indf2,w,c
 29591  014302  020C               	mulwf	(btemp+11)^0,c
 29592                           
 29593                           ;stkvar	_temp @ sp[(-13)+8]
 29594  014304  0EFB               	movlw	-5
 29595  014306  006F FFCF FFE3     	movff	prodl,plusw1
 29596  01430C  0EFC               	movlw	-4
 29597  01430E  006F FFD3 FFE3     	movff	prodh,plusw1
 29598                           
 29599                           ;stkvar	_temp @ sp[(-13)+8]
 29600  014314  0EFB               	movlw	-5
 29601  014316  006F FF8C  F00B    	movff	plusw1,btemp+10
 29602  01431C  0EFC               	movlw	-4
 29603  01431E  006F FF8C  F00C    	movff	plusw1,btemp+11
 29604  014324  500B               	movf	(btemp+10)^0,w,c
 29605  014326  6E05               	movwf	(btemp+4)^0,c
 29606  014328  500C               	movf	(btemp+11)^0,w,c
 29607  01432A  6E06               	movwf	(btemp+5)^0,c
 29608  01432C  6A07               	clrf	(btemp+6)^0,c
 29609  01432E  6A08               	clrf	(btemp+7)^0,c
 29610  014330  0060  F01C  F008   	movff	btemp+6,btemp+7
 29611  014336  0060  F018  F007   	movff	btemp+5,btemp+6
 29612  01433C  0060  F014  F006   	movff	btemp+4,btemp+5
 29613  014342  6A05               	clrf	(btemp+4)^0,c
 29614                           
 29615                           ;stkvar	_prod @ sp[(-13)+0]
 29616  014344  50E1               	movf	fsr1l,w,c
 29617  014346  0FF3               	addlw	-13
 29618  014348  6ED9               	movwf	fsr2l,c
 29619  01434A  50E2               	movf	fsr1h,w,c
 29620  01434C  6EDA               	movwf	fsr2h,c
 29621  01434E  0EFF               	movlw	255
 29622  014350  22DA               	addwfc	fsr2h,f,c
 29623  014352  5005               	movf	(btemp+4)^0,w,c
 29624  014354  26DE               	addwf	postinc2,f,c
 29625  014356  5006               	movf	(btemp+5)^0,w,c
 29626  014358  22DE               	addwfc	postinc2,f,c
 29627  01435A  5007               	movf	(btemp+6)^0,w,c
 29628  01435C  22DE               	addwfc	postinc2,f,c
 29629  01435E  5008               	movf	(btemp+7)^0,w,c
 29630  014360  22DE               	addwfc	postinc2,f,c
 29631                           
 29632                           ;stkvar	_prod @ sp[(-13)+0]
 29633  014362  50E1               	movf	fsr1l,w,c
 29634  014364  0FF3               	addlw	-13
 29635  014366  6ED9               	movwf	fsr2l,c
 29636  014368  50E2               	movf	fsr1h,w,c
 29637  01436A  6EDA               	movwf	fsr2h,c
 29638  01436C  0EFF               	movlw	255
 29639  01436E  22DA               	addwfc	fsr2h,f,c
 29640                           
 29641                           ;stkvar	_grs @ sp[(-13)+4]
 29642  014370  0EFA               	movlw	250
 29643  014372  24E1               	addwf	fsr1l,w,c
 29644  014374  6EE9               	movwf	fsr0l,c
 29645  014376  0EFF               	movlw	255
 29646  014378  20E2               	addwfc	fsr1h,w,c
 29647  01437A  6EEA               	movwf	fsr0h,c
 29648  01437C  50EF               	movf	indf0,w,c
 29649  01437E  26DE               	addwf	postinc2,f,c
 29650  014380  0E00               	movlw	0
 29651  014382  22DE               	addwfc	postinc2,f,c
 29652  014384  22DE               	addwfc	postinc2,f,c
 29653  014386  22DE               	addwfc	postinc2,f,c
 29654                           
 29655                           ;stkvar	_grs @ sp[(-13)+4]
 29656  014388  50E1               	movf	fsr1l,w,c
 29657  01438A  0FF7               	addlw	-9
 29658  01438C  6ED9               	movwf	fsr2l,c
 29659  01438E  50E2               	movf	fsr1h,w,c
 29660  014390  6EDA               	movwf	fsr2h,c
 29661  014392  0EFF               	movlw	255
 29662  014394  22DA               	addwfc	fsr2h,f,c
 29663  014396  0E08               	movlw	8
 29664  014398                     u6965:
 29665  014398  90D8               	bcf	status,0,c
 29666  01439A  36DE               	rlcf	postinc2,f,c
 29667  01439C  36DE               	rlcf	postinc2,f,c
 29668  01439E  36DE               	rlcf	postinc2,f,c
 29669  0143A0  36DD               	rlcf	postdec2,f,c
 29670  0143A2  52DD               	movf	postdec2,f,c
 29671  0143A4  52DD               	movf	postdec2,f,c
 29672  0143A6  2EE8               	decfsz	wreg,f,c
 29673  0143A8  D7F7               	goto	u6965
 29674  0143AA  0E82               	movlw	130
 29675  0143AC  6E0B               	movwf	(btemp+10)^0,c
 29676  0143AE  0EFF               	movlw	255
 29677  0143B0  6E0C               	movwf	(btemp+11)^0,c
 29678                           
 29679                           ;stkvar	_bexp @ sp[(-13)+10]
 29680  0143B2  0EFD               	movlw	-3
 29681  0143B4  50E3               	movf	plusw1,w,c
 29682  0143B6  6E09               	movwf	(btemp+8)^0,c
 29683  0143B8  6A0A               	clrf	(btemp+9)^0,c
 29684                           
 29685                           ;stkvar	_aexp @ sp[(-13)+11]
 29686  0143BA  0EFE               	movlw	-2
 29687  0143BC  50E3               	movf	plusw1,w,c
 29688  0143BE  2609               	addwf	(btemp+8)^0,f,c
 29689  0143C0  0E00               	movlw	0
 29690  0143C2  220A               	addwfc	(btemp+9)^0,f,c
 29691  0143C4  500B               	movf	(btemp+10)^0,w,c
 29692  0143C6  2609               	addwf	(btemp+8)^0,f,c
 29693  0143C8  500C               	movf	(btemp+11)^0,w,c
 29694  0143CA  220A               	addwfc	(btemp+9)^0,f,c
 29695                           
 29696                           ;stkvar	_temp @ sp[(-13)+8]
 29697  0143CC  0EFB               	movlw	-5
 29698  0143CE  0060  F027  FFE3   	movff	btemp+8,plusw1
 29699  0143D4  0EFC               	movlw	-4
 29700  0143D6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29701  0143DC  D021               	goto	l8623
 29702  0143DE                     l8613:
 29703                           
 29704                           ;stkvar	_prod @ sp[(-13)+0]
 29705  0143DE  90D8               	bcf	status,0,c
 29706  0143E0  0EF3               	movlw	-13
 29707  0143E2  36E3               	rlcf	plusw1,f,c
 29708  0143E4  0EF4               	movlw	-12
 29709  0143E6  36E3               	rlcf	plusw1,f,c
 29710  0143E8  0EF5               	movlw	-11
 29711  0143EA  36E3               	rlcf	plusw1,f,c
 29712  0143EC  0EF6               	movlw	-10
 29713  0143EE  36E3               	rlcf	plusw1,f,c
 29714                           
 29715                           ;stkvar	_grs @ sp[(-13)+4]
 29716  0143F0  0EFA               	movlw	-6
 29717  0143F2  AEE3               	btfss	plusw1,7,c
 29718  0143F4  D002               	goto	l8619
 29719                           
 29720                           ;stkvar	_prod @ sp[(-13)+0]
 29721  0143F6  0EF3               	movlw	-13
 29722  0143F8  80E3               	bsf	plusw1,0,c
 29723  0143FA                     l8619:
 29724                           
 29725                           ;stkvar	_grs @ sp[(-13)+4]
 29726  0143FA  90D8               	bcf	status,0,c
 29727  0143FC  0EF7               	movlw	-9
 29728  0143FE  36E3               	rlcf	plusw1,f,c
 29729  014400  0EF8               	movlw	-8
 29730  014402  36E3               	rlcf	plusw1,f,c
 29731  014404  0EF9               	movlw	-7
 29732  014406  36E3               	rlcf	plusw1,f,c
 29733  014408  0EFA               	movlw	-6
 29734  01440A  36E3               	rlcf	plusw1,f,c
 29735                           
 29736                           ;stkvar	_temp @ sp[(-13)+8]
 29737  01440C  50E1               	movf	fsr1l,w,c
 29738  01440E  0FFB               	addlw	-5
 29739  014410  6ED9               	movwf	fsr2l,c
 29740  014412  50E2               	movf	fsr1h,w,c
 29741  014414  6EDA               	movwf	fsr2h,c
 29742  014416  0EFF               	movlw	255
 29743  014418  22DA               	addwfc	fsr2h,f,c
 29744  01441A  06DE               	decf	postinc2,f,c
 29745  01441C  0E00               	movlw	0
 29746  01441E  5ADD               	subwfb	postdec2,f,c
 29747  014420                     l8623:
 29748                           
 29749                           ;stkvar	_prod @ sp[(-13)+0]
 29750  014420  0EF5               	movlw	-11
 29751  014422  AEE3               	btfss	plusw1,7,c
 29752  014424  D7DC               	goto	l8613
 29753                           
 29754                           ;stkvar	_aexp @ sp[(-13)+11]
 29755  014426  0EFE               	movlw	-2
 29756  014428  6AE3               	clrf	plusw1,c
 29757                           
 29758                           ;stkvar	_grs @ sp[(-13)+4]
 29759  01442A  0EFA               	movlw	-6
 29760  01442C  AEE3               	btfss	plusw1,7,c
 29761  01442E  D020               	goto	l8637
 29762                           
 29763                           ;stkvar	_grs @ sp[(-13)+4]
 29764  014430  50E1               	movf	fsr1l,w,c
 29765  014432  0FF7               	addlw	-9
 29766  014434  6ED9               	movwf	fsr2l,c
 29767  014436  50E2               	movf	fsr1h,w,c
 29768  014438  6EDA               	movwf	fsr2h,c
 29769  01443A  0EFF               	movlw	255
 29770  01443C  22DA               	addwfc	fsr2h,f,c
 29771  01443E  0EFF               	movlw	255
 29772  014440  14DE               	andwf	postinc2,w,c
 29773  014442  6E09               	movwf	(btemp+8)^0,c
 29774  014444  0EFF               	movlw	255
 29775  014446  14DE               	andwf	postinc2,w,c
 29776  014448  6E0A               	movwf	(btemp+9)^0,c
 29777  01444A  0EFF               	movlw	255
 29778  01444C  14DE               	andwf	postinc2,w,c
 29779  01444E  6E0B               	movwf	(btemp+10)^0,c
 29780  014450  0E7F               	movlw	127
 29781  014452  14DE               	andwf	postinc2,w,c
 29782  014454  6E0C               	movwf	(btemp+11)^0,c
 29783  014456  5009               	movf	(btemp+8)^0,w,c
 29784  014458  100A               	iorwf	(btemp+9)^0,w,c
 29785  01445A  100B               	iorwf	(btemp+10)^0,w,c
 29786  01445C  100C               	iorwf	(btemp+11)^0,w,c
 29787  01445E  B4D8               	btfsc	status,2,c
 29788  014460  D004               	goto	l8633
 29789  014462                     u7000:
 29790                           
 29791                           ;stkvar	_aexp @ sp[(-13)+11]
 29792  014462  0EFE               	movlw	-2
 29793  014464  6AE3               	clrf	plusw1,c
 29794  014466  2AE3               	incf	plusw1,f,c
 29795  014468  D003               	goto	l8637
 29796  01446A                     l8633:
 29797                           
 29798                           ;stkvar	_prod @ sp[(-13)+0]
 29799  01446A  0EF3               	movlw	-13
 29800  01446C  B0E3               	btfsc	plusw1,0,c
 29801  01446E  D7F9               	goto	u7000
 29802  014470                     l8637:
 29803                           
 29804                           ;stkvar	_aexp @ sp[(-13)+11]
 29805  014470  0EFE               	movlw	-2
 29806  014472  50E3               	movf	plusw1,w,c
 29807  014474  B4D8               	btfsc	status,2,c
 29808  014476  D036               	goto	l8647
 29809                           
 29810                           ;stkvar	_prod @ sp[(-13)+0]
 29811  014478  50E1               	movf	fsr1l,w,c
 29812  01447A  0FF3               	addlw	-13
 29813  01447C  6ED9               	movwf	fsr2l,c
 29814  01447E  50E2               	movf	fsr1h,w,c
 29815  014480  6EDA               	movwf	fsr2h,c
 29816  014482  0EFF               	movlw	255
 29817  014484  22DA               	addwfc	fsr2h,f,c
 29818  014486  2ADE               	incf	postinc2,f,c
 29819  014488  0E00               	movlw	0
 29820  01448A  22DE               	addwfc	postinc2,f,c
 29821  01448C  22DE               	addwfc	postinc2,f,c
 29822  01448E  22DE               	addwfc	postinc2,f,c
 29823                           
 29824                           ;stkvar	_prod @ sp[(-13)+0]
 29825  014490  0EF6               	movlw	-10
 29826  014492  A0E3               	btfss	plusw1,0,c
 29827  014494  D027               	goto	l8647
 29828  014496  0E01               	movlw	1
 29829  014498  6E0C               	movwf	(btemp+11)^0,c
 29830                           
 29831                           ;stkvar	_prod @ sp[(-13)+0]
 29832  01449A  50E1               	movf	fsr1l,w,c
 29833  01449C  0FF3               	addlw	-13
 29834  01449E  6ED9               	movwf	fsr2l,c
 29835  0144A0  50E2               	movf	fsr1h,w,c
 29836  0144A2  6EDA               	movwf	fsr2h,c
 29837  0144A4  0EFF               	movlw	255
 29838  0144A6  22DA               	addwfc	fsr2h,f,c
 29839  0144A8  280C               	incf	(btemp+11)^0,w,c
 29840  0144AA  52DE               	movf	postinc2,f,c
 29841  0144AC  D008               	goto	u7040
 29842  0144AE                     u7045:
 29843  0144AE  52DE               	movf	postinc2,f,c
 29844  0144B0  90D8               	bcf	status,0,c
 29845  0144B2  BEDC               	btfsc	preinc2,7,c
 29846  0144B4  80D8               	bsf	status,0,c
 29847  0144B6  32DD               	rrcf	postdec2,f,c
 29848  0144B8  32DD               	rrcf	postdec2,f,c
 29849  0144BA  32DD               	rrcf	postdec2,f,c
 29850  0144BC  32DE               	rrcf	postinc2,f,c
 29851  0144BE                     u7040:
 29852  0144BE  2EE8               	decfsz	wreg,f,c
 29853  0144C0  D7F6               	goto	u7045
 29854                           
 29855                           ;stkvar	_temp @ sp[(-13)+8]
 29856  0144C2  0EFB               	movlw	-5
 29857  0144C4  50E3               	movf	plusw1,w,c
 29858  0144C6  0F01               	addlw	1
 29859  0144C8  6E01               	movwf	btemp^0,c
 29860  0144CA  0EFB               	movlw	-5
 29861  0144CC  0060  F007  FFE3   	movff	btemp,plusw1
 29862  0144D2  6A01               	clrf	btemp^0,c
 29863  0144D4  0EFC               	movlw	-4
 29864  0144D6  50E3               	movf	plusw1,w,c
 29865  0144D8  2001               	addwfc	btemp^0,w,c
 29866  0144DA  6E01               	movwf	btemp^0,c
 29867  0144DC  0EFC               	movlw	-4
 29868  0144DE  0060  F007  FFE3   	movff	btemp,plusw1
 29869  0144E4                     l8647:
 29870                           
 29871                           ;stkvar	_temp @ sp[(-13)+8]
 29872  0144E4  0EFC               	movlw	-4
 29873  0144E6  BEE3               	btfsc	plusw1,7,c
 29874  0144E8  D020               	goto	l8651
 29875  0144EA  0EFC               	movlw	-4
 29876  0144EC  50E3               	movf	plusw1,w,c
 29877  0144EE  E104               	bnz	u7050
 29878  0144F0  0EFB               	movlw	-5
 29879  0144F2  28E3               	incf	plusw1,w,c
 29880  0144F4  A0D8               	btfss	status,0,c
 29881  0144F6  D019               	goto	l8651
 29882  0144F8                     u7050:
 29883  0144F8  0E00               	movlw	0
 29884  0144FA  6E09               	movwf	(btemp+8)^0,c
 29885  0144FC  0E00               	movlw	0
 29886  0144FE  6E0A               	movwf	(btemp+9)^0,c
 29887  014500  0E80               	movlw	128
 29888  014502  6E0B               	movwf	(btemp+10)^0,c
 29889  014504  0E7F               	movlw	127
 29890  014506  6E0C               	movwf	(btemp+11)^0,c
 29891                           
 29892                           ;stkvar	_prod @ sp[(-13)+0]
 29893  014508  0EF3               	movlw	-13
 29894  01450A  0060  F027  FFE3   	movff	btemp+8,plusw1
 29895  014510  0EF4               	movlw	-12
 29896  014512  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29897  014518  0EF5               	movlw	-11
 29898  01451A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29899  014520  0EF6               	movlw	-10
 29900  014522  0060  F033  FFE3   	movff	btemp+11,plusw1
 29901  014528  D044               	goto	l8667
 29902  01452A                     l8651:
 29903                           
 29904                           ;stkvar	_temp @ sp[(-13)+8]
 29905  01452A  0EFC               	movlw	-4
 29906  01452C  BEE3               	btfsc	plusw1,7,c
 29907  01452E  D007               	goto	u7060
 29908  014530  0EFC               	movlw	-4
 29909  014532  50E3               	movf	plusw1,w,c
 29910  014534  E10F               	bnz	l8657
 29911  014536  0EFB               	movlw	-5
 29912  014538  04E3               	decf	plusw1,w,c
 29913  01453A  B0D8               	btfsc	status,0,c
 29914  01453C  D00B               	goto	l8657
 29915  01453E                     u7060:
 29916                           
 29917                           ;stkvar	_prod @ sp[(-13)+0]
 29918  01453E  0EF3               	movlw	-13
 29919  014540  6AE3               	clrf	plusw1,c
 29920  014542  0EF4               	movlw	-12
 29921  014544  6AE3               	clrf	plusw1,c
 29922  014546  0EF5               	movlw	-11
 29923  014548  6AE3               	clrf	plusw1,c
 29924  01454A  0EF6               	movlw	-10
 29925  01454C  6AE3               	clrf	plusw1,c
 29926                           
 29927                           ;stkvar	_sign @ sp[(-13)+12]
 29928  01454E  0EFF               	movlw	-1
 29929  014550  6AE3               	clrf	plusw1,c
 29930  014552  D02F               	goto	l8667
 29931  014554                     l8657:
 29932                           
 29933                           ;stkvar	_temp @ sp[(-13)+8]
 29934                           ;stkvar	_bexp @ sp[(-13)+10]
 29935  014554  0EFB               	movlw	-5
 29936  014556  006F FF8C  F001    	movff	plusw1,btemp
 29937  01455C  0EFD               	movlw	-3
 29938  01455E  0060  F007  FFE3   	movff	btemp,plusw1
 29939                           
 29940                           ;stkvar	_prod @ sp[(-13)+0]
 29941  014564  50E1               	movf	fsr1l,w,c
 29942  014566  0FF3               	addlw	-13
 29943  014568  6ED9               	movwf	fsr2l,c
 29944  01456A  50E2               	movf	fsr1h,w,c
 29945  01456C  6EDA               	movwf	fsr2h,c
 29946  01456E  0EFF               	movlw	255
 29947  014570  22DA               	addwfc	fsr2h,f,c
 29948  014572  0EFF               	movlw	255
 29949  014574  16DE               	andwf	postinc2,f,c
 29950  014576  0EFF               	movlw	255
 29951  014578  16DE               	andwf	postinc2,f,c
 29952  01457A  0E7F               	movlw	127
 29953  01457C  16DE               	andwf	postinc2,f,c
 29954  01457E  0E00               	movlw	0
 29955  014580  16DE               	andwf	postinc2,f,c
 29956                           
 29957                           ;stkvar	_bexp @ sp[(-13)+10]
 29958  014582  0EFD               	movlw	-3
 29959  014584  A0E3               	btfss	plusw1,0,c
 29960  014586  D008               	goto	l8665
 29961                           
 29962                           ;stkvar	_prod @ sp[(-13)+0]
 29963  014588  0EF5               	movlw	245
 29964  01458A  24E1               	addwf	fsr1l,w,c
 29965  01458C  6ED9               	movwf	fsr2l,c
 29966  01458E  0EFF               	movlw	255
 29967  014590  20E2               	addwfc	fsr1h,w,c
 29968  014592  6EDA               	movwf	fsr2h,c
 29969  014594  0E00               	movlw	0
 29970  014596  8EDB               	bsf	plusw2,7,c
 29971  014598                     l8665:
 29972                           
 29973                           ;stkvar	_prod @ sp[(-13)+0]
 29974  014598  0EF6               	movlw	246
 29975  01459A  24E1               	addwf	fsr1l,w,c
 29976  01459C  6ED9               	movwf	fsr2l,c
 29977  01459E  0EFF               	movlw	255
 29978  0145A0  20E2               	addwfc	fsr1h,w,c
 29979  0145A2  6EDA               	movwf	fsr2h,c
 29980                           
 29981                           ;stkvar	_bexp @ sp[(-13)+10]
 29982  0145A4  0EFD               	movlw	-3
 29983  0145A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 29984  0145AC  90D8               	bcf	status,0,c
 29985  0145AE  300C               	rrcf	(btemp+11)^0,w,c
 29986  0145B0  6EDF               	movwf	indf2,c
 29987  0145B2                     l8667:
 29988                           
 29989                           ;stkvar	_sign @ sp[(-13)+12]
 29990  0145B2  0EFF               	movlw	-1
 29991  0145B4  006F FF8C  F00C    	movff	plusw1,btemp+11
 29992                           
 29993                           ;stkvar	_prod @ sp[(-13)+0]
 29994  0145BA  0EF6               	movlw	246
 29995  0145BC  24E1               	addwf	fsr1l,w,c
 29996  0145BE  6ED9               	movwf	fsr2l,c
 29997  0145C0  0EFF               	movlw	255
 29998  0145C2  20E2               	addwfc	fsr1h,w,c
 29999  0145C4  6EDA               	movwf	fsr2h,c
 30000  0145C6  500C               	movf	(btemp+11)^0,w,c
 30001  0145C8  12DF               	iorwf	indf2,f,c
 30002                           
 30003                           ;stkvar	_prod @ sp[(-13)+0]
 30004  0145CA  0EF3               	movlw	-13
 30005  0145CC  006F FF8C  F001    	movff	plusw1,btemp
 30006  0145D2  0EF4               	movlw	-12
 30007  0145D4  006F FF8C  F002    	movff	plusw1,btemp+1
 30008  0145DA  0EF5               	movlw	-11
 30009  0145DC  006F FF8C  F003    	movff	plusw1,btemp+2
 30010  0145E2  0EF6               	movlw	-10
 30011  0145E4  006F FF8C  F004    	movff	plusw1,btemp+3
 30012  0145EA                     l3094:
 30013                           
 30014                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 30015  0145EA  0EEB               	movlw	235
 30016  0145EC  26E1               	addwf	fsr1l,f,c
 30017  0145EE  0EFF               	movlw	255
 30018  0145F0  22E2               	addwfc	fsr1h,f,c
 30019  0145F2  0012               	return		;funcret
 30020  0145F4                     __end_of___flmul:
 30021                           	opt callstack 0
 30022                           
 30023 ;; *************** function _SYSTEM_Initialize *****************
 30024 ;; Defined at:
 30025 ;;		line 50 in file "mcc_generated_files/mcc.c"
 30026 ;; Parameters:    Size  Location     Type
 30027 ;;		None
 30028 ;; Auto vars:     Size  Location     Type
 30029 ;;		None
 30030 ;; Return value:  Size  Location     Type
 30031 ;;                  1  [STACK] void 
 30032 ;; Registers used:
 30033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 30034 ;; Tracked objects:
 30035 ;;		On entry : 0/0
 30036 ;;		On exit  : 3F/3C
 30037 ;;		Unchanged: 0/0
 30038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30043 ;;Total ram usage:        0 bytes
 30044 ;; Hardware stack levels used:    1
 30045 ;; Hardware stack levels required when called:   17
 30046 ;; This function calls:
 30047 ;;		_ADCC_Initialize
 30048 ;;		_CLKREF_Initialize
 30049 ;;		_DMA1_Initialize
 30050 ;;		_DMA2_Initialize
 30051 ;;		_EXT_INT_Initialize
 30052 ;;		_FVR_Initialize
 30053 ;;		_INTERRUPT_Initialize
 30054 ;;		_OSCILLATOR_Initialize
 30055 ;;		_PIN_MANAGER_Initialize
 30056 ;;		_PMD_Initialize
 30057 ;;		_PWM8_Initialize
 30058 ;;		_SPI1_Initialize
 30059 ;;		_TMR2_Initialize
 30060 ;;		_TMR3_Initialize
 30061 ;;		_TMR5_Initialize
 30062 ;;		_TMR6_Initialize
 30063 ;;		_UART1_Initialize
 30064 ;;		_UART2_Initialize
 30065 ;; This function is called by:
 30066 ;;		_main
 30067 ;; This function uses a reentrant model
 30068 ;;
 30069                           
 30070                           	psect	text114
 30071  01B7DA                     __ptext114:
 30072                           	opt callstack 0
 30073  01B7DA                     _SYSTEM_Initialize:
 30074                           	opt callstack 13
 30075                           
 30076                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 30077                           
 30078                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30079                           ;incstack = 0
 30080  01B7DA  ECD1  F0D9         	call	_INTERRUPT_Initialize	;wreg free
 30081                           
 30082                           ; BSR set to: 57
 30083                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 30084  01B7DE  EC5A  F0E2         	call	_PMD_Initialize	;wreg free
 30085                           
 30086                           ; BSR set to: 57
 30087                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 30088  01B7E2  EC33  F0D7         	call	_PIN_MANAGER_Initialize	;wreg free
 30089                           
 30090                           ; BSR set to: 58
 30091                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 30092  01B7E6  EC4F  F0E2         	call	_OSCILLATOR_Initialize	;wreg free
 30093                           
 30094                           ; BSR set to: 57
 30095                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 30096  01B7EA  ECDD  F0E2         	call	_FVR_Initialize	;wreg free
 30097                           
 30098                           ; BSR set to: 62
 30099                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 30100  01B7EE  EC67  F0D9         	call	_ADCC_Initialize	;wreg free
 30101                           
 30102                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 30103  01B7F2  EC2D  F0E2         	call	_TMR2_Initialize	;wreg free
 30104                           
 30105                           ; BSR set to: 57
 30106                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 30107  01B7F6  EC44  F0E2         	call	_PWM8_Initialize	;wreg free
 30108                           
 30109                           ; BSR set to: 63
 30110                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 30111  01B7FA  ECE6  F0DE         	call	_EXT_INT_Initialize	;wreg free
 30112                           
 30113                           ; BSR set to: 57
 30114                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 30115  01B7FE  ECBA  F0DF         	call	_TMR6_Initialize	;wreg free
 30116                           
 30117                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 30118  01B802  EC7E  F0DC         	call	_TMR3_Initialize	;wreg free
 30119                           
 30120                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 30121  01B806  EC5A  F0DC         	call	_TMR5_Initialize	;wreg free
 30122                           
 30123                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 30124  01B80A  EC36  F0DC         	call	_UART1_Initialize	;wreg free
 30125                           
 30126                           ; BSR set to: 57
 30127                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 30128  01B80E  EC98  F0DA         	call	_UART2_Initialize	;wreg free
 30129                           
 30130                           ; BSR set to: 57
 30131                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 30132  01B812  EC39  F0E2         	call	_SPI1_Initialize	;wreg free
 30133                           
 30134                           ; BSR set to: 61
 30135                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 30136  01B816  EC22  F0DB         	call	_DMA2_Initialize	;wreg free
 30137                           
 30138                           ; BSR set to: 59
 30139                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 30140  01B81A  EC32  F0D9         	call	_DMA1_Initialize	;wreg free
 30141                           
 30142                           ; BSR set to: 59
 30143                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 30144  01B81E  ECB1  F0E2         	call	_CLKREF_Initialize	;wreg free
 30145                           
 30146                           ; BSR set to: 60
 30147                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30148  01B822  0012               	return		;funcret
 30149  01B824                     __end_of_SYSTEM_Initialize:
 30150                           	opt callstack 0
 30151                           
 30152 ;; *************** function _UART2_Initialize *****************
 30153 ;; Defined at:
 30154 ;;		line 78 in file "mcc_generated_files/uart2.c"
 30155 ;; Parameters:    Size  Location     Type
 30156 ;;		None
 30157 ;; Auto vars:     Size  Location     Type
 30158 ;;		None
 30159 ;; Return value:  Size  Location     Type
 30160 ;;                  1  [STACK] void 
 30161 ;; Registers used:
 30162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30163 ;; Tracked objects:
 30164 ;;		On entry : 3F/39
 30165 ;;		On exit  : 3F/39
 30166 ;;		Unchanged: 0/0
 30167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30172 ;;Total ram usage:        0 bytes
 30173 ;; Hardware stack levels used:    1
 30174 ;; Hardware stack levels required when called:   16
 30175 ;; This function calls:
 30176 ;;		_UART2_SetRxInterruptHandler
 30177 ;;		_UART2_SetTxInterruptHandler
 30178 ;; This function is called by:
 30179 ;;		_SYSTEM_Initialize
 30180 ;; This function uses a reentrant model
 30181 ;;
 30182                           
 30183                           	psect	text115
 30184  01B530                     __ptext115:
 30185                           	opt callstack 0
 30186  01B530                     _UART2_Initialize:
 30187                           	opt callstack 13
 30188                           
 30189                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 30190                           
 30191                           ; BSR set to: 60
 30192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30193                           ;incstack = 0
 30194  01B530  0139               	movlb	57	; () banked
 30195  01B532  9596               	bcf	150,2,b	;volatile
 30196                           
 30197                           ; BSR set to: 57
 30198                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 30199  01B534  0E56               	movlw	low _UART2_Receive_ISR
 30200  01B536  6EE6               	movwf	postinc1,c
 30201  01B538  0EC3               	movlw	high _UART2_Receive_ISR
 30202  01B53A  6EE6               	movwf	postinc1,c
 30203  01B53C  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 30204  01B53E  6EE6               	movwf	postinc1,c
 30205  01B540  EC0B  F0E0         	call	_UART2_SetRxInterruptHandler	;wreg free
 30206                           
 30207                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 30208  01B544  0139               	movlb	57	; () banked
 30209  01B546  9796               	bcf	150,3,b	;volatile
 30210                           
 30211                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 30212  01B548  0E48               	movlw	low _UART2_Transmit_ISR
 30213  01B54A  6EE6               	movwf	postinc1,c
 30214  01B54C  0EBF               	movlw	high _UART2_Transmit_ISR
 30215  01B54E  6EE6               	movwf	postinc1,c
 30216  01B550  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 30217  01B552  6EE6               	movwf	postinc1,c
 30218  01B554  ECF7  F0DF         	call	_UART2_SetTxInterruptHandler	;wreg free
 30219                           
 30220                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 30221  01B558  013D               	movlb	61	; () banked
 30222  01B55A  6BD4               	clrf	212,b	;volatile
 30223                           
 30224                           ; BSR set to: 61
 30225                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 30226  01B55C  6BD6               	clrf	214,b	;volatile
 30227                           
 30228                           ; BSR set to: 61
 30229                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 30230  01B55E  6BD8               	clrf	216,b	;volatile
 30231                           
 30232                           ; BSR set to: 61
 30233                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 30234  01B560  0EB0               	movlw	176
 30235  01B562  6FDA               	movwf	218,b	;volatile
 30236                           
 30237                           ; BSR set to: 61
 30238                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 30239  01B564  0E80               	movlw	128
 30240  01B566  6FDB               	movwf	219,b	;volatile
 30241                           
 30242                           ; BSR set to: 61
 30243                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 30244  01B568  6BDC               	clrf	220,b	;volatile
 30245                           
 30246                           ; BSR set to: 61
 30247                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 30248  01B56A  0E82               	movlw	130
 30249  01B56C  6FDD               	movwf	221,b	;volatile
 30250                           
 30251                           ; BSR set to: 61
 30252                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 30253  01B56E  0E06               	movlw	6
 30254  01B570  6FDE               	movwf	222,b	;volatile
 30255                           
 30256                           ; BSR set to: 61
 30257                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 30258  01B572  6BDF               	clrf	223,b	;volatile
 30259                           
 30260                           ; BSR set to: 61
 30261                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 30262  01B574  6BE0               	clrf	224,b	;volatile
 30263                           
 30264                           ; BSR set to: 61
 30265                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 30266  01B576  6BE1               	clrf	225,b	;volatile
 30267                           
 30268                           ; BSR set to: 61
 30269                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 30270  01B578  6BE2               	clrf	226,b	;volatile
 30271                           
 30272                           ; BSR set to: 61
 30273                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 30274  01B57A  0100               	movlb	0	; () banked
 30275  01B57C  6BAC               	clrf	_uart2TxHead& (0+255),b	;volatile
 30276                           
 30277                           ; BSR set to: 0
 30278                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 30279  01B57E  6A46               	clrf	_uart2TxTail^0,c	;volatile
 30280                           
 30281                           ; BSR set to: 0
 30282                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 30283  01B580  0E40               	movlw	64
 30284  01B582  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 30285                           
 30286                           ; BSR set to: 0
 30287                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 30288  01B584  6A44               	clrf	_uart2RxHead^0,c	;volatile
 30289                           
 30290                           ; BSR set to: 0
 30291                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 30292  01B586  6BAB               	clrf	_uart2RxTail& (0+255),b	;volatile
 30293                           
 30294                           ; BSR set to: 0
 30295                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 30296  01B588  6BAA               	clrf	_uart2RxCount& (0+255),b	;volatile
 30297                           
 30298                           ; BSR set to: 0
 30299                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 30300  01B58A  0139               	movlb	57	; () banked
 30301  01B58C  8596               	bsf	150,2,b	;volatile
 30302                           
 30303                           ; BSR set to: 57
 30304                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 30305  01B58E  0012               	return		;funcret
 30306  01B590                     __end_of_UART2_Initialize:
 30307                           	opt callstack 0
 30308                           
 30309 ;; *************** function _UART2_SetTxInterruptHandler *****************
 30310 ;; Defined at:
 30311 ;;		line 252 in file "mcc_generated_files/uart2.c"
 30312 ;; Parameters:    Size  Location     Type
 30313 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30314 ;;		 -> UART2_Transmit_ISR(1), 
 30315 ;; Auto vars:     Size  Location     Type
 30316 ;;		None
 30317 ;; Return value:  Size  Location     Type
 30318 ;;                  1  [STACK] void 
 30319 ;; Registers used:
 30320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30321 ;; Tracked objects:
 30322 ;;		On entry : 3F/39
 30323 ;;		On exit  : 0/0
 30324 ;;		Unchanged: 0/0
 30325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30330 ;;Total ram usage:        0 bytes
 30331 ;; Hardware stack levels used:    1
 30332 ;; Hardware stack levels required when called:   15
 30333 ;; This function calls:
 30334 ;;		Nothing
 30335 ;; This function is called by:
 30336 ;;		_UART2_Initialize
 30337 ;; This function uses a reentrant model
 30338 ;;
 30339                           
 30340                           	psect	text116
 30341  01BFEE                     __ptext116:
 30342                           	opt callstack 0
 30343  01BFEE                     _UART2_SetTxInterruptHandler:
 30344                           	opt callstack 13
 30345                           
 30346                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 30347                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30348                           
 30349                           ; BSR set to: 57
 30350                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30351                           ;incstack = 0
 30352  01BFEE  50E1               	movf	fsr1l,w,c
 30353  01BFF0  0FFD               	addlw	-3
 30354  01BFF2  6ED9               	movwf	fsr2l,c
 30355  01BFF4  50E2               	movf	fsr1h,w,c
 30356  01BFF6  6EDA               	movwf	fsr2h,c
 30357  01BFF8  0EFF               	movlw	255
 30358  01BFFA  22DA               	addwfc	fsr2h,f,c
 30359  01BFFC  006F FF78  F08E    	movff	postinc2,_UART2_TxInterruptHandler
 30360  01C002  006F FF78  F08F    	movff	postinc2,_UART2_TxInterruptHandler+1
 30361  01C008  006F FF74  F090    	movff	postdec2,_UART2_TxInterruptHandler+2
 30362                           
 30363                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30364  01C00E  52E5               	movf	postdec1,f,c
 30365  01C010  52E5               	movf	postdec1,f,c
 30366  01C012  52E5               	movf	postdec1,f,c
 30367  01C014  0012               	return		;funcret
 30368  01C016                     __end_of_UART2_SetTxInterruptHandler:
 30369                           	opt callstack 0
 30370                           
 30371 ;; *************** function _UART2_SetRxInterruptHandler *****************
 30372 ;; Defined at:
 30373 ;;		line 248 in file "mcc_generated_files/uart2.c"
 30374 ;; Parameters:    Size  Location     Type
 30375 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30376 ;;		 -> UART2_Receive_ISR(1), 
 30377 ;; Auto vars:     Size  Location     Type
 30378 ;;		None
 30379 ;; Return value:  Size  Location     Type
 30380 ;;                  1  [STACK] void 
 30381 ;; Registers used:
 30382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30383 ;; Tracked objects:
 30384 ;;		On entry : 3F/39
 30385 ;;		On exit  : 0/0
 30386 ;;		Unchanged: 0/0
 30387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30392 ;;Total ram usage:        0 bytes
 30393 ;; Hardware stack levels used:    1
 30394 ;; Hardware stack levels required when called:   15
 30395 ;; This function calls:
 30396 ;;		Nothing
 30397 ;; This function is called by:
 30398 ;;		_UART2_Initialize
 30399 ;; This function uses a reentrant model
 30400 ;;
 30401                           
 30402                           	psect	text117
 30403  01C016                     __ptext117:
 30404                           	opt callstack 0
 30405  01C016                     _UART2_SetRxInterruptHandler:
 30406                           	opt callstack 13
 30407                           
 30408                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 30409                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30410                           
 30411                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30412                           ;incstack = 0
 30413  01C016  50E1               	movf	fsr1l,w,c
 30414  01C018  0FFD               	addlw	-3
 30415  01C01A  6ED9               	movwf	fsr2l,c
 30416  01C01C  50E2               	movf	fsr1h,w,c
 30417  01C01E  6EDA               	movwf	fsr2h,c
 30418  01C020  0EFF               	movlw	255
 30419  01C022  22DA               	addwfc	fsr2h,f,c
 30420  01C024  006F FF78  F091    	movff	postinc2,_UART2_RxInterruptHandler
 30421  01C02A  006F FF78  F092    	movff	postinc2,_UART2_RxInterruptHandler+1
 30422  01C030  006F FF74  F093    	movff	postdec2,_UART2_RxInterruptHandler+2
 30423                           
 30424                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30425  01C036  52E5               	movf	postdec1,f,c
 30426  01C038  52E5               	movf	postdec1,f,c
 30427  01C03A  52E5               	movf	postdec1,f,c
 30428  01C03C  0012               	return		;funcret
 30429  01C03E                     __end_of_UART2_SetRxInterruptHandler:
 30430                           	opt callstack 0
 30431                           
 30432 ;; *************** function _UART1_Initialize *****************
 30433 ;; Defined at:
 30434 ;;		line 75 in file "mcc_generated_files/uart1.c"
 30435 ;; Parameters:    Size  Location     Type
 30436 ;;		None
 30437 ;; Auto vars:     Size  Location     Type
 30438 ;;		None
 30439 ;; Return value:  Size  Location     Type
 30440 ;;                  1  [STACK] void 
 30441 ;; Registers used:
 30442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30443 ;; Tracked objects:
 30444 ;;		On entry : 0/39
 30445 ;;		On exit  : 3F/39
 30446 ;;		Unchanged: 0/0
 30447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30452 ;;Total ram usage:        0 bytes
 30453 ;; Hardware stack levels used:    1
 30454 ;; Hardware stack levels required when called:   16
 30455 ;; This function calls:
 30456 ;;		_UART1_SetRxInterruptHandler
 30457 ;; This function is called by:
 30458 ;;		_SYSTEM_Initialize
 30459 ;; This function uses a reentrant model
 30460 ;;
 30461                           
 30462                           	psect	text118
 30463  01B86C                     __ptext118:
 30464                           	opt callstack 0
 30465  01B86C                     _UART1_Initialize:
 30466                           	opt callstack 13
 30467                           
 30468                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 30469                           
 30470                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30471                           ;incstack = 0
 30472  01B86C  0139               	movlb	57	; () banked
 30473  01B86E  9793               	bcf	147,3,b	;volatile
 30474                           
 30475                           ; BSR set to: 57
 30476                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 30477  01B870  0E14               	movlw	low _UART1_Receive_ISR
 30478  01B872  6EE6               	movwf	postinc1,c
 30479  01B874  0EC3               	movlw	high _UART1_Receive_ISR
 30480  01B876  6EE6               	movwf	postinc1,c
 30481  01B878  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 30482  01B87A  6EE6               	movwf	postinc1,c
 30483  01B87C  EC1F  F0E0         	call	_UART1_SetRxInterruptHandler	;wreg free
 30484                           
 30485                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 30486  01B880  013D               	movlb	61	; () banked
 30487  01B882  6BEC               	clrf	236,b	;volatile
 30488                           
 30489                           ; BSR set to: 61
 30490                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 30491  01B884  6BED               	clrf	237,b	;volatile
 30492                           
 30493                           ; BSR set to: 61
 30494                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 30495  01B886  6BEE               	clrf	238,b	;volatile
 30496                           
 30497                           ; BSR set to: 61
 30498                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 30499  01B888  6BEF               	clrf	239,b	;volatile
 30500                           
 30501                           ; BSR set to: 61
 30502                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 30503  01B88A  6BF0               	clrf	240,b	;volatile
 30504                           
 30505                           ; BSR set to: 61
 30506                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 30507  01B88C  6BF1               	clrf	241,b	;volatile
 30508                           
 30509                           ; BSR set to: 61
 30510                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 30511  01B88E  0EB0               	movlw	176
 30512  01B890  6FF2               	movwf	242,b	;volatile
 30513                           
 30514                           ; BSR set to: 61
 30515                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 30516  01B892  0E80               	movlw	128
 30517  01B894  6FF3               	movwf	243,b	;volatile
 30518                           
 30519                           ; BSR set to: 61
 30520                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 30521  01B896  6BF4               	clrf	244,b	;volatile
 30522                           
 30523                           ; BSR set to: 61
 30524                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 30525  01B898  0E8A               	movlw	138
 30526  01B89A  6FF5               	movwf	245,b	;volatile
 30527                           
 30528                           ; BSR set to: 61
 30529                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 30530  01B89C  6BF6               	clrf	246,b	;volatile
 30531                           
 30532                           ; BSR set to: 61
 30533                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 30534  01B89E  6BF7               	clrf	247,b	;volatile
 30535                           
 30536                           ; BSR set to: 61
 30537                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 30538  01B8A0  6BF8               	clrf	248,b	;volatile
 30539                           
 30540                           ; BSR set to: 61
 30541                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 30542  01B8A2  6BF9               	clrf	249,b	;volatile
 30543                           
 30544                           ; BSR set to: 61
 30545                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 30546  01B8A4  6BFA               	clrf	250,b	;volatile
 30547                           
 30548                           ; BSR set to: 61
 30549                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 30550  01B8A6  6A47               	clrf	_uart1RxHead^0,c	;volatile
 30551                           
 30552                           ; BSR set to: 61
 30553                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 30554  01B8A8  0100               	movlb	0	; () banked
 30555  01B8AA  6BAE               	clrf	_uart1RxTail& (0+255),b	;volatile
 30556                           
 30557                           ; BSR set to: 0
 30558                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 30559  01B8AC  6BAD               	clrf	_uart1RxCount& (0+255),b	;volatile
 30560                           
 30561                           ; BSR set to: 0
 30562                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 30563  01B8AE  0139               	movlb	57	; () banked
 30564  01B8B0  8793               	bsf	147,3,b	;volatile
 30565                           
 30566                           ; BSR set to: 57
 30567                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 30568  01B8B2  0012               	return		;funcret
 30569  01B8B4                     __end_of_UART1_Initialize:
 30570                           	opt callstack 0
 30571                           
 30572 ;; *************** function _UART1_SetRxInterruptHandler *****************
 30573 ;; Defined at:
 30574 ;;		line 207 in file "mcc_generated_files/uart1.c"
 30575 ;; Parameters:    Size  Location     Type
 30576 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30577 ;;		 -> UART1_Receive_ISR(1), 
 30578 ;; Auto vars:     Size  Location     Type
 30579 ;;		None
 30580 ;; Return value:  Size  Location     Type
 30581 ;;                  1  [STACK] void 
 30582 ;; Registers used:
 30583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30584 ;; Tracked objects:
 30585 ;;		On entry : 3F/39
 30586 ;;		On exit  : 0/0
 30587 ;;		Unchanged: 0/0
 30588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30593 ;;Total ram usage:        0 bytes
 30594 ;; Hardware stack levels used:    1
 30595 ;; Hardware stack levels required when called:   15
 30596 ;; This function calls:
 30597 ;;		Nothing
 30598 ;; This function is called by:
 30599 ;;		_UART1_Initialize
 30600 ;; This function uses a reentrant model
 30601 ;;
 30602                           
 30603                           	psect	text119
 30604  01C03E                     __ptext119:
 30605                           	opt callstack 0
 30606  01C03E                     _UART1_SetRxInterruptHandler:
 30607                           	opt callstack 13
 30608                           
 30609                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 30610                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30611                           
 30612                           ; BSR set to: 57
 30613                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30614                           ;incstack = 0
 30615  01C03E  50E1               	movf	fsr1l,w,c
 30616  01C040  0FFD               	addlw	-3
 30617  01C042  6ED9               	movwf	fsr2l,c
 30618  01C044  50E2               	movf	fsr1h,w,c
 30619  01C046  6EDA               	movwf	fsr2h,c
 30620  01C048  0EFF               	movlw	255
 30621  01C04A  22DA               	addwfc	fsr2h,f,c
 30622  01C04C  006F FF78  F08B    	movff	postinc2,_UART1_RxInterruptHandler
 30623  01C052  006F FF78  F08C    	movff	postinc2,_UART1_RxInterruptHandler+1
 30624  01C058  006F FF74  F08D    	movff	postdec2,_UART1_RxInterruptHandler+2
 30625                           
 30626                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30627  01C05E  52E5               	movf	postdec1,f,c
 30628  01C060  52E5               	movf	postdec1,f,c
 30629  01C062  52E5               	movf	postdec1,f,c
 30630  01C064  0012               	return		;funcret
 30631  01C066                     __end_of_UART1_SetRxInterruptHandler:
 30632                           	opt callstack 0
 30633                           
 30634 ;; *************** function _TMR6_Initialize *****************
 30635 ;; Defined at:
 30636 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 30637 ;; Parameters:    Size  Location     Type
 30638 ;;		None
 30639 ;; Auto vars:     Size  Location     Type
 30640 ;;		None
 30641 ;; Return value:  Size  Location     Type
 30642 ;;                  1  [STACK] void 
 30643 ;; Registers used:
 30644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30645 ;; Tracked objects:
 30646 ;;		On entry : 3F/39
 30647 ;;		On exit  : 0/0
 30648 ;;		Unchanged: 0/0
 30649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30654 ;;Total ram usage:        0 bytes
 30655 ;; Hardware stack levels used:    1
 30656 ;; Hardware stack levels required when called:   16
 30657 ;; This function calls:
 30658 ;;		_TMR6_SetInterruptHandler
 30659 ;; This function is called by:
 30660 ;;		_SYSTEM_Initialize
 30661 ;; This function uses a reentrant model
 30662 ;;
 30663                           
 30664                           	psect	text120
 30665  01BF74                     __ptext120:
 30666                           	opt callstack 0
 30667  01BF74                     _TMR6_Initialize:
 30668                           	opt callstack 13
 30669                           
 30670                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 30671                           
 30672                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30673                           ;incstack = 0
 30674  01BF74  0E01               	movlw	1
 30675  01BF76  6E96               	movwf	150,c	;volatile
 30676                           
 30677                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 30678  01BF78  6A95               	clrf	149,c	;volatile
 30679                           
 30680                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 30681  01BF7A  6A97               	clrf	151,c	;volatile
 30682                           
 30683                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 30684  01BF7C  0E7C               	movlw	124
 30685  01BF7E  6E93               	movwf	147,c	;volatile
 30686                           
 30687                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 30688  01BF80  6A92               	clrf	146,c	;volatile
 30689                           
 30690                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 30691  01BF82  0139               	movlb	57	; () banked
 30692  01BF84  91A9               	bcf	169,0,b	;volatile
 30693                           
 30694                           ; BSR set to: 57
 30695                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 30696  01BF86  8199               	bsf	153,0,b	;volatile
 30697                           
 30698                           ; BSR set to: 57
 30699                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 30700  01BF88  0E42               	movlw	low _TMR6_DefaultInterruptHandler
 30701  01BF8A  6EE6               	movwf	postinc1,c
 30702  01BF8C  0EB7               	movlw	high _TMR6_DefaultInterruptHandler
 30703  01BF8E  6EE6               	movwf	postinc1,c
 30704  01BF90  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 30705  01BF92  6EE6               	movwf	postinc1,c
 30706  01BF94  EC33  F0E0         	call	_TMR6_SetInterruptHandler	;wreg free
 30707                           
 30708                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 30709  01BF98  0EE0               	movlw	224
 30710  01BF9A  6E94               	movwf	148,c	;volatile
 30711                           
 30712                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30713  01BF9C  0012               	return		;funcret
 30714  01BF9E                     __end_of_TMR6_Initialize:
 30715                           	opt callstack 0
 30716                           
 30717 ;; *************** function _TMR6_SetInterruptHandler *****************
 30718 ;; Defined at:
 30719 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 30720 ;; Parameters:    Size  Location     Type
 30721 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30722 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 30723 ;; Auto vars:     Size  Location     Type
 30724 ;;		None
 30725 ;; Return value:  Size  Location     Type
 30726 ;;                  1  [STACK] void 
 30727 ;; Registers used:
 30728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30729 ;; Tracked objects:
 30730 ;;		On entry : 3F/39
 30731 ;;		On exit  : 0/0
 30732 ;;		Unchanged: 0/0
 30733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30738 ;;Total ram usage:        0 bytes
 30739 ;; Hardware stack levels used:    1
 30740 ;; Hardware stack levels required when called:   15
 30741 ;; This function calls:
 30742 ;;		Nothing
 30743 ;; This function is called by:
 30744 ;;		_TMR6_Initialize
 30745 ;; This function uses a reentrant model
 30746 ;;
 30747                           
 30748                           	psect	text121
 30749  01C066                     __ptext121:
 30750                           	opt callstack 0
 30751  01C066                     _TMR6_SetInterruptHandler:
 30752                           	opt callstack 13
 30753                           
 30754                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 30755                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30756                           
 30757                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30758                           ;incstack = 0
 30759  01C066  50E1               	movf	fsr1l,w,c
 30760  01C068  0FFD               	addlw	-3
 30761  01C06A  6ED9               	movwf	fsr2l,c
 30762  01C06C  50E2               	movf	fsr1h,w,c
 30763  01C06E  6EDA               	movwf	fsr2h,c
 30764  01C070  0EFF               	movlw	255
 30765  01C072  22DA               	addwfc	fsr2h,f,c
 30766  01C074  006F FF78  F082    	movff	postinc2,_TMR6_InterruptHandler
 30767  01C07A  006F FF78  F083    	movff	postinc2,_TMR6_InterruptHandler+1
 30768  01C080  006F FF74  F084    	movff	postdec2,_TMR6_InterruptHandler+2
 30769                           
 30770                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30771  01C086  52E5               	movf	postdec1,f,c
 30772  01C088  52E5               	movf	postdec1,f,c
 30773  01C08A  52E5               	movf	postdec1,f,c
 30774  01C08C  0012               	return		;funcret
 30775  01C08E                     __end_of_TMR6_SetInterruptHandler:
 30776                           	opt callstack 0
 30777                           
 30778 ;; *************** function _TMR5_Initialize *****************
 30779 ;; Defined at:
 30780 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 30781 ;; Parameters:    Size  Location     Type
 30782 ;;		None
 30783 ;; Auto vars:     Size  Location     Type
 30784 ;;		None
 30785 ;; Return value:  Size  Location     Type
 30786 ;;                  1  [STACK] void 
 30787 ;; Registers used:
 30788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 30789 ;; Tracked objects:
 30790 ;;		On entry : 0/39
 30791 ;;		On exit  : 0/0
 30792 ;;		Unchanged: 0/0
 30793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30798 ;;Total ram usage:        0 bytes
 30799 ;; Hardware stack levels used:    1
 30800 ;; Hardware stack levels required when called:   16
 30801 ;; This function calls:
 30802 ;;		_TMR5_SetInterruptHandler
 30803 ;; This function is called by:
 30804 ;;		_SYSTEM_Initialize
 30805 ;; This function uses a reentrant model
 30806 ;;
 30807                           
 30808                           	psect	text122
 30809  01B8B4                     __ptext122:
 30810                           	opt callstack 0
 30811  01B8B4                     _TMR5_Initialize:
 30812                           	opt callstack 13
 30813                           
 30814                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 30815                           
 30816                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30817                           ;incstack = 0
 30818  01B8B4  6A9B               	clrf	155,c	;volatile
 30819                           
 30820                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 30821  01B8B6  6A9C               	clrf	156,c	;volatile
 30822                           
 30823                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 30824  01B8B8  0E01               	movlw	1
 30825  01B8BA  6E9D               	movwf	157,c	;volatile
 30826                           
 30827                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 30828  01B8BC  0E63               	movlw	99
 30829  01B8BE  6E99               	movwf	153,c	;volatile
 30830                           
 30831                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 30832  01B8C0  0EC0               	movlw	192
 30833  01B8C2  6E98               	movwf	152,c	;volatile
 30834                           
 30835                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 30836  01B8C4  5098               	movf	152,w,c	;volatile
 30837  01B8C6  006F FE64  F001    	movff	16281,btemp	;volatile
 30838  01B8CC  6A02               	clrf	(btemp+1)^0,c
 30839  01B8CE  0060  F004  F002   	movff	btemp,btemp+1
 30840  01B8D4  6A01               	clrf	btemp^0,c
 30841  01B8D6  1001               	iorwf	btemp^0,w,c
 30842  01B8D8  0100               	movlb	0	; () banked
 30843  01B8DA  6FA2               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 30844  01B8DC  5002               	movf	(btemp+1)^0,w,c
 30845  01B8DE  6FA3               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 30846                           
 30847                           ; BSR set to: 0
 30848                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 30849  01B8E0  0139               	movlb	57	; () banked
 30850  01B8E2  9DA8               	bcf	168,6,b	;volatile
 30851                           
 30852                           ; BSR set to: 57
 30853                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 30854  01B8E4  8D98               	bsf	152,6,b	;volatile
 30855                           
 30856                           ; BSR set to: 57
 30857                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 30858  01B8E6  0E8C               	movlw	low _TMR5_DefaultInterruptHandler
 30859  01B8E8  6EE6               	movwf	postinc1,c
 30860  01B8EA  0EBC               	movlw	high _TMR5_DefaultInterruptHandler
 30861  01B8EC  6EE6               	movwf	postinc1,c
 30862  01B8EE  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 30863  01B8F0  6EE6               	movwf	postinc1,c
 30864  01B8F2  EC47  F0E0         	call	_TMR5_SetInterruptHandler	;wreg free
 30865                           
 30866                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 30867  01B8F6  0E31               	movlw	49
 30868  01B8F8  6E9A               	movwf	154,c	;volatile
 30869                           
 30870                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30871  01B8FA  0012               	return		;funcret
 30872  01B8FC                     __end_of_TMR5_Initialize:
 30873                           	opt callstack 0
 30874                           
 30875 ;; *************** function _TMR5_SetInterruptHandler *****************
 30876 ;; Defined at:
 30877 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 30878 ;; Parameters:    Size  Location     Type
 30879 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30880 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 30881 ;; Auto vars:     Size  Location     Type
 30882 ;;		None
 30883 ;; Return value:  Size  Location     Type
 30884 ;;                  1  [STACK] void 
 30885 ;; Registers used:
 30886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30887 ;; Tracked objects:
 30888 ;;		On entry : 3F/39
 30889 ;;		On exit  : 0/0
 30890 ;;		Unchanged: 0/0
 30891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30896 ;;Total ram usage:        0 bytes
 30897 ;; Hardware stack levels used:    1
 30898 ;; Hardware stack levels required when called:   15
 30899 ;; This function calls:
 30900 ;;		Nothing
 30901 ;; This function is called by:
 30902 ;;		_TMR5_Initialize
 30903 ;; This function uses a reentrant model
 30904 ;;
 30905                           
 30906                           	psect	text123
 30907  01C08E                     __ptext123:
 30908                           	opt callstack 0
 30909  01C08E                     _TMR5_SetInterruptHandler:
 30910                           	opt callstack 13
 30911                           
 30912                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 30913                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30914                           
 30915                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30916                           ;incstack = 0
 30917  01C08E  50E1               	movf	fsr1l,w,c
 30918  01C090  0FFD               	addlw	-3
 30919  01C092  6ED9               	movwf	fsr2l,c
 30920  01C094  50E2               	movf	fsr1h,w,c
 30921  01C096  6EDA               	movwf	fsr2h,c
 30922  01C098  0EFF               	movlw	255
 30923  01C09A  22DA               	addwfc	fsr2h,f,c
 30924  01C09C  006F FF78  F07F    	movff	postinc2,_TMR5_InterruptHandler
 30925  01C0A2  006F FF78  F080    	movff	postinc2,_TMR5_InterruptHandler+1
 30926  01C0A8  006F FF74  F081    	movff	postdec2,_TMR5_InterruptHandler+2
 30927                           
 30928                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30929  01C0AE  52E5               	movf	postdec1,f,c
 30930  01C0B0  52E5               	movf	postdec1,f,c
 30931  01C0B2  52E5               	movf	postdec1,f,c
 30932  01C0B4  0012               	return		;funcret
 30933  01C0B6                     __end_of_TMR5_SetInterruptHandler:
 30934                           	opt callstack 0
 30935                           
 30936 ;; *************** function _TMR3_Initialize *****************
 30937 ;; Defined at:
 30938 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 30939 ;; Parameters:    Size  Location     Type
 30940 ;;		None
 30941 ;; Auto vars:     Size  Location     Type
 30942 ;;		None
 30943 ;; Return value:  Size  Location     Type
 30944 ;;                  1  [STACK] void 
 30945 ;; Registers used:
 30946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 30947 ;; Tracked objects:
 30948 ;;		On entry : 0/39
 30949 ;;		On exit  : 0/0
 30950 ;;		Unchanged: 0/0
 30951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30956 ;;Total ram usage:        0 bytes
 30957 ;; Hardware stack levels used:    1
 30958 ;; Hardware stack levels required when called:   16
 30959 ;; This function calls:
 30960 ;;		_TMR3_SetInterruptHandler
 30961 ;; This function is called by:
 30962 ;;		_SYSTEM_Initialize
 30963 ;; This function uses a reentrant model
 30964 ;;
 30965                           
 30966                           	psect	text124
 30967  01B8FC                     __ptext124:
 30968                           	opt callstack 0
 30969  01B8FC                     _TMR3_Initialize:
 30970                           	opt callstack 13
 30971                           
 30972                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 30973                           
 30974                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30975                           ;incstack = 0
 30976  01B8FC  6AA7               	clrf	167,c	;volatile
 30977                           
 30978                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 30979  01B8FE  6AA8               	clrf	168,c	;volatile
 30980                           
 30981                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 30982  01B900  0E01               	movlw	1
 30983  01B902  6EA9               	movwf	169,c	;volatile
 30984                           
 30985                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 30986  01B904  0E3C               	movlw	60
 30987  01B906  6EA5               	movwf	165,c	;volatile
 30988                           
 30989                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 30990  01B908  0EB0               	movlw	176
 30991  01B90A  6EA4               	movwf	164,c	;volatile
 30992                           
 30993                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 30994  01B90C  50A4               	movf	164,w,c	;volatile
 30995  01B90E  006F FE94  F001    	movff	16293,btemp	;volatile
 30996  01B914  6A02               	clrf	(btemp+1)^0,c
 30997  01B916  0060  F004  F002   	movff	btemp,btemp+1
 30998  01B91C  6A01               	clrf	btemp^0,c
 30999  01B91E  1001               	iorwf	btemp^0,w,c
 31000  01B920  0100               	movlb	0	; () banked
 31001  01B922  6F9E               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 31002  01B924  5002               	movf	(btemp+1)^0,w,c
 31003  01B926  6F9F               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 31004                           
 31005                           ; BSR set to: 0
 31006                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 31007  01B928  0139               	movlb	57	; () banked
 31008  01B92A  9DA6               	bcf	166,6,b	;volatile
 31009                           
 31010                           ; BSR set to: 57
 31011                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 31012  01B92C  8D96               	bsf	150,6,b	;volatile
 31013                           
 31014                           ; BSR set to: 57
 31015                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 31016  01B92E  0EE4               	movlw	low _TMR3_DefaultInterruptHandler
 31017  01B930  6EE6               	movwf	postinc1,c
 31018  01B932  0EC5               	movlw	high _TMR3_DefaultInterruptHandler
 31019  01B934  6EE6               	movwf	postinc1,c
 31020  01B936  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 31021  01B938  6EE6               	movwf	postinc1,c
 31022  01B93A  EC5B  F0E0         	call	_TMR3_SetInterruptHandler	;wreg free
 31023                           
 31024                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 31025  01B93E  0E31               	movlw	49
 31026  01B940  6EA6               	movwf	166,c	;volatile
 31027                           
 31028                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31029  01B942  0012               	return		;funcret
 31030  01B944                     __end_of_TMR3_Initialize:
 31031                           	opt callstack 0
 31032                           
 31033 ;; *************** function _TMR3_SetInterruptHandler *****************
 31034 ;; Defined at:
 31035 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 31036 ;; Parameters:    Size  Location     Type
 31037 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31038 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 31039 ;; Auto vars:     Size  Location     Type
 31040 ;;		None
 31041 ;; Return value:  Size  Location     Type
 31042 ;;                  1  [STACK] void 
 31043 ;; Registers used:
 31044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31045 ;; Tracked objects:
 31046 ;;		On entry : 0/0
 31047 ;;		On exit  : 0/0
 31048 ;;		Unchanged: 0/0
 31049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31054 ;;Total ram usage:        0 bytes
 31055 ;; Hardware stack levels used:    1
 31056 ;; Hardware stack levels required when called:   15
 31057 ;; This function calls:
 31058 ;;		Nothing
 31059 ;; This function is called by:
 31060 ;;		_TMR3_Initialize
 31061 ;;		_init_bsoc
 31062 ;; This function uses a reentrant model
 31063 ;;
 31064                           
 31065                           	psect	text125
 31066  01C0B6                     __ptext125:
 31067                           	opt callstack 0
 31068  01C0B6                     _TMR3_SetInterruptHandler:
 31069                           	opt callstack 14
 31070                           
 31071                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 31072                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31073                           
 31074                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31075                           ;incstack = 0
 31076  01C0B6  50E1               	movf	fsr1l,w,c
 31077  01C0B8  0FFD               	addlw	-3
 31078  01C0BA  6ED9               	movwf	fsr2l,c
 31079  01C0BC  50E2               	movf	fsr1h,w,c
 31080  01C0BE  6EDA               	movwf	fsr2h,c
 31081  01C0C0  0EFF               	movlw	255
 31082  01C0C2  22DA               	addwfc	fsr2h,f,c
 31083  01C0C4  006F FF78  F07C    	movff	postinc2,_TMR3_InterruptHandler
 31084  01C0CA  006F FF78  F07D    	movff	postinc2,_TMR3_InterruptHandler+1
 31085  01C0D0  006F FF74  F07E    	movff	postdec2,_TMR3_InterruptHandler+2
 31086                           
 31087                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31088  01C0D6  52E5               	movf	postdec1,f,c
 31089  01C0D8  52E5               	movf	postdec1,f,c
 31090  01C0DA  52E5               	movf	postdec1,f,c
 31091  01C0DC  0012               	return		;funcret
 31092  01C0DE                     __end_of_TMR3_SetInterruptHandler:
 31093                           	opt callstack 0
 31094                           
 31095 ;; *************** function _TMR2_Initialize *****************
 31096 ;; Defined at:
 31097 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 31098 ;; Parameters:    Size  Location     Type
 31099 ;;		None
 31100 ;; Auto vars:     Size  Location     Type
 31101 ;;		None
 31102 ;; Return value:  Size  Location     Type
 31103 ;;                  1  [STACK] void 
 31104 ;; Registers used:
 31105 ;;		wreg, status,2
 31106 ;; Tracked objects:
 31107 ;;		On entry : 0/3E
 31108 ;;		On exit  : 3F/39
 31109 ;;		Unchanged: 0/0
 31110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31115 ;;Total ram usage:        0 bytes
 31116 ;; Hardware stack levels used:    1
 31117 ;; Hardware stack levels required when called:   15
 31118 ;; This function calls:
 31119 ;;		Nothing
 31120 ;; This function is called by:
 31121 ;;		_SYSTEM_Initialize
 31122 ;; This function uses a reentrant model
 31123 ;;
 31124                           
 31125                           	psect	text126
 31126  01C45A                     __ptext126:
 31127                           	opt callstack 0
 31128  01C45A                     _TMR2_Initialize:
 31129                           	opt callstack 14
 31130                           
 31131                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 31132                           
 31133                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31134                           ;incstack = 0
 31135  01C45A  0E01               	movlw	1
 31136  01C45C  6EAE               	movwf	174,c	;volatile
 31137                           
 31138                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 31139  01C45E  6AAD               	clrf	173,c	;volatile
 31140                           
 31141                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 31142  01C460  6AAF               	clrf	175,c	;volatile
 31143                           
 31144                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 31145  01C462  0E63               	movlw	99
 31146  01C464  6EAB               	movwf	171,c	;volatile
 31147                           
 31148                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 31149  01C466  6AAA               	clrf	170,c	;volatile
 31150                           
 31151                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 31152  01C468  0139               	movlb	57	; () banked
 31153  01C46A  95A4               	bcf	164,2,b	;volatile
 31154                           
 31155                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 31156  01C46C  0EC0               	movlw	192
 31157  01C46E  6EAC               	movwf	172,c	;volatile
 31158                           
 31159                           ; BSR set to: 57
 31160                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31161  01C470  0012               	return		;funcret
 31162  01C472                     __end_of_TMR2_Initialize:
 31163                           	opt callstack 0
 31164                           
 31165 ;; *************** function _SPI1_Initialize *****************
 31166 ;; Defined at:
 31167 ;;		line 64 in file "mcc_generated_files/spi1.c"
 31168 ;; Parameters:    Size  Location     Type
 31169 ;;		None
 31170 ;; Auto vars:     Size  Location     Type
 31171 ;;		None
 31172 ;; Return value:  Size  Location     Type
 31173 ;;                  1  [STACK] void 
 31174 ;; Registers used:
 31175 ;;		wreg, status,2
 31176 ;; Tracked objects:
 31177 ;;		On entry : 3F/39
 31178 ;;		On exit  : 3F/3D
 31179 ;;		Unchanged: 0/0
 31180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31185 ;;Total ram usage:        0 bytes
 31186 ;; Hardware stack levels used:    1
 31187 ;; Hardware stack levels required when called:   15
 31188 ;; This function calls:
 31189 ;;		Nothing
 31190 ;; This function is called by:
 31191 ;;		_SYSTEM_Initialize
 31192 ;; This function uses a reentrant model
 31193 ;;
 31194                           
 31195                           	psect	text127
 31196  01C472                     __ptext127:
 31197                           	opt callstack 0
 31198  01C472                     _SPI1_Initialize:
 31199                           	opt callstack 14
 31200                           
 31201                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 31202                           
 31203                           ; BSR set to: 57
 31204                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31205                           ;incstack = 0
 31206  01C472  0E40               	movlw	64
 31207  01C474  013D               	movlb	61	; () banked
 31208  01C476  6F15               	movwf	21,b	;volatile
 31209                           
 31210                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 31211  01C478  0E03               	movlw	3
 31212  01C47A  6F16               	movwf	22,b	;volatile
 31213                           
 31214                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 31215  01C47C  0E4F               	movlw	79
 31216  01C47E  6F19               	movwf	25,b	;volatile
 31217                           
 31218                           ; BSR set to: 61
 31219                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 31220  01C480  6B1C               	clrf	28,b	;volatile
 31221                           
 31222                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 31223  01C482  0E83               	movlw	131
 31224  01C484  6F14               	movwf	20,b	;volatile
 31225                           
 31226                           ; BSR set to: 61
 31227                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31228  01C486  0012               	return		;funcret
 31229  01C488                     __end_of_SPI1_Initialize:
 31230                           	opt callstack 0
 31231                           
 31232 ;; *************** function _PWM8_Initialize *****************
 31233 ;; Defined at:
 31234 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 31235 ;; Parameters:    Size  Location     Type
 31236 ;;		None
 31237 ;; Auto vars:     Size  Location     Type
 31238 ;;		None
 31239 ;; Return value:  Size  Location     Type
 31240 ;;                  1  [STACK] void 
 31241 ;; Registers used:
 31242 ;;		wreg, status,2
 31243 ;; Tracked objects:
 31244 ;;		On entry : 3F/39
 31245 ;;		On exit  : 3F/3F
 31246 ;;		Unchanged: 0/0
 31247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31252 ;;Total ram usage:        0 bytes
 31253 ;; Hardware stack levels used:    1
 31254 ;; Hardware stack levels required when called:   15
 31255 ;; This function calls:
 31256 ;;		Nothing
 31257 ;; This function is called by:
 31258 ;;		_SYSTEM_Initialize
 31259 ;; This function uses a reentrant model
 31260 ;;
 31261                           
 31262                           	psect	text128
 31263  01C488                     __ptext128:
 31264                           	opt callstack 0
 31265  01C488                     _PWM8_Initialize:
 31266                           	opt callstack 14
 31267                           
 31268                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 31269                           
 31270                           ; BSR set to: 61
 31271                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31272                           ;incstack = 0
 31273  01C488  0E80               	movlw	128
 31274  01C48A  6E62               	movwf	98,c	;volatile
 31275                           
 31276                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 31277  01C48C  6A61               	clrf	97,c	;volatile
 31278                           
 31279                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 31280  01C48E  0E40               	movlw	64
 31281  01C490  6E60               	movwf	96,c	;volatile
 31282                           
 31283                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 31284  01C492  013F               	movlb	63	; () banked
 31285  01C494  515F               	movf	95,w,b	;volatile
 31286  01C496  0B3F               	andlw	-193
 31287  01C498  0940               	iorlw	64
 31288  01C49A  6F5F               	movwf	95,b	;volatile
 31289                           
 31290                           ; BSR set to: 63
 31291                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31292  01C49C  0012               	return		;funcret
 31293  01C49E                     __end_of_PWM8_Initialize:
 31294                           	opt callstack 0
 31295                           
 31296 ;; *************** function _PMD_Initialize *****************
 31297 ;; Defined at:
 31298 ;;		line 90 in file "mcc_generated_files/mcc.c"
 31299 ;; Parameters:    Size  Location     Type
 31300 ;;		None
 31301 ;; Auto vars:     Size  Location     Type
 31302 ;;		None
 31303 ;; Return value:  Size  Location     Type
 31304 ;;                  1  [STACK] void 
 31305 ;; Registers used:
 31306 ;;		None
 31307 ;; Tracked objects:
 31308 ;;		On entry : 3F/39
 31309 ;;		On exit  : 3F/39
 31310 ;;		Unchanged: 0/0
 31311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31316 ;;Total ram usage:        0 bytes
 31317 ;; Hardware stack levels used:    1
 31318 ;; Hardware stack levels required when called:   15
 31319 ;; This function calls:
 31320 ;;		Nothing
 31321 ;; This function is called by:
 31322 ;;		_SYSTEM_Initialize
 31323 ;; This function uses a reentrant model
 31324 ;;
 31325                           
 31326                           	psect	text129
 31327  01C4B4                     __ptext129:
 31328                           	opt callstack 0
 31329  01C4B4                     _PMD_Initialize:
 31330                           	opt callstack 14
 31331                           
 31332                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 31333                           
 31334                           ; BSR set to: 63
 31335                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31336                           ;incstack = 0
 31337  01C4B4  0139               	movlb	57	; () banked
 31338  01C4B6  6BC0               	clrf	192,b	;volatile
 31339                           
 31340                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 31341  01C4B8  6BC1               	clrf	193,b	;volatile
 31342                           
 31343                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 31344  01C4BA  6BC2               	clrf	194,b	;volatile
 31345                           
 31346                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 31347  01C4BC  6BC3               	clrf	195,b	;volatile
 31348                           
 31349                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 31350  01C4BE  6BC4               	clrf	196,b	;volatile
 31351                           
 31352                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 31353  01C4C0  6BC5               	clrf	197,b	;volatile
 31354                           
 31355                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 31356  01C4C2  6BC6               	clrf	198,b	;volatile
 31357                           
 31358                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 31359  01C4C4  6BC7               	clrf	199,b	;volatile
 31360                           
 31361                           ; BSR set to: 57
 31362                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31363  01C4C6  0012               	return		;funcret
 31364  01C4C8                     __end_of_PMD_Initialize:
 31365                           	opt callstack 0
 31366                           
 31367 ;; *************** function _PIN_MANAGER_Initialize *****************
 31368 ;; Defined at:
 31369 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 31370 ;; Parameters:    Size  Location     Type
 31371 ;;		None
 31372 ;; Auto vars:     Size  Location     Type
 31373 ;;		None
 31374 ;; Return value:  Size  Location     Type
 31375 ;;                  1  [STACK] void 
 31376 ;; Registers used:
 31377 ;;		wreg, status,2
 31378 ;; Tracked objects:
 31379 ;;		On entry : 3F/39
 31380 ;;		On exit  : 3F/3A
 31381 ;;		Unchanged: 0/0
 31382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31387 ;;Total ram usage:        0 bytes
 31388 ;; Hardware stack levels used:    1
 31389 ;; Hardware stack levels required when called:   15
 31390 ;; This function calls:
 31391 ;;		Nothing
 31392 ;; This function is called by:
 31393 ;;		_SYSTEM_Initialize
 31394 ;; This function uses a reentrant model
 31395 ;;
 31396                           
 31397                           	psect	text130
 31398  01AE66                     __ptext130:
 31399                           	opt callstack 0
 31400  01AE66                     _PIN_MANAGER_Initialize:
 31401                           	opt callstack 14
 31402                           
 31403                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 31404                           
 31405                           ; BSR set to: 57
 31406                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31407                           ;incstack = 0
 31408  01AE66  0E07               	movlw	7
 31409  01AE68  6EBE               	movwf	190,c	;volatile
 31410                           
 31411                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 31412  01AE6A  6ABD               	clrf	189,c	;volatile
 31413                           
 31414                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 31415  01AE6C  6ABA               	clrf	186,c	;volatile
 31416                           
 31417                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 31418  01AE6E  0E23               	movlw	35
 31419  01AE70  6EBF               	movwf	191,c	;volatile
 31420                           
 31421                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 31422  01AE72  6ABB               	clrf	187,c	;volatile
 31423                           
 31424                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 31425  01AE74  0E07               	movlw	7
 31426  01AE76  6EBC               	movwf	188,c	;volatile
 31427                           
 31428                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 31429  01AE78  6AC6               	clrf	198,c	;volatile
 31430                           
 31431                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 31432  01AE7A  0E0C               	movlw	12
 31433  01AE7C  6EC7               	movwf	199,c	;volatile
 31434                           
 31435                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 31436  01AE7E  68C2               	setf	194,c	;volatile
 31437                           
 31438                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 31439  01AE80  0EBF               	movlw	191
 31440  01AE82  6EC3               	movwf	195,c	;volatile
 31441                           
 31442                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 31443  01AE84  0E90               	movlw	144
 31444  01AE86  6EC4               	movwf	196,c	;volatile
 31445                           
 31446                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 31447  01AE88  0E0C               	movlw	12
 31448  01AE8A  6EC5               	movwf	197,c	;volatile
 31449                           
 31450                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 31451  01AE8C  013A               	movlb	58	; () banked
 31452  01AE8E  6B70               	clrf	112,b	;volatile
 31453                           
 31454                           ; BSR set to: 58
 31455                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 31456  01AE90  6B60               	clrf	96,b	;volatile
 31457                           
 31458                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 31459  01AE92  0E3C               	movlw	60
 31460  01AE94  6F50               	movwf	80,b	;volatile
 31461                           
 31462                           ; BSR set to: 58
 31463                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 31464  01AE96  6B80               	clrf	128,b	;volatile
 31465                           
 31466                           ; BSR set to: 58
 31467                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 31468  01AE98  6B90               	clrf	144,b	;volatile
 31469                           
 31470                           ; BSR set to: 58
 31471                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 31472  01AE9A  6940               	setf	64,b	;volatile
 31473                           
 31474                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 31475  01AE9C  0E0C               	movlw	12
 31476  01AE9E  6F71               	movwf	113,b	;volatile
 31477                           
 31478                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 31479  01AEA0  0E0C               	movlw	12
 31480  01AEA2  6F91               	movwf	145,b	;volatile
 31481                           
 31482                           ; BSR set to: 58
 31483                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 31484  01AEA4  6B81               	clrf	129,b	;volatile
 31485                           
 31486                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 31487  01AEA6  0E83               	movlw	131
 31488  01AEA8  6F51               	movwf	81,b	;volatile
 31489                           
 31490                           ; BSR set to: 58
 31491                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 31492  01AEAA  6B41               	clrf	65,b	;volatile
 31493                           
 31494                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 31495  01AEAC  0E97               	movlw	151
 31496  01AEAE  6F61               	movwf	97,b	;volatile
 31497                           
 31498                           ; BSR set to: 58
 31499                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 31500  01AEB0  6B82               	clrf	130,b	;volatile
 31501                           
 31502                           ; BSR set to: 58
 31503                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 31504  01AEB2  6B92               	clrf	146,b	;volatile
 31505                           
 31506                           ; BSR set to: 58
 31507                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 31508  01AEB4  6B42               	clrf	66,b	;volatile
 31509                           
 31510                           ; BSR set to: 58
 31511                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 31512  01AEB6  6B52               	clrf	82,b	;volatile
 31513                           
 31514                           ; BSR set to: 58
 31515                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 31516  01AEB8  6B62               	clrf	98,b	;volatile
 31517                           
 31518                           ; BSR set to: 58
 31519                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 31520  01AEBA  6B72               	clrf	114,b	;volatile
 31521                           
 31522                           ; BSR set to: 58
 31523                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 31524  01AEBC  6943               	setf	67,b	;volatile
 31525                           
 31526                           ; BSR set to: 58
 31527                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 31528  01AEBE  6953               	setf	83,b	;volatile
 31529                           
 31530                           ; BSR set to: 58
 31531                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 31532  01AEC0  6963               	setf	99,b	;volatile
 31533                           
 31534                           ; BSR set to: 58
 31535                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 31536  01AEC2  6973               	setf	115,b	;volatile
 31537                           
 31538                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 31539  01AEC4  0E07               	movlw	7
 31540  01AEC6  6F83               	movwf	131,b	;volatile
 31541                           
 31542                           ; BSR set to: 58
 31543                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 31544  01AEC8  6993               	setf	147,b	;volatile
 31545                           
 31546                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 31547  01AECA  0E0F               	movlw	15
 31548  01AECC  6FE8               	movwf	232,b	;volatile
 31549                           
 31550                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 31551  01AECE  0E13               	movlw	19
 31552  01AED0  6FDE               	movwf	222,b	;volatile
 31553                           
 31554                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 31555  01AED2  0E16               	movlw	22
 31556  01AED4  6F0E               	movwf	14,b	;volatile
 31557                           
 31558                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 31559  01AED6  0E1E               	movlw	30
 31560  01AED8  6F13               	movwf	19,b	;volatile
 31561                           
 31562                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 31563  01AEDA  0E08               	movlw	8
 31564  01AEDC  6FC0               	movwf	192,b	;volatile
 31565                           
 31566                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 31567  01AEDE  0E10               	movlw	16
 31568  01AEE0  6F19               	movwf	25,b	;volatile
 31569                           
 31570                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 31571  01AEE2  0E09               	movlw	9
 31572  01AEE4  6FC1               	movwf	193,b	;volatile
 31573                           
 31574                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 31575  01AEE6  0E1F               	movlw	31
 31576  01AEE8  6F15               	movwf	21,b	;volatile
 31577                           
 31578                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 31579  01AEEA  0E13               	movlw	19
 31580  01AEEC  6F16               	movwf	22,b	;volatile
 31581                           
 31582                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 31583  01AEEE  0E17               	movlw	23
 31584  01AEF0  6FE5               	movwf	229,b	;volatile
 31585                           
 31586                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 31587  01AEF2  0E14               	movlw	20
 31588  01AEF4  6FDF               	movwf	223,b	;volatile
 31589                           
 31590                           ; BSR set to: 58
 31591                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 31592  01AEF6  0012               	return		;funcret
 31593  01AEF8                     __end_of_PIN_MANAGER_Initialize:
 31594                           	opt callstack 0
 31595                           
 31596 ;; *************** function _OSCILLATOR_Initialize *****************
 31597 ;; Defined at:
 31598 ;;		line 72 in file "mcc_generated_files/mcc.c"
 31599 ;; Parameters:    Size  Location     Type
 31600 ;;		None
 31601 ;; Auto vars:     Size  Location     Type
 31602 ;;		None
 31603 ;; Return value:  Size  Location     Type
 31604 ;;                  1  [STACK] void 
 31605 ;; Registers used:
 31606 ;;		wreg, status,2
 31607 ;; Tracked objects:
 31608 ;;		On entry : 3F/3A
 31609 ;;		On exit  : 3F/39
 31610 ;;		Unchanged: 0/0
 31611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31616 ;;Total ram usage:        0 bytes
 31617 ;; Hardware stack levels used:    1
 31618 ;; Hardware stack levels required when called:   15
 31619 ;; This function calls:
 31620 ;;		Nothing
 31621 ;; This function is called by:
 31622 ;;		_SYSTEM_Initialize
 31623 ;; This function uses a reentrant model
 31624 ;;
 31625                           
 31626                           	psect	text131
 31627  01C49E                     __ptext131:
 31628                           	opt callstack 0
 31629  01C49E                     _OSCILLATOR_Initialize:
 31630                           	opt callstack 14
 31631                           
 31632                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 31633                           
 31634                           ; BSR set to: 58
 31635                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31636                           ;incstack = 0
 31637  01C49E  0E20               	movlw	32
 31638  01C4A0  0139               	movlb	57	; () banked
 31639  01C4A2  6FD9               	movwf	217,b	;volatile
 31640                           
 31641                           ; BSR set to: 57
 31642                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 31643  01C4A4  6BDB               	clrf	219,b	;volatile
 31644                           
 31645                           ; BSR set to: 57
 31646                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 31647  01C4A6  6BDD               	clrf	221,b	;volatile
 31648                           
 31649                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 31650  01C4A8  0E02               	movlw	2
 31651  01C4AA  6FDF               	movwf	223,b	;volatile
 31652                           
 31653                           ; BSR set to: 57
 31654                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 31655  01C4AC  6BDE               	clrf	222,b	;volatile
 31656  01C4AE                     l169:
 31657                           
 31658                           ; BSR set to: 57
 31659                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 31660  01C4AE  B1DC               	btfsc	220,0,b	;volatile
 31661  01C4B0  0012               	return	
 31662  01C4B2  D7FD               	goto	l169
 31663  01C4B4                     __end_of_OSCILLATOR_Initialize:
 31664                           	opt callstack 0
 31665                           
 31666 ;; *************** function _INTERRUPT_Initialize *****************
 31667 ;; Defined at:
 31668 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 31669 ;; Parameters:    Size  Location     Type
 31670 ;;		None
 31671 ;; Auto vars:     Size  Location     Type
 31672 ;;  state           1  [STACK] _Bool 
 31673 ;; Return value:  Size  Location     Type
 31674 ;;                  1  [STACK] void 
 31675 ;; Registers used:
 31676 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 31677 ;; Tracked objects:
 31678 ;;		On entry : 0/0
 31679 ;;		On exit  : 3F/39
 31680 ;;		Unchanged: 0/0
 31681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31686 ;;Total ram usage:        0 bytes
 31687 ;; Hardware stack levels used:    1
 31688 ;; Hardware stack levels required when called:   15
 31689 ;; This function calls:
 31690 ;;		Nothing
 31691 ;; This function is called by:
 31692 ;;		_SYSTEM_Initialize
 31693 ;; This function uses a reentrant model
 31694 ;;
 31695                           
 31696                           	psect	text132
 31697  01B3A2                     __ptext132:
 31698                           	opt callstack 0
 31699  01B3A2                     _INTERRUPT_Initialize:
 31700                           	opt callstack 0
 31701                           
 31702                           ; BSR set to: 57
 31703                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31704  01B3A2  52E6               	movf	postinc1,f,c
 31705                           
 31706                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 31707                           
 31708                           ;incstack = 0
 31709  01B3A4  8AD2               	bsf	210,5,c	;volatile
 31710                           
 31711                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 31712  01B3A6  AED2               	btfss	16338,7,c	;volatile
 31713  01B3A8  D003               	goto	u9530
 31714  01B3AA  6A0C               	clrf	(btemp+11)^0,c
 31715  01B3AC  2A0C               	incf	(btemp+11)^0,f,c
 31716  01B3AE  D001               	goto	u9548
 31717  01B3B0                     u9530:
 31718  01B3B0  6A0C               	clrf	(btemp+11)^0,c
 31719  01B3B2                     u9548:
 31720                           
 31721                           ;stkvar	_state @ sp[(-1)+0]
 31722  01B3B2  0EFF               	movlw	-1
 31723  01B3B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 31724                           
 31725                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 31726  01B3BA  9ED2               	bcf	16338,7,c	;volatile
 31727                           
 31728                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 31729  01B3BC  0E55               	movlw	85
 31730  01B3BE  6ED4               	movwf	212,c	;volatile
 31731                           
 31732                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 31733  01B3C0  0EAA               	movlw	170
 31734  01B3C2  6ED4               	movwf	212,c	;volatile
 31735                           
 31736                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 31737  01B3C4  90D4               	bcf	212,0,c	;volatile
 31738                           
 31739                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 31740  01B3C6  0138               	movlb	56	; () banked
 31741  01B3C8  6B9F               	clrf	159,b	;volatile
 31742                           
 31743                           ; BSR set to: 56
 31744                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 31745  01B3CA  6B9E               	clrf	158,b	;volatile
 31746                           
 31747                           ; BSR set to: 56
 31748                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 31749  01B3CC  0E08               	movlw	8
 31750  01B3CE  6F9D               	movwf	157,b	;volatile
 31751                           
 31752                           ; BSR set to: 56
 31753                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 31754  01B3D0  0E55               	movlw	85
 31755  01B3D2  6ED4               	movwf	212,c	;volatile
 31756                           
 31757                           ; BSR set to: 56
 31758                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 31759  01B3D4  0EAA               	movlw	170
 31760  01B3D6  6ED4               	movwf	212,c	;volatile
 31761                           
 31762                           ; BSR set to: 56
 31763                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 31764  01B3D8  80D4               	bsf	212,0,c	;volatile
 31765                           
 31766                           ; BSR set to: 56
 31767                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 31768                           ;stkvar	_state @ sp[(-1)+0]
 31769  01B3DA  0EFF               	movlw	-1
 31770  01B3DC  B0E3               	btfsc	plusw1,0,c
 31771  01B3DE  D002               	bra	u9555
 31772  01B3E0  9ED2               	bcf	16338,7,c	;volatile
 31773  01B3E2  D001               	bra	u9556
 31774  01B3E4                     u9555:
 31775  01B3E4  8ED2               	bsf	16338,7,c	;volatile
 31776  01B3E6                     u9556:
 31777                           
 31778                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 31779  01B3E6  0139               	movlb	57	; () banked
 31780  01B3E8  8782               	bsf	130,3,b	;volatile
 31781                           
 31782                           ; BSR set to: 57
 31783                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 31784  01B3EA  8382               	bsf	130,1,b	;volatile
 31785                           
 31786                           ; BSR set to: 57
 31787                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 31788  01B3EC  8182               	bsf	130,0,b	;volatile
 31789                           
 31790                           ; BSR set to: 57
 31791                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 31792  01B3EE  8582               	bsf	130,2,b	;volatile
 31793                           
 31794                           ; BSR set to: 57
 31795                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 31796  01B3F0  8786               	bsf	134,3,b	;volatile
 31797                           
 31798                           ; BSR set to: 57
 31799                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 31800  01B3F2  8586               	bsf	134,2,b	;volatile
 31801                           
 31802                           ; BSR set to: 57
 31803                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 31804  01B3F4  8783               	bsf	131,3,b	;volatile
 31805                           
 31806                           ; BSR set to: 57
 31807                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 31808  01B3F6  8181               	bsf	129,0,b	;volatile
 31809                           
 31810                           ; BSR set to: 57
 31811                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 31812  01B3F8  9185               	bcf	133,0,b	;volatile
 31813                           
 31814                           ; BSR set to: 57
 31815                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 31816  01B3FA  8189               	bsf	137,0,b	;volatile
 31817                           
 31818                           ; BSR set to: 57
 31819                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 31820  01B3FC  9D88               	bcf	136,6,b	;volatile
 31821                           
 31822                           ; BSR set to: 57
 31823                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 31824  01B3FE  9D86               	bcf	134,6,b	;volatile
 31825                           
 31826                           ; BSR set to: 57
 31827                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 31828  01B400  8581               	bsf	129,2,b	;volatile
 31829                           
 31830                           ; BSR set to: 57
 31831                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 31832  01B402  8781               	bsf	129,3,b	;volatile
 31833                           
 31834                           ; BSR set to: 57
 31835                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 31836  01B404  52E5               	movf	postdec1,f,c
 31837  01B406  0012               	return		;funcret
 31838  01B408                     __end_of_INTERRUPT_Initialize:
 31839                           	opt callstack 0
 31840                           
 31841 ;; *************** function _FVR_Initialize *****************
 31842 ;; Defined at:
 31843 ;;		line 58 in file "mcc_generated_files/fvr.c"
 31844 ;; Parameters:    Size  Location     Type
 31845 ;;		None
 31846 ;; Auto vars:     Size  Location     Type
 31847 ;;		None
 31848 ;; Return value:  Size  Location     Type
 31849 ;;                  1  [STACK] void 
 31850 ;; Registers used:
 31851 ;;		wreg, status,2
 31852 ;; Tracked objects:
 31853 ;;		On entry : 3F/39
 31854 ;;		On exit  : 3F/3E
 31855 ;;		Unchanged: 0/0
 31856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31861 ;;Total ram usage:        0 bytes
 31862 ;; Hardware stack levels used:    1
 31863 ;; Hardware stack levels required when called:   15
 31864 ;; This function calls:
 31865 ;;		Nothing
 31866 ;; This function is called by:
 31867 ;;		_SYSTEM_Initialize
 31868 ;; This function uses a reentrant model
 31869 ;;
 31870                           
 31871                           	psect	text133
 31872  01C5BA                     __ptext133:
 31873                           	opt callstack 0
 31874  01C5BA                     _FVR_Initialize:
 31875                           	opt callstack 14
 31876                           
 31877                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 31878                           
 31879                           ; BSR set to: 57
 31880                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31881                           ;incstack = 0
 31882  01C5BA  0EAF               	movlw	175
 31883  01C5BC  013E               	movlb	62	; () banked
 31884  01C5BE  6FC1               	movwf	193,b	;volatile
 31885                           
 31886                           ; BSR set to: 62
 31887                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31888  01C5C0  0012               	return		;funcret
 31889  01C5C2                     __end_of_FVR_Initialize:
 31890                           	opt callstack 0
 31891                           
 31892 ;; *************** function _EXT_INT_Initialize *****************
 31893 ;; Defined at:
 31894 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 31895 ;; Parameters:    Size  Location     Type
 31896 ;;		None
 31897 ;; Auto vars:     Size  Location     Type
 31898 ;;		None
 31899 ;; Return value:  Size  Location     Type
 31900 ;;                  1  [STACK] void 
 31901 ;; Registers used:
 31902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31903 ;; Tracked objects:
 31904 ;;		On entry : 3F/3F
 31905 ;;		On exit  : 3F/39
 31906 ;;		Unchanged: 0/0
 31907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31912 ;;Total ram usage:        0 bytes
 31913 ;; Hardware stack levels used:    1
 31914 ;; Hardware stack levels required when called:   16
 31915 ;; This function calls:
 31916 ;;		_INT0_SetInterruptHandler
 31917 ;;		_INT1_SetInterruptHandler
 31918 ;; This function is called by:
 31919 ;;		_SYSTEM_Initialize
 31920 ;; This function uses a reentrant model
 31921 ;;
 31922                           
 31923                           	psect	text134
 31924  01BDCC                     __ptext134:
 31925                           	opt callstack 0
 31926  01BDCC                     _EXT_INT_Initialize:
 31927                           	opt callstack 13
 31928                           
 31929                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 31930                           
 31931                           ; BSR set to: 62
 31932                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31933                           ;incstack = 0
 31934  01BDCC  0139               	movlb	57	; () banked
 31935  01BDCE  91A1               	bcf	161,0,b	;volatile
 31936                           
 31937                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 31938  01BDD0  90D2               	bcf	210,0,c	;volatile
 31939                           
 31940                           ; BSR set to: 57
 31941                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 31942  01BDD2  0EE6               	movlw	low _INT0_DefaultInterruptHandler
 31943  01BDD4  6EE6               	movwf	postinc1,c
 31944  01BDD6  0EC5               	movlw	high _INT0_DefaultInterruptHandler
 31945  01BDD8  6EE6               	movwf	postinc1,c
 31946  01BDDA  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 31947  01BDDC  6EE6               	movwf	postinc1,c
 31948  01BDDE  EC83  F0E0         	call	_INT0_SetInterruptHandler	;wreg free
 31949                           
 31950                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 31951  01BDE2  0139               	movlb	57	; () banked
 31952  01BDE4  8191               	bsf	145,0,b	;volatile
 31953                           
 31954                           ; BSR set to: 57
 31955                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 31956  01BDE6  91A5               	bcf	165,0,b	;volatile
 31957                           
 31958                           ; BSR set to: 57
 31959                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 31960  01BDE8  92D2               	bcf	210,1,c	;volatile
 31961                           
 31962                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 31963  01BDEA  0EE2               	movlw	low _INT1_DefaultInterruptHandler
 31964  01BDEC  6EE6               	movwf	postinc1,c
 31965  01BDEE  0EC5               	movlw	high _INT1_DefaultInterruptHandler
 31966  01BDF0  6EE6               	movwf	postinc1,c
 31967  01BDF2  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 31968  01BDF4  6EE6               	movwf	postinc1,c
 31969  01BDF6  EC6F  F0E0         	call	_INT1_SetInterruptHandler	;wreg free
 31970                           
 31971                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 31972  01BDFA  0139               	movlb	57	; () banked
 31973  01BDFC  8195               	bsf	149,0,b	;volatile
 31974                           
 31975                           ; BSR set to: 57
 31976                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 31977  01BDFE  0012               	return		;funcret
 31978  01BE00                     __end_of_EXT_INT_Initialize:
 31979                           	opt callstack 0
 31980                           
 31981 ;; *************** function _INT1_SetInterruptHandler *****************
 31982 ;; Defined at:
 31983 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 31984 ;; Parameters:    Size  Location     Type
 31985 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31986 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 31987 ;; Auto vars:     Size  Location     Type
 31988 ;;		None
 31989 ;; Return value:  Size  Location     Type
 31990 ;;                  1  [STACK] void 
 31991 ;; Registers used:
 31992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31993 ;; Tracked objects:
 31994 ;;		On entry : 3F/39
 31995 ;;		On exit  : 0/0
 31996 ;;		Unchanged: 0/0
 31997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32002 ;;Total ram usage:        0 bytes
 32003 ;; Hardware stack levels used:    1
 32004 ;; Hardware stack levels required when called:   15
 32005 ;; This function calls:
 32006 ;;		Nothing
 32007 ;; This function is called by:
 32008 ;;		_EXT_INT_Initialize
 32009 ;;		_start_switch_handler
 32010 ;; This function uses a reentrant model
 32011 ;;
 32012                           
 32013                           	psect	text135
 32014  01C0DE                     __ptext135:
 32015                           	opt callstack 0
 32016  01C0DE                     _INT1_SetInterruptHandler:
 32017                           	opt callstack 14
 32018                           
 32019                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 32020                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32021                           
 32022                           ; BSR set to: 57
 32023                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32024                           ;incstack = 0
 32025  01C0DE  50E1               	movf	fsr1l,w,c
 32026  01C0E0  0FFD               	addlw	-3
 32027  01C0E2  6ED9               	movwf	fsr2l,c
 32028  01C0E4  50E2               	movf	fsr1h,w,c
 32029  01C0E6  6EDA               	movwf	fsr2h,c
 32030  01C0E8  0EFF               	movlw	255
 32031  01C0EA  22DA               	addwfc	fsr2h,f,c
 32032  01C0EC  006F FF78  F094    	movff	postinc2,_INT1_InterruptHandler
 32033  01C0F2  006F FF78  F095    	movff	postinc2,_INT1_InterruptHandler+1
 32034  01C0F8  006F FF74  F096    	movff	postdec2,_INT1_InterruptHandler+2
 32035                           
 32036                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32037  01C0FE  52E5               	movf	postdec1,f,c
 32038  01C100  52E5               	movf	postdec1,f,c
 32039  01C102  52E5               	movf	postdec1,f,c
 32040  01C104  0012               	return		;funcret
 32041  01C106                     __end_of_INT1_SetInterruptHandler:
 32042                           	opt callstack 0
 32043                           
 32044 ;; *************** function _INT0_SetInterruptHandler *****************
 32045 ;; Defined at:
 32046 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 32047 ;; Parameters:    Size  Location     Type
 32048 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32049 ;;		 -> INT0_DefaultInterruptHandler(1), 
 32050 ;; Auto vars:     Size  Location     Type
 32051 ;;		None
 32052 ;; Return value:  Size  Location     Type
 32053 ;;                  1  [STACK] void 
 32054 ;; Registers used:
 32055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32056 ;; Tracked objects:
 32057 ;;		On entry : 3F/39
 32058 ;;		On exit  : 0/0
 32059 ;;		Unchanged: 0/0
 32060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32065 ;;Total ram usage:        0 bytes
 32066 ;; Hardware stack levels used:    1
 32067 ;; Hardware stack levels required when called:   15
 32068 ;; This function calls:
 32069 ;;		Nothing
 32070 ;; This function is called by:
 32071 ;;		_EXT_INT_Initialize
 32072 ;; This function uses a reentrant model
 32073 ;;
 32074                           
 32075                           	psect	text136
 32076  01C106                     __ptext136:
 32077                           	opt callstack 0
 32078  01C106                     _INT0_SetInterruptHandler:
 32079                           	opt callstack 13
 32080                           
 32081                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 32082                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32083                           
 32084                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32085                           ;incstack = 0
 32086  01C106  50E1               	movf	fsr1l,w,c
 32087  01C108  0FFD               	addlw	-3
 32088  01C10A  6ED9               	movwf	fsr2l,c
 32089  01C10C  50E2               	movf	fsr1h,w,c
 32090  01C10E  6EDA               	movwf	fsr2h,c
 32091  01C110  0EFF               	movlw	255
 32092  01C112  22DA               	addwfc	fsr2h,f,c
 32093  01C114  006F FF78  F097    	movff	postinc2,_INT0_InterruptHandler
 32094  01C11A  006F FF78  F098    	movff	postinc2,_INT0_InterruptHandler+1
 32095  01C120  006F FF74  F099    	movff	postdec2,_INT0_InterruptHandler+2
 32096                           
 32097                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32098  01C126  52E5               	movf	postdec1,f,c
 32099  01C128  52E5               	movf	postdec1,f,c
 32100  01C12A  52E5               	movf	postdec1,f,c
 32101  01C12C  0012               	return		;funcret
 32102  01C12E                     __end_of_INT0_SetInterruptHandler:
 32103                           	opt callstack 0
 32104                           
 32105 ;; *************** function _DMA2_Initialize *****************
 32106 ;; Defined at:
 32107 ;;		line 61 in file "mcc_generated_files/dma2.c"
 32108 ;; Parameters:    Size  Location     Type
 32109 ;;		None
 32110 ;; Auto vars:     Size  Location     Type
 32111 ;;		None
 32112 ;; Return value:  Size  Location     Type
 32113 ;;                  1  [STACK] void 
 32114 ;; Registers used:
 32115 ;;		wreg, status,2
 32116 ;; Tracked objects:
 32117 ;;		On entry : 3F/3D
 32118 ;;		On exit  : 3F/3B
 32119 ;;		Unchanged: 0/0
 32120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32125 ;;Total ram usage:        0 bytes
 32126 ;; Hardware stack levels used:    1
 32127 ;; Hardware stack levels required when called:   15
 32128 ;; This function calls:
 32129 ;;		Nothing
 32130 ;; This function is called by:
 32131 ;;		_SYSTEM_Initialize
 32132 ;; This function uses a reentrant model
 32133 ;;
 32134                           
 32135                           	psect	text137
 32136  01B644                     __ptext137:
 32137                           	opt callstack 0
 32138  01B644                     _DMA2_Initialize:
 32139                           	opt callstack 14
 32140                           
 32141                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 32142                           
 32143                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32144                           ;incstack = 0
 32145  01B644  0E00               	movlw	0
 32146  01B646  013B               	movlb	59	; () banked
 32147  01B648  6FD9               	movwf	217,b	;volatile
 32148  01B64A  0E10               	movlw	16
 32149  01B64C  6FDA               	movwf	218,b	;volatile
 32150  01B64E  0E00               	movlw	0
 32151  01B650  6FDB               	movwf	219,b	;volatile
 32152                           
 32153                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 32154  01B652  0E3F               	movlw	63
 32155  01B654  6FD1               	movwf	209,b	;volatile
 32156  01B656  0EBB               	movlw	187
 32157  01B658  6FD0               	movwf	208,b	;volatile
 32158                           
 32159                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 32160  01B65A  0E03               	movlw	3
 32161  01B65C  6FDD               	movwf	221,b	;volatile
 32162                           
 32163                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 32164  01B65E  0E00               	movlw	0
 32165  01B660  6FD8               	movwf	216,b	;volatile
 32166  01B662  0E01               	movlw	1
 32167  01B664  6FD7               	movwf	215,b	;volatile
 32168                           
 32169                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 32170  01B666  0E00               	movlw	0
 32171  01B668  6FCF               	movwf	207,b	;volatile
 32172  01B66A  0E01               	movlw	1
 32173  01B66C  6FCE               	movwf	206,b	;volatile
 32174                           
 32175                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 32176  01B66E  0E1C               	movlw	28
 32177  01B670  6FDF               	movwf	223,b	;volatile
 32178                           
 32179                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 32180  01B672  0E3D               	movlw	61
 32181  01B674  6FDE               	movwf	222,b	;volatile
 32182                           
 32183                           ; BSR set to: 59
 32184                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 32185  01B676  0139               	movlb	57	; () banked
 32186  01B678  97A5               	bcf	165,3,b	;volatile
 32187                           
 32188                           ; BSR set to: 57
 32189                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 32190  01B67A  95A5               	bcf	165,2,b	;volatile
 32191                           
 32192                           ; BSR set to: 57
 32193                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 32194  01B67C  9BA5               	bcf	165,5,b	;volatile
 32195                           
 32196                           ; BSR set to: 57
 32197                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 32198  01B67E  99A5               	bcf	165,4,b	;volatile
 32199                           
 32200                           ; BSR set to: 57
 32201                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 32202  01B680  9795               	bcf	149,3,b	;volatile
 32203                           
 32204                           ; BSR set to: 57
 32205                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 32206  01B682  9595               	bcf	149,2,b	;volatile
 32207                           
 32208                           ; BSR set to: 57
 32209                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 32210  01B684  9B95               	bcf	149,5,b	;volatile
 32211                           
 32212                           ; BSR set to: 57
 32213                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 32214  01B686  9995               	bcf	149,4,b	;volatile
 32215  01B688  9ED2               	bcf	16338,7,c	;# 
 32216  01B68A  0139               	banksel	14831	;# 
 32217  01B68C  0E55               	movlw	85	;# 
 32218  01B68E  6FEF               	movwf	14831,b	;# 
 32219  01B690  0EAA               	movlw	170	;# 
 32220  01B692  6FEF               	movwf	14831,b	;# 
 32221  01B694  81EF               	bsf	14831,0,b	;# 
 32222  01B696  8ED2               	bsf	16338,7,c	;# 
 32223                           
 32224                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 32225  01B698  013B               	movlb	59	; () banked
 32226  01B69A  6BDC               	clrf	220,b	;volatile
 32227                           
 32228                           ; BSR set to: 59
 32229                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32230  01B69C  0012               	return		;funcret
 32231  01B69E                     __end_of_DMA2_Initialize:
 32232                           	opt callstack 0
 32233                           
 32234 ;; *************** function _DMA1_Initialize *****************
 32235 ;; Defined at:
 32236 ;;		line 86 in file "mcc_generated_files/dma1.c"
 32237 ;; Parameters:    Size  Location     Type
 32238 ;;		None
 32239 ;; Auto vars:     Size  Location     Type
 32240 ;;		None
 32241 ;; Return value:  Size  Location     Type
 32242 ;;                  1  [STACK] void 
 32243 ;; Registers used:
 32244 ;;		wreg, status,2
 32245 ;; Tracked objects:
 32246 ;;		On entry : 3F/3B
 32247 ;;		On exit  : 3F/3B
 32248 ;;		Unchanged: 0/0
 32249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32254 ;;Total ram usage:        0 bytes
 32255 ;; Hardware stack levels used:    1
 32256 ;; Hardware stack levels required when called:   15
 32257 ;; This function calls:
 32258 ;;		Nothing
 32259 ;; This function is called by:
 32260 ;;		_SYSTEM_Initialize
 32261 ;; This function uses a reentrant model
 32262 ;;
 32263                           
 32264                           	psect	text138
 32265  01B264                     __ptext138:
 32266                           	opt callstack 0
 32267  01B264                     _DMA1_Initialize:
 32268                           	opt callstack 14
 32269                           
 32270                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 32271                           
 32272                           ; BSR set to: 59
 32273                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32274                           ;incstack = 0
 32275  01B264  0E00               	movlw	0
 32276  01B266  013B               	movlb	59	; () banked
 32277  01B268  6FF9               	movwf	249,b	;volatile
 32278  01B26A  0E10               	movlw	16
 32279  01B26C  6FFA               	movwf	250,b	;volatile
 32280  01B26E  0E00               	movlw	0
 32281  01B270  6FFB               	movwf	251,b	;volatile
 32282                           
 32283                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 32284  01B272  0E3D               	movlw	61
 32285  01B274  6FF1               	movwf	241,b	;volatile
 32286  01B276  0E11               	movlw	17
 32287  01B278  6FF0               	movwf	240,b	;volatile
 32288                           
 32289                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 32290  01B27A  0E03               	movlw	3
 32291  01B27C  6FFD               	movwf	253,b	;volatile
 32292                           
 32293                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 32294  01B27E  0E00               	movlw	0
 32295  01B280  6FF8               	movwf	248,b	;volatile
 32296  01B282  0E01               	movlw	1
 32297  01B284  6FF7               	movwf	247,b	;volatile
 32298                           
 32299                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 32300  01B286  0E00               	movlw	0
 32301  01B288  6FEF               	movwf	239,b	;volatile
 32302  01B28A  0E01               	movlw	1
 32303  01B28C  6FEE               	movwf	238,b	;volatile
 32304                           
 32305                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 32306  01B28E  0E15               	movlw	21
 32307  01B290  6FFF               	movwf	255,b	;volatile
 32308                           
 32309                           ; BSR set to: 59
 32310                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 32311  01B292  6BFE               	clrf	254,b	;volatile
 32312                           
 32313                           ; BSR set to: 59
 32314                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 32315  01B294  0139               	movlb	57	; () banked
 32316  01B296  93A2               	bcf	162,1,b	;volatile
 32317                           
 32318                           ; BSR set to: 57
 32319                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 32320  01B298  91A2               	bcf	162,0,b	;volatile
 32321                           
 32322                           ; BSR set to: 57
 32323                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 32324  01B29A  97A2               	bcf	162,3,b	;volatile
 32325                           
 32326                           ; BSR set to: 57
 32327                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 32328  01B29C  95A2               	bcf	162,2,b	;volatile
 32329                           
 32330                           ; BSR set to: 57
 32331                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 32332  01B29E  8392               	bsf	146,1,b	;volatile
 32333                           
 32334                           ; BSR set to: 57
 32335                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 32336  01B2A0  8192               	bsf	146,0,b	;volatile
 32337                           
 32338                           ; BSR set to: 57
 32339                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 32340  01B2A2  8792               	bsf	146,3,b	;volatile
 32341                           
 32342                           ; BSR set to: 57
 32343                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 32344  01B2A4  8592               	bsf	146,2,b	;volatile
 32345                           
 32346                           ; BSR set to: 57
 32347                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 32348  01B2A6  6BF1               	clrf	241,b	;volatile
 32349                           
 32350                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 32351  01B2A8  0E01               	movlw	1
 32352  01B2AA  6FF2               	movwf	242,b	;volatile
 32353                           
 32354                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 32355  01B2AC  0E04               	movlw	4
 32356  01B2AE  6FF3               	movwf	243,b	;volatile
 32357                           
 32358                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 32359  01B2B0  0E02               	movlw	2
 32360  01B2B2  6FF4               	movwf	244,b	;volatile
 32361                           
 32362                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 32363  01B2B4  0E03               	movlw	3
 32364  01B2B6  6FF7               	movwf	247,b	;volatile
 32365  01B2B8  9ED2               	bcf	16338,7,c	;# 
 32366  01B2BA  0139               	banksel	14831	;# 
 32367  01B2BC  0E55               	movlw	85	;# 
 32368  01B2BE  6FEF               	movwf	14831,b	;# 
 32369  01B2C0  0EAA               	movlw	170	;# 
 32370  01B2C2  6FEF               	movwf	14831,b	;# 
 32371  01B2C4  81EF               	bsf	14831,0,b	;# 
 32372  01B2C6  8ED2               	bsf	16338,7,c	;# 
 32373                           
 32374                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 32375  01B2C8  013B               	movlb	59	; () banked
 32376  01B2CA  6BFC               	clrf	252,b	;volatile
 32377                           
 32378                           ; BSR set to: 59
 32379                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32380  01B2CC  0012               	return		;funcret
 32381  01B2CE                     __end_of_DMA1_Initialize:
 32382                           	opt callstack 0
 32383                           
 32384 ;; *************** function _CLKREF_Initialize *****************
 32385 ;; Defined at:
 32386 ;;		line 58 in file "mcc_generated_files/clkref.c"
 32387 ;; Parameters:    Size  Location     Type
 32388 ;;		None
 32389 ;; Auto vars:     Size  Location     Type
 32390 ;;		None
 32391 ;; Return value:  Size  Location     Type
 32392 ;;                  1  [STACK] void 
 32393 ;; Registers used:
 32394 ;;		wreg, status,2
 32395 ;; Tracked objects:
 32396 ;;		On entry : 3F/3B
 32397 ;;		On exit  : 3F/3C
 32398 ;;		Unchanged: 0/0
 32399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32404 ;;Total ram usage:        0 bytes
 32405 ;; Hardware stack levels used:    1
 32406 ;; Hardware stack levels required when called:   15
 32407 ;; This function calls:
 32408 ;;		Nothing
 32409 ;; This function is called by:
 32410 ;;		_SYSTEM_Initialize
 32411 ;; This function uses a reentrant model
 32412 ;;
 32413                           
 32414                           	psect	text139
 32415  01C562                     __ptext139:
 32416                           	opt callstack 0
 32417  01C562                     _CLKREF_Initialize:
 32418                           	opt callstack 14
 32419                           
 32420                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 32421                           
 32422                           ; BSR set to: 59
 32423                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32424                           ;incstack = 0
 32425  01C562  013C               	movlb	60	; () banked
 32426  01C564  6BE6               	clrf	230,b	;volatile
 32427                           
 32428                           ; BSR set to: 60
 32429                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 32430  01C566  0E94               	movlw	148
 32431  01C568  6FE5               	movwf	229,b	;volatile
 32432                           
 32433                           ; BSR set to: 60
 32434                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32435  01C56A  0012               	return		;funcret
 32436  01C56C                     __end_of_CLKREF_Initialize:
 32437                           	opt callstack 0
 32438                           
 32439 ;; *************** function _ADCC_Initialize *****************
 32440 ;; Defined at:
 32441 ;;		line 65 in file "mcc_generated_files/adcc.c"
 32442 ;; Parameters:    Size  Location     Type
 32443 ;;		None
 32444 ;; Auto vars:     Size  Location     Type
 32445 ;;		None
 32446 ;; Return value:  Size  Location     Type
 32447 ;;                  1  [STACK] void 
 32448 ;; Registers used:
 32449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 32450 ;; Tracked objects:
 32451 ;;		On entry : 3F/3E
 32452 ;;		On exit  : 0/0
 32453 ;;		Unchanged: 0/0
 32454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32459 ;;Total ram usage:        0 bytes
 32460 ;; Hardware stack levels used:    1
 32461 ;; Hardware stack levels required when called:   16
 32462 ;; This function calls:
 32463 ;;		_ADCC_SetADIInterruptHandler
 32464 ;;		_ADCC_SetADTIInterruptHandler
 32465 ;; This function is called by:
 32466 ;;		_SYSTEM_Initialize
 32467 ;; This function uses a reentrant model
 32468 ;;
 32469                           
 32470                           	psect	text140
 32471  01B2CE                     __ptext140:
 32472                           	opt callstack 0
 32473  01B2CE                     _ADCC_Initialize:
 32474                           	opt callstack 13
 32475                           
 32476                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 32477                           
 32478                           ; BSR set to: 60
 32479                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32480                           ;incstack = 0
 32481  01B2CE  013E               	movlb	62	; () banked
 32482  01B2D0  6BDE               	clrf	222,b	;volatile
 32483                           
 32484                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 32485  01B2D2  6BDF               	clrf	223,b	;volatile
 32486                           
 32487                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 32488  01B2D4  6BE0               	clrf	224,b	;volatile
 32489                           
 32490                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 32491  01B2D6  6BE1               	clrf	225,b	;volatile
 32492                           
 32493                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 32494  01B2D8  6BE4               	clrf	228,b	;volatile
 32495                           
 32496                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 32497  01B2DA  6BE5               	clrf	229,b	;volatile
 32498                           
 32499                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 32500  01B2DC  6BEA               	clrf	234,b	;volatile
 32501                           
 32502                           ; BSR set to: 62
 32503                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 32504  01B2DE  0E40               	movlw	64
 32505  01B2E0  6FEC               	movwf	236,b	;volatile
 32506                           
 32507                           ; BSR set to: 62
 32508                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 32509  01B2E2  6BF1               	clrf	241,b	;volatile
 32510                           
 32511                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 32512  01B2E4  0E20               	movlw	32
 32513  01B2E6  6FF3               	movwf	243,b	;volatile
 32514                           
 32515                           ; BSR set to: 62
 32516                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 32517  01B2E8  6BF4               	clrf	244,b	;volatile
 32518                           
 32519                           ; BSR set to: 62
 32520                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 32521  01B2EA  6BF5               	clrf	245,b	;volatile
 32522                           
 32523                           ; BSR set to: 62
 32524                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 32525  01B2EC  6BF6               	clrf	246,b	;volatile
 32526                           
 32527                           ; BSR set to: 62
 32528                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 32529  01B2EE  6BF7               	clrf	247,b	;volatile
 32530                           
 32531                           ; BSR set to: 62
 32532                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 32533  01B2F0  6BF9               	clrf	249,b	;volatile
 32534                           
 32535                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 32536  01B2F2  0E5B               	movlw	91
 32537  01B2F4  6FFA               	movwf	250,b	;volatile
 32538                           
 32539                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 32540  01B2F6  0E27               	movlw	39
 32541  01B2F8  6FFB               	movwf	251,b	;volatile
 32542                           
 32543                           ; BSR set to: 62
 32544                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 32545  01B2FA  6BFC               	clrf	252,b	;volatile
 32546                           
 32547                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 32548  01B2FC  0E02               	movlw	2
 32549  01B2FE  6FFD               	movwf	253,b	;volatile
 32550                           
 32551                           ; BSR set to: 62
 32552                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 32553  01B300  6BFE               	clrf	254,b	;volatile
 32554                           
 32555                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 32556  01B302  0E07               	movlw	7
 32557  01B304  6FFF               	movwf	255,b	;volatile
 32558                           
 32559                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 32560  01B306  0E84               	movlw	132
 32561  01B308  6FF8               	movwf	248,b	;volatile
 32562                           
 32563                           ; BSR set to: 62
 32564                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 32565  01B30A  0139               	movlb	57	; () banked
 32566  01B30C  95A1               	bcf	161,2,b	;volatile
 32567                           
 32568                           ; BSR set to: 57
 32569                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 32570  01B30E  8591               	bsf	145,2,b	;volatile
 32571                           
 32572                           ; BSR set to: 57
 32573                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 32574  01B310  0EE8               	movlw	low _ADCC_DefaultInterruptHandler
 32575  01B312  6EE6               	movwf	postinc1,c
 32576  01B314  0EC5               	movlw	high _ADCC_DefaultInterruptHandler
 32577  01B316  6EE6               	movwf	postinc1,c
 32578  01B318  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 32579  01B31A  6EE6               	movwf	postinc1,c
 32580  01B31C  ECAB  F0E0         	call	_ADCC_SetADIInterruptHandler	;wreg free
 32581                           
 32582                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 32583  01B320  0139               	movlb	57	; () banked
 32584  01B322  97A1               	bcf	161,3,b	;volatile
 32585                           
 32586                           ; BSR set to: 57
 32587                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 32588  01B324  8791               	bsf	145,3,b	;volatile
 32589                           
 32590                           ; BSR set to: 57
 32591                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 32592  01B326  0EE8               	movlw	low _ADCC_DefaultInterruptHandler
 32593  01B328  6EE6               	movwf	postinc1,c
 32594  01B32A  0EC5               	movlw	high _ADCC_DefaultInterruptHandler
 32595  01B32C  6EE6               	movwf	postinc1,c
 32596  01B32E  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 32597  01B330  6EE6               	movwf	postinc1,c
 32598  01B332  EC97  F0E0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 32599                           
 32600                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32601  01B336  0012               	return		;funcret
 32602  01B338                     __end_of_ADCC_Initialize:
 32603                           	opt callstack 0
 32604                           
 32605 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 32606 ;; Defined at:
 32607 ;;		line 336 in file "mcc_generated_files/adcc.c"
 32608 ;; Parameters:    Size  Location     Type
 32609 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32610 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 32611 ;; Auto vars:     Size  Location     Type
 32612 ;;		None
 32613 ;; Return value:  Size  Location     Type
 32614 ;;                  1  [STACK] void 
 32615 ;; Registers used:
 32616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32617 ;; Tracked objects:
 32618 ;;		On entry : 0/0
 32619 ;;		On exit  : 0/0
 32620 ;;		Unchanged: 0/0
 32621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32626 ;;Total ram usage:        0 bytes
 32627 ;; Hardware stack levels used:    1
 32628 ;; Hardware stack levels required when called:   15
 32629 ;; This function calls:
 32630 ;;		Nothing
 32631 ;; This function is called by:
 32632 ;;		_ADCC_Initialize
 32633 ;;		_start_adc_scan
 32634 ;; This function uses a reentrant model
 32635 ;;
 32636                           
 32637                           	psect	text141
 32638  01C12E                     __ptext141:
 32639                           	opt callstack 0
 32640  01C12E                     _ADCC_SetADTIInterruptHandler:
 32641                           	opt callstack 14
 32642                           
 32643                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 32644                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32645                           
 32646                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32647                           ;incstack = 0
 32648  01C12E  50E1               	movf	fsr1l,w,c
 32649  01C130  0FFD               	addlw	-3
 32650  01C132  6ED9               	movwf	fsr2l,c
 32651  01C134  50E2               	movf	fsr1h,w,c
 32652  01C136  6EDA               	movwf	fsr2h,c
 32653  01C138  0EFF               	movlw	255
 32654  01C13A  22DA               	addwfc	fsr2h,f,c
 32655  01C13C  006F FF78  F085    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 32656  01C142  006F FF78  F086    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 32657  01C148  006F FF74  F087    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 32658                           
 32659                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 32660  01C14E  52E5               	movf	postdec1,f,c
 32661  01C150  52E5               	movf	postdec1,f,c
 32662  01C152  52E5               	movf	postdec1,f,c
 32663  01C154  0012               	return		;funcret
 32664  01C156                     __end_of_ADCC_SetADTIInterruptHandler:
 32665                           	opt callstack 0
 32666                           
 32667 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 32668 ;; Defined at:
 32669 ;;		line 323 in file "mcc_generated_files/adcc.c"
 32670 ;; Parameters:    Size  Location     Type
 32671 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32672 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 32673 ;; Auto vars:     Size  Location     Type
 32674 ;;		None
 32675 ;; Return value:  Size  Location     Type
 32676 ;;                  1  [STACK] void 
 32677 ;; Registers used:
 32678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32679 ;; Tracked objects:
 32680 ;;		On entry : 6/0
 32681 ;;		On exit  : 0/0
 32682 ;;		Unchanged: 0/0
 32683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32688 ;;Total ram usage:        0 bytes
 32689 ;; Hardware stack levels used:    1
 32690 ;; Hardware stack levels required when called:   15
 32691 ;; This function calls:
 32692 ;;		Nothing
 32693 ;; This function is called by:
 32694 ;;		_ADCC_Initialize
 32695 ;;		_start_adc_scan
 32696 ;; This function uses a reentrant model
 32697 ;;
 32698                           
 32699                           	psect	text142
 32700  01C156                     __ptext142:
 32701                           	opt callstack 0
 32702  01C156                     _ADCC_SetADIInterruptHandler:
 32703                           	opt callstack 14
 32704                           
 32705                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 32706                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32707                           
 32708                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32709                           ;incstack = 0
 32710  01C156  50E1               	movf	fsr1l,w,c
 32711  01C158  0FFD               	addlw	-3
 32712  01C15A  6ED9               	movwf	fsr2l,c
 32713  01C15C  50E2               	movf	fsr1h,w,c
 32714  01C15E  6EDA               	movwf	fsr2h,c
 32715  01C160  0EFF               	movlw	255
 32716  01C162  22DA               	addwfc	fsr2h,f,c
 32717  01C164  006F FF78  F088    	movff	postinc2,_ADCC_ADI_InterruptHandler
 32718  01C16A  006F FF78  F089    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 32719  01C170  006F FF74  F08A    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 32720                           
 32721                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 32722  01C176  52E5               	movf	postdec1,f,c
 32723  01C178  52E5               	movf	postdec1,f,c
 32724  01C17A  52E5               	movf	postdec1,f,c
 32725  01C17C  0012               	return		;funcret
 32726  01C17E                     __end_of_ADCC_SetADIInterruptHandler:
 32727                           	opt callstack 0
 32728                           
 32729 ;; *************** function _INT1_ISR *****************
 32730 ;; Defined at:
 32731 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 32732 ;; Parameters:    Size  Location     Type
 32733 ;;		None
 32734 ;; Auto vars:     Size  Location     Type
 32735 ;;		None
 32736 ;; Return value:  Size  Location     Type
 32737 ;;                  1    wreg      void 
 32738 ;; Registers used:
 32739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 32740 ;; Tracked objects:
 32741 ;;		On entry : 0/0
 32742 ;;		On exit  : 0/0
 32743 ;;		Unchanged: 0/0
 32744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32747 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32748 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32749 ;;Total ram usage:        4 bytes
 32750 ;; Hardware stack levels used:    1
 32751 ;; Hardware stack levels required when called:    5
 32752 ;; This function calls:
 32753 ;;		_INT1_CallBack
 32754 ;; This function is called by:
 32755 ;;		Interrupt level 1
 32756 ;; This function uses a non-reentrant model
 32757 ;;
 32758                           
 32759                           	psect	text143
 32760  01BBDC                     __ptext143:
 32761                           	opt callstack 0
 32762  01BBDC                     _INT1_ISR:
 32763                           	opt callstack 11
 32764                           
 32765                           ;incstack = 0
 32766  01BBDC  006F FF60  F027    	movff	status,??_INT1_ISR
 32767  01BBE2  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 32768  01BBE8  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 32769  01BBEE  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 32770  01BBF4  EE16  F0AF         	lfsr	1,___intlo_sp
 32771                           
 32772                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 32773  01BBF8  0139               	movlb	57	; () banked
 32774  01BBFA  91A5               	bcf	165,0,b	;volatile
 32775                           
 32776                           ; BSR set to: 57
 32777                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 32778  01BBFC  EC0E  F0E1         	call	_INT1_CallBack	;wreg free
 32779  01BC00  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 32780  01BC06  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 32781  01BC0C  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 32782  01BC12  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 32783  01BC18  0011               	retfie		f
 32784  01BC1A                     __end_of_INT1_ISR:
 32785                           	opt callstack 0
 32786                           
 32787 ;; *************** function _INT1_CallBack *****************
 32788 ;; Defined at:
 32789 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 32790 ;; Parameters:    Size  Location     Type
 32791 ;;		None
 32792 ;; Auto vars:     Size  Location     Type
 32793 ;;		None
 32794 ;; Return value:  Size  Location     Type
 32795 ;;                  1  [STACK] void 
 32796 ;; Registers used:
 32797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 32798 ;; Tracked objects:
 32799 ;;		On entry : 3F/39
 32800 ;;		On exit  : 0/0
 32801 ;;		Unchanged: 0/0
 32802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32807 ;;Total ram usage:        0 bytes
 32808 ;; Hardware stack levels used:    1
 32809 ;; Hardware stack levels required when called:    4
 32810 ;; This function calls:
 32811 ;;		Absolute function
 32812 ;;		_INT1_DefaultInterruptHandler
 32813 ;;		_switch_handler
 32814 ;; This function is called by:
 32815 ;;		_INT1_ISR
 32816 ;; This function uses a reentrant model
 32817 ;;
 32818                           
 32819                           	psect	text144
 32820  01C21C                     __ptext144:
 32821                           	opt callstack 0
 32822  01C21C                     _INT1_CallBack:
 32823                           	opt callstack 11
 32824                           
 32825                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 32826                           
 32827                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32828                           ;incstack = 0
 32829  01C21C  0100               	movlb	0	; () banked
 32830  01C21E  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 32831  01C220  1195               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 32832  01C222  1196               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 32833  01C224  B4D8               	btfsc	status,2,c
 32834  01C226  0012               	return	
 32835                           
 32836                           ; BSR set to: 0
 32837                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 32838  01C228  D801               	call	u1012_28
 32839  01C22A  0012               	return	
 32840  01C22C                     u1012_28:
 32841  01C22C  0005               	push	
 32842  01C22E  6EFA               	movwf	pclath,c
 32843  01C230  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 32844  01C232  6EFD               	movwf	tosl,c
 32845  01C234  5195               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 32846  01C236  6EFE               	movwf	tosh,c
 32847  01C238  5196               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 32848  01C23A  6EFF               	movwf	tosu,c
 32849  01C23C  50FA               	movf	pclath,w,c
 32850  01C23E  0012               	return		;indir
 32851  01C240                     __end_of_INT1_CallBack:
 32852                           	opt callstack 0
 32853                           
 32854 ;; *************** function _INT1_DefaultInterruptHandler *****************
 32855 ;; Defined at:
 32856 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 32857 ;; Parameters:    Size  Location     Type
 32858 ;;		None
 32859 ;; Auto vars:     Size  Location     Type
 32860 ;;		None
 32861 ;; Return value:  Size  Location     Type
 32862 ;;                  1  [STACK] void 
 32863 ;; Registers used:
 32864 ;;		None
 32865 ;; Tracked objects:
 32866 ;;		On entry : 3F/0
 32867 ;;		On exit  : 0/0
 32868 ;;		Unchanged: 0/0
 32869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32874 ;;Total ram usage:        0 bytes
 32875 ;; Hardware stack levels used:    1
 32876 ;; Hardware stack levels required when called:    3
 32877 ;; This function calls:
 32878 ;;		Nothing
 32879 ;; This function is called by:
 32880 ;;		_EXT_INT_Initialize
 32881 ;;		_INT1_CallBack
 32882 ;; This function uses a reentrant model
 32883 ;;
 32884                           
 32885                           	psect	text145
 32886  01C5E2                     __ptext145:
 32887                           	opt callstack 0
 32888  01C5E2                     _INT1_DefaultInterruptHandler:
 32889                           	opt callstack 11
 32890                           
 32891                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32892                           
 32893                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32894                           ;incstack = 0
 32895  01C5E2  0012               	return		;funcret
 32896  01C5E4                     __end_of_INT1_DefaultInterruptHandler:
 32897                           	opt callstack 0
 32898                           
 32899 ;; *************** function _switch_handler *****************
 32900 ;; Defined at:
 32901 ;;		line 58 in file "dio.c"
 32902 ;; Parameters:    Size  Location     Type
 32903 ;;		None
 32904 ;; Auto vars:     Size  Location     Type
 32905 ;;  i               1  [STACK] unsigned char 
 32906 ;;  sw_value        1  [STACK] unsigned char 
 32907 ;; Return value:  Size  Location     Type
 32908 ;;                  1  [STACK] void 
 32909 ;; Registers used:
 32910 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 32911 ;; Tracked objects:
 32912 ;;		On entry : 3F/0
 32913 ;;		On exit  : 0/0
 32914 ;;		Unchanged: 0/0
 32915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32920 ;;Total ram usage:        0 bytes
 32921 ;; Hardware stack levels used:    1
 32922 ;; Hardware stack levels required when called:    3
 32923 ;; This function calls:
 32924 ;;		Nothing
 32925 ;; This function is called by:
 32926 ;;		_start_switch_handler
 32927 ;;		_INT1_CallBack
 32928 ;; This function uses a reentrant model
 32929 ;;
 32930                           
 32931                           	psect	text146
 32932  019768                     __ptext146:
 32933                           	opt callstack 0
 32934  019768                     _switch_handler:
 32935                           	opt callstack 0
 32936                           
 32937                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32938  019768  52E6               	movf	postinc1,f,c
 32939  01976A  52E6               	movf	postinc1,f,c
 32940                           
 32941                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 32942                           ;stkvar	_i @ sp[(-2)+0]
 32943                           
 32944                           ;incstack = 0
 32945  01976C  0EFE               	movlw	-2
 32946  01976E  6AE3               	clrf	plusw1,c
 32947  019770  9ABF               	bcf	191,5,c	;volatile
 32948                           
 32949                           ;dio.c: 72:  __nop();
 32950  019772  F000               	nop	
 32951                           
 32952                           ;dio.c: 73:  __nop();
 32953  019774  F000               	nop	
 32954                           
 32955                           ;dio.c: 74:  __nop();
 32956  019776  F000               	nop	
 32957                           
 32958                           ;dio.c: 75:  __nop();
 32959  019778  F000               	nop	
 32960                           
 32961                           ;dio.c: 76:  __nop();
 32962  01977A  F000               	nop	
 32963                           
 32964                           ;dio.c: 77:  __nop();
 32965  01977C  F000               	nop	
 32966  01977E  D013               	goto	l10757
 32967  019780                     l10745:
 32968                           
 32969                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 32970  019780  A6CF               	btfss	207,3,c	;volatile
 32971  019782  D00B               	goto	u981_20
 32972  019784  D007               	goto	u981_21
 32973  019786                     u980_28:
 32974                           
 32975                           ;stkvar	_sw_value @ sp[(-2)+1]
 32976  019786  0EFF               	movlw	-1
 32977  019788  0060  F033  FFE3   	movff	btemp+11,plusw1
 32978                           
 32979                           ;dio.c: 83:    break;
 32980  01978E  D021               	goto	l10759
 32981  019790                     l10747:
 32982                           
 32983                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 32984  019790  A4CF               	btfss	207,2,c	;volatile
 32985  019792  D003               	goto	u981_20
 32986  019794                     u981_21:
 32987  019794  6A0C               	clrf	(btemp+11)^0,c
 32988  019796  2A0C               	incf	(btemp+11)^0,f,c
 32989  019798  D7F6               	goto	u980_28
 32990  01979A                     u981_20:
 32991  01979A  6A0C               	clrf	(btemp+11)^0,c
 32992  01979C  D7F4               	goto	u980_28
 32993  01979E                     l10749:
 32994                           
 32995                           ;dio.c: 88:    sw_value = 1;
 32996                           ;stkvar	_sw_value @ sp[(-2)+1]
 32997  01979E  0EFF               	movlw	-1
 32998  0197A0  6AE3               	clrf	plusw1,c
 32999  0197A2  2AE3               	incf	plusw1,f,c
 33000                           
 33001                           ;dio.c: 89:    break;
 33002  0197A4  D016               	goto	l10759
 33003  0197A6                     l10757:
 33004                           
 33005                           ;stkvar	_i @ sp[(-2)+0]
 33006  0197A6  0EFE               	movlw	-2
 33007  0197A8  50E3               	movf	plusw1,w,c
 33008  0197AA  6E0B               	movwf	(btemp+10)^0,c
 33009  0197AC  6A0C               	clrf	(btemp+11)^0,c
 33010                           
 33011                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33012                           ; Switch size 1, requested type "simple"
 33013                           ; Number of cases is 1, Range of values is 0 to 0
 33014                           ; switch strategies available:
 33015                           ; Name         Instructions Cycles
 33016                           ; simple_byte            4     3 (average)
 33017                           ;	Chosen strategy is simple_byte
 33018  0197AE  500C               	movf	(btemp+11)^0,w,c
 33019  0197B0  0A00               	xorlw	0	; case 0
 33020  0197B2  A4D8               	btfss	status,2,c
 33021  0197B4  D7F4               	goto	l10749
 33022                           
 33023                           ; Switch size 1, requested type "simple"
 33024                           ; Number of cases is 4, Range of values is 0 to 3
 33025                           ; switch strategies available:
 33026                           ; Name         Instructions Cycles
 33027                           ; simple_byte           13     7 (average)
 33028                           ;	Chosen strategy is simple_byte
 33029  0197B6  500B               	movf	(btemp+10)^0,w,c
 33030  0197B8  0A00               	xorlw	0	; case 0
 33031  0197BA  B4D8               	btfsc	status,2,c
 33032  0197BC  D7F0               	goto	l10749
 33033  0197BE  0A01               	xorlw	1	; case 1
 33034  0197C0  B4D8               	btfsc	status,2,c
 33035  0197C2  D7ED               	goto	l10749
 33036  0197C4  0A03               	xorlw	3	; case 2
 33037  0197C6  B4D8               	btfsc	status,2,c
 33038  0197C8  D7E3               	goto	l10747
 33039  0197CA  0A01               	xorlw	1	; case 3
 33040  0197CC  B4D8               	btfsc	status,2,c
 33041  0197CE  D7D8               	goto	l10745
 33042  0197D0  D7E6               	goto	l10749
 33043  0197D2                     l10759:
 33044                           
 33045                           ;dio.c: 99:   if (sw_value) {
 33046                           ;stkvar	_sw_value @ sp[(-2)+1]
 33047  0197D2  0EFF               	movlw	-1
 33048  0197D4  50E3               	movf	plusw1,w,c
 33049  0197D6  B4D8               	btfsc	status,2,c
 33050  0197D8  D018               	goto	l10765
 33051                           
 33052                           ;dio.c: 100:    if (S.button[i].sw == SW_ON) {
 33053                           ;stkvar	_i @ sp[(-2)+0]
 33054  0197DA  0EFE               	movlw	-2
 33055  0197DC  50E3               	movf	plusw1,w,c
 33056  0197DE  0D05               	mullw	5
 33057  0197E0  0E54               	movlw	low _S
 33058  0197E2  24F3               	addwf	243,w,c
 33059  0197E4  6ED9               	movwf	fsr2l,c
 33060  0197E6  0E02               	movlw	high _S
 33061  0197E8  20F4               	addwfc	prodh,w,c
 33062  0197EA  6EDA               	movwf	fsr2h,c
 33063  0197EC  04DE               	decf	postinc2,w,c
 33064  0197EE  A4D8               	btfss	status,2,c
 33065  0197F0  D049               	goto	l10773
 33066                           
 33067                           ;dio.c: 101:     S.button[i].sw = SW_OFF;
 33068                           ;stkvar	_i @ sp[(-2)+0]
 33069  0197F2  0EFE               	movlw	-2
 33070  0197F4  50E3               	movf	plusw1,w,c
 33071  0197F6  0D05               	mullw	5
 33072  0197F8  0E54               	movlw	low _S
 33073  0197FA  24F3               	addwf	243,w,c
 33074  0197FC  6ED9               	movwf	fsr2l,c
 33075  0197FE  0E02               	movlw	high _S
 33076  019800  20F4               	addwfc	prodh,w,c
 33077  019802  6EDA               	movwf	fsr2h,c
 33078  019804  0E00               	movlw	0
 33079  019806  6EDF               	movwf	indf2,c
 33080  019808  D03D               	goto	l10773
 33081  01980A                     l10765:
 33082                           
 33083                           ;dio.c: 104:    if (S.button[i].sw == SW_OFF) {
 33084                           ;stkvar	_i @ sp[(-2)+0]
 33085  01980A  0EFE               	movlw	-2
 33086  01980C  50E3               	movf	plusw1,w,c
 33087  01980E  0D05               	mullw	5
 33088  019810  0E54               	movlw	low _S
 33089  019812  24F3               	addwf	243,w,c
 33090  019814  6ED9               	movwf	fsr2l,c
 33091  019816  0E02               	movlw	high _S
 33092  019818  20F4               	addwfc	prodh,w,c
 33093  01981A  6EDA               	movwf	fsr2h,c
 33094  01981C  50DF               	movf	indf2,w,c
 33095  01981E  A4D8               	btfss	status,2,c
 33096  019820  D031               	goto	l10773
 33097                           
 33098                           ;dio.c: 105:     S.button[i].sw = SW_ON;
 33099                           ;stkvar	_i @ sp[(-2)+0]
 33100  019822  0EFE               	movlw	-2
 33101  019824  50E3               	movf	plusw1,w,c
 33102  019826  0D05               	mullw	5
 33103  019828  0E54               	movlw	low _S
 33104  01982A  24F3               	addwf	243,w,c
 33105  01982C  6ED9               	movwf	fsr2l,c
 33106  01982E  0E02               	movlw	high _S
 33107  019830  20F4               	addwfc	prodh,w,c
 33108  019832  6EDA               	movwf	fsr2h,c
 33109  019834  0E01               	movlw	1
 33110  019836  6EDF               	movwf	indf2,c
 33111                           
 33112                           ;dio.c: 106:     S.button[i].count = V.timerint_count;
 33113  019838  EE20  F1C2         	lfsr	2,_V+187	;volatile
 33114                           
 33115                           ;stkvar	_i @ sp[(-2)+0]
 33116  01983C  0EFE               	movlw	-2
 33117  01983E  50E3               	movf	plusw1,w,c
 33118  019840  0D05               	mullw	5
 33119  019842  0E55               	movlw	low (_S+1)
 33120  019844  24F3               	addwf	243,w,c
 33121  019846  6EE9               	movwf	fsr0l,c
 33122  019848  0E02               	movlw	high (_S+1)
 33123  01984A  20F4               	addwfc	prodh,w,c
 33124  01984C  6EEA               	movwf	fsr0h,c
 33125  01984E  006F FF7B FFEE     	movff	postinc2,postinc0
 33126  019854  006F FF7B FFEE     	movff	postinc2,postinc0
 33127  01985A  006F FF7B FFEE     	movff	postinc2,postinc0
 33128  019860  006F FF7B FFEE     	movff	postinc2,postinc0
 33129                           
 33130                           ;dio.c: 107:     S.sw_bitmap |= 1 << i;
 33131                           ;stkvar	_i @ sp[(-2)+0]
 33132  019866  0EFE               	movlw	-2
 33133  019868  006F FF8C  F00C    	movff	plusw1,btemp+11
 33134  01986E  0E01               	movlw	1
 33135  019870  6E0B               	movwf	(btemp+10)^0,c
 33136  019872  2A0C               	incf	(btemp+11)^0,f,c
 33137  019874  D002               	goto	u985_24
 33138  019876                     u985_25:
 33139  019876  90D8               	bcf	status,0,c
 33140  019878  360B               	rlcf	(btemp+10)^0,f,c
 33141  01987A                     u985_24:
 33142  01987A  2E0C               	decfsz	(btemp+11)^0,f,c
 33143  01987C  D7FC               	goto	u985_25
 33144  01987E  500B               	movf	(btemp+10)^0,w,c
 33145  019880  0102               	movlb	2	; () banked
 33146  019882  137C               	iorwf	(_S+40)& (0+255),f,b	;volatile
 33147  019884                     l10773:
 33148                           
 33149                           ;dio.c: 110:  } while (++i < 4);
 33150                           ;stkvar	_i @ sp[(-2)+0]
 33151  019884  0EFE               	movlw	-2
 33152  019886  2AE3               	incf	plusw1,f,c
 33153  019888  0EFE               	movlw	-2
 33154  01988A  006F FF8C  F001    	movff	plusw1,btemp
 33155  019890  0E03               	movlw	3
 33156  019892  6401               	cpfsgt	btemp^0,c
 33157  019894  D788               	goto	l10757
 33158                           
 33159                           ;dio.c: 119:  do { LATFbits.LATF5 = 1; } while(0);
 33160  019896  8ABF               	bsf	191,5,c	;volatile
 33161                           
 33162                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 33163  019898  52E5               	movf	postdec1,f,c
 33164  01989A  52E5               	movf	postdec1,f,c
 33165  01989C  0012               	return		;funcret
 33166  01989E                     __end_of_switch_handler:
 33167                           	opt callstack 0
 33168                           
 33169 ;; *************** function _TMR5_ISR *****************
 33170 ;; Defined at:
 33171 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 33172 ;; Parameters:    Size  Location     Type
 33173 ;;		None
 33174 ;; Auto vars:     Size  Location     Type
 33175 ;;		None
 33176 ;; Return value:  Size  Location     Type
 33177 ;;                  1    wreg      void 
 33178 ;; Registers used:
 33179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 33180 ;; Tracked objects:
 33181 ;;		On entry : 0/0
 33182 ;;		On exit  : 3F/0
 33183 ;;		Unchanged: 0/0
 33184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33187 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33188 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33189 ;;Total ram usage:       15 bytes
 33190 ;; Hardware stack levels used:    1
 33191 ;; Hardware stack levels required when called:    9
 33192 ;; This function calls:
 33193 ;;		_TMR5_CallBack
 33194 ;;		_TMR5_WriteTimer
 33195 ;; This function is called by:
 33196 ;;		Interrupt level 1
 33197 ;; This function uses a non-reentrant model
 33198 ;;
 33199                           
 33200                           	psect	text147
 33201  01A230                     __ptext147:
 33202                           	opt callstack 0
 33203  01A230                     _TMR5_ISR:
 33204                           	opt callstack 7
 33205                           
 33206                           ;incstack = 0
 33207  01A230  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 33208  01A236  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 33209  01A23C  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 33210  01A242  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 33211  01A248  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 33212  01A24E  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 33213  01A254  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 33214  01A25A  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 33215  01A260  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 33216  01A266  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 33217  01A26C  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 33218  01A272  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 33219  01A278  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 33220  01A27E  EE16  F0AF         	lfsr	1,___intlo_sp
 33221                           
 33222                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 33223  01A282  0139               	movlb	57	; () banked
 33224  01A284  9DA8               	bcf	168,6,b	;volatile
 33225                           
 33226                           ; BSR set to: 57
 33227                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 33228  01A286  0060  F28B  FFE6   	movff	_timer5ReloadVal,postinc1
 33229  01A28C  0060  F28F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 33230  01A292  ECAE  F0DD         	call	_TMR5_WriteTimer	;wreg free
 33231                           
 33232                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 33233  01A296  0101               	movlb	1	; () banked
 33234  01A298  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 33235  01A29A  6E2B               	movwf	??_TMR5_ISR^0,c
 33236  01A29C  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 33237  01A29E  0E05               	movlw	5
 33238  01A2A0  262B               	addwf	??_TMR5_ISR^0,f,c
 33239  01A2A2  0E00               	movlw	0
 33240  01A2A4  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 33241  01A2A6  0100               	movlb	0	; () banked
 33242  01A2A8  4BA0               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 33243  01A2AA  2BA1               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 33244  01A2AC  502B               	movf	??_TMR5_ISR^0,w,c
 33245  01A2AE  5DA0               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 33246  01A2B0  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 33247  01A2B2  59A1               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 33248  01A2B4  A0D8               	btfss	status,0,c
 33249  01A2B6  D005               	goto	i1l1019
 33250                           
 33251                           ; BSR set to: 0
 33252                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 33253  01A2B8  EC20  F0E1         	call	_TMR5_CallBack	;wreg free
 33254                           
 33255                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 33256  01A2BC  0100               	movlb	0	; () banked
 33257  01A2BE  6BA0               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 33258  01A2C0  6BA1               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 33259  01A2C2                     i1l1019:
 33260                           
 33261                           ; BSR set to: 0
 33262  01A2C2  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 33263  01A2C8  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 33264  01A2CE  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 33265  01A2D4  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 33266  01A2DA  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 33267  01A2E0  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 33268  01A2E6  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 33269  01A2EC  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 33270  01A2F2  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 33271  01A2F8  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 33272  01A2FE  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 33273  01A304  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 33274  01A30A  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 33275  01A310  0011               	retfie		f
 33276  01A312                     __end_of_TMR5_ISR:
 33277                           	opt callstack 0
 33278                           
 33279 ;; *************** function _TMR5_WriteTimer *****************
 33280 ;; Defined at:
 33281 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 33282 ;; Parameters:    Size  Location     Type
 33283 ;;  timerVal        2  [STACK] unsigned short 
 33284 ;; Auto vars:     Size  Location     Type
 33285 ;;		None
 33286 ;; Return value:  Size  Location     Type
 33287 ;;                  1  [STACK] void 
 33288 ;; Registers used:
 33289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 33290 ;; Tracked objects:
 33291 ;;		On entry : 3F/39
 33292 ;;		On exit  : 0/0
 33293 ;;		Unchanged: 0/0
 33294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33299 ;;Total ram usage:        0 bytes
 33300 ;; Hardware stack levels used:    1
 33301 ;; Hardware stack levels required when called:    3
 33302 ;; This function calls:
 33303 ;;		Nothing
 33304 ;; This function is called by:
 33305 ;;		_TMR5_ISR
 33306 ;; This function uses a reentrant model
 33307 ;;
 33308                           
 33309                           	psect	text148
 33310  01BB5C                     __ptext148:
 33311                           	opt callstack 0
 33312  01BB5C                     _TMR5_WriteTimer:
 33313                           	opt callstack 12
 33314                           
 33315                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 33316                           
 33317                           ; BSR set to: 0
 33318                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33319                           ;incstack = 0
 33320  01BB5C  A49A               	btfss	154,2,c	;volatile
 33321  01BB5E  D00F               	goto	l10977
 33322                           
 33323                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 33324  01BB60  909A               	bcf	154,0,c	;volatile
 33325                           
 33326                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 33327                           ;stkvar	_timerVal @ sp[(0)+-2]
 33328  01BB62  0EFF               	movlw	255
 33329  01BB64  24E1               	addwf	fsr1l,w,c
 33330  01BB66  6ED9               	movwf	fsr2l,c
 33331  01BB68  0EFF               	movlw	255
 33332  01BB6A  20E2               	addwfc	fsr1h,w,c
 33333  01BB6C  6EDA               	movwf	fsr2h,c
 33334  01BB6E  50DF               	movf	indf2,w,c
 33335  01BB70  6E99               	movwf	153,c	;volatile
 33336                           
 33337                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 33338                           ;stkvar	_timerVal @ sp[(0)+-2]
 33339  01BB72  0EFE               	movlw	-2
 33340  01BB74  006F FF8F FF98     	movff	plusw1,16280	;volatile
 33341                           
 33342                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 33343  01BB7A  809A               	bsf	154,0,c	;volatile
 33344                           
 33345                           ;mcc_generated_files/tmr5.c: 144:  } else {
 33346  01BB7C  D00C               	goto	l1002
 33347  01BB7E                     l10977:
 33348                           
 33349                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 33350                           ;stkvar	_timerVal @ sp[(0)+-2]
 33351  01BB7E  0EFF               	movlw	255
 33352  01BB80  24E1               	addwf	fsr1l,w,c
 33353  01BB82  6ED9               	movwf	fsr2l,c
 33354  01BB84  0EFF               	movlw	255
 33355  01BB86  20E2               	addwfc	fsr1h,w,c
 33356  01BB88  6EDA               	movwf	fsr2h,c
 33357  01BB8A  50DF               	movf	indf2,w,c
 33358  01BB8C  6E99               	movwf	153,c	;volatile
 33359                           
 33360                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 33361                           ;stkvar	_timerVal @ sp[(0)+-2]
 33362  01BB8E  0EFE               	movlw	-2
 33363  01BB90  006F FF8F FF98     	movff	plusw1,16280	;volatile
 33364  01BB96                     l1002:
 33365                           
 33366                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 33367  01BB96  52E5               	movf	postdec1,f,c
 33368  01BB98  52E5               	movf	postdec1,f,c
 33369  01BB9A  0012               	return		;funcret
 33370  01BB9C                     __end_of_TMR5_WriteTimer:
 33371                           	opt callstack 0
 33372                           
 33373 ;; *************** function _TMR5_CallBack *****************
 33374 ;; Defined at:
 33375 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 33376 ;; Parameters:    Size  Location     Type
 33377 ;;		None
 33378 ;; Auto vars:     Size  Location     Type
 33379 ;;		None
 33380 ;; Return value:  Size  Location     Type
 33381 ;;                  1  [STACK] void 
 33382 ;; Registers used:
 33383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 33384 ;; Tracked objects:
 33385 ;;		On entry : 3F/0
 33386 ;;		On exit  : 0/0
 33387 ;;		Unchanged: 0/0
 33388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33393 ;;Total ram usage:        0 bytes
 33394 ;; Hardware stack levels used:    1
 33395 ;; Hardware stack levels required when called:    8
 33396 ;; This function calls:
 33397 ;;		Absolute function
 33398 ;;		_TMR5_DefaultInterruptHandler
 33399 ;; This function is called by:
 33400 ;;		_TMR5_ISR
 33401 ;; This function uses a reentrant model
 33402 ;;
 33403                           
 33404                           	psect	text149
 33405  01C240                     __ptext149:
 33406                           	opt callstack 0
 33407  01C240                     _TMR5_CallBack:
 33408                           	opt callstack 7
 33409                           
 33410                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 33411                           
 33412                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33413                           ;incstack = 0
 33414  01C240  0100               	movlb	0	; () banked
 33415  01C242  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 33416  01C244  1180               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 33417  01C246  1181               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 33418  01C248  B4D8               	btfsc	status,2,c
 33419  01C24A  0012               	return	
 33420                           
 33421                           ; BSR set to: 0
 33422                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 33423  01C24C  D801               	call	u1021_28
 33424  01C24E  0012               	return	
 33425  01C250                     u1021_28:
 33426  01C250  0005               	push	
 33427  01C252  6EFA               	movwf	pclath,c
 33428  01C254  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 33429  01C256  6EFD               	movwf	tosl,c
 33430  01C258  5180               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 33431  01C25A  6EFE               	movwf	tosh,c
 33432  01C25C  5181               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 33433  01C25E  6EFF               	movwf	tosu,c
 33434  01C260  50FA               	movf	pclath,w,c
 33435  01C262  0012               	return		;indir
 33436  01C264                     __end_of_TMR5_CallBack:
 33437                           	opt callstack 0
 33438                           
 33439 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 33440 ;; Defined at:
 33441 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 33442 ;; Parameters:    Size  Location     Type
 33443 ;;		None
 33444 ;; Auto vars:     Size  Location     Type
 33445 ;;		None
 33446 ;; Return value:  Size  Location     Type
 33447 ;;                  1  [STACK] void 
 33448 ;; Registers used:
 33449 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 33450 ;; Tracked objects:
 33451 ;;		On entry : 3F/0
 33452 ;;		On exit  : 0/0
 33453 ;;		Unchanged: 0/0
 33454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33459 ;;Total ram usage:        0 bytes
 33460 ;; Hardware stack levels used:    1
 33461 ;; Hardware stack levels required when called:    7
 33462 ;; This function calls:
 33463 ;;		_check_day_time
 33464 ;; This function is called by:
 33465 ;;		_TMR5_Initialize
 33466 ;;		_TMR5_CallBack
 33467 ;; This function uses a reentrant model
 33468 ;;
 33469                           
 33470                           	psect	text150
 33471  01BC8C                     __ptext150:
 33472                           	opt callstack 0
 33473  01BC8C                     _TMR5_DefaultInterruptHandler:
 33474                           	opt callstack 7
 33475                           
 33476                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 33477                           
 33478                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33479                           ;incstack = 0
 33480  01BC8C  A0BE               	btfss	190,0,c	;volatile
 33481  01BC8E  D002               	goto	u959_20
 33482  01BC90  0E01               	movlw	1
 33483  01BC92  D001               	goto	u959_26
 33484  01BC94                     u959_20:
 33485  01BC94  0E00               	movlw	0
 33486  01BC96                     u959_26:
 33487  01BC96  0AFF               	xorlw	255
 33488  01BC98  6E0C               	movwf	(btemp+11)^0,c
 33489  01BC9A  50BE               	movf	190,w,c	;volatile
 33490  01BC9C  180C               	xorwf	(btemp+11)^0,w,c
 33491  01BC9E  0BFE               	andlw	-2
 33492  01BCA0  180C               	xorwf	(btemp+11)^0,w,c
 33493  01BCA2  6EBE               	movwf	190,c	;volatile
 33494                           
 33495                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 33496  01BCA4  0E01               	movlw	1
 33497  01BCA6  0101               	movlb	1	; () banked
 33498  01BCA8  27C2               	addwf	(_V+187)& (0+255),f,b	;volatile
 33499  01BCAA  0E00               	movlw	0
 33500  01BCAC  23C3               	addwfc	(_V+188)& (0+255),f,b	;volatile
 33501  01BCAE  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 33502  01BCB0  23C5               	addwfc	(_V+190)& (0+255),f,b	;volatile
 33503                           
 33504                           ; BSR set to: 1
 33505                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 33506  01BCB2  0E01               	movlw	1
 33507  01BCB4  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 33508  01BCB6  0E00               	movlw	0
 33509  01BCB8  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 33510  01BCBA  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 33511  01BCBC  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 33512                           
 33513                           ; BSR set to: 1
 33514                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 33515  01BCBE  EC33  F0C5         	call	_check_day_time	;wreg free
 33516                           
 33517                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33518  01BCC2  0012               	return		;funcret
 33519  01BCC4                     __end_of_TMR5_DefaultInterruptHandler:
 33520                           	opt callstack 0
 33521                           
 33522 ;; *************** function _check_day_time *****************
 33523 ;; Defined at:
 33524 ;;		line 165 in file "mbmc.c"
 33525 ;; Parameters:    Size  Location     Type
 33526 ;;		None
 33527 ;; Auto vars:     Size  Location     Type
 33528 ;;  light           4  [STACK] float 
 33529 ;; Return value:  Size  Location     Type
 33530 ;;                  1  [STACK] _Bool 
 33531 ;; Registers used:
 33532 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 33533 ;; Tracked objects:
 33534 ;;		On entry : 3F/1
 33535 ;;		On exit  : 0/0
 33536 ;;		Unchanged: 0/0
 33537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33542 ;;Total ram usage:        0 bytes
 33543 ;; Hardware stack levels used:    1
 33544 ;; Hardware stack levels required when called:    6
 33545 ;; This function calls:
 33546 ;;		___flge
 33547 ;;		_conv_raw_result
 33548 ;;		_get_ac_charger_relay
 33549 ;;		_set_ac_charger_relay
 33550 ;; This function is called by:
 33551 ;;		_TMR5_DefaultInterruptHandler
 33552 ;; This function uses a reentrant model
 33553 ;;
 33554                           
 33555                           	psect	text151
 33556  018A66                     __ptext151:
 33557                           	opt callstack 0
 33558  018A66                     _check_day_time:
 33559                           	opt callstack 0
 33560                           
 33561                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33562  018A66  52E6               	movf	postinc1,f,c
 33563  018A68  52E6               	movf	postinc1,f,c
 33564  018A6A  52E6               	movf	postinc1,f,c
 33565  018A6C  52E6               	movf	postinc1,f,c
 33566                           
 33567                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 33568                           
 33569                           ;incstack = 0
 33570  018A6E  0E00               	movlw	0
 33571  018A70  6EE6               	movwf	postinc1,c
 33572  018A72  0E0D               	movlw	13
 33573  018A74  6EE6               	movwf	postinc1,c
 33574  018A76  EC95  F0A9         	call	_conv_raw_result	;wreg free
 33575                           
 33576                           ;stkvar	_light @ sp[(-4)+0]
 33577  018A7A  0EFC               	movlw	-4
 33578  018A7C  0060  F007  FFE3   	movff	btemp,plusw1
 33579  018A82  0EFD               	movlw	-3
 33580  018A84  0060  F00B  FFE3   	movff	btemp+1,plusw1
 33581  018A8A  0EFE               	movlw	-2
 33582  018A8C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 33583  018A92  0EFF               	movlw	-1
 33584  018A94  0060  F013  FFE3   	movff	btemp+3,plusw1
 33585                           
 33586                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 33587  018A9A  2A41               	incf	check_day_time@day_delay^0,f,c
 33588  018A9C  0441               	decf	check_day_time@day_delay^0,w,c
 33589  018A9E  A4D8               	btfss	status,2,c
 33590  018AA0  D0A9               	goto	l1977
 33591  018AA2  0101               	movlb	1	; () banked
 33592  018AA4  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
 33593  018AA6  B4D8               	btfsc	status,2,c
 33594  018AA8  D0A5               	goto	l1977
 33595                           
 33596                           ; BSR set to: 1
 33597                           ;mbmc.c: 173:   if (C.soc > 15) {
 33598  018AAA  EE21  F3B5         	lfsr	2,_C+182	;volatile
 33599  018AAE  0E01               	movlw	1
 33600  018AB0  50DB               	movf	plusw2,w,c
 33601  018AB2  E104               	bnz	u938_20
 33602  018AB4  0E10               	movlw	16
 33603  018AB6  5CDE               	subwf	postinc2,w,c
 33604  018AB8  A0D8               	btfss	status,0,c
 33605  018ABA  D073               	goto	l10021
 33606  018ABC                     u938_20:
 33607                           
 33608                           ; BSR set to: 1
 33609                           ;mbmc.c: 174:    if (!C.day) {
 33610  018ABC  EE22  F021         	lfsr	2,_C+290	;volatile
 33611  018AC0  50DF               	movf	indf2,w,c
 33612  018AC2  A4D8               	btfss	status,2,c
 33613  018AC4  D035               	goto	l10009
 33614                           
 33615                           ; BSR set to: 1
 33616                           ;mbmc.c: 175:     if (light > 22.0) {
 33617                           ;stkvar	_light @ sp[(-4)+0]
 33618  018AC6  0EFC               	movlw	-4
 33619  018AC8  006F FF8F FFE6     	movff	plusw1,postinc1
 33620  018ACE  006F FF8F FFE6     	movff	plusw1,postinc1
 33621  018AD4  006F FF8F FFE6     	movff	plusw1,postinc1
 33622  018ADA  006F FF8F FFE6     	movff	plusw1,postinc1
 33623  018AE0  0E00               	movlw	0
 33624  018AE2  6EE6               	movwf	postinc1,c
 33625  018AE4  0E00               	movlw	0
 33626  018AE6  6EE6               	movwf	postinc1,c
 33627  018AE8  0EB0               	movlw	176
 33628  018AEA  6EE6               	movwf	postinc1,c
 33629  018AEC  0E41               	movlw	65
 33630  018AEE  6EE6               	movwf	postinc1,c
 33631  018AF0  EC0A  F0C9         	call	___flge	;wreg free
 33632  018AF4  B001               	btfsc	btemp& (0+255),0,c
 33633  018AF6  D07E               	goto	l1977
 33634                           
 33635                           ;mbmc.c: 176:      C.day = 1;
 33636  018AF8  0E01               	movlw	1
 33637  018AFA  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 33638                           
 33639                           ;mbmc.c: 177:      C.day_start = V.ticks;
 33640  018B00  EE20  F188         	lfsr	2,_V+129	;volatile
 33641  018B04  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 33642  018B0A  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 33643  018B10  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 33644  018B16  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 33645                           
 33646                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 33647  018B1C  EC9B  F0E2         	call	_get_ac_charger_relay	;wreg free
 33648  018B20  5001               	movf	btemp^0,w,c
 33649  018B22  B4D8               	btfsc	status,2,c
 33650  018B24  D06B               	goto	l1973
 33651                           
 33652                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 33653  018B26  0E00               	movlw	0
 33654  018B28  6EE6               	movwf	postinc1,c
 33655  018B2A  EC85  F0E2         	call	_set_ac_charger_relay	;wreg free
 33656  018B2E  D066               	goto	l1973
 33657  018B30                     l10009:
 33658                           
 33659                           ; BSR set to: 1
 33660                           ;mbmc.c: 184:     if (light < 12.0) {
 33661  018B30  0E00               	movlw	0
 33662  018B32  6EE6               	movwf	postinc1,c
 33663  018B34  0E00               	movlw	0
 33664  018B36  6EE6               	movwf	postinc1,c
 33665  018B38  0E40               	movlw	64
 33666  018B3A  6EE6               	movwf	postinc1,c
 33667  018B3C  0E41               	movlw	65
 33668  018B3E  6EE6               	movwf	postinc1,c
 33669                           
 33670                           ;stkvar	_light @ sp[(-8)+0]
 33671  018B40  0EF8               	movlw	-8
 33672  018B42  006F FF8F FFE6     	movff	plusw1,postinc1
 33673  018B48  006F FF8F FFE6     	movff	plusw1,postinc1
 33674  018B4E  006F FF8F FFE6     	movff	plusw1,postinc1
 33675  018B54  006F FF8F FFE6     	movff	plusw1,postinc1
 33676  018B5A  EC0A  F0C9         	call	___flge	;wreg free
 33677  018B5E  B001               	btfsc	btemp& (0+255),0,c
 33678  018B60  D049               	goto	l1977
 33679                           
 33680                           ;mbmc.c: 185:      C.day = 0;
 33681  018B62  0E00               	movlw	0
 33682  018B64  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 33683                           
 33684                           ;mbmc.c: 186:      C.day_end = V.ticks;
 33685  018B6A  EE20  F188         	lfsr	2,_V+129	;volatile
 33686  018B6E  006F FF78  F826    	movff	postinc2,_C+295	;volatile
 33687  018B74  006F FF78  F827    	movff	postinc2,_C+296	;volatile
 33688  018B7A  006F FF78  F828    	movff	postinc2,_C+297	;volatile
 33689  018B80  006F FF74  F829    	movff	postdec2,_C+298	;volatile
 33690                           
 33691                           ;mbmc.c: 190:      if ((C.soc < 40)) {
 33692  018B86  EE21  F3B5         	lfsr	2,_C+182	;volatile
 33693  018B8A  0E01               	movlw	1
 33694  018B8C  50DB               	movf	plusw2,w,c
 33695  018B8E  E136               	bnz	l1973
 33696  018B90  0E28               	movlw	40
 33697  018B92  5CDE               	subwf	postinc2,w,c
 33698  018B94  B0D8               	btfsc	status,0,c
 33699  018B96  D032               	goto	l1973
 33700                           
 33701                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 33702  018B98  0E01               	movlw	1
 33703  018B9A  6EE6               	movwf	postinc1,c
 33704  018B9C  EC85  F0E2         	call	_set_ac_charger_relay	;wreg free
 33705  018BA0  D02D               	goto	l1973
 33706  018BA2                     l10021:
 33707                           
 33708                           ; BSR set to: 1
 33709                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 33710  018BA2  EE21  F377         	lfsr	2,_C+120	;volatile
 33711  018BA6  006F FF7B FFE6     	movff	postinc2,postinc1
 33712  018BAC  006F FF7B FFE6     	movff	postinc2,postinc1
 33713  018BB2  006F FF7B FFE6     	movff	postinc2,postinc1
 33714  018BB8  006F FF7B FFE6     	movff	postinc2,postinc1
 33715  018BBE  EE21  F37B         	lfsr	2,_C+124	;volatile
 33716  018BC2  006F FF7B FFE6     	movff	postinc2,postinc1
 33717  018BC8  006F FF7B FFE6     	movff	postinc2,postinc1
 33718  018BCE  006F FF7B FFE6     	movff	postinc2,postinc1
 33719  018BD4  006F FF7B FFE6     	movff	postinc2,postinc1
 33720  018BDA  EC0A  F0C9         	call	___flge	;wreg free
 33721  018BDE  B001               	btfsc	btemp& (0+255),0,c
 33722  018BE0  D009               	goto	l1977
 33723                           
 33724                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 33725  018BE2  EC9B  F0E2         	call	_get_ac_charger_relay	;wreg free
 33726  018BE6  5001               	movf	btemp^0,w,c
 33727  018BE8  A4D8               	btfss	status,2,c
 33728  018BEA  D004               	goto	l1977
 33729                           
 33730                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 33731  018BEC  0E01               	movlw	1
 33732  018BEE  6EE6               	movwf	postinc1,c
 33733  018BF0  EC85  F0E2         	call	_set_ac_charger_relay	;wreg free
 33734  018BF4                     l1977:
 33735                           
 33736                           ;mbmc.c: 204:  if (day_delay >= 240)
 33737  018BF4  0EEF               	movlw	239
 33738  018BF6  6441               	cpfsgt	check_day_time@day_delay^0,c
 33739  018BF8  D001               	goto	l1973
 33740                           
 33741                           ;mbmc.c: 205:   day_delay = 0;
 33742  018BFA  6A41               	clrf	check_day_time@day_delay^0,c
 33743  018BFC                     l1973:
 33744                           
 33745                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 33746  018BFC  52E5               	movf	postdec1,f,c
 33747  018BFE  52E5               	movf	postdec1,f,c
 33748  018C00  52E5               	movf	postdec1,f,c
 33749  018C02  52E5               	movf	postdec1,f,c
 33750  018C04  0012               	return		;funcret
 33751  018C06                     __end_of_check_day_time:
 33752                           	opt callstack 0
 33753                           
 33754 ;; *************** function _set_ac_charger_relay *****************
 33755 ;; Defined at:
 33756 ;;		line 135 in file "mbmc.c"
 33757 ;; Parameters:    Size  Location     Type
 33758 ;;  mode            1  [STACK] const _Bool 
 33759 ;; Auto vars:     Size  Location     Type
 33760 ;;		None
 33761 ;; Return value:  Size  Location     Type
 33762 ;;                  1  [STACK] void 
 33763 ;; Registers used:
 33764 ;;		wreg, fsr1l, fsr1h
 33765 ;; Tracked objects:
 33766 ;;		On entry : 0/1
 33767 ;;		On exit  : 0/0
 33768 ;;		Unchanged: 0/0
 33769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33774 ;;Total ram usage:        0 bytes
 33775 ;; Hardware stack levels used:    1
 33776 ;; Hardware stack levels required when called:    3
 33777 ;; This function calls:
 33778 ;;		Nothing
 33779 ;; This function is called by:
 33780 ;;		_check_day_time
 33781 ;; This function uses a reentrant model
 33782 ;;
 33783                           
 33784                           	psect	text152
 33785  01C50A                     __ptext152:
 33786                           	opt callstack 0
 33787  01C50A                     _set_ac_charger_relay:
 33788                           	opt callstack 9
 33789                           
 33790                           ;mbmc.c: 135: void set_ac_charger_relay(const _Bool mode);mbmc.c: 136: {;mbmc.c: 137:  L
      +                          ATDbits.LATD6 = mode;
 33791                           ;stkvar	_mode @ sp[(0)+-1]
 33792                           
 33793                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33794                           ;incstack = 0
 33795  01C50A  0EFF               	movlw	-1
 33796  01C50C  B0E3               	btfsc	plusw1,0,c
 33797  01C50E  D002               	bra	u933_25
 33798  01C510  9CBD               	bcf	189,6,c	;volatile
 33799  01C512  D001               	bra	u933_26
 33800  01C514                     u933_25:
 33801  01C514  8CBD               	bsf	189,6,c	;volatile
 33802  01C516                     u933_26:
 33803                           
 33804                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 33805  01C516  52E5               	movf	postdec1,f,c
 33806  01C518  0012               	return		;funcret
 33807  01C51A                     __end_of_set_ac_charger_relay:
 33808                           	opt callstack 0
 33809                           
 33810 ;; *************** function _get_ac_charger_relay *****************
 33811 ;; Defined at:
 33812 ;;		line 140 in file "mbmc.c"
 33813 ;; Parameters:    Size  Location     Type
 33814 ;;		None
 33815 ;; Auto vars:     Size  Location     Type
 33816 ;;		None
 33817 ;; Return value:  Size  Location     Type
 33818 ;;                  1  [STACK] _Bool 
 33819 ;; Registers used:
 33820 ;;		btemp
 33821 ;; Tracked objects:
 33822 ;;		On entry : 0/1
 33823 ;;		On exit  : 0/0
 33824 ;;		Unchanged: 0/0
 33825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33830 ;;Total ram usage:        0 bytes
 33831 ;; Hardware stack levels used:    1
 33832 ;; Hardware stack levels required when called:    3
 33833 ;; This function calls:
 33834 ;;		Nothing
 33835 ;; This function is called by:
 33836 ;;		_check_day_time
 33837 ;;		_calc_bsoc
 33838 ;; This function uses a reentrant model
 33839 ;;
 33840                           
 33841                           	psect	text153
 33842  01C536                     __ptext153:
 33843                           	opt callstack 0
 33844  01C536                     _get_ac_charger_relay:
 33845                           	opt callstack 10
 33846                           
 33847                           ;mbmc.c: 142:  return LATDbits.LATD6;
 33848                           
 33849                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33850                           ;incstack = 0
 33851  01C536  ACBD               	btfss	189,6,c	;volatile
 33852  01C538  D003               	goto	u952_20
 33853  01C53A  6A01               	clrf	btemp^0,c
 33854  01C53C  2A01               	incf	btemp^0,f,c
 33855  01C53E  0012               	return	
 33856  01C540                     u952_20:
 33857  01C540  6A01               	clrf	btemp^0,c
 33858                           
 33859                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 33860  01C542  0012               	return		;funcret
 33861  01C544                     __end_of_get_ac_charger_relay:
 33862                           	opt callstack 0
 33863                           
 33864 ;; *************** function _TMR3_ISR *****************
 33865 ;; Defined at:
 33866 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 33867 ;; Parameters:    Size  Location     Type
 33868 ;;		None
 33869 ;; Auto vars:     Size  Location     Type
 33870 ;;		None
 33871 ;; Return value:  Size  Location     Type
 33872 ;;                  1    wreg      void 
 33873 ;; Registers used:
 33874 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 33875 ;; Tracked objects:
 33876 ;;		On entry : 0/0
 33877 ;;		On exit  : 3F/0
 33878 ;;		Unchanged: 0/0
 33879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33882 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33883 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33884 ;;Total ram usage:       25 bytes
 33885 ;; Hardware stack levels used:    1
 33886 ;; Hardware stack levels required when called:   14
 33887 ;; This function calls:
 33888 ;;		_TMR3_CallBack
 33889 ;;		_TMR3_WriteTimer
 33890 ;; This function is called by:
 33891 ;;		Interrupt level 1
 33892 ;; This function uses a non-reentrant model
 33893 ;;
 33894                           
 33895                           	psect	text154
 33896  019378                     __ptext154:
 33897                           	opt callstack 0
 33898  019378                     _TMR3_ISR:
 33899                           	opt callstack 2
 33900                           
 33901                           ;incstack = 0
 33902  019378  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 33903  01937E  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 33904  019384  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 33905  01938A  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 33906  019390  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 33907  019396  0060  F004  F0EA   	movff	btemp,??_TMR3_ISR+5
 33908  01939C  0060  F008  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 33909  0193A2  0060  F00C  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 33910  0193A8  0060  F010  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 33911  0193AE  0060  F014  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 33912  0193B4  0060  F018  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 33913  0193BA  0060  F01C  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 33914  0193C0  0060  F020  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 33915  0193C6  0060  F024  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 33916  0193CC  0060  F028  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 33917  0193D2  0060  F02C  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 33918  0193D8  0060  F030  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 33919  0193DE  0060  F044  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 33920  0193E4  0060  F048  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 33921  0193EA  0060  F04C  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 33922  0193F0  0060  F050  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 33923  0193F6  0060  F054  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 33924  0193FC  0060  F058  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 33925  019402  0060  F05C  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 33926  019408  0060  F060  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 33927  01940E  EE16  F0AF         	lfsr	1,___intlo_sp
 33928                           
 33929                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 33930  019412  0139               	movlb	57	; () banked
 33931  019414  9DA6               	bcf	166,6,b	;volatile
 33932                           
 33933                           ; BSR set to: 57
 33934                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 33935  019416  0060  F27B  FFE6   	movff	_timer3ReloadVal,postinc1
 33936  01941C  0060  F27F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 33937  019422  ECCE  F0DD         	call	_TMR3_WriteTimer	;wreg free
 33938                           
 33939                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 33940  019426  0100               	movlb	0	; () banked
 33941  019428  4B9C               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 33942  01942A  2B9D               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 33943  01942C  519D               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 33944  01942E  E104               	bnz	i1u1284_20
 33945  019430  0E28               	movlw	40
 33946  019432  5D9C               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 33947  019434  A0D8               	btfss	status,0,c
 33948  019436  D005               	goto	i1l1207
 33949  019438                     i1u1284_20:
 33950                           
 33951                           ; BSR set to: 0
 33952                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 33953  019438  EC32  F0E1         	call	_TMR3_CallBack	;wreg free
 33954                           
 33955                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 33956  01943C  0100               	movlb	0	; () banked
 33957  01943E  6B9C               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 33958  019440  6B9D               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 33959  019442                     i1l1207:
 33960                           
 33961                           ; BSR set to: 0
 33962  019442  0060  F3F4  F018   	movff	??_TMR3_ISR+24,btemp+23
 33963  019448  0060  F3F0  F017   	movff	??_TMR3_ISR+23,btemp+22
 33964  01944E  0060  F3EC  F016   	movff	??_TMR3_ISR+22,btemp+21
 33965  019454  0060  F3E8  F015   	movff	??_TMR3_ISR+21,btemp+20
 33966  01945A  0060  F3E4  F014   	movff	??_TMR3_ISR+20,btemp+19
 33967  019460  0060  F3E0  F013   	movff	??_TMR3_ISR+19,btemp+18
 33968  019466  0060  F3DC  F012   	movff	??_TMR3_ISR+18,btemp+17
 33969  01946C  0060  F3D8  F011   	movff	??_TMR3_ISR+17,btemp+16
 33970  019472  0060  F3D4  F00C   	movff	??_TMR3_ISR+16,btemp+11
 33971  019478  0060  F3D0  F00B   	movff	??_TMR3_ISR+15,btemp+10
 33972  01947E  0060  F3CC  F00A   	movff	??_TMR3_ISR+14,btemp+9
 33973  019484  0060  F3C8  F009   	movff	??_TMR3_ISR+13,btemp+8
 33974  01948A  0060  F3C4  F008   	movff	??_TMR3_ISR+12,btemp+7
 33975  019490  0060  F3C0  F007   	movff	??_TMR3_ISR+11,btemp+6
 33976  019496  0060  F3BC  F006   	movff	??_TMR3_ISR+10,btemp+5
 33977  01949C  0060  F3B8  F005   	movff	??_TMR3_ISR+9,btemp+4
 33978  0194A2  0060  F3B4  F004   	movff	??_TMR3_ISR+8,btemp+3
 33979  0194A8  0060  F3B0  F003   	movff	??_TMR3_ISR+7,btemp+2
 33980  0194AE  0060  F3AC  F002   	movff	??_TMR3_ISR+6,btemp+1
 33981  0194B4  0060  F3A8  F001   	movff	??_TMR3_ISR+5,btemp
 33982  0194BA  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 33983  0194C0  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 33984  0194C6  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 33985  0194CC  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 33986  0194D2  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 33987  0194D8  0011               	retfie		f
 33988  0194DA                     __end_of_TMR3_ISR:
 33989                           	opt callstack 0
 33990                           
 33991 ;; *************** function _TMR3_WriteTimer *****************
 33992 ;; Defined at:
 33993 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 33994 ;; Parameters:    Size  Location     Type
 33995 ;;  timerVal        2  [STACK] unsigned short 
 33996 ;; Auto vars:     Size  Location     Type
 33997 ;;		None
 33998 ;; Return value:  Size  Location     Type
 33999 ;;                  1  [STACK] void 
 34000 ;; Registers used:
 34001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 34002 ;; Tracked objects:
 34003 ;;		On entry : 3F/39
 34004 ;;		On exit  : 0/0
 34005 ;;		Unchanged: 0/0
 34006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34011 ;;Total ram usage:        0 bytes
 34012 ;; Hardware stack levels used:    1
 34013 ;; Hardware stack levels required when called:    3
 34014 ;; This function calls:
 34015 ;;		Nothing
 34016 ;; This function is called by:
 34017 ;;		_TMR3_ISR
 34018 ;; This function uses a reentrant model
 34019 ;;
 34020                           
 34021                           	psect	text155
 34022  01BB9C                     __ptext155:
 34023                           	opt callstack 0
 34024  01BB9C                     _TMR3_WriteTimer:
 34025                           	opt callstack 12
 34026                           
 34027                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 34028                           
 34029                           ; BSR set to: 0
 34030                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34031                           ;incstack = 0
 34032  01BB9C  A4A6               	btfss	166,2,c	;volatile
 34033  01BB9E  D00F               	goto	l10995
 34034                           
 34035                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 34036  01BBA0  90A6               	bcf	166,0,c	;volatile
 34037                           
 34038                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 34039                           ;stkvar	_timerVal @ sp[(0)+-2]
 34040  01BBA2  0EFF               	movlw	255
 34041  01BBA4  24E1               	addwf	fsr1l,w,c
 34042  01BBA6  6ED9               	movwf	fsr2l,c
 34043  01BBA8  0EFF               	movlw	255
 34044  01BBAA  20E2               	addwfc	fsr1h,w,c
 34045  01BBAC  6EDA               	movwf	fsr2h,c
 34046  01BBAE  50DF               	movf	indf2,w,c
 34047  01BBB0  6EA5               	movwf	165,c	;volatile
 34048                           
 34049                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 34050                           ;stkvar	_timerVal @ sp[(0)+-2]
 34051  01BBB2  0EFE               	movlw	-2
 34052  01BBB4  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 34053                           
 34054                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 34055  01BBBA  80A6               	bsf	166,0,c	;volatile
 34056                           
 34057                           ;mcc_generated_files/tmr3.c: 141:     }
 34058  01BBBC  D00C               	goto	l1190
 34059  01BBBE                     l10995:
 34060                           
 34061                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 34062                           ;stkvar	_timerVal @ sp[(0)+-2]
 34063  01BBBE  0EFF               	movlw	255
 34064  01BBC0  24E1               	addwf	fsr1l,w,c
 34065  01BBC2  6ED9               	movwf	fsr2l,c
 34066  01BBC4  0EFF               	movlw	255
 34067  01BBC6  20E2               	addwfc	fsr1h,w,c
 34068  01BBC8  6EDA               	movwf	fsr2h,c
 34069  01BBCA  50DF               	movf	indf2,w,c
 34070  01BBCC  6EA5               	movwf	165,c	;volatile
 34071                           
 34072                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 34073                           ;stkvar	_timerVal @ sp[(0)+-2]
 34074  01BBCE  0EFE               	movlw	-2
 34075  01BBD0  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 34076  01BBD6                     l1190:
 34077                           
 34078                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 34079  01BBD6  52E5               	movf	postdec1,f,c
 34080  01BBD8  52E5               	movf	postdec1,f,c
 34081  01BBDA  0012               	return		;funcret
 34082  01BBDC                     __end_of_TMR3_WriteTimer:
 34083                           	opt callstack 0
 34084                           
 34085 ;; *************** function _TMR3_CallBack *****************
 34086 ;; Defined at:
 34087 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 34088 ;; Parameters:    Size  Location     Type
 34089 ;;		None
 34090 ;; Auto vars:     Size  Location     Type
 34091 ;;		None
 34092 ;; Return value:  Size  Location     Type
 34093 ;;                  1  [STACK] void 
 34094 ;; Registers used:
 34095 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 34096 ;; Tracked objects:
 34097 ;;		On entry : 3F/0
 34098 ;;		On exit  : 0/0
 34099 ;;		Unchanged: 0/0
 34100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34105 ;;Total ram usage:        0 bytes
 34106 ;; Hardware stack levels used:    1
 34107 ;; Hardware stack levels required when called:   13
 34108 ;; This function calls:
 34109 ;;		Absolute function
 34110 ;;		_TMR3_DefaultInterruptHandler
 34111 ;;		_calc_bsoc
 34112 ;; This function is called by:
 34113 ;;		_TMR3_ISR
 34114 ;; This function uses a reentrant model
 34115 ;;
 34116                           
 34117                           	psect	text156
 34118  01C264                     __ptext156:
 34119                           	opt callstack 0
 34120  01C264                     _TMR3_CallBack:
 34121                           	opt callstack 2
 34122                           
 34123                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 34124                           
 34125                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34126                           ;incstack = 0
 34127  01C264  0100               	movlb	0	; () banked
 34128  01C266  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 34129  01C268  117D               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 34130  01C26A  117E               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 34131  01C26C  B4D8               	btfsc	status,2,c
 34132  01C26E  0012               	return	
 34133                           
 34134                           ; BSR set to: 0
 34135                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 34136  01C270  D801               	call	u1271_28
 34137  01C272  0012               	return	
 34138  01C274                     u1271_28:
 34139  01C274  0005               	push	
 34140  01C276  6EFA               	movwf	pclath,c
 34141  01C278  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 34142  01C27A  6EFD               	movwf	tosl,c
 34143  01C27C  517D               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 34144  01C27E  6EFE               	movwf	tosh,c
 34145  01C280  517E               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 34146  01C282  6EFF               	movwf	tosu,c
 34147  01C284  50FA               	movf	pclath,w,c
 34148  01C286  0012               	return		;indir
 34149  01C288                     __end_of_TMR3_CallBack:
 34150                           	opt callstack 0
 34151                           
 34152 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 34153 ;; Defined at:
 34154 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 34155 ;; Parameters:    Size  Location     Type
 34156 ;;		None
 34157 ;; Auto vars:     Size  Location     Type
 34158 ;;		None
 34159 ;; Return value:  Size  Location     Type
 34160 ;;                  1  [STACK] void 
 34161 ;; Registers used:
 34162 ;;		None
 34163 ;; Tracked objects:
 34164 ;;		On entry : 3F/0
 34165 ;;		On exit  : 0/0
 34166 ;;		Unchanged: 0/0
 34167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34172 ;;Total ram usage:        0 bytes
 34173 ;; Hardware stack levels used:    1
 34174 ;; Hardware stack levels required when called:    3
 34175 ;; This function calls:
 34176 ;;		Nothing
 34177 ;; This function is called by:
 34178 ;;		_TMR3_Initialize
 34179 ;;		_TMR3_CallBack
 34180 ;; This function uses a reentrant model
 34181 ;;
 34182                           
 34183                           	psect	text157
 34184  01C5E4                     __ptext157:
 34185                           	opt callstack 0
 34186  01C5E4                     _TMR3_DefaultInterruptHandler:
 34187                           	opt callstack 11
 34188                           
 34189                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34190                           
 34191                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34192                           ;incstack = 0
 34193  01C5E4  0012               	return		;funcret
 34194  01C5E6                     __end_of_TMR3_DefaultInterruptHandler:
 34195                           	opt callstack 0
 34196                           
 34197 ;; *************** function _calc_bsoc *****************
 34198 ;; Defined at:
 34199 ;;		line 39 in file "bsoc.c"
 34200 ;; Parameters:    Size  Location     Type
 34201 ;;		None
 34202 ;; Auto vars:     Size  Location     Type
 34203 ;;  adj             4  [STACK] float 
 34204 ;;  log_ptr         2  [STACK] PTR unsigned char 
 34205 ;;		 -> port_data(512), 
 34206 ;; Return value:  Size  Location     Type
 34207 ;;                  1  [STACK] void 
 34208 ;; Registers used:
 34209 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 34210 ;; Tracked objects:
 34211 ;;		On entry : 3F/0
 34212 ;;		On exit  : 5/1
 34213 ;;		Unchanged: 0/0
 34214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34219 ;;Total ram usage:        0 bytes
 34220 ;; Hardware stack levels used:    1
 34221 ;; Hardware stack levels required when called:   12
 34222 ;; This function calls:
 34223 ;;		_StartTimer
 34224 ;;		___asfladd
 34225 ;;		___fldiv
 34226 ;;		___flge
 34227 ;;		___flmul
 34228 ;;		___flneg
 34229 ;;		___fltol
 34230 ;;		_fabsf
 34231 ;;		_get_ac_charger_relay
 34232 ;;		_port_data_dma_ptr
 34233 ;;		_send_port_data_dma
 34234 ;;		_sprintf
 34235 ;;		_strlen
 34236 ;; This function is called by:
 34237 ;;		_init_bsoc
 34238 ;;		_TMR3_CallBack
 34239 ;; This function uses a reentrant model
 34240 ;;
 34241                           
 34242                           	psect	text158
 34243  013394                     __ptext158:
 34244                           	opt callstack 0
 34245  013394                     _calc_bsoc:
 34246                           	opt callstack 0
 34247                           
 34248                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34249  013394  0E06               	movlw	6
 34250  013396  26E1               	addwf	fsr1l,f,c
 34251  013398  0E00               	movlw	0
 34252  01339A  22E2               	addwfc	fsr1h,f,c
 34253                           
 34254                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 34255                           
 34256                           ;incstack = 0
 34257  01339C  0E00               	movlw	0
 34258  01339E  6E09               	movwf	(btemp+8)^0,c
 34259  0133A0  0E00               	movlw	0
 34260  0133A2  6E0A               	movwf	(btemp+9)^0,c
 34261  0133A4  0E80               	movlw	128
 34262  0133A6  6E0B               	movwf	(btemp+10)^0,c
 34263  0133A8  0E3F               	movlw	63
 34264  0133AA  6E0C               	movwf	(btemp+11)^0,c
 34265                           
 34266                           ;stkvar	_adj @ sp[(-6)+0]
 34267  0133AC  0EFA               	movlw	-6
 34268  0133AE  0060  F027  FFE3   	movff	btemp+8,plusw1
 34269  0133B4  0EFB               	movlw	-5
 34270  0133B6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34271  0133BC  0EFC               	movlw	-4
 34272  0133BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34273  0133C4  0EFD               	movlw	-3
 34274  0133C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 34275  0133CC  82BE               	bsf	190,1,c	;volatile
 34276                           
 34277                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 34278  0133CE  0E00               	movlw	0
 34279  0133D0  6EE6               	movwf	postinc1,c
 34280  0133D2  0E00               	movlw	0
 34281  0133D4  6EE6               	movwf	postinc1,c
 34282  0133D6  0E61               	movlw	97
 34283  0133D8  6EE6               	movwf	postinc1,c
 34284  0133DA  0E45               	movlw	69
 34285  0133DC  6EE6               	movwf	postinc1,c
 34286  0133DE  EE21  F343         	lfsr	2,_C+68	;volatile
 34287  0133E2  006F FF7B FFE6     	movff	postinc2,postinc1
 34288  0133E8  006F FF7B FFE6     	movff	postinc2,postinc1
 34289  0133EE  006F FF7B FFE6     	movff	postinc2,postinc1
 34290  0133F4  006F FF7B FFE6     	movff	postinc2,postinc1
 34291  0133FA  ECD8  F0A6         	call	___fldiv	;wreg free
 34292  0133FE  0060  F007  FFE6   	movff	btemp,postinc1
 34293  013404  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34294  01340A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34295  013410  0060  F013  FFE6   	movff	btemp+3,postinc1
 34296  013416  0E8F               	movlw	low (_C+144)
 34297  013418  6EE6               	movwf	postinc1,c
 34298  01341A  0E07               	movlw	high (_C+144)
 34299  01341C  6EE6               	movwf	postinc1,c
 34300  01341E  EC83  F0D8         	call	___asfladd	;wreg free
 34301                           
 34302                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 34303  013422  EE21  F38F         	lfsr	2,_C+144	;volatile
 34304  013426  006F FF7B FFE6     	movff	postinc2,postinc1
 34305  01342C  006F FF7B FFE6     	movff	postinc2,postinc1
 34306  013432  006F FF7B FFE6     	movff	postinc2,postinc1
 34307  013438  006F FF7B FFE6     	movff	postinc2,postinc1
 34308  01343E  EE21  F38B         	lfsr	2,_C+140	;volatile
 34309  013442  006F FF7B FFE6     	movff	postinc2,postinc1
 34310  013448  006F FF7B FFE6     	movff	postinc2,postinc1
 34311  01344E  006F FF7B FFE6     	movff	postinc2,postinc1
 34312  013454  006F FF7B FFE6     	movff	postinc2,postinc1
 34313  01345A  EC0A  F0C9         	call	___flge	;wreg free
 34314  01345E  B001               	btfsc	btemp& (0+255),0,c
 34315  013460  D00E               	goto	l13099
 34316                           
 34317                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 34318  013462  EE21  F38B         	lfsr	2,_C+140	;volatile
 34319  013466  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 34320  01346C  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 34321  013472  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 34322  013478  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 34323  01347E                     l13099:
 34324                           
 34325                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 34326  01347E  0ECD               	movlw	205
 34327  013480  6EE6               	movwf	postinc1,c
 34328  013482  0ECC               	movlw	204
 34329  013484  6EE6               	movwf	postinc1,c
 34330  013486  0ECC               	movlw	204
 34331  013488  6EE6               	movwf	postinc1,c
 34332  01348A  0E3D               	movlw	61
 34333  01348C  6EE6               	movwf	postinc1,c
 34334  01348E  EE21  F38F         	lfsr	2,_C+144	;volatile
 34335  013492  006F FF7B FFE6     	movff	postinc2,postinc1
 34336  013498  006F FF7B FFE6     	movff	postinc2,postinc1
 34337  01349E  006F FF7B FFE6     	movff	postinc2,postinc1
 34338  0134A4  006F FF7B FFE6     	movff	postinc2,postinc1
 34339  0134AA  EC0A  F0C9         	call	___flge	;wreg free
 34340  0134AE  B001               	btfsc	btemp& (0+255),0,c
 34341  0134B0  D010               	goto	l13103
 34342                           
 34343                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 34344  0134B2  0ECD               	movlw	205
 34345  0134B4  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 34346  0134BA  0ECC               	movlw	204
 34347  0134BC  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 34348  0134C2  0ECC               	movlw	204
 34349  0134C4  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 34350  0134CA  0E3D               	movlw	61
 34351  0134CC  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 34352  0134D2                     l13103:
 34353                           
 34354                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 34355  0134D2  EE21  F343         	lfsr	2,_C+68	;volatile
 34356  0134D6  006F FF7B FFE6     	movff	postinc2,postinc1
 34357  0134DC  006F FF7B FFE6     	movff	postinc2,postinc1
 34358  0134E2  006F FF7B FFE6     	movff	postinc2,postinc1
 34359  0134E8  006F FF7B FFE6     	movff	postinc2,postinc1
 34360  0134EE  0E0A               	movlw	10
 34361  0134F0  6EE6               	movwf	postinc1,c
 34362  0134F2  0ED7               	movlw	215
 34363  0134F4  6EE6               	movwf	postinc1,c
 34364  0134F6  0E23               	movlw	35
 34365  0134F8  6EE6               	movwf	postinc1,c
 34366  0134FA  0E3C               	movlw	60
 34367  0134FC  6EE6               	movwf	postinc1,c
 34368  0134FE  EC0A  F0C9         	call	___flge	;wreg free
 34369  013502  B001               	btfsc	btemp& (0+255),0,c
 34370  013504  D01C               	goto	l13107
 34371                           
 34372                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 34373  013506  0061  FEF4  F009   	movff	_C+190,btemp+8	;volatile
 34374  01350C  0061  FEF8  F00A   	movff	_C+191,btemp+9	;volatile
 34375  013512  0061  FEFC  F00B   	movff	_C+192,btemp+10	;volatile
 34376  013518  0061  FF00  F00C   	movff	_C+193,btemp+11	;volatile
 34377                           
 34378                           ;stkvar	_adj @ sp[(-6)+0]
 34379  01351E  0EFA               	movlw	-6
 34380  013520  0060  F027  FFE3   	movff	btemp+8,plusw1
 34381  013526  0EFB               	movlw	-5
 34382  013528  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34383  01352E  0EFC               	movlw	-4
 34384  013530  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34385  013536  0EFD               	movlw	-3
 34386  013538  0060  F033  FFE3   	movff	btemp+11,plusw1
 34387  01353E                     l13107:
 34388                           
 34389                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 34390  01353E  0E0A               	movlw	10
 34391  013540  6EE6               	movwf	postinc1,c
 34392  013542  0ED7               	movlw	215
 34393  013544  6EE6               	movwf	postinc1,c
 34394  013546  0E23               	movlw	35
 34395  013548  6EE6               	movwf	postinc1,c
 34396  01354A  0E3C               	movlw	60
 34397  01354C  6EE6               	movwf	postinc1,c
 34398  01354E  EE21  F343         	lfsr	2,_C+68	;volatile
 34399  013552  006F FF7B FFE6     	movff	postinc2,postinc1
 34400  013558  006F FF7B FFE6     	movff	postinc2,postinc1
 34401  01355E  006F FF7B FFE6     	movff	postinc2,postinc1
 34402  013564  006F FF7B FFE6     	movff	postinc2,postinc1
 34403  01356A  EC0A  F0C9         	call	___flge	;wreg free
 34404  01356E  B001               	btfsc	btemp& (0+255),0,c
 34405  013570  D01C               	goto	l13111
 34406                           
 34407                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 34408  013572  0061  FEE4  F009   	movff	_C+186,btemp+8	;volatile
 34409  013578  0061  FEE8  F00A   	movff	_C+187,btemp+9	;volatile
 34410  01357E  0061  FEEC  F00B   	movff	_C+188,btemp+10	;volatile
 34411  013584  0061  FEF0  F00C   	movff	_C+189,btemp+11	;volatile
 34412                           
 34413                           ;stkvar	_adj @ sp[(-6)+0]
 34414  01358A  0EFA               	movlw	-6
 34415  01358C  0060  F027  FFE3   	movff	btemp+8,plusw1
 34416  013592  0EFB               	movlw	-5
 34417  013594  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34418  01359A  0EFC               	movlw	-4
 34419  01359C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34420  0135A2  0EFD               	movlw	-3
 34421  0135A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 34422  0135AA                     l13111:
 34423                           
 34424                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 34425  0135AA  0E00               	movlw	0
 34426  0135AC  6EE6               	movwf	postinc1,c
 34427  0135AE  0E00               	movlw	0
 34428  0135B0  6EE6               	movwf	postinc1,c
 34429  0135B2  0E61               	movlw	97
 34430  0135B4  6EE6               	movwf	postinc1,c
 34431  0135B6  0E45               	movlw	69
 34432  0135B8  6EE6               	movwf	postinc1,c
 34433                           
 34434                           ;stkvar	_adj @ sp[(-10)+0]
 34435  0135BA  0EF6               	movlw	-10
 34436  0135BC  006F FF8F FFE6     	movff	plusw1,postinc1
 34437  0135C2  006F FF8F FFE6     	movff	plusw1,postinc1
 34438  0135C8  006F FF8F FFE6     	movff	plusw1,postinc1
 34439  0135CE  006F FF8F FFE6     	movff	plusw1,postinc1
 34440  0135D4  EE21  F343         	lfsr	2,_C+68	;volatile
 34441  0135D8  006F FF7B FFE6     	movff	postinc2,postinc1
 34442  0135DE  006F FF7B FFE6     	movff	postinc2,postinc1
 34443  0135E4  006F FF7B FFE6     	movff	postinc2,postinc1
 34444  0135EA  006F FF7B FFE6     	movff	postinc2,postinc1
 34445  0135F0  ECE5  F09E         	call	___flmul	;wreg free
 34446  0135F4  0060  F007  FFE6   	movff	btemp,postinc1
 34447  0135FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34448  013600  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34449  013606  0060  F013  FFE6   	movff	btemp+3,postinc1
 34450  01360C  ECD8  F0A6         	call	___fldiv	;wreg free
 34451  013610  0060  F007  FFE6   	movff	btemp,postinc1
 34452  013616  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34453  01361C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34454  013622  0060  F013  FFE6   	movff	btemp+3,postinc1
 34455  013628  0E8F               	movlw	low (_C+144)
 34456  01362A  6EE6               	movwf	postinc1,c
 34457  01362C  0E07               	movlw	high (_C+144)
 34458  01362E  6EE6               	movwf	postinc1,c
 34459  013630  EC83  F0D8         	call	___asfladd	;wreg free
 34460                           
 34461                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 34462  013634  EE21  F38F         	lfsr	2,_C+144	;volatile
 34463  013638  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 34464  01363E  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 34465  013644  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 34466  01364A  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 34467                           
 34468                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 34469  013650  EE21  F39B         	lfsr	2,_C+156	;volatile
 34470  013654  006F FF7B FFE6     	movff	postinc2,postinc1
 34471  01365A  006F FF7B FFE6     	movff	postinc2,postinc1
 34472  013660  006F FF7B FFE6     	movff	postinc2,postinc1
 34473  013666  006F FF7B FFE6     	movff	postinc2,postinc1
 34474  01366C  EE21  F38B         	lfsr	2,_C+140	;volatile
 34475  013670  006F FF7B FFE6     	movff	postinc2,postinc1
 34476  013676  006F FF7B FFE6     	movff	postinc2,postinc1
 34477  01367C  006F FF7B FFE6     	movff	postinc2,postinc1
 34478  013682  006F FF7B FFE6     	movff	postinc2,postinc1
 34479  013688  EC0A  F0C9         	call	___flge	;wreg free
 34480  01368C  B001               	btfsc	btemp& (0+255),0,c
 34481  01368E  D00E               	goto	l13119
 34482                           
 34483                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 34484  013690  EE21  F38B         	lfsr	2,_C+140	;volatile
 34485  013694  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 34486  01369A  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 34487  0136A0  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 34488  0136A6  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 34489  0136AC                     l13119:
 34490                           
 34491                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 34492  0136AC  0ECD               	movlw	205
 34493  0136AE  6EE6               	movwf	postinc1,c
 34494  0136B0  0ECC               	movlw	204
 34495  0136B2  6EE6               	movwf	postinc1,c
 34496  0136B4  0ECC               	movlw	204
 34497  0136B6  6EE6               	movwf	postinc1,c
 34498  0136B8  0E3D               	movlw	61
 34499  0136BA  6EE6               	movwf	postinc1,c
 34500  0136BC  EE21  F39B         	lfsr	2,_C+156	;volatile
 34501  0136C0  006F FF7B FFE6     	movff	postinc2,postinc1
 34502  0136C6  006F FF7B FFE6     	movff	postinc2,postinc1
 34503  0136CC  006F FF7B FFE6     	movff	postinc2,postinc1
 34504  0136D2  006F FF7B FFE6     	movff	postinc2,postinc1
 34505  0136D8  EC0A  F0C9         	call	___flge	;wreg free
 34506  0136DC  B001               	btfsc	btemp& (0+255),0,c
 34507  0136DE  D010               	goto	l13123
 34508                           
 34509                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 34510  0136E0  0ECD               	movlw	205
 34511  0136E2  006F FFA0  F79B    	movff	wreg,_C+156	;volatile
 34512  0136E8  0ECC               	movlw	204
 34513  0136EA  006F FFA0  F79C    	movff	wreg,_C+157	;volatile
 34514  0136F0  0ECC               	movlw	204
 34515  0136F2  006F FFA0  F79D    	movff	wreg,_C+158	;volatile
 34516  0136F8  0E3D               	movlw	61
 34517  0136FA  006F FFA0  F79E    	movff	wreg,_C+159	;volatile
 34518  013700                     l13123:
 34519                           
 34520                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 34521  013700  0E00               	movlw	0
 34522  013702  6EE6               	movwf	postinc1,c
 34523  013704  0E00               	movlw	0
 34524  013706  6EE6               	movwf	postinc1,c
 34525  013708  0E61               	movlw	97
 34526  01370A  6EE6               	movwf	postinc1,c
 34527  01370C  0E45               	movlw	69
 34528  01370E  6EE6               	movwf	postinc1,c
 34529  013710  EE21  F347         	lfsr	2,_C+72	;volatile
 34530  013714  006F FF7B FFE6     	movff	postinc2,postinc1
 34531  01371A  006F FF7B FFE6     	movff	postinc2,postinc1
 34532  013720  006F FF7B FFE6     	movff	postinc2,postinc1
 34533  013726  006F FF7B FFE6     	movff	postinc2,postinc1
 34534  01372C  ECD8  F0A6         	call	___fldiv	;wreg free
 34535  013730  0060  F007  FFE6   	movff	btemp,postinc1
 34536  013736  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34537  01373C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34538  013742  0060  F013  FFE6   	movff	btemp+3,postinc1
 34539  013748  0E93               	movlw	low (_C+148)
 34540  01374A  6EE6               	movwf	postinc1,c
 34541  01374C  0E07               	movlw	high (_C+148)
 34542  01374E  6EE6               	movwf	postinc1,c
 34543  013750  EC83  F0D8         	call	___asfladd	;wreg free
 34544                           
 34545                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 34546  013754  0E00               	movlw	0
 34547  013756  6EE6               	movwf	postinc1,c
 34548  013758  0E00               	movlw	0
 34549  01375A  6EE6               	movwf	postinc1,c
 34550  01375C  0E61               	movlw	97
 34551  01375E  6EE6               	movwf	postinc1,c
 34552  013760  0E45               	movlw	69
 34553  013762  6EE6               	movwf	postinc1,c
 34554  013764  EE21  F37B         	lfsr	2,_C+124	;volatile
 34555  013768  006F FF7B FFE6     	movff	postinc2,postinc1
 34556  01376E  006F FF7B FFE6     	movff	postinc2,postinc1
 34557  013774  006F FF7B FFE6     	movff	postinc2,postinc1
 34558  01377A  006F FF7B FFE6     	movff	postinc2,postinc1
 34559  013780  ECD8  F0A6         	call	___fldiv	;wreg free
 34560  013784  0060  F007  FFE6   	movff	btemp,postinc1
 34561  01378A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34562  013790  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34563  013796  0060  F013  FFE6   	movff	btemp+3,postinc1
 34564  01379C  0EA7               	movlw	low (_C+168)
 34565  01379E  6EE6               	movwf	postinc1,c
 34566  0137A0  0E07               	movlw	high (_C+168)
 34567  0137A2  6EE6               	movwf	postinc1,c
 34568  0137A4  EC83  F0D8         	call	___asfladd	;wreg free
 34569                           
 34570                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 34571  0137A8  0E00               	movlw	0
 34572  0137AA  6EE6               	movwf	postinc1,c
 34573  0137AC  0E00               	movlw	0
 34574  0137AE  6EE6               	movwf	postinc1,c
 34575  0137B0  0E61               	movlw	97
 34576  0137B2  6EE6               	movwf	postinc1,c
 34577  0137B4  0E45               	movlw	69
 34578  0137B6  6EE6               	movwf	postinc1,c
 34579  0137B8  EE21  F377         	lfsr	2,_C+120	;volatile
 34580  0137BC  006F FF7B FFE6     	movff	postinc2,postinc1
 34581  0137C2  006F FF7B FFE6     	movff	postinc2,postinc1
 34582  0137C8  006F FF7B FFE6     	movff	postinc2,postinc1
 34583  0137CE  006F FF7B FFE6     	movff	postinc2,postinc1
 34584  0137D4  ECD8  F0A6         	call	___fldiv	;wreg free
 34585  0137D8  0060  F007  FFE6   	movff	btemp,postinc1
 34586  0137DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34587  0137E4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34588  0137EA  0060  F013  FFE6   	movff	btemp+3,postinc1
 34589  0137F0  0EAB               	movlw	low (_C+172)
 34590  0137F2  6EE6               	movwf	postinc1,c
 34591  0137F4  0E07               	movlw	high (_C+172)
 34592  0137F6  6EE6               	movwf	postinc1,c
 34593  0137F8  EC83  F0D8         	call	___asfladd	;wreg free
 34594                           
 34595                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 34596  0137FC  0E00               	movlw	0
 34597  0137FE  6EE6               	movwf	postinc1,c
 34598  013800  0E00               	movlw	0
 34599  013802  6EE6               	movwf	postinc1,c
 34600  013804  0E61               	movlw	97
 34601  013806  6EE6               	movwf	postinc1,c
 34602  013808  0E45               	movlw	69
 34603  01380A  6EE6               	movwf	postinc1,c
 34604  01380C  EE21  F373         	lfsr	2,_C+116	;volatile
 34605  013810  006F FF7B FFE6     	movff	postinc2,postinc1
 34606  013816  006F FF7B FFE6     	movff	postinc2,postinc1
 34607  01381C  006F FF7B FFE6     	movff	postinc2,postinc1
 34608  013822  006F FF7B FFE6     	movff	postinc2,postinc1
 34609  013828  ECD8  F0A6         	call	___fldiv	;wreg free
 34610  01382C  0060  F007  FFE6   	movff	btemp,postinc1
 34611  013832  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34612  013838  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34613  01383E  0060  F013  FFE6   	movff	btemp+3,postinc1
 34614  013844  0EAF               	movlw	low (_C+176)
 34615  013846  6EE6               	movwf	postinc1,c
 34616  013848  0E07               	movlw	high (_C+176)
 34617  01384A  6EE6               	movwf	postinc1,c
 34618  01384C  EC83  F0D8         	call	___asfladd	;wreg free
 34619                           
 34620                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 34621  013850  EE21  F37F         	lfsr	2,_C+128	;volatile
 34622  013854  006F FF7B FFE6     	movff	postinc2,postinc1
 34623  01385A  006F FF7B FFE6     	movff	postinc2,postinc1
 34624  013860  006F FF7B FFE6     	movff	postinc2,postinc1
 34625  013866  006F FF7B FFE6     	movff	postinc2,postinc1
 34626  01386C  0E00               	movlw	0
 34627  01386E  6EE6               	movwf	postinc1,c
 34628  013870  0E00               	movlw	0
 34629  013872  6EE6               	movwf	postinc1,c
 34630  013874  0E00               	movlw	0
 34631  013876  6EE6               	movwf	postinc1,c
 34632  013878  0E00               	movlw	0
 34633  01387A  6EE6               	movwf	postinc1,c
 34634  01387C  EC0A  F0C9         	call	___flge	;wreg free
 34635  013880  B001               	btfsc	btemp& (0+255),0,c
 34636  013882  D02A               	goto	l13129
 34637                           
 34638                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 34639  013884  0E00               	movlw	0
 34640  013886  6EE6               	movwf	postinc1,c
 34641  013888  0E00               	movlw	0
 34642  01388A  6EE6               	movwf	postinc1,c
 34643  01388C  0E61               	movlw	97
 34644  01388E  6EE6               	movwf	postinc1,c
 34645  013890  0E45               	movlw	69
 34646  013892  6EE6               	movwf	postinc1,c
 34647  013894  EE21  F37F         	lfsr	2,_C+128	;volatile
 34648  013898  006F FF7B FFE6     	movff	postinc2,postinc1
 34649  01389E  006F FF7B FFE6     	movff	postinc2,postinc1
 34650  0138A4  006F FF7B FFE6     	movff	postinc2,postinc1
 34651  0138AA  006F FF7B FFE6     	movff	postinc2,postinc1
 34652  0138B0  ECD8  F0A6         	call	___fldiv	;wreg free
 34653  0138B4  0060  F007  FFE6   	movff	btemp,postinc1
 34654  0138BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34655  0138C0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34656  0138C6  0060  F013  FFE6   	movff	btemp+3,postinc1
 34657  0138CC  0E9F               	movlw	low (_C+160)
 34658  0138CE  6EE6               	movwf	postinc1,c
 34659  0138D0  0E07               	movlw	high (_C+160)
 34660  0138D2  6EE6               	movwf	postinc1,c
 34661  0138D4  EC83  F0D8         	call	___asfladd	;wreg free
 34662  0138D8                     l13129:
 34663                           
 34664                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 34665  0138D8  EE21  F37F         	lfsr	2,_C+128	;volatile
 34666  0138DC  0E03               	movlw	3
 34667  0138DE  AEDB               	btfss	plusw2,7,c
 34668  0138E0  D038               	goto	l13133
 34669                           
 34670                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 34671  0138E2  0E00               	movlw	0
 34672  0138E4  6EE6               	movwf	postinc1,c
 34673  0138E6  0E00               	movlw	0
 34674  0138E8  6EE6               	movwf	postinc1,c
 34675  0138EA  0E61               	movlw	97
 34676  0138EC  6EE6               	movwf	postinc1,c
 34677  0138EE  0E45               	movlw	69
 34678  0138F0  6EE6               	movwf	postinc1,c
 34679  0138F2  EE21  F37F         	lfsr	2,_C+128	;volatile
 34680  0138F6  006F FF7B FFE6     	movff	postinc2,postinc1
 34681  0138FC  006F FF7B FFE6     	movff	postinc2,postinc1
 34682  013902  006F FF7B FFE6     	movff	postinc2,postinc1
 34683  013908  006F FF7B FFE6     	movff	postinc2,postinc1
 34684  01390E  ECD8  F0A6         	call	___fldiv	;wreg free
 34685  013912  0060  F007  FFE6   	movff	btemp,postinc1
 34686  013918  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34687  01391E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34688  013924  0060  F013  FFE6   	movff	btemp+3,postinc1
 34689  01392A  EC4E  F0D4         	call	_fabsf	;wreg free
 34690  01392E  0060  F007  FFE6   	movff	btemp,postinc1
 34691  013934  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34692  01393A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34693  013940  0060  F013  FFE6   	movff	btemp+3,postinc1
 34694  013946  0EA3               	movlw	low (_C+164)
 34695  013948  6EE6               	movwf	postinc1,c
 34696  01394A  0E07               	movlw	high (_C+164)
 34697  01394C  6EE6               	movwf	postinc1,c
 34698  01394E  EC83  F0D8         	call	___asfladd	;wreg free
 34699  013952                     l13133:
 34700                           
 34701                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 34702  013952  0E00               	movlw	0
 34703  013954  6EE6               	movwf	postinc1,c
 34704  013956  0E00               	movlw	0
 34705  013958  6EE6               	movwf	postinc1,c
 34706  01395A  0EC8               	movlw	200
 34707  01395C  6EE6               	movwf	postinc1,c
 34708  01395E  0E42               	movlw	66
 34709  013960  6EE6               	movwf	postinc1,c
 34710  013962  EE21  F38B         	lfsr	2,_C+140	;volatile
 34711  013966  006F FF7B FFE6     	movff	postinc2,postinc1
 34712  01396C  006F FF7B FFE6     	movff	postinc2,postinc1
 34713  013972  006F FF7B FFE6     	movff	postinc2,postinc1
 34714  013978  006F FF7B FFE6     	movff	postinc2,postinc1
 34715  01397E  EE21  F39B         	lfsr	2,_C+156	;volatile
 34716  013982  006F FF7B FFE6     	movff	postinc2,postinc1
 34717  013988  006F FF7B FFE6     	movff	postinc2,postinc1
 34718  01398E  006F FF7B FFE6     	movff	postinc2,postinc1
 34719  013994  006F FF7B FFE6     	movff	postinc2,postinc1
 34720  01399A  ECD8  F0A6         	call	___fldiv	;wreg free
 34721  01399E  0060  F007  FFE6   	movff	btemp,postinc1
 34722  0139A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34723  0139AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34724  0139B0  0060  F013  FFE6   	movff	btemp+3,postinc1
 34725  0139B6  ECE5  F09E         	call	___flmul	;wreg free
 34726  0139BA  0060  F007  FFE6   	movff	btemp,postinc1
 34727  0139C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34728  0139C6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34729  0139CC  0060  F013  FFE6   	movff	btemp+3,postinc1
 34730  0139D2  EC51  F0C8         	call	___fltol	;wreg free
 34731  0139D6  0060  F004  F00B   	movff	btemp,btemp+10
 34732  0139DC  0060  F008  F00C   	movff	btemp+1,btemp+11
 34733  0139E2  0E01               	movlw	1
 34734  0139E4  260B               	addwf	(btemp+10)^0,f,c
 34735  0139E6  0E00               	movlw	0
 34736  0139E8  220C               	addwfc	(btemp+11)^0,f,c
 34737  0139EA  0060  F02C  F7B5   	movff	btemp+10,_C+182	;volatile
 34738  0139F0  0060  F030  F7B6   	movff	btemp+11,_C+183	;volatile
 34739                           
 34740                           ;bsoc.c: 76:  if (C.soc > 100)
 34741  0139F6  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34742  0139FA  0E01               	movlw	1
 34743  0139FC  50DB               	movf	plusw2,w,c
 34744  0139FE  E104               	bnz	u1264_20
 34745  013A00  0E65               	movlw	101
 34746  013A02  5CDE               	subwf	postinc2,w,c
 34747  013A04  A0D8               	btfss	status,0,c
 34748  013A06  D008               	goto	l13139
 34749  013A08                     u1264_20:
 34750                           
 34751                           ;bsoc.c: 77:   C.soc = 100;
 34752  013A08  0E64               	movlw	100
 34753  013A0A  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
 34754  013A10  0E00               	movlw	0
 34755  013A12  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
 34756  013A18                     l13139:
 34757                           
 34758                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 34759  013A18  EE21  F343         	lfsr	2,_C+68	;volatile
 34760  013A1C  0E03               	movlw	3
 34761  013A1E  AEDB               	btfss	plusw2,7,c
 34762  013A20  D047               	goto	l2114
 34763                           
 34764                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 34765  013A22  EE21  F343         	lfsr	2,_C+68	;volatile
 34766  013A26  006F FF7B FFE6     	movff	postinc2,postinc1
 34767  013A2C  006F FF7B FFE6     	movff	postinc2,postinc1
 34768  013A32  006F FF7B FFE6     	movff	postinc2,postinc1
 34769  013A38  006F FF7B FFE6     	movff	postinc2,postinc1
 34770  013A3E  EE21  F39B         	lfsr	2,_C+156	;volatile
 34771  013A42  006F FF7B FFE6     	movff	postinc2,postinc1
 34772  013A48  006F FF7B FFE6     	movff	postinc2,postinc1
 34773  013A4E  006F FF7B FFE6     	movff	postinc2,postinc1
 34774  013A54  006F FF7B FFE6     	movff	postinc2,postinc1
 34775  013A5A  ECD8  F0A6         	call	___fldiv	;wreg free
 34776  013A5E  0060  F007  FFE6   	movff	btemp,postinc1
 34777  013A64  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34778  013A6A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34779  013A70  0060  F013  FFE6   	movff	btemp+3,postinc1
 34780  013A76  EC12  F0DC         	call	___flneg	;wreg free
 34781  013A7A  0060  F007  FFE6   	movff	btemp,postinc1
 34782  013A80  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34783  013A86  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34784  013A8C  0060  F013  FFE6   	movff	btemp+3,postinc1
 34785  013A92  EC51  F0C8         	call	___fltol	;wreg free
 34786  013A96  0060  F004  F00B   	movff	btemp,btemp+10
 34787  013A9C  0060  F008  F00C   	movff	btemp+1,btemp+11
 34788  013AA2  0060  F02C  F7B3   	movff	btemp+10,_C+180	;volatile
 34789  013AA8  0060  F030  F7B4   	movff	btemp+11,_C+181	;volatile
 34790                           
 34791                           ;bsoc.c: 81:  } else {
 34792  013AAE  D008               	goto	l13143
 34793  013AB0                     l2114:
 34794                           
 34795                           ;bsoc.c: 82:   C.runtime = 99;
 34796  013AB0  0E63               	movlw	99
 34797  013AB2  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 34798  013AB8  0E00               	movlw	0
 34799  013ABA  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 34800  013AC0                     l13143:
 34801                           
 34802                           ;bsoc.c: 84:  if (C.runtime > 99)
 34803  013AC0  EE21  F3B3         	lfsr	2,_C+180	;volatile
 34804  013AC4  0E01               	movlw	1
 34805  013AC6  50DB               	movf	plusw2,w,c
 34806  013AC8  E104               	bnz	u1266_20
 34807  013ACA  0E64               	movlw	100
 34808  013ACC  5CDE               	subwf	postinc2,w,c
 34809  013ACE  A0D8               	btfss	status,0,c
 34810  013AD0  D008               	goto	l13147
 34811  013AD2                     u1266_20:
 34812                           
 34813                           ;bsoc.c: 85:   C.runtime = 99;
 34814  013AD2  0E63               	movlw	99
 34815  013AD4  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 34816  013ADA  0E00               	movlw	0
 34817  013ADC  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 34818  013AE2                     l13147:
 34819                           
 34820                           ;bsoc.c: 87:  V.lowint_count++;
 34821  013AE2  0E01               	movlw	1
 34822  013AE4  0101               	movlb	1	; () banked
 34823  013AE6  27BA               	addwf	(_V+179)& (0+255),f,b	;volatile
 34824  013AE8  0E00               	movlw	0
 34825  013AEA  23BB               	addwfc	(_V+180)& (0+255),f,b	;volatile
 34826  013AEC  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 34827  013AEE  23BD               	addwfc	(_V+182)& (0+255),f,b	;volatile
 34828                           
 34829                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 34830  013AF0  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 34831  013AF2  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 34832  013AF4  A4D8               	btfss	status,2,c
 34833  013AF6  D15B               	goto	l13159
 34834                           
 34835                           ; BSR set to: 1
 34836  013AF8  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
 34837  013AFA  B4D8               	btfsc	status,2,c
 34838  013AFC  D158               	goto	l13159
 34839                           
 34840                           ; BSR set to: 1
 34841                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 34842  013AFE  ECB6  F0E2         	call	_port_data_dma_ptr	;wreg free
 34843                           
 34844                           ;stkvar	_log_ptr @ sp[(-6)+4]
 34845  013B02  0EFF               	movlw	-1
 34846  013B04  0060  F00B  FFE3   	movff	btemp+1,plusw1
 34847  013B0A  0EFE               	movlw	-2
 34848  013B0C  0060  F007  FFE3   	movff	btemp,plusw1
 34849                           
 34850                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 34851  013B12  EE21  F3B9         	lfsr	2,_C+186	;volatile
 34852  013B16  006F FF7B FFE6     	movff	postinc2,postinc1
 34853  013B1C  006F FF7B FFE6     	movff	postinc2,postinc1
 34854  013B22  006F FF7B FFE6     	movff	postinc2,postinc1
 34855  013B28  006F FF7B FFE6     	movff	postinc2,postinc1
 34856  013B2E  EE21  F3BD         	lfsr	2,_C+190	;volatile
 34857  013B32  006F FF7B FFE6     	movff	postinc2,postinc1
 34858  013B38  006F FF7B FFE6     	movff	postinc2,postinc1
 34859  013B3E  006F FF7B FFE6     	movff	postinc2,postinc1
 34860  013B44  006F FF7B FFE6     	movff	postinc2,postinc1
 34861  013B4A  EE21  F39B         	lfsr	2,_C+156	;volatile
 34862  013B4E  006F FF7B FFE6     	movff	postinc2,postinc1
 34863  013B54  006F FF7B FFE6     	movff	postinc2,postinc1
 34864  013B5A  006F FF7B FFE6     	movff	postinc2,postinc1
 34865  013B60  006F FF7B FFE6     	movff	postinc2,postinc1
 34866  013B66  EE22  F026         	lfsr	2,_C+295	;volatile
 34867  013B6A  006F FF7B FFE6     	movff	postinc2,postinc1
 34868  013B70  006F FF7B FFE6     	movff	postinc2,postinc1
 34869  013B76  006F FF7B FFE6     	movff	postinc2,postinc1
 34870  013B7C  006F FF7B FFE6     	movff	postinc2,postinc1
 34871  013B82  EE22  F022         	lfsr	2,_C+291	;volatile
 34872  013B86  006F FF7B FFE6     	movff	postinc2,postinc1
 34873  013B8C  006F FF7B FFE6     	movff	postinc2,postinc1
 34874  013B92  006F FF7B FFE6     	movff	postinc2,postinc1
 34875  013B98  006F FF7B FFE6     	movff	postinc2,postinc1
 34876  013B9E  EE22  F021         	lfsr	2,_C+290	;volatile
 34877  013BA2  50DF               	movf	indf2,w,c
 34878  013BA4  6EE6               	movwf	postinc1,c
 34879  013BA6  0E00               	movlw	0
 34880  013BA8  6EE6               	movwf	postinc1,c
 34881  013BAA  EC9B  F0E2         	call	_get_ac_charger_relay	;wreg free
 34882  013BAE  5001               	movf	btemp^0,w,c
 34883  013BB0  6EE6               	movwf	postinc1,c
 34884  013BB2  0E00               	movlw	0
 34885  013BB4  6EE6               	movwf	postinc1,c
 34886  013BB6  EE21  F367         	lfsr	2,_C+104	;volatile
 34887  013BBA  006F FF7B FFE6     	movff	postinc2,postinc1
 34888  013BC0  006F FF7B FFE6     	movff	postinc2,postinc1
 34889  013BC6  006F FF7B FFE6     	movff	postinc2,postinc1
 34890  013BCC  006F FF7B FFE6     	movff	postinc2,postinc1
 34891  013BD2  EE21  F387         	lfsr	2,_C+136	;volatile
 34892  013BD6  006F FF7B FFE6     	movff	postinc2,postinc1
 34893  013BDC  006F FF7B FFE6     	movff	postinc2,postinc1
 34894  013BE2  006F FF7B FFE6     	movff	postinc2,postinc1
 34895  013BE8  006F FF7B FFE6     	movff	postinc2,postinc1
 34896  013BEE  EE21  F3B3         	lfsr	2,_C+180	;volatile
 34897  013BF2  006F FF78  F00B    	movff	postinc2,btemp+10
 34898  013BF8  006F FF74  F00C    	movff	postdec2,btemp+11
 34899  013BFE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34900  013C04  0060  F033  FFE6   	movff	btemp+11,postinc1
 34901  013C0A  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34902  013C0E  006F FF78  F00B    	movff	postinc2,btemp+10
 34903  013C14  006F FF74  F00C    	movff	postdec2,btemp+11
 34904  013C1A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34905  013C20  0060  F033  FFE6   	movff	btemp+11,postinc1
 34906  013C26  EE21  F393         	lfsr	2,_C+148	;volatile
 34907  013C2A  006F FF7B FFE6     	movff	postinc2,postinc1
 34908  013C30  006F FF7B FFE6     	movff	postinc2,postinc1
 34909  013C36  006F FF7B FFE6     	movff	postinc2,postinc1
 34910  013C3C  006F FF7B FFE6     	movff	postinc2,postinc1
 34911  013C42  EE21  F38F         	lfsr	2,_C+144	;volatile
 34912  013C46  006F FF7B FFE6     	movff	postinc2,postinc1
 34913  013C4C  006F FF7B FFE6     	movff	postinc2,postinc1
 34914  013C52  006F FF7B FFE6     	movff	postinc2,postinc1
 34915  013C58  006F FF7B FFE6     	movff	postinc2,postinc1
 34916  013C5E  EE21  F377         	lfsr	2,_C+120	;volatile
 34917  013C62  006F FF7B FFE6     	movff	postinc2,postinc1
 34918  013C68  006F FF7B FFE6     	movff	postinc2,postinc1
 34919  013C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 34920  013C74  006F FF7B FFE6     	movff	postinc2,postinc1
 34921  013C7A  EE21  F373         	lfsr	2,_C+116	;volatile
 34922  013C7E  006F FF7B FFE6     	movff	postinc2,postinc1
 34923  013C84  006F FF7B FFE6     	movff	postinc2,postinc1
 34924  013C8A  006F FF7B FFE6     	movff	postinc2,postinc1
 34925  013C90  006F FF7B FFE6     	movff	postinc2,postinc1
 34926  013C96  EE21  F37B         	lfsr	2,_C+124	;volatile
 34927  013C9A  006F FF7B FFE6     	movff	postinc2,postinc1
 34928  013CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 34929  013CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 34930  013CAC  006F FF7B FFE6     	movff	postinc2,postinc1
 34931  013CB2  EE21  F37F         	lfsr	2,_C+128	;volatile
 34932  013CB6  006F FF7B FFE6     	movff	postinc2,postinc1
 34933  013CBC  006F FF7B FFE6     	movff	postinc2,postinc1
 34934  013CC2  006F FF7B FFE6     	movff	postinc2,postinc1
 34935  013CC8  006F FF7B FFE6     	movff	postinc2,postinc1
 34936  013CCE  EE21  F363         	lfsr	2,_C+100	;volatile
 34937  013CD2  006F FF7B FFE6     	movff	postinc2,postinc1
 34938  013CD8  006F FF7B FFE6     	movff	postinc2,postinc1
 34939  013CDE  006F FF7B FFE6     	movff	postinc2,postinc1
 34940  013CE4  006F FF7B FFE6     	movff	postinc2,postinc1
 34941  013CEA  EE21  F34B         	lfsr	2,_C+76	;volatile
 34942  013CEE  006F FF7B FFE6     	movff	postinc2,postinc1
 34943  013CF4  006F FF7B FFE6     	movff	postinc2,postinc1
 34944  013CFA  006F FF7B FFE6     	movff	postinc2,postinc1
 34945  013D00  006F FF7B FFE6     	movff	postinc2,postinc1
 34946  013D06  EE21  F34F         	lfsr	2,_C+80	;volatile
 34947  013D0A  006F FF7B FFE6     	movff	postinc2,postinc1
 34948  013D10  006F FF7B FFE6     	movff	postinc2,postinc1
 34949  013D16  006F FF7B FFE6     	movff	postinc2,postinc1
 34950  013D1C  006F FF7B FFE6     	movff	postinc2,postinc1
 34951  013D22  EE21  F353         	lfsr	2,_C+84	;volatile
 34952  013D26  006F FF7B FFE6     	movff	postinc2,postinc1
 34953  013D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 34954  013D32  006F FF7B FFE6     	movff	postinc2,postinc1
 34955  013D38  006F FF7B FFE6     	movff	postinc2,postinc1
 34956  013D3E  0060  F623  FFE6   	movff	_V+129,postinc1
 34957  013D44  0060  F627  FFE6   	movff	_V+130,postinc1
 34958  013D4A  0060  F62B  FFE6   	movff	_V+131,postinc1
 34959  013D50  0060  F62F  FFE6   	movff	_V+132,postinc1
 34960  013D56  0E31               	movlw	49
 34961  013D58  6EE6               	movwf	postinc1,c
 34962  013D5A  0E00               	movlw	0
 34963  013D5C  6EE6               	movwf	postinc1,c
 34964  013D5E  0ED1               	movlw	low STR_64
 34965  013D60  6EE6               	movwf	postinc1,c
 34966  013D62  0EFB               	movlw	high STR_64
 34967  013D64  6EE6               	movwf	postinc1,c
 34968                           
 34969                           ;stkvar	_log_ptr @ sp[(-90)+4]
 34970  013D66  0EAA               	movlw	-86
 34971  013D68  006F FF8F FFE6     	movff	plusw1,postinc1
 34972  013D6E  006F FF8F FFE6     	movff	plusw1,postinc1
 34973  013D74  0E56               	movlw	86
 34974  013D76  6EE6               	movwf	postinc1,c
 34975  013D78  ECA2  F0CF         	call	_sprintf	;wreg free
 34976                           
 34977                           ; BSR set to: 0
 34978                           ;bsoc.c: 97:   StartTimer(TMR_DISPLAY, 125);
 34979  013D7C  0E7D               	movlw	125
 34980  013D7E  6EE6               	movwf	postinc1,c
 34981  013D80  0E00               	movlw	0
 34982  013D82  6EE6               	movwf	postinc1,c
 34983  013D84  0E0A               	movlw	10
 34984  013D86  6EE6               	movwf	postinc1,c
 34985  013D88  EC8E  F0DD         	call	_StartTimer	;wreg free
 34986                           
 34987                           ;bsoc.c: 98:   send_port_data_dma(strlen((char*) log_ptr));
 34988                           ;stkvar	_log_ptr @ sp[(-6)+4]
 34989  013D8C  0EFE               	movlw	-2
 34990  013D8E  006F FF8F FFE6     	movff	plusw1,postinc1
 34991  013D94  006F FF8F FFE6     	movff	plusw1,postinc1
 34992  013D9A  EC4D  F0D6         	call	_strlen	;wreg free
 34993  013D9E  0060  F007  FFE6   	movff	btemp,postinc1
 34994  013DA4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34995  013DAA  EC78  F0DB         	call	_send_port_data_dma	;wreg free
 34996  013DAE                     l13159:
 34997                           
 34998                           ;bsoc.c: 100:  if (log_update_wait >= 10)
 34999  013DAE  0E09               	movlw	9
 35000  013DB0  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 35001  013DB2  D001               	goto	l2118
 35002                           
 35003                           ;bsoc.c: 101:   log_update_wait = 0;
 35004  013DB4  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 35005  013DB6                     l2118:
 35006                           
 35007                           ;bsoc.c: 103:  C.update = 0;
 35008  013DB6  0E00               	movlw	0
 35009  013DB8  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 35010                           
 35011                           ;bsoc.c: 105:  do { LATEbits.LATE1 = 0; } while(0);
 35012  013DBE  92BE               	bcf	190,1,c	;volatile
 35013                           
 35014                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 35015  013DC0  0EFA               	movlw	250
 35016  013DC2  26E1               	addwf	fsr1l,f,c
 35017  013DC4  0EFF               	movlw	255
 35018  013DC6  22E2               	addwfc	fsr1h,f,c
 35019  013DC8  0012               	return		;funcret
 35020  013DCA                     __end_of_calc_bsoc:
 35021                           	opt callstack 0
 35022                           
 35023 ;; *************** function _send_port_data_dma *****************
 35024 ;; Defined at:
 35025 ;;		line 398 in file "eadog.c"
 35026 ;; Parameters:    Size  Location     Type
 35027 ;;  dsize           2  [STACK] unsigned short 
 35028 ;; Auto vars:     Size  Location     Type
 35029 ;;		None
 35030 ;; Return value:  Size  Location     Type
 35031 ;;                  1  [STACK] void 
 35032 ;; Registers used:
 35033 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 35034 ;; Tracked objects:
 35035 ;;		On entry : 0/0
 35036 ;;		On exit  : 3F/3B
 35037 ;;		Unchanged: 0/0
 35038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35043 ;;Total ram usage:        0 bytes
 35044 ;; Hardware stack levels used:    1
 35045 ;; Hardware stack levels required when called:    3
 35046 ;; This function calls:
 35047 ;;		Nothing
 35048 ;; This function is called by:
 35049 ;;		_calc_bsoc
 35050 ;; This function uses a reentrant model
 35051 ;;
 35052                           
 35053                           	psect	text159
 35054  01B6F0                     __ptext159:
 35055                           	opt callstack 0
 35056  01B6F0                     _send_port_data_dma:
 35057                           	opt callstack 10
 35058                           
 35059                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 35060                           ;stkvar	_dsize @ sp[(0)+-2]
 35061                           
 35062                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35063                           ;incstack = 0
 35064  01B6F0  0EFE               	movlw	-2
 35065  01B6F2  04E3               	decf	plusw1,w,c
 35066  01B6F4  0EFF               	movlw	-1
 35067  01B6F6  006F FF8C  F001    	movff	plusw1,btemp
 35068  01B6FC  0E02               	movlw	2
 35069  01B6FE  5A01               	subwfb	btemp^0,f,c
 35070  01B700  A0D8               	btfss	status,0,c
 35071  01B702  D00C               	goto	l10131
 35072                           
 35073                           ;eadog.c: 401:   dsize = 512;
 35074  01B704  0E00               	movlw	0
 35075  01B706  6E0B               	movwf	(btemp+10)^0,c
 35076  01B708  0E02               	movlw	2
 35077  01B70A  6E0C               	movwf	(btemp+11)^0,c
 35078                           
 35079                           ;stkvar	_dsize @ sp[(0)+-2]
 35080  01B70C  0EFE               	movlw	-2
 35081  01B70E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35082  01B714  0EFF               	movlw	-1
 35083  01B716  0060  F033  FFE3   	movff	btemp+11,plusw1
 35084  01B71C                     l10131:
 35085                           
 35086                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 35087  01B71C  013B               	movlb	59	; () banked
 35088  01B71E  9FDC               	bcf	220,7,b	;volatile
 35089                           
 35090                           ; BSR set to: 59
 35091                           ;eadog.c: 404:  DMA2SSZ = dsize;
 35092                           ;stkvar	_dsize @ sp[(0)+-2]
 35093  01B720  0EFE               	movlw	-2
 35094  01B722  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 35095  01B728  0EFF               	movlw	-1
 35096  01B72A  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 35097                           
 35098                           ; BSR set to: 59
 35099                           ;eadog.c: 405:  DMA2DSZ = 1;
 35100  01B730  0E00               	movlw	0
 35101  01B732  6FCF               	movwf	207,b	;volatile
 35102  01B734  0E01               	movlw	1
 35103  01B736  6FCE               	movwf	206,b	;volatile
 35104                           
 35105                           ; BSR set to: 59
 35106                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 35107  01B738  8FDC               	bsf	220,7,b	;volatile
 35108                           
 35109                           ; BSR set to: 59
 35110                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 35111  01B73A  8DDC               	bsf	220,6,b	;volatile
 35112                           
 35113                           ; BSR set to: 59
 35114                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 35115  01B73C  52E5               	movf	postdec1,f,c
 35116  01B73E  52E5               	movf	postdec1,f,c
 35117  01B740  0012               	return		;funcret
 35118  01B742                     __end_of_send_port_data_dma:
 35119                           	opt callstack 0
 35120                           
 35121 ;; *************** function _port_data_dma_ptr *****************
 35122 ;; Defined at:
 35123 ;;		line 413 in file "eadog.c"
 35124 ;; Parameters:    Size  Location     Type
 35125 ;;		None
 35126 ;; Auto vars:     Size  Location     Type
 35127 ;;		None
 35128 ;; Return value:  Size  Location     Type
 35129 ;;                  2  [STACK] PTR unsigned char 
 35130 ;; Registers used:
 35131 ;;		wreg, status,2, status,0, btemp, btemp+1
 35132 ;; Tracked objects:
 35133 ;;		On entry : 3F/1
 35134 ;;		On exit  : 0/0
 35135 ;;		Unchanged: 0/0
 35136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35141 ;;Total ram usage:        0 bytes
 35142 ;; Hardware stack levels used:    1
 35143 ;; Hardware stack levels required when called:    3
 35144 ;; This function calls:
 35145 ;;		Nothing
 35146 ;; This function is called by:
 35147 ;;		_calc_bsoc
 35148 ;; This function uses a reentrant model
 35149 ;;
 35150                           
 35151                           	psect	text160
 35152  01C56C                     __ptext160:
 35153                           	opt callstack 0
 35154  01C56C                     _port_data_dma_ptr:
 35155                           	opt callstack 10
 35156                           
 35157                           ;eadog.c: 415:  return port_data;
 35158                           
 35159                           ; BSR set to: 59
 35160                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35161                           ;incstack = 0
 35162  01C56C  0EFF               	movlw	low _port_data
 35163  01C56E  6E01               	movwf	btemp^0,c
 35164  01C570  0E04               	movlw	high _port_data
 35165  01C572  6E02               	movwf	(btemp+1)^0,c
 35166                           
 35167                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35168  01C574  0012               	return		;funcret
 35169  01C576                     __end_of_port_data_dma_ptr:
 35170                           	opt callstack 0
 35171                           
 35172 ;; *************** function ___asfladd *****************
 35173 ;; Defined at:
 35174 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 35175 ;; Parameters:    Size  Location     Type
 35176 ;;  f1p             2  [STACK] PTR 
 35177 ;;		 -> C(299), 
 35178 ;;  f2              4  [STACK] PTR 
 35179 ;; Auto vars:     Size  Location     Type
 35180 ;;		None
 35181 ;; Return value:  Size  Location     Type
 35182 ;;                  4  [STACK] PTR 
 35183 ;; Registers used:
 35184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 35185 ;; Tracked objects:
 35186 ;;		On entry : 0/0
 35187 ;;		On exit  : 0/0
 35188 ;;		Unchanged: 0/0
 35189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35194 ;;Total ram usage:        0 bytes
 35195 ;; Hardware stack levels used:    1
 35196 ;; Hardware stack levels required when called:    4
 35197 ;; This function calls:
 35198 ;;		___fladd
 35199 ;; This function is called by:
 35200 ;;		_calc_bsoc
 35201 ;; This function uses a reentrant model
 35202 ;;
 35203                           
 35204                           	psect	text161
 35205  01B106                     __ptext161:
 35206                           	opt callstack 0
 35207  01B106                     ___asfladd:
 35208                           	opt callstack 9
 35209                           
 35210                           ;	Return value of ___asfladd is never used
 35211                           ;stkvar	_f2 @ sp[(0)+-6]
 35212                           
 35213                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35214                           ;incstack = 0
 35215  01B106  0EFA               	movlw	-6
 35216  01B108  006F FF8F FFE6     	movff	plusw1,postinc1
 35217  01B10E  006F FF8F FFE6     	movff	plusw1,postinc1
 35218  01B114  006F FF8F FFE6     	movff	plusw1,postinc1
 35219  01B11A  006F FF8F FFE6     	movff	plusw1,postinc1
 35220                           
 35221                           ;stkvar	_f1p @ sp[(-4)+-2]
 35222  01B120  0EFA               	movlw	-6
 35223  01B122  006F FF8F FFD9     	movff	plusw1,fsr2l
 35224  01B128  0EFB               	movlw	-5
 35225  01B12A  006F FF8F FFDA     	movff	plusw1,fsr2h
 35226  01B130  006F FF7B FFE6     	movff	postinc2,postinc1
 35227  01B136  006F FF7B FFE6     	movff	postinc2,postinc1
 35228  01B13C  006F FF7B FFE6     	movff	postinc2,postinc1
 35229  01B142  006F FF7B FFE6     	movff	postinc2,postinc1
 35230  01B148  ECFA  F0A2         	call	___fladd	;wreg free
 35231                           
 35232                           ;stkvar	_f1p @ sp[(0)+-2]
 35233  01B14C  0EFE               	movlw	-2
 35234  01B14E  006F FF8F FFD9     	movff	plusw1,fsr2l
 35235  01B154  0EFF               	movlw	-1
 35236  01B156  006F FF8F FFDA     	movff	plusw1,fsr2h
 35237  01B15C  0060  F007  FFDE   	movff	btemp,postinc2
 35238  01B162  0060  F00B  FFDE   	movff	btemp+1,postinc2
 35239  01B168  0060  F00F  FFDE   	movff	btemp+2,postinc2
 35240  01B16E  0060  F013  FFDE   	movff	btemp+3,postinc2
 35241                           
 35242                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 35243  01B174  0EFA               	movlw	250
 35244  01B176  26E1               	addwf	fsr1l,f,c
 35245  01B178  0EFF               	movlw	255
 35246  01B17A  22E2               	addwfc	fsr1h,f,c
 35247  01B17C  0012               	return		;funcret
 35248  01B17E                     __end_of___asfladd:
 35249                           	opt callstack 0
 35250                           
 35251 ;; *************** function _INT0_ISR *****************
 35252 ;; Defined at:
 35253 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 35254 ;; Parameters:    Size  Location     Type
 35255 ;;		None
 35256 ;; Auto vars:     Size  Location     Type
 35257 ;;		None
 35258 ;; Return value:  Size  Location     Type
 35259 ;;                  1    wreg      void 
 35260 ;; Registers used:
 35261 ;;		wreg, status,2, status,0, pclath, tosl
 35262 ;; Tracked objects:
 35263 ;;		On entry : 0/0
 35264 ;;		On exit  : 0/0
 35265 ;;		Unchanged: 0/0
 35266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35271 ;;Total ram usage:        0 bytes
 35272 ;; Hardware stack levels used:    1
 35273 ;; Hardware stack levels required when called:    2
 35274 ;; This function calls:
 35275 ;;		_INT0_CallBack
 35276 ;; This function is called by:
 35277 ;;		Interrupt level 2
 35278 ;; This function uses a non-reentrant model
 35279 ;;
 35280                           
 35281                           	psect	text162
 35282  01C544                     __ptext162:
 35283                           	opt callstack 0
 35284  01C544                     _INT0_ISR:
 35285                           	opt callstack 2
 35286                           
 35287                           ;incstack = 0
 35288  01C544  EE14  F15E         	lfsr	1,___inthi_sp
 35289                           
 35290                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 35291  01C548  0139               	movlb	57	; () banked
 35292  01C54A  91A1               	bcf	161,0,b	;volatile
 35293                           
 35294                           ; BSR set to: 57
 35295                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 35296  01C54C  EC44  F0E1         	call	_INT0_CallBack	;wreg free
 35297  01C550  0011               	retfie		f
 35298  01C552                     __end_of_INT0_ISR:
 35299                           	opt callstack 0
 35300                           
 35301 ;; *************** function _INT0_CallBack *****************
 35302 ;; Defined at:
 35303 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 35304 ;; Parameters:    Size  Location     Type
 35305 ;;		None
 35306 ;; Auto vars:     Size  Location     Type
 35307 ;;		None
 35308 ;; Return value:  Size  Location     Type
 35309 ;;                  1  [STACK] void 
 35310 ;; Registers used:
 35311 ;;		wreg, status,2, status,0, pclath, tosl
 35312 ;; Tracked objects:
 35313 ;;		On entry : 3F/39
 35314 ;;		On exit  : 0/0
 35315 ;;		Unchanged: 0/0
 35316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35321 ;;Total ram usage:        0 bytes
 35322 ;; Hardware stack levels used:    1
 35323 ;; Hardware stack levels required when called:    1
 35324 ;; This function calls:
 35325 ;;		Absolute function
 35326 ;;		_INT0_DefaultInterruptHandler
 35327 ;; This function is called by:
 35328 ;;		_INT0_ISR
 35329 ;; This function uses a reentrant model
 35330 ;;
 35331                           
 35332                           	psect	text163
 35333  01C288                     __ptext163:
 35334                           	opt callstack 0
 35335  01C288                     _INT0_CallBack:
 35336                           	opt callstack 2
 35337                           
 35338                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 35339                           
 35340                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35341                           ;incstack = 0
 35342  01C288  0100               	movlb	0	; () banked
 35343  01C28A  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 35344  01C28C  1198               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 35345  01C28E  1199               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 35346  01C290  B4D8               	btfsc	status,2,c
 35347  01C292  0012               	return	
 35348                           
 35349                           ; BSR set to: 0
 35350                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 35351  01C294  D801               	call	u1010_48
 35352  01C296  0012               	return	
 35353  01C298                     u1010_48:
 35354  01C298  0005               	push	
 35355  01C29A  6EFA               	movwf	pclath,c
 35356  01C29C  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 35357  01C29E  6EFD               	movwf	tosl,c
 35358  01C2A0  5198               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 35359  01C2A2  6EFE               	movwf	tosh,c
 35360  01C2A4  5199               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 35361  01C2A6  6EFF               	movwf	tosu,c
 35362  01C2A8  50FA               	movf	pclath,w,c
 35363  01C2AA  0012               	return		;indir
 35364  01C2AC                     __end_of_INT0_CallBack:
 35365                           	opt callstack 0
 35366                           
 35367 ;; *************** function _INT0_DefaultInterruptHandler *****************
 35368 ;; Defined at:
 35369 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 35370 ;; Parameters:    Size  Location     Type
 35371 ;;		None
 35372 ;; Auto vars:     Size  Location     Type
 35373 ;;		None
 35374 ;; Return value:  Size  Location     Type
 35375 ;;                  1  [STACK] void 
 35376 ;; Registers used:
 35377 ;;		None
 35378 ;; Tracked objects:
 35379 ;;		On entry : 3F/0
 35380 ;;		On exit  : 0/0
 35381 ;;		Unchanged: 0/0
 35382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35387 ;;Total ram usage:        0 bytes
 35388 ;; Hardware stack levels used:    1
 35389 ;; This function calls:
 35390 ;;		Nothing
 35391 ;; This function is called by:
 35392 ;;		_EXT_INT_Initialize
 35393 ;;		_INT0_CallBack
 35394 ;; This function uses a reentrant model
 35395 ;;
 35396                           
 35397                           	psect	text164
 35398  01C5E6                     __ptext164:
 35399                           	opt callstack 0
 35400  01C5E6                     _INT0_DefaultInterruptHandler:
 35401                           	opt callstack 2
 35402                           
 35403                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35404                           
 35405                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35406                           ;incstack = 0
 35407  01C5E6  0012               	return		;funcret
 35408  01C5E8                     __end_of_INT0_DefaultInterruptHandler:
 35409                           	opt callstack 0
 35410                           
 35411 ;; *************** function _Default_ISR *****************
 35412 ;; Defined at:
 35413 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 35414 ;; Parameters:    Size  Location     Type
 35415 ;;		None
 35416 ;; Auto vars:     Size  Location     Type
 35417 ;;		None
 35418 ;; Return value:  Size  Location     Type
 35419 ;;                  1    wreg      void 
 35420 ;; Registers used:
 35421 ;;		None
 35422 ;; Tracked objects:
 35423 ;;		On entry : 0/0
 35424 ;;		On exit  : 0/0
 35425 ;;		Unchanged: 0/0
 35426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35431 ;;Total ram usage:        0 bytes
 35432 ;; Hardware stack levels used:    1
 35433 ;; This function calls:
 35434 ;;		Nothing
 35435 ;; This function is called by:
 35436 ;;		Interrupt level 2
 35437 ;; This function uses a non-reentrant model
 35438 ;;
 35439                           
 35440                           	psect	text165
 35441  01C5DC                     __ptext165:
 35442                           	opt callstack 0
 35443  01C5DC                     _Default_ISR:
 35444                           	opt callstack 4
 35445                           
 35446                           ;incstack = 0
 35447  01C5DC  EE14  F15E         	lfsr	1,___inthi_sp
 35448  01C5E0  0011               	retfie		f
 35449  01C5E2                     __end_of_Default_ISR:
 35450                           	opt callstack 0
 35451                           
 35452 ;; *************** function _ADCC_ISR *****************
 35453 ;; Defined at:
 35454 ;;		line 314 in file "mcc_generated_files/adcc.c"
 35455 ;; Parameters:    Size  Location     Type
 35456 ;;		None
 35457 ;; Auto vars:     Size  Location     Type
 35458 ;;		None
 35459 ;; Return value:  Size  Location     Type
 35460 ;;                  1    wreg      void 
 35461 ;; Registers used:
 35462 ;;		wreg, status,2, status,0, pclath, tosl
 35463 ;; Tracked objects:
 35464 ;;		On entry : 0/0
 35465 ;;		On exit  : 0/0
 35466 ;;		Unchanged: 0/0
 35467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35472 ;;Total ram usage:        0 bytes
 35473 ;; Hardware stack levels used:    1
 35474 ;; Hardware stack levels required when called:    1
 35475 ;; This function calls:
 35476 ;;		Absolute function
 35477 ;;		_ADCC_DefaultInterruptHandler
 35478 ;;		_adc_int_handler
 35479 ;; This function is called by:
 35480 ;;		Interrupt level 2
 35481 ;; This function uses a non-reentrant model
 35482 ;;
 35483                           
 35484                           	psect	text166
 35485  01BF1C                     __ptext166:
 35486                           	opt callstack 0
 35487  01BF1C                     _ADCC_ISR:
 35488                           	opt callstack 3
 35489                           
 35490                           ;incstack = 0
 35491  01BF1C  EE14  F15E         	lfsr	1,___inthi_sp
 35492                           
 35493                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 35494  01BF20  0139               	movlb	57	; () banked
 35495  01BF22  95A1               	bcf	161,2,b	;volatile
 35496                           
 35497                           ; BSR set to: 57
 35498                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 35499  01BF24  0100               	movlb	0	; () banked
 35500  01BF26  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 35501  01BF28  1189               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 35502  01BF2A  118A               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 35503  01BF2C  B4D8               	btfsc	status,2,c
 35504  01BF2E  0011               	retfie		f
 35505                           
 35506                           ; BSR set to: 0
 35507                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 35508  01BF30  D801               	call	i2u1058_48
 35509  01BF32  0011               	retfie		f
 35510  01BF34                     i2u1058_48:
 35511  01BF34  0005               	push	
 35512  01BF36  6EFA               	movwf	pclath,c
 35513  01BF38  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 35514  01BF3A  6EFD               	movwf	tosl,c
 35515  01BF3C  5189               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 35516  01BF3E  6EFE               	movwf	tosh,c
 35517  01BF40  518A               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 35518  01BF42  6EFF               	movwf	tosu,c
 35519  01BF44  50FA               	movf	pclath,w,c
 35520  01BF46  0012               	return		;indir
 35521  01BF48                     __end_of_ADCC_ISR:
 35522                           	opt callstack 0
 35523                           
 35524 ;; *************** function _adc_int_t_handler *****************
 35525 ;; Defined at:
 35526 ;;		line 168 in file "daq.c"
 35527 ;; Parameters:    Size  Location     Type
 35528 ;;		None
 35529 ;; Auto vars:     Size  Location     Type
 35530 ;;		None
 35531 ;; Return value:  Size  Location     Type
 35532 ;;                  1  [STACK] void 
 35533 ;; Registers used:
 35534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 35535 ;; Tracked objects:
 35536 ;;		On entry : 3F/0
 35537 ;;		On exit  : 1/0
 35538 ;;		Unchanged: 0/0
 35539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35544 ;;Total ram usage:        0 bytes
 35545 ;; Hardware stack levels used:    1
 35546 ;; Hardware stack levels required when called:    1
 35547 ;; This function calls:
 35548 ;;		_ADCC_DischargeSampleCapacitor
 35549 ;;		_ADCC_StartConversion
 35550 ;; This function is called by:
 35551 ;;		_start_adc_scan
 35552 ;;		_ADCC_ThresholdISR
 35553 ;; This function uses a reentrant model
 35554 ;;
 35555                           
 35556                           	psect	text167
 35557  01B088                     __ptext167:
 35558                           	opt callstack 0
 35559  01B088                     _adc_int_t_handler:
 35560                           	opt callstack 2
 35561                           
 35562                           ;daq.c: 173:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 35563                           
 35564                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35565                           ;incstack = 0
 35566  01B088  013E               	movlb	62	; () banked
 35567  01B08A  51E6               	movf	230,w,b	;volatile
 35568  01B08C  006F FB9C  F001    	movff	16103,btemp	;volatile
 35569  01B092  6A02               	clrf	(btemp+1)^0,c
 35570  01B094  0060  F004  F002   	movff	btemp,btemp+1
 35571  01B09A  6A01               	clrf	btemp^0,c
 35572  01B09C  2601               	addwf	btemp^0,f,c
 35573  01B09E  0E00               	movlw	0
 35574  01B0A0  2202               	addwfc	(btemp+1)^0,f,c
 35575  01B0A2  0100               	movlb	0	; () banked
 35576  01B0A4  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 35577  01B0A6  0D02               	mullw	2
 35578  01B0A8  50F3               	movf	243,w,c
 35579  01B0AA  0FAF               	addlw	low _R
 35580  01B0AC  6ED9               	movwf	fsr2l,c
 35581  01B0AE  6ADA               	clrf	fsr2h,c
 35582  01B0B0  0060  F007  FFDE   	movff	btemp,postinc2
 35583  01B0B6  0060  F00B  FFDD   	movff	btemp+1,postdec2
 35584  01B0BC                     l11411:
 35585                           
 35586                           ;daq.c: 175:   if (++R.scan_index > 0XD) {
 35587  01B0BC  0100               	movlb	0	; () banked
 35588  01B0BE  2BE1               	incf	(_R+50)& (0+255),f,b	;volatile
 35589  01B0C0  0E0D               	movlw	13
 35590  01B0C2  65E1               	cpfsgt	(_R+50)& (0+255),b	;volatile
 35591  01B0C4  D003               	goto	l11417
 35592                           
 35593                           ; BSR set to: 0
 35594                           ;daq.c: 176:    R.done = 1;
 35595  01B0C6  0E01               	movlw	1
 35596  01B0C8  6FE4               	movwf	(_R+53)& (0+255),b	;volatile
 35597  01B0CA  0012               	return	
 35598  01B0CC                     l11417:
 35599                           
 35600                           ; BSR set to: 0
 35601                           ;daq.c: 182:  } while (!((R.scan_select >> R.scan_index) &0x1));
 35602  01B0CC  0060  F384  F00C   	movff	_R+50,btemp+11	;volatile
 35603  01B0D2  EE20  F0E2         	lfsr	2,_R+51	;volatile
 35604  01B0D6  006F FF78  F009    	movff	postinc2,btemp+8
 35605  01B0DC  006F FF74  F00A    	movff	postdec2,btemp+9
 35606  01B0E2  2A0C               	incf	(btemp+11)^0,f,c
 35607  01B0E4  D003               	goto	u1055_44
 35608  01B0E6                     u1055_45:
 35609  01B0E6  90D8               	bcf	status,0,c
 35610  01B0E8  320A               	rrcf	(btemp+9)^0,f,c
 35611  01B0EA  3209               	rrcf	(btemp+8)^0,f,c
 35612  01B0EC                     u1055_44:
 35613  01B0EC  2E0C               	decfsz	(btemp+11)^0,f,c
 35614  01B0EE  D7FB               	goto	u1055_45
 35615  01B0F0  A009               	btfss	(btemp+8)^0,0,c
 35616  01B0F2  D7E4               	goto	l11411
 35617                           
 35618                           ;daq.c: 183:  ADCC_DischargeSampleCapacitor();
 35619  01B0F4  ECCD  F0E2         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 35620                           
 35621                           ; BSR set to: 62
 35622                           ;daq.c: 184:  ADCC_StartConversion(R.scan_index & 0xf);
 35623  01B0F8  0100               	movlb	0	; () banked
 35624  01B0FA  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 35625  01B0FC  0B0F               	andlw	15
 35626  01B0FE  6EE6               	movwf	postinc1,c
 35627  01B100  EC64  F0E2         	call	_ADCC_StartConversion	;wreg free
 35628                           
 35629                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35630  01B104  0012               	return		;funcret
 35631  01B106                     __end_of_adc_int_t_handler:
 35632                           	opt callstack 0
 35633                           
 35634 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 35635 ;; Defined at:
 35636 ;;		line 339 in file "mcc_generated_files/adcc.c"
 35637 ;; Parameters:    Size  Location     Type
 35638 ;;		None
 35639 ;; Auto vars:     Size  Location     Type
 35640 ;;		None
 35641 ;; Return value:  Size  Location     Type
 35642 ;;                  1  [STACK] void 
 35643 ;; Registers used:
 35644 ;;		None
 35645 ;; Tracked objects:
 35646 ;;		On entry : 3F/0
 35647 ;;		On exit  : 0/0
 35648 ;;		Unchanged: 0/0
 35649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35654 ;;Total ram usage:        0 bytes
 35655 ;; Hardware stack levels used:    1
 35656 ;; This function calls:
 35657 ;;		Nothing
 35658 ;; This function is called by:
 35659 ;;		_ADCC_Initialize
 35660 ;;		_ADCC_ISR
 35661 ;;		_ADCC_ThresholdISR
 35662 ;; This function uses a reentrant model
 35663 ;;
 35664                           
 35665                           	psect	text168
 35666  01C5E8                     __ptext168:
 35667                           	opt callstack 0
 35668  01C5E8                     _ADCC_DefaultInterruptHandler:
 35669                           	opt callstack 3
 35670                           
 35671                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35672                           
 35673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35674                           ;incstack = 0
 35675  01C5E8  0012               	return		;funcret
 35676  01C5EA                     __end_of_ADCC_DefaultInterruptHandler:
 35677                           	opt callstack 0
 35678                           
 35679 ;; *************** function _adc_int_handler *****************
 35680 ;; Defined at:
 35681 ;;		line 158 in file "daq.c"
 35682 ;; Parameters:    Size  Location     Type
 35683 ;;		None
 35684 ;; Auto vars:     Size  Location     Type
 35685 ;;		None
 35686 ;; Return value:  Size  Location     Type
 35687 ;;                  1  [STACK] void 
 35688 ;; Registers used:
 35689 ;;		None
 35690 ;; Tracked objects:
 35691 ;;		On entry : 3F/0
 35692 ;;		On exit  : 0/0
 35693 ;;		Unchanged: 0/0
 35694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35699 ;;Total ram usage:        0 bytes
 35700 ;; Hardware stack levels used:    1
 35701 ;; This function calls:
 35702 ;;		Nothing
 35703 ;; This function is called by:
 35704 ;;		_start_adc_scan
 35705 ;;		_ADCC_ISR
 35706 ;; This function uses a reentrant model
 35707 ;;
 35708                           
 35709                           	psect	text169
 35710  01C5EA                     __ptext169:
 35711                           	opt callstack 0
 35712  01C5EA                     _adc_int_handler:
 35713                           	opt callstack 3
 35714                           
 35715                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35716                           
 35717                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35718                           ;incstack = 0
 35719  01C5EA  0012               	return		;funcret
 35720  01C5EC                     __end_of_adc_int_handler:
 35721                           	opt callstack 0
 35722                           
 35723 ;; *************** function _ADCC_ThresholdISR *****************
 35724 ;; Defined at:
 35725 ;;		line 327 in file "mcc_generated_files/adcc.c"
 35726 ;; Parameters:    Size  Location     Type
 35727 ;;		None
 35728 ;; Auto vars:     Size  Location     Type
 35729 ;;		None
 35730 ;; Return value:  Size  Location     Type
 35731 ;;                  1    wreg      void 
 35732 ;; Registers used:
 35733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 35734 ;; Tracked objects:
 35735 ;;		On entry : 0/0
 35736 ;;		On exit  : 0/0
 35737 ;;		Unchanged: 0/0
 35738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35741 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35742 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35743 ;;Total ram usage:        5 bytes
 35744 ;; Hardware stack levels used:    1
 35745 ;; Hardware stack levels required when called:    2
 35746 ;; This function calls:
 35747 ;;		Absolute function
 35748 ;;		_ADCC_DefaultInterruptHandler
 35749 ;;		_adc_int_t_handler
 35750 ;; This function is called by:
 35751 ;;		Interrupt level 2
 35752 ;; This function uses a non-reentrant model
 35753 ;;
 35754                           
 35755                           	psect	text170
 35756  01B338                     __ptext170:
 35757                           	opt callstack 0
 35758  01B338                     _ADCC_ThresholdISR:
 35759                           	opt callstack 2
 35760                           
 35761                           ;incstack = 0
 35762  01B338  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 35763  01B33E  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 35764  01B344  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 35765  01B34A  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 35766  01B350  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 35767  01B356  EE14  F15E         	lfsr	1,___inthi_sp
 35768                           
 35769                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 35770  01B35A  0139               	movlb	57	; () banked
 35771  01B35C  97A1               	bcf	161,3,b	;volatile
 35772                           
 35773                           ; BSR set to: 57
 35774                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 35775  01B35E  0100               	movlb	0	; () banked
 35776  01B360  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 35777  01B362  1186               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 35778  01B364  1187               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 35779  01B366  B4D8               	btfsc	status,2,c
 35780  01B368  D00C               	goto	i2u1060_49
 35781                           
 35782                           ; BSR set to: 0
 35783                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 35784  01B36A  D801               	call	i2u1060_48
 35785  01B36C  D00A               	goto	i2u1060_49
 35786  01B36E                     i2u1060_48:
 35787  01B36E  0005               	push	
 35788  01B370  6EFA               	movwf	pclath,c
 35789  01B372  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 35790  01B374  6EFD               	movwf	tosl,c
 35791  01B376  5186               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 35792  01B378  6EFE               	movwf	tosh,c
 35793  01B37A  5187               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 35794  01B37C  6EFF               	movwf	tosu,c
 35795  01B37E  50FA               	movf	pclath,w,c
 35796  01B380  0012               	return		;indir
 35797  01B382                     i2u1060_49:
 35798  01B382  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 35799  01B388  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 35800  01B38E  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 35801  01B394  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 35802  01B39A  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 35803  01B3A0  0011               	retfie		f
 35804  01B3A2                     __end_of_ADCC_ThresholdISR:
 35805                           	opt callstack 0
 35806                           
 35807 ;; *************** function _UART1_rx_vect_isr *****************
 35808 ;; Defined at:
 35809 ;;		line 181 in file "mcc_generated_files/uart1.c"
 35810 ;; Parameters:    Size  Location     Type
 35811 ;;		None
 35812 ;; Auto vars:     Size  Location     Type
 35813 ;;		None
 35814 ;; Return value:  Size  Location     Type
 35815 ;;                  1    wreg      void 
 35816 ;; Registers used:
 35817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35818 ;; Tracked objects:
 35819 ;;		On entry : 0/0
 35820 ;;		On exit  : 0/0
 35821 ;;		Unchanged: 0/0
 35822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35827 ;;Total ram usage:        0 bytes
 35828 ;; Hardware stack levels used:    1
 35829 ;; Hardware stack levels required when called:    1
 35830 ;; This function calls:
 35831 ;;		Absolute function
 35832 ;;		_UART1_Receive_ISR
 35833 ;; This function is called by:
 35834 ;;		Interrupt level 2
 35835 ;; This function uses a non-reentrant model
 35836 ;;
 35837                           
 35838                           	psect	text171
 35839  01C180                     __ptext171:
 35840                           	opt callstack 0
 35841  01C180                     _UART1_rx_vect_isr:
 35842                           	opt callstack 3
 35843                           
 35844                           ;incstack = 0
 35845  01C180  EE14  F15E         	lfsr	1,___inthi_sp
 35846                           
 35847                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 35848  01C184  0100               	movlb	0	; () banked
 35849  01C186  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35850  01C188  118C               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35851  01C18A  118D               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35852  01C18C  B4D8               	btfsc	status,2,c
 35853  01C18E  0011               	retfie		f
 35854                           
 35855                           ; BSR set to: 0
 35856                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 35857  01C190  D801               	call	i2u1062_48
 35858  01C192  0011               	retfie		f
 35859  01C194                     i2u1062_48:
 35860  01C194  0005               	push	
 35861  01C196  6EFA               	movwf	pclath,c
 35862  01C198  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35863  01C19A  6EFD               	movwf	tosl,c
 35864  01C19C  518C               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35865  01C19E  6EFE               	movwf	tosh,c
 35866  01C1A0  518D               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35867  01C1A2  6EFF               	movwf	tosu,c
 35868  01C1A4  50FA               	movf	pclath,w,c
 35869  01C1A6  0012               	return		;indir
 35870  01C1A8                     __end_of_UART1_rx_vect_isr:
 35871                           	opt callstack 0
 35872                           
 35873 ;; *************** function _UART1_Receive_ISR *****************
 35874 ;; Defined at:
 35875 ;;		line 192 in file "mcc_generated_files/uart1.c"
 35876 ;; Parameters:    Size  Location     Type
 35877 ;;		None
 35878 ;; Auto vars:     Size  Location     Type
 35879 ;;		None
 35880 ;; Return value:  Size  Location     Type
 35881 ;;                  1  [STACK] void 
 35882 ;; Registers used:
 35883 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35884 ;; Tracked objects:
 35885 ;;		On entry : 3F/0
 35886 ;;		On exit  : 3F/0
 35887 ;;		Unchanged: 0/0
 35888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35893 ;;Total ram usage:        0 bytes
 35894 ;; Hardware stack levels used:    1
 35895 ;; This function calls:
 35896 ;;		Nothing
 35897 ;; This function is called by:
 35898 ;;		_UART1_Initialize
 35899 ;;		_UART1_rx_vect_isr
 35900 ;; This function uses a reentrant model
 35901 ;;
 35902                           
 35903                           	psect	text172
 35904  01C314                     __ptext172:
 35905                           	opt callstack 0
 35906  01C314                     _UART1_Receive_ISR:
 35907                           	opt callstack 3
 35908                           
 35909                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 35910                           
 35911                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35912                           ;incstack = 0
 35913  01C314  0ED9               	movlw	low _uart1RxBuffer
 35914  01C316  2447               	addwf	_uart1RxHead^0,w,c	;volatile
 35915  01C318  6ED9               	movwf	fsr2l,c
 35916  01C31A  6ADA               	clrf	fsr2h,c
 35917  01C31C  0E01               	movlw	high _uart1RxBuffer
 35918  01C31E  22DA               	addwfc	fsr2h,f,c
 35919  01C320  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 35920  01C326  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 35921                           
 35922                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 35923  01C328  0E07               	movlw	7
 35924  01C32A  6447               	cpfsgt	_uart1RxHead^0,c
 35925  01C32C  D001               	goto	l10939
 35926                           
 35927                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 35928  01C32E  6A47               	clrf	_uart1RxHead^0,c	;volatile
 35929  01C330                     l10939:
 35930                           
 35931                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 35932  01C330  0100               	movlb	0	; () banked
 35933  01C332  2BAD               	incf	_uart1RxCount& (0+255),f,b	;volatile
 35934                           
 35935                           ; BSR set to: 0
 35936                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35937  01C334  0012               	return		;funcret
 35938  01C336                     __end_of_UART1_Receive_ISR:
 35939                           	opt callstack 0
 35940                           
 35941 ;; *************** function _UART2_tx_vect_isr *****************
 35942 ;; Defined at:
 35943 ;;		line 195 in file "mcc_generated_files/uart2.c"
 35944 ;; Parameters:    Size  Location     Type
 35945 ;;		None
 35946 ;; Auto vars:     Size  Location     Type
 35947 ;;		None
 35948 ;; Return value:  Size  Location     Type
 35949 ;;                  1    wreg      void 
 35950 ;; Registers used:
 35951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35952 ;; Tracked objects:
 35953 ;;		On entry : 0/0
 35954 ;;		On exit  : 0/0
 35955 ;;		Unchanged: 0/0
 35956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35961 ;;Total ram usage:        0 bytes
 35962 ;; Hardware stack levels used:    1
 35963 ;; Hardware stack levels required when called:    1
 35964 ;; This function calls:
 35965 ;;		Absolute function
 35966 ;;		_UART2_Transmit_ISR
 35967 ;; This function is called by:
 35968 ;;		Interrupt level 2
 35969 ;; This function uses a non-reentrant model
 35970 ;;
 35971                           
 35972                           	psect	text173
 35973  01C1A8                     __ptext173:
 35974                           	opt callstack 0
 35975  01C1A8                     _UART2_tx_vect_isr:
 35976                           	opt callstack 3
 35977                           
 35978                           ; BSR set to: 0
 35979                           ;incstack = 0
 35980  01C1A8  EE14  F15E         	lfsr	1,___inthi_sp
 35981                           
 35982                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 35983  01C1AC  0100               	movlb	0	; () banked
 35984  01C1AE  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 35985  01C1B0  118F               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 35986  01C1B2  1190               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 35987  01C1B4  B4D8               	btfsc	status,2,c
 35988  01C1B6  0011               	retfie		f
 35989                           
 35990                           ; BSR set to: 0
 35991                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 35992  01C1B8  D801               	call	i2u1064_48
 35993  01C1BA  0011               	retfie		f
 35994  01C1BC                     i2u1064_48:
 35995  01C1BC  0005               	push	
 35996  01C1BE  6EFA               	movwf	pclath,c
 35997  01C1C0  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 35998  01C1C2  6EFD               	movwf	tosl,c
 35999  01C1C4  518F               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 36000  01C1C6  6EFE               	movwf	tosh,c
 36001  01C1C8  5190               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 36002  01C1CA  6EFF               	movwf	tosu,c
 36003  01C1CC  50FA               	movf	pclath,w,c
 36004  01C1CE  0012               	return		;indir
 36005  01C1D0                     __end_of_UART2_tx_vect_isr:
 36006                           	opt callstack 0
 36007                           
 36008 ;; *************** function _UART2_Transmit_ISR *****************
 36009 ;; Defined at:
 36010 ;;		line 213 in file "mcc_generated_files/uart2.c"
 36011 ;; Parameters:    Size  Location     Type
 36012 ;;		None
 36013 ;; Auto vars:     Size  Location     Type
 36014 ;;		None
 36015 ;; Return value:  Size  Location     Type
 36016 ;;                  1  [STACK] void 
 36017 ;; Registers used:
 36018 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36019 ;; Tracked objects:
 36020 ;;		On entry : 3F/0
 36021 ;;		On exit  : 3B/39
 36022 ;;		Unchanged: 0/0
 36023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36028 ;;Total ram usage:        0 bytes
 36029 ;; Hardware stack levels used:    1
 36030 ;; This function calls:
 36031 ;;		Nothing
 36032 ;; This function is called by:
 36033 ;;		_UART2_Initialize
 36034 ;;		_UART2_tx_vect_isr
 36035 ;; This function uses a reentrant model
 36036 ;;
 36037                           
 36038                           	psect	text174
 36039  01BF48                     __ptext174:
 36040                           	opt callstack 0
 36041  01BF48                     _UART2_Transmit_ISR:
 36042                           	opt callstack 3
 36043                           
 36044                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 36045                           
 36046                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36047                           ;incstack = 0
 36048  01BF48  0E40               	movlw	64
 36049  01BF4A  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 36050  01BF4C  D010               	goto	l673
 36051                           
 36052                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 36053  01BF4E  0E00               	movlw	low _uart2TxBuffer
 36054  01BF50  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 36055  01BF52  6ED9               	movwf	fsr2l,c
 36056  01BF54  6ADA               	clrf	fsr2h,c
 36057  01BF56  0E03               	movlw	high _uart2TxBuffer
 36058  01BF58  22DA               	addwfc	fsr2h,f,c
 36059  01BF5A  50DF               	movf	indf2,w,c
 36060  01BF5C  013D               	movlb	61	; () banked
 36061  01BF5E  6FD2               	movwf	210,b	;volatile
 36062                           
 36063                           ; BSR set to: 61
 36064  01BF60  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 36065                           
 36066                           ; BSR set to: 61
 36067                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 36068  01BF62  0E3F               	movlw	63
 36069  01BF64  6446               	cpfsgt	_uart2TxTail^0,c
 36070  01BF66  D001               	goto	l10951
 36071                           
 36072                           ; BSR set to: 61
 36073                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 36074  01BF68  6A46               	clrf	_uart2TxTail^0,c	;volatile
 36075  01BF6A                     l10951:
 36076                           
 36077                           ; BSR set to: 61
 36078                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 36079  01BF6A  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 36080                           
 36081                           ;mcc_generated_files/uart2.c: 224:     }
 36082  01BF6C  0012               	return	
 36083  01BF6E                     l673:
 36084                           
 36085                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 36086  01BF6E  0139               	movlb	57	; () banked
 36087  01BF70  9796               	bcf	150,3,b	;volatile
 36088                           
 36089                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 36090  01BF72  0012               	return		;funcret
 36091  01BF74                     __end_of_UART2_Transmit_ISR:
 36092                           	opt callstack 0
 36093                           
 36094 ;; *************** function _UART2_rx_vect_isr *****************
 36095 ;; Defined at:
 36096 ;;		line 203 in file "mcc_generated_files/uart2.c"
 36097 ;; Parameters:    Size  Location     Type
 36098 ;;		None
 36099 ;; Auto vars:     Size  Location     Type
 36100 ;;		None
 36101 ;; Return value:  Size  Location     Type
 36102 ;;                  1    wreg      void 
 36103 ;; Registers used:
 36104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 36105 ;; Tracked objects:
 36106 ;;		On entry : 0/0
 36107 ;;		On exit  : 0/0
 36108 ;;		Unchanged: 0/0
 36109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36114 ;;Total ram usage:        0 bytes
 36115 ;; Hardware stack levels used:    1
 36116 ;; Hardware stack levels required when called:    1
 36117 ;; This function calls:
 36118 ;;		Absolute function
 36119 ;;		_UART2_Receive_ISR
 36120 ;; This function is called by:
 36121 ;;		Interrupt level 2
 36122 ;; This function uses a non-reentrant model
 36123 ;;
 36124                           
 36125                           	psect	text175
 36126  01C1D0                     __ptext175:
 36127                           	opt callstack 0
 36128  01C1D0                     _UART2_rx_vect_isr:
 36129                           	opt callstack 3
 36130                           
 36131                           ;incstack = 0
 36132  01C1D0  EE14  F15E         	lfsr	1,___inthi_sp
 36133                           
 36134                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 36135  01C1D4  0100               	movlb	0	; () banked
 36136  01C1D6  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 36137  01C1D8  1192               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 36138  01C1DA  1193               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 36139  01C1DC  B4D8               	btfsc	status,2,c
 36140  01C1DE  0011               	retfie		f
 36141                           
 36142                           ; BSR set to: 0
 36143                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 36144  01C1E0  D801               	call	i2u1066_48
 36145  01C1E2  0011               	retfie		f
 36146  01C1E4                     i2u1066_48:
 36147  01C1E4  0005               	push	
 36148  01C1E6  6EFA               	movwf	pclath,c
 36149  01C1E8  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 36150  01C1EA  6EFD               	movwf	tosl,c
 36151  01C1EC  5192               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 36152  01C1EE  6EFE               	movwf	tosh,c
 36153  01C1F0  5193               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 36154  01C1F2  6EFF               	movwf	tosu,c
 36155  01C1F4  50FA               	movf	pclath,w,c
 36156  01C1F6  0012               	return		;indir
 36157  01C1F8                     __end_of_UART2_rx_vect_isr:
 36158                           	opt callstack 0
 36159                           
 36160 ;; *************** function _UART2_Receive_ISR *****************
 36161 ;; Defined at:
 36162 ;;		line 233 in file "mcc_generated_files/uart2.c"
 36163 ;; Parameters:    Size  Location     Type
 36164 ;;		None
 36165 ;; Auto vars:     Size  Location     Type
 36166 ;;		None
 36167 ;; Return value:  Size  Location     Type
 36168 ;;                  1  [STACK] void 
 36169 ;; Registers used:
 36170 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36171 ;; Tracked objects:
 36172 ;;		On entry : 3F/0
 36173 ;;		On exit  : 3F/0
 36174 ;;		Unchanged: 0/0
 36175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36180 ;;Total ram usage:        0 bytes
 36181 ;; Hardware stack levels used:    1
 36182 ;; This function calls:
 36183 ;;		Nothing
 36184 ;; This function is called by:
 36185 ;;		_UART2_Initialize
 36186 ;;		_UART2_rx_vect_isr
 36187 ;; This function uses a reentrant model
 36188 ;;
 36189                           
 36190                           	psect	text176
 36191  01C356                     __ptext176:
 36192                           	opt callstack 0
 36193  01C356                     _UART2_Receive_ISR:
 36194                           	opt callstack 3
 36195                           
 36196                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 36197                           
 36198                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36199                           ;incstack = 0
 36200  01C356  0E00               	movlw	low _uart2RxBuffer
 36201  01C358  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 36202  01C35A  6ED9               	movwf	fsr2l,c
 36203  01C35C  6ADA               	clrf	fsr2h,c
 36204  01C35E  0E04               	movlw	high _uart2RxBuffer
 36205  01C360  22DA               	addwfc	fsr2h,f,c
 36206  01C362  006F F743 FFDF     	movff	15824,indf2	;volatile
 36207  01C368  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 36208                           
 36209                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 36210  01C36A  2844               	incf	_uart2RxHead^0,w,c
 36211  01C36C  B4D8               	btfsc	status,2,c
 36212                           
 36213                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 36214  01C36E  6A44               	clrf	_uart2RxHead^0,c	;volatile
 36215                           
 36216                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 36217  01C370  0100               	movlb	0	; () banked
 36218  01C372  2BAA               	incf	_uart2RxCount& (0+255),f,b	;volatile
 36219                           
 36220                           ; BSR set to: 0
 36221                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 36222  01C374  0012               	return		;funcret
 36223  01C376                     __end_of_UART2_Receive_ISR:
 36224                           	opt callstack 0
 36225                           
 36226 ;; *************** function _TMR6_ISR *****************
 36227 ;; Defined at:
 36228 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 36229 ;; Parameters:    Size  Location     Type
 36230 ;;		None
 36231 ;; Auto vars:     Size  Location     Type
 36232 ;;		None
 36233 ;; Return value:  Size  Location     Type
 36234 ;;                  1    wreg      void 
 36235 ;; Registers used:
 36236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 36237 ;; Tracked objects:
 36238 ;;		On entry : 0/0
 36239 ;;		On exit  : 0/0
 36240 ;;		Unchanged: 0/0
 36241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36244 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36245 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36246 ;;Total ram usage:        1 bytes
 36247 ;; Hardware stack levels used:    1
 36248 ;; Hardware stack levels required when called:    2
 36249 ;; This function calls:
 36250 ;;		_TMR6_CallBack
 36251 ;; This function is called by:
 36252 ;;		Interrupt level 2
 36253 ;; This function uses a non-reentrant model
 36254 ;;
 36255                           
 36256                           	psect	text177
 36257  01C428                     __ptext177:
 36258                           	opt callstack 0
 36259  01C428                     _TMR6_ISR:
 36260                           	opt callstack 2
 36261                           
 36262                           ; BSR set to: 0
 36263                           ;incstack = 0
 36264  01C428  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 36265  01C42E  EE14  F15E         	lfsr	1,___inthi_sp
 36266                           
 36267                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 36268  01C432  0139               	movlb	57	; () banked
 36269  01C434  91A9               	bcf	169,0,b	;volatile
 36270                           
 36271                           ; BSR set to: 57
 36272                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 36273  01C436  EC56  F0E1         	call	_TMR6_CallBack	;wreg free
 36274  01C43A  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 36275  01C440  0011               	retfie		f
 36276  01C442                     __end_of_TMR6_ISR:
 36277                           	opt callstack 0
 36278                           
 36279 ;; *************** function _TMR6_CallBack *****************
 36280 ;; Defined at:
 36281 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 36282 ;; Parameters:    Size  Location     Type
 36283 ;;		None
 36284 ;; Auto vars:     Size  Location     Type
 36285 ;;		None
 36286 ;; Return value:  Size  Location     Type
 36287 ;;                  1  [STACK] void 
 36288 ;; Registers used:
 36289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 36290 ;; Tracked objects:
 36291 ;;		On entry : 3F/39
 36292 ;;		On exit  : 0/0
 36293 ;;		Unchanged: 0/0
 36294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36299 ;;Total ram usage:        0 bytes
 36300 ;; Hardware stack levels used:    1
 36301 ;; Hardware stack levels required when called:    1
 36302 ;; This function calls:
 36303 ;;		Absolute function
 36304 ;;		_TMR6_DefaultInterruptHandler
 36305 ;; This function is called by:
 36306 ;;		_TMR6_ISR
 36307 ;; This function uses a reentrant model
 36308 ;;
 36309                           
 36310                           	psect	text178
 36311  01C2AC                     __ptext178:
 36312                           	opt callstack 0
 36313  01C2AC                     _TMR6_CallBack:
 36314                           	opt callstack 2
 36315                           
 36316                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 36317                           
 36318                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36319                           ;incstack = 0
 36320  01C2AC  0100               	movlb	0	; () banked
 36321  01C2AE  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 36322  01C2B0  1183               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 36323  01C2B2  1184               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 36324  01C2B4  B4D8               	btfsc	status,2,c
 36325  01C2B6  0012               	return	
 36326                           
 36327                           ; BSR set to: 0
 36328                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 36329  01C2B8  D801               	call	u1018_48
 36330  01C2BA  0012               	return	
 36331  01C2BC                     u1018_48:
 36332  01C2BC  0005               	push	
 36333  01C2BE  6EFA               	movwf	pclath,c
 36334  01C2C0  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 36335  01C2C2  6EFD               	movwf	tosl,c
 36336  01C2C4  5183               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 36337  01C2C6  6EFE               	movwf	tosh,c
 36338  01C2C8  5184               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 36339  01C2CA  6EFF               	movwf	tosu,c
 36340  01C2CC  50FA               	movf	pclath,w,c
 36341  01C2CE  0012               	return		;indir
 36342  01C2D0                     __end_of_TMR6_CallBack:
 36343                           	opt callstack 0
 36344                           
 36345 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 36346 ;; Defined at:
 36347 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 36348 ;; Parameters:    Size  Location     Type
 36349 ;;		None
 36350 ;; Auto vars:     Size  Location     Type
 36351 ;;  i               1  [STACK] unsigned char 
 36352 ;; Return value:  Size  Location     Type
 36353 ;;                  1  [STACK] void 
 36354 ;; Registers used:
 36355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 36356 ;; Tracked objects:
 36357 ;;		On entry : 3F/0
 36358 ;;		On exit  : 0/0
 36359 ;;		Unchanged: 0/0
 36360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36365 ;;Total ram usage:        0 bytes
 36366 ;; Hardware stack levels used:    1
 36367 ;; This function calls:
 36368 ;;		Nothing
 36369 ;; This function is called by:
 36370 ;;		_TMR6_Initialize
 36371 ;;		_TMR6_CallBack
 36372 ;; This function uses a reentrant model
 36373 ;;
 36374                           
 36375                           	psect	text179
 36376  01B742                     __ptext179:
 36377                           	opt callstack 0
 36378  01B742                     _TMR6_DefaultInterruptHandler:
 36379                           	opt callstack 0
 36380                           
 36381                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36382  01B742  52E6               	movf	postinc1,f,c
 36383                           
 36384                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 36385                           ;stkvar	_i @ sp[(-1)+0]
 36386                           
 36387                           ;incstack = 0
 36388  01B744  0EFF               	movlw	-1
 36389  01B746  6AE3               	clrf	plusw1,c
 36390  01B748                     l10521:
 36391                           
 36392                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 36393                           ;stkvar	_i @ sp[(-1)+0]
 36394  01B748  0EFF               	movlw	-1
 36395  01B74A  50E3               	movf	plusw1,w,c
 36396  01B74C  0D02               	mullw	2
 36397  01B74E  0E7D               	movlw	low _tickCount
 36398  01B750  24F3               	addwf	243,w,c
 36399  01B752  6ED9               	movwf	fsr2l,c
 36400  01B754  0E02               	movlw	high _tickCount
 36401  01B756  20F4               	addwfc	prodh,w,c
 36402  01B758  6EDA               	movwf	fsr2h,c
 36403  01B75A  50DE               	movf	postinc2,w,c
 36404  01B75C  10DE               	iorwf	postinc2,w,c
 36405  01B75E  B4D8               	btfsc	status,2,c
 36406  01B760  D00C               	goto	l10525
 36407                           
 36408                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 36409                           ;stkvar	_i @ sp[(-1)+0]
 36410  01B762  0EFF               	movlw	-1
 36411  01B764  50E3               	movf	plusw1,w,c
 36412  01B766  0D02               	mullw	2
 36413  01B768  0E7D               	movlw	low _tickCount
 36414  01B76A  24F3               	addwf	243,w,c
 36415  01B76C  6ED9               	movwf	fsr2l,c
 36416  01B76E  0E02               	movlw	high _tickCount
 36417  01B770  20F4               	addwfc	prodh,w,c
 36418  01B772  6EDA               	movwf	fsr2h,c
 36419  01B774  06DE               	decf	postinc2,f,c
 36420  01B776  0E00               	movlw	0
 36421  01B778  5ADD               	subwfb	postdec2,f,c
 36422  01B77A                     l10525:
 36423                           
 36424                           ;mcc_generated_files/tmr6.c: 207:  }
 36425                           ;stkvar	_i @ sp[(-1)+0]
 36426  01B77A  0EFF               	movlw	-1
 36427  01B77C  2AE3               	incf	plusw1,f,c
 36428                           
 36429                           ;stkvar	_i @ sp[(-1)+0]
 36430  01B77E  0EFF               	movlw	-1
 36431  01B780  006F FF8C  F001    	movff	plusw1,btemp
 36432  01B786  0E0C               	movlw	12
 36433  01B788  6401               	cpfsgt	btemp^0,c
 36434  01B78A  D7DE               	goto	l10521
 36435                           
 36436                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36437  01B78C  52E5               	movf	postdec1,f,c
 36438  01B78E  0012               	return		;funcret
 36439  01B790                     __end_of_TMR6_DefaultInterruptHandler:
 36440                           	opt callstack 0
 36441                           
 36442 ;; *************** function _DMA1_DMASCNT_ISR *****************
 36443 ;; Defined at:
 36444 ;;		line 126 in file "mcc_generated_files/dma1.c"
 36445 ;; Parameters:    Size  Location     Type
 36446 ;;		None
 36447 ;; Auto vars:     Size  Location     Type
 36448 ;;		None
 36449 ;; Return value:  Size  Location     Type
 36450 ;;                  1    wreg      void 
 36451 ;; Registers used:
 36452 ;;		None
 36453 ;; Tracked objects:
 36454 ;;		On entry : 0/0
 36455 ;;		On exit  : 3F/1
 36456 ;;		Unchanged: 0/0
 36457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36462 ;;Total ram usage:        0 bytes
 36463 ;; Hardware stack levels used:    1
 36464 ;; This function calls:
 36465 ;;		Nothing
 36466 ;; This function is called by:
 36467 ;;		Interrupt level 2
 36468 ;; This function uses a non-reentrant model
 36469 ;;
 36470                           
 36471                           	psect	text180
 36472  01C554                     __ptext180:
 36473                           	opt callstack 0
 36474  01C554                     _DMA1_DMASCNT_ISR:
 36475                           	opt callstack 4
 36476                           
 36477                           ;incstack = 0
 36478  01C554  EE14  F15E         	lfsr	1,___inthi_sp
 36479                           
 36480                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 36481  01C558  0139               	movlb	57	; () banked
 36482  01C55A  91A2               	bcf	162,0,b	;volatile
 36483                           
 36484                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 36485  01C55C  0101               	movlb	1	; () banked
 36486  01C55E  97CD               	bcf	_spi_link& (0+255),3,b	;volatile
 36487                           
 36488                           ; BSR set to: 1
 36489  01C560  0011               	retfie		f
 36490  01C562                     __end_of_DMA1_DMASCNT_ISR:
 36491                           	opt callstack 0
 36492                           
 36493 ;; *************** function _DMA1_DMADCNT_ISR *****************
 36494 ;; Defined at:
 36495 ;;		line 133 in file "mcc_generated_files/dma1.c"
 36496 ;; Parameters:    Size  Location     Type
 36497 ;;		None
 36498 ;; Auto vars:     Size  Location     Type
 36499 ;;		None
 36500 ;; Return value:  Size  Location     Type
 36501 ;;                  1    wreg      void 
 36502 ;; Registers used:
 36503 ;;		None
 36504 ;; Tracked objects:
 36505 ;;		On entry : 0/0
 36506 ;;		On exit  : 3F/39
 36507 ;;		Unchanged: 0/0
 36508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36513 ;;Total ram usage:        0 bytes
 36514 ;; Hardware stack levels used:    1
 36515 ;; This function calls:
 36516 ;;		Nothing
 36517 ;; This function is called by:
 36518 ;;		Interrupt level 2
 36519 ;; This function uses a non-reentrant model
 36520 ;;
 36521                           
 36522                           	psect	text181
 36523  01C578                     __ptext181:
 36524                           	opt callstack 0
 36525  01C578                     _DMA1_DMADCNT_ISR:
 36526                           	opt callstack 4
 36527                           
 36528                           ; BSR set to: 1
 36529                           ;incstack = 0
 36530  01C578  EE14  F15E         	lfsr	1,___inthi_sp
 36531                           
 36532                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 36533  01C57C  0139               	movlb	57	; () banked
 36534  01C57E  93A2               	bcf	162,1,b	;volatile
 36535                           
 36536                           ; BSR set to: 57
 36537  01C580  0011               	retfie		f
 36538  01C582                     __end_of_DMA1_DMADCNT_ISR:
 36539                           	opt callstack 0
 36540                           
 36541 ;; *************** function _DMA1_DMAA_ISR *****************
 36542 ;; Defined at:
 36543 ;;		line 143 in file "mcc_generated_files/dma1.c"
 36544 ;; Parameters:    Size  Location     Type
 36545 ;;		None
 36546 ;; Auto vars:     Size  Location     Type
 36547 ;;		None
 36548 ;; Return value:  Size  Location     Type
 36549 ;;                  1    wreg      void 
 36550 ;; Registers used:
 36551 ;;		None
 36552 ;; Tracked objects:
 36553 ;;		On entry : 0/0
 36554 ;;		On exit  : 3F/39
 36555 ;;		Unchanged: 0/0
 36556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36561 ;;Total ram usage:        0 bytes
 36562 ;; Hardware stack levels used:    1
 36563 ;; This function calls:
 36564 ;;		Nothing
 36565 ;; This function is called by:
 36566 ;;		Interrupt level 2
 36567 ;; This function uses a non-reentrant model
 36568 ;;
 36569                           
 36570                           	psect	text182
 36571  01C584                     __ptext182:
 36572                           	opt callstack 0
 36573  01C584                     _DMA1_DMAA_ISR:
 36574                           	opt callstack 4
 36575                           
 36576                           ; BSR set to: 57
 36577                           ;incstack = 0
 36578  01C584  EE14  F15E         	lfsr	1,___inthi_sp
 36579                           
 36580                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 36581  01C588  0139               	movlb	57	; () banked
 36582  01C58A  97A2               	bcf	162,3,b	;volatile
 36583                           
 36584                           ; BSR set to: 57
 36585  01C58C  0011               	retfie		f
 36586  01C58E                     __end_of_DMA1_DMAA_ISR:
 36587                           	opt callstack 0
 36588                           
 36589 ;; *************** function _DMA1_DMAOR_ISR *****************
 36590 ;; Defined at:
 36591 ;;		line 154 in file "mcc_generated_files/dma1.c"
 36592 ;; Parameters:    Size  Location     Type
 36593 ;;		None
 36594 ;; Auto vars:     Size  Location     Type
 36595 ;;		None
 36596 ;; Return value:  Size  Location     Type
 36597 ;;                  1    wreg      void 
 36598 ;; Registers used:
 36599 ;;		None
 36600 ;; Tracked objects:
 36601 ;;		On entry : 0/0
 36602 ;;		On exit  : 3F/39
 36603 ;;		Unchanged: 0/0
 36604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36609 ;;Total ram usage:        0 bytes
 36610 ;; Hardware stack levels used:    1
 36611 ;; This function calls:
 36612 ;;		Nothing
 36613 ;; This function is called by:
 36614 ;;		Interrupt level 2
 36615 ;; This function uses a non-reentrant model
 36616 ;;
 36617                           
 36618                           	psect	text183
 36619  01C590                     __ptext183:
 36620                           	opt callstack 0
 36621  01C590                     _DMA1_DMAOR_ISR:
 36622                           	opt callstack 4
 36623                           
 36624                           ; BSR set to: 57
 36625                           ;incstack = 0
 36626  01C590  EE14  F15E         	lfsr	1,___inthi_sp
 36627                           
 36628                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 36629  01C594  0139               	movlb	57	; () banked
 36630  01C596  95A2               	bcf	162,2,b	;volatile
 36631                           
 36632                           ; BSR set to: 57
 36633  01C598  0011               	retfie		f
 36634  01C59A                     __end_of_DMA1_DMAOR_ISR:
 36635                           	opt callstack 0
 36636                           
 36637                           ;
 36638                           ; Interrupt Vector Table @ 0x8
 36639                           ;
 36640                           
 36641                           	psect	ivt0x8
 36642  000008                     __pivt0x8:
 36643                           	opt callstack 0
 36644  000008                     ivt0x8_base:
 36645                           	opt callstack 0
 36646                           
 36647                           ; Vector 0 : SWINT
 36648  000008  7177               	dw	_Default_ISR shr (0+2)
 36649                           
 36650                           ; Vector 1 : HLVD
 36651  00000A  7177               	dw	_Default_ISR shr (0+2)
 36652                           
 36653                           ; Vector 2 : OSF
 36654  00000C  7177               	dw	_Default_ISR shr (0+2)
 36655                           
 36656                           ; Vector 3 : CSW
 36657  00000E  7177               	dw	_Default_ISR shr (0+2)
 36658                           
 36659                           ; Vector 4 : NVM
 36660  000010  7177               	dw	_Default_ISR shr (0+2)
 36661                           
 36662                           ; Vector 5 : SCAN
 36663  000012  7177               	dw	_Default_ISR shr (0+2)
 36664                           
 36665                           ; Vector 6 : CRC
 36666  000014  7177               	dw	_Default_ISR shr (0+2)
 36667                           
 36668                           ; Vector 7 : IOC
 36669  000016  7177               	dw	_Default_ISR shr (0+2)
 36670                           
 36671                           ; Vector 8 : INT0
 36672  000018  7151               	dw	_INT0_ISR shr (0+2)
 36673                           
 36674                           ; Vector 9 : ZCD
 36675  00001A  7177               	dw	_Default_ISR shr (0+2)
 36676                           
 36677                           ; Vector 10 : AD
 36678  00001C  6FC7               	dw	_ADCC_ISR shr (0+2)
 36679                           
 36680                           ; Vector 11 : ADT
 36681  00001E  6CCE               	dw	_ADCC_ThresholdISR shr (0+2)
 36682                           
 36683                           ; Vector 12 : CMP1
 36684  000020  7177               	dw	_Default_ISR shr (0+2)
 36685                           
 36686                           ; Vector 13 : SMT1
 36687  000022  7177               	dw	_Default_ISR shr (0+2)
 36688                           
 36689                           ; Vector 14 : SMT1PRA
 36690  000024  7177               	dw	_Default_ISR shr (0+2)
 36691                           
 36692                           ; Vector 15 : SMT1PRW
 36693  000026  7177               	dw	_Default_ISR shr (0+2)
 36694                           
 36695                           ; Vector 16 : DMA1SCNT
 36696  000028  7155               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 36697                           
 36698                           ; Vector 17 : DMA1DCNT
 36699  00002A  715E               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 36700                           
 36701                           ; Vector 18 : DMA1OR
 36702  00002C  7164               	dw	_DMA1_DMAOR_ISR shr (0+2)
 36703                           
 36704                           ; Vector 19 : DMA1A
 36705  00002E  7161               	dw	_DMA1_DMAA_ISR shr (0+2)
 36706                           
 36707                           ; Vector 20 : SPI1RX
 36708  000030  7177               	dw	_Default_ISR shr (0+2)
 36709                           
 36710                           ; Vector 21 : SPI1TX
 36711  000032  7177               	dw	_Default_ISR shr (0+2)
 36712                           
 36713                           ; Vector 22 : SPI1
 36714  000034  7177               	dw	_Default_ISR shr (0+2)
 36715                           
 36716                           ; Vector 23 : I2C1RX
 36717  000036  7177               	dw	_Default_ISR shr (0+2)
 36718                           
 36719                           ; Vector 24 : I2C1TX
 36720  000038  7177               	dw	_Default_ISR shr (0+2)
 36721                           
 36722                           ; Vector 25 : I2C1
 36723  00003A  7177               	dw	_Default_ISR shr (0+2)
 36724                           
 36725                           ; Vector 26 : I2C1E
 36726  00003C  7177               	dw	_Default_ISR shr (0+2)
 36727                           
 36728                           ; Vector 27 : U1RX
 36729  00003E  7060               	dw	_UART1_rx_vect_isr shr (0+2)
 36730                           
 36731                           ; Vector 28 : U1TX
 36732  000040  7177               	dw	_Default_ISR shr (0+2)
 36733                           
 36734                           ; Vector 29 : U1E
 36735  000042  7177               	dw	_Default_ISR shr (0+2)
 36736                           
 36737                           ; Vector 30 : U1
 36738  000044  7177               	dw	_Default_ISR shr (0+2)
 36739                           
 36740                           ; Vector 31 : TMR0
 36741  000046  7177               	dw	_Default_ISR shr (0+2)
 36742                           
 36743                           ; Vector 32 : TMR1
 36744  000048  7177               	dw	_Default_ISR shr (0+2)
 36745                           
 36746                           ; Vector 33 : TMR1G
 36747  00004A  7177               	dw	_Default_ISR shr (0+2)
 36748                           
 36749                           ; Vector 34 : TMR2
 36750  00004C  7177               	dw	_Default_ISR shr (0+2)
 36751                           
 36752                           ; Vector 35 : CCP1
 36753  00004E  7177               	dw	_Default_ISR shr (0+2)
 36754                           
 36755                           ; Vector 36 : Undefined
 36756  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 36757                           
 36758                           ; Vector 37 : NCO1
 36759  000052  7177               	dw	_Default_ISR shr (0+2)
 36760                           
 36761                           ; Vector 38 : CWG1
 36762  000054  7177               	dw	_Default_ISR shr (0+2)
 36763                           
 36764                           ; Vector 39 : CLC1
 36765  000056  7177               	dw	_Default_ISR shr (0+2)
 36766                           
 36767                           ; Vector 40 : INT1
 36768  000058  6EF7               	dw	_INT1_ISR shr (0+2)
 36769                           
 36770                           ; Vector 41 : CMP2
 36771  00005A  7177               	dw	_Default_ISR shr (0+2)
 36772                           
 36773                           ; Vector 42 : DMA2SCNT
 36774  00005C  7177               	dw	_Default_ISR shr (0+2)
 36775                           
 36776                           ; Vector 43 : DMA2DCNT
 36777  00005E  7177               	dw	_Default_ISR shr (0+2)
 36778                           
 36779                           ; Vector 44 : DMA2OR
 36780  000060  7177               	dw	_Default_ISR shr (0+2)
 36781                           
 36782                           ; Vector 45 : DMA2A
 36783  000062  7177               	dw	_Default_ISR shr (0+2)
 36784                           
 36785                           ; Vector 46 : I2C2RX
 36786  000064  7177               	dw	_Default_ISR shr (0+2)
 36787                           
 36788                           ; Vector 47 : I2C2TX
 36789  000066  7177               	dw	_Default_ISR shr (0+2)
 36790                           
 36791                           ; Vector 48 : I2C2
 36792  000068  7177               	dw	_Default_ISR shr (0+2)
 36793                           
 36794                           ; Vector 49 : I2C2E
 36795  00006A  7177               	dw	_Default_ISR shr (0+2)
 36796                           
 36797                           ; Vector 50 : U2RX
 36798  00006C  7074               	dw	_UART2_rx_vect_isr shr (0+2)
 36799                           
 36800                           ; Vector 51 : U2TX
 36801  00006E  706A               	dw	_UART2_tx_vect_isr shr (0+2)
 36802                           
 36803                           ; Vector 52 : U2E
 36804  000070  7177               	dw	_Default_ISR shr (0+2)
 36805                           
 36806                           ; Vector 53 : U2
 36807  000072  7177               	dw	_Default_ISR shr (0+2)
 36808                           
 36809                           ; Vector 54 : TMR3
 36810  000074  64DE               	dw	_TMR3_ISR shr (0+2)
 36811                           
 36812                           ; Vector 55 : TMR3G
 36813  000076  7177               	dw	_Default_ISR shr (0+2)
 36814                           
 36815                           ; Vector 56 : TMR4
 36816  000078  7177               	dw	_Default_ISR shr (0+2)
 36817                           
 36818                           ; Vector 57 : CCP2
 36819  00007A  7177               	dw	_Default_ISR shr (0+2)
 36820                           
 36821                           ; Vector 58 : Undefined
 36822  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 36823                           
 36824                           ; Vector 59 : CWG2
 36825  00007E  7177               	dw	_Default_ISR shr (0+2)
 36826                           
 36827                           ; Vector 60 : CLC2
 36828  000080  7177               	dw	_Default_ISR shr (0+2)
 36829                           
 36830                           ; Vector 61 : INT2
 36831  000082  7177               	dw	_Default_ISR shr (0+2)
 36832                           
 36833                           ; Vector 62 : Undefined
 36834  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 36835                           
 36836                           ; Vector 63 : Undefined
 36837  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 36838                           
 36839                           ; Vector 64 : Undefined
 36840  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 36841                           
 36842                           ; Vector 65 : Undefined
 36843  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 36844                           
 36845                           ; Vector 66 : Undefined
 36846  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 36847                           
 36848                           ; Vector 67 : Undefined
 36849  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 36850                           
 36851                           ; Vector 68 : Undefined
 36852  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 36853                           
 36854                           ; Vector 69 : Undefined
 36855  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 36856                           
 36857                           ; Vector 70 : TMR5
 36858  000094  688C               	dw	_TMR5_ISR shr (0+2)
 36859                           
 36860                           ; Vector 71 : TMR5G
 36861  000096  7177               	dw	_Default_ISR shr (0+2)
 36862                           
 36863                           ; Vector 72 : TMR6
 36864  000098  710A               	dw	_TMR6_ISR shr (0+2)
 36865                           
 36866                           ; Vector 73 : CCP3
 36867  00009A  7177               	dw	_Default_ISR shr (0+2)
 36868                           
 36869                           ; Vector 74 : CWG3
 36870  00009C  7177               	dw	_Default_ISR shr (0+2)
 36871                           
 36872                           ; Vector 75 : CLC3
 36873  00009E  7177               	dw	_Default_ISR shr (0+2)
 36874                           
 36875                           ; Vector 76 : Undefined
 36876  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 36877                           
 36878                           ; Vector 77 : Undefined
 36879  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 36880                           
 36881                           ; Vector 78 : Undefined
 36882  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 36883                           
 36884                           ; Vector 79 : Undefined
 36885  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 36886                           
 36887                           ; Vector 80 : CCP4
 36888  0000A8  7177               	dw	_Default_ISR shr (0+2)
 36889                           
 36890                           ; Vector 81 : CLC4
 36891  0000AA  7177               	dw	_Default_ISR shr (0+2)
 36892  0000AC                     ivt0x8_undefint:
 36893                           	opt callstack 0
 36894  0000AC  00FF               	reset	
 36895                           
 36896                           	psect	text184
 36897  000000                     __ptext184:
 36898                           	opt callstack 0
 36899                           
 36900                           	psect	rparam
 36901  0000                     
 36902                           	psect	temp
 36903  000001                     btemp:
 36904                           	opt callstack 0
 36905  000001                     	ds	32
 36906  0000                     wtemp0	set	btemp
 36907  0000                     wtemp1	set	btemp+2
 36908  0000                     wtemp2	set	btemp+4
 36909  0000                     wtemp3	set	btemp+6
 36910  0000                     wtemp4	set	btemp+8
 36911  0000                     wtemp5	set	btemp+10
 36912  0000                     wtemp8	set	btemp+1
 36913  0000                     ttemp0	set	btemp
 36914  0000                     ttemp1	set	btemp+3
 36915  0000                     ttemp2	set	btemp+6
 36916  0000                     ttemp3	set	btemp+9
 36917  0000                     ttemp5	set	btemp+1
 36918  0000                     ttemp6	set	btemp+4
 36919  0000                     ttemp7	set	btemp+8
 36920  0000                     ltemp0	set	btemp
 36921  0000                     ltemp1	set	btemp+4
 36922  0000                     ltemp2	set	btemp+8
 36923  0000                     lltemp0	set	btemp
 36924  0000                     lltemp1	set	btemp+8
 36925  0000                     lltemp2	set	btemp+16
 36926  0000                     lltemp3	set	btemp+24
 36927                           tosu	equ	0x3FFF
 36928                           tosh	equ	0x3FFE
 36929                           tosl	equ	0x3FFD
 36930                           stkptr	equ	0x3FFC
 36931                           pclatu	equ	0x3FFB
 36932                           pclath	equ	0x3FFA
 36933                           pcl	equ	0x3FF9
 36934                           tblptru	equ	0x3FF8
 36935                           tblptrh	equ	0x3FF7
 36936                           tblptrl	equ	0x3FF6
 36937                           tablat	equ	0x3FF5
 36938                           prodh	equ	0x3FF4
 36939                           prodl	equ	0x3FF3
 36940                           indf0	equ	0x3FEF
 36941                           postinc0	equ	0x3FEE
 36942                           postdec0	equ	0x3FED
 36943                           preinc0	equ	0x3FEC
 36944                           plusw0	equ	0x3FEB
 36945                           fsr0h	equ	0x3FEA
 36946                           fsr0l	equ	0x3FE9
 36947                           wreg	equ	0x3FE8
 36948                           indf1	equ	0x3FE7
 36949                           postinc1	equ	0x3FE6
 36950                           postdec1	equ	0x3FE5
 36951                           preinc1	equ	0x3FE4
 36952                           plusw1	equ	0x3FE3
 36953                           fsr1h	equ	0x3FE2
 36954                           fsr1l	equ	0x3FE1
 36955                           bsr	equ	0x3FE0
 36956                           indf2	equ	0x3FDF
 36957                           postinc2	equ	0x3FDE
 36958                           postdec2	equ	0x3FDD
 36959                           preinc2	equ	0x3FDC
 36960                           plusw2	equ	0x3FDB
 36961                           fsr2h	equ	0x3FDA
 36962                           fsr2l	equ	0x3FD9
 36963                           status	equ	0x3FD8


Data Sizes:
    Strings     1070
    Constant    492
    Data        1070
    BSS         1305
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     251
    BANK2           256      0     231
    BANK3           256      0     198
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_101(CODE[1]), STR_63(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 121
		 -> ct(STACK[3]), STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 121
		 -> ct(STACK[3]), STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), 
		 -> STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6344_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_46(CODE[9]), 
		 -> STR_45(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    S4807tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_46(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_45(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  481379
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0   10397
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     647
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     175
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1   10561
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   12957
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      62
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                            96    10     86   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    9380
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    7483
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    7393
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    7393
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    7393
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                            96    10     86   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fladd
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     46C      58        0.0%
DATA                 0      0     979       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Jan 19 05:38:48 2020

                     _SPI1_Exchange8bit C376                __end_of_set_display_info C3EE  
                                     _C 06FF                                       _D 082A  
                                     _H 01C6                                       _P 01EF  
                                     _R 00AF                                       _S 0254  
                                     _T FAB5                                       _V 0107  
      __end_of_TMR5_SetInterruptHandler C0B6            __end_of_start_switch_handler C356  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FBBD                  __end_of_FVR_Initialize C5C2  
                        _check_day_time 8A66                             __CFG_LVP$ON 000000  
                                   l169 C4AE                                     l807 C384  
                                   l673 BF6E                                     _GIE 01FE97  
                                   _abs B98A                                     _pad 9D20  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize C45A  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack C288  
                     _update_adc_result BC1A                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00BA                           _INT1_CallBack C21C  
                          __CFG_ZCD$OFF 000000                                    l1002 BB96  
                                  l2114 3AB0                                    l1332 12A2  
                                  l3013 4DA6                                    l2118 3DB6  
                                  l1190 BBD6                                    l1350 1902  
                                  l2039 A592                                    l2304 066A  
                                  l2160 745C                                    l2048 88A4  
                                  l3025 4C36                                    l1601 AE5E  
                                  l2219 9D7C                         _timer3ReloadVal 009E  
                                  l1348 18FE                                    l3134 86C4  
                                  l1374 23A8                                    l1358 19A2  
                                  l2239 591C                                    l2319 0B1A  
                                  l1616 BD12                                    l1368 1BA6  
                                  l1369 1DCE                                    l3058 5320  
                                  l2275 123A                                    l2443 338A  
                                  l1732 C3EA                                    l3165 B9CA  
                                  l3157 8D92                                    l2357 754A  
                                  l1469 B5F4                                    l3094 45EA  
                                  l1814 5838                                    l1913 8A5C  
                                  l3265 9AE6                                    l2393 614E  
                                  l2378 6874                                    l1675 BC70  
                                  l3196 7C08                                    l3532 82AE  
                                  l1692 9F40                                    l1684 836A  
                                  l1597 AB44                                    l1685 84C6  
                                  l1854 B1EE                    _ADCC_StartConversion C4C8  
                                  l2735 A720                                    l3560 AFFA  
                                  l1960 A062                                    l2746 936C  
                                  l2739 9298                                    l3547 B07E  
                                  l1973 8BFC                                    l2773 920A  
                                  l1977 8BF4                                    l8011 4AB6  
                                  l8005 4A9A                                    l8007 4AAC  
                                  l8015 4AE8                                    l8051 4C76  
                                  l8027 4BC0                                    l8061 4C9E  
                                  l8045 4C58                                    l8037 4C1A  
                                  l8029 4BE6                                    l8301 781A  
                                  l8047 4C6A                                    l8231 65E2  
                                  l8065 4CA4                                    l8401 4F6A  
                                  l8313 78EC                                    l8217 B06E  
                                  l8091 4D46                                    l8251 6798  
                                  l8093 4D56                                    l8077 4D02  
                                  l8501 52CC                                    l8421 4FFC  
                                  l8413 4FE2                                    l8341 7F3E  
                                  l8333 7EB6                                    l8245 6700  
                                  l8087 4D2E                                    l8431 508C  
                                  l8407 4FA8                                    l8175 B9BA  
                                  l8255 6806                                    l8247 6750  
                                  l8441 50D4                                    l8193 8D34  
                                  l8273 AFEA                                    l8531 3E60  
                                  l8099 4D86                                    l8507 52F4  
                                  l8613 43DE                                    l8533 3E66  
                                  l8525 3E20                                    l7901 46A0  
                                  l8509 5304                                    l8461 5176  
                                  l8381 4E8C                                    l8349 7FEA  
                                  l8189 8D30                                    l8623 4420  
                                  l8551 3F34                                    l8543 3EEE  
                                  l8535 3E96                                    l7903 46D0  
                                  l8455 515A                                    l8447 5128  
                                  l8439 50C2                                    l8375 4E46  
                                  l9503 7A7A                                    l8295 77D4  
                                  l8199 8D8A                                    l8633 446A  
                                  l8561 3F86                                    l8553 3F64  
                                  l7921 477A                                    l8801 936A  
                                  l8465 519C                                    l8449 512C  
                                  l8369 4E06                                    l9513 7B5C  
                                  l9505 7A92                                    l8289 7780  
                                  l8721 960E                                    l8713 95DA  
                                  l8651 452A                                    l8619 43FA  
                                  l7915 473A                                    l8475 51E6  
                                  l8395 4F24                                    l8379 4E5C  
                                  l9523 7BF8                                    l9507 7AB6  
                                  l8637 4470                                    l8549 3F2E  
                                  l7933 47E2                                    l7925 4790  
                                  l7909 4708                                    l8389 4EE4  
                                  l9509 7AF4                                    l8741 9C52  
                                  l8733 9C28                                    l9541 818C  
                                  l8647 44E4                                    l7927 47C0  
                                  l8495 529C                                    l8479 51EC  
                                  l8399 4F3A                                    l7863 ACC0  
                                  l8751 9CD2                                    l8665 4598  
                                  l8657 4554                                    l8489 5260  
                                  l7865 ACE2                                    l8737 9C3A  
                                  l8809 B842                                    l8667 45B2  
                                  l7963 4920                                    l7891 464A  
                                  l9811 85C2                                    l8907 B6E0  
                                  l8771 A6EA                                    l8843 91A2  
                                  l8835 9176                                    l8819 90F4  
                                  l9539 8120                                    l7973 4992  
                                  l9821 8624                                    l9805 8580  
                                  l8693 9514                                    l8845 91B8  
                                  l8837 9192                                    l7983 49CE  
                                  l8783 9256                                    l9807 858E  
                                  l9903 5818                                    l9487 79B8  
                                  l8687 94FE                                    l8759 9D06  
                                  l8775 A71E                                    l8767 A6A8  
                                  l8871 9042                                    l7977 49B2  
                                  l7897 468A                                    l8793 9334  
                                  l9817 85F0                                    l9809 85A4  
                                  l9921 BFE6                                    l9497 7A4E  
                                  l9489 79DA                                    l7979 49C4  
                                  l7987 49FE                                    l9819 860E  
                                  l8699 9534                                    l8859 8F70  
                                  l8891 970E                                    l8883 9662  
                                  l8789 92E6                                    l9829 8642  
                                  l9839 86A4                                    l9855 535C  
                                  STR_1 FF1E                                    STR_2 FF09  
                                  l9881 568A                                    l9865 54AE  
                                  l9849 532C                                    STR_3 FFD2  
                                  STR_4 FECA                                    STR_5 FEA0  
                                  STR_6 FEA0                                    l9797 8514  
                                  l9877 55EE                                    l9869 55BC  
                                  STR_7 FEA0                                    STR_8 FEB5  
                                  l9895 5806                                    STR_9 FC9B  
                                  l9889 576A                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6100 8CB4                                    u7000 4462  
                                  u6200 B02E                                    u6105 8CAA  
                                  _T6PR 003F93                                    u6220 657A  
                                  _PMD0 0039C0                                    _PMD1 0039C1  
                                  u5510 AD10                                    u7110 9560  
                                  u6150 8D82                                    u6230 65C6  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  u7040 44BE                                    u6400 777A  
                                  u7200 9CF2                                    u6160 8D84  
                                  u6320 BA4E                                    _PMD4 0039C4  
                                  u6145 8D64                                    u6225 6570  
                                  _PMD5 0039C5                                    u7050 44F8  
                                  u6090 B99E                                    u7130 95FA  
                                  u6330 BA50                                    _PMD6 0039C6  
                                  _PMD7 0039C7                                    u7060 453E  
                                  u5700 49F6                                    u6420 77D0  
                                  u7300 B83E                                    u5540 BE84  
                                  u6340 AFA8                                    u7045 44AE  
                                  u5517 AD02                                    u5710 4A16  
                                  u7310 90D4                                    u6270 66A6  
                                  u5550 BE86                                    u6190 B02C  
                                  u6350 AFAA                                    u6431 77DA  
                                  u6255 6600                                    u6440 7814  
                                  u6600 8074                                    u6520 7EB0  
                                  u7240 A71A                                    u7400 91EA  
                                  u7320 90E8                                    u6256 6606  
                                  u5705 49E6                                    u6257 6614  
                                  u5810 4C08                                    u5650 4946  
                                  u6370 BEB4                                    u6450 7846  
                                  u7330 9122                                    u6290 677E  
                                  u7315 90CA                                    u6275 669C  
                                  u7411 8F30                                    u5660 4966  
                                  u6380 BEB6                                    u6540 7F06  
                                  u7180 9C7E                                    u7420 8F6A  
                                  u7500 9746                                    u5661 4960  
                                  u5910 4CF2                                    u6470 7924  
                                  u6550 7F38                                    u7430 8F9C  
                                  u7335 9118                                    u6295 6774  
                                  u7520 B6BC                                    u6560 7F6A  
                                  u5850 4C7C                                    u5770 4ADE  
                                  u7530 B6DC                                    u6490 7976  
                                  u7450 907A                                    u5915 4CE2  
                                  u5940 4D12                                    u6820 523A  
                                  u6740 5154                                    u9300 56CE  
                                  u6580 8022                                    u7380 91C0  
                                  u5870 4C96                                    u5678 4968  
                                  u6830 5274                                    u9150 8638  
                                  u9214 5376                                    u7470 965C  
                                  u5775 4ACE                                    u9215 5370  
                                  u6840 52B0                                    u7480 968E  
                                  u6825 522A                                    u6930 3F74  
                                  u9234 5398                                    u9235 5392  
                                  u6780 51DE                                    u8700 81BA  
                                  u5980 BE54                                    u9254 55D6  
                                  u8630 7A4A                                    u5990 BE56  
                                  u9255 55D0                                    u6945 4108  
                                  u9530 B3B0                                    u9274 56A4  
                                  u9194 5346                                    u8650 7BA2  
                                  u6955 41D0                                    u9275 569E  
                                  u9195 5340                                    u8707 81AC  
                                  u8660 7BA4                                    u8740 8254  
                                  u6965 4398                                    u9605 C4F4  
                                  u9294 56C6                                    u8750 8282  
                                  u9606 C4F6                                    u9295 56C0  
                                  u9615 C4E4                                    u8760 C2D6  
                                  u9616 C4E6                                    u8745 824E  
                                  u9650 88C0                                    _PLLR 01CEE0  
                                  u9555 B3E4                                    u9475 BA8A  
                                  u8747 8240                                    u9556 B3E6  
                                  u9548 B3B2                                    u8757 8274  
                                  u9790 C2FE                                    u9796 C300  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR BF48                           __CFG_FCMEN$ON 000000  
                                  _dbuf 0297                                    _cp_h FBCD  
                                  _cp_l FBC9                                    _atoi 799E  
                                  _ctoa AEF8                                    _main 1244  
                                  _dtoa 583E                                    _nanf B4CE  
                                  _seed 01F3                                    _prec 003C  
                                  _nout 009A                                    _spin FB45  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 7460  
                                  btemp 0001                                    _utoa 6830  
                                  _xtoa 610A                  __end_of_check_adc_scan C5AA  
                         ___fpclassifyf 8C06                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 00A2               __end_of_SPI1_Exchange8bit C394  
             __size_of_clear_hid_pflags 0046                         _TMR3_Initialize B8FC  
           __size_of_set_load_relay_one 0010             __size_of_set_load_relay_two 0010  
                         __CFG_CSWEN$ON 000000                          _SPI1STATUSbits 003D17  
                     _UART1_rx_vect_isr C180                            ___param_bank 000000  
                __end_of_check_day_time 8C06                      ?_UART1_rx_vect_isr 0021  
                      __end_of_INT0_ISR C552                        __end_of_INT1_ISR BC1A  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma AB4C  
         __end_of_OSCILLATOR_Initialize C4B4                                   l10021 8BA2  
                                 l10009 8B30                                   l10131 B71C  
                                 l10039 BD1C                                   l11103 A082  
                                 l11201 744C                                   l11131 71A4  
                                 l11213 A7EA                                   l11141 71EA  
                                 l11133 71B4                                   l11109 A134  
                                 l11151 7220                                   l11135 71BA  
                                 l10521 B748                                   l12113 6F34  
                                 l11217 A828                                   l11161 7254  
                                 l11145 71F6                                   l10097 BF00  
                                 l11411 B0BC                                   l13011 AB70  
                                 l10525 B77A                                   l11261 60FC  
                                 l12221 5974                                   l12301 0216  
                                 l12133 710A                                   l12125 705C  
                                 l13005 AB50                                   l11157 7248  
                                 l10701 B1B2                                   l13111 35AA  
                                 l13103 34D2                                   l11095 8EFC  
                                 l12151 9D86                                   l12231 5B86  
                                 l12303 022C                                   l12119 6FF2  
                                 l13007 AB58                                   l11417 B0CC  
                                 l12081 99FC                                   l12145 9D4C  
                                 l12217 5956                                   l12209 590C  
                                 l13009 AB62                                   l13017 AB78  
                                 l13041 9E58                                   l11177 72C8  
                                 l11169 72A2                                   l13123 3700  
                                 l13107 353E                                   l10635 BC86  
                                 l12155 9DC2                                   l12251 5C38  
                                 l12403 077A                                   l12307 0258  
                                 l13019 ABA4                                   l10707 B1C4  
                                 l10715 9B52                                   l13133 3952  
                                 l12093 AD4C                                   l12149 9D74  
                                 l12165 A43A                                   l12413 0926  
                                 l12333 0396                                   l12317 02FC  
                                 l12325 032A                                   l13143 3AC0  
                                 l13119 36AC                                   l12159 9E0C  
                                 l12183 AF16                                   l12255 5C74  
                                 l12343 04D2                                   l11199 7422  
                                 l10719 9BB4                                   l13129 38D8  
                                 l10745 9780                                   l10593 890E  
                                 l10585 88E2                                   l12097 AD8A  
                                 l12185 AF42                                   l12513 0FD6  
                                 l12361 058E                                   l12337 0406  
                                 l12281 00F0                                   l12601 7676  
                                 l13321 8462                                   l13081 A52C  
                                 l13241 86E2                                   l13147 3AE2  
                                 l13139 3A18                                   l10747 9790  
                                 l12515 0FF0                                   l12451 0C32  
                                 l12435 0B12                                   l12427 0A48  
                                 l12355 0554                                   l12339 0470  
                                 l13307 833A                                   l10773 9884  
                                 l10765 980A                                   l10749 979E  
                                 l10757 97A6                                   l10597 8922  
                                 l12525 1092                                   l12437 0B34  
                                 l12269 00AC                                   l12605 76A2  
                                 l10677 BC3A                                   l13253 8796  
                                 PRLOCK 0039EF                                   l10951 BF6A  
                                 l13159 3DAE                                   l10759 97D2  
                                 l12551 119A                                   l12535 10E2  
                                 l12463 0CBA                                   l12471 0D24  
                                 l12375 05F6                                   l12367 0594  
                                 l12359 057C                                   l12631 68C0  
                                 l12623 6864                                   l13263 886E  
                                 l13281 B25A                                   l12393 06B8  
                                 l12377 0602                                   l12289 0146  
                                 l12609 76DE                                   l12641 6AB6  
                                 l10939 C330                                   l13099 347E  
                                 l12299 01EA                                   l12571 74CC  
                                 l12723 647A                                   l12707 6390  
                                 l12803 2800                                   l10875 A73C  
                                 l13611 233A                                   l13603 2310  
                                 l13427 146E                                   l13371 128C  
                                 l12397 06F0                                   l12821 2984  
                                 l12813 2898                                   l13621 237E  
                                 l13517 198E                                   l13509 1968  
                                 l12479 0D90                                   l12487 0EA2  
                                 l12591 75BC                                   l12663 613E  
                                 l10879 A7B8                                   l13631 23D4  
                                 l13551 200A                                   l13527 19B2  
                                 l13375 12AA                                   l10977 BB7E  
                                 l12913 3180                                   l12825 29D8  
                                 l12761 24CA                                   l13617 2358  
                                 l13609 2322                                   l13473 16D6  
                                 l13377 12BC                                   l13369 1284  
                                 l10995 BBBE                                   l12499 0F3A  
                                 l12595 75EC                                   l12587 7580  
                                 l12683 6214                                   l12675 61B4  
                                 l12763 2504                                   l13555 206A  
                                 l13539 1AB2                                   l12669 6178  
                                 l12933 3312                                   l12845 2BEA  
                                 l12837 2B32                                   l12765 251A  
                                 l13581 2280                                   l13565 21FE  
                                 l13485 17B0                                   l12927 32B8  
                                 l12783 264C                                   l12943 3336  
                                 l13567 222A                                   l13495 1906  
                                 l12937 3316                                   l12849 2C1E  
                                 l12785 2686                                   l12961 AC4C  
                                 l13593 22D2                                   l13497 1934  
                                 l12699 630A                                   l12787 269C  
                                 l12869 2D7E                                   l12981 AA22  
                                 l12879 2E2C                                   l12983 AA64  
                                 l12889 2F4E                                   l12899 3004  
                       __end_of___aodiv 799E                            _Volts_to_SOC A72A  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 4DB0                                   _ADCLK 003EFF  
                       __end_of___aomod 8098                                   _ADPCH 003EF1  
                       __end_of___fldiv 532A                                   _ADREF 003EFD  
                       __end_of___awdiv 9628                         __end_of___flneg B86C  
                                 STR_10 FD56                                   STR_11 FE32  
                                 STR_12 FEDF                                   STR_21 FF83  
                                 STR_13 FEF4                                   STR_14 FF48  
                                 STR_30 FE5E                                   STR_22 FE1C  
                                 STR_15 FF33                                   STR_23 FE06  
                                 STR_31 FD6C                                   STR_40 FE8A  
                                 STR_24 FDF0                                   STR_32 FD82  
                                 STR_16 FD40                                   STR_41 FE8A  
                                 STR_25 FDDA                                   STR_33 FD98  
                                 STR_17 FC67                           __CFG_WDTE$OFF 000000  
                                 STR_50 FFBF                                   STR_42 FE8A  
                                 STR_26 FDC4                                   STR_34 FCE4  
                                 STR_18 FC81                                   STR_43 FFFC  
                                 STR_51 FFA4                                   STR_19 FF94  
                                 STR_27 FDAE                                   STR_35 FD29  
                                 STR_52 FFA4                                   STR_44 FFF9  
                                 STR_28 FE74                                   STR_36 FC4A  
                       __end_of___awmod 9D20                                   STR_53 FFA4  
                                 STR_45 FFB3                                   STR_29 FE48  
                                 STR_37 FCCD                                   STR_70 FFE3  
                                 STR_46 FFC9                                   STR_38 FCFB  
                                 STR_54 FCB5                                   STR_63 FC49  
                                 STR_47 FF5D                                   STR_39 FD12  
                                 STR_48 FF5D                                   STR_56 FF70  
                                 STR_64 FBD1                                   _ADRPT 003EEC  
                                 STR_73 FFEA                                   STR_65 FFD7  
                                 STR_49 FFBF                                   STR_82 FFED  
                                 STR_66 FFDF                                   STR_75 FFEA  
                                 STR_84 FFED                                   STR_92 FFF6  
                                 STR_77 FFF0                                   STR_69 FFDB  
                                 STR_94 FFF6                                   STR_79 FFF0  
                                 STR_87 FFF3                                   STR_96 FFE7  
                       __end_of___flmul 45F4                                   STR_89 FFF3  
                                 STR_98 FFE7                         __end_of___flsub BA16  
                       __end_of___fltol 9214                                   u11010 717E  
                                 u11110 586E                                   u11120 5870  
                                 u11201 5BCA                                   u11210 5BE0  
                                 u12010 620C                                   u11211 5BDE  
                                 u11220 5BF4                                   u11140 58E0  
                                 u11060 A4B4                                   u12020 6260  
                                 u10420 A974                                   u12101 63DC  
                                 u10421 A96E                                   u11230 5BF8  
                                 u12110 63F2                                   u12030 6262  
                                 u12111 63F0                                   u11160 58F2  
                                 u11320 0194                                   u12120 6406  
                                 u12200 258A                                   u10440 A9BC  
                                 u13000 2270                                   u10441 A9B6  
                                 u11250 5C0E                                   u11410 050E  
                                 u11330 0196                                   u12130 640A  
                                 u12050 62C0                                   u13010 2288  
                                 u11067 A4A6                         __end_of___lodiv 90A2  
                                 u11180 5942                                   u12060 62C2  
                                 u12300 28EC                                   u13020 229A  
                                 u11190 5B9A                                   u11510 0648  
                                 u12230 26E4                                   u10438 A976  
                                 u13006 2272                                   u11440 0562  
                                 u11360 02A6                                   u12080 638C  
                                 u12320 2A60                                   u12240 26E6  
                                 u13016 228A                                   u11370 02A8  
                                 u11290 00DA                                   u12090 63AC  
                                 u12250 270C                                   u10458 A9BE  
                                 u13026 229C                                   _U1P1H 003DED  
                                 u12420 3058                                   u12180 2562  
                                 _U1P2H 003DEF                                   u12085 636E  
                                 u11470 05C6                                   u12350 2CD8  
                                 u12190 2564                                   u12510 A508  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u12440 3208  
                                 u12360 2CDA                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u10930 99F0  
                                 _U1P3L 003DF0                                   u11740 10B8  
                                 u11580 0A18                                   u11900 684A  
                                 u12460 AC2C                                   u12540 A56E  
                                 u10950 9A6C                                   _U2P1L 003DD4  
                                 u11760 116E                                   u11680 0EE4  
                                 u11840 75E2                                   u12528 A50A  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u11770 1170                                   u11850 7628  
                                 _U2P3L 003DD8                                   u11931 6AF8  
                                 u11940 6B0E                                   u12820 84B2  
                                 u12900 17DE                                   u11941 6B0C  
                                 u11950 6B22                                   u12830 84B4  
                                 u12558 A570                                   _T5CLK 003F9D  
                                 u11880 7704                                   u11960 6B26  
                                 u11857 761A                         __end_of___lomod 9768  
                                 u11980 6124                                   _T2HLT 003FAD  
                                 u12880 1588                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0085  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0026  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result BC54                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR C5DC  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 94DA                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR A312  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR C442  
                          _DMA1CON1bits 003BFD              __size_of_send_lcd_data_dma 004A  
                                 _fabsf A89C                                   _flags 003E  
              __size_of_calc_model_data 044C                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD            __end_of_get_ac_charger_relay C544  
                                 _fputc 99CC              __size_of_send_lcd_cmd_long 0040  
                       __end_of_isalpha BA5A                                   _fputs AD3C  
                       __end_of_isdigit BEC0                         __end_of_ivln2_h FBC9  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand BD30  
                                 _width 003A                                   _putch C40C  
          __end_of_set_ac_charger_relay C51A                         __end_of_islower BE60  
                       __end_of_isspace B6F0                _INT1_SetInterruptHandler C0DE  
                       __end_of_set_dac A9F6                         __end_of_isupper BE90  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler C066             _UART1_SetRxInterruptHandler C03E  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf A04E  
                       __end_of_tolower B088                         __end_of_strncmp 82B8  
                       __end_of_toupper B004               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr C1A8                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize B8B4                   __end_of_ringBufS_init BFC6  
                       __initialization A312                       _UART2_rx_vect_isr C1D0  
                          __end_of_cp_h FBD1                            __end_of_cp_l FBCD  
                          __end_of_atoi 7C12                            __end_of_ctoa AF80  
                          __end_of_main 23E8                            __end_of_dtoa 5CBE  
                          __end_of_nanf B530                            __end_of_spin FBBD  
                          __end_of_stoa 771E                            __end_of_utoa 6B70  
                          __end_of_xtoa 64C4                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0021                 __end_of_TMR2_Initialize C472  
                 __end_of_send_lcd_data C21C                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button B264                _TMR5_SetInterruptHandler C08E  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 007C                       _port_data_dma_ptr C56C  
                    esr_check@esr_state 00A4                     ??_UART2_rx_vect_isr 0026  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize BF74  
                       _PWM8_Initialize C488                        _UART1_Initialize B86C  
                     _UART2_tx_vect_isr C1A8                      _UART2_Transmit_ISR BF48  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan B408  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue BA5A  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0021                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1019 A2C2                                  _RB6PPS 003A0E  
                                i1l1207 9442                    _start_switch_handler C336  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize B944                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright C528  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u933_25 C514                                  u933_26 C516  
                                u952_20 C540                                  u938_20 8ABC  
                  __size_of_hid_display 01DC                                  u981_20 979A  
                                u980_28 9786                                  u981_21 9794  
                                u959_20 BC94                                  u959_26 BC96  
                                u985_24 987A                                  u985_25 9876  
                      __end_of___xxtofl 86CE   __end_of_ADCC_DischargeSampleCapacitor C5A2  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor C59A  
              __end_of_send_lcd_cmd_dma C3B2                         _TMR3_WriteTimer BB9C  
                   ??_UART2_tx_vect_isr 0026               __end_of_UART2_rx_vect_isr C1F8  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize C562  
                      _UART2_Initialize B530                                  _WaitMs BCFA  
                       _conv_raw_result 532A                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 9214  
                                ___fleq A666                       _ADCC_ThresholdISR B338  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush ADD4  
                                _efgtoa 0000                                  _floorf 64C4  
                     dac_spi_control@S0 0042                       dac_spi_control@S1 00A8  
                     dac_spi_control@S2 00A7                       dac_spi_control@SB 00A5  
                     dac_spi_control@SC 00A6                      ?_ADCC_ThresholdISR 0021  
                                _memset 6E9C                    __size_of_help_button 0038  
                                clear_0 A384                                  clear_1 A398  
                                clear_2 A3AA                                  clear_3 A3B6  
                                clear_4 A3C2                                  clear_5 A3CE  
                                clear_6 A3DA               __end_of_port_data_dma_ptr C576  
                                _printf B46C                      _eaDogM_WriteString ABF4  
                                _strcpy A3F2                               ?_ADCC_ISR 0021  
                                _strlen AC9A                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 04FF                         _ADCC_Initialize B2CE  
                        _PMD_Initialize C4B4              __size_of_update_adc_result 003A  
             __end_of_UART2_tx_vect_isr C1D0                                  lltemp0 0001  
                                lltemp1 0009                                  lltemp2 0011  
                                lltemp3 0019                     ??_ADCC_ThresholdISR 0021  
                __end_of_start_adc_scan B46C                            __mediumconst F9E4  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay B644  
                      __end_of_spinners A144                        __end_of_vfprintf AAA2  
                            _StartTimer BB1C                      __size_of___asfladd 0078  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize B8FC  
                     _SYSTEM_Initialize B7DA                              __accesstop 0060  
               __end_of__initialization A3EC                               ?_INT0_ISR 0021  
                             ?_INT1_ISR 0021                    __end_of_display_help C5BA  
                  __end_of_display_info C5B2               __end_of_CLKREF_Initialize C56C  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer BB5C                   _set_temp_display_help C4FA  
                      _clear_hid_pflags B944                   __end_of_TMR3_CallBack C288  
             __end_of_ADCC_ThresholdISR B3A2                      __size_of_calc_bsoc 0A36  
                __end_of_ringBufS_flush AE66                          __pcstackCOMRAM 0021  
                            ___inthi_sp 115E                              ___intlo_sp 18AF  
                          __pidataBANK0 BCC4                            __pidataBANK1 A598  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf A94A  
                             ?_TMR3_ISR 0021                               ?_TMR5_ISR 0021  
                             ?_TMR6_ISR 0021                          ivt0x8_undefint 00AC  
                         __end_of_fputc 9AF0                           __end_of_fputs ADD4  
                  _get_ac_charger_relay C536                           __end_of_srand BD64  
                 __end_of_TMR5_CallBack C264                           __end_of_putch C426  
                  _set_ac_charger_relay C50A                 __end_of_PWM8_Initialize C49E  
               __end_of_TMR6_Initialize BF9E                       _adc_int_t_handler B088  
                __end_of_PMD_Initialize C4C8                              __end_of_bp FBC5  
                            ??_ADCC_ISR 0021                   __end_of_TMR6_CallBack C2D0  
           __size_of_EXT_INT_Initialize 0034                calc_bsoc@log_update_wait 0040  
                __size_of_calc_ror_data 0186                           _DMA1_DMAA_ISR C584  
                 TMR3_ISR@CountCallBack 009C                          _clear_adc_scan C5C2  
                    __size_of_hid_input 00D2                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0091               __end_of_SYSTEM_Initialize B824  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer BBDC                              __pbssBANK0 0060  
                            __pbssBANK1 01CD                              __pbssBANK2 0200  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            _check_help 82B8                 __end_of_conv_raw_result 583E  
                    __size_of_esr_check 02D8                   _INT0_InterruptHandler 0097  
                            ??_INT0_ISR 0021                              ??_INT1_ISR 0027  
                     __end_of_TimerDone BFEE                        _DMA1_DMADCNT_ISR C578  
                       _convert_dac_raw 9AF0                      __size_of_init_bsoc 0246  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma BE00  
                 __end_of_wait_lcd_done C2F2        __end_of_TMR3_SetInterruptHandler C0DE  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler C08E  
                            ??_TMR3_ISR 00E5                 __end_of_ADCC_Initialize B338  
                            ??_TMR5_ISR 002B               __end_of_adc_int_t_handler B106  
                            ??_TMR6_ISR 0026                       __end_of___asfladd B17E  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
                    __size_of_set_dac_a 0034                      __size_of_set_dac_b 0034  
  __end_of_ADCC_SetADTIInterruptHandler C156   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler C12E                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR C314                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan C5C8  
                               u1010_48 C298                                 u1012_28 C22C  
                               u1021_28 C250                                 u1018_48 C2BC  
                        ?_DMA1_DMAA_ISR 0021                        _DMA1_DMASCNT_ISR C554  
                               u1055_44 B0EC                                 u1055_45 B0E6  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 u1264_20 3A08  
                               u1271_28 C274                                 u1266_20 3AD2  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0021  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                         _dac_spi_control B17E  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 3DCA                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch BEEE                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer BB9C                 __size_of_switch_handler 0136  
                    __size_of_stop_bsoc 0006              __end_of_set_load_relay_one C4FA  
            __end_of_set_load_relay_two C4EA       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                           _calc_ror_data 8D9C  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim C442  
                               __Lparam 0000                __end_of_UART1_Initialize B8B4  
                     __end_of_hid_input A598                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 771E                                 ___fladd 45F4  
                               ___aomod 7E58                                 ___fldiv 4DB0  
                               ___awdiv 94DA                                 ___flneg B824  
                               ___awmod 9C08                                 ___flmul 3DCA  
                               ___flsub B9D0                                 ___fltol 90A2  
                               ___lodiv 8F22                                 ___lomod 9628  
             __end_of_UART1_Receive_ISR C336                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display A22E  
                               __pcinit A312                __end_of_mode_lamp_bright C536  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand C51A                                 __ramtop 2000  
                               __ptext0 1244                                 __ptext1 B590  
                               __ptext2 C336                                 __ptext3 BD30  
                               __ptext4 A04E                                 __ptext5 BD64  
                               __ptext6 BD98                                 __ptext7 9AF0  
                               __ptext8 A94A                                 __ptext9 B17E  
                     __end_of_esr_check 7460                       _UART2_Receive_ISR C356  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize C49E                            __size_of_abs 0046  
                               us650999 7988                            __size_of_pad 0114  
                               us661999 8086                       __end_of_init_bsoc 7E58  
                               _isalpha BA16                                 us751999 9758  
                               _isdigit BE90                                 _ivln2_h FBC5  
                               us746999 908C                               _T3CONbits 003FA6  
                               _mode_sw 00A9                       __end_of_lp_filter 8A66  
                               _islower BE30                                 _isspace B69E  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
                               _set_dac A94A                __end_of_UART2_Initialize B590  
                               _isupper BE60              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 9F44                                 _tolower B004  
                 __size_of_display_help 0008                                 _utctime 01EB  
               __end_of_convert_dac_raw 9C08                   __size_of_display_info 0008  
                               _strncmp 8098                                 _toupper AF80  
                  end_of_initialization A3EC               __size_of_convert_adc_data 00B8  
                    _check_enter_button B1F2                       __end_of_set_dac_a BDCC  
                     __end_of_set_dac_b BD98                               i1u1284_20 9438  
   __end_of_UART2_SetRxInterruptHandler C03E             _UART2_SetRxInterruptHandler C016  
                             i2u1060_48 B36E                               i2u1060_49 B382  
                             i2u1062_48 C194                               i2u1064_48 C1BC  
                             i2u1066_48 C1E4                               i2u1058_48 BF34  
               check_day_time@day_delay 0041                       __end_of_set_vterm C3D0  
                     __end_of_vfpfcnvrt 3394                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd C5D4               __end_of_UART2_Receive_ISR C376  
                        wdtdelay@dcount 0078                 __end_of_dac_spi_control B1F2  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0027  
                 _INT1_InterruptHandler 0094                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc C5DA                _TMR3_SetInterruptHandler C0B6  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler C066  
                          _display_help C5B2                   _TMR5_InterruptHandler 007F  
                          _display_info C5AA    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags B98A                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler C17E             _ADCC_SetADIInterruptHandler C156  
                            _update_lcd 9E34                         _calc_model_data 5CBE  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc B590                         _DMA1_Initialize B264  
                            _start_bsoc C2F2                  __size_of_send_lcd_data 0024  
                       _SPI1_Initialize C472                   __end_of_get_vterm_ptr BEEE  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs BD30            __end_of_INTERRUPT_Initialize B408  
                            _vterm_dump 989E                          __end_of___flge 9376  
                        __end_of___fleq A72A    __end_of_INT0_DefaultInterruptHandler C5E8  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler C5E6  
            __size_of_UART1_Receive_ISR 0022                         _DMA2_Initialize B644  
                         __pidataBIGRAM 6B70                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 6830             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 01E7                          __end_of_memset 7188  
                        __end_of_printf B4CE                __end_of_DMA1_DMADCNT_ISR C582  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack C2AC  
                        __end_of_strcpy A4C6                          __end_of_strlen AD3C  
                   start_initialization A312    __end_of_TMR5_DefaultInterruptHandler BCC4  
 __size_of_TMR5_DefaultInterruptHandler 0038            _TMR5_DefaultInterruptHandler BC8C  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs B9D0  
                 __end_of_INT1_CallBack C240               __size_of_set_display_info 001E  
                           __end_of_pad 9E34                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd BB1C                          _switch_handler 9768  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 01D9                   __end_of___fpclassifyf 8D9C  
                         _uart2RxBuffer 0400                __end_of_DMA1_DMASCNT_ISR C562  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR C590  
                   __end_of_hid_display 88AA              __end_of_send_port_data_dma B742  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone BFC6  
                         _ringBufS_init BF9E                             __pdataBANK0 00AF  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize BE00  
               __end_of_calc_model_data 610A                           _send_lcd_data C1F8  
                   __end_of_help_button BC8C         __end_of_eaDogM_WriteStringAtPos ABF4  
                   __end_of_BVSOC_TABLE FAB5                               ___asfladd B106  
                  calc_model_data@bcror 0070                             __pbssBIGRAM 082A  
               __end_of_DMA1_Initialize B2CE                    calc_model_data@bvror 0074  
                           __pbssCOMRAM 003A        __end_of_INT0_SetInterruptHandler C12E  
                         __pcstackBANK0 00E5                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 989E  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize C488  
              _UART1_RxInterruptHandler 008B                _UART2_TxInterruptHandler 008E  
                             __end_of_T FB45                        _convert_adc_data A7E4  
                             _calc_bsoc 3394               __size_of_ringBufS_put_dma 00AA  
                          _init_display A144                  __end_of_DMA1_DMAOR_ISR C59A  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 0082  
                    calc_ror_data@bcror 0068                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize B69E                      calc_ror_data@bvror 006C  
                _PIN_MANAGER_Initialize AE66                __size_of_TMR3_Initialize 0048  
                  __end_of_wait_lcd_set C5CE                           __pmediumconst F9E4  
                             __ptext100 A89C                               __ptext101 532A  
                             __ptext110 88AA                               __ptext102 B4CE  
                             __ptext111 B9D0                               __ptext103 C3EE  
                             __ptext120 BF74                               __ptext112 45F4  
                             __ptext104 84CA                               __ptext121 C066  
                             __ptext113 3DCA                               __ptext105 4DB0  
                             __ptext130 AE66                               __ptext122 B8B4  
                             __ptext114 B7DA                               __ptext106 9214  
                             __ptext131 C49E                               __ptext123 C08E  
                             __ptext115 B530                               __ptext107 5CBE  
                             __ptext140 B2CE                               __ptext132 B3A2  
                             __ptext124 B8FC                               __ptext116 BFEE  
                             __ptext108 C5D4                               __ptext141 C12E  
                             __ptext133 C5BA                               __ptext125 C0B6  
                             __ptext117 C016                               __ptext109 C2F2  
                             __ptext150 BC8C                               __ptext142 C156  
                             __ptext134 BDCC                               __ptext126 C45A  
                             __ptext118 B86C                               __ptext151 8A66  
                             __ptext143 BBDC                               __ptext135 C0DE  
                             __ptext127 C472                               __ptext119 C03E  
                             __ptext160 C56C                               __ptext152 C50A  
                             __ptext144 C21C                               __ptext136 C106  
                             __ptext128 C488                               __ptext161 B106  
                             __ptext153 C536                               __ptext145 C5E2  
                             __ptext137 B644                               __ptext129 C4B4  
                             __ptext170 B338                               __ptext162 C544  
                             __ptext154 9378                               __ptext146 9768  
                             __ptext138 B264                               __ptext171 C180  
                             __ptext163 C288                               __ptext155 BB9C  
                             __ptext147 A230                               __ptext139 C562  
                             __ptext180 C554                               __ptext172 C314  
                             __ptext164 C5E6                               __ptext156 C264  
                             __ptext148 BB5C                               __ptext181 C578  
                             __ptext173 C1A8                               __ptext165 C5DC  
                             __ptext157 C5E4                               __ptext149 C240  
                             __ptext182 C584                               __ptext174 BF48  
                             __ptext166 BF1C                               __ptext158 3394  
                             __ptext183 C590                               __ptext175 C1D0  
                             __ptext167 B088                               __ptext159 B6F0  
                             __ptext184 0000                               __ptext176 C356  
                             __ptext168 C5E8                               __ptext177 C428  
                             __ptext169 C5EA                               __ptext178 C2AC  
                             __ptext179 B742                               _hid_input A4C6  
                    __end_of_StartTimer BB5C                      _set_load_relay_one C4EA  
                    _set_load_relay_two C4DA                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00F6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR BF1C                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 0060                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 7188  
               __size_of_get_raw_result 001E                          __size_of_fabsf 00AE  
                             _init_bsoc 7C12                  __size_of_wait_lcd_done 0022  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 88AA  
                           _hid_display 86CE                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize B3A2  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0021                                _INT0_ISR C544  
                              _INT1_ISR BBDC                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
                              _LATFbits 003FBF       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 027D  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                          _SPI1CON0bits 003D14                               _set_dac_a BD98  
                             _set_dac_b BD64                               _ring_buf1 0383  
                             _ring_buf2 0340                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack C264                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                __size_of_TMR5_Initialize 0048  
                             _set_vterm C3B2                     __size_of_update_lcd 0110  
                           _help_button BC54                                _TMR3_ISR 9378  
                           _BVSOC_TABLE F9E5                                _TMR5_ISR A230  
                              _TMR6_ISR C428                               _port_data 04FF  
                   __size_of_static_soc 005A                               _vfpfcnvrt 23E8  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack C240                              _ADCON0bits 003EF8  
                    __end_of_check_help 84CA                               _start_lcd C5CE  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 001E  
                         _TMR6_CallBack C2AC                   __size_of_send_lcd_cmd 0040  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc C5D4  
                      _set_display_info C3D0                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 A326                               copy_data1 A34C  
                             copy_data2 A36E                _INT0_SetInterruptHandler C106  
                   __size_of_vterm_dump 012E     __end_of_UART2_SetTxInterruptHandler C016  
           _UART2_SetTxInterruptHandler BFEE                            _uart1RxCount 00AD  
                          _uart2RxCount 00AA                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 00A8                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 0514                           _wait_lcd_done C2D0  
                          _send_lcd_cmd BADC                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC           __size_of_get_ac_charger_relay 000E  
                      __size_of___aomod 0240                         _adc_int_handler C5EA  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140           __size_of_set_ac_charger_relay 0010  
                    __end_of_get_switch BF1A                 __size_of_check_day_time 01A0  
                 __end_of_DMA1_DMAA_ISR C58E                      ___fpclassifyf@F463 0064  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0200  
                              ___xxtofl 84CA                       ?_DMA1_DMADCNT_ISR 0021  
           __size_of_check_enter_button 0072                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand C528                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0027                        __size_of_set_dac 00AC  
                              __ptext10 BE00                                __ptext11 A144  
                              __ptext20 A4C6                                __ptext12 C1F8  
                              __ptext21 BEEE                                __ptext13 BA9C  
                              __ptext30 C4EA                                __ptext22 7188  
                              __ptext14 BADC                                __ptext31 C51A  
                              __ptext23 BC1A                                __ptext15 C376  
                              __ptext40 AB4C                                __ptext32 A7E4  
                              __ptext24 B408                                __ptext16 BF9E  
                              __ptext41 C394                                __ptext33 B944  
                              __ptext25 C4C8                                __ptext17 7C12  
                              __ptext50 B46C                                __ptext42 C2D0  
                              __ptext34 82B8                                __ptext26 C59A  
                              __ptext18 A72A                                __ptext51 A9F6  
                              __ptext43 B5EA                                __ptext35 989E  
                              __ptext27 C5C2                                __ptext19 86CE  
                              __ptext60 8098                                __ptext52 23E8  
                              __ptext44 B790                                __ptext36 9F44  
                              __ptext28 C5A2                                __ptext61 7460  
                              __ptext53 610A                                __ptext45 ABF4  
                              __ptext37 BEC0                                __ptext29 C4DA  
                              __ptext70 A666                                __ptext62 0000  
                              __ptext54 AF80                                __ptext46 C5C8  
                              __ptext38 BCFA                                __ptext71 9C08  
                              __ptext63 B004                                __ptext55 BE30  
                              __ptext47 C5CE                                __ptext39 9E34  
                              __ptext80 AD3C                                __ptext72 94DA  
                              __ptext64 BE60                                __ptext56 BA16  
                              __ptext48 ADD4                                __ptext81 99CC  
                              __ptext73 583E                                __ptext65 A3F2  
                              __ptext57 6830                                __ptext49 6E9C  
                              __ptext90 C442                                __ptext82 C40C  
                              __ptext74 B98A                                __ptext66 64C4  
                              __ptext58 9628                                __ptext91 C528  
                              __ptext83 AAA2                                __ptext75 7E58  
                              __ptext67 8C06                                __ptext59 8F22  
                              __ptext92 BA5A                                __ptext84 799E  
                              __ptext76 771E                                __ptext68 90A2  
                              __ptext93 BC54                                __ptext85 B69E  
                              __ptext77 AEF8                                __ptext69 B824  
                              __ptext94 BFC6                                __ptext86 BE90  
                              __ptext78 9D20                                __ptext95 BB1C  
                              __ptext87 C3B2                                __ptext79 AC9A  
                              __ptext96 C5AA                                __ptext88 C4FA  
                              __ptext97 C5B2                                __ptext89 C3D0  
                              __ptext98 B1F2                                __ptext99 8D9C  
                      __size_of_isupper 0030                                us1110999 5858  
                              us1200999 618A                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1191999 6896  
                              us1179999 7472                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma AAA2  
                  __end_of_Volts_to_SOC A7E4                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 11A4  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                   dac_spi_control@init 0043                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0021                   __end_of_init_port_dma BE30  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 0088                               stoa@F1166 0100  
                    ??_DMA1_DMASCNT_ISR 0027            __end_of_ADCC_StartConversion C4DA  
                              _spi_link 01CD                                _wdtdelay B5EA  
            __end_of_UART2_Transmit_ISR BF74                                _spinners A04E  
                              _vfprintf A9F6                __end_of_convert_adc_data A89C  
            __end_of_PWM8_LoadDutyValue BA9C    __end_of_TMR3_DefaultInterruptHandler C5E6  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler C5E4  
  __end_of_INT1_DefaultInterruptHandler C5E4   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler C5E2                      _send_port_data_dma B6F0  
                         ??_Default_ISR 0021                             _uart1RxHead 0047  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0044  
                           _uart1RxTail 00AE                          _get_raw_result C3EE  
                           _uart2TxHead 00AC                             _uart2RxTail 00AB  
                             spinners@s 01E1                             _uart2TxTail 0046  
                          _wait_lcd_set C5C8                      _EXT_INT_Initialize BDCC  
  __end_of_TMR6_DefaultInterruptHandler B790   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler B742                       _send_lcd_data_dma B790  
  __end_of_ADCC_DefaultInterruptHandler C5EA   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler C5E8                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long BA9C  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help C50A  
                 __end_of_calc_ror_data 8F22                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString AC9A                   __end_of_mode_lamp_dim C45A  
               __end_of_adc_int_handler C5EC                __size_of_convert_dac_raw 0118  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd 9F44                  _uart2TxBufferRemaining 0045  
                    __end_of_static_soc B5EA                      __end_of_start_bsoc C314  
                        _FVR_Initialize C5BA                  __end_of_get_raw_result C40C  
                      _send_lcd_cmd_dma C394                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 00A0        __end_of_INT1_SetInterruptHandler C106  
             __size_of_UART1_Initialize 0048                __size_of_dac_spi_control 0074  
             __end_of_send_lcd_data_dma B7DA                        ??_DMA1_DMAOR_ISR 0027  
             __end_of_send_lcd_cmd_long BADC                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR C5E2          __end_of_PIN_MANAGER_Initialize AEF8  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 99CC  
               _eaDogM_WriteStringAtPos AB4C                           _get_vterm_ptr BEC0  
                        _check_adc_scan C5A2               __size_of_UART2_Initialize 0060  
