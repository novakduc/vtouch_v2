

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 20 03:39:19 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=2
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=2
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=2
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=2
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=2
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=2
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=2
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=2
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=2
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=2
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=2
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=2
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=2
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1,inline
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1,inline
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1,group=2
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=2
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1,group=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1,group=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=4,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=4,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=4,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1,group=1
   228                           	psect	text204,global,reloc=4,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=4,class=CODE,delta=1
   232                           	psect	text208,global,reloc=4,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	text210,global,reloc=2,class=CODE,delta=1
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=4,class=CODE,delta=1
   237                           	psect	text213,global,reloc=4,class=CODE,delta=1
   238                           	psect	text214,global,reloc=2,class=CODE,delta=1
   239                           	psect	text215,global,reloc=4,class=CODE,delta=1
   240                           	psect	text216,global,reloc=2,class=CODE,delta=1
   241                           	psect	text217,global,reloc=4,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=4,class=CODE,delta=1
   244                           	psect	text220,global,reloc=2,class=CODE,delta=1
   245                           	psect	text221,global,reloc=2,class=CODE,delta=1
   246                           	psect	text222,global,reloc=4,class=CODE,delta=1
   247                           	psect	text223,global,reloc=4,class=CODE,delta=1
   248                           	psect	text224,global,reloc=4,class=CODE,delta=1
   249                           	psect	text225,global,reloc=4,class=CODE,delta=1
   250                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   251                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   252                           	psect	text226,global,reloc=4,class=CODE,delta=1
   253                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   254                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   255  0000                     
   256                           ; Version 2.10
   257                           ; Generated 31/07/2019 GMT
   258                           ; 
   259                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   260                           ; All rights reserved.
   261                           ; 
   262                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   263                           ; 
   264                           ; Redistribution and use in source and binary forms, with or without modification, are
   265                           ; permitted provided that the following conditions are met:
   266                           ; 
   267                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   268                           ;        conditions and the following disclaimer.
   269                           ; 
   270                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   271                           ;        of conditions and the following disclaimer in the documentation and/or other
   272                           ;        materials provided with the distribution.
   273                           ; 
   274                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   275                           ;        software without specific prior written permission.
   276                           ; 
   277                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   278                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   279                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   280                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   281                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   282                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   283                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   284                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   285                           ; 
   286                           ; 
   287                           ; Code-generator required, PIC18F57K42 Definitions
   288                           ; 
   289                           ; SFR Addresses
   290  0000                     
   291 ;;_main$4040	offset	0
   292 ;;_main$4036	offset	2
   293 ;;_esr_temp	offset	4
   294 ;;_i_esr	offset	8
   295 ;;_shape	offset	10
   296 ;;_inp_index	offset	11
   297 ;;_k	offset	12
   298 ;;_j	offset	13
   299 ;;_i	offset	14
   300 ;;_mode	offset	15
   301 ;;_i_ror	offset	16
   302 ;;_mode	offset=-1 (param)
   303 ;;_hist	offset=-3 (param)
   304 ;;_s	offset=-2 (param)
   305 ;;_t	offset=-8 (param)
   306 ;;_voltage	offset=-4 (param)
   307 ;;_voltage	offset=-4 (param)
   308 ;;_voltage	offset=-4 (param)
   309 ;;_set	offset=-1 (param)
   310 ;;_x	offset	0
   311 ;;_r_cal_ptr	offset	2
   312 ;;_y	offset	4
   313 ;;_crcVal_save	offset	6
   314 ;;_bAdd	offset=-2 (param)
   315 ;;_esr_rescale	offset	0
   316 ;;_data	offset=-1 (param)
   317 ;;_cmd	offset=-1 (param)
   318 ;;_cmd	offset=-1 (param)
   319 ;;_delay	offset=-4 (param)
   320 ;;_data	offset=-1 (param)
   321 ;;__this	offset=-2 (param)
   322 ;;_soc	offset	0
   323 ;;_slot	offset	2
   324 ;;_cvoltage	offset=-4 (param)
   325 ;;_h	offset=-2 (param)
   326 ;;_h	offset=-2 (param)
   327 ;;_fsm	offset=-1 (param)
   328 ;;_mode	offset=-1 (param)
   329 ;;_mode	offset=-1 (param)
   330 ;;_cmd	offset=-1 (param)
   331 ;;_t	offset=-8 (param)
   332 ;;_t	offset=-1 (param)
   333 ;;_t	offset=-1 (param)
   334 ;;_tm	offset=-3 (param)
   335 ;;_y	offset	0
   336 ;;_t1	offset	8
   337 ;;_t0	offset	16
   338 ;;_t	offset=-8 (param)
   339 ;;_local	offset=-10 (param)
   340 ;;_isdst	offset=-12 (param)
   341 ;;_offset	offset=-14 (param)
   342 ;;_oppoff	offset=-16 (param)
   343 ;;_zonename	offset=-18 (param)
   344 ;;_t	offset=-8 (param)
   345 ;;_local	offset=-10 (param)
   346 ;;_alt	offset=-12 (param)
   347 ;;_z	offset=-2 (param)
   348 ;;_days	offset	0
   349 ;;_wday	offset	2
   350 ;;_t	offset	4
   351 ;;_is_leap	offset	12
   352 ;;_n	offset	14
   353 ;;_x	offset	16
   354 ;;_m	offset	18
   355 ;;_d	offset	20
   356 ;;_rule	offset=-6 (param)
   357 ;;_year	offset=-8 (param)
   358 ;;_m	offset=-2 (param)
   359 ;;_is_leap	offset=-4 (param)
   360 ;;_y	offset	0
   361 ;;_leaps	offset	2
   362 ;;_rem	offset	4
   363 ;;F5	offset	6
   364 ;;_centuries	offset	8
   365 ;;_leaps	offset	10
   366 ;;_cycles	offset	12
   367 ;;_year	offset=-8 (param)
   368 ;;_is_leap	offset=-10 (param)
   369 ;;_t	offset	0
   370 ;;_month	offset=-2 (param)
   371 ;;_is_leap	offset=-4 (param)
   372 ;;_s	offset	0
   373 ;;_r	offset	0
   374 ;;_p	offset=-2 (param)
   375 ;;_rule	offset=-4 (param)
   376 ;;_off	offset	0
   377 ;;_neg	offset	2
   378 ;;_p	offset=-2 (param)
   379 ;;_x	offset	0
   380 ;;_p	offset=-2 (param)
   381 ;;_i	offset	0
   382 ;;_d	offset=-2 (param)
   383 ;;_p	offset=-4 (param)
   384 ;;___secs_to_tm$7626	offset	0
   385 ;;_years	offset	1
   386 ;;_days	offset	9
   387 ;;_secs	offset	17
   388 ;;_remdays	offset	25
   389 ;;_q_cycles	offset	29
   390 ;;_c_cycles	offset	33
   391 ;;_remyears	offset	37
   392 ;;_remsecs	offset	41
   393 ;;_qc_cycles	offset	45
   394 ;;_months	offset	49
   395 ;;_leap	offset	51
   396 ;;_yday	offset	53
   397 ;;_wday	offset	55
   398 ;;_t	offset=-8 (param)
   399 ;;_tm	offset=-10 (param)
   400 ;;_product	offset	0
   401 ;;_multiplier	offset=-8 (param)
   402 ;;_multiplicand	offset=-16 (param)
   403 ;;_product	offset	0
   404 ;;_multiplier	offset=-4 (param)
   405 ;;_multiplicand	offset=-8 (param)
   406 ;;_sign	offset	0
   407 ;;_counter	offset	1
   408 ;;_dividend	offset=-4 (param)
   409 ;;_divisor	offset=-8 (param)
   410 ;;_quotient	offset	0
   411 ;;_sign	offset	4
   412 ;;_counter	offset	5
   413 ;;_dividend	offset=-4 (param)
   414 ;;_divisor	offset=-8 (param)
   415 ;;_cp	offset	0
   416 ;;_s	offset	2
   417 ;;_tim	offset=-2 (param)
   418 ;;_cp	offset=-2 (param)
   419 ;;_i	offset=-3 (param)
   420 ;;_cl	offset=-4 (param)
   421 ;;_ct	offset=-5 (param)
   422 ;;_rem	offset	0
   423 ;;_counter	offset	1
   424 ;;_dividend	offset=-1 (param)
   425 ;;_divisor	offset=-2 (param)
   426 ;;_cp	offset	0
   427 ;;_cb	offset	4
   428 ;;_x	offset	8
   429 ;;_x	offset	0
   430 ;;_r_cal_ptr	offset	2
   431 ;;_y	offset	4
   432 ;;_crcVal	offset	6
   433 ;;_GIEBitValue	offset	0
   434 ;;_bAdd	offset=-2 (param)
   435 ;;_bData	offset=-3 (param)
   436 ;;_result	offset	0
   437 ;;_mask	offset	2
   438 ;;_reverse	offset=-1 (param)
   439 ;;_xorValue	offset=-3 (param)
   440 ;;_mask	offset	0
   441 ;;_reverse	offset	2
   442 ;;_crc	offset=-2 (param)
   443 ;;_data	offset=-1 (param)
   444 ;;_channel	offset=-1 (param)
   445 ;;_c	offset	0
   446 ;;_shape	offset=-1 (param)
   447 ;;_reset	offset=-2 (param)
   448 ;;_i	offset=-1 (param)
   449 ;;_mode	offset=-1 (param)
   450 ;;_cb	offset=-3 (param)
   451 ;;_cp	offset=-5 (param)
   452 ;;_value	offset=-2 (param)
   453 ;;_window	offset=-4 (param)
   454 ;;_standard	offset=-6 (param)
   455 ;;_i	offset	0
   456 ;;_h	offset=-2 (param)
   457 ;;_flipper	offset=-1 (param)
   458 ;;_f	offset	0
   459 ;;_ap	offset	6
   460 ;;_s	offset=-3 (param)
   461 ;;_fmt	offset=-5 (param)
   462 ;;_line	offset=-1 (param)
   463 ;;_vterm	offset=-2 (param)
   464 ;;_numMilliseconds	offset=-2 (param)
   465 ;;_vterm	offset=-1 (param)
   466 ;;_row	offset	0
   467 ;;_r	offset=-1 (param)
   468 ;;_c	offset=-2 (param)
   469 ;;_strPtr	offset=-4 (param)
   470 ;;_strPtr	offset=-1 (param)
   471 ;;_strPtr	offset=-1 (param)
   472 ;;_strPtr	offset=-2 (param)
   473 ;;__this	offset=-2 (param)
   474 ;;_clearBuffer	offset=-3 (param)
   475 ;;_s	offset	0
   476 ;;_k	offset	2
   477 ;;_dest	offset=-2 (param)
   478 ;;_c	offset=-4 (param)
   479 ;;_n	offset=-6 (param)
   480 ;;_ap	offset	0
   481 ;;_fmt	offset=-3 (param)
   482 ;;_cfmt	offset	0
   483 ;;_fp	offset=-2 (param)
   484 ;;_fmt	offset=-4 (param)
   485 ;;_ap	offset=-6 (param)
   486 ;;_vfpfcnvrt$6667	offset	0
   487 ;;_vfpfcnvrt$6678	offset	2
   488 ;;_vfpfcnvrt$6666	offset	4
   489 ;;_llu	offset	6
   490 ;;_ll	offset	14
   491 ;;_f	offset	22
   492 ;;_ct	offset	26
   493 ;;_cp	offset	29
   494 ;;_c	offset	31
   495 ;;_fp	offset=-2 (param)
   496 ;;_fmt	offset=-4 (param)
   497 ;;_ap	offset=-6 (param)
   498 ;;_xtoa$6652	offset	0
   499 ;;_xtoa$6651	offset	2
   500 ;;_n	offset	4
   501 ;;_c	offset	12
   502 ;;_i	offset	14
   503 ;;_w	offset	16
   504 ;;_p	offset	18
   505 ;;_fp	offset=-2 (param)
   506 ;;_d	offset=-10 (param)
   507 ;;_x	offset=-11 (param)
   508 ;;_toupper$7593	offset	0
   509 ;;_c	offset=-2 (param)
   510 ;;_c	offset=-2 (param)
   511 ;;_c	offset=-2 (param)
   512 ;;_n	offset	0
   513 ;;_i	offset	8
   514 ;;_w	offset	10
   515 ;;_p	offset	12
   516 ;;_fp	offset=-2 (param)
   517 ;;_d	offset=-10 (param)
   518 ;;_counter	offset	0
   519 ;;_dividend	offset=-8 (param)
   520 ;;_divisor	offset=-16 (param)
   521 ;;_quotient	offset	0
   522 ;;_counter	offset	8
   523 ;;_dividend	offset=-8 (param)
   524 ;;_divisor	offset=-16 (param)
   525 ;;_r	offset	0
   526 ;;_l	offset	2
   527 ;;__l	offset=-2 (param)
   528 ;;__r	offset=-4 (param)
   529 ;;_n	offset=-6 (param)
   530 ;;_nuls	offset	0
   531 ;;_l	offset	7
   532 ;;_p	offset	9
   533 ;;_cp	offset	11
   534 ;;_w	offset	13
   535 ;;_i	offset	15
   536 ;;_fp	offset=-2 (param)
   537 ;;_s	offset=-4 (param)
   538 ;;_efgtoa$6624	offset	0
   539 ;;_efgtoa$6623	offset	2
   540 ;;_efgtoa$6622	offset	4
   541 ;;_efgtoa$6618	offset	6
   542 ;;_efgtoa$6614	offset	8
   543 ;;_efgtoa$6613	offset	10
   544 ;;_u	offset	12
   545 ;;_g	offset	16
   546 ;;_l	offset	20
   547 ;;_h	offset	24
   548 ;;_ou	offset	28
   549 ;;_n	offset	32
   550 ;;_e	offset	34
   551 ;;_i	offset	36
   552 ;;_w	offset	38
   553 ;;_p	offset	40
   554 ;;_sign	offset	42
   555 ;;_d	offset	44
   556 ;;_ne	offset	46
   557 ;;_m	offset	48
   558 ;;_pp	offset	50
   559 ;;_t	offset	52
   560 ;;_mode	offset	54
   561 ;;_nmode	offset	55
   562 ;;_fp	offset=-2 (param)
   563 ;;_f	offset=-6 (param)
   564 ;;_c	offset=-7 (param)
   565 ;;_tolower$7578	offset	0
   566 ;;_c	offset=-2 (param)
   567 ;;_c	offset=-2 (param)
   568 ;;_d	offset	0
   569 ;;_s	offset	2
   570 ;;_dest	offset=-2 (param)
   571 ;;_src	offset=-4 (param)
   572 ;;_u	offset	0
   573 ;;_m	offset	4
   574 ;;_e	offset	8
   575 ;;_x	offset=-4 (param)
   576 ;;_u	offset	0
   577 ;;_e	offset	4
   578 ;;_x	offset=-4 (param)
   579 ;;_exp1	offset	0
   580 ;;_sign1	offset	1
   581 ;;_f1	offset=-4 (param)
   582 ;;_f1	offset=-4 (param)
   583 ;;_ff1	offset=-4 (param)
   584 ;;_ff2	offset=-8 (param)
   585 ;;_sign	offset	0
   586 ;;_counter	offset	1
   587 ;;_dividend	offset=-2 (param)
   588 ;;_divisor	offset=-4 (param)
   589 ;;_quotient	offset	0
   590 ;;_sign	offset	2
   591 ;;_counter	offset	3
   592 ;;_dividend	offset=-2 (param)
   593 ;;_divisor	offset=-4 (param)
   594 ;;_dtoa$6590	offset	0
   595 ;;_n	offset	2
   596 ;;_i	offset	10
   597 ;;_s	offset	12
   598 ;;_w	offset	14
   599 ;;_p	offset	16
   600 ;;_fp	offset=-2 (param)
   601 ;;_d	offset=-10 (param)
   602 ;;_a	offset=-2 (param)
   603 ;;_sign	offset	0
   604 ;;_counter	offset	1
   605 ;;_dividend	offset=-8 (param)
   606 ;;_divisor	offset=-16 (param)
   607 ;;_quotient	offset	0
   608 ;;_sign	offset	8
   609 ;;_counter	offset	9
   610 ;;_dividend	offset=-8 (param)
   611 ;;_divisor	offset=-16 (param)
   612 ;;_w	offset	0
   613 ;;_fp	offset=-2 (param)
   614 ;;_c	offset=-3 (param)
   615 ;;_w	offset	0
   616 ;;_i	offset	2
   617 ;;_fp	offset=-2 (param)
   618 ;;_buf	offset=-4 (param)
   619 ;;_p	offset=-6 (param)
   620 ;;_a	offset	0
   621 ;;_s	offset=-2 (param)
   622 ;;_i	offset	0
   623 ;;_c	offset	2
   624 ;;_s	offset=-2 (param)
   625 ;;_fp	offset=-4 (param)
   626 ;;_c	offset=-2 (param)
   627 ;;_fp	offset=-4 (param)
   628 ;;_c	offset=-1 (param)
   629 ;;__this	offset=-2 (param)
   630 ;;_c	offset=-3 (param)
   631 ;;_atoi$7210	offset	0
   632 ;;_atoi$7208	offset	2
   633 ;;_atoi$7209	offset	4
   634 ;;_n	offset	5
   635 ;;_neg	offset	7
   636 ;;_s	offset=-2 (param)
   637 ;;_isspace$7259	offset	0
   638 ;;_c	offset=-2 (param)
   639 ;;_c	offset=-2 (param)
   640 ;;_vterm	offset=-1 (param)
   641 ;;_new_response_info	offset=-1 (param)
   642 ;;_new_response_info	offset=-1 (param)
   643 ;;_level	offset=-2 (param)
   644 ;;_dutyValue	offset=-2 (param)
   645 ;;_timer	offset=-1 (param)
   646 ;;_timer	offset=-1 (param)
   647 ;;_count	offset=-3 (param)
   648 ;;_h	offset=-2 (param)
   649 ;;_u	offset	0
   650 ;;_x	offset=-4 (param)
   651 ;;_chan	offset=-1 (param)
   652 ;;_to_what	offset=-2 (param)
   653 ;;_u	offset	0
   654 ;;_s	offset=-2 (param)
   655 ;;_index	offset=-1 (param)
   656 ;;_arg	offset	0
   657 ;;_exp	offset	4
   658 ;;_sign	offset=-1 (param)
   659 ;;_val	offset=-5 (param)
   660 ;;_grs	offset	0
   661 ;;_rem	offset	4
   662 ;;_new_exp	offset	8
   663 ;;_aexp	offset	10
   664 ;;_bexp	offset	11
   665 ;;_sign	offset	12
   666 ;;_b	offset=-4 (param)
   667 ;;_a	offset=-8 (param)
   668 ;;_ff1	offset=-4 (param)
   669 ;;_ff2	offset=-8 (param)
   670 ;;_lp_speed	offset	0
   671 ;;_new	offset=-4 (param)
   672 ;;_bn	offset=-5 (param)
   673 ;;_slow	offset=-6 (param)
   674 ;;_b	offset=-4 (param)
   675 ;;_a	offset=-8 (param)
   676 ;;_grs	offset	0
   677 ;;_bexp	offset	1
   678 ;;_aexp	offset	2
   679 ;;_signs	offset	3
   680 ;;_b	offset=-4 (param)
   681 ;;_a	offset=-8 (param)
   682 ;;_prod	offset	0
   683 ;;_grs	offset	4
   684 ;;_temp	offset	8
   685 ;;_bexp	offset	10
   686 ;;_aexp	offset	11
   687 ;;_sign	offset	12
   688 ;;_b	offset=-4 (param)
   689 ;;_a	offset=-8 (param)
   690 ;;_InterruptHandler	offset=-3 (param)
   691 ;;_InterruptHandler	offset=-3 (param)
   692 ;;_InterruptHandler	offset=-3 (param)
   693 ;;_InterruptHandler	offset=-3 (param)
   694 ;;_InterruptHandler	offset=-3 (param)
   695 ;;_InterruptHandler	offset=-3 (param)
   696 ;;_state	offset	0
   697 ;;_InterruptHandler	offset=-3 (param)
   698 ;;_InterruptHandler	offset=-3 (param)
   699 ;;_seed	offset	0
   700 ;;_poly	offset	2
   701 ;;_InterruptHandler	offset=-3 (param)
   702 ;;_InterruptHandler	offset=-3 (param)
   703 ;;_i	offset	0
   704 ;;_sw_value	offset	1
   705 ;;_timerVal	offset=-2 (param)
   706 ;;_light	offset	0
   707 ;;_t	offset=-8 (param)
   708 ;;_mode	offset=-1 (param)
   709 ;;_chan	offset=-1 (param)
   710 ;;_to_what	offset=-2 (param)
   711 ;;_u	offset	0
   712 ;;_s	offset=-2 (param)
   713 ;;_index	offset=-1 (param)
   714 ;;_arg	offset	0
   715 ;;_exp	offset	4
   716 ;;_sign	offset=-1 (param)
   717 ;;_val	offset=-5 (param)
   718 ;;_b	offset=-4 (param)
   719 ;;_a	offset=-8 (param)
   720 ;;_grs	offset	0
   721 ;;_bexp	offset	1
   722 ;;_aexp	offset	2
   723 ;;_signs	offset	3
   724 ;;_b	offset=-4 (param)
   725 ;;_a	offset=-8 (param)
   726 ;;_prod	offset	0
   727 ;;_grs	offset	4
   728 ;;_temp	offset	8
   729 ;;_bexp	offset	10
   730 ;;_aexp	offset	11
   731 ;;_sign	offset	12
   732 ;;_b	offset=-4 (param)
   733 ;;_a	offset=-8 (param)
   734 ;;_grs	offset	0
   735 ;;_rem	offset	4
   736 ;;_new_exp	offset	8
   737 ;;_aexp	offset	10
   738 ;;_bexp	offset	11
   739 ;;_sign	offset	12
   740 ;;_b	offset=-4 (param)
   741 ;;_a	offset=-8 (param)
   742 ;;_ff1	offset=-4 (param)
   743 ;;_ff2	offset=-8 (param)
   744 ;;_timerVal	offset=-2 (param)
   745 ;;_adj	offset	0
   746 ;;_log_ptr	offset	4
   747 ;;_f	offset	0
   748 ;;_ap	offset	6
   749 ;;_s	offset=-3 (param)
   750 ;;_fmt	offset=-5 (param)
   751 ;;_cfmt	offset	0
   752 ;;_fp	offset=-2 (param)
   753 ;;_fmt	offset=-4 (param)
   754 ;;_ap	offset=-6 (param)
   755 ;;_vfpfcnvrt$6667	offset	0
   756 ;;_vfpfcnvrt$6678	offset	2
   757 ;;_vfpfcnvrt$6666	offset	4
   758 ;;_llu	offset	6
   759 ;;_ll	offset	14
   760 ;;_f	offset	22
   761 ;;_ct	offset	26
   762 ;;_cp	offset	29
   763 ;;_c	offset	31
   764 ;;_fp	offset=-2 (param)
   765 ;;_fmt	offset=-4 (param)
   766 ;;_ap	offset=-6 (param)
   767 ;;_xtoa$6652	offset	0
   768 ;;_xtoa$6651	offset	2
   769 ;;_n	offset	4
   770 ;;_c	offset	12
   771 ;;_i	offset	14
   772 ;;_w	offset	16
   773 ;;_p	offset	18
   774 ;;_fp	offset=-2 (param)
   775 ;;_d	offset=-10 (param)
   776 ;;_x	offset=-11 (param)
   777 ;;_toupper$7593	offset	0
   778 ;;_c	offset=-2 (param)
   779 ;;_c	offset=-2 (param)
   780 ;;_c	offset=-2 (param)
   781 ;;_n	offset	0
   782 ;;_i	offset	8
   783 ;;_w	offset	10
   784 ;;_p	offset	12
   785 ;;_fp	offset=-2 (param)
   786 ;;_d	offset=-10 (param)
   787 ;;_counter	offset	0
   788 ;;_dividend	offset=-8 (param)
   789 ;;_divisor	offset=-16 (param)
   790 ;;_quotient	offset	0
   791 ;;_counter	offset	8
   792 ;;_dividend	offset=-8 (param)
   793 ;;_divisor	offset=-16 (param)
   794 ;;_r	offset	0
   795 ;;_l	offset	2
   796 ;;__l	offset=-2 (param)
   797 ;;__r	offset=-4 (param)
   798 ;;_n	offset=-6 (param)
   799 ;;_nuls	offset	0
   800 ;;_l	offset	7
   801 ;;_p	offset	9
   802 ;;_cp	offset	11
   803 ;;_w	offset	13
   804 ;;_i	offset	15
   805 ;;_fp	offset=-2 (param)
   806 ;;_s	offset=-4 (param)
   807 ;;_efgtoa$6624	offset	0
   808 ;;_efgtoa$6623	offset	2
   809 ;;_efgtoa$6622	offset	4
   810 ;;_efgtoa$6618	offset	6
   811 ;;_efgtoa$6614	offset	8
   812 ;;_efgtoa$6613	offset	10
   813 ;;_u	offset	12
   814 ;;_g	offset	16
   815 ;;_l	offset	20
   816 ;;_h	offset	24
   817 ;;_ou	offset	28
   818 ;;_n	offset	32
   819 ;;_e	offset	34
   820 ;;_i	offset	36
   821 ;;_w	offset	38
   822 ;;_p	offset	40
   823 ;;_sign	offset	42
   824 ;;_d	offset	44
   825 ;;_ne	offset	46
   826 ;;_m	offset	48
   827 ;;_pp	offset	50
   828 ;;_t	offset	52
   829 ;;_mode	offset	54
   830 ;;_nmode	offset	55
   831 ;;_fp	offset=-2 (param)
   832 ;;_f	offset=-6 (param)
   833 ;;_c	offset=-7 (param)
   834 ;;_tolower$7578	offset	0
   835 ;;_c	offset=-2 (param)
   836 ;;_c	offset=-2 (param)
   837 ;;_d	offset	0
   838 ;;_s	offset	2
   839 ;;_dest	offset=-2 (param)
   840 ;;_src	offset=-4 (param)
   841 ;;_u	offset	0
   842 ;;_m	offset	4
   843 ;;_e	offset	8
   844 ;;_x	offset=-4 (param)
   845 ;;_u	offset	0
   846 ;;_e	offset	4
   847 ;;_x	offset=-4 (param)
   848 ;;_exp1	offset	0
   849 ;;_sign1	offset	1
   850 ;;_f1	offset=-4 (param)
   851 ;;_f1	offset=-4 (param)
   852 ;;_ff1	offset=-4 (param)
   853 ;;_ff2	offset=-8 (param)
   854 ;;_sign	offset	0
   855 ;;_counter	offset	1
   856 ;;_dividend	offset=-2 (param)
   857 ;;_divisor	offset=-4 (param)
   858 ;;_quotient	offset	0
   859 ;;_sign	offset	2
   860 ;;_counter	offset	3
   861 ;;_dividend	offset=-2 (param)
   862 ;;_divisor	offset=-4 (param)
   863 ;;_dtoa$6590	offset	0
   864 ;;_n	offset	2
   865 ;;_i	offset	10
   866 ;;_s	offset	12
   867 ;;_w	offset	14
   868 ;;_p	offset	16
   869 ;;_fp	offset=-2 (param)
   870 ;;_d	offset=-10 (param)
   871 ;;_a	offset=-2 (param)
   872 ;;_sign	offset	0
   873 ;;_counter	offset	1
   874 ;;_dividend	offset=-8 (param)
   875 ;;_divisor	offset=-16 (param)
   876 ;;_quotient	offset	0
   877 ;;_sign	offset	8
   878 ;;_counter	offset	9
   879 ;;_dividend	offset=-8 (param)
   880 ;;_divisor	offset=-16 (param)
   881 ;;_w	offset	0
   882 ;;_fp	offset=-2 (param)
   883 ;;_c	offset=-3 (param)
   884 ;;_w	offset	0
   885 ;;_i	offset	2
   886 ;;_fp	offset=-2 (param)
   887 ;;_buf	offset=-4 (param)
   888 ;;_p	offset=-6 (param)
   889 ;;_a	offset	0
   890 ;;_s	offset=-2 (param)
   891 ;;_i	offset	0
   892 ;;_c	offset	2
   893 ;;_s	offset=-2 (param)
   894 ;;_fp	offset=-4 (param)
   895 ;;_c	offset=-2 (param)
   896 ;;_fp	offset=-4 (param)
   897 ;;_c	offset=-1 (param)
   898 ;;__this	offset=-2 (param)
   899 ;;_c	offset=-3 (param)
   900 ;;_atoi$7210	offset	0
   901 ;;_atoi$7208	offset	2
   902 ;;_atoi$7209	offset	4
   903 ;;_n	offset	5
   904 ;;_neg	offset	7
   905 ;;_s	offset=-2 (param)
   906 ;;_isspace$7259	offset	0
   907 ;;_c	offset=-2 (param)
   908 ;;_c	offset=-2 (param)
   909 ;;_dsize	offset=-2 (param)
   910 ;;_u	offset	0
   911 ;;_x	offset=-4 (param)
   912 ;;_f1p	offset=-2 (param)
   913 ;;_f2	offset=-6 (param)
   914 ;;_timer	offset=-1 (param)
   915 ;;_count	offset=-3 (param)
   916 ;;_channel	offset=-1 (param)
   917 ;;_i	offset	0
   918                           
   919                           	psect	idataBIGRAM
   920  01A83A                     __pidataBIGRAM:
   921                           	opt callstack 0
   922                           
   923                           ;initializer for _port_data
   924  01A83A  FF                 	db	255
   925  01A83B  00                 	db	0
   926  01A83C  FF                 	db	255
   927  01A83D  00                 	db	0
   928  01A83E  FF                 	db	255
   929  01A83F  00                 	db	0
   930  01A840  FF                 	db	255
   931  01A841  00                 	db	0
   932  01A842  FF                 	db	255
   933  01A843  00                 	db	0
   934  01A844  FF                 	db	255
   935  01A845  00                 	db	0
   936  01A846  FF                 	db	255
   937  01A847  00                 	db	0
   938  01A848  FF                 	db	255
   939  01A849  00                 	db	0
   940  01A84A  00                 	db	0
   941  01A84B  00                 	db	0
   942  01A84C  00                 	db	0
   943  01A84D  00                 	db	0
   944  01A84E  00                 	db	0
   945  01A84F  00                 	db	0
   946  01A850  00                 	db	0
   947  01A851  00                 	db	0
   948  01A852  00                 	db	0
   949  01A853  00                 	db	0
   950  01A854  00                 	db	0
   951  01A855  00                 	db	0
   952  01A856  00                 	db	0
   953  01A857  00                 	db	0
   954  01A858  00                 	db	0
   955  01A859  00                 	db	0
   956  01A85A  00                 	db	0
   957  01A85B  00                 	db	0
   958  01A85C  00                 	db	0
   959  01A85D  00                 	db	0
   960  01A85E  00                 	db	0
   961  01A85F  00                 	db	0
   962  01A860  00                 	db	0
   963  01A861  00                 	db	0
   964  01A862  00                 	db	0
   965  01A863  00                 	db	0
   966  01A864  00                 	db	0
   967  01A865  00                 	db	0
   968  01A866  00                 	db	0
   969  01A867  00                 	db	0
   970  01A868  00                 	db	0
   971  01A869  00                 	db	0
   972  01A86A  00                 	db	0
   973  01A86B  00                 	db	0
   974  01A86C  00                 	db	0
   975  01A86D  00                 	db	0
   976  01A86E  00                 	db	0
   977  01A86F  00                 	db	0
   978  01A870  00                 	db	0
   979  01A871  00                 	db	0
   980  01A872  00                 	db	0
   981  01A873  00                 	db	0
   982  01A874  00                 	db	0
   983  01A875  00                 	db	0
   984  01A876  00                 	db	0
   985  01A877  00                 	db	0
   986  01A878  00                 	db	0
   987  01A879  00                 	db	0
   988  01A87A  00                 	db	0
   989  01A87B  00                 	db	0
   990  01A87C  00                 	db	0
   991  01A87D  00                 	db	0
   992  01A87E  00                 	db	0
   993  01A87F  00                 	db	0
   994  01A880  00                 	db	0
   995  01A881  00                 	db	0
   996  01A882  00                 	db	0
   997  01A883  00                 	db	0
   998  01A884  00                 	db	0
   999  01A885  00                 	db	0
  1000  01A886  00                 	db	0
  1001  01A887  00                 	db	0
  1002  01A888  00                 	db	0
  1003  01A889  00                 	db	0
  1004  01A88A  00                 	db	0
  1005  01A88B  00                 	db	0
  1006  01A88C  00                 	db	0
  1007  01A88D  00                 	db	0
  1008  01A88E  00                 	db	0
  1009  01A88F  00                 	db	0
  1010  01A890  00                 	db	0
  1011  01A891  00                 	db	0
  1012  01A892  00                 	db	0
  1013  01A893  00                 	db	0
  1014  01A894  00                 	db	0
  1015  01A895  00                 	db	0
  1016  01A896  00                 	db	0
  1017  01A897  00                 	db	0
  1018  01A898  00                 	db	0
  1019  01A899  00                 	db	0
  1020  01A89A  00                 	db	0
  1021  01A89B  00                 	db	0
  1022  01A89C  00                 	db	0
  1023  01A89D  00                 	db	0
  1024  01A89E  00                 	db	0
  1025  01A89F  00                 	db	0
  1026  01A8A0  00                 	db	0
  1027  01A8A1  00                 	db	0
  1028  01A8A2  00                 	db	0
  1029  01A8A3  00                 	db	0
  1030  01A8A4  00                 	db	0
  1031  01A8A5  00                 	db	0
  1032  01A8A6  00                 	db	0
  1033  01A8A7  00                 	db	0
  1034  01A8A8  00                 	db	0
  1035  01A8A9  00                 	db	0
  1036  01A8AA  00                 	db	0
  1037  01A8AB  00                 	db	0
  1038  01A8AC  00                 	db	0
  1039  01A8AD  00                 	db	0
  1040  01A8AE  00                 	db	0
  1041  01A8AF  00                 	db	0
  1042  01A8B0  00                 	db	0
  1043  01A8B1  00                 	db	0
  1044  01A8B2  00                 	db	0
  1045  01A8B3  00                 	db	0
  1046  01A8B4  00                 	db	0
  1047  01A8B5  00                 	db	0
  1048  01A8B6  00                 	db	0
  1049  01A8B7  00                 	db	0
  1050  01A8B8  00                 	db	0
  1051  01A8B9  00                 	db	0
  1052  01A8BA  00                 	db	0
  1053  01A8BB  00                 	db	0
  1054  01A8BC  00                 	db	0
  1055  01A8BD  00                 	db	0
  1056  01A8BE  00                 	db	0
  1057  01A8BF  00                 	db	0
  1058  01A8C0  00                 	db	0
  1059  01A8C1  00                 	db	0
  1060  01A8C2  00                 	db	0
  1061  01A8C3  00                 	db	0
  1062  01A8C4  00                 	db	0
  1063  01A8C5  00                 	db	0
  1064  01A8C6  00                 	db	0
  1065  01A8C7  00                 	db	0
  1066  01A8C8  00                 	db	0
  1067  01A8C9  00                 	db	0
  1068  01A8CA  00                 	db	0
  1069  01A8CB  00                 	db	0
  1070  01A8CC  00                 	db	0
  1071  01A8CD  00                 	db	0
  1072  01A8CE  00                 	db	0
  1073  01A8CF  00                 	db	0
  1074  01A8D0  00                 	db	0
  1075  01A8D1  00                 	db	0
  1076  01A8D2  00                 	db	0
  1077  01A8D3  00                 	db	0
  1078  01A8D4  00                 	db	0
  1079  01A8D5  00                 	db	0
  1080  01A8D6  00                 	db	0
  1081  01A8D7  00                 	db	0
  1082  01A8D8  00                 	db	0
  1083  01A8D9  00                 	db	0
  1084  01A8DA  00                 	db	0
  1085  01A8DB  00                 	db	0
  1086  01A8DC  00                 	db	0
  1087  01A8DD  00                 	db	0
  1088  01A8DE  00                 	db	0
  1089  01A8DF  00                 	db	0
  1090  01A8E0  00                 	db	0
  1091  01A8E1  00                 	db	0
  1092  01A8E2  00                 	db	0
  1093  01A8E3  00                 	db	0
  1094  01A8E4  00                 	db	0
  1095  01A8E5  00                 	db	0
  1096  01A8E6  00                 	db	0
  1097  01A8E7  00                 	db	0
  1098  01A8E8  00                 	db	0
  1099  01A8E9  00                 	db	0
  1100  01A8EA  00                 	db	0
  1101  01A8EB  00                 	db	0
  1102  01A8EC  00                 	db	0
  1103  01A8ED  00                 	db	0
  1104  01A8EE  00                 	db	0
  1105  01A8EF  00                 	db	0
  1106  01A8F0  00                 	db	0
  1107  01A8F1  00                 	db	0
  1108  01A8F2  00                 	db	0
  1109  01A8F3  00                 	db	0
  1110  01A8F4  00                 	db	0
  1111  01A8F5  00                 	db	0
  1112  01A8F6  00                 	db	0
  1113  01A8F7  00                 	db	0
  1114  01A8F8  00                 	db	0
  1115  01A8F9  00                 	db	0
  1116  01A8FA  00                 	db	0
  1117  01A8FB  00                 	db	0
  1118  01A8FC  00                 	db	0
  1119  01A8FD  00                 	db	0
  1120  01A8FE  00                 	db	0
  1121  01A8FF  00                 	db	0
  1122  01A900  00                 	db	0
  1123  01A901  00                 	db	0
  1124  01A902  00                 	db	0
  1125  01A903  00                 	db	0
  1126  01A904  00                 	db	0
  1127  01A905  00                 	db	0
  1128  01A906  00                 	db	0
  1129  01A907  00                 	db	0
  1130  01A908  00                 	db	0
  1131  01A909  00                 	db	0
  1132  01A90A  00                 	db	0
  1133  01A90B  00                 	db	0
  1134  01A90C  00                 	db	0
  1135  01A90D  00                 	db	0
  1136  01A90E  00                 	db	0
  1137  01A90F  00                 	db	0
  1138  01A910  00                 	db	0
  1139  01A911  00                 	db	0
  1140  01A912  00                 	db	0
  1141  01A913  00                 	db	0
  1142  01A914  00                 	db	0
  1143  01A915  00                 	db	0
  1144  01A916  00                 	db	0
  1145  01A917  00                 	db	0
  1146  01A918  00                 	db	0
  1147  01A919  00                 	db	0
  1148  01A91A  00                 	db	0
  1149  01A91B  00                 	db	0
  1150  01A91C  00                 	db	0
  1151  01A91D  00                 	db	0
  1152  01A91E  00                 	db	0
  1153  01A91F  00                 	db	0
  1154  01A920  00                 	db	0
  1155  01A921  00                 	db	0
  1156  01A922  00                 	db	0
  1157  01A923  00                 	db	0
  1158  01A924  00                 	db	0
  1159  01A925  00                 	db	0
  1160  01A926  00                 	db	0
  1161  01A927  00                 	db	0
  1162  01A928  00                 	db	0
  1163  01A929  00                 	db	0
  1164  01A92A  00                 	db	0
  1165  01A92B  00                 	db	0
  1166  01A92C  00                 	db	0
  1167  01A92D  00                 	db	0
  1168  01A92E  00                 	db	0
  1169  01A92F  00                 	db	0
  1170  01A930  00                 	db	0
  1171  01A931  00                 	db	0
  1172  01A932  00                 	db	0
  1173  01A933  00                 	db	0
  1174  01A934  00                 	db	0
  1175  01A935  00                 	db	0
  1176  01A936  00                 	db	0
  1177  01A937  00                 	db	0
  1178  01A938  00                 	db	0
  1179  01A939  00                 	db	0
  1180  01A93A  00                 	db	0
  1181  01A93B  00                 	db	0
  1182  01A93C  00                 	db	0
  1183  01A93D  00                 	db	0
  1184  01A93E  00                 	db	0
  1185  01A93F  00                 	db	0
  1186  01A940  00                 	db	0
  1187  01A941  00                 	db	0
  1188  01A942  00                 	db	0
  1189  01A943  00                 	db	0
  1190  01A944  00                 	db	0
  1191  01A945  00                 	db	0
  1192  01A946  00                 	db	0
  1193  01A947  00                 	db	0
  1194  01A948  00                 	db	0
  1195  01A949  00                 	db	0
  1196  01A94A  00                 	db	0
  1197  01A94B  00                 	db	0
  1198  01A94C  00                 	db	0
  1199  01A94D  00                 	db	0
  1200  01A94E  00                 	db	0
  1201  01A94F  00                 	db	0
  1202  01A950  00                 	db	0
  1203  01A951  00                 	db	0
  1204  01A952  00                 	db	0
  1205  01A953  00                 	db	0
  1206  01A954  00                 	db	0
  1207  01A955  00                 	db	0
  1208  01A956  00                 	db	0
  1209  01A957  00                 	db	0
  1210  01A958  00                 	db	0
  1211  01A959  00                 	db	0
  1212  01A95A  00                 	db	0
  1213  01A95B  00                 	db	0
  1214  01A95C  00                 	db	0
  1215  01A95D  00                 	db	0
  1216  01A95E  00                 	db	0
  1217  01A95F  00                 	db	0
  1218  01A960  00                 	db	0
  1219  01A961  00                 	db	0
  1220  01A962  00                 	db	0
  1221  01A963  00                 	db	0
  1222  01A964  00                 	db	0
  1223  01A965  00                 	db	0
  1224  01A966  00                 	db	0
  1225  01A967  00                 	db	0
  1226  01A968  00                 	db	0
  1227  01A969  00                 	db	0
  1228  01A96A  00                 	db	0
  1229  01A96B  00                 	db	0
  1230  01A96C  00                 	db	0
  1231  01A96D  00                 	db	0
  1232  01A96E  00                 	db	0
  1233  01A96F  00                 	db	0
  1234  01A970  00                 	db	0
  1235  01A971  00                 	db	0
  1236  01A972  00                 	db	0
  1237  01A973  00                 	db	0
  1238  01A974  00                 	db	0
  1239  01A975  00                 	db	0
  1240  01A976  00                 	db	0
  1241  01A977  00                 	db	0
  1242  01A978  00                 	db	0
  1243  01A979  00                 	db	0
  1244  01A97A  00                 	db	0
  1245  01A97B  00                 	db	0
  1246  01A97C  00                 	db	0
  1247  01A97D  00                 	db	0
  1248  01A97E  00                 	db	0
  1249  01A97F  00                 	db	0
  1250  01A980  00                 	db	0
  1251  01A981  00                 	db	0
  1252  01A982  00                 	db	0
  1253  01A983  00                 	db	0
  1254  01A984  00                 	db	0
  1255  01A985  00                 	db	0
  1256  01A986  00                 	db	0
  1257  01A987  00                 	db	0
  1258  01A988  00                 	db	0
  1259  01A989  00                 	db	0
  1260  01A98A  00                 	db	0
  1261  01A98B  00                 	db	0
  1262  01A98C  00                 	db	0
  1263  01A98D  00                 	db	0
  1264  01A98E  00                 	db	0
  1265  01A98F  00                 	db	0
  1266  01A990  00                 	db	0
  1267  01A991  00                 	db	0
  1268  01A992  00                 	db	0
  1269  01A993  00                 	db	0
  1270  01A994  00                 	db	0
  1271  01A995  00                 	db	0
  1272  01A996  00                 	db	0
  1273  01A997  00                 	db	0
  1274  01A998  00                 	db	0
  1275  01A999  00                 	db	0
  1276  01A99A  00                 	db	0
  1277  01A99B  00                 	db	0
  1278  01A99C  00                 	db	0
  1279  01A99D  00                 	db	0
  1280  01A99E  00                 	db	0
  1281  01A99F  00                 	db	0
  1282  01A9A0  00                 	db	0
  1283  01A9A1  00                 	db	0
  1284  01A9A2  00                 	db	0
  1285  01A9A3  00                 	db	0
  1286  01A9A4  00                 	db	0
  1287  01A9A5  00                 	db	0
  1288  01A9A6  00                 	db	0
  1289  01A9A7  00                 	db	0
  1290  01A9A8  00                 	db	0
  1291  01A9A9  00                 	db	0
  1292  01A9AA  00                 	db	0
  1293  01A9AB  00                 	db	0
  1294  01A9AC  00                 	db	0
  1295  01A9AD  00                 	db	0
  1296  01A9AE  00                 	db	0
  1297  01A9AF  00                 	db	0
  1298  01A9B0  00                 	db	0
  1299  01A9B1  00                 	db	0
  1300  01A9B2  00                 	db	0
  1301  01A9B3  00                 	db	0
  1302  01A9B4  00                 	db	0
  1303  01A9B5  00                 	db	0
  1304  01A9B6  00                 	db	0
  1305  01A9B7  00                 	db	0
  1306  01A9B8  00                 	db	0
  1307  01A9B9  00                 	db	0
  1308  01A9BA  00                 	db	0
  1309  01A9BB  00                 	db	0
  1310  01A9BC  00                 	db	0
  1311  01A9BD  00                 	db	0
  1312  01A9BE  00                 	db	0
  1313  01A9BF  00                 	db	0
  1314  01A9C0  00                 	db	0
  1315  01A9C1  00                 	db	0
  1316  01A9C2  00                 	db	0
  1317  01A9C3  00                 	db	0
  1318  01A9C4  00                 	db	0
  1319  01A9C5  00                 	db	0
  1320  01A9C6  00                 	db	0
  1321  01A9C7  00                 	db	0
  1322  01A9C8  00                 	db	0
  1323  01A9C9  00                 	db	0
  1324  01A9CA  00                 	db	0
  1325  01A9CB  00                 	db	0
  1326  01A9CC  00                 	db	0
  1327  01A9CD  00                 	db	0
  1328  01A9CE  00                 	db	0
  1329  01A9CF  00                 	db	0
  1330  01A9D0  00                 	db	0
  1331  01A9D1  00                 	db	0
  1332  01A9D2  00                 	db	0
  1333  01A9D3  00                 	db	0
  1334  01A9D4  00                 	db	0
  1335  01A9D5  00                 	db	0
  1336  01A9D6  00                 	db	0
  1337  01A9D7  00                 	db	0
  1338  01A9D8  00                 	db	0
  1339  01A9D9  00                 	db	0
  1340  01A9DA  00                 	db	0
  1341  01A9DB  00                 	db	0
  1342  01A9DC  00                 	db	0
  1343  01A9DD  00                 	db	0
  1344  01A9DE  00                 	db	0
  1345  01A9DF  00                 	db	0
  1346  01A9E0  00                 	db	0
  1347  01A9E1  00                 	db	0
  1348  01A9E2  00                 	db	0
  1349  01A9E3  00                 	db	0
  1350  01A9E4  00                 	db	0
  1351  01A9E5  00                 	db	0
  1352  01A9E6  00                 	db	0
  1353  01A9E7  00                 	db	0
  1354  01A9E8  00                 	db	0
  1355  01A9E9  00                 	db	0
  1356  01A9EA  00                 	db	0
  1357  01A9EB  00                 	db	0
  1358  01A9EC  00                 	db	0
  1359  01A9ED  00                 	db	0
  1360  01A9EE  00                 	db	0
  1361  01A9EF  00                 	db	0
  1362  01A9F0  00                 	db	0
  1363  01A9F1  00                 	db	0
  1364  01A9F2  00                 	db	0
  1365  01A9F3  00                 	db	0
  1366  01A9F4  00                 	db	0
  1367  01A9F5  00                 	db	0
  1368  01A9F6  00                 	db	0
  1369  01A9F7  00                 	db	0
  1370  01A9F8  00                 	db	0
  1371  01A9F9  00                 	db	0
  1372  01A9FA  00                 	db	0
  1373  01A9FB  00                 	db	0
  1374  01A9FC  00                 	db	0
  1375  01A9FD  00                 	db	0
  1376  01A9FE  00                 	db	0
  1377  01A9FF  00                 	db	0
  1378  01AA00  00                 	db	0
  1379  01AA01  00                 	db	0
  1380  01AA02  00                 	db	0
  1381  01AA03  00                 	db	0
  1382  01AA04  00                 	db	0
  1383  01AA05  00                 	db	0
  1384  01AA06  00                 	db	0
  1385  01AA07  00                 	db	0
  1386  01AA08  00                 	db	0
  1387  01AA09  00                 	db	0
  1388  01AA0A  00                 	db	0
  1389  01AA0B  00                 	db	0
  1390  01AA0C  00                 	db	0
  1391  01AA0D  00                 	db	0
  1392  01AA0E  00                 	db	0
  1393  01AA0F  00                 	db	0
  1394  01AA10  00                 	db	0
  1395  01AA11  00                 	db	0
  1396  01AA12  00                 	db	0
  1397  01AA13  00                 	db	0
  1398  01AA14  00                 	db	0
  1399  01AA15  00                 	db	0
  1400  01AA16  00                 	db	0
  1401  01AA17  00                 	db	0
  1402  01AA18  00                 	db	0
  1403  01AA19  00                 	db	0
  1404  01AA1A  00                 	db	0
  1405  01AA1B  00                 	db	0
  1406  01AA1C  00                 	db	0
  1407  01AA1D  00                 	db	0
  1408  01AA1E  00                 	db	0
  1409  01AA1F  00                 	db	0
  1410  01AA20  00                 	db	0
  1411  01AA21  00                 	db	0
  1412  01AA22  00                 	db	0
  1413  01AA23  00                 	db	0
  1414  01AA24  00                 	db	0
  1415  01AA25  00                 	db	0
  1416  01AA26  00                 	db	0
  1417  01AA27  00                 	db	0
  1418  01AA28  00                 	db	0
  1419  01AA29  00                 	db	0
  1420  01AA2A  00                 	db	0
  1421  01AA2B  00                 	db	0
  1422  01AA2C  00                 	db	0
  1423  01AA2D  00                 	db	0
  1424  01AA2E  00                 	db	0
  1425  01AA2F  00                 	db	0
  1426  01AA30  00                 	db	0
  1427  01AA31  00                 	db	0
  1428  01AA32  00                 	db	0
  1429  01AA33  00                 	db	0
  1430  01AA34  00                 	db	0
  1431  01AA35  00                 	db	0
  1432  01AA36  00                 	db	0
  1433  01AA37  00                 	db	0
  1434  01AA38  00                 	db	0
  1435  01AA39  00                 	db	0
  1436                           
  1437                           ;initializer for _C
  1438  01AA3A  0000               	dw	0
  1439  01AA3C  0000               	dw	0
  1440  01AA3E  0000               	dw	0
  1441  01AA40  0000               	dw	0
  1442  01AA42  0000               	dw	0
  1443  01AA44  0000               	dw	0
  1444  01AA46  0000               	dw	0
  1445  01AA48  0000               	dw	0
  1446  01AA4A  0000               	dw	0
  1447  01AA4C  0000               	dw	0
  1448  01AA4E  0000               	dw	0
  1449  01AA50  0000               	dw	0
  1450  01AA52  0000               	dw	0
  1451  01AA54  0000               	dw	0
  1452  01AA56  0000               	dw	0
  1453  01AA58  0000               	dw	0
  1454  01AA5A  0000               	dw	0
  1455  01AA5C  0000               	dw	0
  1456  01AA5E  0000               	dw	0
  1457  01AA60  0000               	dw	0
  1458  01AA62  0000               	dw	0
  1459  01AA64  0000               	dw	0
  1460  01AA66  0000               	dw	0
  1461  01AA68  0000               	dw	0
  1462  01AA6A  0000               	dw	0
  1463  01AA6C  0000               	dw	0
  1464  01AA6E  0000               	dw	0
  1465  01AA70  0000               	dw	0
  1466  01AA72  0000               	dw	0
  1467  01AA74  0000               	dw	0
  1468  01AA76  0000               	dw	0
  1469  01AA78  0000               	dw	0
  1470  01AA7A  0000               	dw	0
  1471  01AA7C  0000               	dw	0
  1472  01AA7E  0000               	dw	0
  1473  01AA80  0000               	dw	0
  1474  01AA82  0000               	dw	0
  1475  01AA84  0000               	dw	0
  1476  01AA86  0000               	dw	0
  1477  01AA88  0000               	dw	0
  1478  01AA8A  0000               	dw	0
  1479  01AA8C  0000               	dw	0
  1480  01AA8E  0000               	dw	0
  1481  01AA90  0000               	dw	0
  1482  01AA92  0000               	dw	0
  1483  01AA94  0000               	dw	0
  1484  01AA96  0000               	dw	0
  1485  01AA98  0000               	dw	0
  1486  01AA9A  0000               	dw	0
  1487  01AA9C  0000               	dw	0
  1488  01AA9E  0000               	dw	0
  1489  01AAA0  0000               	dw	0
  1490  01AAA2  0000               	dw	0
  1491  01AAA4  0000               	dw	0
  1492  01AAA6  0000               	dw	0
  1493  01AAA8  0000               	dw	0
  1494  01AAAA  0000               	dw	0
  1495  01AAAC  0000               	dw	0
  1496  01AAAE  0000               	dw	0
  1497  01AAB0  0000               	dw	0
  1498  01AAB2  0000               	dw	0
  1499  01AAB4  0000               	dw	0
  1500  01AAB6  0000               	dw	0
  1501  01AAB8  0000               	dw	0
  1502  01AABA  0000               	dw	0
  1503  01AABC  0000               	dw	0
  1504  01AABE  0000               	dw	0
  1505  01AAC0  0000               	dw	0
  1506  01AAC2  0000               	dw	0
  1507  01AAC4  0000               	dw	0
  1508  01AAC6  0000               	dw	0
  1509  01AAC8  42FA               	dw	17146
  1510  01AACA  0000               	dw	0
  1511  01AACC  0000               	dw	0
  1512  01AACE  0000               	dw	0
  1513  01AAD0  0000               	dw	0
  1514  01AAD2  0000               	dw	0
  1515  01AAD4  0000               	dw	0
  1516  01AAD6  0000               	dw	0
  1517  01AAD8  0000               	dw	0
  1518  01AADA  0000               	dw	0
  1519  01AADC  0000               	dw	0
  1520  01AADE  0000               	dw	0
  1521  01AAE0  0000               	dw	0
  1522  01AAE2  0000               	dw	0
  1523  01AAE4  0000               	dw	0
  1524  01AAE6  0000               	dw	0
  1525  01AAE8  0000               	dw	0
  1526  01AAEA  0000               	dw	0
  1527  01AAEC  0000               	dw	0
  1528  01AAEE  0000               	dw	0
  1529  01AAF0  0000               	dw	0
  1530  01AAF2  00                 	db	0
  1531  01AAF3  0000               	dw	0
  1532  01AAF5  0000               	dw	0
  1533  01AAF7  0000               	dw	0
  1534  01AAF9  0000               	dw	0
  1535  01AAFB  0000               	dw	0
  1536  01AAFD  0000               	dw	0
  1537  01AAFF  0000               	dw	0
  1538  01AB01  0000               	dw	0
  1539  01AB03  0000               	dw	0
  1540  01AB05  0000               	dw	0
  1541  01AB07  0000               	dw	0
  1542  01AB09  0000               	dw	0
  1543  01AB0B  0000               	dw	0
  1544  01AB0D  3F80               	dw	16256
  1545  01AB0F  0000               	dw	0
  1546  01AB11  3F80               	dw	16256
  1547  01AB13  0000               	dw	0
  1548  01AB15  0000               	dw	0
  1549  01AB17  0000               	dw	0
  1550  01AB19  0000               	dw	0
  1551  01AB1B  0000               	dw	0
  1552  01AB1D  0000               	dw	0
  1553  01AB1F  0000               	dw	0
  1554  01AB21  0000               	dw	0
  1555  01AB23  0000               	dw	0
  1556  01AB25  0000               	dw	0
  1557  01AB27  0000               	dw	0
  1558  01AB29  0000               	dw	0
  1559  01AB2B  0000               	dw	0
  1560  01AB2D  0000               	dw	0
  1561  01AB2F  0000               	dw	0
  1562  01AB31  3A98               	dw	15000
  1563  01AB33  0000               	dw	0
  1564  01AB35  00                 	db	0
  1565  01AB36  00                 	db	0
  1566  01AB37  00                 	db	0
  1567  01AB38  00                 	db	0
  1568  01AB39  0000               	dw	0
  1569  01AB3B  0000               	dw	0
  1570  01AB3D  0000               	dw	0
  1571  01AB3F  0000               	dw	0
  1572  01AB41  0000               	dw	0
  1573  01AB43  0000               	dw	0
  1574  01AB45  0000               	dw	0
  1575  01AB47  0000               	dw	0
  1576  01AB49  0000               	dw	0
  1577  01AB4B  0000               	dw	0
  1578  01AB4D  0000               	dw	0
  1579  01AB4F  0000               	dw	0
  1580  01AB51  0000               	dw	0
  1581  01AB53  01                 	db	1
  1582  01AB54  0000               	dw	0
  1583  01AB56  0000               	dw	0
  1584  01AB58  0000               	dw	0
  1585  01AB5A  0000               	dw	0
  1586  01AB5C  0000               	dw	0
  1587  01AB5E  0000               	dw	0
  1588  01AB60  0000               	dw	0
  1589  01AB62  0000               	dw	0
  1590  01AB64  0000               	dw	0
  1591  01AB66  0000               	dw	0
  1592  01AB68  01                 	db	1
  1593  01AB69  00                 	db	0
  1594  01AB6A  0000               	dw	0
  1595  01AB6C  0000               	dw	0
  1596  01AB6E  0000               	dw	0
  1597  01AB70  0000               	dw	0
  1598  01AB72  0000               	dw	0
  1599  01AB74  0000               	dw	0
  1600  01AB76  0000               	dw	0
  1601  01AB78  0000               	dw	0
  1602                           
  1603                           	psect	idataBANK1
  1604  000B56                     __pidataBANK1:
  1605                           	opt callstack 0
  1606                           
  1607                           ;initializer for _R
  1608  000B56  0000               	dw	0
  1609  000B58  0000               	dw	0
  1610  000B5A  0000               	dw	0
  1611  000B5C  0000               	dw	0
  1612  000B5E  0000               	dw	0
  1613  000B60  0000               	dw	0
  1614  000B62  0000               	dw	0
  1615  000B64  0000               	dw	0
  1616  000B66  0000               	dw	0
  1617  000B68  0000               	dw	0
  1618  000B6A  0000               	dw	0
  1619  000B6C  0000               	dw	0
  1620  000B6E  0000               	dw	0
  1621  000B70  0000               	dw	0
  1622  000B72  0000               	dw	0
  1623  000B74  0000               	dw	0
  1624  000B76  0000               	dw	0
  1625  000B78  0000               	dw	0
  1626  000B7A  0000               	dw	0
  1627  000B7C  0F62               	dw	3938
  1628  000B7E  0FA4               	dw	4004
  1629  000B80  89A0               	dw	35232
  1630  000B82  3DB0               	dw	15792
  1631  000B84  DEA4               	dw	56996
  1632  000B86  3D13               	dw	15635
  1633  000B88  00                 	db	0
  1634  000B89  0000               	dw	0
  1635  000B8B  00                 	db	0
  1636  000B8C  0000               	dw	0
  1637  000B8E  0000               	dw	0
  1638  000B90  0000               	dw	0
  1639  000B92  0000               	dw	0
  1640  000B94  0000               	dw	0
  1641  000B96  0000               	dw	0
  1642  000B98  0000               	dw	0
  1643  000B9A  0000               	dw	0
  1644  000B9C  0000               	dw	0
  1645  000B9E  0000               	dw	0
  1646  000BA0  0000               	dw	0
  1647  000BA2  0000               	dw	0
  1648  000BA4  0000               	dw	0
  1649  000BA6  0000               	dw	0
  1650  000BA8  0000               	dw	0
  1651  000BAA  0000               	dw	0
  1652  000BAC  0000               	dw	0
  1653  000BAE  0000               	dw	0
  1654  000BB0  0000               	dw	0
  1655  000BB2  0000               	dw	0
  1656  000BB4  0000               	dw	0
  1657  000BB6  0000               	dw	0
  1658  000BB8  0000               	dw	0
  1659  000BBA  0000               	dw	0
  1660  000BBC  0000               	dw	0
  1661  000BBE  0000               	dw	0
  1662  000BC0  0000               	dw	0
  1663  000BC2  0000               	dw	0
  1664  000BC4  0000               	dw	0
  1665  000BC6  0000               	dw	0
  1666  000BC8  0000               	dw	0
  1667  000BCA  0000               	dw	0
  1668  000BCC  0000               	dw	0
  1669  000BCE  0000               	dw	0
  1670  000BD0  0000               	dw	0
  1671  000BD2  0000               	dw	0
  1672  000BD4  0000               	dw	0
  1673  000BD6  0000               	dw	0
  1674  000BD8  0000               	dw	0
  1675  000BDA  0000               	dw	0
  1676  000BDC  0000               	dw	0
  1677  000BDE  0000               	dw	0
  1678  000BE0  0000               	dw	0
  1679  000BE2  0000               	dw	0
  1680  000BE4  0000               	dw	0
  1681  000BE6  0000               	dw	0
  1682  000BE8  0000               	dw	0
  1683  000BEA  0000               	dw	0
  1684  000BEC  00                 	db	0
  1685  000BED  00                 	db	0
  1686  000BEE  1957               	dw	6487
  1687  000BF0  42                 	db	66
  1688                           
  1689                           ;initializer for _H
  1690  000BF1  00                 	db	0
  1691  000BF2  00                 	db	0
  1692  000BF3  01                 	db	1
  1693  000BF4  00                 	db	0
  1694  000BF5  01                 	db	1
  1695  000BF6  00                 	db	0
  1696  000BF7  01                 	db	1
  1697  000BF8  00                 	db	0
  1698  000BF9  00                 	db	0
  1699                           
  1700                           	psect	idataBANK2
  1701  0005C8                     __pidataBANK2:
  1702                           	opt callstack 0
  1703                           
  1704                           ;initializer for stoa@F1166
  1705  0005C8  28                 	db	40
  1706  0005C9  6E                 	db	110
  1707  0005CA  75                 	db	117
  1708  0005CB  6C                 	db	108
  1709  0005CC  6C                 	db	108
  1710  0005CD  29                 	db	41
  1711  0005CE  00                 	db	0
  1712                           
  1713                           ;initializer for _V
  1714  0005CF  00                 	db	0
  1715  0005D0  00                 	db	0
  1716  0005D1  00                 	db	0
  1717  0005D2  00                 	db	0
  1718  0005D3  00                 	db	0
  1719  0005D4  00                 	db	0
  1720  0005D5  00                 	db	0
  1721  0005D6  00                 	db	0
  1722  0005D7  00                 	db	0
  1723  0005D8  00                 	db	0
  1724  0005D9  00                 	db	0
  1725  0005DA  00                 	db	0
  1726  0005DB  00                 	db	0
  1727  0005DC  00                 	db	0
  1728  0005DD  00                 	db	0
  1729  0005DE  00                 	db	0
  1730  0005DF  00                 	db	0
  1731  0005E0  00                 	db	0
  1732  0005E1  00                 	db	0
  1733  0005E2  00                 	db	0
  1734  0005E3  00                 	db	0
  1735  0005E4  00                 	db	0
  1736  0005E5  00                 	db	0
  1737  0005E6  00                 	db	0
  1738  0005E7  00                 	db	0
  1739  0005E8  00                 	db	0
  1740  0005E9  00                 	db	0
  1741  0005EA  00                 	db	0
  1742  0005EB  00                 	db	0
  1743  0005EC  00                 	db	0
  1744  0005ED  00                 	db	0
  1745  0005EE  00                 	db	0
  1746  0005EF  00                 	db	0
  1747  0005F0  00                 	db	0
  1748  0005F1  00                 	db	0
  1749  0005F2  00                 	db	0
  1750  0005F3  00                 	db	0
  1751  0005F4  00                 	db	0
  1752  0005F5  00                 	db	0
  1753  0005F6  00                 	db	0
  1754  0005F7  00                 	db	0
  1755  0005F8  00                 	db	0
  1756  0005F9  00                 	db	0
  1757  0005FA  00                 	db	0
  1758  0005FB  00                 	db	0
  1759  0005FC  00                 	db	0
  1760  0005FD  00                 	db	0
  1761  0005FE  00                 	db	0
  1762  0005FF  00                 	db	0
  1763  000600  00                 	db	0
  1764  000601  00                 	db	0
  1765  000602  00                 	db	0
  1766  000603  00                 	db	0
  1767  000604  00                 	db	0
  1768  000605  00                 	db	0
  1769  000606  00                 	db	0
  1770  000607  00                 	db	0
  1771  000608  00                 	db	0
  1772  000609  00                 	db	0
  1773  00060A  00                 	db	0
  1774  00060B  00                 	db	0
  1775  00060C  00                 	db	0
  1776  00060D  00                 	db	0
  1777  00060E  00                 	db	0
  1778  00060F  00                 	db	0
  1779  000610  00                 	db	0
  1780  000611  00                 	db	0
  1781  000612  00                 	db	0
  1782  000613  00                 	db	0
  1783  000614  00                 	db	0
  1784  000615  00                 	db	0
  1785  000616  00                 	db	0
  1786  000617  00                 	db	0
  1787  000618  00                 	db	0
  1788  000619  00                 	db	0
  1789  00061A  00                 	db	0
  1790  00061B  00                 	db	0
  1791  00061C  00                 	db	0
  1792  00061D  00                 	db	0
  1793  00061E  00                 	db	0
  1794  00061F  00                 	db	0
  1795  000620  00                 	db	0
  1796  000621  00                 	db	0
  1797  000622  00                 	db	0
  1798  000623  00                 	db	0
  1799  000624  00                 	db	0
  1800  000625  00                 	db	0
  1801  000626  00                 	db	0
  1802  000627  00                 	db	0
  1803  000628  00                 	db	0
  1804  000629  00                 	db	0
  1805  00062A  00                 	db	0
  1806  00062B  00                 	db	0
  1807  00062C  00                 	db	0
  1808  00062D  00                 	db	0
  1809  00062E  00                 	db	0
  1810  00062F  00                 	db	0
  1811  000630  00                 	db	0
  1812  000631  00                 	db	0
  1813  000632  00                 	db	0
  1814  000633  00                 	db	0
  1815  000634  00                 	db	0
  1816  000635  00                 	db	0
  1817  000636  00                 	db	0
  1818  000637  00                 	db	0
  1819  000638  00                 	db	0
  1820  000639  00                 	db	0
  1821  00063A  00                 	db	0
  1822  00063B  00                 	db	0
  1823  00063C  00                 	db	0
  1824  00063D  00                 	db	0
  1825  00063E  00                 	db	0
  1826  00063F  00                 	db	0
  1827  000640  00                 	db	0
  1828  000641  00                 	db	0
  1829  000642  00                 	db	0
  1830  000643  00                 	db	0
  1831  000644  00                 	db	0
  1832  000645  00                 	db	0
  1833  000646  00                 	db	0
  1834  000647  00                 	db	0
  1835  000648  00                 	db	0
  1836  000649  00                 	db	0
  1837  00064A  00                 	db	0
  1838  00064B  00                 	db	0
  1839  00064C  00                 	db	0
  1840  00064D  00                 	db	0
  1841  00064E  00                 	db	0
  1842  00064F  00                 	db	0
  1843  000650  879E               	dw	34718
  1844  000652  5E4C               	dw	24140
  1845  000654  00                 	db	0
  1846  000655  00                 	db	0
  1847  000656  00                 	db	0
  1848  000657  00                 	db	0
  1849  000658  00                 	db	0
  1850  000659  00                 	db	0
  1851  00065A  00                 	db	0
  1852  00065B  0000               	dw	0
  1853  00065D  0000               	dw	0
  1854  00065F  0000               	dw	0
  1855  000661  0000               	dw	0
  1856  000663  0000               	dw	0
  1857  000665  0000               	dw	0
  1858  000667  00                 	db	0
  1859  000668  00                 	db	0
  1860  000669  00                 	db	0
  1861  00066A  00                 	db	0
  1862  00066B  00                 	db	0
  1863  00066C  00                 	db	0
  1864  00066D  00                 	db	0
  1865  00066E  00                 	db	0
  1866  00066F  00                 	db	0
  1867  000670  00                 	db	0
  1868  000671  00                 	db	0
  1869  000672  0000               	dw	0
  1870  000674  0000               	dw	0
  1871  000676  2D                 	db	45
  1872  000677  00                 	db	0
  1873  000678  00                 	db	0
  1874  000679  00                 	db	0
  1875  00067A  00                 	db	0
  1876  00067B  00                 	db	0
  1877  00067C  0000               	dw	0
  1878  00067E  0000               	dw	0
  1879  000680  0000               	dw	0
  1880  000682  0000               	dw	0
  1881                           
  1882                           	psect	mediumconst
  1883  00F7AA                     __pmediumconst:
  1884                           	opt callstack 0
  1885  00F7AA  00                 	db	0
  1886  00F7AB                     _BVSOC_TABLE:
  1887                           	opt callstack 0
  1888  00F7AB  59D8               	dw	23000
  1889  00F7AD  0000               	dw	0
  1890  00F7AF  0005               	dw	5
  1891  00F7B1  0000               	dw	0
  1892  00F7B3  5B68               	dw	23400
  1893  00F7B5  0000               	dw	0
  1894  00F7B7  000A               	dw	10
  1895  00F7B9  0000               	dw	0
  1896  00F7BB  5C30               	dw	23600
  1897  00F7BD  0000               	dw	0
  1898  00F7BF  0014               	dw	20
  1899  00F7C1  0000               	dw	0
  1900  00F7C3  5E38               	dw	24120
  1901  00F7C5  0000               	dw	0
  1902  00F7C7  0019               	dw	25
  1903  00F7C9  0000               	dw	0
  1904  00F7CB  5E88               	dw	24200
  1905  00F7CD  0000               	dw	0
  1906  00F7CF  001E               	dw	30
  1907  00F7D1  0000               	dw	0
  1908  00F7D3  5F78               	dw	24440
  1909  00F7D5  0000               	dw	0
  1910  00F7D7  0028               	dw	40
  1911  00F7D9  0000               	dw	0
  1912  00F7DB  5FDC               	dw	24540
  1913  00F7DD  0000               	dw	0
  1914  00F7DF  002D               	dw	45
  1915  00F7E1  0000               	dw	0
  1916  00F7E3  6018               	dw	24600
  1917  00F7E5  0000               	dw	0
  1918  00F7E7  0032               	dw	50
  1919  00F7E9  0000               	dw	0
  1920  00F7EB  6046               	dw	24646
  1921  00F7ED  0000               	dw	0
  1922  00F7EF  0035               	dw	53
  1923  00F7F1  0000               	dw	0
  1924  00F7F3  607C               	dw	24700
  1925  00F7F5  0000               	dw	0
  1926  00F7F7  0037               	dw	55
  1927  00F7F9  0000               	dw	0
  1928  00F7FB  60AE               	dw	24750
  1929  00F7FD  0000               	dw	0
  1930  00F7FF  0039               	dw	57
  1931  00F801  0000               	dw	0
  1932  00F803  60E0               	dw	24800
  1933  00F805  0000               	dw	0
  1934  00F807  003C               	dw	60
  1935  00F809  0000               	dw	0
  1936  00F80B  6112               	dw	24850
  1937  00F80D  0000               	dw	0
  1938  00F80F  003F               	dw	63
  1939  00F811  0000               	dw	0
  1940  00F813  615D               	dw	24925
  1941  00F815  0000               	dw	0
  1942  00F817  0043               	dw	67
  1943  00F819  0000               	dw	0
  1944  00F81B  61A8               	dw	25000
  1945  00F81D  0000               	dw	0
  1946  00F81F  0046               	dw	70
  1947  00F821  0000               	dw	0
  1948  00F823  61BC               	dw	25020
  1949  00F825  0000               	dw	0
  1950  00F827  0048               	dw	72
  1951  00F829  0000               	dw	0
  1952  00F82B  61D0               	dw	25040
  1953  00F82D  0000               	dw	0
  1954  00F82F  004B               	dw	75
  1955  00F831  0000               	dw	0
  1956  00F833  61DA               	dw	25050
  1957  00F835  0000               	dw	0
  1958  00F837  0050               	dw	80
  1959  00F839  0000               	dw	0
  1960  00F83B  61E4               	dw	25060
  1961  00F83D  0000               	dw	0
  1962  00F83F  0055               	dw	85
  1963  00F841  0000               	dw	0
  1964  00F843  61F8               	dw	25080
  1965  00F845  0000               	dw	0
  1966  00F847  005A               	dw	90
  1967  00F849  0000               	dw	0
  1968  00F84B  6208               	dw	25096
  1969  00F84D  0000               	dw	0
  1970  00F84F  005C               	dw	92
  1971  00F851  0000               	dw	0
  1972  00F853  6222               	dw	25122
  1973  00F855  0000               	dw	0
  1974  00F857  005D               	dw	93
  1975  00F859  0000               	dw	0
  1976  00F85B  6234               	dw	25140
  1977  00F85D  0000               	dw	0
  1978  00F85F  005F               	dw	95
  1979  00F861  0000               	dw	0
  1980  00F863  6248               	dw	25160
  1981  00F865  0000               	dw	0
  1982  00F867  0061               	dw	97
  1983  00F869  0000               	dw	0
  1984  00F86B  625C               	dw	25180
  1985  00F86D  0000               	dw	0
  1986  00F86F  0064               	dw	100
  1987  00F871  0000               	dw	0
  1988  00F873  6784               	dw	26500
  1989  00F875  0000               	dw	0
  1990  00F877  0062               	dw	98
  1991  00F879  0000               	dw	0
  1992  00F87B                     __end_of_BVSOC_TABLE:
  1993                           	opt callstack 0
  1994  00F87B                     ___month_to_secs@secs_through_month:
  1995                           	opt callstack 0
  1996  00F87B  0000               	dw	0
  1997  00F87D  0000               	dw	0
  1998  00F87F  DE80               	dw	56960
  1999  00F881  0028               	dw	40
  2000  00F883  C880               	dw	51328
  2001  00F885  004D               	dw	77
  2002  00F887  A700               	dw	42752
  2003  00F889  0076               	dw	118
  2004  00F88B  3400               	dw	13312
  2005  00F88D  009E               	dw	158
  2006  00F88F  1280               	dw	4736
  2007  00F891  00C7               	dw	199
  2008  00F893  9F80               	dw	40832
  2009  00F895  00EE               	dw	238
  2010  00F897  7E00               	dw	32256
  2011  00F899  0117               	dw	279
  2012  00F89B  5C80               	dw	23680
  2013  00F89D  0140               	dw	320
  2014  00F89F  E980               	dw	59776
  2015  00F8A1  0167               	dw	359
  2016  00F8A3  C800               	dw	51200
  2017  00F8A5  0190               	dw	400
  2018  00F8A7  5500               	dw	21760
  2019  00F8A9  01B8               	dw	440
  2020  00F8AB                     __end_of___month_to_secs@secs_through_month:
  2021                           	opt callstack 0
  2022  00F8AB                     ___secs_to_tm@days_in_month:
  2023                           	opt callstack 0
  2024  00F8AB  1F                 	db	31
  2025  00F8AC  1E                 	db	30
  2026  00F8AD  1F                 	db	31
  2027  00F8AE  1E                 	db	30
  2028  00F8AF  1F                 	db	31
  2029  00F8B0  1F                 	db	31
  2030  00F8B1  1E                 	db	30
  2031  00F8B2  1F                 	db	31
  2032  00F8B3  1E                 	db	30
  2033  00F8B4  1F                 	db	31
  2034  00F8B5  1F                 	db	31
  2035  00F8B6  1D                 	db	29
  2036  00F8B7                     __end_of___secs_to_tm@days_in_month:
  2037                           	opt callstack 0
  2038  00F8B7                     _T:
  2039                           	opt callstack 0
  2040  00F8B7  63                 	db	99
  2041  00F8B8  6F                 	db	111
  2042  00F8B9  6D                 	db	109
  2043  00F8BA  6D                 	db	109
  2044  00F8BB  61                 	db	97
  2045  00F8BC  6E                 	db	110
  2046  00F8BD  64                 	db	100
  2047  00F8BE  73                 	db	115
  2048  00F8BF  20                 	db	32
  2049  00F8C0  31                 	db	49
  2050  00F8C1  00                 	db	0
  2051  00F8C2  00                 	db	0
  2052  00F8C3  00                 	db	0
  2053  00F8C4  00                 	db	0
  2054  00F8C5  00                 	db	0
  2055  00F8C6  00                 	db	0
  2056  00F8C7  00                 	db	0
  2057  00F8C8  00                 	db	0
  2058  00F8C9  00                 	db	0
  2059  00F8CA  00                 	db	0
  2060  00F8CB  00                 	db	0
  2061  00F8CC  00                 	db	0
  2062  00F8CD  64                 	db	100
  2063  00F8CE  69                 	db	105
  2064  00F8CF  73                 	db	115
  2065  00F8D0  70                 	db	112
  2066  00F8D1  6C                 	db	108
  2067  00F8D2  61                 	db	97
  2068  00F8D3  79                 	db	121
  2069  00F8D4  73                 	db	115
  2070  00F8D5  20                 	db	32
  2071  00F8D6  31                 	db	49
  2072  00F8D7  00                 	db	0
  2073  00F8D8  00                 	db	0
  2074  00F8D9  00                 	db	0
  2075  00F8DA  00                 	db	0
  2076  00F8DB  00                 	db	0
  2077  00F8DC  00                 	db	0
  2078  00F8DD  00                 	db	0
  2079  00F8DE  00                 	db	0
  2080  00F8DF  00                 	db	0
  2081  00F8E0  00                 	db	0
  2082  00F8E1  00                 	db	0
  2083  00F8E2  00                 	db	0
  2084  00F8E3  63                 	db	99
  2085  00F8E4  6F                 	db	111
  2086  00F8E5  6D                 	db	109
  2087  00F8E6  6D                 	db	109
  2088  00F8E7  61                 	db	97
  2089  00F8E8  6E                 	db	110
  2090  00F8E9  64                 	db	100
  2091  00F8EA  73                 	db	115
  2092  00F8EB  20                 	db	32
  2093  00F8EC  32                 	db	50
  2094  00F8ED  00                 	db	0
  2095  00F8EE  00                 	db	0
  2096  00F8EF  00                 	db	0
  2097  00F8F0  00                 	db	0
  2098  00F8F1  00                 	db	0
  2099  00F8F2  00                 	db	0
  2100  00F8F3  00                 	db	0
  2101  00F8F4  00                 	db	0
  2102  00F8F5  00                 	db	0
  2103  00F8F6  00                 	db	0
  2104  00F8F7  00                 	db	0
  2105  00F8F8  00                 	db	0
  2106  00F8F9  64                 	db	100
  2107  00F8FA  69                 	db	105
  2108  00F8FB  73                 	db	115
  2109  00F8FC  70                 	db	112
  2110  00F8FD  6C                 	db	108
  2111  00F8FE  61                 	db	97
  2112  00F8FF  79                 	db	121
  2113  00F900  73                 	db	115
  2114  00F901  20                 	db	32
  2115  00F902  32                 	db	50
  2116  00F903  00                 	db	0
  2117  00F904  00                 	db	0
  2118  00F905  00                 	db	0
  2119  00F906  00                 	db	0
  2120  00F907  00                 	db	0
  2121  00F908  00                 	db	0
  2122  00F909  00                 	db	0
  2123  00F90A  00                 	db	0
  2124  00F90B  00                 	db	0
  2125  00F90C  00                 	db	0
  2126  00F90D  00                 	db	0
  2127  00F90E  00                 	db	0
  2128  00F90F  63                 	db	99
  2129  00F910  6F                 	db	111
  2130  00F911  6D                 	db	109
  2131  00F912  6D                 	db	109
  2132  00F913  61                 	db	97
  2133  00F914  6E                 	db	110
  2134  00F915  64                 	db	100
  2135  00F916  73                 	db	115
  2136  00F917  20                 	db	32
  2137  00F918  33                 	db	51
  2138  00F919  00                 	db	0
  2139  00F91A  00                 	db	0
  2140  00F91B  00                 	db	0
  2141  00F91C  00                 	db	0
  2142  00F91D  00                 	db	0
  2143  00F91E  00                 	db	0
  2144  00F91F  00                 	db	0
  2145  00F920  00                 	db	0
  2146  00F921  00                 	db	0
  2147  00F922  00                 	db	0
  2148  00F923  00                 	db	0
  2149  00F924  00                 	db	0
  2150  00F925  64                 	db	100
  2151  00F926  69                 	db	105
  2152  00F927  73                 	db	115
  2153  00F928  70                 	db	112
  2154  00F929  6C                 	db	108
  2155  00F92A  61                 	db	97
  2156  00F92B  79                 	db	121
  2157  00F92C  73                 	db	115
  2158  00F92D  20                 	db	32
  2159  00F92E  33                 	db	51
  2160  00F92F  00                 	db	0
  2161  00F930  00                 	db	0
  2162  00F931  00                 	db	0
  2163  00F932  00                 	db	0
  2164  00F933  00                 	db	0
  2165  00F934  00                 	db	0
  2166  00F935  00                 	db	0
  2167  00F936  00                 	db	0
  2168  00F937  00                 	db	0
  2169  00F938  00                 	db	0
  2170  00F939  00                 	db	0
  2171  00F93A  00                 	db	0
  2172  00F93B  63                 	db	99
  2173  00F93C  6F                 	db	111
  2174  00F93D  6D                 	db	109
  2175  00F93E  6D                 	db	109
  2176  00F93F  61                 	db	97
  2177  00F940  6E                 	db	110
  2178  00F941  64                 	db	100
  2179  00F942  73                 	db	115
  2180  00F943  20                 	db	32
  2181  00F944  34                 	db	52
  2182  00F945  00                 	db	0
  2183  00F946  00                 	db	0
  2184  00F947  00                 	db	0
  2185  00F948  00                 	db	0
  2186  00F949  00                 	db	0
  2187  00F94A  00                 	db	0
  2188  00F94B  00                 	db	0
  2189  00F94C  00                 	db	0
  2190  00F94D  00                 	db	0
  2191  00F94E  00                 	db	0
  2192  00F94F  00                 	db	0
  2193  00F950  00                 	db	0
  2194  00F951  64                 	db	100
  2195  00F952  69                 	db	105
  2196  00F953  73                 	db	115
  2197  00F954  70                 	db	112
  2198  00F955  6C                 	db	108
  2199  00F956  61                 	db	97
  2200  00F957  79                 	db	121
  2201  00F958  73                 	db	115
  2202  00F959  20                 	db	32
  2203  00F95A  34                 	db	52
  2204  00F95B  00                 	db	0
  2205  00F95C  00                 	db	0
  2206  00F95D  00                 	db	0
  2207  00F95E  00                 	db	0
  2208  00F95F  00                 	db	0
  2209  00F960  00                 	db	0
  2210  00F961  00                 	db	0
  2211  00F962  00                 	db	0
  2212  00F963  00                 	db	0
  2213  00F964  00                 	db	0
  2214  00F965  00                 	db	0
  2215  00F966  00                 	db	0
  2216  00F967                     __end_of_T:
  2217                           	opt callstack 0
  2218  00F967                     _spin:
  2219                           	opt callstack 0
  2220  00F967  7C                 	db	124
  2221  00F968  7C                 	db	124
  2222  00F969  2F                 	db	47
  2223  00F96A  2F                 	db	47
  2224  00F96B  2D                 	db	45
  2225  00F96C  2D                 	db	45
  2226  00F96D  00                 	db	0
  2227  00F96E  00                 	db	0
  2228  00F96F  00                 	db	0
  2229  00F970  00                 	db	0
  2230  00F971  00                 	db	0
  2231  00F972  00                 	db	0
  2232  00F973  00                 	db	0
  2233  00F974  00                 	db	0
  2234  00F975  00                 	db	0
  2235  00F976  00                 	db	0
  2236  00F977  00                 	db	0
  2237  00F978  00                 	db	0
  2238  00F979  00                 	db	0
  2239  00F97A  00                 	db	0
  2240  00F97B  7C                 	db	124
  2241  00F97C  7C                 	db	124
  2242  00F97D  2F                 	db	47
  2243  00F97E  2F                 	db	47
  2244  00F97F  2D                 	db	45
  2245  00F980  2D                 	db	45
  2246  00F981  5C                 	db	92
  2247  00F982  5C                 	db	92
  2248  00F983  00                 	db	0
  2249  00F984  00                 	db	0
  2250  00F985  00                 	db	0
  2251  00F986  00                 	db	0
  2252  00F987  00                 	db	0
  2253  00F988  00                 	db	0
  2254  00F989  00                 	db	0
  2255  00F98A  00                 	db	0
  2256  00F98B  00                 	db	0
  2257  00F98C  00                 	db	0
  2258  00F98D  00                 	db	0
  2259  00F98E  00                 	db	0
  2260  00F98F  4F                 	db	79
  2261  00F990  4F                 	db	79
  2262  00F991  4F                 	db	79
  2263  00F992  4F                 	db	79
  2264  00F993  4F                 	db	79
  2265  00F994  4F                 	db	79
  2266  00F995  2D                 	db	45
  2267  00F996  2D                 	db	45
  2268  00F997  5F                 	db	95
  2269  00F998  5F                 	db	95
  2270  00F999  2D                 	db	45
  2271  00F99A  00                 	db	0
  2272  00F99B  00                 	db	0
  2273  00F99C  00                 	db	0
  2274  00F99D  00                 	db	0
  2275  00F99E  00                 	db	0
  2276  00F99F  00                 	db	0
  2277  00F9A0  00                 	db	0
  2278  00F9A1  00                 	db	0
  2279  00F9A2  00                 	db	0
  2280  00F9A3  76                 	db	118
  2281  00F9A4  76                 	db	118
  2282  00F9A5  3C                 	db	60
  2283  00F9A6  3C                 	db	60
  2284  00F9A7  5E                 	db	94
  2285  00F9A8  5E                 	db	94
  2286  00F9A9  3E                 	db	62
  2287  00F9AA  3E                 	db	62
  2288  00F9AB  00                 	db	0
  2289  00F9AC  00                 	db	0
  2290  00F9AD  00                 	db	0
  2291  00F9AE  00                 	db	0
  2292  00F9AF  00                 	db	0
  2293  00F9B0  00                 	db	0
  2294  00F9B1  00                 	db	0
  2295  00F9B2  00                 	db	0
  2296  00F9B3  00                 	db	0
  2297  00F9B4  00                 	db	0
  2298  00F9B5  00                 	db	0
  2299  00F9B6  00                 	db	0
  2300  00F9B7  2E                 	db	46
  2301  00F9B8  2E                 	db	46
  2302  00F9B9  2A                 	db	42
  2303  00F9BA  2A                 	db	42
  2304  00F9BB  78                 	db	120
  2305  00F9BC  23                 	db	35
  2306  00F9BD  78                 	db	120
  2307  00F9BE  23                 	db	35
  2308  00F9BF  58                 	db	88
  2309  00F9C0  58                 	db	88
  2310  00F9C1  7C                 	db	124
  2311  00F9C2  7C                 	db	124
  2312  00F9C3  2D                 	db	45
  2313  00F9C4  2D                 	db	45
  2314  00F9C5  00                 	db	0
  2315  00F9C6  00                 	db	0
  2316  00F9C7  00                 	db	0
  2317  00F9C8  00                 	db	0
  2318  00F9C9  00                 	db	0
  2319  00F9CA  00                 	db	0
  2320  00F9CB  2E                 	db	46
  2321  00F9CC  2E                 	db	46
  2322  00F9CD  6F                 	db	111
  2323  00F9CE  6F                 	db	111
  2324  00F9CF  4F                 	db	79
  2325  00F9D0  4F                 	db	79
  2326  00F9D1  6F                 	db	111
  2327  00F9D2  6F                 	db	111
  2328  00F9D3  00                 	db	0
  2329  00F9D4  00                 	db	0
  2330  00F9D5  00                 	db	0
  2331  00F9D6  00                 	db	0
  2332  00F9D7  00                 	db	0
  2333  00F9D8  00                 	db	0
  2334  00F9D9  00                 	db	0
  2335  00F9DA  00                 	db	0
  2336  00F9DB  00                 	db	0
  2337  00F9DC  00                 	db	0
  2338  00F9DD  00                 	db	0
  2339  00F9DE  00                 	db	0
  2340  00F9DF                     __end_of_spin:
  2341                           	opt callstack 0
  2342  00F9DF  0000               	dw	0
  2343  00F9E1  3F80               	dw	16256
  2344  00F9E3  0000               	dw	0
  2345  00F9E5  3FC0               	dw	16320
  2346  00F9E7                     __end_of_bp:
  2347                           	opt callstack 0
  2348  00F9E7                     ___gmt:
  2349                           	opt callstack 0
  2350  00F9E7  47                 	db	71
  2351  00F9E8  4D                 	db	77
  2352  00F9E9  54                 	db	84
  2353  00F9EA  00                 	db	0
  2354  00F9EB                     __end_of___gmt:
  2355                           	opt callstack 0
  2356  00F9EB  AA00               	dw	43520
  2357  00F9ED  3FB8               	dw	16312
  2358  00F9EF                     __end_of_ivln2_h:
  2359                           	opt callstack 0
  2360  00F9EF  23C6               	dw	9158
  2361  00F9F1  B8F6               	dw	47350
  2362  00F9F3                     __end_of_cp_l:
  2363                           	opt callstack 0
  2364  00F9F3  4000               	dw	16384
  2365  00F9F5  3F76               	dw	16246
  2366  00F9F7                     __end_of_cp_h:
  2367                           	opt callstack 0
  2368  0000                     _IVTADL	set	14493
  2369  0000                     _IVTADH	set	14494
  2370  0000                     _IVTADU	set	14495
  2371  0000                     _CRCDATH	set	14689
  2372  0000                     _CRCDATL	set	14688
  2373  0000                     _CRCCON0bits	set	14696
  2374  0000                     _CRCCON1bits	set	14697
  2375  0000                     _CRCXORL	set	14694
  2376  0000                     _CRCXORH	set	14695
  2377  0000                     _SCANTRIG	set	14717
  2378  0000                     _SCANHADRL	set	14713
  2379  0000                     _SCANHADRH	set	14714
  2380  0000                     _SCANHADRU	set	14715
  2381  0000                     _SCANLADRL	set	14710
  2382  0000                     _SCANLADRH	set	14711
  2383  0000                     _SCANLADRU	set	14712
  2384  0000                     _SCANCON0	set	14716
  2385  0000                     _CRCACCH	set	14691
  2386  0000                     _CRCACCL	set	14690
  2387  0000                     _CRCCON1	set	14697
  2388  0000                     _CRCCON0	set	14696
  2389  0000                     _PIR6bits	set	14758
  2390  0000                     _PIR4bits	set	14756
  2391  0000                     _PIE8bits	set	14744
  2392  0000                     _PIR8bits	set	14760
  2393  0000                     _PIR0bits	set	14752
  2394  0000                     _NVMCON2	set	14822
  2395  0000                     _NVMDAT	set	14819
  2396  0000                     _NVMADRL	set	14816
  2397  0000                     _NVMADRH	set	14817
  2398  0000                     _NVMCON1bits	set	14821
  2399  0000                     _SCANPR	set	14839
  2400  0000                     _DMA2PR	set	14836
  2401  0000                     _DMA1PR	set	14835
  2402  0000                     _MAINPR	set	14834
  2403  0000                     _ISRPR	set	14833
  2404  0000                     _PIE2bits	set	14738
  2405  0000                     _PIR2bits	set	14754
  2406  0000                     _PIE9bits	set	14745
  2407  0000                     _PIR9bits	set	14761
  2408  0000                     _PIE6bits	set	14742
  2409  0000                     _PIE3bits	set	14739
  2410  0000                     _PMD7	set	14791
  2411  0000                     _PMD6	set	14790
  2412  0000                     _PMD5	set	14789
  2413  0000                     _PMD4	set	14788
  2414  0000                     _PMD3	set	14787
  2415  0000                     _PMD2	set	14786
  2416  0000                     _PMD1	set	14785
  2417  0000                     _PMD0	set	14784
  2418  0000                     _OSCTUNE	set	14814
  2419  0000                     _OSCFRQ	set	14815
  2420  0000                     _OSCEN	set	14813
  2421  0000                     _OSCCON3	set	14811
  2422  0000                     _OSCCON1	set	14809
  2423  0000                     _IPR8bits	set	14728
  2424  0000                     _IPR9bits	set	14729
  2425  0000                     _IPR5bits	set	14725
  2426  0000                     _IPR1bits	set	14721
  2427  0000                     _IPR3bits	set	14723
  2428  0000                     _IPR6bits	set	14726
  2429  0000                     _IPR2bits	set	14722
  2430  0000                     _PIE5bits	set	14741
  2431  0000                     _PIE1bits	set	14737
  2432  0000                     _PIR5bits	set	14757
  2433  0000                     _PIR1bits	set	14753
  2434  0000                     _PLLR	set	118496
  2435  0000                     _SPI1SDIPPS	set	15071
  2436  0000                     _U1RXPPS	set	15077
  2437  0000                     _RC6PPS	set	14870
  2438  0000                     _RC5PPS	set	14869
  2439  0000                     _INT1PPS	set	15041
  2440  0000                     _RD1PPS	set	14873
  2441  0000                     _INT0PPS	set	15040
  2442  0000                     _RC3PPS	set	14867
  2443  0000                     _RB6PPS	set	14862
  2444  0000                     _SPI1SCKPPS	set	15070
  2445  0000                     _U2RXPPS	set	15080
  2446  0000                     _SLRCONF	set	14995
  2447  0000                     _SLRCONE	set	14979
  2448  0000                     _SLRCOND	set	14963
  2449  0000                     _SLRCONC	set	14947
  2450  0000                     _SLRCONB	set	14931
  2451  0000                     _SLRCONA	set	14915
  2452  0000                     _ODCOND	set	14962
  2453  0000                     _ODCONC	set	14946
  2454  0000                     _ODCONB	set	14930
  2455  0000                     _ODCONA	set	14914
  2456  0000                     _ODCONF	set	14994
  2457  0000                     _ODCONE	set	14978
  2458  0000                     _WPUC	set	14945
  2459  0000                     _WPUA	set	14913
  2460  0000                     _WPUB	set	14929
  2461  0000                     _WPUE	set	14977
  2462  0000                     _WPUF	set	14993
  2463  0000                     _WPUD	set	14961
  2464  0000                     _ANSELA	set	14912
  2465  0000                     _ANSELF	set	14992
  2466  0000                     _ANSELE	set	14976
  2467  0000                     _ANSELB	set	14928
  2468  0000                     _ANSELC	set	14944
  2469  0000                     _ANSELD	set	14960
  2470  0000                     _DMA2SSA	set	15321
  2471  0000                     _DMA1SSA	set	15353
  2472  0000                     _DMA2DSZ	set	15310
  2473  0000                     _DMA2SSZ	set	15319
  2474  0000                     _DMA2DSA	set	15312
  2475  0000                     _DMA1DSZ	set	15342
  2476  0000                     _DMA1SSZ	set	15351
  2477  0000                     _DMA1DSA	set	15344
  2478  0000                     _DMA2CON0bits	set	15324
  2479  0000                     _DMA2CON1bits	set	15325
  2480  0000                     _DMA1CON0bits	set	15356
  2481  0000                     _DMA1CON1bits	set	15357
  2482  0000                     _DMA2CON0	set	15324
  2483  0000                     _DMA2AIRQ	set	15326
  2484  0000                     _DMA2SIRQ	set	15327
  2485  0000                     _DMA2CON1	set	15325
  2486  0000                     _DMA1CON0	set	15356
  2487  0000                     _DMA1AIRQ	set	15358
  2488  0000                     _DMA1SIRQ	set	15359
  2489  0000                     _DMA1CON1	set	15357
  2490  0000                     _CLKRCON	set	15589
  2491  0000                     _CLKRCLK	set	15590
  2492  0000                     _SPI1CON1bits	set	15637
  2493  0000                     _SPI1STATUSbits	set	15639
  2494  0000                     _SPI1INTFbits	set	15642
  2495  0000                     _SPI1CON0bits	set	15636
  2496  0000                     _SPI1RXB	set	15632
  2497  0000                     _SPI1TXB	set	15633
  2498  0000                     _SPI1TCNTL	set	15634
  2499  0000                     _SPI1CON0	set	15636
  2500  0000                     _SPI1CLK	set	15644
  2501  0000                     _SPI1BAUD	set	15641
  2502  0000                     _SPI1CON2	set	15638
  2503  0000                     _SPI1CON1	set	15637
  2504  0000                     _U2RXB	set	15824
  2505  0000                     _U2TXB	set	15826
  2506  0000                     _U2ERRIE	set	15842
  2507  0000                     _U2ERRIR	set	15841
  2508  0000                     _U2UIR	set	15840
  2509  0000                     _U2FIFO	set	15839
  2510  0000                     _U2BRGH	set	15838
  2511  0000                     _U2BRGL	set	15837
  2512  0000                     _U2CON2	set	15836
  2513  0000                     _U2CON1	set	15835
  2514  0000                     _U2CON0	set	15834
  2515  0000                     _U2P3L	set	15832
  2516  0000                     _U2P2L	set	15830
  2517  0000                     _U2P1L	set	15828
  2518  0000                     _U1RXB	set	15848
  2519  0000                     _U1ERRIE	set	15866
  2520  0000                     _U1ERRIR	set	15865
  2521  0000                     _U1UIR	set	15864
  2522  0000                     _U1FIFO	set	15863
  2523  0000                     _U1BRGH	set	15862
  2524  0000                     _U1BRGL	set	15861
  2525  0000                     _U1CON2	set	15860
  2526  0000                     _U1CON1	set	15859
  2527  0000                     _U1CON0	set	15858
  2528  0000                     _U1P3H	set	15857
  2529  0000                     _U1P3L	set	15856
  2530  0000                     _U1P2H	set	15855
  2531  0000                     _U1P2L	set	15854
  2532  0000                     _U1P1H	set	15853
  2533  0000                     _U1P1L	set	15852
  2534  0000                     _FVRCON	set	16065
  2535  0000                     _ADFLTRL	set	16102
  2536  0000                     _ADFLTRH	set	16103
  2537  0000                     _ADCON0bits	set	16120
  2538  0000                     _ADCON0	set	16120
  2539  0000                     _ADCLK	set	16127
  2540  0000                     _ADACT	set	16126
  2541  0000                     _ADREF	set	16125
  2542  0000                     _ADSTAT	set	16124
  2543  0000                     _ADCON3	set	16123
  2544  0000                     _ADCON2	set	16122
  2545  0000                     _ADCON1	set	16121
  2546  0000                     _ADPREH	set	16119
  2547  0000                     _ADPREL	set	16118
  2548  0000                     _ADCAP	set	16117
  2549  0000                     _ADACQH	set	16116
  2550  0000                     _ADACQL	set	16115
  2551  0000                     _ADPCH	set	16113
  2552  0000                     _ADRPT	set	16108
  2553  0000                     _ADACCU	set	16106
  2554  0000                     _ADSTPTH	set	16101
  2555  0000                     _ADSTPTL	set	16100
  2556  0000                     _ADUTHH	set	16097
  2557  0000                     _ADUTHL	set	16096
  2558  0000                     _ADLTHH	set	16095
  2559  0000                     _ADLTHL	set	16094
  2560  0000                     _CCPTMRS1bits	set	16223
  2561  0000                     _PORTDbits	set	16333
  2562  0000                     _PORTFbits	set	16335
  2563  0000                     _LATFbits	set	16319
  2564  0000                     _LATCbits	set	16316
  2565  0000                     _LATDbits	set	16317
  2566  0000                     _PORTBbits	set	16331
  2567  0000                     _T3CONbits	set	16294
  2568  0000                     _T3CON	set	16294
  2569  0000                     _TMR3L	set	16292
  2570  0000                     _TMR3H	set	16293
  2571  0000                     _T3CLK	set	16297
  2572  0000                     _T3GATE	set	16296
  2573  0000                     _T3GCON	set	16295
  2574  0000                     _T2CON	set	16300
  2575  0000                     _T2TMR	set	16298
  2576  0000                     _T2PR	set	16299
  2577  0000                     _T2RST	set	16303
  2578  0000                     _T2HLT	set	16301
  2579  0000                     _T2CLKCON	set	16302
  2580  0000                     _PWM8DCL	set	16224
  2581  0000                     _PWM8DCH	set	16225
  2582  0000                     _PWM8CON	set	16226
  2583  0000                     _LATEbits	set	16318
  2584  0000                     _T5CONbits	set	16282
  2585  0000                     _T5CON	set	16282
  2586  0000                     _TMR5L	set	16280
  2587  0000                     _TMR5H	set	16281
  2588  0000                     _T5CLK	set	16285
  2589  0000                     _T5GATE	set	16284
  2590  0000                     _T5GCON	set	16283
  2591  0000                     _T6CON	set	16276
  2592  0000                     _T6TMR	set	16274
  2593  0000                     _T6PR	set	16275
  2594  0000                     _T6RST	set	16279
  2595  0000                     _T6HLT	set	16277
  2596  0000                     _T6CLKCON	set	16278
  2597  0000                     _TRISD	set	16325
  2598  0000                     _TRISC	set	16324
  2599  0000                     _TRISB	set	16323
  2600  0000                     _TRISA	set	16322
  2601  0000                     _TRISF	set	16327
  2602  0000                     _TRISE	set	16326
  2603  0000                     _LATC	set	16316
  2604  0000                     _LATB	set	16315
  2605  0000                     _LATF	set	16319
  2606  0000                     _LATA	set	16314
  2607  0000                     _LATD	set	16317
  2608  0000                     _LATE	set	16318
  2609  0000                     _IVTLOCKbits	set	16340
  2610  0000                     _IVTLOCK	set	16340
  2611  0000                     _INTCON0bits	set	16338
  2612  0000                     _GIE	set	130711
  2613  00F9F7                     STR_95:
  2614                           
  2615                           ; BSR set to: 57
  2616  00F9F7  20                 	db	32
  2617  00F9F8  25                 	db	37
  2618  00F9F9  63                 	db	99	;'c'
  2619  00F9FA  20                 	db	32
  2620  00F9FB  2C                 	db	44
  2621  00F9FC  25                 	db	37
  2622  00F9FD  6C                 	db	108	;'l'
  2623  00F9FE  75                 	db	117	;'u'
  2624  00F9FF  2C                 	db	44
  2625  00FA00  25                 	db	37
  2626  00FA01  34                 	db	52	;'4'
  2627  00FA02  2E                 	db	46
  2628  00FA03  34                 	db	52	;'4'
  2629  00FA04  66                 	db	102	;'f'
  2630  00FA05  2C                 	db	44
  2631  00FA06  25                 	db	37
  2632  00FA07  34                 	db	52	;'4'
  2633  00FA08  2E                 	db	46
  2634  00FA09  34                 	db	52	;'4'
  2635  00FA0A  66                 	db	102	;'f'
  2636  00FA0B  2C                 	db	44
  2637  00FA0C  25                 	db	37
  2638  00FA0D  34                 	db	52	;'4'
  2639  00FA0E  2E                 	db	46
  2640  00FA0F  34                 	db	52	;'4'
  2641  00FA10  66                 	db	102	;'f'
  2642  00FA11  2C                 	db	44
  2643  00FA12  25                 	db	37
  2644  00FA13  34                 	db	52	;'4'
  2645  00FA14  2E                 	db	46
  2646  00FA15  34                 	db	52	;'4'
  2647  00FA16  66                 	db	102	;'f'
  2648  00FA17  2C                 	db	44
  2649  00FA18  25                 	db	37
  2650  00FA19  34                 	db	52	;'4'
  2651  00FA1A  2E                 	db	46
  2652  00FA1B  34                 	db	52	;'4'
  2653  00FA1C  66                 	db	102	;'f'
  2654  00FA1D  2C                 	db	44
  2655  00FA1E  25                 	db	37
  2656  00FA1F  34                 	db	52	;'4'
  2657  00FA20  2E                 	db	46
  2658  00FA21  33                 	db	51	;'3'
  2659  00FA22  66                 	db	102	;'f'
  2660  00FA23  2C                 	db	44
  2661  00FA24  25                 	db	37
  2662  00FA25  34                 	db	52	;'4'
  2663  00FA26  2E                 	db	46
  2664  00FA27  33                 	db	51	;'3'
  2665  00FA28  66                 	db	102	;'f'
  2666  00FA29  2C                 	db	44
  2667  00FA2A  25                 	db	37
  2668  00FA2B  34                 	db	52	;'4'
  2669  00FA2C  2E                 	db	46
  2670  00FA2D  33                 	db	51	;'3'
  2671  00FA2E  66                 	db	102	;'f'
  2672  00FA2F  2C                 	db	44
  2673  00FA30  25                 	db	37
  2674  00FA31  34                 	db	52	;'4'
  2675  00FA32  2E                 	db	46
  2676  00FA33  33                 	db	51	;'3'
  2677  00FA34  66                 	db	102	;'f'
  2678  00FA35  2C                 	db	44
  2679  00FA36  25                 	db	37
  2680  00FA37  34                 	db	52	;'4'
  2681  00FA38  2E                 	db	46
  2682  00FA39  33                 	db	51	;'3'
  2683  00FA3A  66                 	db	102	;'f'
  2684  00FA3B  2C                 	db	44
  2685  00FA3C  25                 	db	37
  2686  00FA3D  34                 	db	52	;'4'
  2687  00FA3E  2E                 	db	46
  2688  00FA3F  33                 	db	51	;'3'
  2689  00FA40  66                 	db	102	;'f'
  2690  00FA41  2C                 	db	44
  2691  00FA42  25                 	db	37
  2692  00FA43  64                 	db	100	;'d'
  2693  00FA44  2C                 	db	44
  2694  00FA45  25                 	db	37
  2695  00FA46  64                 	db	100	;'d'
  2696  00FA47  2C                 	db	44
  2697  00FA48  25                 	db	37
  2698  00FA49  32                 	db	50	;'2'
  2699  00FA4A  2E                 	db	46
  2700  00FA4B  36                 	db	54	;'6'
  2701  00FA4C  66                 	db	102	;'f'
  2702  00FA4D  2C                 	db	44
  2703  00FA4E  25                 	db	37
  2704  00FA4F  34                 	db	52	;'4'
  2705  00FA50  2E                 	db	46
  2706  00FA51  33                 	db	51	;'3'
  2707  00FA52  66                 	db	102	;'f'
  2708  00FA53  2C                 	db	44
  2709  00FA54  25                 	db	37
  2710  00FA55  64                 	db	100	;'d'
  2711  00FA56  2C                 	db	44
  2712  00FA57  25                 	db	37
  2713  00FA58  64                 	db	100	;'d'
  2714  00FA59  2C                 	db	44
  2715  00FA5A  25                 	db	37
  2716  00FA5B  6C                 	db	108	;'l'
  2717  00FA5C  75                 	db	117	;'u'
  2718  00FA5D  2C                 	db	44
  2719  00FA5E  25                 	db	37
  2720  00FA5F  6C                 	db	108	;'l'
  2721  00FA60  75                 	db	117	;'u'
  2722  00FA61  2C                 	db	44
  2723  00FA62  25                 	db	37
  2724  00FA63  34                 	db	52	;'4'
  2725  00FA64  2E                 	db	46
  2726  00FA65  33                 	db	51	;'3'
  2727  00FA66  66                 	db	102	;'f'
  2728  00FA67  2C                 	db	44
  2729  00FA68  25                 	db	37
  2730  00FA69  34                 	db	52	;'4'
  2731  00FA6A  2E                 	db	46
  2732  00FA6B  33                 	db	51	;'3'
  2733  00FA6C  66                 	db	102	;'f'
  2734  00FA6D  2C                 	db	44
  2735  00FA6E  25                 	db	37
  2736  00FA6F  34                 	db	52	;'4'
  2737  00FA70  2E                 	db	46
  2738  00FA71  33                 	db	51	;'3'
  2739  00FA72  66                 	db	102	;'f'
  2740  00FA73  0D                 	db	13
  2741  00FA74  0A                 	db	10
  2742  00FA75  00                 	db	0
  2743  00FA76                     STR_133:
  2744                           
  2745                           ; BSR set to: 57
  2746  00FA76  4A                 	db	74	;'J'
  2747  00FA77  61                 	db	97	;'a'
  2748  00FA78  6E                 	db	110	;'n'
  2749  00FA79  46                 	db	70	;'F'
  2750  00FA7A  65                 	db	101	;'e'
  2751  00FA7B  62                 	db	98	;'b'
  2752  00FA7C  4D                 	db	77	;'M'
  2753  00FA7D  61                 	db	97	;'a'
  2754  00FA7E  72                 	db	114	;'r'
  2755  00FA7F  41                 	db	65	;'A'
  2756  00FA80  70                 	db	112	;'p'
  2757  00FA81  72                 	db	114	;'r'
  2758  00FA82  4D                 	db	77	;'M'
  2759  00FA83  61                 	db	97	;'a'
  2760  00FA84  79                 	db	121	;'y'
  2761  00FA85  4A                 	db	74	;'J'
  2762  00FA86  75                 	db	117	;'u'
  2763  00FA87  6E                 	db	110	;'n'
  2764  00FA88  4A                 	db	74	;'J'
  2765  00FA89  75                 	db	117	;'u'
  2766  00FA8A  6C                 	db	108	;'l'
  2767  00FA8B  41                 	db	65	;'A'
  2768  00FA8C  75                 	db	117	;'u'
  2769  00FA8D  67                 	db	103	;'g'
  2770  00FA8E  53                 	db	83	;'S'
  2771  00FA8F  65                 	db	101	;'e'
  2772  00FA90  70                 	db	112	;'p'
  2773  00FA91  4F                 	db	79	;'O'
  2774  00FA92  63                 	db	99	;'c'
  2775  00FA93  74                 	db	116	;'t'
  2776  00FA94  4E                 	db	78	;'N'
  2777  00FA95  6F                 	db	111	;'o'
  2778  00FA96  76                 	db	118	;'v'
  2779  00FA97  44                 	db	68	;'D'
  2780  00FA98  65                 	db	101	;'e'
  2781  00FA99  63                 	db	99	;'c'
  2782  00FA9A  00                 	db	0
  2783  00FA9B                     STR_50:
  2784                           
  2785                           ; BSR set to: 57
  2786  00FA9B  53                 	db	83	;'S'
  2787  00FA9C  25                 	db	37
  2788  00FA9D  63                 	db	99	;'c'
  2789  00FA9E  43                 	db	67	;'C'
  2790  00FA9F  20                 	db	32
  2791  00FAA0  25                 	db	37
  2792  00FAA1  64                 	db	100	;'d'
  2793  00FAA2  20                 	db	32
  2794  00FAA3  52                 	db	82	;'R'
  2795  00FAA4  55                 	db	85	;'U'
  2796  00FAA5  4E                 	db	78	;'N'
  2797  00FAA6  20                 	db	32
  2798  00FAA7  25                 	db	37
  2799  00FAA8  64                 	db	100	;'d'
  2800  00FAA9  20                 	db	32
  2801  00FAAA  56                 	db	86	;'V'
  2802  00FAAB  25                 	db	37
  2803  00FAAC  32                 	db	50	;'2'
  2804  00FAAD  2E                 	db	46
  2805  00FAAE  32                 	db	50	;'2'
  2806  00FAAF  66                 	db	102	;'f'
  2807  00FAB0  20                 	db	32
  2808  00FAB1  20                 	db	32
  2809  00FAB2  20                 	db	32
  2810  00FAB3  20                 	db	32
  2811  00FAB4  20                 	db	32
  2812  00FAB5  20                 	db	32
  2813  00FAB6  20                 	db	32
  2814  00FAB7  20                 	db	32
  2815  00FAB8  00                 	db	0
  2816  00FAB9                     STR_70:
  2817                           
  2818                           ; BSR set to: 57
  2819  00FAB9  25                 	db	37
  2820  00FABA  64                 	db	100	;'d'
  2821  00FABB  20                 	db	32
  2822  00FABC  25                 	db	37
  2823  00FABD  64                 	db	100	;'d'
  2824  00FABE  20                 	db	32
  2825  00FABF  25                 	db	37
  2826  00FAC0  64                 	db	100	;'d'
  2827  00FAC1  20                 	db	32
  2828  00FAC2  25                 	db	37
  2829  00FAC3  64                 	db	100	;'d'
  2830  00FAC4  20                 	db	32
  2831  00FAC5  20                 	db	32
  2832  00FAC6  20                 	db	32
  2833  00FAC7  20                 	db	32
  2834  00FAC8  20                 	db	32
  2835  00FAC9  20                 	db	32
  2836  00FACA  20                 	db	32
  2837  00FACB  20                 	db	32
  2838  00FACC  20                 	db	32
  2839  00FACD  20                 	db	32
  2840  00FACE  20                 	db	32
  2841  00FACF  20                 	db	32
  2842  00FAD0  20                 	db	32
  2843  00FAD1  20                 	db	32
  2844  00FAD2  20                 	db	32
  2845  00FAD3  20                 	db	32
  2846  00FAD4  00                 	db	0
  2847  00FAD5                     STR_26:
  2848                           
  2849                           ; BSR set to: 57
  2850  00FAD5  52                 	db	82	;'R'
  2851  00FAD6  31                 	db	49	;'1'
  2852  00FAD7  20                 	db	32
  2853  00FAD8  25                 	db	37
  2854  00FAD9  32                 	db	50	;'2'
  2855  00FADA  2E                 	db	46
  2856  00FADB  33                 	db	51	;'3'
  2857  00FADC  66                 	db	102	;'f'
  2858  00FADD  20                 	db	32
  2859  00FADE  25                 	db	37
  2860  00FADF  33                 	db	51	;'3'
  2861  00FAE0  2E                 	db	46
  2862  00FAE1  34                 	db	52	;'4'
  2863  00FAE2  66                 	db	102	;'f'
  2864  00FAE3  20                 	db	32
  2865  00FAE4  20                 	db	32
  2866  00FAE5  20                 	db	32
  2867  00FAE6  20                 	db	32
  2868  00FAE7  20                 	db	32
  2869  00FAE8  20                 	db	32
  2870  00FAE9  20                 	db	32
  2871  00FAEA  20                 	db	32
  2872  00FAEB  20                 	db	32
  2873  00FAEC  20                 	db	32
  2874  00FAED  20                 	db	32
  2875  00FAEE  20                 	db	32
  2876  00FAEF  00                 	db	0
  2877  00FAF0                     STR_27:
  2878                           
  2879                           ; BSR set to: 57
  2880  00FAF0  52                 	db	82	;'R'
  2881  00FAF1  32                 	db	50	;'2'
  2882  00FAF2  20                 	db	32
  2883  00FAF3  25                 	db	37
  2884  00FAF4  32                 	db	50	;'2'
  2885  00FAF5  2E                 	db	46
  2886  00FAF6  33                 	db	51	;'3'
  2887  00FAF7  66                 	db	102	;'f'
  2888  00FAF8  20                 	db	32
  2889  00FAF9  25                 	db	37
  2890  00FAFA  33                 	db	51	;'3'
  2891  00FAFB  2E                 	db	46
  2892  00FAFC  34                 	db	52	;'4'
  2893  00FAFD  66                 	db	102	;'f'
  2894  00FAFE  20                 	db	32
  2895  00FAFF  20                 	db	32
  2896  00FB00  20                 	db	32
  2897  00FB01  20                 	db	32
  2898  00FB02  20                 	db	32
  2899  00FB03  20                 	db	32
  2900  00FB04  20                 	db	32
  2901  00FB05  20                 	db	32
  2902  00FB06  20                 	db	32
  2903  00FB07  20                 	db	32
  2904  00FB08  20                 	db	32
  2905  00FB09  20                 	db	32
  2906  00FB0A  00                 	db	0
  2907  00FB0B                     
  2908                           ; BSR set to: 57
  2909  00FB0B  20                 	db	32
  2910  00FB0C  4D                 	db	77	;'M'
  2911  00FB0D  65                 	db	101	;'e'
  2912  00FB0E  73                 	db	115	;'s'
  2913  00FB0F  67                 	db	103	;'g'
  2914  00FB10  20                 	db	32
  2915  00FB11  25                 	db	37
  2916  00FB12  64                 	db	100	;'d'
  2917  00FB13  20                 	db	32
  2918  00FB14  53                 	db	83	;'S'
  2919  00FB15  74                 	db	116	;'t'
  2920  00FB16  61                 	db	97	;'a'
  2921  00FB17  63                 	db	99	;'c'
  2922  00FB18  6B                 	db	107	;'k'
  2923  00FB19  20                 	db	32
  2924  00FB1A  25                 	db	37
  2925  00FB1B  64                 	db	100	;'d'
  2926  00FB1C  20                 	db	32
  2927  00FB1D  20                 	db	32
  2928  00FB1E  20                 	db	32
  2929  00FB1F  20                 	db	32
  2930  00FB20  20                 	db	32
  2931  00FB21  20                 	db	32
  2932  00FB22  20                 	db	32
  2933  00FB23  20                 	db	32
  2934  00FB24  00                 	db	0
  2935  00FB25                     STR_17:
  2936                           
  2937                           ; BSR set to: 57
  2938  00FB25  53                 	db	83	;'S'
  2939  00FB26  20                 	db	32
  2940  00FB27  53                 	db	83	;'S'
  2941  00FB28  25                 	db	37
  2942  00FB29  63                 	db	99	;'c'
  2943  00FB2A  43                 	db	67	;'C'
  2944  00FB2B  20                 	db	32
  2945  00FB2C  25                 	db	37
  2946  00FB2D  64                 	db	100	;'d'
  2947  00FB2E  20                 	db	32
  2948  00FB2F  25                 	db	37
  2949  00FB30  32                 	db	50	;'2'
  2950  00FB31  2E                 	db	46
  2951  00FB32  34                 	db	52	;'4'
  2952  00FB33  66                 	db	102	;'f'
  2953  00FB34  20                 	db	32
  2954  00FB35  20                 	db	32
  2955  00FB36  20                 	db	32
  2956  00FB37  20                 	db	32
  2957  00FB38  20                 	db	32
  2958  00FB39  20                 	db	32
  2959  00FB3A  20                 	db	32
  2960  00FB3B  20                 	db	32
  2961  00FB3C  20                 	db	32
  2962  00FB3D  20                 	db	32
  2963  00FB3E  00                 	db	0
  2964  00FB3F                     STR_51:
  2965                           
  2966                           ; BSR set to: 57
  2967  00FB3F  45                 	db	69	;'E'
  2968  00FB40  53                 	db	83	;'S'
  2969  00FB41  52                 	db	82	;'R'
  2970  00FB42  20                 	db	32
  2971  00FB43  20                 	db	32
  2972  00FB44  25                 	db	37
  2973  00FB45  32                 	db	50	;'2'
  2974  00FB46  2E                 	db	46
  2975  00FB47  36                 	db	54	;'6'
  2976  00FB48  66                 	db	102	;'f'
  2977  00FB49  20                 	db	32
  2978  00FB4A  20                 	db	32
  2979  00FB4B  20                 	db	32
  2980  00FB4C  20                 	db	32
  2981  00FB4D  20                 	db	32
  2982  00FB4E  20                 	db	32
  2983  00FB4F  20                 	db	32
  2984  00FB50  20                 	db	32
  2985  00FB51  20                 	db	32
  2986  00FB52  20                 	db	32
  2987  00FB53  20                 	db	32
  2988  00FB54  20                 	db	32
  2989  00FB55  20                 	db	32
  2990  00FB56  00                 	db	0
  2991  00FB57                     STR_48:
  2992                           
  2993                           ; BSR set to: 57
  2994  00FB57  42                 	db	66	;'B'
  2995  00FB58  41                 	db	65	;'A'
  2996  00FB59  54                 	db	84	;'T'
  2997  00FB5A  54                 	db	84	;'T'
  2998  00FB5B  20                 	db	32
  2999  00FB5C  50                 	db	80	;'P'
  3000  00FB5D  57                 	db	87	;'W'
  3001  00FB5E  52                 	db	82	;'R'
  3002  00FB5F  20                 	db	32
  3003  00FB60  25                 	db	37
  3004  00FB61  33                 	db	51	;'3'
  3005  00FB62  2E                 	db	46
  3006  00FB63  32                 	db	50	;'2'
  3007  00FB64  66                 	db	102	;'f'
  3008  00FB65  20                 	db	32
  3009  00FB66  20                 	db	32
  3010  00FB67  20                 	db	32
  3011  00FB68  20                 	db	32
  3012  00FB69  20                 	db	32
  3013  00FB6A  20                 	db	32
  3014  00FB6B  20                 	db	32
  3015  00FB6C  20                 	db	32
  3016  00FB6D  20                 	db	32
  3017  00FB6E  00                 	db	0
  3018  00FB6F                     STR_52:
  3019                           
  3020                           ; BSR set to: 57
  3021  00FB6F  52                 	db	82	;'R'
  3022  00FB70  31                 	db	49	;'1'
  3023  00FB71  20                 	db	32
  3024  00FB72  25                 	db	37
  3025  00FB73  32                 	db	50	;'2'
  3026  00FB74  2E                 	db	46
  3027  00FB75  33                 	db	51	;'3'
  3028  00FB76  66                 	db	102	;'f'
  3029  00FB77  20                 	db	32
  3030  00FB78  25                 	db	37
  3031  00FB79  33                 	db	51	;'3'
  3032  00FB7A  2E                 	db	46
  3033  00FB7B  34                 	db	52	;'4'
  3034  00FB7C  66                 	db	102	;'f'
  3035  00FB7D  20                 	db	32
  3036  00FB7E  20                 	db	32
  3037  00FB7F  20                 	db	32
  3038  00FB80  20                 	db	32
  3039  00FB81  20                 	db	32
  3040  00FB82  20                 	db	32
  3041  00FB83  20                 	db	32
  3042  00FB84  20                 	db	32
  3043  00FB85  20                 	db	32
  3044  00FB86  00                 	db	0
  3045  00FB87                     STR_53:
  3046                           
  3047                           ; BSR set to: 57
  3048  00FB87  52                 	db	82	;'R'
  3049  00FB88  32                 	db	50	;'2'
  3050  00FB89  20                 	db	32
  3051  00FB8A  25                 	db	37
  3052  00FB8B  32                 	db	50	;'2'
  3053  00FB8C  2E                 	db	46
  3054  00FB8D  33                 	db	51	;'3'
  3055  00FB8E  66                 	db	102	;'f'
  3056  00FB8F  20                 	db	32
  3057  00FB90  25                 	db	37
  3058  00FB91  33                 	db	51	;'3'
  3059  00FB92  2E                 	db	46
  3060  00FB93  34                 	db	52	;'4'
  3061  00FB94  66                 	db	102	;'f'
  3062  00FB95  20                 	db	32
  3063  00FB96  20                 	db	32
  3064  00FB97  20                 	db	32
  3065  00FB98  20                 	db	32
  3066  00FB99  20                 	db	32
  3067  00FB9A  20                 	db	32
  3068  00FB9B  20                 	db	32
  3069  00FB9C  20                 	db	32
  3070  00FB9D  20                 	db	32
  3071  00FB9E  00                 	db	0
  3072  00FB9F                     STR_49:
  3073                           
  3074                           ; BSR set to: 57
  3075  00FB9F  42                 	db	66	;'B'
  3076  00FBA0  41                 	db	65	;'A'
  3077  00FBA1  48                 	db	72	;'H'
  3078  00FBA2  20                 	db	32
  3079  00FBA3  25                 	db	37
  3080  00FBA4  33                 	db	51	;'3'
  3081  00FBA5  2E                 	db	46
  3082  00FBA6  32                 	db	50	;'2'
  3083  00FBA7  66                 	db	102	;'f'
  3084  00FBA8  20                 	db	32
  3085  00FBA9  50                 	db	80	;'P'
  3086  00FBAA  25                 	db	37
  3087  00FBAB  33                 	db	51	;'3'
  3088  00FBAC  2E                 	db	46
  3089  00FBAD  32                 	db	50	;'2'
  3090  00FBAE  66                 	db	102	;'f'
  3091  00FBAF  20                 	db	32
  3092  00FBB0  20                 	db	32
  3093  00FBB1  20                 	db	32
  3094  00FBB2  20                 	db	32
  3095  00FBB3  20                 	db	32
  3096  00FBB4  20                 	db	32
  3097  00FBB5  20                 	db	32
  3098  00FBB6  00                 	db	0
  3099  00FBB7                     STR_20:
  3100                           
  3101                           ; BSR set to: 57
  3102  00FBB7  20                 	db	32
  3103  00FBB8  20                 	db	32
  3104  00FBB9  20                 	db	32
  3105  00FBBA  20                 	db	32
  3106  00FBBB  20                 	db	32
  3107  00FBBC  20                 	db	32
  3108  00FBBD  20                 	db	32
  3109  00FBBE  20                 	db	32
  3110  00FBBF  20                 	db	32
  3111  00FBC0  20                 	db	32
  3112  00FBC1  20                 	db	32
  3113  00FBC2  20                 	db	32
  3114  00FBC3  20                 	db	32
  3115  00FBC4  20                 	db	32
  3116  00FBC5  20                 	db	32
  3117  00FBC6  20                 	db	32
  3118  00FBC7  20                 	db	32
  3119  00FBC8  20                 	db	32
  3120  00FBC9  20                 	db	32
  3121  00FBCA  20                 	db	32
  3122  00FBCB  20                 	db	32
  3123  00FBCC  20                 	db	32
  3124  00FBCD  00                 	db	0
  3125  00FBCE                     STR_25:
  3126                           
  3127                           ; BSR set to: 57
  3128  00FBCE  45                 	db	69	;'E'
  3129  00FBCF  53                 	db	83	;'S'
  3130  00FBD0  52                 	db	82	;'R'
  3131  00FBD1  20                 	db	32
  3132  00FBD2  20                 	db	32
  3133  00FBD3  25                 	db	37
  3134  00FBD4  32                 	db	50	;'2'
  3135  00FBD5  2E                 	db	46
  3136  00FBD6  36                 	db	54	;'6'
  3137  00FBD7  66                 	db	102	;'f'
  3138  00FBD8  20                 	db	32
  3139  00FBD9  20                 	db	32
  3140  00FBDA  20                 	db	32
  3141  00FBDB  20                 	db	32
  3142  00FBDC  20                 	db	32
  3143  00FBDD  20                 	db	32
  3144  00FBDE  20                 	db	32
  3145  00FBDF  20                 	db	32
  3146  00FBE0  20                 	db	32
  3147  00FBE1  20                 	db	32
  3148  00FBE2  20                 	db	32
  3149  00FBE3  20                 	db	32
  3150  00FBE4  00                 	db	0
  3151  00FBE5                     STR_18:
  3152                           
  3153                           ; BSR set to: 57
  3154  00FBE5  53                 	db	83	;'S'
  3155  00FBE6  74                 	db	116	;'t'
  3156  00FBE7  61                 	db	97	;'a'
  3157  00FBE8  74                 	db	116	;'t'
  3158  00FBE9  69                 	db	105	;'i'
  3159  00FBEA  63                 	db	99	;'c'
  3160  00FBEB  20                 	db	32
  3161  00FBEC  53                 	db	83	;'S'
  3162  00FBED  4F                 	db	79	;'O'
  3163  00FBEE  43                 	db	67	;'C'
  3164  00FBEF  20                 	db	32
  3165  00FBF0  25                 	db	37
  3166  00FBF1  64                 	db	100	;'d'
  3167  00FBF2  20                 	db	32
  3168  00FBF3  20                 	db	32
  3169  00FBF4  20                 	db	32
  3170  00FBF5  20                 	db	32
  3171  00FBF6  20                 	db	32
  3172  00FBF7  20                 	db	32
  3173  00FBF8  20                 	db	32
  3174  00FBF9  20                 	db	32
  3175  00FBFA  20                 	db	32
  3176  00FBFB  00                 	db	0
  3177  00FBFC                     STR_45:
  3178                           
  3179                           ; BSR set to: 57
  3180  00FBFC  42                 	db	66	;'B'
  3181  00FBFD  41                 	db	65	;'A'
  3182  00FBFE  54                 	db	84	;'T'
  3183  00FBFF  20                 	db	32
  3184  00FC00  49                 	db	73	;'I'
  3185  00FC01  57                 	db	87	;'W'
  3186  00FC02  48                 	db	72	;'H'
  3187  00FC03  20                 	db	32
  3188  00FC04  25                 	db	37
  3189  00FC05  34                 	db	52	;'4'
  3190  00FC06  2E                 	db	46
  3191  00FC07  31                 	db	49	;'1'
  3192  00FC08  66                 	db	102	;'f'
  3193  00FC09  20                 	db	32
  3194  00FC0A  20                 	db	32
  3195  00FC0B  20                 	db	32
  3196  00FC0C  20                 	db	32
  3197  00FC0D  20                 	db	32
  3198  00FC0E  20                 	db	32
  3199  00FC0F  20                 	db	32
  3200  00FC10  20                 	db	32
  3201  00FC11  20                 	db	32
  3202  00FC12  00                 	db	0
  3203  00FC13                     STR_46:
  3204                           
  3205                           ; BSR set to: 57
  3206  00FC13  42                 	db	66	;'B'
  3207  00FC14  41                 	db	65	;'A'
  3208  00FC15  54                 	db	84	;'T'
  3209  00FC16  20                 	db	32
  3210  00FC17  4F                 	db	79	;'O'
  3211  00FC18  57                 	db	87	;'W'
  3212  00FC19  48                 	db	72	;'H'
  3213  00FC1A  20                 	db	32
  3214  00FC1B  25                 	db	37
  3215  00FC1C  34                 	db	52	;'4'
  3216  00FC1D  2E                 	db	46
  3217  00FC1E  31                 	db	49	;'1'
  3218  00FC1F  66                 	db	102	;'f'
  3219  00FC20  20                 	db	32
  3220  00FC21  20                 	db	32
  3221  00FC22  20                 	db	32
  3222  00FC23  20                 	db	32
  3223  00FC24  20                 	db	32
  3224  00FC25  20                 	db	32
  3225  00FC26  20                 	db	32
  3226  00FC27  20                 	db	32
  3227  00FC28  20                 	db	32
  3228  00FC29  00                 	db	0
  3229  00FC2A                     STR_47:
  3230                           
  3231                           ; BSR set to: 57
  3232  00FC2A  42                 	db	66	;'B'
  3233  00FC2B  41                 	db	65	;'A'
  3234  00FC2C  54                 	db	84	;'T'
  3235  00FC2D  20                 	db	32
  3236  00FC2E  54                 	db	84	;'T'
  3237  00FC2F  57                 	db	87	;'W'
  3238  00FC30  48                 	db	72	;'H'
  3239  00FC31  20                 	db	32
  3240  00FC32  25                 	db	37
  3241  00FC33  34                 	db	52	;'4'
  3242  00FC34  2E                 	db	46
  3243  00FC35  31                 	db	49	;'1'
  3244  00FC36  66                 	db	102	;'f'
  3245  00FC37  20                 	db	32
  3246  00FC38  20                 	db	32
  3247  00FC39  20                 	db	32
  3248  00FC3A  20                 	db	32
  3249  00FC3B  20                 	db	32
  3250  00FC3C  20                 	db	32
  3251  00FC3D  20                 	db	32
  3252  00FC3E  20                 	db	32
  3253  00FC3F  20                 	db	32
  3254  00FC40  00                 	db	0
  3255  00FC41                     STR_41:
  3256                           
  3257                           ; BSR set to: 57
  3258  00FC41  49                 	db	73	;'I'
  3259  00FC42  4E                 	db	78	;'N'
  3260  00FC43  56                 	db	86	;'V'
  3261  00FC44  20                 	db	32
  3262  00FC45  20                 	db	32
  3263  00FC46  57                 	db	87	;'W'
  3264  00FC47  48                 	db	72	;'H'
  3265  00FC48  20                 	db	32
  3266  00FC49  25                 	db	37
  3267  00FC4A  33                 	db	51	;'3'
  3268  00FC4B  2E                 	db	46
  3269  00FC4C  32                 	db	50	;'2'
  3270  00FC4D  66                 	db	102	;'f'
  3271  00FC4E  20                 	db	32
  3272  00FC4F  20                 	db	32
  3273  00FC50  20                 	db	32
  3274  00FC51  20                 	db	32
  3275  00FC52  20                 	db	32
  3276  00FC53  20                 	db	32
  3277  00FC54  20                 	db	32
  3278  00FC55  20                 	db	32
  3279  00FC56  20                 	db	32
  3280  00FC57  00                 	db	0
  3281  00FC58                     STR_40:
  3282                           
  3283                           ; BSR set to: 57
  3284  00FC58  4C                 	db	76	;'L'
  3285  00FC59  4F                 	db	79	;'O'
  3286  00FC5A  41                 	db	65	;'A'
  3287  00FC5B  44                 	db	68	;'D'
  3288  00FC5C  20                 	db	32
  3289  00FC5D  57                 	db	87	;'W'
  3290  00FC5E  48                 	db	72	;'H'
  3291  00FC5F  20                 	db	32
  3292  00FC60  25                 	db	37
  3293  00FC61  33                 	db	51	;'3'
  3294  00FC62  2E                 	db	46
  3295  00FC63  32                 	db	50	;'2'
  3296  00FC64  66                 	db	102	;'f'
  3297  00FC65  20                 	db	32
  3298  00FC66  20                 	db	32
  3299  00FC67  20                 	db	32
  3300  00FC68  20                 	db	32
  3301  00FC69  20                 	db	32
  3302  00FC6A  20                 	db	32
  3303  00FC6B  20                 	db	32
  3304  00FC6C  20                 	db	32
  3305  00FC6D  20                 	db	32
  3306  00FC6E  00                 	db	0
  3307  00FC6F                     STR_39:
  3308                           
  3309                           ; BSR set to: 57
  3310  00FC6F  50                 	db	80	;'P'
  3311  00FC70  56                 	db	86	;'V'
  3312  00FC71  20                 	db	32
  3313  00FC72  25                 	db	37
  3314  00FC73  63                 	db	99	;'c'
  3315  00FC74  20                 	db	32
  3316  00FC75  57                 	db	87	;'W'
  3317  00FC76  48                 	db	72	;'H'
  3318  00FC77  20                 	db	32
  3319  00FC78  25                 	db	37
  3320  00FC79  33                 	db	51	;'3'
  3321  00FC7A  2E                 	db	46
  3322  00FC7B  32                 	db	50	;'2'
  3323  00FC7C  66                 	db	102	;'f'
  3324  00FC7D  20                 	db	32
  3325  00FC7E  20                 	db	32
  3326  00FC7F  20                 	db	32
  3327  00FC80  20                 	db	32
  3328  00FC81  20                 	db	32
  3329  00FC82  20                 	db	32
  3330  00FC83  20                 	db	32
  3331  00FC84  20                 	db	32
  3332  00FC85  00                 	db	0
  3333  00FC86                     STR_38:
  3334                           
  3335                           ; BSR set to: 57
  3336  00FC86  49                 	db	73	;'I'
  3337  00FC87  4E                 	db	78	;'N'
  3338  00FC88  56                 	db	86	;'V'
  3339  00FC89  20                 	db	32
  3340  00FC8A  20                 	db	32
  3341  00FC8B  50                 	db	80	;'P'
  3342  00FC8C  57                 	db	87	;'W'
  3343  00FC8D  52                 	db	82	;'R'
  3344  00FC8E  20                 	db	32
  3345  00FC8F  25                 	db	37
  3346  00FC90  33                 	db	51	;'3'
  3347  00FC91  2E                 	db	46
  3348  00FC92  32                 	db	50	;'2'
  3349  00FC93  66                 	db	102	;'f'
  3350  00FC94  20                 	db	32
  3351  00FC95  20                 	db	32
  3352  00FC96  20                 	db	32
  3353  00FC97  20                 	db	32
  3354  00FC98  20                 	db	32
  3355  00FC99  20                 	db	32
  3356  00FC9A  20                 	db	32
  3357  00FC9B  20                 	db	32
  3358  00FC9C  00                 	db	0
  3359  00FC9D                     STR_37:
  3360                           
  3361                           ; BSR set to: 57
  3362  00FC9D  4C                 	db	76	;'L'
  3363  00FC9E  4F                 	db	79	;'O'
  3364  00FC9F  41                 	db	65	;'A'
  3365  00FCA0  44                 	db	68	;'D'
  3366  00FCA1  20                 	db	32
  3367  00FCA2  50                 	db	80	;'P'
  3368  00FCA3  57                 	db	87	;'W'
  3369  00FCA4  52                 	db	82	;'R'
  3370  00FCA5  20                 	db	32
  3371  00FCA6  25                 	db	37
  3372  00FCA7  33                 	db	51	;'3'
  3373  00FCA8  2E                 	db	46
  3374  00FCA9  32                 	db	50	;'2'
  3375  00FCAA  66                 	db	102	;'f'
  3376  00FCAB  20                 	db	32
  3377  00FCAC  20                 	db	32
  3378  00FCAD  20                 	db	32
  3379  00FCAE  20                 	db	32
  3380  00FCAF  20                 	db	32
  3381  00FCB0  20                 	db	32
  3382  00FCB1  20                 	db	32
  3383  00FCB2  20                 	db	32
  3384  00FCB3  00                 	db	0
  3385  00FCB4                     STR_36:
  3386                           
  3387                           ; BSR set to: 57
  3388  00FCB4  50                 	db	80	;'P'
  3389  00FCB5  56                 	db	86	;'V'
  3390  00FCB6  20                 	db	32
  3391  00FCB7  25                 	db	37
  3392  00FCB8  63                 	db	99	;'c'
  3393  00FCB9  20                 	db	32
  3394  00FCBA  50                 	db	80	;'P'
  3395  00FCBB  57                 	db	87	;'W'
  3396  00FCBC  52                 	db	82	;'R'
  3397  00FCBD  20                 	db	32
  3398  00FCBE  25                 	db	37
  3399  00FCBF  33                 	db	51	;'3'
  3400  00FCC0  2E                 	db	46
  3401  00FCC1  32                 	db	50	;'2'
  3402  00FCC2  66                 	db	102	;'f'
  3403  00FCC3  20                 	db	32
  3404  00FCC4  20                 	db	32
  3405  00FCC5  20                 	db	32
  3406  00FCC6  20                 	db	32
  3407  00FCC7  20                 	db	32
  3408  00FCC8  20                 	db	32
  3409  00FCC9  20                 	db	32
  3410  00FCCA  00                 	db	0
  3411  00FCCB                     STR_19:
  3412                           
  3413                           ; BSR set to: 57
  3414  00FCCB  42                 	db	66	;'B'
  3415  00FCCC  61                 	db	97	;'a'
  3416  00FCCD  74                 	db	116	;'t'
  3417  00FCCE  74                 	db	116	;'t'
  3418  00FCCF  65                 	db	101	;'e'
  3419  00FCD0  72                 	db	114	;'r'
  3420  00FCD1  79                 	db	121	;'y'
  3421  00FCD2  20                 	db	32
  3422  00FCD3  41                 	db	65	;'A'
  3423  00FCD4  68                 	db	104	;'h'
  3424  00FCD5  20                 	db	32
  3425  00FCD6  25                 	db	37
  3426  00FCD7  33                 	db	51	;'3'
  3427  00FCD8  2E                 	db	46
  3428  00FCD9  32                 	db	50	;'2'
  3429  00FCDA  66                 	db	102	;'f'
  3430  00FCDB  20                 	db	32
  3431  00FCDC  20                 	db	32
  3432  00FCDD  20                 	db	32
  3433  00FCDE  20                 	db	32
  3434  00FCDF  20                 	db	32
  3435  00FCE0  20                 	db	32
  3436  00FCE1  00                 	db	0
  3437  00FCE2                     STR_43:
  3438                           
  3439                           ; BSR set to: 57
  3440  00FCE2  42                 	db	66	;'B'
  3441  00FCE3  56                 	db	86	;'V'
  3442  00FCE4  20                 	db	32
  3443  00FCE5  25                 	db	37
  3444  00FCE6  32                 	db	50	;'2'
  3445  00FCE7  2E                 	db	46
  3446  00FCE8  32                 	db	50	;'2'
  3447  00FCE9  66                 	db	102	;'f'
  3448  00FCEA  20                 	db	32
  3449  00FCEB  42                 	db	66	;'B'
  3450  00FCEC  41                 	db	65	;'A'
  3451  00FCED  20                 	db	32
  3452  00FCEE  25                 	db	37
  3453  00FCEF  32                 	db	50	;'2'
  3454  00FCF0  2E                 	db	46
  3455  00FCF1  32                 	db	50	;'2'
  3456  00FCF2  66                 	db	102	;'f'
  3457  00FCF3  20                 	db	32
  3458  00FCF4  20                 	db	32
  3459  00FCF5  20                 	db	32
  3460  00FCF6  20                 	db	32
  3461  00FCF7  20                 	db	32
  3462  00FCF8  00                 	db	0
  3463  00FCF9                     STR_44:
  3464                           
  3465                           ; BSR set to: 57
  3466  00FCF9  43                 	db	67	;'C'
  3467  00FCFA  56                 	db	86	;'V'
  3468  00FCFB  20                 	db	32
  3469  00FCFC  25                 	db	37
  3470  00FCFD  32                 	db	50	;'2'
  3471  00FCFE  2E                 	db	46
  3472  00FCFF  32                 	db	50	;'2'
  3473  00FD00  66                 	db	102	;'f'
  3474  00FD01  20                 	db	32
  3475  00FD02  4C                 	db	76	;'L'
  3476  00FD03  41                 	db	65	;'A'
  3477  00FD04  20                 	db	32
  3478  00FD05  25                 	db	37
  3479  00FD06  32                 	db	50	;'2'
  3480  00FD07  2E                 	db	46
  3481  00FD08  32                 	db	50	;'2'
  3482  00FD09  66                 	db	102	;'f'
  3483  00FD0A  20                 	db	32
  3484  00FD0B  20                 	db	32
  3485  00FD0C  20                 	db	32
  3486  00FD0D  20                 	db	32
  3487  00FD0E  20                 	db	32
  3488  00FD0F  00                 	db	0
  3489  00FD10                     STR_42:
  3490                           
  3491                           ; BSR set to: 57
  3492  00FD10  50                 	db	80	;'P'
  3493  00FD11  56                 	db	86	;'V'
  3494  00FD12  20                 	db	32
  3495  00FD13  25                 	db	37
  3496  00FD14  32                 	db	50	;'2'
  3497  00FD15  2E                 	db	46
  3498  00FD16  32                 	db	50	;'2'
  3499  00FD17  66                 	db	102	;'f'
  3500  00FD18  20                 	db	32
  3501  00FD19  50                 	db	80	;'P'
  3502  00FD1A  41                 	db	65	;'A'
  3503  00FD1B  20                 	db	32
  3504  00FD1C  25                 	db	37
  3505  00FD1D  32                 	db	50	;'2'
  3506  00FD1E  2E                 	db	46
  3507  00FD1F  32                 	db	50	;'2'
  3508  00FD20  66                 	db	102	;'f'
  3509  00FD21  20                 	db	32
  3510  00FD22  20                 	db	32
  3511  00FD23  20                 	db	32
  3512  00FD24  20                 	db	32
  3513  00FD25  20                 	db	32
  3514  00FD26  00                 	db	0
  3515  00FD27                     STR_132:
  3516                           
  3517                           ; BSR set to: 57
  3518  00FD27  53                 	db	83	;'S'
  3519  00FD28  75                 	db	117	;'u'
  3520  00FD29  6E                 	db	110	;'n'
  3521  00FD2A  4D                 	db	77	;'M'
  3522  00FD2B  6F                 	db	111	;'o'
  3523  00FD2C  6E                 	db	110	;'n'
  3524  00FD2D  54                 	db	84	;'T'
  3525  00FD2E  75                 	db	117	;'u'
  3526  00FD2F  65                 	db	101	;'e'
  3527  00FD30  57                 	db	87	;'W'
  3528  00FD31  65                 	db	101	;'e'
  3529  00FD32  64                 	db	100	;'d'
  3530  00FD33  54                 	db	84	;'T'
  3531  00FD34  68                 	db	104	;'h'
  3532  00FD35  75                 	db	117	;'u'
  3533  00FD36  46                 	db	70	;'F'
  3534  00FD37  72                 	db	114	;'r'
  3535  00FD38  69                 	db	105	;'i'
  3536  00FD39  53                 	db	83	;'S'
  3537  00FD3A  61                 	db	97	;'a'
  3538  00FD3B  74                 	db	116	;'t'
  3539  00FD3C  00                 	db	0
  3540  00FD3D                     STR_62:
  3541                           
  3542                           ; BSR set to: 57
  3543  00FD3D  20                 	db	32
  3544  00FD3E  25                 	db	37
  3545  00FD3F  64                 	db	100	;'d'
  3546  00FD40  20                 	db	32
  3547  00FD41  25                 	db	37
  3548  00FD42  64                 	db	100	;'d'
  3549  00FD43  20                 	db	32
  3550  00FD44  20                 	db	32
  3551  00FD45  20                 	db	32
  3552  00FD46  20                 	db	32
  3553  00FD47  20                 	db	32
  3554  00FD48  20                 	db	32
  3555  00FD49  20                 	db	32
  3556  00FD4A  20                 	db	32
  3557  00FD4B  20                 	db	32
  3558  00FD4C  20                 	db	32
  3559  00FD4D  20                 	db	32
  3560  00FD4E  20                 	db	32
  3561  00FD4F  20                 	db	32
  3562  00FD50  20                 	db	32
  3563  00FD51  20                 	db	32
  3564  00FD52  00                 	db	0
  3565  00FD53                     STR_65:
  3566                           
  3567                           ; BSR set to: 57
  3568  00FD53  20                 	db	32
  3569  00FD54  25                 	db	37
  3570  00FD55  6C                 	db	108	;'l'
  3571  00FD56  64                 	db	100	;'d'
  3572  00FD57  20                 	db	32
  3573  00FD58  25                 	db	37
  3574  00FD59  6C                 	db	108	;'l'
  3575  00FD5A  64                 	db	100	;'d'
  3576  00FD5B  20                 	db	32
  3577  00FD5C  20                 	db	32
  3578  00FD5D  20                 	db	32
  3579  00FD5E  20                 	db	32
  3580  00FD5F  20                 	db	32
  3581  00FD60  20                 	db	32
  3582  00FD61  20                 	db	32
  3583  00FD62  20                 	db	32
  3584  00FD63  20                 	db	32
  3585  00FD64  20                 	db	32
  3586  00FD65  20                 	db	32
  3587  00FD66  20                 	db	32
  3588  00FD67  20                 	db	32
  3589  00FD68  00                 	db	0
  3590  00FD69                     STR_16:
  3591                           
  3592                           ; BSR set to: 57
  3593  00FD69  42                 	db	66	;'B'
  3594  00FD6A  56                 	db	86	;'V'
  3595  00FD6B  20                 	db	32
  3596  00FD6C  25                 	db	37
  3597  00FD6D  32                 	db	50	;'2'
  3598  00FD6E  2E                 	db	46
  3599  00FD6F  34                 	db	52	;'4'
  3600  00FD70  66                 	db	102	;'f'
  3601  00FD71  20                 	db	32
  3602  00FD72  20                 	db	32
  3603  00FD73  20                 	db	32
  3604  00FD74  20                 	db	32
  3605  00FD75  20                 	db	32
  3606  00FD76  20                 	db	32
  3607  00FD77  20                 	db	32
  3608  00FD78  20                 	db	32
  3609  00FD79  20                 	db	32
  3610  00FD7A  20                 	db	32
  3611  00FD7B  20                 	db	32
  3612  00FD7C  20                 	db	32
  3613  00FD7D  20                 	db	32
  3614  00FD7E  00                 	db	0
  3615  00FD7F                     STR_31:
  3616                           
  3617                           ; BSR set to: 57
  3618  00FD7F  54                 	db	84	;'T'
  3619  00FD80  6F                 	db	111	;'o'
  3620  00FD81  20                 	db	32
  3621  00FD82  45                 	db	69	;'E'
  3622  00FD83  45                 	db	69	;'E'
  3623  00FD84  50                 	db	80	;'P'
  3624  00FD85  52                 	db	82	;'R'
  3625  00FD86  4F                 	db	79	;'O'
  3626  00FD87  4D                 	db	77	;'M'
  3627  00FD88  20                 	db	32
  3628  00FD89  20                 	db	32
  3629  00FD8A  20                 	db	32
  3630  00FD8B  20                 	db	32
  3631  00FD8C  20                 	db	32
  3632  00FD8D  20                 	db	32
  3633  00FD8E  20                 	db	32
  3634  00FD8F  20                 	db	32
  3635  00FD90  20                 	db	32
  3636  00FD91  20                 	db	32
  3637  00FD92  20                 	db	32
  3638  00FD93  20                 	db	32
  3639  00FD94  00                 	db	0
  3640  00FD95                     STR_21:
  3641                           
  3642                           ; BSR set to: 57
  3643  00FD95  42                 	db	66	;'B'
  3644  00FD96  61                 	db	97	;'a'
  3645  00FD97  74                 	db	116	;'t'
  3646  00FD98  74                 	db	116	;'t'
  3647  00FD99  65                 	db	101	;'e'
  3648  00FD9A  72                 	db	114	;'r'
  3649  00FD9B  79                 	db	121	;'y'
  3650  00FD9C  20                 	db	32
  3651  00FD9D  45                 	db	69	;'E'
  3652  00FD9E  53                 	db	83	;'S'
  3653  00FD9F  52                 	db	82	;'R'
  3654  00FDA0  20                 	db	32
  3655  00FDA1  20                 	db	32
  3656  00FDA2  20                 	db	32
  3657  00FDA3  20                 	db	32
  3658  00FDA4  20                 	db	32
  3659  00FDA5  20                 	db	32
  3660  00FDA6  20                 	db	32
  3661  00FDA7  20                 	db	32
  3662  00FDA8  20                 	db	32
  3663  00FDA9  20                 	db	32
  3664  00FDAA  00                 	db	0
  3665  00FDAB                     STR_22:
  3666                           
  3667                           ; BSR set to: 57
  3668  00FDAB  43                 	db	67	;'C'
  3669  00FDAC  61                 	db	97	;'a'
  3670  00FDAD  6C                 	db	108	;'l'
  3671  00FDAE  63                 	db	99	;'c'
  3672  00FDAF  75                 	db	117	;'u'
  3673  00FDB0  6C                 	db	108	;'l'
  3674  00FDB1  61                 	db	97	;'a'
  3675  00FDB2  74                 	db	116	;'t'
  3676  00FDB3  69                 	db	105	;'i'
  3677  00FDB4  6F                 	db	111	;'o'
  3678  00FDB5  6E                 	db	110	;'n'
  3679  00FDB6  20                 	db	32
  3680  00FDB7  20                 	db	32
  3681  00FDB8  20                 	db	32
  3682  00FDB9  20                 	db	32
  3683  00FDBA  20                 	db	32
  3684  00FDBB  20                 	db	32
  3685  00FDBC  20                 	db	32
  3686  00FDBD  20                 	db	32
  3687  00FDBE  20                 	db	32
  3688  00FDBF  20                 	db	32
  3689  00FDC0  00                 	db	0
  3690  00FDC1                     STR_59:
  3691                           
  3692                           ; BSR set to: 57
  3693  00FDC1  43                 	db	67	;'C'
  3694  00FDC2  61                 	db	97	;'a'
  3695  00FDC3  6C                 	db	108	;'l'
  3696  00FDC4  69                 	db	105	;'i'
  3697  00FDC5  62                 	db	98	;'b'
  3698  00FDC6  72                 	db	114	;'r'
  3699  00FDC7  61                 	db	97	;'a'
  3700  00FDC8  74                 	db	116	;'t'
  3701  00FDC9  69                 	db	105	;'i'
  3702  00FDCA  6F                 	db	111	;'o'
  3703  00FDCB  6E                 	db	110	;'n'
  3704  00FDCC  20                 	db	32
  3705  00FDCD  20                 	db	32
  3706  00FDCE  20                 	db	32
  3707  00FDCF  20                 	db	32
  3708  00FDD0  20                 	db	32
  3709  00FDD1  20                 	db	32
  3710  00FDD2  20                 	db	32
  3711  00FDD3  20                 	db	32
  3712  00FDD4  20                 	db	32
  3713  00FDD5  20                 	db	32
  3714  00FDD6  00                 	db	0
  3715  00FDD7                     STR_58:
  3716                           
  3717                           ; BSR set to: 57
  3718  00FDD7  53                 	db	83	;'S'
  3719  00FDD8  65                 	db	101	;'e'
  3720  00FDD9  6E                 	db	110	;'n'
  3721  00FDDA  73                 	db	115	;'s'
  3722  00FDDB  6F                 	db	111	;'o'
  3723  00FDDC  72                 	db	114	;'r'
  3724  00FDDD  20                 	db	32
  3725  00FDDE  5A                 	db	90	;'Z'
  3726  00FDDF  65                 	db	101	;'e'
  3727  00FDE0  72                 	db	114	;'r'
  3728  00FDE1  6F                 	db	111	;'o'
  3729  00FDE2  20                 	db	32
  3730  00FDE3  20                 	db	32
  3731  00FDE4  20                 	db	32
  3732  00FDE5  20                 	db	32
  3733  00FDE6  20                 	db	32
  3734  00FDE7  20                 	db	32
  3735  00FDE8  20                 	db	32
  3736  00FDE9  20                 	db	32
  3737  00FDEA  20                 	db	32
  3738  00FDEB  20                 	db	32
  3739  00FDEC  00                 	db	0
  3740  00FDED                     STR_66:
  3741                           
  3742                           ; BSR set to: 57
  3743  00FDED  5A                 	db	90	;'Z'
  3744  00FDEE  65                 	db	101	;'e'
  3745  00FDEF  72                 	db	114	;'r'
  3746  00FDF0  6F                 	db	111	;'o'
  3747  00FDF1  20                 	db	32
  3748  00FDF2  43                 	db	67	;'C'
  3749  00FDF3  61                 	db	97	;'a'
  3750  00FDF4  6C                 	db	108	;'l'
  3751  00FDF5  20                 	db	32
  3752  00FDF6  53                 	db	83	;'S'
  3753  00FDF7  65                 	db	101	;'e'
  3754  00FDF8  74                 	db	116	;'t'
  3755  00FDF9  20                 	db	32
  3756  00FDFA  20                 	db	32
  3757  00FDFB  20                 	db	32
  3758  00FDFC  20                 	db	32
  3759  00FDFD  20                 	db	32
  3760  00FDFE  20                 	db	32
  3761  00FDFF  20                 	db	32
  3762  00FE00  20                 	db	32
  3763  00FE01  20                 	db	32
  3764  00FE02  00                 	db	0
  3765  00FE03                     STR_57:
  3766                           
  3767                           ; BSR set to: 57
  3768  00FE03  42                 	db	66	;'B'
  3769  00FE04  61                 	db	97	;'a'
  3770  00FE05  74                 	db	116	;'t'
  3771  00FE06  74                 	db	116	;'t'
  3772  00FE07  65                 	db	101	;'e'
  3773  00FE08  72                 	db	114	;'r'
  3774  00FE09  79                 	db	121	;'y'
  3775  00FE0A  20                 	db	32
  3776  00FE0B  61                 	db	97	;'a'
  3777  00FE0C  6E                 	db	110	;'n'
  3778  00FE0D  64                 	db	100	;'d'
  3779  00FE0E  20                 	db	32
  3780  00FE0F  50                 	db	80	;'P'
  3781  00FE10  56                 	db	86	;'V'
  3782  00FE11  20                 	db	32
  3783  00FE12  20                 	db	32
  3784  00FE13  20                 	db	32
  3785  00FE14  20                 	db	32
  3786  00FE15  20                 	db	32
  3787  00FE16  20                 	db	32
  3788  00FE17  20                 	db	32
  3789  00FE18  00                 	db	0
  3790  00FE19                     STR_24:
  3791                           
  3792                           ; BSR set to: 57
  3793  00FE19  43                 	db	67	;'C'
  3794  00FE1A  68                 	db	104	;'h'
  3795  00FE1B  65                 	db	101	;'e'
  3796  00FE1C  63                 	db	99	;'c'
  3797  00FE1D  6B                 	db	107	;'k'
  3798  00FE1E  69                 	db	105	;'i'
  3799  00FE1F  6E                 	db	110	;'n'
  3800  00FE20  67                 	db	103	;'g'
  3801  00FE21  20                 	db	32
  3802  00FE22  25                 	db	37
  3803  00FE23  63                 	db	99	;'c'
  3804  00FE24  20                 	db	32
  3805  00FE25  25                 	db	37
  3806  00FE26  63                 	db	99	;'c'
  3807  00FE27  20                 	db	32
  3808  00FE28  20                 	db	32
  3809  00FE29  20                 	db	32
  3810  00FE2A  20                 	db	32
  3811  00FE2B  20                 	db	32
  3812  00FE2C  20                 	db	32
  3813  00FE2D  20                 	db	32
  3814  00FE2E  00                 	db	0
  3815  00FE2F                     STR_32:
  3816                           
  3817                           ; BSR set to: 57
  3818  00FE2F  20                 	db	32
  3819  00FE30  54                 	db	84	;'T'
  3820  00FE31  69                 	db	105	;'i'
  3821  00FE32  6D                 	db	109	;'m'
  3822  00FE33  65                 	db	101	;'e'
  3823  00FE34  20                 	db	32
  3824  00FE35  25                 	db	37
  3825  00FE36  6C                 	db	108	;'l'
  3826  00FE37  75                 	db	117	;'u'
  3827  00FE38  2C                 	db	44
  3828  00FE39  20                 	db	32
  3829  00FE3A  25                 	db	37
  3830  00FE3B  6C                 	db	108	;'l'
  3831  00FE3C  75                 	db	117	;'u'
  3832  00FE3D  20                 	db	32
  3833  00FE3E  20                 	db	32
  3834  00FE3F  20                 	db	32
  3835  00FE40  20                 	db	32
  3836  00FE41  20                 	db	32
  3837  00FE42  20                 	db	32
  3838  00FE43  20                 	db	32
  3839  00FE44  00                 	db	0
  3840  00FE45                     STR_61:
  3841                           
  3842                           ; BSR set to: 57
  3843  00FE45  53                 	db	83	;'S'
  3844  00FE46  65                 	db	101	;'e'
  3845  00FE47  6E                 	db	110	;'n'
  3846  00FE48  73                 	db	115	;'s'
  3847  00FE49  6F                 	db	111	;'o'
  3848  00FE4A  72                 	db	114	;'r'
  3849  00FE4B  20                 	db	32
  3850  00FE4C  52                 	db	82	;'R'
  3851  00FE4D  65                 	db	101	;'e'
  3852  00FE4E  61                 	db	97	;'a'
  3853  00FE4F  64                 	db	100	;'d'
  3854  00FE50  69                 	db	105	;'i'
  3855  00FE51  6E                 	db	110	;'n'
  3856  00FE52  67                 	db	103	;'g'
  3857  00FE53  73                 	db	115	;'s'
  3858  00FE54  20                 	db	32
  3859  00FE55  20                 	db	32
  3860  00FE56  20                 	db	32
  3861  00FE57  20                 	db	32
  3862  00FE58  20                 	db	32
  3863  00FE59  20                 	db	32
  3864  00FE5A  00                 	db	0
  3865  00FE5B                     STR_23:
  3866                           
  3867                           ; BSR set to: 57
  3868  00FE5B  43                 	db	67	;'C'
  3869  00FE5C  68                 	db	104	;'h'
  3870  00FE5D  65                 	db	101	;'e'
  3871  00FE5E  63                 	db	99	;'c'
  3872  00FE5F  6B                 	db	107	;'k'
  3873  00FE60  20                 	db	32
  3874  00FE61  33                 	db	51	;'3'
  3875  00FE62  30                 	db	48	;'0'
  3876  00FE63  20                 	db	32
  3877  00FE64  73                 	db	115	;'s'
  3878  00FE65  65                 	db	101	;'e'
  3879  00FE66  63                 	db	99	;'c'
  3880  00FE67  6F                 	db	111	;'o'
  3881  00FE68  6E                 	db	110	;'n'
  3882  00FE69  64                 	db	100	;'d'
  3883  00FE6A  73                 	db	115	;'s'
  3884  00FE6B  20                 	db	32
  3885  00FE6C  20                 	db	32
  3886  00FE6D  20                 	db	32
  3887  00FE6E  20                 	db	32
  3888  00FE6F  20                 	db	32
  3889  00FE70  00                 	db	0
  3890  00FE71                     STR_69:
  3891                           
  3892                           ; BSR set to: 57
  3893  00FE71  5A                 	db	90	;'Z'
  3894  00FE72  65                 	db	101	;'e'
  3895  00FE73  72                 	db	114	;'r'
  3896  00FE74  6F                 	db	111	;'o'
  3897  00FE75  20                 	db	32
  3898  00FE76  4F                 	db	79	;'O'
  3899  00FE77  75                 	db	117	;'u'
  3900  00FE78  74                 	db	116	;'t'
  3901  00FE79  20                 	db	32
  3902  00FE7A  4F                 	db	79	;'O'
  3903  00FE7B  66                 	db	102	;'f'
  3904  00FE7C  20                 	db	32
  3905  00FE7D  52                 	db	82	;'R'
  3906  00FE7E  61                 	db	97	;'a'
  3907  00FE7F  6E                 	db	110	;'n'
  3908  00FE80  67                 	db	103	;'g'
  3909  00FE81  65                 	db	101	;'e'
  3910  00FE82  20                 	db	32
  3911  00FE83  20                 	db	32
  3912  00FE84  20                 	db	32
  3913  00FE85  20                 	db	32
  3914  00FE86  00                 	db	0
  3915  00FE87                     STR_54:
  3916                           
  3917                           ; BSR set to: 57
  3918  00FE87  25                 	db	37
  3919  00FE88  64                 	db	100	;'d'
  3920  00FE89  20                 	db	32
  3921  00FE8A  25                 	db	37
  3922  00FE8B  32                 	db	50	;'2'
  3923  00FE8C  2E                 	db	46
  3924  00FE8D  34                 	db	52	;'4'
  3925  00FE8E  66                 	db	102	;'f'
  3926  00FE8F  2C                 	db	44
  3927  00FE90  20                 	db	32
  3928  00FE91  25                 	db	37
  3929  00FE92  64                 	db	100	;'d'
  3930  00FE93  20                 	db	32
  3931  00FE94  20                 	db	32
  3932  00FE95  54                 	db	84	;'T'
  3933  00FE96  52                 	db	82	;'R'
  3934  00FE97  49                 	db	73	;'I'
  3935  00FE98  4D                 	db	77	;'M'
  3936  00FE99  20                 	db	32
  3937  00FE9A  20                 	db	32
  3938  00FE9B  20                 	db	32
  3939  00FE9C  00                 	db	0
  3940  00FE9D                     STR_63:
  3941                           
  3942                           ; BSR set to: 57
  3943  00FE9D  53                 	db	83	;'S'
  3944  00FE9E  74                 	db	116	;'t'
  3945  00FE9F  61                 	db	97	;'a'
  3946  00FEA0  62                 	db	98	;'b'
  3947  00FEA1  69                 	db	105	;'i'
  3948  00FEA2  6C                 	db	108	;'l'
  3949  00FEA3  69                 	db	105	;'i'
  3950  00FEA4  74                 	db	116	;'t'
  3951  00FEA5  79                 	db	121	;'y'
  3952  00FEA6  20                 	db	32
  3953  00FEA7  63                 	db	99	;'c'
  3954  00FEA8  6C                 	db	108	;'l'
  3955  00FEA9  6F                 	db	111	;'o'
  3956  00FEAA  63                 	db	99	;'c'
  3957  00FEAB  6B                 	db	107	;'k'
  3958  00FEAC  20                 	db	32
  3959  00FEAD  25                 	db	37
  3960  00FEAE  64                 	db	100	;'d'
  3961  00FEAF  20                 	db	32
  3962  00FEB0  20                 	db	32
  3963  00FEB1  20                 	db	32
  3964  00FEB2  00                 	db	0
  3965  00FEB3                     STR_30:
  3966                           
  3967                           ; BSR set to: 57
  3968  00FEB3  48                 	db	72	;'H'
  3969  00FEB4  69                 	db	105	;'i'
  3970  00FEB5  73                 	db	115	;'s'
  3971  00FEB6  74                 	db	116	;'t'
  3972  00FEB7  6F                 	db	111	;'o'
  3973  00FEB8  72                 	db	114	;'r'
  3974  00FEB9  79                 	db	121	;'y'
  3975  00FEBA  20                 	db	32
  3976  00FEBB  44                 	db	68	;'D'
  3977  00FEBC  61                 	db	97	;'a'
  3978  00FEBD  74                 	db	116	;'t'
  3979  00FEBE  61                 	db	97	;'a'
  3980  00FEBF  20                 	db	32
  3981  00FEC0  20                 	db	32
  3982  00FEC1  53                 	db	83	;'S'
  3983  00FEC2  61                 	db	97	;'a'
  3984  00FEC3  76                 	db	118	;'v'
  3985  00FEC4  65                 	db	101	;'e'
  3986  00FEC5  64                 	db	100	;'d'
  3987  00FEC6  20                 	db	32
  3988  00FEC7  20                 	db	32
  3989  00FEC8  00                 	db	0
  3990  00FEC9                     
  3991                           ; BSR set to: 57
  3992  00FEC9  48                 	db	72	;'H'
  3993  00FECA  45                 	db	69	;'E'
  3994  00FECB  4C                 	db	76	;'L'
  3995  00FECC  50                 	db	80	;'P'
  3996  00FECD  20                 	db	32
  3997  00FECE  25                 	db	37
  3998  00FECF  73                 	db	115	;'s'
  3999  00FED0  20                 	db	32
  4000  00FED1  20                 	db	32
  4001  00FED2  20                 	db	32
  4002  00FED3  20                 	db	32
  4003  00FED4  20                 	db	32
  4004  00FED5  20                 	db	32
  4005  00FED6  20                 	db	32
  4006  00FED7  20                 	db	32
  4007  00FED8  20                 	db	32
  4008  00FED9  20                 	db	32
  4009  00FEDA  20                 	db	32
  4010  00FEDB  20                 	db	32
  4011  00FEDC  20                 	db	32
  4012  00FEDD  00                 	db	0
  4013  00FEDE                     
  4014                           ; BSR set to: 57
  4015  00FEDE  44                 	db	68	;'D'
  4016  00FEDF  49                 	db	73	;'I'
  4017  00FEE0  53                 	db	83	;'S'
  4018  00FEE1  50                 	db	80	;'P'
  4019  00FEE2  4C                 	db	76	;'L'
  4020  00FEE3  41                 	db	65	;'A'
  4021  00FEE4  59                 	db	89	;'Y'
  4022  00FEE5  20                 	db	32
  4023  00FEE6  25                 	db	37
  4024  00FEE7  73                 	db	115	;'s'
  4025  00FEE8  20                 	db	32
  4026  00FEE9  20                 	db	32
  4027  00FEEA  20                 	db	32
  4028  00FEEB  20                 	db	32
  4029  00FEEC  20                 	db	32
  4030  00FEED  20                 	db	32
  4031  00FEEE  20                 	db	32
  4032  00FEEF  20                 	db	32
  4033  00FEF0  20                 	db	32
  4034  00FEF1  20                 	db	32
  4035  00FEF2  00                 	db	0
  4036  00FEF3                     STR_4:
  4037                           
  4038                           ; BSR set to: 57
  4039  00FEF3  20                 	db	32
  4040  00FEF4  4E                 	db	78	;'N'
  4041  00FEF5  53                 	db	83	;'S'
  4042  00FEF6  41                 	db	65	;'A'
  4043  00FEF7  53                 	db	83	;'S'
  4044  00FEF8  50                 	db	80	;'P'
  4045  00FEF9  4F                 	db	79	;'O'
  4046  00FEFA  4F                 	db	79	;'O'
  4047  00FEFB  4B                 	db	75	;'K'
  4048  00FEFC  20                 	db	32
  4049  00FEFD  20                 	db	32
  4050  00FEFE  20                 	db	32
  4051  00FEFF  20                 	db	32
  4052  00FF00  20                 	db	32
  4053  00FF01  20                 	db	32
  4054  00FF02  20                 	db	32
  4055  00FF03  20                 	db	32
  4056  00FF04  20                 	db	32
  4057  00FF05  20                 	db	32
  4058  00FF06  20                 	db	32
  4059  00FF07  00                 	db	0
  4060  00FF08                     STR_2:
  4061                           
  4062                           ; BSR set to: 57
  4063  00FF08  20                 	db	32
  4064  00FF09  56                 	db	86	;'V'
  4065  00FF0A  65                 	db	101	;'e'
  4066  00FF0B  72                 	db	114	;'r'
  4067  00FF0C  73                 	db	115	;'s'
  4068  00FF0D  69                 	db	105	;'i'
  4069  00FF0E  6F                 	db	111	;'o'
  4070  00FF0F  6E                 	db	110	;'n'
  4071  00FF10  20                 	db	32
  4072  00FF11  25                 	db	37
  4073  00FF12  73                 	db	115	;'s'
  4074  00FF13  20                 	db	32
  4075  00FF14  20                 	db	32
  4076  00FF15  20                 	db	32
  4077  00FF16  20                 	db	32
  4078  00FF17  20                 	db	32
  4079  00FF18  20                 	db	32
  4080  00FF19  20                 	db	32
  4081  00FF1A  20                 	db	32
  4082  00FF1B  20                 	db	32
  4083  00FF1C  00                 	db	0
  4084  00FF1D                     STR_1:
  4085                           
  4086                           ; BSR set to: 57
  4087  00FF1D  20                 	db	32
  4088  00FF1E  4D                 	db	77	;'M'
  4089  00FF1F  42                 	db	66	;'B'
  4090  00FF20  4D                 	db	77	;'M'
  4091  00FF21  43                 	db	67	;'C'
  4092  00FF22  20                 	db	32
  4093  00FF23  53                 	db	83	;'S'
  4094  00FF24  4F                 	db	79	;'O'
  4095  00FF25  4C                 	db	76	;'L'
  4096  00FF26  41                 	db	65	;'A'
  4097  00FF27  52                 	db	82	;'R'
  4098  00FF28  4D                 	db	77	;'M'
  4099  00FF29  4F                 	db	79	;'O'
  4100  00FF2A  4E                 	db	78	;'N'
  4101  00FF2B  20                 	db	32
  4102  00FF2C  20                 	db	32
  4103  00FF2D  20                 	db	32
  4104  00FF2E  20                 	db	32
  4105  00FF2F  20                 	db	32
  4106  00FF30  20                 	db	32
  4107  00FF31  00                 	db	0
  4108  00FF32                     STR_14:
  4109                           
  4110                           ; BSR set to: 57
  4111  00FF32  52                 	db	82	;'R'
  4112  00FF33  65                 	db	101	;'e'
  4113  00FF34  61                 	db	97	;'a'
  4114  00FF35  64                 	db	100	;'d'
  4115  00FF36  20                 	db	32
  4116  00FF37  45                 	db	69	;'E'
  4117  00FF38  45                 	db	69	;'E'
  4118  00FF39  50                 	db	80	;'P'
  4119  00FF3A  52                 	db	82	;'R'
  4120  00FF3B  4F                 	db	79	;'O'
  4121  00FF3C  4D                 	db	77	;'M'
  4122  00FF3D  20                 	db	32
  4123  00FF3E  44                 	db	68	;'D'
  4124  00FF3F  41                 	db	65	;'A'
  4125  00FF40  54                 	db	84	;'T'
  4126  00FF41  41                 	db	65	;'A'
  4127  00FF42  20                 	db	32
  4128  00FF43  20                 	db	32
  4129  00FF44  20                 	db	32
  4130  00FF45  20                 	db	32
  4131  00FF46  00                 	db	0
  4132  00FF47                     STR_60:
  4133                           
  4134                           ; BSR set to: 57
  4135  00FF47  52                 	db	82	;'R'
  4136  00FF48  65                 	db	101	;'e'
  4137  00FF49  6C                 	db	108	;'l'
  4138  00FF4A  65                 	db	101	;'e'
  4139  00FF4B  61                 	db	97	;'a'
  4140  00FF4C  73                 	db	115	;'s'
  4141  00FF4D  65                 	db	101	;'e'
  4142  00FF4E  20                 	db	32
  4143  00FF4F  62                 	db	98	;'b'
  4144  00FF50  75                 	db	117	;'u'
  4145  00FF51  74                 	db	116	;'t'
  4146  00FF52  74                 	db	116	;'t'
  4147  00FF53  6F                 	db	111	;'o'
  4148  00FF54  6E                 	db	110	;'n'
  4149  00FF55  20                 	db	32
  4150  00FF56  25                 	db	37
  4151  00FF57  63                 	db	99	;'c'
  4152  00FF58  20                 	db	32
  4153  00FF59  20                 	db	32
  4154  00FF5A  20                 	db	32
  4155  00FF5B  00                 	db	0
  4156  00FF5C                     STR_15:
  4157                           
  4158                           ; BSR set to: 57
  4159  00FF5C  49                 	db	73	;'I'
  4160  00FF5D  6E                 	db	110	;'n'
  4161  00FF5E  76                 	db	118	;'v'
  4162  00FF5F  61                 	db	97	;'a'
  4163  00FF60  6C                 	db	108	;'l'
  4164  00FF61  69                 	db	105	;'i'
  4165  00FF62  64                 	db	100	;'d'
  4166  00FF63  20                 	db	32
  4167  00FF64  45                 	db	69	;'E'
  4168  00FF65  45                 	db	69	;'E'
  4169  00FF66  50                 	db	80	;'P'
  4170  00FF67  52                 	db	82	;'R'
  4171  00FF68  4F                 	db	79	;'O'
  4172  00FF69  4D                 	db	77	;'M'
  4173  00FF6A  20                 	db	32
  4174  00FF6B  44                 	db	68	;'D'
  4175  00FF6C  41                 	db	65	;'A'
  4176  00FF6D  54                 	db	84	;'T'
  4177  00FF6E  41                 	db	65	;'A'
  4178  00FF6F  20                 	db	32
  4179  00FF70  00                 	db	0
  4180  00FF71                     STR_77:
  4181                           
  4182                           ; BSR set to: 57
  4183  00FF71  48                 	db	72	;'H'
  4184  00FF72  45                 	db	69	;'E'
  4185  00FF73  4C                 	db	76	;'L'
  4186  00FF74  50                 	db	80	;'P'
  4187  00FF75  20                 	db	32
  4188  00FF76  25                 	db	37
  4189  00FF77  73                 	db	115	;'s'
  4190  00FF78  20                 	db	32
  4191  00FF79  20                 	db	32
  4192  00FF7A  20                 	db	32
  4193  00FF7B  20                 	db	32
  4194  00FF7C  20                 	db	32
  4195  00FF7D  20                 	db	32
  4196  00FF7E  20                 	db	32
  4197  00FF7F  20                 	db	32
  4198  00FF80  20                 	db	32
  4199  00FF81  20                 	db	32
  4200  00FF82  20                 	db	32
  4201  00FF83  00                 	db	0
  4202  00FF84                     
  4203                           ; BSR set to: 57
  4204  00FF84  25                 	db	37
  4205  00FF85  64                 	db	100	;'d'
  4206  00FF86  20                 	db	32
  4207  00FF87  25                 	db	37
  4208  00FF88  32                 	db	50	;'2'
  4209  00FF89  2E                 	db	46
  4210  00FF8A  34                 	db	52	;'4'
  4211  00FF8B  66                 	db	102	;'f'
  4212  00FF8C  2C                 	db	44
  4213  00FF8D  20                 	db	32
  4214  00FF8E  25                 	db	37
  4215  00FF8F  64                 	db	100	;'d'
  4216  00FF90  20                 	db	32
  4217  00FF91  20                 	db	32
  4218  00FF92  20                 	db	32
  4219  00FF93  23                 	db	35
  4220  00FF94  20                 	db	32
  4221  00FF95  00                 	db	0
  4222  00FF96                     STR_33:
  4223                           
  4224                           ; BSR set to: 57
  4225  00FF96  25                 	db	37
  4226  00FF97  64                 	db	100	;'d'
  4227  00FF98  20                 	db	32
  4228  00FF99  25                 	db	37
  4229  00FF9A  32                 	db	50	;'2'
  4230  00FF9B  2E                 	db	46
  4231  00FF9C  34                 	db	52	;'4'
  4232  00FF9D  66                 	db	102	;'f'
  4233  00FF9E  20                 	db	32
  4234  00FF9F  20                 	db	32
  4235  00FFA0  20                 	db	32
  4236  00FFA1  25                 	db	37
  4237  00FFA2  64                 	db	100	;'d'
  4238  00FFA3  20                 	db	32
  4239  00FFA4  20                 	db	32
  4240  00FFA5  20                 	db	32
  4241  00FFA6  00                 	db	0
  4242  00FFA7                     STR_81:
  4243                           
  4244                           ; BSR set to: 57
  4245  00FFA7  76                 	db	118	;'v'
  4246  00FFA8  74                 	db	116	;'t'
  4247  00FFA9  65                 	db	101	;'e'
  4248  00FFAA  72                 	db	114	;'r'
  4249  00FFAB  6D                 	db	109	;'m'
  4250  00FFAC  20                 	db	32
  4251  00FFAD  25                 	db	37
  4252  00FFAE  78                 	db	120	;'x'
  4253  00FFAF  3A                 	db	58	;':'
  4254  00FFB0  25                 	db	37
  4255  00FFB1  78                 	db	120	;'x'
  4256  00FFB2  20                 	db	32
  4257  00FFB3  20                 	db	32
  4258  00FFB4  20                 	db	32
  4259  00FFB5  00                 	db	0
  4260  00FFB6                     STR_75:
  4261                           
  4262                           ; BSR set to: 57
  4263  00FFB6  46                 	db	70	;'F'
  4264  00FFB7  65                 	db	101	;'e'
  4265  00FFB8  62                 	db	98	;'b'
  4266  00FFB9  20                 	db	32
  4267  00FFBA  31                 	db	49	;'1'
  4268  00FFBB  39                 	db	57	;'9'
  4269  00FFBC  20                 	db	32
  4270  00FFBD  32                 	db	50	;'2'
  4271  00FFBE  30                 	db	48	;'0'
  4272  00FFBF  32                 	db	50	;'2'
  4273  00FFC0  30                 	db	48	;'0'
  4274  00FFC1  00                 	db	0
  4275  00FFC2                     STR_79:
  4276                           
  4277                           ; BSR set to: 57
  4278  00FFC2  25                 	db	37
  4279  00FFC3  73                 	db	115	;'s'
  4280  00FFC4  20                 	db	32
  4281  00FFC5  20                 	db	32
  4282  00FFC6  20                 	db	32
  4283  00FFC7  20                 	db	32
  4284  00FFC8  20                 	db	32
  4285  00FFC9  20                 	db	32
  4286  00FFCA  20                 	db	32
  4287  00FFCB  00                 	db	0
  4288  00FFCC                     STR_76:
  4289                           
  4290                           ; BSR set to: 57
  4291  00FFCC  31                 	db	49	;'1'
  4292  00FFCD  39                 	db	57	;'9'
  4293  00FFCE  3A                 	db	58	;':'
  4294  00FFCF  33                 	db	51	;'3'
  4295  00FFD0  32                 	db	50	;'2'
  4296  00FFD1  3A                 	db	58	;':'
  4297  00FFD2  32                 	db	50	;'2'
  4298  00FFD3  35                 	db	53	;'5'
  4299  00FFD4  00                 	db	0
  4300  00FFD5                     STR_3:
  4301                           
  4302                           ; BSR set to: 57
  4303  00FFD5  31                 	db	49	;'1'
  4304  00FFD6  2E                 	db	46
  4305  00FFD7  32                 	db	50	;'2'
  4306  00FFD8  37                 	db	55	;'7'
  4307  00FFD9  00                 	db	0
  4308  00FFDA                     STR_96:
  4309                           
  4310                           ; BSR set to: 57
  4311  00FFDA  49                 	db	73	;'I'
  4312  00FFDB  4E                 	db	78	;'N'
  4313  00FFDC  46                 	db	70	;'F'
  4314  00FFDD  00                 	db	0
  4315  00FFDE                     STR_100:
  4316                           
  4317                           ; BSR set to: 57
  4318  00FFDE  4E                 	db	78	;'N'
  4319  00FFDF  41                 	db	65	;'A'
  4320  00FFE0  4E                 	db	78	;'N'
  4321  00FFE1  00                 	db	0
  4322  00FFE2                     STR_97:
  4323                           
  4324                           ; BSR set to: 57
  4325  00FFE2  69                 	db	105	;'i'
  4326  00FFE3  6E                 	db	110	;'n'
  4327  00FFE4  66                 	db	102	;'f'
  4328  00FFE5  00                 	db	0
  4329  00FFE6                     STR_101:
  4330                           
  4331                           ; BSR set to: 57
  4332  00FFE6  6E                 	db	110	;'n'
  4333  00FFE7  61                 	db	97	;'a'
  4334  00FFE8  6E                 	db	110	;'n'
  4335  00FFE9  00                 	db	0
  4336  00FFEA                     STR_127:
  4337                           
  4338                           ; BSR set to: 57
  4339  00FFEA  6C                 	db	108	;'l'
  4340  00FFEB  58                 	db	88	;'X'
  4341  00FFEC  00                 	db	0
  4342  00FFED                     STR_104:
  4343                           
  4344                           ; BSR set to: 57
  4345  00FFED  6C                 	db	108	;'l'
  4346  00FFEE  64                 	db	100	;'d'
  4347  00FFEF  00                 	db	0
  4348  00FFF0                     STR_113:
  4349                           
  4350                           ; BSR set to: 57
  4351  00FFF0  6C                 	db	108	;'l'
  4352  00FFF1  66                 	db	102	;'f'
  4353  00FFF2  00                 	db	0
  4354  00FFF3                     STR_108:
  4355                           
  4356                           ; BSR set to: 57
  4357  00FFF3  6C                 	db	108	;'l'
  4358  00FFF4  69                 	db	105	;'i'
  4359  00FFF5  00                 	db	0
  4360  00FFF6                     STR_118:
  4361                           
  4362                           ; BSR set to: 57
  4363  00FFF6  6C                 	db	108	;'l'
  4364  00FFF7  75                 	db	117	;'u'
  4365  00FFF8  00                 	db	0
  4366  00FFF9                     STR_123:
  4367                           
  4368                           ; BSR set to: 57
  4369  00FFF9  6C                 	db	108	;'l'
  4370  00FFFA  78                 	db	120	;'x'
  4371  00FFFB  00                 	db	0
  4372  00FFFC                     STR_74:
  4373                           
  4374                           ; BSR set to: 57
  4375  00FFFC  25                 	db	37
  4376  00FFFD  73                 	db	115	;'s'
  4377  00FFFE  00                 	db	0
  4378  0000                     
  4379                           ; #config settings
  4380  00FFFF  00                 	db	0	; dummy byte at the end
  4381  0000                     
  4382                           	psect	cinit
  4383  01FBEC                     __pcinit:
  4384                           	opt callstack 0
  4385  01FBEC                     start_initialization:
  4386                           	opt callstack 0
  4387  01FBEC                     __initialization:
  4388                           	opt callstack 0
  4389                           
  4390                           ; Initialize objects allocated to BIGRAM (832 bytes)
  4391                           ; load TBLPTR registers with __pidataBIGRAM
  4392  01FBEC  0E3A               	movlw	low __pidataBIGRAM
  4393  01FBEE  6EF6               	movwf	tblptrl,c
  4394  01FBF0  0EA8               	movlw	high __pidataBIGRAM
  4395  01FBF2  6EF7               	movwf	tblptrh,c
  4396  01FBF4  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  4397  01FBF6  6EF8               	movwf	tblptru,c
  4398  01FBF8  EE01  F2FF         	lfsr	0,__pdataBIGRAM
  4399  01FBFC  EE20 F340          	lfsr	2,832
  4400  01FC00                     copy_data0:
  4401  01FC00  0009               	tblrd		*+
  4402  01FC02  006F FFD7 FFEE     	movff	tablat,postinc0
  4403  01FC08  50DD               	movf	postdec2,w,c
  4404  01FC0A  50D9               	movf	fsr2l,w,c
  4405  01FC0C  E1F9               	bnz	copy_data0
  4406  01FC0E  50DA               	movf	fsr2h,w,c
  4407  01FC10  E1F7               	bnz	copy_data0
  4408                           
  4409                           ; Initialize objects allocated to BANK2 (188 bytes)
  4410                           ; load TBLPTR registers with __pidataBANK2
  4411  01FC12  0EC8               	movlw	low __pidataBANK2
  4412  01FC14  6EF6               	movwf	tblptrl,c
  4413  01FC16  0E05               	movlw	high __pidataBANK2
  4414  01FC18  6EF7               	movwf	tblptrh,c
  4415  01FC1A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  4416  01FC1C  6EF8               	movwf	tblptru,c
  4417  01FC1E  EE00  F200         	lfsr	0,__pdataBANK2
  4418  01FC22  EE20 F0BC          	lfsr	2,188
  4419  01FC26                     copy_data1:
  4420  01FC26  0009               	tblrd		*+
  4421  01FC28  006F FFD7 FFEE     	movff	tablat,postinc0
  4422  01FC2E  50DD               	movf	postdec2,w,c
  4423  01FC30  50D9               	movf	fsr2l,w,c
  4424  01FC32  E1F9               	bnz	copy_data1
  4425                           
  4426                           ; Initialize objects allocated to BANK1 (164 bytes)
  4427                           ; load TBLPTR registers with __pidataBANK1
  4428  01FC34  0E56               	movlw	low __pidataBANK1
  4429  01FC36  6EF6               	movwf	tblptrl,c
  4430  01FC38  0E0B               	movlw	high __pidataBANK1
  4431  01FC3A  6EF7               	movwf	tblptrh,c
  4432  01FC3C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  4433  01FC3E  6EF8               	movwf	tblptru,c
  4434  01FC40  EE00  F100         	lfsr	0,__pdataBANK1
  4435  01FC44  EE20 F0A4          	lfsr	2,164
  4436  01FC48                     copy_data2:
  4437  01FC48  0009               	tblrd		*+
  4438  01FC4A  006F FFD7 FFEE     	movff	tablat,postinc0
  4439  01FC50  50DD               	movf	postdec2,w,c
  4440  01FC52  50D9               	movf	fsr2l,w,c
  4441  01FC54  E1F9               	bnz	copy_data2
  4442                           
  4443                           ; Clear objects allocated to BIGRAM (642 bytes)
  4444  01FC56  EE02  F23F         	lfsr	0,__pbssBIGRAM
  4445  01FC5A  EE20 F282          	lfsr	2,642
  4446  01FC5E                     clear_0:
  4447  01FC5E  6AEE               	clrf	postinc0,c
  4448  01FC60  50DD               	movf	postdec2,w,c
  4449  01FC62  50D9               	movf	fsr2l,w,c
  4450  01FC64  E1FC               	bnz	clear_0
  4451  01FC66  50DA               	movf	fsr2h,w,c
  4452  01FC68  E1FA               	bnz	clear_0
  4453                           
  4454                           ; Clear objects allocated to BANK6 (255 bytes)
  4455  01FC6A  EE01  F200         	lfsr	0,__pbssBANK6
  4456  01FC6E  EE20 F0FF          	lfsr	2,255
  4457  01FC72                     clear_1:
  4458  01FC72  6AEE               	clrf	postinc0,c
  4459  01FC74  50DD               	movf	postdec2,w,c
  4460  01FC76  50D9               	movf	fsr2l,w,c
  4461  01FC78  E1FC               	bnz	clear_1
  4462  01FC7A  50DA               	movf	fsr2h,w,c
  4463  01FC7C  E1FA               	bnz	clear_1
  4464                           
  4465                           ; Clear objects allocated to BANK5 (134 bytes)
  4466  01FC7E  EE01  F100         	lfsr	0,__pbssBANK5
  4467  01FC82  0E86               	movlw	134
  4468  01FC84                     clear_2:
  4469  01FC84  6AEE               	clrf	postinc0,c
  4470  01FC86  06E8               	decf	wreg,f,c
  4471  01FC88  E1FD               	bnz	clear_2
  4472                           
  4473                           ; Clear objects allocated to BANK4 (219 bytes)
  4474  01FC8A  EE01  F000         	lfsr	0,__pbssBANK4
  4475  01FC8E  0EDB               	movlw	219
  4476  01FC90                     clear_3:
  4477  01FC90  6AEE               	clrf	postinc0,c
  4478  01FC92  06E8               	decf	wreg,f,c
  4479  01FC94  E1FD               	bnz	clear_3
  4480                           
  4481                           ; Clear objects allocated to BANK3 (247 bytes)
  4482  01FC96  EE00  F300         	lfsr	0,__pbssBANK3
  4483  01FC9A  0EF7               	movlw	247
  4484  01FC9C                     clear_4:
  4485  01FC9C  6AEE               	clrf	postinc0,c
  4486  01FC9E  06E8               	decf	wreg,f,c
  4487  01FCA0  E1FD               	bnz	clear_4
  4488                           
  4489                           ; Clear objects allocated to BANK2 (42 bytes)
  4490  01FCA2  EE00  F2BC         	lfsr	0,__pbssBANK2
  4491  01FCA6  0E2A               	movlw	42
  4492  01FCA8                     clear_5:
  4493  01FCA8  6AEE               	clrf	postinc0,c
  4494  01FCAA  06E8               	decf	wreg,f,c
  4495  01FCAC  E1FD               	bnz	clear_5
  4496                           
  4497                           ; Clear objects allocated to BANK1 (89 bytes)
  4498  01FCAE  EE00  F1A4         	lfsr	0,__pbssBANK1
  4499  01FCB2  0E59               	movlw	89
  4500  01FCB4                     clear_6:
  4501  01FCB4  6AEE               	clrf	postinc0,c
  4502  01FCB6  06E8               	decf	wreg,f,c
  4503  01FCB8  E1FD               	bnz	clear_6
  4504                           
  4505                           ; Clear objects allocated to BANK0 (133 bytes)
  4506  01FCBA  EE00  F060         	lfsr	0,__pbssBANK0
  4507  01FCBE  0E85               	movlw	133
  4508  01FCC0                     clear_7:
  4509  01FCC0  6AEE               	clrf	postinc0,c
  4510  01FCC2  06E8               	decf	wreg,f,c
  4511  01FCC4  E1FD               	bnz	clear_7
  4512                           
  4513                           ; Clear objects allocated to COMRAM (14 bytes)
  4514  01FCC6  EE00  F04A         	lfsr	0,__pbssCOMRAM
  4515  01FCCA  0E0E               	movlw	14
  4516  01FCCC                     clear_8:
  4517  01FCCC  6AEE               	clrf	postinc0,c
  4518  01FCCE  06E8               	decf	wreg,f,c
  4519  01FCD0  E1FD               	bnz	clear_8
  4520                           
  4521                           ;
  4522                           ; Setup IVTBASE
  4523                           ;
  4524  01FCD2  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  4525  01FCD4  6ED5               	movwf	213,c
  4526  01FCD6  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  4527  01FCD8  6ED6               	movwf	214,c
  4528  01FCDA  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  4529  01FCDC  6ED7               	movwf	215,c
  4530  01FCDE                     end_of_initialization:
  4531                           	opt callstack 0
  4532  01FCDE                     __end_of__initialization:
  4533                           	opt callstack 0
  4534  01FCDE  0100               	movlb	0
  4535  01FCE0  EF00  F080         	goto	_main	;jump to C main() function
  4536                           
  4537                           	psect	bssCOMRAM
  4538  00004A                     __pbssCOMRAM:
  4539                           	opt callstack 0
  4540  00004A                     _width:
  4541                           	opt callstack 0
  4542  00004A                     	ds	2
  4543  00004C                     _prec:
  4544                           	opt callstack 0
  4545  00004C                     	ds	2
  4546  00004E                     _flags:
  4547                           	opt callstack 0
  4548  00004E                     	ds	2
  4549  000050                     calc_bsoc@log_update_wait:
  4550                           	opt callstack 0
  4551  000050                     	ds	1
  4552  000051                     check_day_time@day_delay:
  4553                           	opt callstack 0
  4554  000051                     	ds	1
  4555  000052                     dac_spi_control@init:
  4556                           	opt callstack 0
  4557  000052                     	ds	1
  4558  000053                     display_history@bwait:
  4559                           	opt callstack 0
  4560  000053                     	ds	1
  4561  000054                     _uart2RxHead:
  4562                           	opt callstack 0
  4563  000054                     	ds	1
  4564  000055                     _uart2TxBufferRemaining:
  4565                           	opt callstack 0
  4566  000055                     	ds	1
  4567  000056                     _uart2TxTail:
  4568                           	opt callstack 0
  4569  000056                     	ds	1
  4570  000057                     _uart1RxHead:
  4571                           	opt callstack 0
  4572  000057                     	ds	1
  4573                           
  4574                           	psect	bssBANK0
  4575  000060                     __pbssBANK0:
  4576                           	opt callstack 0
  4577  000060                     _spi_link:
  4578                           	opt callstack 0
  4579  000060                     	ds	12
  4580  00006C                     ___tzname:
  4581                           	opt callstack 0
  4582  00006C                     	ds	4
  4583  000070                     ___timezone:
  4584                           	opt callstack 0
  4585  000070                     	ds	4
  4586  000074                     floorf@F524:
  4587                           	opt callstack 0
  4588  000074                     	ds	4
  4589  000078                     fabsf@F463:
  4590                           	opt callstack 0
  4591  000078                     	ds	4
  4592  00007C                     ___fpclassifyf@F463:
  4593                           	opt callstack 0
  4594  00007C                     	ds	4
  4595  000080                     calc_ror_data@bcror:
  4596                           	opt callstack 0
  4597  000080                     	ds	4
  4598  000084                     calc_ror_data@bvror:
  4599                           	opt callstack 0
  4600  000084                     	ds	4
  4601  000088                     calc_model_data@bcror:
  4602                           	opt callstack 0
  4603  000088                     	ds	4
  4604  00008C                     calc_model_data@bvror:
  4605                           	opt callstack 0
  4606  00008C                     	ds	4
  4607  000090                     wdtdelay@dcount:
  4608                           	opt callstack 0
  4609  000090                     	ds	4
  4610  000094                     _P:
  4611                           	opt callstack 0
  4612  000094                     	ds	4
  4613  000098                     _TMR3_InterruptHandler:
  4614                           	opt callstack 0
  4615  000098                     	ds	3
  4616  00009B                     _TMR5_InterruptHandler:
  4617                           	opt callstack 0
  4618  00009B                     	ds	3
  4619  00009E                     _TMR6_InterruptHandler:
  4620                           	opt callstack 0
  4621  00009E                     	ds	3
  4622  0000A1                     _ADCC_ADTI_InterruptHandler:
  4623                           	opt callstack 0
  4624  0000A1                     	ds	3
  4625  0000A4                     _ADCC_ADI_InterruptHandler:
  4626                           	opt callstack 0
  4627  0000A4                     	ds	3
  4628  0000A7                     _UART1_RxInterruptHandler:
  4629                           	opt callstack 0
  4630  0000A7                     	ds	3
  4631  0000AA                     _UART2_TxInterruptHandler:
  4632                           	opt callstack 0
  4633  0000AA                     	ds	3
  4634  0000AD                     _UART2_RxInterruptHandler:
  4635                           	opt callstack 0
  4636  0000AD                     	ds	3
  4637  0000B0                     _INT1_InterruptHandler:
  4638                           	opt callstack 0
  4639  0000B0                     	ds	3
  4640  0000B3                     _INT0_InterruptHandler:
  4641                           	opt callstack 0
  4642  0000B3                     	ds	3
  4643  0000B6                     _dst_off:
  4644                           	opt callstack 0
  4645  0000B6                     	ds	2
  4646  0000B8                     ___daylight:
  4647                           	opt callstack 0
  4648  0000B8                     	ds	2
  4649  0000BA                     _nout:
  4650                           	opt callstack 0
  4651  0000BA                     	ds	2
  4652  0000BC                     _t_mbmc:
  4653                           	opt callstack 0
  4654  0000BC                     	ds	2
  4655  0000BE                     TMR3_ISR@CountCallBack:
  4656                           	opt callstack 0
  4657  0000BE                     	ds	2
  4658  0000C0                     _timer3ReloadVal:
  4659                           	opt callstack 0
  4660  0000C0                     	ds	2
  4661  0000C2                     TMR5_ISR@CountCallBack:
  4662                           	opt callstack 0
  4663  0000C2                     	ds	2
  4664  0000C4                     _timer5ReloadVal:
  4665                           	opt callstack 0
  4666  0000C4                     	ds	2
  4667  0000C6                     esr_check@esr_state:
  4668                           	opt callstack 0
  4669  0000C6                     	ds	1
  4670  0000C7                     dac_spi_control@SB:
  4671                           	opt callstack 0
  4672  0000C7                     	ds	1
  4673  0000C8                     dac_spi_control@SC:
  4674                           	opt callstack 0
  4675  0000C8                     	ds	1
  4676  0000C9                     dac_spi_control@S2:
  4677                           	opt callstack 0
  4678  0000C9                     	ds	1
  4679  0000CA                     dac_spi_control@S1:
  4680                           	opt callstack 0
  4681  0000CA                     	ds	1
  4682  0000CB                     dac_spi_control@S0:
  4683                           	opt callstack 0
  4684  0000CB                     	ds	1
  4685  0000CC                     _mode_sw:
  4686                           	opt callstack 0
  4687  0000CC                     	ds	1
  4688  0000CD                     _uart2RxCount:
  4689                           	opt callstack 0
  4690  0000CD                     	ds	1
  4691  0000CE                     _uart2RxTail:
  4692                           	opt callstack 0
  4693  0000CE                     	ds	1
  4694  0000CF                     _uart2TxHead:
  4695                           	opt callstack 0
  4696  0000CF                     	ds	1
  4697  0000D0                     _uart1RxCount:
  4698                           	opt callstack 0
  4699  0000D0                     	ds	1
  4700  0000D1                     _uart1RxTail:
  4701                           	opt callstack 0
  4702  0000D1                     	ds	1
  4703  0000D2                     time@current_time:
  4704                           	opt callstack 0
  4705  0000D2                     	ds	8
  4706  0000DA                     _pclock:
  4707                           	opt callstack 0
  4708  0000DA                     	ds	8
  4709  0000E2                     _crcObj:
  4710                           	opt callstack 0
  4711  0000E2                     	ds	3
  4712                           
  4713                           	psect	bssBANK1
  4714  0001A4                     __pbssBANK1:
  4715                           	opt callstack 0
  4716  0001A4                     _S:
  4717                           	opt callstack 0
  4718  0001A4                     	ds	41
  4719  0001CD                     spinners@s:
  4720                           	opt callstack 0
  4721  0001CD                     	ds	6
  4722  0001D3                     _lock:
  4723                           	opt callstack 0
  4724  0001D3                     	ds	4
  4725  0001D7                     _utctime:
  4726                           	opt callstack 0
  4727  0001D7                     	ds	4
  4728  0001DB                     _r1:
  4729                           	opt callstack 0
  4730  0001DB                     	ds	10
  4731  0001E5                     _r0:
  4732                           	opt callstack 0
  4733  0001E5                     	ds	10
  4734  0001EF                     _dst_name:
  4735                           	opt callstack 0
  4736  0001EF                     	ds	7
  4737  0001F6                     _std_name:
  4738                           	opt callstack 0
  4739  0001F6                     	ds	7
  4740                           
  4741                           	psect	dataBANK1
  4742  000100                     __pdataBANK1:
  4743                           	opt callstack 0
  4744  000100                     _R:
  4745                           	opt callstack 0
  4746  000100                     	ds	155
  4747  00019B                     _H:
  4748                           	opt callstack 0
  4749  00019B                     	ds	9
  4750                           
  4751                           	psect	bssBANK2
  4752  0002BC                     __pbssBANK2:
  4753                           	opt callstack 0
  4754  0002BC                     _tickCount:
  4755                           	opt callstack 0
  4756  0002BC                     	ds	26
  4757  0002D6                     _uart1RxBuffer:
  4758                           	opt callstack 0
  4759  0002D6                     	ds	8
  4760  0002DE                     _seed:
  4761                           	opt callstack 0
  4762  0002DE                     	ds	8
  4763                           
  4764                           	psect	dataBANK2
  4765  000200                     __pdataBANK2:
  4766                           	opt callstack 0
  4767  000200                     stoa@F1166:
  4768                           	opt callstack 0
  4769  000200                     	ds	7
  4770  000207                     _V:
  4771                           	opt callstack 0
  4772  000207                     	ds	181
  4773                           
  4774                           	psect	bssBANK3
  4775  000300                     __pbssBANK3:
  4776                           	opt callstack 0
  4777  000300                     lp_filter@smooth:
  4778                           	opt callstack 0
  4779  000300                     	ds	84
  4780  000354                     _dbuf:
  4781                           	opt callstack 0
  4782  000354                     	ds	80
  4783  0003A4                     	ds	32
  4784  0003C4                     asctime@buf:
  4785                           	opt callstack 0
  4786  0003C4                     	ds	27
  4787  0003DF                     localtime@tm:
  4788                           	opt callstack 0
  4789  0003DF                     	ds	24
  4790                           
  4791                           	psect	bssBANK4
  4792  000400                     __pbssBANK4:
  4793                           	opt callstack 0
  4794  000400                     _uart2TxBuffer:
  4795                           	opt callstack 0
  4796  000400                     	ds	64
  4797  000440                     _r_cal:
  4798                           	opt callstack 0
  4799  000440                     	ds	155
  4800                           
  4801                           	psect	bssBANK5
  4802  000500                     __pbssBANK5:
  4803                           	opt callstack 0
  4804  000500                     _ring_buf2:
  4805                           	opt callstack 0
  4806  000500                     	ds	67
  4807  000543                     _ring_buf1:
  4808                           	opt callstack 0
  4809  000543                     	ds	67
  4810                           
  4811                           	psect	bssBANK6
  4812  000600                     __pbssBANK6:
  4813                           	opt callstack 0
  4814  000600                     _uart2RxBuffer:
  4815                           	opt callstack 0
  4816  000600                     	ds	255
  4817                           
  4818                           	psect	bssBIGRAM
  4819  000A3F                     __pbssBIGRAM:
  4820                           	opt callstack 0
  4821  000A3F                     _D:
  4822                           	opt callstack 0
  4823  000A3F                     	ds	642
  4824                           
  4825                           	psect	dataBIGRAM
  4826  0006FF                     __pdataBIGRAM:
  4827                           	opt callstack 0
  4828  0006FF                     _port_data:
  4829                           	opt callstack 0
  4830  0006FF                     	ds	512
  4831  0008FF                     _C:
  4832                           	opt callstack 0
  4833  0008FF                     	ds	320
  4834                           
  4835                           	psect	cstackBANK0
  4836  0000E5                     __pcstackBANK0:
  4837                           	opt callstack 0
  4838  0000E5                     ??_TMR3_ISR:
  4839                           
  4840                           ; 1 bytes @ 0x0
  4841  0000E5                     	ds	25
  4842                           
  4843                           	psect	cstackCOMRAM
  4844  000001                     __pcstackCOMRAM:
  4845                           	opt callstack 0
  4846  000001                     ??_ADCC_ThresholdISR:
  4847  000001                     
  4848                           ; 1 bytes @ 0x0
  4849  000001                     	ds	5
  4850  000006                     ??_TMR6_ISR:
  4851                           
  4852                           ; 1 bytes @ 0x5
  4853  000006                     	ds	1
  4854  000007                     ??_INT1_ISR:
  4855  000007                     
  4856                           ; 1 bytes @ 0x6
  4857  000007                     	ds	4
  4858  00000B                     ??_TMR5_ISR:
  4859                           
  4860                           ; 1 bytes @ 0xA
  4861  00000B                     	ds	31
  4862                           
  4863 ;;
  4864 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  4865 ;;
  4866 ;; *************** function _main *****************
  4867 ;; Defined at:
  4868 ;;		line 200 in file "main.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;		None
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;  esr_temp        4  [STACK] float 
  4873 ;;  i_esr           2  [STACK] unsigned short 
  4874 ;;  shape           1  [STACK] unsigned char 
  4875 ;;  inp_index       1  [STACK] unsigned char 
  4876 ;;  k               1  [STACK] unsigned char 
  4877 ;;  j               1  [STACK] unsigned char 
  4878 ;;  i               1  [STACK] unsigned char 
  4879 ;;  mode            1  [STACK] enum E17179
  4880 ;;  i_ror           1  [STACK] unsigned char 
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  1  [STACK] void 
  4883 ;; Registers used:
  4884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4894 ;;Total ram usage:        0 bytes
  4895 ;; Hardware stack levels required when called:   28
  4896 ;; This function calls:
  4897 ;;		_SYSTEM_Initialize
  4898 ;;		_StartTimer
  4899 ;;		_TimerDone
  4900 ;;		_WaitMs
  4901 ;;		___fladd
  4902 ;;		___flge
  4903 ;;		___fltol
  4904 ;;		_asctime
  4905 ;;		_calc_model_data
  4906 ;;		_calc_ror_data
  4907 ;;		_check_adc_scan
  4908 ;;		_check_enter_button
  4909 ;;		_check_help
  4910 ;;		_clear_adc_scan
  4911 ;;		_clear_hid_pflags
  4912 ;;		_conv_raw_result
  4913 ;;		_convert_adc_data
  4914 ;;		_current_sensor_cal
  4915 ;;		_display_history
  4916 ;;		_eaDogM_WriteCommand
  4917 ;;		_esr_check
  4918 ;;		_fabsf
  4919 ;;		_get_raw_result
  4920 ;;		_get_switch
  4921 ;;		_get_vterm_ptr
  4922 ;;		_hid_display
  4923 ;;		_init_bsoc
  4924 ;;		_init_display
  4925 ;;		_init_port_dma
  4926 ;;		_load_hist_data
  4927 ;;		_localtime
  4928 ;;		_lp_filter
  4929 ;;		_mode_lamp_dim
  4930 ;;		_read_cal_data
  4931 ;;		_set_dac
  4932 ;;		_set_dac_a
  4933 ;;		_set_dac_b
  4934 ;;		_set_display_info
  4935 ;;		_set_hist_flag
  4936 ;;		_set_load_relay_one
  4937 ;;		_set_load_relay_two
  4938 ;;		_set_time
  4939 ;;		_set_vterm
  4940 ;;		_spinners
  4941 ;;		_sprintf
  4942 ;;		_srand
  4943 ;;		_start_adc_scan
  4944 ;;		_start_switch_handler
  4945 ;;		_static_soc
  4946 ;;		_time
  4947 ;;		_update_cal_data
  4948 ;;		_update_hist_data
  4949 ;;		_update_lcd
  4950 ;;		_wait_lcd_done
  4951 ;;		_write_cal_data
  4952 ;; This function is called by:
  4953 ;;		Startup code after reset
  4954 ;; This function uses a reentrant model
  4955 ;;
  4956                           
  4957                           	psect	text0
  4958  010000                     __ptext0:
  4959                           	opt callstack 0
  4960  010000                     _main:
  4961                           	opt callstack 0
  4962                           
  4963                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4964  010000  0E11               	movlw	17
  4965  010002  26E1               	addwf	fsr1l,f,c
  4966  010004  0E00               	movlw	0
  4967  010006  22E2               	addwfc	fsr1h,f,c
  4968                           
  4969                           ;main.c: 202:  UI_STATES mode;;main.c: 203:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4970                           ;stkvar	_inp_index @ sp[(-17)+11]
  4971                           
  4972                           ;incstack = 0
  4973  010008  0EFA               	movlw	-6
  4974  01000A  6AE3               	clrf	plusw1,c
  4975                           
  4976                           ;stkvar	_i @ sp[(-17)+14]
  4977  01000C  0EFD               	movlw	-3
  4978  01000E  6AE3               	clrf	plusw1,c
  4979                           
  4980                           ;stkvar	_j @ sp[(-17)+13]
  4981  010010  0EFC               	movlw	-4
  4982  010012  6AE3               	clrf	plusw1,c
  4983  010014  2AE3               	incf	plusw1,f,c
  4984                           
  4985                           ;stkvar	_k @ sp[(-17)+12]
  4986  010016  0EFB               	movlw	-5
  4987  010018  6AE3               	clrf	plusw1,c
  4988  01001A  82E3               	bsf	plusw1,1,c
  4989                           
  4990                           ;main.c: 206:  SYSTEM_Initialize();
  4991  01001C  ECF0  F00D         	call	_SYSTEM_Initialize	;wreg free
  4992                           
  4993                           ; BSR set to: 60
  4994                           ;main.c: 209:  (INTCON0bits.GIEH = 1);
  4995  010020  8ED2               	bsf	210,7,c	;volatile
  4996                           
  4997                           ; BSR set to: 60
  4998                           ;main.c: 212:  (INTCON0bits.GIEL = 1);
  4999  010022  8CD2               	bsf	210,6,c	;volatile
  5000                           
  5001                           ; BSR set to: 60
  5002                           ;main.c: 214:  V.ui_state = UI_STATE_INIT;
  5003  010024  0102               	movlb	2	; () banked
  5004  010026  6B07               	clrf	_V& (0+255),b	;volatile
  5005                           
  5006                           ; BSR set to: 2
  5007                           ;main.c: 219:  WaitMs(300);
  5008  010028  0E2C               	movlw	44
  5009  01002A  6EE6               	movwf	postinc1,c
  5010  01002C  0E01               	movlw	1
  5011  01002E  6EE6               	movwf	postinc1,c
  5012  010030  ECA9  F010         	call	_WaitMs	;wreg free
  5013                           
  5014                           ;main.c: 220:  if (PORTBbits.RB0) {
  5015  010034  A0CB               	btfss	203,0,c	;volatile
  5016  010036  D004               	goto	l17428
  5017                           
  5018                           ;main.c: 221:   mode = UI_STATE_HOST;
  5019                           ;stkvar	_mode @ sp[(-17)+15]
  5020  010038  0EFE               	movlw	-2
  5021  01003A  6AE3               	clrf	plusw1,c
  5022  01003C  2AE3               	incf	plusw1,f,c
  5023                           
  5024                           ;main.c: 222:  } else {
  5025  01003E  D004               	goto	l17430
  5026  010040                     l17428:
  5027                           
  5028                           ;main.c: 223:   mode = UI_STATE_LOG;
  5029                           ;stkvar	_mode @ sp[(-17)+15]
  5030  010040  0EFE               	movlw	-2
  5031  010042  6AE3               	clrf	plusw1,c
  5032  010044  80E3               	bsf	plusw1,0,c
  5033  010046  82E3               	bsf	plusw1,1,c	;indir
  5034  010048                     l17430:
  5035                           
  5036                           ;main.c: 226:  if (mode == UI_STATE_HOST) {
  5037                           ;stkvar	_mode @ sp[(-17)+15]
  5038  010048  0EFE               	movlw	-2
  5039  01004A  04E3               	decf	plusw1,w,c
  5040  01004C  A4D8               	btfss	status,2,c
  5041  01004E  D007               	goto	l1455
  5042                           
  5043                           ;main.c: 227:   do { LATDbits.LATD0 = 1; } while(0);
  5044  010050  80BD               	bsf	189,0,c	;volatile
  5045                           
  5046                           ;main.c: 228:   V.mode_pwm = 70;
  5047  010052  0E00               	movlw	0
  5048  010054  0102               	movlb	2	; () banked
  5049  010056  6F9A               	movwf	(_V+147)& (0+255),b	;volatile
  5050  010058  0E46               	movlw	70
  5051  01005A  6F99               	movwf	(_V+146)& (0+255),b	;volatile
  5052                           
  5053                           ;main.c: 229:  } else {
  5054  01005C  D004               	goto	l17434
  5055  01005E                     l1455:
  5056  01005E  90BD               	bcf	189,0,c	;volatile
  5057                           
  5058                           ;main.c: 231:   V.mode_pwm = 0;
  5059  010060  0102               	movlb	2	; () banked
  5060  010062  6B99               	clrf	(_V+146)& (0+255),b	;volatile
  5061  010064  6B9A               	clrf	(_V+147)& (0+255),b	;volatile
  5062  010066                     l17434:
  5063                           
  5064                           ; BSR set to: 2
  5065                           ;main.c: 233:  mode_lamp_dim(V.mode_pwm);
  5066  010066  0060  FA67  FFE6   	movff	_V+146,postinc1
  5067  01006C  0060  FA6B  FFE6   	movff	_V+147,postinc1
  5068  010072  EC55  F014         	call	_mode_lamp_dim	;wreg free
  5069  010076  EFB6  F084         	goto	l17600
  5070  01007A                     l17436:
  5071                           
  5072                           ; BSR set to: 2
  5073                           ;main.c: 241:    init_port_dma();
  5074  01007A  EC45  F011         	call	_init_port_dma	;wreg free
  5075                           
  5076                           ; BSR set to: 59
  5077                           ;main.c: 243:    init_display();
  5078  01007E  ECD1  F000         	call	_init_display	;wreg free
  5079                           
  5080                           ; BSR set to: 61
  5081                           ;main.c: 244:    eaDogM_WriteCommand(0b00001100);
  5082  010082  0E0C               	movlw	12
  5083  010084  6EE6               	movwf	postinc1,c
  5084  010086  ECDD  F014         	call	_eaDogM_WriteCommand	;wreg free
  5085                           
  5086                           ; BSR set to: 61
  5087                           ;main.c: 245:    set_dac();
  5088  01008A  ECFB  F003         	call	_set_dac	;wreg free
  5089                           
  5090                           ;main.c: 249:    set_load_relay_one(1);
  5091  01008E  0E01               	movlw	1
  5092  010090  6EE6               	movwf	postinc1,c
  5093  010092  ECBD  F014         	call	_set_load_relay_one	;wreg free
  5094                           
  5095                           ;main.c: 250:    set_load_relay_two(1);
  5096  010096  0E01               	movlw	1
  5097  010098  6EE6               	movwf	postinc1,c
  5098  01009A  ECB5  F014         	call	_set_load_relay_two	;wreg free
  5099                           
  5100                           ;main.c: 252:    V.ui_state = mode;
  5101                           ;stkvar	_mode @ sp[(-17)+15]
  5102  01009E  0EFE               	movlw	-2
  5103  0100A0  006F FF8C  F207    	movff	plusw1,_V	;volatile
  5104                           
  5105                           ;main.c: 253:    srand(1957);
  5106  0100A6  0EA5               	movlw	165
  5107  0100A8  6EE6               	movwf	postinc1,c
  5108  0100AA  0E07               	movlw	7
  5109  0100AC  6EE6               	movwf	postinc1,c
  5110  0100AE  ECC4  F010         	call	_srand	;wreg free
  5111                           
  5112                           ; BSR set to: 2
  5113                           ;main.c: 254:    set_vterm(0);
  5114  0100B2  0E00               	movlw	0
  5115  0100B4  6EE6               	movwf	postinc1,c
  5116  0100B6  EC1D  F014         	call	_set_vterm	;wreg free
  5117                           
  5118                           ;main.c: 255:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  5119  0100BA  0E1D               	movlw	low STR_1
  5120  0100BC  6EE6               	movwf	postinc1,c
  5121  0100BE  0EFF               	movlw	high STR_1
  5122  0100C0  6EE6               	movwf	postinc1,c
  5123  0100C2  0E00               	movlw	0
  5124  0100C4  6EE6               	movwf	postinc1,c
  5125  0100C6  0E00               	movlw	0
  5126  0100C8  6EE6               	movwf	postinc1,c
  5127  0100CA  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5128  0100CE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5129  0100D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5130  0100DA  0E04               	movlw	4
  5131  0100DC  6EE6               	movwf	postinc1,c
  5132  0100DE  EC71  F0FD         	call	_sprintf	;wreg free
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;main.c: 256:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.27");
  5136  0100E2  0ED5               	movlw	low STR_3
  5137  0100E4  6EE6               	movwf	postinc1,c
  5138  0100E6  0EFF               	movlw	high STR_3
  5139  0100E8  6EE6               	movwf	postinc1,c
  5140  0100EA  0E08               	movlw	low STR_2
  5141  0100EC  6EE6               	movwf	postinc1,c
  5142  0100EE  0EFF               	movlw	high STR_2
  5143  0100F0  6EE6               	movwf	postinc1,c
  5144  0100F2  0E00               	movlw	0
  5145  0100F4  6EE6               	movwf	postinc1,c
  5146  0100F6  0E01               	movlw	1
  5147  0100F8  6EE6               	movwf	postinc1,c
  5148  0100FA  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5149  0100FE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5150  010104  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5151  01010A  0E06               	movlw	6
  5152  01010C  6EE6               	movwf	postinc1,c
  5153  01010E  EC71  F0FD         	call	_sprintf	;wreg free
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;main.c: 257:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  5157  010112  0EF3               	movlw	low STR_4
  5158  010114  6EE6               	movwf	postinc1,c
  5159  010116  0EFE               	movlw	high STR_4
  5160  010118  6EE6               	movwf	postinc1,c
  5161  01011A  0E00               	movlw	0
  5162  01011C  6EE6               	movwf	postinc1,c
  5163  01011E  0E02               	movlw	2
  5164  010120  6EE6               	movwf	postinc1,c
  5165  010122  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5166  010126  0060  F0AB  FFE6   	movff	btemp,postinc1
  5167  01012C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5168  010132  0E04               	movlw	4
  5169  010134  6EE6               	movwf	postinc1,c
  5170  010136  EC71  F0FD         	call	_sprintf	;wreg free
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;main.c: 258:    sprintf(get_vterm_ptr(3, 0), "                    ");
  5174  01013A  0EB9               	movlw	low (STR_20+2)
  5175  01013C  6EE6               	movwf	postinc1,c
  5176  01013E  0EFB               	movlw	high (STR_20+2)
  5177  010140  6EE6               	movwf	postinc1,c
  5178  010142  0E00               	movlw	0
  5179  010144  6EE6               	movwf	postinc1,c
  5180  010146  0E03               	movlw	3
  5181  010148  6EE6               	movwf	postinc1,c
  5182  01014A  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5183  01014E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5184  010154  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5185  01015A  0E04               	movlw	4
  5186  01015C  6EE6               	movwf	postinc1,c
  5187  01015E  EC71  F0FD         	call	_sprintf	;wreg free
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;main.c: 259:    sprintf(get_vterm_ptr(0, 1), "                    ");
  5191  010162  0EB9               	movlw	low (STR_20+2)
  5192  010164  6EE6               	movwf	postinc1,c
  5193  010166  0EFB               	movlw	high (STR_20+2)
  5194  010168  6EE6               	movwf	postinc1,c
  5195  01016A  0E01               	movlw	1
  5196  01016C  6EE6               	movwf	postinc1,c
  5197  01016E  0E00               	movlw	0
  5198  010170  6EE6               	movwf	postinc1,c
  5199  010172  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5200  010176  0060  F0AB  FFE6   	movff	btemp,postinc1
  5201  01017C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5202  010182  0E04               	movlw	4
  5203  010184  6EE6               	movwf	postinc1,c
  5204  010186  EC71  F0FD         	call	_sprintf	;wreg free
  5205                           
  5206                           ; BSR set to: 0
  5207                           ;main.c: 260:    sprintf(get_vterm_ptr(1, 1), "                    ");
  5208  01018A  0EB9               	movlw	low (STR_20+2)
  5209  01018C  6EE6               	movwf	postinc1,c
  5210  01018E  0EFB               	movlw	high (STR_20+2)
  5211  010190  6EE6               	movwf	postinc1,c
  5212  010192  0E01               	movlw	1
  5213  010194  6EE6               	movwf	postinc1,c
  5214  010196  0E01               	movlw	1
  5215  010198  6EE6               	movwf	postinc1,c
  5216  01019A  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5217  01019E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5218  0101A4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5219  0101AA  0E04               	movlw	4
  5220  0101AC  6EE6               	movwf	postinc1,c
  5221  0101AE  EC71  F0FD         	call	_sprintf	;wreg free
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;main.c: 261:    sprintf(get_vterm_ptr(2, 1), "                    ");
  5225  0101B2  0EB9               	movlw	low (STR_20+2)
  5226  0101B4  6EE6               	movwf	postinc1,c
  5227  0101B6  0EFB               	movlw	high (STR_20+2)
  5228  0101B8  6EE6               	movwf	postinc1,c
  5229  0101BA  0E01               	movlw	1
  5230  0101BC  6EE6               	movwf	postinc1,c
  5231  0101BE  0E02               	movlw	2
  5232  0101C0  6EE6               	movwf	postinc1,c
  5233  0101C2  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5234  0101C6  0060  F0AB  FFE6   	movff	btemp,postinc1
  5235  0101CC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5236  0101D2  0E04               	movlw	4
  5237  0101D4  6EE6               	movwf	postinc1,c
  5238  0101D6  EC71  F0FD         	call	_sprintf	;wreg free
  5239                           
  5240                           ; BSR set to: 0
  5241                           ;main.c: 262:    sprintf(get_vterm_ptr(3, 1), "                    ");
  5242  0101DA  0EB9               	movlw	low (STR_20+2)
  5243  0101DC  6EE6               	movwf	postinc1,c
  5244  0101DE  0EFB               	movlw	high (STR_20+2)
  5245  0101E0  6EE6               	movwf	postinc1,c
  5246  0101E2  0E01               	movlw	1
  5247  0101E4  6EE6               	movwf	postinc1,c
  5248  0101E6  0E03               	movlw	3
  5249  0101E8  6EE6               	movwf	postinc1,c
  5250  0101EA  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5251  0101EE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5252  0101F4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5253  0101FA  0E04               	movlw	4
  5254  0101FC  6EE6               	movwf	postinc1,c
  5255  0101FE  EC71  F0FD         	call	_sprintf	;wreg free
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;main.c: 263:    sprintf(get_vterm_ptr(0, 2), "                    ");
  5259  010202  0EB9               	movlw	low (STR_20+2)
  5260  010204  6EE6               	movwf	postinc1,c
  5261  010206  0EFB               	movlw	high (STR_20+2)
  5262  010208  6EE6               	movwf	postinc1,c
  5263  01020A  0E02               	movlw	2
  5264  01020C  6EE6               	movwf	postinc1,c
  5265  01020E  0E00               	movlw	0
  5266  010210  6EE6               	movwf	postinc1,c
  5267  010212  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5268  010216  0060  F0AB  FFE6   	movff	btemp,postinc1
  5269  01021C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5270  010222  0E04               	movlw	4
  5271  010224  6EE6               	movwf	postinc1,c
  5272  010226  EC71  F0FD         	call	_sprintf	;wreg free
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;main.c: 264:    sprintf(get_vterm_ptr(1, 2), "                    ");
  5276  01022A  0EB9               	movlw	low (STR_20+2)
  5277  01022C  6EE6               	movwf	postinc1,c
  5278  01022E  0EFB               	movlw	high (STR_20+2)
  5279  010230  6EE6               	movwf	postinc1,c
  5280  010232  0E02               	movlw	2
  5281  010234  6EE6               	movwf	postinc1,c
  5282  010236  0E01               	movlw	1
  5283  010238  6EE6               	movwf	postinc1,c
  5284  01023A  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5285  01023E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5286  010244  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5287  01024A  0E04               	movlw	4
  5288  01024C  6EE6               	movwf	postinc1,c
  5289  01024E  EC71  F0FD         	call	_sprintf	;wreg free
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;main.c: 265:    sprintf(get_vterm_ptr(2, 2), "                    ");
  5293  010252  0EB9               	movlw	low (STR_20+2)
  5294  010254  6EE6               	movwf	postinc1,c
  5295  010256  0EFB               	movlw	high (STR_20+2)
  5296  010258  6EE6               	movwf	postinc1,c
  5297  01025A  0E02               	movlw	2
  5298  01025C  6EE6               	movwf	postinc1,c
  5299  01025E  0E02               	movlw	2
  5300  010260  6EE6               	movwf	postinc1,c
  5301  010262  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5302  010266  0060  F0AB  FFE6   	movff	btemp,postinc1
  5303  01026C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5304  010272  0E04               	movlw	4
  5305  010274  6EE6               	movwf	postinc1,c
  5306  010276  EC71  F0FD         	call	_sprintf	;wreg free
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;main.c: 266:    sprintf(get_vterm_ptr(3, 2), "                    ");
  5310  01027A  0EB9               	movlw	low (STR_20+2)
  5311  01027C  6EE6               	movwf	postinc1,c
  5312  01027E  0EFB               	movlw	high (STR_20+2)
  5313  010280  6EE6               	movwf	postinc1,c
  5314  010282  0E02               	movlw	2
  5315  010284  6EE6               	movwf	postinc1,c
  5316  010286  0E03               	movlw	3
  5317  010288  6EE6               	movwf	postinc1,c
  5318  01028A  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5319  01028E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5320  010294  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5321  01029A  0E04               	movlw	4
  5322  01029C  6EE6               	movwf	postinc1,c
  5323  01029E  EC71  F0FD         	call	_sprintf	;wreg free
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;main.c: 267:    update_lcd(0);
  5327  0102A2  0E00               	movlw	0
  5328  0102A4  6EE6               	movwf	postinc1,c
  5329  0102A6  EC23  F0F6         	call	_update_lcd	;wreg free
  5330                           
  5331                           ;main.c: 268:    WaitMs(1000);
  5332  0102AA  0EE8               	movlw	232
  5333  0102AC  6EE6               	movwf	postinc1,c
  5334  0102AE  0E03               	movlw	3
  5335  0102B0  6EE6               	movwf	postinc1,c
  5336  0102B2  ECA9  F010         	call	_WaitMs	;wreg free
  5337                           
  5338                           ;main.c: 269:    StartTimer(TMR_DISPLAY, 250);
  5339  0102B6  0EFA               	movlw	250
  5340  0102B8  6EE6               	movwf	postinc1,c
  5341  0102BA  0E00               	movlw	0
  5342  0102BC  6EE6               	movwf	postinc1,c
  5343  0102BE  0E0A               	movlw	10
  5344  0102C0  6EE6               	movwf	postinc1,c
  5345  0102C2  ECBA  F00F         	call	_StartTimer	;wreg free
  5346                           
  5347                           ;main.c: 270:    StartTimer(TMR_ADC, 200);
  5348  0102C6  0EC8               	movlw	200
  5349  0102C8  6EE6               	movwf	postinc1,c
  5350  0102CA  0E00               	movlw	0
  5351  0102CC  6EE6               	movwf	postinc1,c
  5352  0102CE  0E01               	movlw	1
  5353  0102D0  6EE6               	movwf	postinc1,c
  5354  0102D2  ECBA  F00F         	call	_StartTimer	;wreg free
  5355                           
  5356                           ;main.c: 271:    StartTimer(TMR_INFO, 3000);
  5357  0102D6  0EB8               	movlw	184
  5358  0102D8  6EE6               	movwf	postinc1,c
  5359  0102DA  0E0B               	movlw	11
  5360  0102DC  6EE6               	movwf	postinc1,c
  5361  0102DE  0E07               	movlw	7
  5362  0102E0  6EE6               	movwf	postinc1,c
  5363  0102E2  ECBA  F00F         	call	_StartTimer	;wreg free
  5364                           
  5365                           ;main.c: 272:    StartTimer(TMR_FLIPPER, 1500);
  5366  0102E6  0EDC               	movlw	220
  5367  0102E8  6EE6               	movwf	postinc1,c
  5368  0102EA  0E05               	movlw	5
  5369  0102EC  6EE6               	movwf	postinc1,c
  5370  0102EE  0E0B               	movlw	11
  5371  0102F0  6EE6               	movwf	postinc1,c
  5372  0102F2  ECBA  F00F         	call	_StartTimer	;wreg free
  5373                           
  5374                           ;main.c: 273:    StartTimer(TMR_HELPDIS, 3000);
  5375  0102F6  0EB8               	movlw	184
  5376  0102F8  6EE6               	movwf	postinc1,c
  5377  0102FA  0E0B               	movlw	11
  5378  0102FC  6EE6               	movwf	postinc1,c
  5379  0102FE  0E09               	movlw	9
  5380  010300  6EE6               	movwf	postinc1,c
  5381  010302  ECBA  F00F         	call	_StartTimer	;wreg free
  5382                           
  5383                           ;main.c: 275:    start_adc_scan();
  5384  010306  ECF9  F00B         	call	_start_adc_scan	;wreg free
  5385                           
  5386                           ;main.c: 276:    start_switch_handler();
  5387  01030A  ECDF  F013         	call	_start_switch_handler	;wreg free
  5388                           
  5389                           ; BSR set to: 57
  5390                           ;main.c: 277:    WaitMs(1000);
  5391  01030E  0EE8               	movlw	232
  5392  010310  6EE6               	movwf	postinc1,c
  5393  010312  0E03               	movlw	3
  5394  010314  6EE6               	movwf	postinc1,c
  5395  010316  ECA9  F010         	call	_WaitMs	;wreg free
  5396                           
  5397                           ;main.c: 282:    if (read_cal_data()) {
  5398  01031A  EC29  F0EC         	call	_read_cal_data	;wreg free
  5399  01031E  502A               	movf	btemp^0,w,c
  5400  010320  B4D8               	btfsc	status,2,c
  5401  010322  D07C               	goto	l17510
  5402                           
  5403                           ;main.c: 283:     update_cal_data();
  5404  010324  EC73  F00D         	call	_update_cal_data	;wreg free
  5405                           
  5406                           ; BSR set to: 1
  5407                           ;main.c: 284:     if (update_hist_data(1, &C.hist[0]) && (C.hist[0].pclock > time(((void
      +                          *)0))))
  5408  010328  0EB8               	movlw	low (_C+185)
  5409  01032A  6EE6               	movwf	postinc1,c
  5410  01032C  0E09               	movlw	high (_C+185)
  5411  01032E  6EE6               	movwf	postinc1,c
  5412  010330  0E01               	movlw	1
  5413  010332  6EE6               	movwf	postinc1,c
  5414  010334  EC9D  F009         	call	_update_hist_data	;wreg free
  5415  010338  502A               	movf	btemp^0,w,c
  5416  01033A  B4D8               	btfsc	status,2,c
  5417  01033C  D05A               	goto	l17508
  5418  01033E  0E00               	movlw	0
  5419  010340  6EE6               	movwf	postinc1,c
  5420  010342  0E00               	movlw	0
  5421  010344  6EE6               	movwf	postinc1,c
  5422  010346  ECBD  F00C         	call	_time	;wreg free
  5423  01034A  52E5               	movf	postdec1,f,c
  5424  01034C  006F FF9C  F041    	movff	indf1,btemp+23
  5425  010352  52E5               	movf	postdec1,f,c
  5426  010354  006F FF9C  F040    	movff	indf1,btemp+22
  5427  01035A  52E5               	movf	postdec1,f,c
  5428  01035C  006F FF9C  F03F    	movff	indf1,btemp+21
  5429  010362  52E5               	movf	postdec1,f,c
  5430  010364  006F FF9C  F03E    	movff	indf1,btemp+20
  5431  01036A  52E5               	movf	postdec1,f,c
  5432  01036C  006F FF9C  F03D    	movff	indf1,btemp+19
  5433  010372  52E5               	movf	postdec1,f,c
  5434  010374  006F FF9C  F03C    	movff	indf1,btemp+18
  5435  01037A  52E5               	movf	postdec1,f,c
  5436  01037C  006F FF9C  F03B    	movff	indf1,btemp+17
  5437  010382  52E5               	movf	postdec1,f,c
  5438  010384  006F FF9C  F03A    	movff	indf1,btemp+16
  5439  01038A  EE22  F1C8         	lfsr	2,_C+201	;volatile
  5440  01038E  50DE               	movf	postinc2,w,c
  5441  010390  5C3A               	subwf	(btemp+16)^0,w,c
  5442  010392  50DE               	movf	postinc2,w,c
  5443  010394  583B               	subwfb	(btemp+17)^0,w,c
  5444  010396  50DE               	movf	postinc2,w,c
  5445  010398  583C               	subwfb	(btemp+18)^0,w,c
  5446  01039A  50DE               	movf	postinc2,w,c
  5447  01039C  583D               	subwfb	(btemp+19)^0,w,c
  5448  01039E  50DE               	movf	postinc2,w,c
  5449  0103A0  583E               	subwfb	(btemp+20)^0,w,c
  5450  0103A2  50DE               	movf	postinc2,w,c
  5451  0103A4  583F               	subwfb	(btemp+21)^0,w,c
  5452  0103A6  50DE               	movf	postinc2,w,c
  5453  0103A8  5840               	subwfb	(btemp+22)^0,w,c
  5454  0103AA  5041               	movf	(btemp+23)^0,w,c
  5455  0103AC  0A80               	xorlw	128
  5456  0103AE  6E2A               	movwf	btemp^0,c
  5457  0103B0  50DE               	movf	postinc2,w,c
  5458  0103B2  0A80               	xorlw	128
  5459  0103B4  582A               	subwfb	btemp^0,w,c
  5460  0103B6  B0D8               	btfsc	status,0,c
  5461  0103B8  D01C               	goto	l17508
  5462                           
  5463                           ; BSR set to: 57
  5464                           ;main.c: 285:      set_time(C.hist[0].pclock);
  5465  0103BA  EE22  F1C8         	lfsr	2,_C+201	;volatile
  5466  0103BE  006F FF7B FFE6     	movff	postinc2,postinc1
  5467  0103C4  006F FF7B FFE6     	movff	postinc2,postinc1
  5468  0103CA  006F FF7B FFE6     	movff	postinc2,postinc1
  5469  0103D0  006F FF7B FFE6     	movff	postinc2,postinc1
  5470  0103D6  006F FF7B FFE6     	movff	postinc2,postinc1
  5471  0103DC  006F FF7B FFE6     	movff	postinc2,postinc1
  5472  0103E2  006F FF7B FFE6     	movff	postinc2,postinc1
  5473  0103E8  006F FF7B FFE6     	movff	postinc2,postinc1
  5474  0103EE  EC8E  F010         	call	_set_time	;wreg free
  5475  0103F2                     l17508:
  5476                           
  5477                           ;main.c: 287:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  5478  0103F2  0E32               	movlw	low STR_14
  5479  0103F4  6EE6               	movwf	postinc1,c
  5480  0103F6  0EFF               	movlw	high STR_14
  5481  0103F8  6EE6               	movwf	postinc1,c
  5482  0103FA  0E00               	movlw	0
  5483  0103FC  6EE6               	movwf	postinc1,c
  5484  0103FE  0E02               	movlw	2
  5485  010400  6EE6               	movwf	postinc1,c
  5486  010402  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5487  010406  0060  F0AB  FFE6   	movff	btemp,postinc1
  5488  01040C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5489  010412  0E04               	movlw	4
  5490  010414  6EE6               	movwf	postinc1,c
  5491  010416  EC71  F0FD         	call	_sprintf	;wreg free
  5492                           
  5493                           ;main.c: 288:    } else {
  5494  01041A  D014               	goto	l1462
  5495  01041C                     l17510:
  5496                           
  5497                           ;main.c: 289:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  5498  01041C  0E5C               	movlw	low STR_15
  5499  01041E  6EE6               	movwf	postinc1,c
  5500  010420  0EFF               	movlw	high STR_15
  5501  010422  6EE6               	movwf	postinc1,c
  5502  010424  0E00               	movlw	0
  5503  010426  6EE6               	movwf	postinc1,c
  5504  010428  0E02               	movlw	2
  5505  01042A  6EE6               	movwf	postinc1,c
  5506  01042C  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5507  010430  0060  F0AB  FFE6   	movff	btemp,postinc1
  5508  010436  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5509  01043C  0E04               	movlw	4
  5510  01043E  6EE6               	movwf	postinc1,c
  5511  010440  EC71  F0FD         	call	_sprintf	;wreg free
  5512  010444                     l1462:
  5513                           
  5514                           ; BSR set to: 0
  5515                           ;main.c: 291:    update_lcd(0);
  5516  010444  0E00               	movlw	0
  5517  010446  6EE6               	movwf	postinc1,c
  5518  010448  EC23  F0F6         	call	_update_lcd	;wreg free
  5519                           
  5520                           ;main.c: 292:    WaitMs(2000);
  5521  01044C  0ED0               	movlw	208
  5522  01044E  6EE6               	movwf	postinc1,c
  5523  010450  0E07               	movlw	7
  5524  010452  6EE6               	movwf	postinc1,c
  5525  010454  ECA9  F010         	call	_WaitMs	;wreg free
  5526                           
  5527                           ;main.c: 294:    i_ror = 1;
  5528                           ;stkvar	_i_ror @ sp[(-17)+16]
  5529  010458  0EFF               	movlw	-1
  5530  01045A  6AE3               	clrf	plusw1,c
  5531  01045C  2AE3               	incf	plusw1,f,c
  5532  01045E                     l17516:
  5533                           
  5534                           ;main.c: 296:     calc_ror_data();
  5535  01045E  EC19  F0F1         	call	_calc_ror_data	;wreg free
  5536                           
  5537                           ;main.c: 297:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f             ", conv_raw_result(
      +                          V_BAT, CONV));
  5538  010462  0E00               	movlw	0
  5539  010464  6EE6               	movwf	postinc1,c
  5540  010466  0E04               	movlw	4
  5541  010468  6EE6               	movwf	postinc1,c
  5542  01046A  EC98  F0C3         	call	_conv_raw_result	;wreg free
  5543  01046E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5544  010474  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5545  01047A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  5546  010480  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  5547  010486  0E69               	movlw	low STR_16
  5548  010488  6EE6               	movwf	postinc1,c
  5549  01048A  0EFD               	movlw	high STR_16
  5550  01048C  6EE6               	movwf	postinc1,c
  5551  01048E  0E00               	movlw	0
  5552  010490  6EE6               	movwf	postinc1,c
  5553  010492  0E01               	movlw	1
  5554  010494  6EE6               	movwf	postinc1,c
  5555  010496  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5556  01049A  0060  F0AB  FFE6   	movff	btemp,postinc1
  5557  0104A0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5558  0104A6  0E08               	movlw	8
  5559  0104A8  6EE6               	movwf	postinc1,c
  5560  0104AA  EC71  F0FD         	call	_sprintf	;wreg free
  5561                           
  5562                           ; BSR set to: 0
  5563                           ;main.c: 298:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  5564  0104AE  EE22  F16B         	lfsr	2,_C+108	;volatile
  5565  0104B2  006F FF7B FFE6     	movff	postinc2,postinc1
  5566  0104B8  006F FF7B FFE6     	movff	postinc2,postinc1
  5567  0104BE  006F FF7B FFE6     	movff	postinc2,postinc1
  5568  0104C4  006F FF7B FFE6     	movff	postinc2,postinc1
  5569                           
  5570                           ;stkvar	_i_ror @ sp[(-21)+16]
  5571  0104CA  0EFB               	movlw	-5
  5572  0104CC  50E3               	movf	plusw1,w,c
  5573  0104CE  6EE6               	movwf	postinc1,c
  5574  0104D0  0E00               	movlw	0
  5575  0104D2  6EE6               	movwf	postinc1,c
  5576  0104D4  0E00               	movlw	0
  5577  0104D6  6EE6               	movwf	postinc1,c
  5578  0104D8  0E05               	movlw	5
  5579  0104DA  6EE6               	movwf	postinc1,c
  5580  0104DC  ECED  F0FE         	call	_spinners	;wreg free
  5581  0104E0  502A               	movf	btemp^0,w,c
  5582  0104E2  6EE6               	movwf	postinc1,c
  5583  0104E4  0E00               	movlw	0
  5584  0104E6  6EE6               	movwf	postinc1,c
  5585  0104E8  0E25               	movlw	low STR_17
  5586  0104EA  6EE6               	movwf	postinc1,c
  5587  0104EC  0EFB               	movlw	high STR_17
  5588  0104EE  6EE6               	movwf	postinc1,c
  5589  0104F0  0E00               	movlw	0
  5590  0104F2  6EE6               	movwf	postinc1,c
  5591  0104F4  0E02               	movlw	2
  5592  0104F6  6EE6               	movwf	postinc1,c
  5593  0104F8  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5594  0104FC  0060  F0AB  FFE6   	movff	btemp,postinc1
  5595  010502  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5596  010508  0E0C               	movlw	12
  5597  01050A  6EE6               	movwf	postinc1,c
  5598  01050C  EC71  F0FD         	call	_sprintf	;wreg free
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;main.c: 299:     update_lcd(0);
  5602  010510  0E00               	movlw	0
  5603  010512  6EE6               	movwf	postinc1,c
  5604  010514  EC23  F0F6         	call	_update_lcd	;wreg free
  5605                           
  5606                           ;main.c: 300:     clear_adc_scan();
  5607  010518  EC3F  F015         	call	_clear_adc_scan	;wreg free
  5608                           
  5609                           ; BSR set to: 1
  5610                           ;main.c: 301:     start_adc_scan();
  5611  01051C  ECF9  F00B         	call	_start_adc_scan	;wreg free
  5612                           
  5613                           ;main.c: 302:     WaitMs(2000);
  5614  010520  0ED0               	movlw	208
  5615  010522  6EE6               	movwf	postinc1,c
  5616  010524  0E07               	movlw	7
  5617  010526  6EE6               	movwf	postinc1,c
  5618  010528  ECA9  F010         	call	_WaitMs	;wreg free
  5619                           
  5620                           ;main.c: 305:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  5621                           ;stkvar	_i_ror @ sp[(-17)+16]
  5622  01052C  0EFF               	movlw	-1
  5623  01052E  006F FF8C  F035    	movff	plusw1,btemp+11
  5624  010534  2A35               	incf	(btemp+11)^0,f,c
  5625  010536  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5626  01053C  0635               	decf	(btemp+11)^0,f,c
  5627  01053E  0E1E               	movlw	30
  5628  010540  6035               	cpfslt	(btemp+11)^0,c
  5629  010542  D01A               	goto	u17070
  5630  010544  EE22  F16B         	lfsr	2,_C+108	;volatile
  5631  010548  006F FF7B FFE6     	movff	postinc2,postinc1
  5632  01054E  006F FF7B FFE6     	movff	postinc2,postinc1
  5633  010554  006F FF7B FFE6     	movff	postinc2,postinc1
  5634  01055A  006F FF7B FFE6     	movff	postinc2,postinc1
  5635  010560  0E42               	movlw	66
  5636  010562  6EE6               	movwf	postinc1,c
  5637  010564  0E60               	movlw	96
  5638  010566  6EE6               	movwf	postinc1,c
  5639  010568  0E65               	movlw	101
  5640  01056A  6EE6               	movwf	postinc1,c
  5641  01056C  0E3C               	movlw	60
  5642  01056E  6EE6               	movwf	postinc1,c
  5643  010570  ECC1  F0F4         	call	___flge	;wreg free
  5644  010574  A02A               	btfss	btemp& (0+255),0,c
  5645  010576  D773               	goto	l17516
  5646  010578                     u17070:
  5647                           
  5648                           ;main.c: 307:    static_soc();
  5649  010578  ECEC  F00C         	call	_static_soc	;wreg free
  5650                           
  5651                           ;main.c: 308:    init_bsoc();
  5652  01057C  EC83  F0E3         	call	_init_bsoc	;wreg free
  5653                           
  5654                           ;main.c: 309:    set_load_relay_one(0);
  5655  010580  0E00               	movlw	0
  5656  010582  6EE6               	movwf	postinc1,c
  5657  010584  ECBD  F014         	call	_set_load_relay_one	;wreg free
  5658                           
  5659                           ;main.c: 310:    set_load_relay_two(0);
  5660  010588  0E00               	movlw	0
  5661  01058A  6EE6               	movwf	postinc1,c
  5662  01058C  ECB5  F014         	call	_set_load_relay_two	;wreg free
  5663                           
  5664                           ;main.c: 311:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d         ", C.soc);
  5665  010590  EE22  F1B5         	lfsr	2,_C+182	;volatile
  5666  010594  006F FF78  F034    	movff	postinc2,btemp+10
  5667  01059A  006F FF74  F035    	movff	postdec2,btemp+11
  5668  0105A0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  5669  0105A6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  5670  0105AC  0EE5               	movlw	low STR_18
  5671  0105AE  6EE6               	movwf	postinc1,c
  5672  0105B0  0EFB               	movlw	high STR_18
  5673  0105B2  6EE6               	movwf	postinc1,c
  5674  0105B4  0E00               	movlw	0
  5675  0105B6  6EE6               	movwf	postinc1,c
  5676  0105B8  0E00               	movlw	0
  5677  0105BA  6EE6               	movwf	postinc1,c
  5678  0105BC  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5679  0105C0  0060  F0AB  FFE6   	movff	btemp,postinc1
  5680  0105C6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5681  0105CC  0E06               	movlw	6
  5682  0105CE  6EE6               	movwf	postinc1,c
  5683  0105D0  EC71  F0FD         	call	_sprintf	;wreg free
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;main.c: 312:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f      ", C.dynamic_ah);
  5687  0105D4  EE22  F18F         	lfsr	2,_C+144	;volatile
  5688  0105D8  006F FF7B FFE6     	movff	postinc2,postinc1
  5689  0105DE  006F FF7B FFE6     	movff	postinc2,postinc1
  5690  0105E4  006F FF7B FFE6     	movff	postinc2,postinc1
  5691  0105EA  006F FF7B FFE6     	movff	postinc2,postinc1
  5692  0105F0  0ECB               	movlw	low STR_19
  5693  0105F2  6EE6               	movwf	postinc1,c
  5694  0105F4  0EFC               	movlw	high STR_19
  5695  0105F6  6EE6               	movwf	postinc1,c
  5696  0105F8  0E00               	movlw	0
  5697  0105FA  6EE6               	movwf	postinc1,c
  5698  0105FC  0E01               	movlw	1
  5699  0105FE  6EE6               	movwf	postinc1,c
  5700  010600  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5701  010604  0060  F0AB  FFE6   	movff	btemp,postinc1
  5702  01060A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5703  010610  0E08               	movlw	8
  5704  010612  6EE6               	movwf	postinc1,c
  5705  010614  EC71  F0FD         	call	_sprintf	;wreg free
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;main.c: 313:    sprintf(get_vterm_ptr(2, 0), "                      ");
  5709  010618  0EB7               	movlw	low STR_20
  5710  01061A  6EE6               	movwf	postinc1,c
  5711  01061C  0EFB               	movlw	high STR_20
  5712  01061E  6EE6               	movwf	postinc1,c
  5713  010620  0E00               	movlw	0
  5714  010622  6EE6               	movwf	postinc1,c
  5715  010624  0E02               	movlw	2
  5716  010626  6EE6               	movwf	postinc1,c
  5717  010628  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5718  01062C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5719  010632  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5720  010638  0E04               	movlw	4
  5721  01063A  6EE6               	movwf	postinc1,c
  5722  01063C  EC71  F0FD         	call	_sprintf	;wreg free
  5723                           
  5724                           ; BSR set to: 0
  5725                           ;main.c: 314:    update_lcd(0);
  5726  010640  0E00               	movlw	0
  5727  010642  6EE6               	movwf	postinc1,c
  5728  010644  EC23  F0F6         	call	_update_lcd	;wreg free
  5729                           
  5730                           ;main.c: 315:    WaitMs(2000);
  5731  010648  0ED0               	movlw	208
  5732  01064A  6EE6               	movwf	postinc1,c
  5733  01064C  0E07               	movlw	7
  5734  01064E  6EE6               	movwf	postinc1,c
  5735  010650  ECA9  F010         	call	_WaitMs	;wreg free
  5736                           
  5737                           ;main.c: 316:    sprintf(get_vterm_ptr(0, 0), "Battery ESR          ");
  5738  010654  0E95               	movlw	low STR_21
  5739  010656  6EE6               	movwf	postinc1,c
  5740  010658  0EFD               	movlw	high STR_21
  5741  01065A  6EE6               	movwf	postinc1,c
  5742  01065C  0E00               	movlw	0
  5743  01065E  6EE6               	movwf	postinc1,c
  5744  010660  0E00               	movlw	0
  5745  010662  6EE6               	movwf	postinc1,c
  5746  010664  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5747  010668  0060  F0AB  FFE6   	movff	btemp,postinc1
  5748  01066E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5749  010674  0E04               	movlw	4
  5750  010676  6EE6               	movwf	postinc1,c
  5751  010678  EC71  F0FD         	call	_sprintf	;wreg free
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;main.c: 317:    sprintf(get_vterm_ptr(1, 0), "Calculation          ");
  5755  01067C  0EAB               	movlw	low STR_22
  5756  01067E  6EE6               	movwf	postinc1,c
  5757  010680  0EFD               	movlw	high STR_22
  5758  010682  6EE6               	movwf	postinc1,c
  5759  010684  0E00               	movlw	0
  5760  010686  6EE6               	movwf	postinc1,c
  5761  010688  0E01               	movlw	1
  5762  01068A  6EE6               	movwf	postinc1,c
  5763  01068C  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5764  010690  0060  F0AB  FFE6   	movff	btemp,postinc1
  5765  010696  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5766  01069C  0E04               	movlw	4
  5767  01069E  6EE6               	movwf	postinc1,c
  5768  0106A0  EC71  F0FD         	call	_sprintf	;wreg free
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;main.c: 318:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds     ");
  5772  0106A4  0E5B               	movlw	low STR_23
  5773  0106A6  6EE6               	movwf	postinc1,c
  5774  0106A8  0EFE               	movlw	high STR_23
  5775  0106AA  6EE6               	movwf	postinc1,c
  5776  0106AC  0E00               	movlw	0
  5777  0106AE  6EE6               	movwf	postinc1,c
  5778  0106B0  0E02               	movlw	2
  5779  0106B2  6EE6               	movwf	postinc1,c
  5780  0106B4  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5781  0106B8  0060  F0AB  FFE6   	movff	btemp,postinc1
  5782  0106BE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5783  0106C4  0E04               	movlw	4
  5784  0106C6  6EE6               	movwf	postinc1,c
  5785  0106C8  EC71  F0FD         	call	_sprintf	;wreg free
  5786                           
  5787                           ; BSR set to: 0
  5788                           ;main.c: 319:    update_lcd(0);
  5789  0106CC  0E00               	movlw	0
  5790  0106CE  6EE6               	movwf	postinc1,c
  5791  0106D0  EC23  F0F6         	call	_update_lcd	;wreg free
  5792                           
  5793                           ;main.c: 320:    uint16_t i_esr = 1;
  5794  0106D4  0E01               	movlw	1
  5795  0106D6  6E34               	movwf	(btemp+10)^0,c
  5796  0106D8  0E00               	movlw	0
  5797  0106DA  6E35               	movwf	(btemp+11)^0,c
  5798                           
  5799                           ;stkvar	_i_esr @ sp[(-17)+8]
  5800  0106DC  0EF7               	movlw	-9
  5801  0106DE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  5802  0106E4  0EF8               	movlw	-8
  5803  0106E6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5804                           
  5805                           ;main.c: 322:    float esr_temp;;main.c: 323:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  5806  0106EC  D06D               	goto	l17576
  5807  0106EE                     l17564:
  5808                           
  5809                           ;main.c: 324:     WaitMs(110);
  5810  0106EE  0E6E               	movlw	110
  5811  0106F0  6EE6               	movwf	postinc1,c
  5812  0106F2  0E00               	movlw	0
  5813  0106F4  6EE6               	movwf	postinc1,c
  5814  0106F6  ECA9  F010         	call	_WaitMs	;wreg free
  5815                           
  5816                           ;main.c: 325:     shape = (uint8_t) fabsf(esr_temp);
  5817                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5818  0106FA  0EF3               	movlw	-13
  5819  0106FC  006F FF8F FFE6     	movff	plusw1,postinc1
  5820  010702  006F FF8F FFE6     	movff	plusw1,postinc1
  5821  010708  006F FF8F FFE6     	movff	plusw1,postinc1
  5822  01070E  006F FF8F FFE6     	movff	plusw1,postinc1
  5823  010714  EC56  F004         	call	_fabsf	;wreg free
  5824  010718  0060  F0AB  FFE6   	movff	btemp,postinc1
  5825  01071E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5826  010724  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  5827  01072A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  5828  010730  EC55  F0F3         	call	___fltol	;wreg free
  5829  010734  0060  F0A8  F035   	movff	btemp,btemp+11
  5830                           
  5831                           ;stkvar	_shape @ sp[(-17)+10]
  5832  01073A  0EF9               	movlw	-7
  5833  01073C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5834                           
  5835                           ;main.c: 326:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c       ", spinners(0, 0), 
      +                          spinners(shape, 0));
  5836  010742  0E00               	movlw	0
  5837  010744  6EE6               	movwf	postinc1,c
  5838                           
  5839                           ;stkvar	_shape @ sp[(-18)+10]
  5840  010746  0EF8               	movlw	-8
  5841  010748  50E3               	movf	plusw1,w,c
  5842  01074A  6EE6               	movwf	postinc1,c
  5843  01074C  ECED  F0FE         	call	_spinners	;wreg free
  5844  010750  502A               	movf	btemp^0,w,c
  5845  010752  6EE6               	movwf	postinc1,c
  5846  010754  0E00               	movlw	0
  5847  010756  6EE6               	movwf	postinc1,c
  5848  010758  0E00               	movlw	0
  5849  01075A  6EE6               	movwf	postinc1,c
  5850  01075C  0E00               	movlw	0
  5851  01075E  6EE6               	movwf	postinc1,c
  5852  010760  ECED  F0FE         	call	_spinners	;wreg free
  5853  010764  502A               	movf	btemp^0,w,c
  5854  010766  6EE6               	movwf	postinc1,c
  5855  010768  0E00               	movlw	0
  5856  01076A  6EE6               	movwf	postinc1,c
  5857  01076C  0E19               	movlw	low STR_24
  5858  01076E  6EE6               	movwf	postinc1,c
  5859  010770  0EFE               	movlw	high STR_24
  5860  010772  6EE6               	movwf	postinc1,c
  5861  010774  0E00               	movlw	0
  5862  010776  6EE6               	movwf	postinc1,c
  5863  010778  0E02               	movlw	2
  5864  01077A  6EE6               	movwf	postinc1,c
  5865  01077C  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5866  010780  0060  F0AB  FFE6   	movff	btemp,postinc1
  5867  010786  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5868  01078C  0E08               	movlw	8
  5869  01078E  6EE6               	movwf	postinc1,c
  5870  010790  EC71  F0FD         	call	_sprintf	;wreg free
  5871                           
  5872                           ; BSR set to: 0
  5873                           ;main.c: 327:     update_lcd(0);
  5874  010794  0E00               	movlw	0
  5875  010796  6EE6               	movwf	postinc1,c
  5876  010798  EC23  F0F6         	call	_update_lcd	;wreg free
  5877                           
  5878                           ;main.c: 329:     if (i_esr++ > 512)
  5879                           ;stkvar	_i_esr @ sp[(-17)+8]
  5880  01079C  50E1               	movf	fsr1l,w,c
  5881  01079E  0FF7               	addlw	-9
  5882  0107A0  6ED9               	movwf	fsr2l,c
  5883  0107A2  50E2               	movf	fsr1h,w,c
  5884  0107A4  6EDA               	movwf	fsr2h,c
  5885  0107A6  0EFF               	movlw	255
  5886  0107A8  22DA               	addwfc	fsr2h,f,c
  5887  0107AA  006F FF7C  F034    	movff	indf2,btemp+10
  5888  0107B0  0E01               	movlw	1
  5889  0107B2  26DE               	addwf	postinc2,f,c
  5890  0107B4  006F FF7C  F035    	movff	indf2,btemp+11
  5891  0107BA  0E00               	movlw	0
  5892  0107BC  22DD               	addwfc	postdec2,f,c
  5893  0107BE  0434               	decf	(btemp+10)^0,w,c
  5894  0107C0  0E02               	movlw	2
  5895  0107C2  5835               	subwfb	(btemp+11)^0,w,c
  5896  0107C4  B0D8               	btfsc	status,0,c
  5897  0107C6  D017               	goto	u17090
  5898  0107C8                     l17576:
  5899                           
  5900                           ;main.c: 323:    while ((esr_temp = esr_check(0)) < 0.0) {
  5901  0107C8  0E00               	movlw	0
  5902  0107CA  6EE6               	movwf	postinc1,c
  5903  0107CC  ECBE  F0DB         	call	_esr_check	;wreg free
  5904                           
  5905                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5906  0107D0  0EF3               	movlw	-13
  5907  0107D2  0060  F0AB  FFE3   	movff	btemp,plusw1
  5908  0107D8  0EF4               	movlw	-12
  5909  0107DA  0060  F0AF  FFE3   	movff	btemp+1,plusw1
  5910  0107E0  0EF5               	movlw	-11
  5911  0107E2  0060  F0B3  FFE3   	movff	btemp+2,plusw1
  5912  0107E8  0EF6               	movlw	-10
  5913  0107EA  0060  F0B7  FFE3   	movff	btemp+3,plusw1
  5914  0107F0  0EF6               	movlw	-10
  5915  0107F2  BEE3               	btfsc	plusw1,7,c
  5916  0107F4  D77C               	goto	l17564
  5917  0107F6                     u17090:
  5918                           
  5919                           ;main.c: 332:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f            ", C.esr);
  5920  0107F6  EE22  F187         	lfsr	2,_C+136	;volatile
  5921  0107FA  006F FF7B FFE6     	movff	postinc2,postinc1
  5922  010800  006F FF7B FFE6     	movff	postinc2,postinc1
  5923  010806  006F FF7B FFE6     	movff	postinc2,postinc1
  5924  01080C  006F FF7B FFE6     	movff	postinc2,postinc1
  5925  010812  0ECE               	movlw	low STR_25
  5926  010814  6EE6               	movwf	postinc1,c
  5927  010816  0EFB               	movlw	high STR_25
  5928  010818  6EE6               	movwf	postinc1,c
  5929  01081A  0E00               	movlw	0
  5930  01081C  6EE6               	movwf	postinc1,c
  5931  01081E  0E00               	movlw	0
  5932  010820  6EE6               	movwf	postinc1,c
  5933  010822  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5934  010826  0060  F0AB  FFE6   	movff	btemp,postinc1
  5935  01082C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5936  010832  0E08               	movlw	8
  5937  010834  6EE6               	movwf	postinc1,c
  5938  010836  EC71  F0FD         	call	_sprintf	;wreg free
  5939                           
  5940                           ;main.c: 333:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f            ", C.bv_one_loa
      +                          d, C.load_i1);
  5941  01083A  EE22  F219         	lfsr	2,_C+282	;volatile
  5942  01083E  006F FF7B FFE6     	movff	postinc2,postinc1
  5943  010844  006F FF7B FFE6     	movff	postinc2,postinc1
  5944  01084A  006F FF7B FFE6     	movff	postinc2,postinc1
  5945  010850  006F FF7B FFE6     	movff	postinc2,postinc1
  5946  010856  EE22  F225         	lfsr	2,_C+294	;volatile
  5947  01085A  006F FF7B FFE6     	movff	postinc2,postinc1
  5948  010860  006F FF7B FFE6     	movff	postinc2,postinc1
  5949  010866  006F FF7B FFE6     	movff	postinc2,postinc1
  5950  01086C  006F FF7B FFE6     	movff	postinc2,postinc1
  5951  010872  0ED5               	movlw	low STR_26
  5952  010874  6EE6               	movwf	postinc1,c
  5953  010876  0EFA               	movlw	high STR_26
  5954  010878  6EE6               	movwf	postinc1,c
  5955  01087A  0E00               	movlw	0
  5956  01087C  6EE6               	movwf	postinc1,c
  5957  01087E  0E01               	movlw	1
  5958  010880  6EE6               	movwf	postinc1,c
  5959  010882  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5960  010886  0060  F0AB  FFE6   	movff	btemp,postinc1
  5961  01088C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5962  010892  0E0C               	movlw	12
  5963  010894  6EE6               	movwf	postinc1,c
  5964  010896  EC71  F0FD         	call	_sprintf	;wreg free
  5965                           
  5966                           ;main.c: 334:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f            ", C.bv_full_lo
      +                          ad, C.load_i2);
  5967  01089A  EE22  F21D         	lfsr	2,_C+286	;volatile
  5968  01089E  006F FF7B FFE6     	movff	postinc2,postinc1
  5969  0108A4  006F FF7B FFE6     	movff	postinc2,postinc1
  5970  0108AA  006F FF7B FFE6     	movff	postinc2,postinc1
  5971  0108B0  006F FF7B FFE6     	movff	postinc2,postinc1
  5972  0108B6  EE22  F229         	lfsr	2,_C+298	;volatile
  5973  0108BA  006F FF7B FFE6     	movff	postinc2,postinc1
  5974  0108C0  006F FF7B FFE6     	movff	postinc2,postinc1
  5975  0108C6  006F FF7B FFE6     	movff	postinc2,postinc1
  5976  0108CC  006F FF7B FFE6     	movff	postinc2,postinc1
  5977  0108D2  0EF0               	movlw	low STR_27
  5978  0108D4  6EE6               	movwf	postinc1,c
  5979  0108D6  0EFA               	movlw	high STR_27
  5980  0108D8  6EE6               	movwf	postinc1,c
  5981  0108DA  0E00               	movlw	0
  5982  0108DC  6EE6               	movwf	postinc1,c
  5983  0108DE  0E02               	movlw	2
  5984  0108E0  6EE6               	movwf	postinc1,c
  5985  0108E2  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  5986  0108E6  0060  F0AB  FFE6   	movff	btemp,postinc1
  5987  0108EC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5988  0108F2  0E0C               	movlw	12
  5989  0108F4  6EE6               	movwf	postinc1,c
  5990  0108F6  EC71  F0FD         	call	_sprintf	;wreg free
  5991                           
  5992                           ;main.c: 335:    update_lcd(0);
  5993  0108FA  0E00               	movlw	0
  5994  0108FC  6EE6               	movwf	postinc1,c
  5995  0108FE  EC23  F0F6         	call	_update_lcd	;wreg free
  5996                           
  5997                           ;main.c: 336:    WaitMs(4000);
  5998  010902  0EA0               	movlw	160
  5999  010904  6EE6               	movwf	postinc1,c
  6000  010906  0E0F               	movlw	15
  6001  010908  6EE6               	movwf	postinc1,c
  6002  01090A  ECA9  F010         	call	_WaitMs	;wreg free
  6003                           
  6004                           ;main.c: 337:    V.sensor_set = get_switch(SCALIB);
  6005  01090E  0E04               	movlw	4
  6006  010910  6EE6               	movwf	postinc1,c
  6007  010912  ECBC  F011         	call	_get_switch	;wreg free
  6008  010916  502A               	movf	btemp^0,w,c
  6009  010918  B4D8               	btfsc	status,2,c
  6010  01091A  D002               	goto	u17100
  6011  01091C  0E01               	movlw	1
  6012  01091E  D001               	goto	u17110
  6013  010920                     u17100:
  6014  010920  0E00               	movlw	0
  6015  010922                     u17110:
  6016  010922  0102               	movlb	2	; () banked
  6017  010924  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
  6018                           
  6019                           ; BSR set to: 2
  6020                           ;main.c: 338:    WaitMs(1000);
  6021  010926  0EE8               	movlw	232
  6022  010928  6EE6               	movwf	postinc1,c
  6023  01092A  0E03               	movlw	3
  6024  01092C  6EE6               	movwf	postinc1,c
  6025  01092E  ECA9  F010         	call	_WaitMs	;wreg free
  6026                           
  6027                           ;main.c: 339:    if (V.sensor_set && get_switch(SCALIB)) {
  6028  010932  0102               	movlb	2	; () banked
  6029  010934  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  6030  010936  B4D8               	btfsc	status,2,c
  6031  010938  D00F               	goto	l17594
  6032                           
  6033                           ; BSR set to: 2
  6034  01093A  0E04               	movlw	4
  6035  01093C  6EE6               	movwf	postinc1,c
  6036  01093E  ECBC  F011         	call	_get_switch	;wreg free
  6037  010942  502A               	movf	btemp^0,w,c
  6038  010944  B4D8               	btfsc	status,2,c
  6039  010946  D008               	goto	l17594
  6040                           
  6041                           ;main.c: 340:     current_sensor_cal();
  6042  010948  EC36  F0C8         	call	_current_sensor_cal	;wreg free
  6043                           
  6044                           ;main.c: 341:     WaitMs(4000);
  6045  01094C  0EA0               	movlw	160
  6046  01094E  6EE6               	movwf	postinc1,c
  6047  010950  0E0F               	movlw	15
  6048  010952  6EE6               	movwf	postinc1,c
  6049  010954  ECA9  F010         	call	_WaitMs	;wreg free
  6050  010958                     l17594:
  6051                           
  6052                           ;main.c: 343:    V.sensor_set = 0;
  6053  010958  0102               	movlb	2	; () banked
  6054  01095A  6BB2               	clrf	(_V+171)& (0+255),b	;volatile
  6055                           
  6056                           ; BSR set to: 2
  6057                           ;main.c: 344:    V.system_stable = 1;
  6058  01095C  0E01               	movlw	1
  6059  01095E  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  6060                           
  6061                           ;main.c: 345:    break;
  6062  010960  D01D               	goto	l17602
  6063  010962                     l1475:
  6064                           
  6065                           ; BSR set to: 2
  6066                           ;main.c: 351:    P.SYSTEM_STABLE = 1;
  6067  010962  0100               	movlb	0	; () banked
  6068  010964  8195               	bsf	(_P+1)& (0+255),0,b	;volatile
  6069                           
  6070                           ;main.c: 352:    break;
  6071  010966  D01A               	goto	l17602
  6072  010968                     l1477:
  6073                           
  6074                           ; BSR set to: 2
  6075                           ;main.c: 355:    V.ui_state = UI_STATE_INIT;
  6076  010968  6B07               	clrf	_V& (0+255),b	;volatile
  6077                           
  6078                           ;main.c: 356:    break;
  6079  01096A  D018               	goto	l17602
  6080  01096C                     l17600:
  6081  01096C  0102               	movlb	2	; () banked
  6082  01096E  5107               	movf	_V& (0+255),w,b	;volatile
  6083  010970  6E34               	movwf	(btemp+10)^0,c
  6084  010972  6A35               	clrf	(btemp+11)^0,c
  6085                           
  6086                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6087                           ; Switch size 1, requested type "simple"
  6088                           ; Number of cases is 1, Range of values is 0 to 0
  6089                           ; switch strategies available:
  6090                           ; Name         Instructions Cycles
  6091                           ; simple_byte            4     3 (average)
  6092                           ;	Chosen strategy is simple_byte
  6093  010974  5035               	movf	(btemp+11)^0,w,c
  6094  010976  0A00               	xorlw	0	; case 0
  6095  010978  A4D8               	btfss	status,2,c
  6096  01097A  D7F6               	goto	l1477
  6097                           
  6098                           ; BSR set to: 2
  6099                           ; Switch size 1, requested type "simple"
  6100                           ; Number of cases is 5, Range of values is 0 to 5
  6101                           ; switch strategies available:
  6102                           ; Name         Instructions Cycles
  6103                           ; simple_byte           16     9 (average)
  6104                           ;	Chosen strategy is simple_byte
  6105  01097C  5034               	movf	(btemp+10)^0,w,c
  6106  01097E  0A00               	xorlw	0	; case 0
  6107  010980  B4D8               	btfsc	status,2,c
  6108  010982  EF3D  F080         	goto	l17436
  6109  010986  0A01               	xorlw	1	; case 1
  6110  010988  B4D8               	btfsc	status,2,c
  6111  01098A  D008               	goto	l17602
  6112  01098C  0A02               	xorlw	2	; case 3
  6113  01098E  B4D8               	btfsc	status,2,c
  6114  010990  D005               	goto	l17602
  6115  010992  0A07               	xorlw	7	; case 4
  6116  010994  B4D8               	btfsc	status,2,c
  6117  010996  D7E5               	goto	l1475
  6118  010998  0A01               	xorlw	1	; case 5
  6119  01099A  D7E6               	goto	l1477
  6120  01099C                     l17602:
  6121                           
  6122                           ;main.c: 359:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  6123  01099C  0E01               	movlw	1
  6124  01099E  6EE6               	movwf	postinc1,c
  6125  0109A0  EC27  F012         	call	_TimerDone	;wreg free
  6126  0109A4  502A               	movf	btemp^0,w,c
  6127  0109A6  B4D8               	btfsc	status,2,c
  6128  0109A8  D013               	goto	l17614
  6129  0109AA  EC25  F015         	call	_check_adc_scan	;wreg free
  6130  0109AE  502A               	movf	btemp^0,w,c
  6131  0109B0  B4D8               	btfsc	status,2,c
  6132  0109B2  D00E               	goto	l17614
  6133                           
  6134                           ;main.c: 363:    convert_adc_data();
  6135  0109B4  EC9F  F003         	call	_convert_adc_data	;wreg free
  6136                           
  6137                           ;main.c: 367:    clear_adc_scan();
  6138  0109B8  EC3F  F015         	call	_clear_adc_scan	;wreg free
  6139                           
  6140                           ; BSR set to: 1
  6141                           ;main.c: 368:    start_adc_scan();
  6142  0109BC  ECF9  F00B         	call	_start_adc_scan	;wreg free
  6143                           
  6144                           ;main.c: 369:    StartTimer(TMR_ADC, 200);
  6145  0109C0  0EC8               	movlw	200
  6146  0109C2  6EE6               	movwf	postinc1,c
  6147  0109C4  0E00               	movlw	0
  6148  0109C6  6EE6               	movwf	postinc1,c
  6149  0109C8  0E01               	movlw	1
  6150  0109CA  6EE6               	movwf	postinc1,c
  6151  0109CC  ECBA  F00F         	call	_StartTimer	;wreg free
  6152  0109D0                     l17614:
  6153                           
  6154                           ;main.c: 372:   if (TimerDone(TMR_DISPLAY)) {
  6155  0109D0  0E0A               	movlw	10
  6156  0109D2  6EE6               	movwf	postinc1,c
  6157  0109D4  EC27  F012         	call	_TimerDone	;wreg free
  6158  0109D8  502A               	movf	btemp^0,w,c
  6159  0109DA  B4D8               	btfsc	status,2,c
  6160  0109DC  EFD2  F08A         	goto	l17726
  6161                           
  6162                           ;main.c: 373:    if (TimerDone(TMR_HELPDIS)) {
  6163  0109E0  0E09               	movlw	9
  6164  0109E2  6EE6               	movwf	postinc1,c
  6165  0109E4  EC27  F012         	call	_TimerDone	;wreg free
  6166  0109E8  502A               	movf	btemp^0,w,c
  6167  0109EA  B4D8               	btfsc	status,2,c
  6168  0109EC  D004               	goto	l17620
  6169                           
  6170                           ;main.c: 374:     set_display_info(DIS_STR);
  6171  0109EE  0E00               	movlw	0
  6172  0109F0  6EE6               	movwf	postinc1,c
  6173  0109F2  EC2C  F014         	call	_set_display_info	;wreg free
  6174  0109F6                     l17620:
  6175                           
  6176                           ;main.c: 376:    pclock = time(((void*)0));
  6177  0109F6  0E00               	movlw	0
  6178  0109F8  6EE6               	movwf	postinc1,c
  6179  0109FA  0E00               	movlw	0
  6180  0109FC  6EE6               	movwf	postinc1,c
  6181  0109FE  ECBD  F00C         	call	_time	;wreg free
  6182  010A02  52E5               	movf	postdec1,f,c
  6183  010A04  006F FF9C  F041    	movff	indf1,btemp+23
  6184  010A0A  52E5               	movf	postdec1,f,c
  6185  010A0C  006F FF9C  F040    	movff	indf1,btemp+22
  6186  010A12  52E5               	movf	postdec1,f,c
  6187  010A14  006F FF9C  F03F    	movff	indf1,btemp+21
  6188  010A1A  52E5               	movf	postdec1,f,c
  6189  010A1C  006F FF9C  F03E    	movff	indf1,btemp+20
  6190  010A22  52E5               	movf	postdec1,f,c
  6191  010A24  006F FF9C  F03D    	movff	indf1,btemp+19
  6192  010A2A  52E5               	movf	postdec1,f,c
  6193  010A2C  006F FF9C  F03C    	movff	indf1,btemp+18
  6194  010A32  52E5               	movf	postdec1,f,c
  6195  010A34  006F FF9C  F03B    	movff	indf1,btemp+17
  6196  010A3A  52E5               	movf	postdec1,f,c
  6197  010A3C  006F FF9C  F03A    	movff	indf1,btemp+16
  6198  010A42  0060  F0E8  F0DA   	movff	btemp+16,_pclock
  6199  010A48  0060  F0EC  F0DB   	movff	btemp+17,_pclock+1
  6200  010A4E  0060  F0F0  F0DC   	movff	btemp+18,_pclock+2
  6201  010A54  0060  F0F4  F0DD   	movff	btemp+19,_pclock+3
  6202  010A5A  0060  F0F8  F0DE   	movff	btemp+20,_pclock+4
  6203  010A60  0060  F0FC  F0DF   	movff	btemp+21,_pclock+5
  6204  010A66  0060  F100  F0E0   	movff	btemp+22,_pclock+6
  6205  010A6C  0060  F104  F0E1   	movff	btemp+23,_pclock+7
  6206                           
  6207                           ; BSR set to: 57
  6208                           ;main.c: 377:    t_mbmc = localtime(&pclock);
  6209  010A72  0EDA               	movlw	_pclock& (0+255)
  6210  010A74  6EE6               	movwf	postinc1,c
  6211  010A76  EC6D  F014         	call	_localtime	;wreg free
  6212  010A7A  0060  F0A8  F0BC   	movff	btemp,_t_mbmc
  6213  010A80  0060  F0AC  F0BD   	movff	btemp+1,_t_mbmc+1
  6214                           
  6215                           ;main.c: 378:    sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
  6216  010A86  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
  6217  010A8C  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
  6218  010A92  EC0D  F0C1         	call	_asctime	;wreg free
  6219  010A96  0060  F0AB  FFE6   	movff	btemp,postinc1
  6220  010A9C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6221  010AA2  0E76               	movlw	low (STR_77+5)
  6222  010AA4  6EE6               	movwf	postinc1,c
  6223  010AA6  0EFF               	movlw	high (STR_77+5)
  6224  010AA8  6EE6               	movwf	postinc1,c
  6225  010AAA  0E00               	movlw	0
  6226  010AAC  6EE6               	movwf	postinc1,c
  6227  010AAE  0E03               	movlw	3
  6228  010AB0  6EE6               	movwf	postinc1,c
  6229  010AB2  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  6230  010AB6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6231  010ABC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6232  010AC2  0E06               	movlw	6
  6233  010AC4  6EE6               	movwf	postinc1,c
  6234  010AC6  EC71  F0FD         	call	_sprintf	;wreg free
  6235                           
  6236                           ; BSR set to: 0
  6237                           ;main.c: 379:    sprintf(get_vterm_ptr(3, 1), "%s           ", asctime(t_mbmc));
  6238  010ACA  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
  6239  010AD0  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
  6240  010AD6  EC0D  F0C1         	call	_asctime	;wreg free
  6241  010ADA  0060  F0AB  FFE6   	movff	btemp,postinc1
  6242  010AE0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6243  010AE6  0E76               	movlw	low (STR_77+5)
  6244  010AE8  6EE6               	movwf	postinc1,c
  6245  010AEA  0EFF               	movlw	high (STR_77+5)
  6246  010AEC  6EE6               	movwf	postinc1,c
  6247  010AEE  0E01               	movlw	1
  6248  010AF0  6EE6               	movwf	postinc1,c
  6249  010AF2  0E03               	movlw	3
  6250  010AF4  6EE6               	movwf	postinc1,c
  6251  010AF6  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  6252  010AFA  0060  F0AB  FFE6   	movff	btemp,postinc1
  6253  010B00  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6254  010B06  0E06               	movlw	6
  6255  010B08  6EE6               	movwf	postinc1,c
  6256  010B0A  EC71  F0FD         	call	_sprintf	;wreg free
  6257                           
  6258                           ; BSR set to: 0
  6259                           ;main.c: 380:    calc_model_data();
  6260  010B0E  ECA3  F0CC         	call	_calc_model_data	;wreg free
  6261                           
  6262                           ; BSR set to: 57
  6263                           ;main.c: 381:    if (C.dupdate) {
  6264  010B12  EE22  F22E         	lfsr	2,_C+303	;volatile
  6265  010B16  50DF               	movf	indf2,w,c
  6266  010B18  B4D8               	btfsc	status,2,c
  6267  010B1A  D0A4               	goto	l17652
  6268                           
  6269                           ; BSR set to: 57
  6270                           ;main.c: 382:     C.dupdate = 0;
  6271  010B1C  0E00               	movlw	0
  6272  010B1E  006F FFA0  FA2E    	movff	wreg,_C+303	;volatile
  6273                           
  6274                           ;main.c: 383:     set_hist_flag();
  6275  010B24  EC39  F015         	call	_set_hist_flag	;wreg free
  6276                           
  6277                           ; BSR set to: 1
  6278                           ;main.c: 384:     load_hist_data();
  6279  010B28  EC70  F0CA         	call	_load_hist_data	;wreg free
  6280                           
  6281                           ; BSR set to: 57
  6282                           ;main.c: 385:     update_hist_data(0, &C.hist[0]);
  6283  010B2C  0EB8               	movlw	low (_C+185)
  6284  010B2E  6EE6               	movwf	postinc1,c
  6285  010B30  0E09               	movlw	high (_C+185)
  6286  010B32  6EE6               	movwf	postinc1,c
  6287  010B34  0E00               	movlw	0
  6288  010B36  6EE6               	movwf	postinc1,c
  6289  010B38  EC9D  F009         	call	_update_hist_data	;wreg free
  6290                           
  6291                           ;main.c: 386:     write_cal_data();
  6292  010B3C  EC80  F0F7         	call	_write_cal_data	;wreg free
  6293                           
  6294                           ;main.c: 387:     sprintf(get_vterm_ptr(0, 0), "History Data  Saved  ");
  6295  010B40  0EB3               	movlw	low STR_30
  6296  010B42  6EE6               	movwf	postinc1,c
  6297  010B44  0EFE               	movlw	high STR_30
  6298  010B46  6EE6               	movwf	postinc1,c
  6299  010B48  0E00               	movlw	0
  6300  010B4A  6EE6               	movwf	postinc1,c
  6301  010B4C  0E00               	movlw	0
  6302  010B4E  6EE6               	movwf	postinc1,c
  6303  010B50  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  6304  010B54  0060  F0AB  FFE6   	movff	btemp,postinc1
  6305  010B5A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6306  010B60  0E04               	movlw	4
  6307  010B62  6EE6               	movwf	postinc1,c
  6308  010B64  EC71  F0FD         	call	_sprintf	;wreg free
  6309                           
  6310                           ; BSR set to: 0
  6311                           ;main.c: 388:     sprintf(get_vterm_ptr(1, 0), "To EEPROM            ");
  6312  010B68  0E7F               	movlw	low STR_31
  6313  010B6A  6EE6               	movwf	postinc1,c
  6314  010B6C  0EFD               	movlw	high STR_31
  6315  010B6E  6EE6               	movwf	postinc1,c
  6316  010B70  0E00               	movlw	0
  6317  010B72  6EE6               	movwf	postinc1,c
  6318  010B74  0E01               	movlw	1
  6319  010B76  6EE6               	movwf	postinc1,c
  6320  010B78  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  6321  010B7C  0060  F0AB  FFE6   	movff	btemp,postinc1
  6322  010B82  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6323  010B88  0E04               	movlw	4
  6324  010B8A  6EE6               	movwf	postinc1,c
  6325  010B8C  EC71  F0FD         	call	_sprintf	;wreg free
  6326                           
  6327                           ; BSR set to: 0
  6328                           ;main.c: 389:     sprintf(get_vterm_ptr(2, 0), " Time %lu, %lu       ", time(((void*)0))
      +                          , C.hist[0].updates);
  6329  010B90  EE22  F1C4         	lfsr	2,_C+197	;volatile
  6330  010B94  006F FF7B FFE6     	movff	postinc2,postinc1
  6331  010B9A  006F FF7B FFE6     	movff	postinc2,postinc1
  6332  010BA0  006F FF7B FFE6     	movff	postinc2,postinc1
  6333  010BA6  006F FF7B FFE6     	movff	postinc2,postinc1
  6334  010BAC  0E00               	movlw	0
  6335  010BAE  6EE6               	movwf	postinc1,c
  6336  010BB0  0E00               	movlw	0
  6337  010BB2  6EE6               	movwf	postinc1,c
  6338  010BB4  ECBD  F00C         	call	_time	;wreg free
  6339  010BB8  52E5               	movf	postdec1,f,c
  6340  010BBA  006F FF9C  F041    	movff	indf1,btemp+23
  6341  010BC0  52E5               	movf	postdec1,f,c
  6342  010BC2  006F FF9C  F040    	movff	indf1,btemp+22
  6343  010BC8  52E5               	movf	postdec1,f,c
  6344  010BCA  006F FF9C  F03F    	movff	indf1,btemp+21
  6345  010BD0  52E5               	movf	postdec1,f,c
  6346  010BD2  006F FF9C  F03E    	movff	indf1,btemp+20
  6347  010BD8  52E5               	movf	postdec1,f,c
  6348  010BDA  006F FF9C  F03D    	movff	indf1,btemp+19
  6349  010BE0  52E5               	movf	postdec1,f,c
  6350  010BE2  006F FF9C  F03C    	movff	indf1,btemp+18
  6351  010BE8  52E5               	movf	postdec1,f,c
  6352  010BEA  006F FF9C  F03B    	movff	indf1,btemp+17
  6353  010BF0  52E5               	movf	postdec1,f,c
  6354  010BF2  006F FF9C  F03A    	movff	indf1,btemp+16
  6355  010BF8  0060  F0EB  FFE6   	movff	btemp+16,postinc1
  6356  010BFE  0060  F0EF  FFE6   	movff	btemp+17,postinc1
  6357  010C04  0060  F0F3  FFE6   	movff	btemp+18,postinc1
  6358  010C0A  0060  F0F7  FFE6   	movff	btemp+19,postinc1
  6359  010C10  0060  F0FB  FFE6   	movff	btemp+20,postinc1
  6360  010C16  0060  F0FF  FFE6   	movff	btemp+21,postinc1
  6361  010C1C  0060  F103  FFE6   	movff	btemp+22,postinc1
  6362  010C22  0060  F107  FFE6   	movff	btemp+23,postinc1
  6363  010C28  0E2F               	movlw	low STR_32
  6364  010C2A  6EE6               	movwf	postinc1,c
  6365  010C2C  0EFE               	movlw	high STR_32
  6366  010C2E  6EE6               	movwf	postinc1,c
  6367  010C30  0E00               	movlw	0
  6368  010C32  6EE6               	movwf	postinc1,c
  6369  010C34  0E02               	movlw	2
  6370  010C36  6EE6               	movwf	postinc1,c
  6371  010C38  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  6372  010C3C  0060  F0AB  FFE6   	movff	btemp,postinc1
  6373  010C42  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6374  010C48  0E10               	movlw	16
  6375  010C4A  6EE6               	movwf	postinc1,c
  6376  010C4C  EC71  F0FD         	call	_sprintf	;wreg free
  6377                           
  6378                           ; BSR set to: 0
  6379                           ;main.c: 390:     update_lcd(0);
  6380  010C50  0E00               	movlw	0
  6381  010C52  6EE6               	movwf	postinc1,c
  6382  010C54  EC23  F0F6         	call	_update_lcd	;wreg free
  6383                           
  6384                           ;main.c: 391:     WaitMs(2000);
  6385  010C58  0ED0               	movlw	208
  6386  010C5A  6EE6               	movwf	postinc1,c
  6387  010C5C  0E07               	movlw	7
  6388  010C5E  6EE6               	movwf	postinc1,c
  6389  010C60  ECA9  F010         	call	_WaitMs	;wreg free
  6390  010C64                     l17652:
  6391                           
  6392                           ;main.c: 399:     hid_display(&H);
  6393  010C64  0E9B               	movlw	low _H
  6394  010C66  6EE6               	movwf	postinc1,c
  6395  010C68  0E01               	movlw	high _H
  6396  010C6A  6EE6               	movwf	postinc1,c
  6397  010C6C  EC10  F0E9         	call	_hid_display	;wreg free
  6398                           
  6399                           ;main.c: 400:     switch (H.hid_display) {
  6400  010C70  EF63  F08A         	goto	l17696
  6401  010C74                     l1485:
  6402                           
  6403                           ; BSR set to: 1
  6404                           ;main.c: 402:      V.calib = 0;
  6405  010C74  0102               	movlb	2	; () banked
  6406  010C76  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6407                           
  6408                           ; BSR set to: 2
  6409                           ;main.c: 403:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f       ", (C.day) ? 'D' 
      +                          : ' ', C.p_pv);
  6410  010C78  EE22  F22D         	lfsr	2,_C+302	;volatile
  6411  010C7C  50DF               	movf	indf2,w,c
  6412  010C7E  A4D8               	btfss	status,2,c
  6413  010C80  D002               	goto	l17658
  6414                           
  6415                           ; BSR set to: 2
  6416  010C82  0E20               	movlw	32
  6417  010C84  D001               	goto	L1
  6418  010C86                     l17658:
  6419                           
  6420                           ; BSR set to: 2
  6421  010C86  0E44               	movlw	68
  6422  010C88                     L1:
  6423  010C88  6E34               	movwf	(btemp+10)^0,c
  6424  010C8A  0E00               	movlw	0
  6425  010C8C  6E35               	movwf	(btemp+11)^0,c
  6426                           
  6427                           ;stkvar	_main$4036 @ sp[(-17)+2]
  6428  010C8E  0EF1               	movlw	-15
  6429  010C90  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6430  010C96  0EF2               	movlw	-14
  6431  010C98  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6432                           
  6433                           ; BSR set to: 2
  6434  010C9E  EE22  F17B         	lfsr	2,_C+124	;volatile
  6435  010CA2  006F FF7B FFE6     	movff	postinc2,postinc1
  6436  010CA8  006F FF7B FFE6     	movff	postinc2,postinc1
  6437  010CAE  006F FF7B FFE6     	movff	postinc2,postinc1
  6438  010CB4  006F FF7B FFE6     	movff	postinc2,postinc1
  6439                           
  6440                           ;stkvar	_main$4036 @ sp[(-21)+2]
  6441  010CBA  0EED               	movlw	-19
  6442  010CBC  006F FF8F FFE6     	movff	plusw1,postinc1
  6443  010CC2  006F FF8F FFE6     	movff	plusw1,postinc1
  6444  010CC8  0EB4               	movlw	low STR_36
  6445  010CCA  6EE6               	movwf	postinc1,c
  6446  010CCC  0EFC               	movlw	high STR_36
  6447  010CCE  6EE6               	movwf	postinc1,c
  6448  010CD0  0E00               	movlw	0
  6449  010CD2  6EE6               	movwf	postinc1,c
  6450  010CD4  0E00               	movlw	0
  6451  010CD6  6EE6               	movwf	postinc1,c
  6452  010CD8  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  6453  010CDC  0060  F0AB  FFE6   	movff	btemp,postinc1
  6454  010CE2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6455  010CE8  0E0A               	movlw	10
  6456  010CEA  6EE6               	movwf	postinc1,c
  6457  010CEC  EC71  F0FD         	call	_sprintf	;wreg free
  6458                           
  6459                           ; BSR set to: 0
  6460                           ;main.c: 404:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f        ", C.p_load);
  6461  010CF0  EE22  F173         	lfsr	2,_C+116	;volatile
  6462  010CF4  006F FF7B FFE6     	movff	postinc2,postinc1
  6463  010CFA  006F FF7B FFE6     	movff	postinc2,postinc1
  6464  010D00  006F FF7B FFE6     	movff	postinc2,postinc1
  6465  010D06  006F FF7B FFE6     	movff	postinc2,postinc1
  6466  010D0C  0E9D               	movlw	low STR_37
  6467  010D0E  6EE6               	movwf	postinc1,c
  6468  010D10  0EFC               	movlw	high STR_37
  6469  010D12  6EE6               	movwf	postinc1,c
  6470  010D14  0E00               	movlw	0
  6471  010D16  6EE6               	movwf	postinc1,c
  6472  010D18  0E01               	movlw	1
  6473  010D1A  6EE6               	movwf	postinc1,c
  6474  010D1C  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  6475  010D20  0060  F0AB  FFE6   	movff	btemp,postinc1
  6476  010D26  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6477  010D2C  0E08               	movlw	8
  6478  010D2E  6EE6               	movwf	postinc1,c
  6479  010D30  EC71  F0FD         	call	_sprintf	;wreg free
  6480                           
  6481                           ; BSR set to: 0
  6482                           ;main.c: 405:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f        ", C.p_inverter);
  6483  010D34  EE22  F177         	lfsr	2,_C+120	;volatile
  6484  010D38  006F FF7B FFE6     	movff	postinc2,postinc1
  6485  010D3E  006F FF7B FFE6     	movff	postinc2,postinc1
  6486  010D44  006F FF7B FFE6     	movff	postinc2,postinc1
  6487  010D4A  006F FF7B FFE6     	movff	postinc2,postinc1
  6488  010D50  0E86               	movlw	low STR_38
  6489  010D52  6EE6               	movwf	postinc1,c
  6490  010D54  0EFC               	movlw	high STR_38
  6491  010D56  6EE6               	movwf	postinc1,c
  6492  010D58  0E00               	movlw	0
  6493  010D5A  6EE6               	movwf	postinc1,c
  6494  010D5C  0E02               	movlw	2
  6495  010D5E  6EE6               	movwf	postinc1,c
  6496  010D60  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  6497  010D64  0060  F0AB  FFE6   	movff	btemp,postinc1
  6498  010D6A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6499  010D70  0E08               	movlw	8
  6500  010D72  6EE6               	movwf	postinc1,c
  6501  010D74  EC71  F0FD         	call	_sprintf	;wreg free
  6502                           
  6503                           ; BSR set to: 0
  6504                           ;main.c: 407:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f        ", (C.day) ? 'D' 
      +                          : ' ', C.pvkw);
  6505  010D78  EE22  F22D         	lfsr	2,_C+302	;volatile
  6506  010D7C  50DF               	movf	indf2,w,c
  6507  010D7E  A4D8               	btfss	status,2,c
  6508  010D80  D002               	goto	l17670
  6509                           
  6510                           ; BSR set to: 0
  6511  010D82  0E20               	movlw	32
  6512  010D84  D001               	goto	L2
  6513  010D86                     l17670:
  6514                           
  6515                           ; BSR set to: 0
  6516  010D86  0E44               	movlw	68
  6517  010D88                     L2:
  6518  010D88  6E34               	movwf	(btemp+10)^0,c
  6519  010D8A  0E00               	movlw	0
  6520  010D8C  6E35               	movwf	(btemp+11)^0,c
  6521                           
  6522                           ;stkvar	_main$4040 @ sp[(-17)+0]
  6523  010D8E  0EEF               	movlw	-17
  6524  010D90  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6525  010D96  0EF0               	movlw	-16
  6526  010D98  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6527                           
  6528                           ; BSR set to: 0
  6529  010D9E  EE22  F1A7         	lfsr	2,_C+168	;volatile
  6530  010DA2  006F FF7B FFE6     	movff	postinc2,postinc1
  6531  010DA8  006F FF7B FFE6     	movff	postinc2,postinc1
  6532  010DAE  006F FF7B FFE6     	movff	postinc2,postinc1
  6533  010DB4  006F FF7B FFE6     	movff	postinc2,postinc1
  6534                           
  6535                           ;stkvar	_main$4040 @ sp[(-21)+0]
  6536  010DBA  0EEB               	movlw	-21
  6537  010DBC  006F FF8F FFE6     	movff	plusw1,postinc1
  6538  010DC2  006F FF8F FFE6     	movff	plusw1,postinc1
  6539  010DC8  0E6F               	movlw	low STR_39
  6540  010DCA  6EE6               	movwf	postinc1,c
  6541  010DCC  0EFC               	movlw	high STR_39
  6542  010DCE  6EE6               	movwf	postinc1,c
  6543  010DD0  0E01               	movlw	1
  6544  010DD2  6EE6               	movwf	postinc1,c
  6545  010DD4  0E00               	movlw	0
  6546  010DD6  6EE6               	movwf	postinc1,c
  6547  010DD8  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  6548  010DDC  0060  F0AB  FFE6   	movff	btemp,postinc1
  6549  010DE2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6550  010DE8  0E0A               	movlw	10
  6551  010DEA  6EE6               	movwf	postinc1,c
  6552  010DEC  EC71  F0FD         	call	_sprintf	;wreg free
  6553                           
  6554                           ; BSR set to: 0
  6555                           ;main.c: 408:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f         ", C.loadkw);
  6556  010DF0  EE22  F1AF         	lfsr	2,_C+176	;volatile
  6557  010DF4  006F FF7B FFE6     	movff	postinc2,postinc1
  6558  010DFA  006F FF7B FFE6     	movff	postinc2,postinc1
  6559  010E00  006F FF7B FFE6     	movff	postinc2,postinc1
  6560  010E06  006F FF7B FFE6     	movff	postinc2,postinc1
  6561  010E0C  0E58               	movlw	low STR_40
  6562  010E0E  6EE6               	movwf	postinc1,c
  6563  010E10  0EFC               	movlw	high STR_40
  6564  010E12  6EE6               	movwf	postinc1,c
  6565  010E14  0E01               	movlw	1
  6566  010E16  6EE6               	movwf	postinc1,c
  6567  010E18  0E01               	movlw	1
  6568  010E1A  6EE6               	movwf	postinc1,c
  6569  010E1C  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  6570  010E20  0060  F0AB  FFE6   	movff	btemp,postinc1
  6571  010E26  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6572  010E2C  0E08               	movlw	8
  6573  010E2E  6EE6               	movwf	postinc1,c
  6574  010E30  EC71  F0FD         	call	_sprintf	;wreg free
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;main.c: 409:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f         ", C.invkw);
  6578  010E34  EE22  F1AB         	lfsr	2,_C+172	;volatile
  6579  010E38  006F FF7B FFE6     	movff	postinc2,postinc1
  6580  010E3E  006F FF7B FFE6     	movff	postinc2,postinc1
  6581  010E44  006F FF7B FFE6     	movff	postinc2,postinc1
  6582  010E4A  006F FF7B FFE6     	movff	postinc2,postinc1
  6583  010E50  0E41               	movlw	low STR_41
  6584  010E52  6EE6               	movwf	postinc1,c
  6585  010E54  0EFC               	movlw	high STR_41
  6586  010E56  6EE6               	movwf	postinc1,c
  6587  010E58  0E01               	movlw	1
  6588  010E5A  6EE6               	movwf	postinc1,c
  6589  010E5C  0E02               	movlw	2
  6590  010E5E  6EE6               	movwf	postinc1,c
  6591  010E60  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  6592  010E64  0060  F0AB  FFE6   	movff	btemp,postinc1
  6593  010E6A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6594  010E70  0E08               	movlw	8
  6595  010E72  6EE6               	movwf	postinc1,c
  6596  010E74  EC71  F0FD         	call	_sprintf	;wreg free
  6597                           
  6598                           ;main.c: 410:      break;
  6599  010E78  D33C               	goto	l17698
  6600  010E7A                     l1495:
  6601                           
  6602                           ; BSR set to: 1
  6603                           ;main.c: 412:      V.calib = 0;
  6604  010E7A  0102               	movlb	2	; () banked
  6605  010E7C  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6606                           
  6607                           ; BSR set to: 2
  6608                           ;main.c: 413:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f     ", C.calc[V_PV], 
      +                          C.calc[C_PV]);
  6609  010E7E  EE22  F103         	lfsr	2,_C+4	;volatile
  6610  010E82  006F FF7B FFE6     	movff	postinc2,postinc1
  6611  010E88  006F FF7B FFE6     	movff	postinc2,postinc1
  6612  010E8E  006F FF7B FFE6     	movff	postinc2,postinc1
  6613  010E94  006F FF7B FFE6     	movff	postinc2,postinc1
  6614  010E9A  EE22  F113         	lfsr	2,_C+20	;volatile
  6615  010E9E  006F FF7B FFE6     	movff	postinc2,postinc1
  6616  010EA4  006F FF7B FFE6     	movff	postinc2,postinc1
  6617  010EAA  006F FF7B FFE6     	movff	postinc2,postinc1
  6618  010EB0  006F FF7B FFE6     	movff	postinc2,postinc1
  6619  010EB6  0E10               	movlw	low STR_42
  6620  010EB8  6EE6               	movwf	postinc1,c
  6621  010EBA  0EFD               	movlw	high STR_42
  6622  010EBC  6EE6               	movwf	postinc1,c
  6623  010EBE  0E00               	movlw	0
  6624  010EC0  6EE6               	movwf	postinc1,c
  6625  010EC2  0E00               	movlw	0
  6626  010EC4  6EE6               	movwf	postinc1,c
  6627  010EC6  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  6628  010ECA  0060  F0AB  FFE6   	movff	btemp,postinc1
  6629  010ED0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6630  010ED6  0E0C               	movlw	12
  6631  010ED8  6EE6               	movwf	postinc1,c
  6632  010EDA  EC71  F0FD         	call	_sprintf	;wreg free
  6633                           
  6634                           ;main.c: 414:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f     ", C.calc[V_BAT],
      +                           C.calc[C_BATT]);
  6635  010EDE  EE22  F0FF         	lfsr	2,_C
  6636  010EE2  006F FF7B FFE6     	movff	postinc2,postinc1
  6637  010EE8  006F FF7B FFE6     	movff	postinc2,postinc1
  6638  010EEE  006F FF7B FFE6     	movff	postinc2,postinc1
  6639  010EF4  006F FF7B FFE6     	movff	postinc2,postinc1
  6640  010EFA  EE22  F10F         	lfsr	2,_C+16	;volatile
  6641  010EFE  006F FF7B FFE6     	movff	postinc2,postinc1
  6642  010F04  006F FF7B FFE6     	movff	postinc2,postinc1
  6643  010F0A  006F FF7B FFE6     	movff	postinc2,postinc1
  6644  010F10  006F FF7B FFE6     	movff	postinc2,postinc1
  6645  010F16  0EE2               	movlw	low STR_43
  6646  010F18  6EE6               	movwf	postinc1,c
  6647  010F1A  0EFC               	movlw	high STR_43
  6648  010F1C  6EE6               	movwf	postinc1,c
  6649  010F1E  0E00               	movlw	0
  6650  010F20  6EE6               	movwf	postinc1,c
  6651  010F22  0E01               	movlw	1
  6652  010F24  6EE6               	movwf	postinc1,c
  6653  010F26  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  6654  010F2A  0060  F0AB  FFE6   	movff	btemp,postinc1
  6655  010F30  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6656  010F36  0E0C               	movlw	12
  6657  010F38  6EE6               	movwf	postinc1,c
  6658  010F3A  EC71  F0FD         	call	_sprintf	;wreg free
  6659                           
  6660                           ;main.c: 415:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f     ", C.calc[V_CC], 
      +                          C.c_load);
  6661  010F3E  EE22  F13F         	lfsr	2,_C+64	;volatile
  6662  010F42  006F FF7B FFE6     	movff	postinc2,postinc1
  6663  010F48  006F FF7B FFE6     	movff	postinc2,postinc1
  6664  010F4E  006F FF7B FFE6     	movff	postinc2,postinc1
  6665  010F54  006F FF7B FFE6     	movff	postinc2,postinc1
  6666  010F5A  EE22  F107         	lfsr	2,_C+8	;volatile
  6667  010F5E  006F FF7B FFE6     	movff	postinc2,postinc1
  6668  010F64  006F FF7B FFE6     	movff	postinc2,postinc1
  6669  010F6A  006F FF7B FFE6     	movff	postinc2,postinc1
  6670  010F70  006F FF7B FFE6     	movff	postinc2,postinc1
  6671  010F76  0EF9               	movlw	low STR_44
  6672  010F78  6EE6               	movwf	postinc1,c
  6673  010F7A  0EFC               	movlw	high STR_44
  6674  010F7C  6EE6               	movwf	postinc1,c
  6675  010F7E  0E00               	movlw	0
  6676  010F80  6EE6               	movwf	postinc1,c
  6677  010F82  0E02               	movlw	2
  6678  010F84  6EE6               	movwf	postinc1,c
  6679  010F86  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  6680  010F8A  0060  F0AB  FFE6   	movff	btemp,postinc1
  6681  010F90  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6682  010F96  0E0C               	movlw	12
  6683  010F98  6EE6               	movwf	postinc1,c
  6684  010F9A  EC71  F0FD         	call	_sprintf	;wreg free
  6685                           
  6686                           ;main.c: 417:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f         ", C.bkwi);
  6687  010F9E  EE22  F19F         	lfsr	2,_C+160	;volatile
  6688  010FA2  006F FF7B FFE6     	movff	postinc2,postinc1
  6689  010FA8  006F FF7B FFE6     	movff	postinc2,postinc1
  6690  010FAE  006F FF7B FFE6     	movff	postinc2,postinc1
  6691  010FB4  006F FF7B FFE6     	movff	postinc2,postinc1
  6692  010FBA  0EFC               	movlw	low STR_45
  6693  010FBC  6EE6               	movwf	postinc1,c
  6694  010FBE  0EFB               	movlw	high STR_45
  6695  010FC0  6EE6               	movwf	postinc1,c
  6696  010FC2  0E01               	movlw	1
  6697  010FC4  6EE6               	movwf	postinc1,c
  6698  010FC6  0E00               	movlw	0
  6699  010FC8  6EE6               	movwf	postinc1,c
  6700  010FCA  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  6701  010FCE  0060  F0AB  FFE6   	movff	btemp,postinc1
  6702  010FD4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6703  010FDA  0E08               	movlw	8
  6704  010FDC  6EE6               	movwf	postinc1,c
  6705  010FDE  EC71  F0FD         	call	_sprintf	;wreg free
  6706                           
  6707                           ;main.c: 418:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f         ", C.bkwo);
  6708  010FE2  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6709  010FE6  006F FF7B FFE6     	movff	postinc2,postinc1
  6710  010FEC  006F FF7B FFE6     	movff	postinc2,postinc1
  6711  010FF2  006F FF7B FFE6     	movff	postinc2,postinc1
  6712  010FF8  006F FF7B FFE6     	movff	postinc2,postinc1
  6713  010FFE  0E13               	movlw	low STR_46
  6714  011000  6EE6               	movwf	postinc1,c
  6715  011002  0EFC               	movlw	high STR_46
  6716  011004  6EE6               	movwf	postinc1,c
  6717  011006  0E01               	movlw	1
  6718  011008  6EE6               	movwf	postinc1,c
  6719  01100A  0E01               	movlw	1
  6720  01100C  6EE6               	movwf	postinc1,c
  6721  01100E  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  6722  011012  0060  F0AB  FFE6   	movff	btemp,postinc1
  6723  011018  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6724  01101E  0E08               	movlw	8
  6725  011020  6EE6               	movwf	postinc1,c
  6726  011022  EC71  F0FD         	call	_sprintf	;wreg free
  6727                           
  6728                           ;main.c: 419:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f         ", C.bkwi + C.bkw
      +                          o);
  6729  011026  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6730  01102A  006F FF7B FFE6     	movff	postinc2,postinc1
  6731  011030  006F FF7B FFE6     	movff	postinc2,postinc1
  6732  011036  006F FF7B FFE6     	movff	postinc2,postinc1
  6733  01103C  006F FF7B FFE6     	movff	postinc2,postinc1
  6734  011042  EE22  F19F         	lfsr	2,_C+160	;volatile
  6735  011046  006F FF7B FFE6     	movff	postinc2,postinc1
  6736  01104C  006F FF7B FFE6     	movff	postinc2,postinc1
  6737  011052  006F FF7B FFE6     	movff	postinc2,postinc1
  6738  011058  006F FF7B FFE6     	movff	postinc2,postinc1
  6739  01105E  EC14  F0B7         	call	___fladd	;wreg free
  6740  011062  0060  F0AB  FFE6   	movff	btemp,postinc1
  6741  011068  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6742  01106E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  6743  011074  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  6744  01107A  0E2A               	movlw	low STR_47
  6745  01107C  6EE6               	movwf	postinc1,c
  6746  01107E  0EFC               	movlw	high STR_47
  6747  011080  6EE6               	movwf	postinc1,c
  6748  011082  0E01               	movlw	1
  6749  011084  6EE6               	movwf	postinc1,c
  6750  011086  0E02               	movlw	2
  6751  011088  6EE6               	movwf	postinc1,c
  6752  01108A  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  6753  01108E  0060  F0AB  FFE6   	movff	btemp,postinc1
  6754  011094  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6755  01109A  0E08               	movlw	8
  6756  01109C  6EE6               	movwf	postinc1,c
  6757  01109E  EC71  F0FD         	call	_sprintf	;wreg free
  6758                           
  6759                           ;main.c: 420:      break;
  6760  0110A2  D227               	goto	l17698
  6761  0110A4                     l1496:
  6762                           
  6763                           ; BSR set to: 1
  6764                           ;main.c: 422:      V.calib = 0;
  6765  0110A4  0102               	movlb	2	; () banked
  6766  0110A6  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6767                           
  6768                           ; BSR set to: 2
  6769                           ;main.c: 423:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f         ", C.p_bat);
  6770  0110A8  EE22  F17F         	lfsr	2,_C+128	;volatile
  6771  0110AC  006F FF7B FFE6     	movff	postinc2,postinc1
  6772  0110B2  006F FF7B FFE6     	movff	postinc2,postinc1
  6773  0110B8  006F FF7B FFE6     	movff	postinc2,postinc1
  6774  0110BE  006F FF7B FFE6     	movff	postinc2,postinc1
  6775  0110C4  0E57               	movlw	low STR_48
  6776  0110C6  6EE6               	movwf	postinc1,c
  6777  0110C8  0EFB               	movlw	high STR_48
  6778  0110CA  6EE6               	movwf	postinc1,c
  6779  0110CC  0E00               	movlw	0
  6780  0110CE  6EE6               	movwf	postinc1,c
  6781  0110D0  0E00               	movlw	0
  6782  0110D2  6EE6               	movwf	postinc1,c
  6783  0110D4  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  6784  0110D8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6785  0110DE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6786  0110E4  0E08               	movlw	8
  6787  0110E6  6EE6               	movwf	postinc1,c
  6788  0110E8  EC71  F0FD         	call	_sprintf	;wreg free
  6789                           
  6790                           ;main.c: 424:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f       ", C.dynamic_ah,
      +                           C.pv_ah);
  6791  0110EC  EE22  F193         	lfsr	2,_C+148	;volatile
  6792  0110F0  006F FF7B FFE6     	movff	postinc2,postinc1
  6793  0110F6  006F FF7B FFE6     	movff	postinc2,postinc1
  6794  0110FC  006F FF7B FFE6     	movff	postinc2,postinc1
  6795  011102  006F FF7B FFE6     	movff	postinc2,postinc1
  6796  011108  EE22  F18F         	lfsr	2,_C+144	;volatile
  6797  01110C  006F FF7B FFE6     	movff	postinc2,postinc1
  6798  011112  006F FF7B FFE6     	movff	postinc2,postinc1
  6799  011118  006F FF7B FFE6     	movff	postinc2,postinc1
  6800  01111E  006F FF7B FFE6     	movff	postinc2,postinc1
  6801  011124  0E9F               	movlw	low STR_49
  6802  011126  6EE6               	movwf	postinc1,c
  6803  011128  0EFB               	movlw	high STR_49
  6804  01112A  6EE6               	movwf	postinc1,c
  6805  01112C  0E00               	movlw	0
  6806  01112E  6EE6               	movwf	postinc1,c
  6807  011130  0E01               	movlw	1
  6808  011132  6EE6               	movwf	postinc1,c
  6809  011134  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  6810  011138  0060  F0AB  FFE6   	movff	btemp,postinc1
  6811  01113E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6812  011144  0E0C               	movlw	12
  6813  011146  6EE6               	movwf	postinc1,c
  6814  011148  EC71  F0FD         	call	_sprintf	;wreg free
  6815                           
  6816                           ;main.c: 425:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f        ", spinner
      +                          s(5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  6817  01114C  EE22  F10F         	lfsr	2,_C+16	;volatile
  6818  011150  006F FF7B FFE6     	movff	postinc2,postinc1
  6819  011156  006F FF7B FFE6     	movff	postinc2,postinc1
  6820  01115C  006F FF7B FFE6     	movff	postinc2,postinc1
  6821  011162  006F FF7B FFE6     	movff	postinc2,postinc1
  6822  011168  EE22  F1B3         	lfsr	2,_C+180	;volatile
  6823  01116C  006F FF78  F034    	movff	postinc2,btemp+10
  6824  011172  006F FF74  F035    	movff	postdec2,btemp+11
  6825  011178  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6826  01117E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6827  011184  EE22  F1B5         	lfsr	2,_C+182	;volatile
  6828  011188  006F FF78  F034    	movff	postinc2,btemp+10
  6829  01118E  006F FF74  F035    	movff	postdec2,btemp+11
  6830  011194  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6831  01119A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6832  0111A0  0E00               	movlw	0
  6833  0111A2  6EE6               	movwf	postinc1,c
  6834  0111A4  0E05               	movlw	5
  6835  0111A6  6EE6               	movwf	postinc1,c
  6836  0111A8  ECED  F0FE         	call	_spinners	;wreg free
  6837  0111AC  502A               	movf	btemp^0,w,c
  6838  0111AE  6EE6               	movwf	postinc1,c
  6839  0111B0  0E00               	movlw	0
  6840  0111B2  6EE6               	movwf	postinc1,c
  6841  0111B4  0E9B               	movlw	low STR_50
  6842  0111B6  6EE6               	movwf	postinc1,c
  6843  0111B8  0EFA               	movlw	high STR_50
  6844  0111BA  6EE6               	movwf	postinc1,c
  6845  0111BC  0E00               	movlw	0
  6846  0111BE  6EE6               	movwf	postinc1,c
  6847  0111C0  0E02               	movlw	2
  6848  0111C2  6EE6               	movwf	postinc1,c
  6849  0111C4  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  6850  0111C8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6851  0111CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6852  0111D4  0E0E               	movlw	14
  6853  0111D6  6EE6               	movwf	postinc1,c
  6854  0111D8  EC71  F0FD         	call	_sprintf	;wreg free
  6855                           
  6856                           ;main.c: 427:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f             ", C.esr);
  6857  0111DC  EE22  F187         	lfsr	2,_C+136	;volatile
  6858  0111E0  006F FF7B FFE6     	movff	postinc2,postinc1
  6859  0111E6  006F FF7B FFE6     	movff	postinc2,postinc1
  6860  0111EC  006F FF7B FFE6     	movff	postinc2,postinc1
  6861  0111F2  006F FF7B FFE6     	movff	postinc2,postinc1
  6862  0111F8  0E3F               	movlw	low STR_51
  6863  0111FA  6EE6               	movwf	postinc1,c
  6864  0111FC  0EFB               	movlw	high STR_51
  6865  0111FE  6EE6               	movwf	postinc1,c
  6866  011200  0E01               	movlw	1
  6867  011202  6EE6               	movwf	postinc1,c
  6868  011204  0E00               	movlw	0
  6869  011206  6EE6               	movwf	postinc1,c
  6870  011208  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  6871  01120C  0060  F0AB  FFE6   	movff	btemp,postinc1
  6872  011212  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6873  011218  0E08               	movlw	8
  6874  01121A  6EE6               	movwf	postinc1,c
  6875  01121C  EC71  F0FD         	call	_sprintf	;wreg free
  6876                           
  6877                           ;main.c: 428:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f         ", C.bv_one_load
      +                          , C.load_i1);
  6878  011220  EE22  F219         	lfsr	2,_C+282	;volatile
  6879  011224  006F FF7B FFE6     	movff	postinc2,postinc1
  6880  01122A  006F FF7B FFE6     	movff	postinc2,postinc1
  6881  011230  006F FF7B FFE6     	movff	postinc2,postinc1
  6882  011236  006F FF7B FFE6     	movff	postinc2,postinc1
  6883  01123C  EE22  F225         	lfsr	2,_C+294	;volatile
  6884  011240  006F FF7B FFE6     	movff	postinc2,postinc1
  6885  011246  006F FF7B FFE6     	movff	postinc2,postinc1
  6886  01124C  006F FF7B FFE6     	movff	postinc2,postinc1
  6887  011252  006F FF7B FFE6     	movff	postinc2,postinc1
  6888  011258  0E6F               	movlw	low STR_52
  6889  01125A  6EE6               	movwf	postinc1,c
  6890  01125C  0EFB               	movlw	high STR_52
  6891  01125E  6EE6               	movwf	postinc1,c
  6892  011260  0E01               	movlw	1
  6893  011262  6EE6               	movwf	postinc1,c
  6894  011264  0E01               	movlw	1
  6895  011266  6EE6               	movwf	postinc1,c
  6896  011268  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  6897  01126C  0060  F0AB  FFE6   	movff	btemp,postinc1
  6898  011272  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6899  011278  0E0C               	movlw	12
  6900  01127A  6EE6               	movwf	postinc1,c
  6901  01127C  EC71  F0FD         	call	_sprintf	;wreg free
  6902                           
  6903                           ;main.c: 429:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f         ", C.bv_full_loa
      +                          d, C.load_i2);
  6904  011280  EE22  F21D         	lfsr	2,_C+286	;volatile
  6905  011284  006F FF7B FFE6     	movff	postinc2,postinc1
  6906  01128A  006F FF7B FFE6     	movff	postinc2,postinc1
  6907  011290  006F FF7B FFE6     	movff	postinc2,postinc1
  6908  011296  006F FF7B FFE6     	movff	postinc2,postinc1
  6909  01129C  EE22  F229         	lfsr	2,_C+298	;volatile
  6910  0112A0  006F FF7B FFE6     	movff	postinc2,postinc1
  6911  0112A6  006F FF7B FFE6     	movff	postinc2,postinc1
  6912  0112AC  006F FF7B FFE6     	movff	postinc2,postinc1
  6913  0112B2  006F FF7B FFE6     	movff	postinc2,postinc1
  6914  0112B8  0E87               	movlw	low STR_53
  6915  0112BA  6EE6               	movwf	postinc1,c
  6916  0112BC  0EFB               	movlw	high STR_53
  6917  0112BE  6EE6               	movwf	postinc1,c
  6918  0112C0  0E01               	movlw	1
  6919  0112C2  6EE6               	movwf	postinc1,c
  6920  0112C4  0E02               	movlw	2
  6921  0112C6  6EE6               	movwf	postinc1,c
  6922  0112C8  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  6923  0112CC  0060  F0AB  FFE6   	movff	btemp,postinc1
  6924  0112D2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6925  0112D8  0E0C               	movlw	12
  6926  0112DA  6EE6               	movwf	postinc1,c
  6927  0112DC  EC71  F0FD         	call	_sprintf	;wreg free
  6928                           
  6929                           ;main.c: 430:      break;
  6930  0112E0  D108               	goto	l17698
  6931  0112E2                     l17682:
  6932                           
  6933                           ; BSR set to: 1
  6934                           ;main.c: 432:      if (!V.calib) {
  6935  0112E2  0102               	movlb	2	; () banked
  6936  0112E4  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
  6937  0112E6  A4D8               	btfss	status,2,c
  6938  0112E8  D02D               	goto	l17686
  6939                           
  6940                           ; BSR set to: 2
  6941                           ;main.c: 433:       lp_filter(0.0, i, -1);
  6942  0112EA  0EFF               	movlw	255
  6943  0112EC  6EE6               	movwf	postinc1,c
  6944                           
  6945                           ;stkvar	_i @ sp[(-18)+14]
  6946  0112EE  0EFC               	movlw	-4
  6947  0112F0  50E3               	movf	plusw1,w,c
  6948  0112F2  6EE6               	movwf	postinc1,c
  6949  0112F4  0E00               	movlw	0
  6950  0112F6  6EE6               	movwf	postinc1,c
  6951  0112F8  0E00               	movlw	0
  6952  0112FA  6EE6               	movwf	postinc1,c
  6953  0112FC  0E00               	movlw	0
  6954  0112FE  6EE6               	movwf	postinc1,c
  6955  011300  0E00               	movlw	0
  6956  011302  6EE6               	movwf	postinc1,c
  6957  011304  EC0E  F0ED         	call	_lp_filter	;wreg free
  6958                           
  6959                           ;main.c: 434:       lp_filter(0.0, j, -1);
  6960  011308  0EFF               	movlw	255
  6961  01130A  6EE6               	movwf	postinc1,c
  6962                           
  6963                           ;stkvar	_j @ sp[(-18)+13]
  6964  01130C  0EFB               	movlw	-5
  6965  01130E  50E3               	movf	plusw1,w,c
  6966  011310  6EE6               	movwf	postinc1,c
  6967  011312  0E00               	movlw	0
  6968  011314  6EE6               	movwf	postinc1,c
  6969  011316  0E00               	movlw	0
  6970  011318  6EE6               	movwf	postinc1,c
  6971  01131A  0E00               	movlw	0
  6972  01131C  6EE6               	movwf	postinc1,c
  6973  01131E  0E00               	movlw	0
  6974  011320  6EE6               	movwf	postinc1,c
  6975  011322  EC0E  F0ED         	call	_lp_filter	;wreg free
  6976                           
  6977                           ;main.c: 435:       lp_filter(0.0, k, -1);
  6978  011326  0EFF               	movlw	255
  6979  011328  6EE6               	movwf	postinc1,c
  6980                           
  6981                           ;stkvar	_k @ sp[(-18)+12]
  6982  01132A  0EFA               	movlw	-6
  6983  01132C  50E3               	movf	plusw1,w,c
  6984  01132E  6EE6               	movwf	postinc1,c
  6985  011330  0E00               	movlw	0
  6986  011332  6EE6               	movwf	postinc1,c
  6987  011334  0E00               	movlw	0
  6988  011336  6EE6               	movwf	postinc1,c
  6989  011338  0E00               	movlw	0
  6990  01133A  6EE6               	movwf	postinc1,c
  6991  01133C  0E00               	movlw	0
  6992  01133E  6EE6               	movwf	postinc1,c
  6993  011340  EC0E  F0ED         	call	_lp_filter	;wreg free
  6994  011344                     l17686:
  6995                           
  6996                           ;main.c: 437:      V.calib = 1;
  6997  011344  0E01               	movlw	1
  6998  011346  0102               	movlb	2	; () banked
  6999  011348  6FB0               	movwf	(_V+169)& (0+255),b	;volatile
  7000                           
  7001                           ; BSR set to: 2
  7002                           ;main.c: 438:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  7003                           ;stkvar	_inp_index @ sp[(-17)+11]
  7004  01134A  0EFA               	movlw	-6
  7005  01134C  50E3               	movf	plusw1,w,c
  7006  01134E  6EE6               	movwf	postinc1,c
  7007  011350  0E00               	movlw	0
  7008  011352  6EE6               	movwf	postinc1,c
  7009                           
  7010                           ;stkvar	_i @ sp[(-19)+14]
  7011  011354  0EFB               	movlw	-5
  7012  011356  50E3               	movf	plusw1,w,c
  7013  011358  0D04               	mullw	4
  7014  01135A  0EFF               	movlw	low _C
  7015  01135C  24F3               	addwf	243,w,c
  7016  01135E  6ED9               	movwf	fsr2l,c
  7017  011360  0E08               	movlw	high _C
  7018  011362  20F4               	addwfc	prodh,w,c
  7019  011364  6EDA               	movwf	fsr2h,c
  7020  011366  006F FF7B FFE6     	movff	postinc2,postinc1
  7021  01136C  006F FF7B FFE6     	movff	postinc2,postinc1
  7022  011372  006F FF7B FFE6     	movff	postinc2,postinc1
  7023  011378  006F FF7B FFE6     	movff	postinc2,postinc1
  7024                           
  7025                           ;stkvar	_i @ sp[(-23)+14]
  7026  01137E  0EF7               	movlw	-9
  7027  011380  50E3               	movf	plusw1,w,c
  7028  011382  6EE6               	movwf	postinc1,c
  7029  011384  ECAC  F013         	call	_get_raw_result	;wreg free
  7030  011388  0060  F0AB  FFE6   	movff	btemp,postinc1
  7031  01138E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7032  011394  0E87               	movlw	low STR_54
  7033  011396  6EE6               	movwf	postinc1,c
  7034  011398  0EFE               	movlw	high STR_54
  7035  01139A  6EE6               	movwf	postinc1,c
  7036  01139C  0E00               	movlw	0
  7037  01139E  6EE6               	movwf	postinc1,c
  7038  0113A0  0E00               	movlw	0
  7039  0113A2  6EE6               	movwf	postinc1,c
  7040  0113A4  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  7041  0113A8  0060  F0AB  FFE6   	movff	btemp,postinc1
  7042  0113AE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7043  0113B4  0E0C               	movlw	12
  7044  0113B6  6EE6               	movwf	postinc1,c
  7045  0113B8  EC71  F0FD         	call	_sprintf	;wreg free
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;main.c: 439:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  7049                           ;stkvar	_inp_index @ sp[(-17)+11]
  7050  0113BC  0EFA               	movlw	-6
  7051  0113BE  50E3               	movf	plusw1,w,c
  7052  0113C0  6E34               	movwf	(btemp+10)^0,c
  7053  0113C2  6A35               	clrf	(btemp+11)^0,c
  7054  0113C4  0E01               	movlw	1
  7055  0113C6  2634               	addwf	(btemp+10)^0,f,c
  7056  0113C8  0E00               	movlw	0
  7057  0113CA  2235               	addwfc	(btemp+11)^0,f,c
  7058  0113CC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  7059  0113D2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  7060                           
  7061                           ;stkvar	_j @ sp[(-19)+13]
  7062  0113D8  0EFA               	movlw	-6
  7063  0113DA  50E3               	movf	plusw1,w,c
  7064  0113DC  0D04               	mullw	4
  7065  0113DE  0EFF               	movlw	low _C
  7066  0113E0  24F3               	addwf	243,w,c
  7067  0113E2  6ED9               	movwf	fsr2l,c
  7068  0113E4  0E08               	movlw	high _C
  7069  0113E6  20F4               	addwfc	prodh,w,c
  7070  0113E8  6EDA               	movwf	fsr2h,c
  7071  0113EA  006F FF7B FFE6     	movff	postinc2,postinc1
  7072  0113F0  006F FF7B FFE6     	movff	postinc2,postinc1
  7073  0113F6  006F FF7B FFE6     	movff	postinc2,postinc1
  7074  0113FC  006F FF7B FFE6     	movff	postinc2,postinc1
  7075                           
  7076                           ;stkvar	_j @ sp[(-23)+13]
  7077  011402  0EF6               	movlw	-10
  7078  011404  50E3               	movf	plusw1,w,c
  7079  011406  6EE6               	movwf	postinc1,c
  7080  011408  ECAC  F013         	call	_get_raw_result	;wreg free
  7081  01140C  0060  F0AB  FFE6   	movff	btemp,postinc1
  7082  011412  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7083  011418  0E87               	movlw	low STR_54
  7084  01141A  6EE6               	movwf	postinc1,c
  7085  01141C  0EFE               	movlw	high STR_54
  7086  01141E  6EE6               	movwf	postinc1,c
  7087  011420  0E00               	movlw	0
  7088  011422  6EE6               	movwf	postinc1,c
  7089  011424  0E01               	movlw	1
  7090  011426  6EE6               	movwf	postinc1,c
  7091  011428  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  7092  01142C  0060  F0AB  FFE6   	movff	btemp,postinc1
  7093  011432  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7094  011438  0E0C               	movlw	12
  7095  01143A  6EE6               	movwf	postinc1,c
  7096  01143C  EC71  F0FD         	call	_sprintf	;wreg free
  7097                           
  7098                           ; BSR set to: 0
  7099                           ;main.c: 440:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  7100                           ;stkvar	_inp_index @ sp[(-17)+11]
  7101  011440  0EFA               	movlw	-6
  7102  011442  50E3               	movf	plusw1,w,c
  7103  011444  6E34               	movwf	(btemp+10)^0,c
  7104  011446  6A35               	clrf	(btemp+11)^0,c
  7105  011448  0E02               	movlw	2
  7106  01144A  2634               	addwf	(btemp+10)^0,f,c
  7107  01144C  0E00               	movlw	0
  7108  01144E  2235               	addwfc	(btemp+11)^0,f,c
  7109  011450  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  7110  011456  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  7111                           
  7112                           ;stkvar	_k @ sp[(-19)+12]
  7113  01145C  0EF9               	movlw	-7
  7114  01145E  50E3               	movf	plusw1,w,c
  7115  011460  0D04               	mullw	4
  7116  011462  0EFF               	movlw	low _C
  7117  011464  24F3               	addwf	243,w,c
  7118  011466  6ED9               	movwf	fsr2l,c
  7119  011468  0E08               	movlw	high _C
  7120  01146A  20F4               	addwfc	prodh,w,c
  7121  01146C  6EDA               	movwf	fsr2h,c
  7122  01146E  006F FF7B FFE6     	movff	postinc2,postinc1
  7123  011474  006F FF7B FFE6     	movff	postinc2,postinc1
  7124  01147A  006F FF7B FFE6     	movff	postinc2,postinc1
  7125  011480  006F FF7B FFE6     	movff	postinc2,postinc1
  7126                           
  7127                           ;stkvar	_k @ sp[(-23)+12]
  7128  011486  0EF5               	movlw	-11
  7129  011488  50E3               	movf	plusw1,w,c
  7130  01148A  6EE6               	movwf	postinc1,c
  7131  01148C  ECAC  F013         	call	_get_raw_result	;wreg free
  7132  011490  0060  F0AB  FFE6   	movff	btemp,postinc1
  7133  011496  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7134  01149C  0E87               	movlw	low STR_54
  7135  01149E  6EE6               	movwf	postinc1,c
  7136  0114A0  0EFE               	movlw	high STR_54
  7137  0114A2  6EE6               	movwf	postinc1,c
  7138  0114A4  0E00               	movlw	0
  7139  0114A6  6EE6               	movwf	postinc1,c
  7140  0114A8  0E02               	movlw	2
  7141  0114AA  6EE6               	movwf	postinc1,c
  7142  0114AC  ECA5  F011         	call	_get_vterm_ptr	;wreg free
  7143  0114B0  0060  F0AB  FFE6   	movff	btemp,postinc1
  7144  0114B6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7145  0114BC  0E0C               	movlw	12
  7146  0114BE  6EE6               	movwf	postinc1,c
  7147  0114C0  EC71  F0FD         	call	_sprintf	;wreg free
  7148                           
  7149                           ;main.c: 441:      break;
  7150  0114C4  D016               	goto	l17698
  7151  0114C6                     l17696:
  7152  0114C6  0101               	movlb	1	; () banked
  7153  0114C8  519B               	movf	_H& (0+255),w,b
  7154  0114CA  6E34               	movwf	(btemp+10)^0,c
  7155  0114CC  6A35               	clrf	(btemp+11)^0,c
  7156                           
  7157                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7158                           ; Switch size 1, requested type "simple"
  7159                           ; Number of cases is 1, Range of values is 0 to 0
  7160                           ; switch strategies available:
  7161                           ; Name         Instructions Cycles
  7162                           ; simple_byte            4     3 (average)
  7163                           ;	Chosen strategy is simple_byte
  7164  0114CE  5035               	movf	(btemp+11)^0,w,c
  7165  0114D0  0A00               	xorlw	0	; case 0
  7166  0114D2  A4D8               	btfss	status,2,c
  7167  0114D4  D00E               	goto	l17698
  7168                           
  7169                           ; BSR set to: 1
  7170                           ; Switch size 1, requested type "simple"
  7171                           ; Number of cases is 4, Range of values is 0 to 3
  7172                           ; switch strategies available:
  7173                           ; Name         Instructions Cycles
  7174                           ; simple_byte           13     7 (average)
  7175                           ;	Chosen strategy is simple_byte
  7176  0114D6  5034               	movf	(btemp+10)^0,w,c
  7177  0114D8  0A00               	xorlw	0	; case 0
  7178  0114DA  B4D8               	btfsc	status,2,c
  7179  0114DC  D4CE               	goto	l1495
  7180  0114DE  0A01               	xorlw	1	; case 1
  7181  0114E0  B4D8               	btfsc	status,2,c
  7182  0114E2  EF3A  F086         	goto	l1485
  7183  0114E6  0A03               	xorlw	3	; case 2
  7184  0114E8  B4D8               	btfsc	status,2,c
  7185  0114EA  D5DC               	goto	l1496
  7186  0114EC  0A01               	xorlw	1	; case 3
  7187  0114EE  B4D8               	btfsc	status,2,c
  7188  0114F0  D6F8               	goto	l17682
  7189  0114F2                     l17698:
  7190                           
  7191                           ;main.c: 445:     clear_hid_pflags(&H);
  7192  0114F2  0E9B               	movlw	low _H
  7193  0114F4  6EE6               	movwf	postinc1,c
  7194  0114F6  0E01               	movlw	high _H
  7195  0114F8  6EE6               	movwf	postinc1,c
  7196  0114FA  EC61  F00B         	call	_clear_hid_pflags	;wreg free
  7197                           
  7198                           ;main.c: 447:    StartTimer(TMR_DISPLAY, 250);
  7199  0114FE  0EFA               	movlw	250
  7200  011500  6EE6               	movwf	postinc1,c
  7201  011502  0E00               	movlw	0
  7202  011504  6EE6               	movwf	postinc1,c
  7203  011506  0E0A               	movlw	10
  7204  011508  6EE6               	movwf	postinc1,c
  7205  01150A  ECBA  F00F         	call	_StartTimer	;wreg free
  7206                           
  7207                           ;main.c: 448:    V.enter = check_enter_button(&H);
  7208  01150E  0E9B               	movlw	low _H
  7209  011510  6EE6               	movwf	postinc1,c
  7210  011512  0E01               	movlw	high _H
  7211  011514  6EE6               	movwf	postinc1,c
  7212  011516  EC54  F00A         	call	_check_enter_button	;wreg free
  7213  01151A  502A               	movf	btemp^0,w,c
  7214  01151C  0102               	movlb	2	; () banked
  7215  01151E  6FB1               	movwf	(_V+170)& (0+255),b	;volatile
  7216                           
  7217                           ; BSR set to: 2
  7218                           ;main.c: 449:    if (V.enter && (H.hid_display != HID_AUX)) {
  7219  011520  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
  7220  011522  B4D8               	btfsc	status,2,c
  7221  011524  D013               	goto	l17712
  7222                           
  7223                           ; BSR set to: 2
  7224  011526  0E03               	movlw	3
  7225  011528  0101               	movlb	1	; () banked
  7226  01152A  199B               	xorwf	_H& (0+255),w,b
  7227  01152C  B4D8               	btfsc	status,2,c
  7228  01152E  D00E               	goto	l17712
  7229                           
  7230                           ; BSR set to: 1
  7231                           ;main.c: 450:     V.enter = 0;
  7232  011530  0102               	movlb	2	; () banked
  7233  011532  6BB1               	clrf	(_V+170)& (0+255),b	;volatile
  7234                           
  7235                           ; BSR set to: 2
  7236                           ;main.c: 451:     V.screen = ~V.screen;
  7237  011534  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7238  011536  D002               	goto	u17240
  7239  011538  0E01               	movlw	1
  7240  01153A  D001               	goto	u17246
  7241  01153C                     u17240:
  7242  01153C  0E00               	movlw	0
  7243  01153E                     u17246:
  7244  01153E  0AFF               	xorlw	255
  7245  011540  6E35               	movwf	(btemp+11)^0,c
  7246  011542  51A0               	movf	(_V+153)& (0+255),w,b	;volatile
  7247  011544  1835               	xorwf	(btemp+11)^0,w,c
  7248  011546  0BFE               	andlw	-2
  7249  011548  1835               	xorwf	(btemp+11)^0,w,c
  7250  01154A  6FA0               	movwf	(_V+153)& (0+255),b	;volatile
  7251  01154C                     l17712:
  7252                           
  7253                           ;main.c: 453:    set_vterm(V.screen);
  7254  01154C  0102               	movlb	2	; () banked
  7255  01154E  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7256  011550  D002               	goto	u17250
  7257  011552  0E01               	movlw	1
  7258  011554  D001               	goto	u17256
  7259  011556                     u17250:
  7260  011556  0E00               	movlw	0
  7261  011558                     u17256:
  7262  011558  6EE6               	movwf	postinc1,c
  7263  01155A  EC1D  F014         	call	_set_vterm	;wreg free
  7264                           
  7265                           ;main.c: 454:    update_lcd(V.screen);
  7266  01155E  0102               	movlb	2	; () banked
  7267  011560  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7268  011562  D002               	goto	u17260
  7269  011564  0E01               	movlw	1
  7270  011566  D001               	goto	u17266
  7271  011568                     u17260:
  7272  011568  0E00               	movlw	0
  7273  01156A                     u17266:
  7274  01156A  6EE6               	movwf	postinc1,c
  7275  01156C  EC23  F0F6         	call	_update_lcd	;wreg free
  7276                           
  7277                           ;main.c: 455:    display_history();
  7278  011570  EC51  F0DA         	call	_display_history	;wreg free
  7279                           
  7280                           ;main.c: 457:    wait_lcd_done();
  7281  011574  ECE4  F014         	call	_wait_lcd_done	;wreg free
  7282                           
  7283                           ; BSR set to: 61
  7284                           ;main.c: 458:    set_dac_a(3.333);
  7285  011578  0EDF               	movlw	223
  7286  01157A  6EE6               	movwf	postinc1,c
  7287  01157C  0E4F               	movlw	79
  7288  01157E  6EE6               	movwf	postinc1,c
  7289  011580  0E55               	movlw	85
  7290  011582  6EE6               	movwf	postinc1,c
  7291  011584  0E40               	movlw	64
  7292  011586  6EE6               	movwf	postinc1,c
  7293  011588  ECF8  F010         	call	_set_dac_a	;wreg free
  7294                           
  7295                           ;main.c: 459:    set_dac_b(6.666);
  7296  01158C  0EDF               	movlw	223
  7297  01158E  6EE6               	movwf	postinc1,c
  7298  011590  0E4F               	movlw	79
  7299  011592  6EE6               	movwf	postinc1,c
  7300  011594  0ED5               	movlw	213
  7301  011596  6EE6               	movwf	postinc1,c
  7302  011598  0E40               	movlw	64
  7303  01159A  6EE6               	movwf	postinc1,c
  7304  01159C  ECDE  F010         	call	_set_dac_b	;wreg free
  7305                           
  7306                           ;main.c: 460:    set_dac();
  7307  0115A0  ECFB  F003         	call	_set_dac	;wreg free
  7308  0115A4                     l17726:
  7309                           
  7310                           ;main.c: 466:   check_help(V.flipper);
  7311  0115A4  0102               	movlb	2	; () banked
  7312  0115A6  51AF               	movf	(_V+168)& (0+255),w,b	;volatile
  7313  0115A8  6EE6               	movwf	postinc1,c
  7314  0115AA  EC1E  F0EA         	call	_check_help	;wreg free
  7315                           
  7316                           ;main.c: 468:   if (V.enter) {
  7317  0115AE  0102               	movlb	2	; () banked
  7318  0115B0  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
  7319  0115B2  B4D8               	btfsc	status,2,c
  7320  0115B4  D062               	goto	l1501
  7321                           
  7322                           ; BSR set to: 2
  7323                           ;main.c: 469:    V.enter = 0;
  7324  0115B6  6BB1               	clrf	(_V+170)& (0+255),b	;volatile
  7325                           
  7326                           ;main.c: 470:    V.calib = 0;
  7327  0115B8  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  7328                           
  7329                           ; BSR set to: 2
  7330                           ;main.c: 471:    inp_index += 3;
  7331                           ;stkvar	_inp_index @ sp[(-17)+11]
  7332  0115BA  0EFA               	movlw	-6
  7333  0115BC  006F FF8C  F02A    	movff	plusw1,btemp
  7334  0115C2  0E03               	movlw	3
  7335  0115C4  262A               	addwf	btemp^0,f,c
  7336  0115C6  0EFA               	movlw	-6
  7337  0115C8  0060  F0AB  FFE3   	movff	btemp,plusw1
  7338                           
  7339                           ;main.c: 472:    if (inp_index > 9)
  7340                           ;stkvar	_inp_index @ sp[(-17)+11]
  7341  0115CE  0EFA               	movlw	-6
  7342  0115D0  006F FF8C  F02A    	movff	plusw1,btemp
  7343  0115D6  0E09               	movlw	9
  7344  0115D8  642A               	cpfsgt	btemp^0,c
  7345  0115DA  D03A               	goto	l17754
  7346                           
  7347                           ; BSR set to: 2
  7348                           ;main.c: 473:     inp_index = 0;
  7349                           ;stkvar	_inp_index @ sp[(-17)+11]
  7350  0115DC  0EFA               	movlw	-6
  7351  0115DE  6AE3               	clrf	plusw1,c
  7352  0115E0  D037               	goto	l17754
  7353  0115E2                     l17736:
  7354                           
  7355                           ; BSR set to: 2
  7356                           ;main.c: 476:     i = C_BATT;
  7357                           ;stkvar	_i @ sp[(-17)+14]
  7358  0115E2  0EFD               	movlw	-3
  7359  0115E4  6AE3               	clrf	plusw1,c
  7360                           
  7361                           ; BSR set to: 2
  7362                           ;main.c: 477:     j = C_PV;
  7363                           ;stkvar	_j @ sp[(-17)+13]
  7364  0115E6  0EFC               	movlw	-4
  7365  0115E8  6AE3               	clrf	plusw1,c
  7366  0115EA  2AE3               	incf	plusw1,f,c
  7367                           
  7368                           ; BSR set to: 2
  7369                           ;main.c: 478:     k = V_CC;
  7370                           ;stkvar	_k @ sp[(-17)+12]
  7371  0115EC  0EFB               	movlw	-5
  7372  0115EE  6AE3               	clrf	plusw1,c
  7373  0115F0  82E3               	bsf	plusw1,1,c
  7374                           
  7375                           ;main.c: 479:     break;
  7376  0115F2  D043               	goto	l1501
  7377  0115F4                     l17742:
  7378                           
  7379                           ; BSR set to: 2
  7380                           ;main.c: 481:     i = V_BAT;
  7381                           ;stkvar	_i @ sp[(-17)+14]
  7382  0115F4  0EFD               	movlw	-3
  7383  0115F6  6AE3               	clrf	plusw1,c
  7384  0115F8  84E3               	bsf	plusw1,2,c
  7385                           
  7386                           ;main.c: 482:     j = V_PV;
  7387                           ;stkvar	_j @ sp[(-17)+13]
  7388  0115FA  0EFC               	movlw	-4
  7389  0115FC  6AE3               	clrf	plusw1,c
  7390  0115FE  80E3               	bsf	plusw1,0,c
  7391  011600  84E3               	bsf	plusw1,2,c	;indir
  7392                           
  7393                           ;main.c: 483:     k = V_CBUS;
  7394                           ;stkvar	_k @ sp[(-17)+12]
  7395  011602  0EFB               	movlw	-5
  7396  011604  6AE3               	clrf	plusw1,c
  7397  011606  82E3               	bsf	plusw1,1,c
  7398  011608  84E3               	bsf	plusw1,2,c	;indir
  7399                           
  7400                           ;main.c: 484:     break;
  7401  01160A  D037               	goto	l1501
  7402  01160C                     l17744:
  7403                           
  7404                           ; BSR set to: 2
  7405                           ;main.c: 486:     i = V_BBAT;
  7406                           ;stkvar	_i @ sp[(-17)+14]
  7407  01160C  0EFD               	movlw	-3
  7408  01160E  6AE3               	clrf	plusw1,c
  7409  011610  82E3               	bsf	plusw1,1,c
  7410  011612  86E3               	bsf	plusw1,3,c	;indir
  7411                           
  7412                           ; BSR set to: 2
  7413                           ;main.c: 487:     j = V_TEMP;
  7414  011614  0E0B               	movlw	11
  7415  011616  6E35               	movwf	(btemp+11)^0,c
  7416                           
  7417                           ;stkvar	_j @ sp[(-17)+13]
  7418  011618  0EFC               	movlw	-4
  7419  01161A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7420                           
  7421                           ; BSR set to: 2
  7422                           ;main.c: 488:     k = V_INVERTER;
  7423                           ;stkvar	_k @ sp[(-17)+12]
  7424  011620  0EFB               	movlw	-5
  7425  011622  6AE3               	clrf	plusw1,c
  7426  011624  84E3               	bsf	plusw1,2,c
  7427  011626  86E3               	bsf	plusw1,3,c	;indir
  7428                           
  7429                           ;main.c: 489:     break;
  7430  011628  D028               	goto	l1501
  7431  01162A                     l17750:
  7432                           
  7433                           ; BSR set to: 2
  7434                           ;main.c: 491:     i = V_LIGHT_SENSOR;
  7435  01162A  0E0D               	movlw	13
  7436  01162C  6E35               	movwf	(btemp+11)^0,c
  7437                           
  7438                           ;stkvar	_i @ sp[(-17)+14]
  7439  01162E  0EFD               	movlw	-3
  7440  011630  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7441                           
  7442                           ;main.c: 492:     j = V_LIGHT_SENSOR;
  7443  011636  0E0D               	movlw	13
  7444  011638  6E35               	movwf	(btemp+11)^0,c
  7445                           
  7446                           ;stkvar	_j @ sp[(-17)+13]
  7447  01163A  0EFC               	movlw	-4
  7448  01163C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7449                           
  7450                           ;main.c: 493:     k = V_LIGHT_SENSOR;
  7451  011642  0E0D               	movlw	13
  7452  011644  6E35               	movwf	(btemp+11)^0,c
  7453                           
  7454                           ;stkvar	_k @ sp[(-17)+12]
  7455  011646  0EFB               	movlw	-5
  7456  011648  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7457                           
  7458                           ;main.c: 494:     break;
  7459  01164E  D015               	goto	l1501
  7460  011650                     l17754:
  7461                           
  7462                           ; BSR set to: 2
  7463                           ;stkvar	_inp_index @ sp[(-17)+11]
  7464  011650  0EFA               	movlw	-6
  7465  011652  50E3               	movf	plusw1,w,c
  7466  011654  6E34               	movwf	(btemp+10)^0,c
  7467  011656  6A35               	clrf	(btemp+11)^0,c
  7468                           
  7469                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7470                           ; Switch size 1, requested type "simple"
  7471                           ; Number of cases is 1, Range of values is 0 to 0
  7472                           ; switch strategies available:
  7473                           ; Name         Instructions Cycles
  7474                           ; simple_byte            4     3 (average)
  7475                           ;	Chosen strategy is simple_byte
  7476  011658  5035               	movf	(btemp+11)^0,w,c
  7477  01165A  0A00               	xorlw	0	; case 0
  7478  01165C  A4D8               	btfss	status,2,c
  7479  01165E  D00D               	goto	l1501
  7480                           
  7481                           ; BSR set to: 2
  7482                           ; Switch size 1, requested type "simple"
  7483                           ; Number of cases is 4, Range of values is 0 to 9
  7484                           ; switch strategies available:
  7485                           ; Name         Instructions Cycles
  7486                           ; simple_byte           13     7 (average)
  7487                           ;	Chosen strategy is simple_byte
  7488  011660  5034               	movf	(btemp+10)^0,w,c
  7489  011662  0A00               	xorlw	0	; case 0
  7490  011664  B4D8               	btfsc	status,2,c
  7491  011666  D7BD               	goto	l17736
  7492  011668  0A03               	xorlw	3	; case 3
  7493  01166A  B4D8               	btfsc	status,2,c
  7494  01166C  D7C3               	goto	l17742
  7495  01166E  0A05               	xorlw	5	; case 6
  7496  011670  B4D8               	btfsc	status,2,c
  7497  011672  D7CC               	goto	l17744
  7498  011674  0A0F               	xorlw	15	; case 9
  7499  011676  B4D8               	btfsc	status,2,c
  7500  011678  D7D8               	goto	l17750
  7501  01167A                     l1501:
  7502                           
  7503                           ; BSR set to: 2
  7504                           ;main.c: 503:   if (V.set_sequ) {
  7505  01167A  A19F               	btfss	(_V+152)& (0+255),0,b	;volatile
  7506  01167C  EFB6  F084         	goto	l17600
  7507                           
  7508                           ; BSR set to: 2
  7509                           ;main.c: 504:    if (TimerDone(TMR_INFO)) {
  7510  011680  0E07               	movlw	7
  7511  011682  6EE6               	movwf	postinc1,c
  7512  011684  EC27  F012         	call	_TimerDone	;wreg free
  7513  011688  502A               	movf	btemp^0,w,c
  7514  01168A  B4D8               	btfsc	status,2,c
  7515  01168C  D00C               	goto	l17764
  7516                           
  7517                           ;main.c: 505:     V.set_sequ = 0;
  7518  01168E  0102               	movlb	2	; () banked
  7519  011690  919F               	bcf	(_V+152)& (0+255),0,b	;volatile
  7520                           
  7521                           ; BSR set to: 2
  7522                           ;main.c: 506:     set_vterm(0);
  7523  011692  0E00               	movlw	0
  7524  011694  6EE6               	movwf	postinc1,c
  7525  011696  EC1D  F014         	call	_set_vterm	;wreg free
  7526                           
  7527                           ;main.c: 507:     update_lcd(0);
  7528  01169A  0E00               	movlw	0
  7529  01169C  6EE6               	movwf	postinc1,c
  7530  01169E  EC23  F0F6         	call	_update_lcd	;wreg free
  7531                           
  7532                           ;main.c: 508:    } else {
  7533  0116A2  EFB6  F084         	goto	l17600
  7534  0116A6                     l17764:
  7535                           
  7536                           ;main.c: 510:     set_vterm(2);
  7537  0116A6  0E02               	movlw	2
  7538  0116A8  6EE6               	movwf	postinc1,c
  7539  0116AA  EC1D  F014         	call	_set_vterm	;wreg free
  7540                           
  7541                           ;main.c: 511:     update_lcd(2);
  7542  0116AE  0E02               	movlw	2
  7543  0116B0  6EE6               	movwf	postinc1,c
  7544  0116B2  EC23  F0F6         	call	_update_lcd	;wreg free
  7545  0116B6  EFB6  F084         	goto	l17600
  7546  0116BA                     __end_of_main:
  7547                           	opt callstack 0
  7548                           
  7549 ;; *************** function _update_hist_data *****************
  7550 ;; Defined at:
  7551 ;;		line 456 in file "daq.c"
  7552 ;; Parameters:    Size  Location     Type
  7553 ;;  mode            1  [STACK] const _Bool 
  7554 ;;  hist            2  [STACK] PTR volatile struct hist
  7555 ;;		 -> C.hist(97), C(320), 
  7556 ;; Auto vars:     Size  Location     Type
  7557 ;;		None
  7558 ;; Return value:  Size  Location     Type
  7559 ;;                  1  [STACK] _Bool 
  7560 ;; Registers used:
  7561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
  7562 ;; Tracked objects:
  7563 ;;		On entry : 7/1
  7564 ;;		On exit  : 0/0
  7565 ;;		Unchanged: 0/0
  7566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7571 ;;Total ram usage:        0 bytes
  7572 ;; Hardware stack levels used:    1
  7573 ;; Hardware stack levels required when called:   15
  7574 ;; This function calls:
  7575 ;;		Nothing
  7576 ;; This function is called by:
  7577 ;;		_main
  7578 ;; This function uses a reentrant model
  7579 ;;
  7580                           
  7581                           	psect	text1
  7582  00133A                     __ptext1:
  7583                           	opt callstack 0
  7584  00133A                     _update_hist_data:
  7585                           	opt callstack 15
  7586                           
  7587                           ;daq.c: 456: _Bool update_hist_data(const _Bool mode, volatile hist_type *hist);daq.c: 4
      +                          57: {;daq.c: 458:  if (hist == ((void*)0))
  7588                           ;stkvar	_hist @ sp[(0)+-3]
  7589                           
  7590                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7591                           ;incstack = 0
  7592  00133A  0EFD               	movlw	-3
  7593  00133C  006F FF8C  F02A    	movff	plusw1,btemp
  7594  001342  0EFE               	movlw	-2
  7595  001344  50E3               	movf	plusw1,w,c
  7596  001346  102A               	iorwf	btemp^0,w,c
  7597  001348  A4D8               	btfss	status,2,c
  7598  00134A  D002               	goto	l14166
  7599  00134C                     u13360:
  7600                           
  7601                           ;daq.c: 459:   return 0;
  7602  00134C  0E00               	movlw	0
  7603  00134E  D01A               	goto	L3
  7604  001350                     l14166:
  7605                           
  7606                           ;daq.c: 461:  if (mode) {
  7607                           ;stkvar	_mode @ sp[(0)+-1]
  7608  001350  0EFF               	movlw	-1
  7609  001352  50E3               	movf	plusw1,w,c
  7610  001354  B4D8               	btfsc	status,2,c
  7611  001356  D018               	goto	l14178
  7612                           
  7613                           ;daq.c: 462:   if (R.hist_save) {
  7614  001358  0101               	movlb	1	; () banked
  7615  00135A  A197               	btfss	(_R+151)& (0+255),0,b	;volatile
  7616  00135C  D7F7               	goto	u13360
  7617                           
  7618                           ; BSR set to: 1
  7619                           ;daq.c: 463:    *hist = R.H;
  7620  00135E  EE20  F136         	lfsr	2,_R+54	;volatile
  7621                           
  7622                           ;stkvar	_hist @ sp[(0)+-3]
  7623  001362  0EFD               	movlw	-3
  7624  001364  006F FF8F FFE9     	movff	plusw1,fsr0l
  7625  00136A  0EFE               	movlw	-2
  7626  00136C  006F FF8F FFEA     	movff	plusw1,fsr0h
  7627  001372  0E60               	movlw	96
  7628  001374                     u13391:
  7629  001374  006F FF6F FFEB     	movff	plusw2,plusw0
  7630  00137A  06E8               	decf	wreg,f,c
  7631  00137C  E2FB               	bc	u13391
  7632                           
  7633                           ; BSR set to: 1
  7634                           ;daq.c: 464:    if (R.hist_update) {
  7635  00137E  A397               	btfss	(_R+151)& (0+255),1,b	;volatile
  7636  001380  D7E5               	goto	u13360
  7637                           
  7638                           ; BSR set to: 1
  7639                           ;daq.c: 465:     return 1;
  7640  001382  0E01               	movlw	1
  7641  001384                     L3:
  7642  001384  6E2A               	movwf	btemp^0,c
  7643  001386  D013               	goto	l2096
  7644  001388                     l14178:
  7645                           
  7646                           ;daq.c: 469:   R.H = *hist;
  7647                           ;stkvar	_hist @ sp[(0)+-3]
  7648  001388  0EFD               	movlw	-3
  7649  00138A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7650  001390  0EFE               	movlw	-2
  7651  001392  006F FF8F FFDA     	movff	plusw1,fsr2h
  7652  001398  EE00  F136         	lfsr	0,_R+54	;volatile
  7653  00139C  0E60               	movlw	96
  7654  00139E                     u13411:
  7655  00139E  006F FF6F FFEB     	movff	plusw2,plusw0
  7656  0013A4  06E8               	decf	wreg,f,c
  7657  0013A6  E2FB               	bc	u13411
  7658                           
  7659                           ;daq.c: 470:   R.hist_save = 1;
  7660  0013A8  0101               	movlb	1	; () banked
  7661  0013AA  8197               	bsf	(_R+151)& (0+255),0,b	;volatile
  7662  0013AC  D7CF               	goto	u13360
  7663  0013AE                     l2096:
  7664                           
  7665                           ; _update_hist_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
  7666  0013AE  52E5               	movf	postdec1,f,c
  7667  0013B0  52E5               	movf	postdec1,f,c
  7668  0013B2  52E5               	movf	postdec1,f,c
  7669  0013B4  0012               	return		;funcret
  7670  0013B6                     __end_of_update_hist_data:
  7671                           	opt callstack 0
  7672                           
  7673 ;; *************** function _update_cal_data *****************
  7674 ;; Defined at:
  7675 ;;		line 437 in file "daq.c"
  7676 ;; Parameters:    Size  Location     Type
  7677 ;;		None
  7678 ;; Auto vars:     Size  Location     Type
  7679 ;;		None
  7680 ;; Return value:  Size  Location     Type
  7681 ;;                  1  [STACK] void 
  7682 ;; Registers used:
  7683 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  7684 ;; Tracked objects:
  7685 ;;		On entry : 0/39
  7686 ;;		On exit  : 3F/1
  7687 ;;		Unchanged: 0/0
  7688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7693 ;;Total ram usage:        0 bytes
  7694 ;; Hardware stack levels used:    1
  7695 ;; Hardware stack levels required when called:   15
  7696 ;; This function calls:
  7697 ;;		Nothing
  7698 ;; This function is called by:
  7699 ;;		_main
  7700 ;; This function uses a reentrant model
  7701 ;;
  7702                           
  7703                           	psect	text2
  7704  001AE6                     __ptext2:
  7705                           	opt callstack 0
  7706  001AE6                     _update_cal_data:
  7707                           	opt callstack 15
  7708                           
  7709                           ;daq.c: 439:  R = r_cal;
  7710                           
  7711                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7712                           ;incstack = 0
  7713  001AE6  EE21  F040         	lfsr	2,_r_cal
  7714  001AEA  EE00  F100         	lfsr	0,_R	;volatile
  7715  001AEE  0E9A               	movlw	154
  7716  001AF0                     u13331:
  7717  001AF0  006F FF7B FFEE     	movff	postinc2,postinc0
  7718  001AF6  06E8               	decf	wreg,f,c
  7719  001AF8  E2FB               	bc	u13331
  7720  001AFA  0E9B               	movlw	155
  7721  001AFC  5ED9               	subwf	fsr2l,f,c
  7722  001AFE  5EE9               	subwf	fsr0l,f,c
  7723                           
  7724                           ;daq.c: 440:  if (!R.c_zero_cal) {
  7725  001B00  0101               	movlb	1	; () banked
  7726  001B02  B597               	btfsc	(_R+151)& (0+255),2,b	;volatile
  7727  001B04  D008               	goto	l14156
  7728                           
  7729                           ; BSR set to: 1
  7730                           ;daq.c: 441:   R.n_offset[0] = 3938;
  7731  001B06  0E0F               	movlw	15
  7732  001B08  6F27               	movwf	(_R+39)& (0+255),b	;volatile
  7733  001B0A  0E62               	movlw	98
  7734  001B0C  6F26               	movwf	(_R+38)& (0+255),b	;volatile
  7735                           
  7736                           ;daq.c: 442:   R.n_offset[1] = 4004;
  7737  001B0E  0E0F               	movlw	15
  7738  001B10  6F29               	movwf	(_R+41)& (0+255),b	;volatile
  7739  001B12  0EA4               	movlw	164
  7740  001B14  6F28               	movwf	(_R+40)& (0+255),b	;volatile
  7741  001B16                     l14156:
  7742                           
  7743                           ; BSR set to: 1
  7744                           ;daq.c: 446:  if (!R.c_scale_cal) {
  7745  001B16  B797               	btfsc	(_R+151)& (0+255),3,b	;volatile
  7746  001B18  0012               	return	
  7747                           
  7748                           ; BSR set to: 1
  7749                           ;daq.c: 447:   R.n_scalar[0] = 0.0862000;
  7750  001B1A  0EA0               	movlw	160
  7751  001B1C  6F2A               	movwf	(_R+42)& (0+255),b	;volatile
  7752  001B1E  0E89               	movlw	137
  7753  001B20  6F2B               	movwf	(_R+43)& (0+255),b	;volatile
  7754  001B22  0EB0               	movlw	176
  7755  001B24  6F2C               	movwf	(_R+44)& (0+255),b	;volatile
  7756  001B26  0E3D               	movlw	61
  7757  001B28  6F2D               	movwf	(_R+45)& (0+255),b	;volatile
  7758                           
  7759                           ;daq.c: 448:   R.n_scalar[1] = 0.0361010;
  7760  001B2A  0EA4               	movlw	164
  7761  001B2C  6F2E               	movwf	(_R+46)& (0+255),b	;volatile
  7762  001B2E  0EDE               	movlw	222
  7763  001B30  6F2F               	movwf	(_R+47)& (0+255),b	;volatile
  7764  001B32  0E13               	movlw	19
  7765  001B34  6F30               	movwf	(_R+48)& (0+255),b	;volatile
  7766  001B36  0E3D               	movlw	61
  7767  001B38  6F31               	movwf	(_R+49)& (0+255),b	;volatile
  7768                           
  7769                           ; BSR set to: 1
  7770                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  7771  001B3A  0012               	return		;funcret
  7772  001B3C                     __end_of_update_cal_data:
  7773                           	opt callstack 0
  7774                           
  7775 ;; *************** function _static_soc *****************
  7776 ;; Defined at:
  7777 ;;		line 118 in file "mbmc.c"
  7778 ;; Parameters:    Size  Location     Type
  7779 ;;		None
  7780 ;; Auto vars:     Size  Location     Type
  7781 ;;		None
  7782 ;; Return value:  Size  Location     Type
  7783 ;;                  1  [STACK] void 
  7784 ;; Registers used:
  7785 ;;		wreg, fsr2l, fsr2h
  7786 ;; Tracked objects:
  7787 ;;		On entry : 0/1
  7788 ;;		On exit  : 0/0
  7789 ;;		Unchanged: 0/0
  7790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7795 ;;Total ram usage:        0 bytes
  7796 ;; Hardware stack levels used:    1
  7797 ;; Hardware stack levels required when called:   15
  7798 ;; This function calls:
  7799 ;;		Nothing
  7800 ;; This function is called by:
  7801 ;;		_main
  7802 ;; This function uses a reentrant model
  7803 ;;
  7804                           
  7805                           	psect	text3
  7806  0019D8                     __ptext3:
  7807                           	opt callstack 0
  7808  0019D8                     _static_soc:
  7809                           	opt callstack 15
  7810                           
  7811                           ;mbmc.c: 120:  C.runtime = 120;
  7812                           
  7813                           ; BSR set to: 1
  7814                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7815                           ;incstack = 0
  7816  0019D8  0E78               	movlw	120
  7817  0019DA  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
  7818  0019E0  0E00               	movlw	0
  7819  0019E2  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
  7820                           
  7821                           ;mbmc.c: 121:  C.soc = 100;
  7822  0019E8  0E64               	movlw	100
  7823  0019EA  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
  7824  0019F0  0E00               	movlw	0
  7825  0019F2  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
  7826                           
  7827                           ;mbmc.c: 122:  C.dynamic_ah = C.bank_ah;
  7828  0019F8  EE22  F18B         	lfsr	2,_C+140	;volatile
  7829  0019FC  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
  7830  001A02  006F FF78  F990    	movff	postinc2,_C+145	;volatile
  7831  001A08  006F FF78  F991    	movff	postinc2,_C+146	;volatile
  7832  001A0E  006F FF74  F992    	movff	postdec2,_C+147	;volatile
  7833                           
  7834                           ;mbmc.c: 123:  C.dynamic_ah_adj = C.dynamic_ah;
  7835  001A14  EE22  F18F         	lfsr	2,_C+144	;volatile
  7836  001A18  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
  7837  001A1E  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
  7838  001A24  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
  7839  001A2A  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
  7840                           
  7841                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7842  001A30  0012               	return		;funcret
  7843  001A32                     __end_of_static_soc:
  7844                           	opt callstack 0
  7845                           
  7846 ;; *************** function _start_switch_handler *****************
  7847 ;; Defined at:
  7848 ;;		line 125 in file "dio.c"
  7849 ;; Parameters:    Size  Location     Type
  7850 ;;		None
  7851 ;; Auto vars:     Size  Location     Type
  7852 ;;		None
  7853 ;; Return value:  Size  Location     Type
  7854 ;;                  1  [STACK] void 
  7855 ;; Registers used:
  7856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  7857 ;; Tracked objects:
  7858 ;;		On entry : 0/0
  7859 ;;		On exit  : 3F/39
  7860 ;;		Unchanged: 0/0
  7861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7866 ;;Total ram usage:        0 bytes
  7867 ;; Hardware stack levels used:    1
  7868 ;; Hardware stack levels required when called:   16
  7869 ;; This function calls:
  7870 ;;		_INT1_SetInterruptHandler
  7871 ;; This function is called by:
  7872 ;;		_main
  7873 ;; This function uses a reentrant model
  7874 ;;
  7875                           
  7876                           	psect	text4
  7877  0027BE                     __ptext4:
  7878                           	opt callstack 0
  7879  0027BE                     _start_switch_handler:
  7880                           	opt callstack 14
  7881                           
  7882                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  7883                           
  7884                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7885                           ;incstack = 0
  7886  0027BE  0139               	movlb	57	; () banked
  7887  0027C0  9195               	bcf	149,0,b	;volatile
  7888                           
  7889                           ; BSR set to: 57
  7890                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  7891  0027C2  0EA6               	movlw	low _switch_handler
  7892  0027C4  6EE6               	movwf	postinc1,c
  7893  0027C6  0EF1               	movlw	high _switch_handler
  7894  0027C8  6EE6               	movwf	postinc1,c
  7895  0027CA  0E01               	movlw	low (_switch_handler shr (0+16))
  7896  0027CC  6EE6               	movwf	postinc1,c
  7897  0027CE  ECB3  F012         	call	_INT1_SetInterruptHandler	;wreg free
  7898                           
  7899                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  7900  0027D2  0E02               	movlw	2
  7901  0027D4  0101               	movlb	1	; () banked
  7902  0027D6  6FC7               	movwf	(_S+35)& (0+255),b	;volatile
  7903                           
  7904                           ; BSR set to: 1
  7905                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  7906  0027D8  0139               	movlb	57	; () banked
  7907  0027DA  8195               	bsf	149,0,b	;volatile
  7908                           
  7909                           ; BSR set to: 57
  7910                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  7911  0027DC  0012               	return		;funcret
  7912  0027DE                     __end_of_start_switch_handler:
  7913                           	opt callstack 0
  7914                           
  7915 ;; *************** function _srand *****************
  7916 ;; Defined at:
  7917 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;  s               2  [STACK] unsigned int 
  7920 ;; Auto vars:     Size  Location     Type
  7921 ;;		None
  7922 ;; Return value:  Size  Location     Type
  7923 ;;                  1  [STACK] void 
  7924 ;; Registers used:
  7925 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  7926 ;; Tracked objects:
  7927 ;;		On entry : 0/3D
  7928 ;;		On exit  : 3F/2
  7929 ;;		Unchanged: 0/0
  7930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7935 ;;Total ram usage:        0 bytes
  7936 ;; Hardware stack levels used:    1
  7937 ;; Hardware stack levels required when called:   15
  7938 ;; This function calls:
  7939 ;;		Nothing
  7940 ;; This function is called by:
  7941 ;;		_main
  7942 ;; This function uses a reentrant model
  7943 ;;
  7944                           
  7945                           	psect	text5
  7946  002188                     __ptext5:
  7947                           	opt callstack 0
  7948  002188                     _srand:
  7949                           	opt callstack 15
  7950                           
  7951                           ;stkvar	_s @ sp[(0)+-2]
  7952                           
  7953                           ; BSR set to: 57
  7954                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7955                           ;incstack = 0
  7956  002188  0EFE               	movlw	-2
  7957  00218A  50E3               	movf	plusw1,w,c
  7958  00218C  0FFF               	addlw	255
  7959  00218E  6E34               	movwf	(btemp+10)^0,c
  7960  002190  0EFF               	movlw	-1
  7961  002192  006F FF8C  F035    	movff	plusw1,btemp+11
  7962  002198  0EFF               	movlw	255
  7963  00219A  2235               	addwfc	(btemp+11)^0,f,c
  7964  00219C  0060  F0D0  F2DE   	movff	btemp+10,_seed
  7965  0021A2  0060  F0D4  F2DF   	movff	btemp+11,_seed+1
  7966  0021A8  0102               	movlb	2	; () banked
  7967  0021AA  6BE0               	clrf	(_seed+2)& (0+255),b
  7968  0021AC  6BE1               	clrf	(_seed+3)& (0+255),b
  7969  0021AE  6BE2               	clrf	(_seed+4)& (0+255),b
  7970  0021B0  6BE3               	clrf	(_seed+5)& (0+255),b
  7971  0021B2  6BE4               	clrf	(_seed+6)& (0+255),b
  7972  0021B4  6BE5               	clrf	(_seed+7)& (0+255),b
  7973                           
  7974                           ; BSR set to: 2
  7975                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  7976  0021B6  52E5               	movf	postdec1,f,c
  7977  0021B8  52E5               	movf	postdec1,f,c
  7978  0021BA  0012               	return		;funcret
  7979  0021BC                     __end_of_srand:
  7980                           	opt callstack 0
  7981                           
  7982 ;; *************** function _set_time *****************
  7983 ;; Defined at:
  7984 ;;		line 263 in file "mbmc.c"
  7985 ;; Parameters:    Size  Location     Type
  7986 ;;  t               8  [STACK] long long 
  7987 ;; Auto vars:     Size  Location     Type
  7988 ;;		None
  7989 ;; Return value:  Size  Location     Type
  7990 ;;                  1  [STACK] void 
  7991 ;; Registers used:
  7992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  7993 ;; Tracked objects:
  7994 ;;		On entry : 3F/39
  7995 ;;		On exit  : 3F/39
  7996 ;;		Unchanged: 0/0
  7997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8002 ;;Total ram usage:        0 bytes
  8003 ;; Hardware stack levels used:    1
  8004 ;; Hardware stack levels required when called:   15
  8005 ;; This function calls:
  8006 ;;		Nothing
  8007 ;; This function is called by:
  8008 ;;		_main
  8009 ;; This function uses a reentrant model
  8010 ;;
  8011                           
  8012                           	psect	text6
  8013  00211C                     __ptext6:
  8014                           	opt callstack 0
  8015  00211C                     _set_time:
  8016                           	opt callstack 15
  8017                           
  8018                           ;mbmc.c: 263: void set_time(time_t t);mbmc.c: 264: {;mbmc.c: 265:  PIE8bits.TMR5IE = 0;
  8019                           
  8020                           ; BSR set to: 2
  8021                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8022                           ;incstack = 0
  8023  00211C  0139               	movlb	57	; () banked
  8024  00211E  9D98               	bcf	152,6,b	;volatile
  8025                           
  8026                           ; BSR set to: 57
  8027                           ;mbmc.c: 266:  V.ticks = t;
  8028                           ;stkvar	_t @ sp[(0)+-8]
  8029  002120  50E1               	movf	fsr1l,w,c
  8030  002122  0FF8               	addlw	-8
  8031  002124  6ED9               	movwf	fsr2l,c
  8032  002126  50E2               	movf	fsr1h,w,c
  8033  002128  6EDA               	movwf	fsr2h,c
  8034  00212A  0EFF               	movlw	255
  8035  00212C  22DA               	addwfc	fsr2h,f,c
  8036  00212E  006F FF78  F288    	movff	postinc2,_V+129	;volatile
  8037  002134  006F FF78  F289    	movff	postinc2,_V+130	;volatile
  8038  00213A  006F FF78  F28A    	movff	postinc2,_V+131	;volatile
  8039  002140  006F FF78  F28B    	movff	postinc2,_V+132	;volatile
  8040                           
  8041                           ; BSR set to: 57
  8042                           ;mbmc.c: 267:  PIE8bits.TMR5IE = 1;
  8043  002146  8D98               	bsf	152,6,b	;volatile
  8044                           
  8045                           ; BSR set to: 57
  8046                           ; _set_time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
  8047  002148  0EF8               	movlw	248
  8048  00214A  26E1               	addwf	fsr1l,f,c
  8049  00214C  0EFF               	movlw	255
  8050  00214E  22E2               	addwfc	fsr1h,f,c
  8051  002150  0012               	return		;funcret
  8052  002152                     __end_of_set_time:
  8053                           	opt callstack 0
  8054                           
  8055 ;; *************** function _set_hist_flag *****************
  8056 ;; Defined at:
  8057 ;;		line 475 in file "daq.c"
  8058 ;; Parameters:    Size  Location     Type
  8059 ;;		None
  8060 ;; Auto vars:     Size  Location     Type
  8061 ;;		None
  8062 ;; Return value:  Size  Location     Type
  8063 ;;                  1  [STACK] void 
  8064 ;; Registers used:
  8065 ;;		None
  8066 ;; Tracked objects:
  8067 ;;		On entry : 3F/39
  8068 ;;		On exit  : 3F/1
  8069 ;;		Unchanged: 0/0
  8070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8075 ;;Total ram usage:        0 bytes
  8076 ;; Hardware stack levels used:    1
  8077 ;; Hardware stack levels required when called:   15
  8078 ;; This function calls:
  8079 ;;		Nothing
  8080 ;; This function is called by:
  8081 ;;		_main
  8082 ;; This function uses a reentrant model
  8083 ;;
  8084                           
  8085                           	psect	text7
  8086  002A72                     __ptext7:
  8087                           	opt callstack 0
  8088  002A72                     _set_hist_flag:
  8089                           	opt callstack 15
  8090                           
  8091                           ;daq.c: 477:  R.hist_update = 1;
  8092                           
  8093                           ; BSR set to: 57
  8094                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8095                           ;incstack = 0
  8096  002A72  0101               	movlb	1	; () banked
  8097  002A74  8397               	bsf	(_R+151)& (0+255),1,b	;volatile
  8098                           
  8099                           ; BSR set to: 1
  8100                           ; _set_hist_flag: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8101  002A76  0012               	return		;funcret
  8102  002A78                     __end_of_set_hist_flag:
  8103                           	opt callstack 0
  8104                           
  8105 ;; *************** function _set_dac_b *****************
  8106 ;; Defined at:
  8107 ;;		line 308 in file "daq.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;  voltage         4  [STACK] const float 
  8110 ;; Auto vars:     Size  Location     Type
  8111 ;;		None
  8112 ;; Return value:  Size  Location     Type
  8113 ;;                  2  [STACK] unsigned short 
  8114 ;; Registers used:
  8115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8116 ;; Tracked objects:
  8117 ;;		On entry : 0/3D
  8118 ;;		On exit  : 0/0
  8119 ;;		Unchanged: 0/0
  8120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8125 ;;Total ram usage:        0 bytes
  8126 ;; Hardware stack levels used:    1
  8127 ;; Hardware stack levels required when called:   17
  8128 ;; This function calls:
  8129 ;;		_convert_dac_raw
  8130 ;; This function is called by:
  8131 ;;		_main
  8132 ;; This function uses a reentrant model
  8133 ;;
  8134                           
  8135                           	psect	text8
  8136  0021BC                     __ptext8:
  8137                           	opt callstack 0
  8138  0021BC                     _set_dac_b:
  8139                           	opt callstack 13
  8140                           
  8141                           ;daq.c: 308: uint16_t set_dac_b(const float voltage);daq.c: 309: {;daq.c: 310:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  8142                           ;stkvar	_voltage @ sp[(0)+-4]
  8143                           
  8144                           ; BSR set to: 1
  8145                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8146                           ;incstack = 0
  8147  0021BC  0EFC               	movlw	-4
  8148  0021BE  006F FF8F FFE6     	movff	plusw1,postinc1
  8149  0021C4  006F FF8F FFE6     	movff	plusw1,postinc1
  8150  0021CA  006F FF8F FFE6     	movff	plusw1,postinc1
  8151  0021D0  006F FF8F FFE6     	movff	plusw1,postinc1
  8152  0021D6  ECCF  F0FB         	call	_convert_dac_raw	;wreg free
  8153  0021DA  0060  F0A8  F122   	movff	btemp,_R+34	;volatile
  8154  0021E0  0060  F0AC  F123   	movff	btemp+1,_R+35	;volatile
  8155                           
  8156                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  8157                           
  8158                           ;daq.c: 311:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  8159  0021E6  52E5               	movf	postdec1,f,c
  8160  0021E8  52E5               	movf	postdec1,f,c
  8161  0021EA  52E5               	movf	postdec1,f,c
  8162  0021EC  52E5               	movf	postdec1,f,c
  8163  0021EE  0012               	return		;funcret
  8164  0021F0                     __end_of_set_dac_b:
  8165                           	opt callstack 0
  8166                           
  8167 ;; *************** function _set_dac_a *****************
  8168 ;; Defined at:
  8169 ;;		line 299 in file "daq.c"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;  voltage         4  [STACK] const float 
  8172 ;; Auto vars:     Size  Location     Type
  8173 ;;		None
  8174 ;; Return value:  Size  Location     Type
  8175 ;;                  2  [STACK] unsigned short 
  8176 ;; Registers used:
  8177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8178 ;; Tracked objects:
  8179 ;;		On entry : 3F/3D
  8180 ;;		On exit  : 0/0
  8181 ;;		Unchanged: 0/0
  8182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8187 ;;Total ram usage:        0 bytes
  8188 ;; Hardware stack levels used:    1
  8189 ;; Hardware stack levels required when called:   17
  8190 ;; This function calls:
  8191 ;;		_convert_dac_raw
  8192 ;; This function is called by:
  8193 ;;		_main
  8194 ;; This function uses a reentrant model
  8195 ;;
  8196                           
  8197                           	psect	text9
  8198  0021F0                     __ptext9:
  8199                           	opt callstack 0
  8200  0021F0                     _set_dac_a:
  8201                           	opt callstack 13
  8202                           
  8203                           ;daq.c: 299: uint16_t set_dac_a(const float voltage);daq.c: 300: {;daq.c: 301:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  8204                           ;stkvar	_voltage @ sp[(0)+-4]
  8205                           
  8206                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8207                           ;incstack = 0
  8208  0021F0  0EFC               	movlw	-4
  8209  0021F2  006F FF8F FFE6     	movff	plusw1,postinc1
  8210  0021F8  006F FF8F FFE6     	movff	plusw1,postinc1
  8211  0021FE  006F FF8F FFE6     	movff	plusw1,postinc1
  8212  002204  006F FF8F FFE6     	movff	plusw1,postinc1
  8213  00220A  ECCF  F0FB         	call	_convert_dac_raw	;wreg free
  8214  00220E  0060  F0A8  F120   	movff	btemp,_R+32	;volatile
  8215  002214  0060  F0AC  F121   	movff	btemp+1,_R+33	;volatile
  8216                           
  8217                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  8218                           
  8219                           ;daq.c: 302:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  8220  00221A  52E5               	movf	postdec1,f,c
  8221  00221C  52E5               	movf	postdec1,f,c
  8222  00221E  52E5               	movf	postdec1,f,c
  8223  002220  52E5               	movf	postdec1,f,c
  8224  002222  0012               	return		;funcret
  8225  002224                     __end_of_set_dac_a:
  8226                           	opt callstack 0
  8227                           
  8228 ;; *************** function _convert_dac_raw *****************
  8229 ;; Defined at:
  8230 ;;		line 281 in file "daq.c"
  8231 ;; Parameters:    Size  Location     Type
  8232 ;;  voltage         4  [STACK] float 
  8233 ;; Auto vars:     Size  Location     Type
  8234 ;;		None
  8235 ;; Return value:  Size  Location     Type
  8236 ;;                  2  [STACK] unsigned short 
  8237 ;; Registers used:
  8238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8239 ;; Tracked objects:
  8240 ;;		On entry : 0/3D
  8241 ;;		On exit  : 0/0
  8242 ;;		Unchanged: 0/0
  8243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8248 ;;Total ram usage:        0 bytes
  8249 ;; Hardware stack levels used:    1
  8250 ;; Hardware stack levels required when called:   16
  8251 ;; This function calls:
  8252 ;;		___fldiv
  8253 ;;		___flge
  8254 ;;		___fltol
  8255 ;; This function is called by:
  8256 ;;		_set_dac_a
  8257 ;;		_set_dac_b
  8258 ;; This function uses a reentrant model
  8259 ;;
  8260                           
  8261                           	psect	text10
  8262  01F79E                     __ptext10:
  8263                           	opt callstack 0
  8264  01F79E                     _convert_dac_raw:
  8265                           	opt callstack 13
  8266                           
  8267                           ;daq.c: 281: static uint16_t convert_dac_raw(float voltage);daq.c: 282: {;daq.c: 286:  i
      +                          f (voltage < 0.001)
  8268                           
  8269                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8270                           ;incstack = 0
  8271  01F79E  0E6F               	movlw	111
  8272  01F7A0  6EE6               	movwf	postinc1,c
  8273  01F7A2  0E12               	movlw	18
  8274  01F7A4  6EE6               	movwf	postinc1,c
  8275  01F7A6  0E83               	movlw	131
  8276  01F7A8  6EE6               	movwf	postinc1,c
  8277  01F7AA  0E3A               	movlw	58
  8278  01F7AC  6EE6               	movwf	postinc1,c
  8279                           
  8280                           ;stkvar	_voltage @ sp[(-4)+-4]
  8281  01F7AE  0EF8               	movlw	-8
  8282  01F7B0  006F FF8F FFE6     	movff	plusw1,postinc1
  8283  01F7B6  006F FF8F FFE6     	movff	plusw1,postinc1
  8284  01F7BC  006F FF8F FFE6     	movff	plusw1,postinc1
  8285  01F7C2  006F FF8F FFE6     	movff	plusw1,postinc1
  8286  01F7C8  ECC1  F0F4         	call	___flge	;wreg free
  8287  01F7CC  B02A               	btfsc	btemp& (0+255),0,c
  8288  01F7CE  D018               	goto	l13690
  8289                           
  8290                           ;daq.c: 287:   voltage = 0.001;
  8291  01F7D0  0E6F               	movlw	111
  8292  01F7D2  6E32               	movwf	(btemp+8)^0,c
  8293  01F7D4  0E12               	movlw	18
  8294  01F7D6  6E33               	movwf	(btemp+9)^0,c
  8295  01F7D8  0E83               	movlw	131
  8296  01F7DA  6E34               	movwf	(btemp+10)^0,c
  8297  01F7DC  0E3A               	movlw	58
  8298  01F7DE  6E35               	movwf	(btemp+11)^0,c
  8299                           
  8300                           ;stkvar	_voltage @ sp[(0)+-4]
  8301  01F7E0  0EFC               	movlw	-4
  8302  01F7E2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  8303  01F7E8  0EFD               	movlw	-3
  8304  01F7EA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  8305  01F7F0  0EFE               	movlw	-2
  8306  01F7F2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8307  01F7F8  0EFF               	movlw	-1
  8308  01F7FA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8309  01F800                     l13690:
  8310                           
  8311                           ;daq.c: 288:  if (voltage > 10.0)
  8312                           ;stkvar	_voltage @ sp[(0)+-4]
  8313  01F800  0EFC               	movlw	-4
  8314  01F802  006F FF8F FFE6     	movff	plusw1,postinc1
  8315  01F808  006F FF8F FFE6     	movff	plusw1,postinc1
  8316  01F80E  006F FF8F FFE6     	movff	plusw1,postinc1
  8317  01F814  006F FF8F FFE6     	movff	plusw1,postinc1
  8318  01F81A  0E00               	movlw	0
  8319  01F81C  6EE6               	movwf	postinc1,c
  8320  01F81E  0E00               	movlw	0
  8321  01F820  6EE6               	movwf	postinc1,c
  8322  01F822  0E20               	movlw	32
  8323  01F824  6EE6               	movwf	postinc1,c
  8324  01F826  0E41               	movlw	65
  8325  01F828  6EE6               	movwf	postinc1,c
  8326  01F82A  ECC1  F0F4         	call	___flge	;wreg free
  8327  01F82E  B02A               	btfsc	btemp& (0+255),0,c
  8328  01F830  D018               	goto	l13694
  8329                           
  8330                           ;daq.c: 289:   voltage = 10.0;
  8331  01F832  0E00               	movlw	0
  8332  01F834  6E32               	movwf	(btemp+8)^0,c
  8333  01F836  0E00               	movlw	0
  8334  01F838  6E33               	movwf	(btemp+9)^0,c
  8335  01F83A  0E20               	movlw	32
  8336  01F83C  6E34               	movwf	(btemp+10)^0,c
  8337  01F83E  0E41               	movlw	65
  8338  01F840  6E35               	movwf	(btemp+11)^0,c
  8339                           
  8340                           ;stkvar	_voltage @ sp[(0)+-4]
  8341  01F842  0EFC               	movlw	-4
  8342  01F844  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  8343  01F84A  0EFD               	movlw	-3
  8344  01F84C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  8345  01F852  0EFE               	movlw	-2
  8346  01F854  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8347  01F85A  0EFF               	movlw	-1
  8348  01F85C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8349  01F862                     l13694:
  8350                           
  8351                           ;daq.c: 293:  return(uint16_t) (voltage / 0.002442);
  8352  01F862  0EF6               	movlw	246
  8353  01F864  6EE6               	movwf	postinc1,c
  8354  01F866  0E09               	movlw	9
  8355  01F868  6EE6               	movwf	postinc1,c
  8356  01F86A  0E20               	movlw	32
  8357  01F86C  6EE6               	movwf	postinc1,c
  8358  01F86E  0E3B               	movlw	59
  8359  01F870  6EE6               	movwf	postinc1,c
  8360                           
  8361                           ;stkvar	_voltage @ sp[(-4)+-4]
  8362  01F872  0EF8               	movlw	-8
  8363  01F874  006F FF8F FFE6     	movff	plusw1,postinc1
  8364  01F87A  006F FF8F FFE6     	movff	plusw1,postinc1
  8365  01F880  006F FF8F FFE6     	movff	plusw1,postinc1
  8366  01F886  006F FF8F FFE6     	movff	plusw1,postinc1
  8367  01F88C  EC50  F0BE         	call	___fldiv	;wreg free
  8368  01F890  0060  F0AB  FFE6   	movff	btemp,postinc1
  8369  01F896  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  8370  01F89C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  8371  01F8A2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  8372  01F8A8  EC55  F0F3         	call	___fltol	;wreg free
  8373                           
  8374                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  8375  01F8AC  52E5               	movf	postdec1,f,c
  8376  01F8AE  52E5               	movf	postdec1,f,c
  8377  01F8B0  52E5               	movf	postdec1,f,c
  8378  01F8B2  52E5               	movf	postdec1,f,c
  8379  01F8B4  0012               	return		;funcret
  8380  01F8B6                     __end_of_convert_dac_raw:
  8381                           	opt callstack 0
  8382                           
  8383 ;; *************** function _set_dac *****************
  8384 ;; Defined at:
  8385 ;;		line 257 in file "daq.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;		None
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;		None
  8390 ;; Return value:  Size  Location     Type
  8391 ;;                  1  [STACK] void 
  8392 ;; Registers used:
  8393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/3D
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8403 ;;Total ram usage:        0 bytes
  8404 ;; Hardware stack levels used:    1
  8405 ;; Hardware stack levels required when called:   16
  8406 ;; This function calls:
  8407 ;;		_SPI1_Exchange8bit
  8408 ;;		_dac_spi_control
  8409 ;; This function is called by:
  8410 ;;		_main
  8411 ;; This function uses a reentrant model
  8412 ;;
  8413                           
  8414                           	psect	text11
  8415  0007F6                     __ptext11:
  8416                           	opt callstack 0
  8417  0007F6                     _set_dac:
  8418                           	opt callstack 14
  8419                           
  8420                           ;daq.c: 259:  while (!SPI1STATUSbits.TXBE);
  8421                           
  8422                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8423                           ;incstack = 0
  8424  0007F6  013D               	movlb	61	; () banked
  8425  0007F8  AB17               	btfss	23,5,b	;volatile
  8426  0007FA  D7FD               	goto	_set_dac
  8427                           
  8428                           ; BSR set to: 61
  8429                           
  8430                           ;daq.c: 260:  do { LATCbits.LATC2 = 1; } while(0);
  8431  0007FC  84BC               	bsf	188,2,c	;volatile
  8432                           
  8433                           ; BSR set to: 61
  8434                           
  8435                           ;daq.c: 261:  do { LATCbits.LATC0 = 1; } while(0);
  8436  0007FE  80BC               	bsf	188,0,c	;volatile
  8437                           
  8438                           ; BSR set to: 61
  8439                           ;daq.c: 262:  dac_spi_control(1);
  8440  000800  0E01               	movlw	1
  8441  000802  6EE6               	movwf	postinc1,c
  8442  000804  ECDB  F009         	call	_dac_spi_control	;wreg free
  8443                           
  8444                           ;daq.c: 263:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  8445  000808  C120  F124         	movff	_R+32,_R+36	;volatile
  8446                           
  8447                           ;daq.c: 264:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  8448  00080C  EE20  F120         	lfsr	2,_R+32	;volatile
  8449  000810  006F FF78  F034    	movff	postinc2,btemp+10
  8450  000816  006F FF74  F035    	movff	postdec2,btemp+11
  8451  00081C  0060  F0D4  F034   	movff	btemp+11,btemp+10
  8452  000822  6A35               	clrf	(btemp+11)^0,c
  8453  000824  0E0F               	movlw	15
  8454  000826  1634               	andwf	(btemp+10)^0,f,c
  8455  000828  0101               	movlb	1	; () banked
  8456  00082A  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8457  00082C  1834               	xorwf	(btemp+10)^0,w,c
  8458  00082E  0BF0               	andlw	-16
  8459  000830  1834               	xorwf	(btemp+10)^0,w,c
  8460  000832  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8461                           
  8462                           ; BSR set to: 1
  8463                           ;daq.c: 265:  R.max5322_cmd.map.cont = 0b0100;
  8464  000834  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8465  000836  0B0F               	andlw	-241
  8466  000838  0940               	iorlw	64
  8467  00083A  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8468                           
  8469                           ; BSR set to: 1
  8470  00083C  90BF               	bcf	191,0,c	;volatile
  8471                           
  8472                           ; BSR set to: 1
  8473                           ;daq.c: 267:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8474  00083E  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8475  000840  6EE6               	movwf	postinc1,c
  8476  000842  ECFF  F013         	call	_SPI1_Exchange8bit	;wreg free
  8477                           
  8478                           ; BSR set to: 57
  8479                           ;daq.c: 268:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8480  000846  0101               	movlb	1	; () banked
  8481  000848  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  8482  00084A  6EE6               	movwf	postinc1,c
  8483  00084C  ECFF  F013         	call	_SPI1_Exchange8bit	;wreg free
  8484                           
  8485                           ; BSR set to: 57
  8486  000850  80BF               	bsf	191,0,c	;volatile
  8487                           
  8488                           ; BSR set to: 57
  8489                           ;daq.c: 270:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  8490  000852  C122  F124         	movff	_R+34,_R+36	;volatile
  8491                           
  8492                           ; BSR set to: 57
  8493                           ;daq.c: 271:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  8494  000856  EE20  F122         	lfsr	2,_R+34	;volatile
  8495  00085A  006F FF78  F034    	movff	postinc2,btemp+10
  8496  000860  006F FF74  F035    	movff	postdec2,btemp+11
  8497  000866  0060  F0D4  F034   	movff	btemp+11,btemp+10
  8498  00086C  6A35               	clrf	(btemp+11)^0,c
  8499  00086E  0E0F               	movlw	15
  8500  000870  1634               	andwf	(btemp+10)^0,f,c
  8501  000872  0101               	movlb	1	; () banked
  8502  000874  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8503  000876  1834               	xorwf	(btemp+10)^0,w,c
  8504  000878  0BF0               	andlw	-16
  8505  00087A  1834               	xorwf	(btemp+10)^0,w,c
  8506  00087C  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8507                           
  8508                           ; BSR set to: 1
  8509                           ;daq.c: 272:  R.max5322_cmd.map.cont = 0b0101;
  8510  00087E  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8511  000880  0B0F               	andlw	-241
  8512  000882  0950               	iorlw	80
  8513  000884  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8514                           
  8515                           ; BSR set to: 1
  8516  000886  90BF               	bcf	191,0,c	;volatile
  8517                           
  8518                           ; BSR set to: 1
  8519                           ;daq.c: 274:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8520  000888  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8521  00088A  6EE6               	movwf	postinc1,c
  8522  00088C  ECFF  F013         	call	_SPI1_Exchange8bit	;wreg free
  8523                           
  8524                           ; BSR set to: 57
  8525                           ;daq.c: 275:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8526  000890  0101               	movlb	1	; () banked
  8527  000892  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  8528  000894  6EE6               	movwf	postinc1,c
  8529  000896  ECFF  F013         	call	_SPI1_Exchange8bit	;wreg free
  8530  00089A                     l2033:
  8531  00089A  013D               	movlb	61	; () banked
  8532  00089C  AB17               	btfss	23,5,b	;volatile
  8533  00089E  D7FD               	goto	l2033
  8534                           
  8535                           ; BSR set to: 61
  8536                           
  8537                           ;daq.c: 277:  do { LATFbits.LATF0 = 1; } while(0);
  8538  0008A0  80BF               	bsf	191,0,c	;volatile
  8539                           
  8540                           ; BSR set to: 61
  8541                           ;daq.c: 278:  dac_spi_control(0);
  8542  0008A2  0E00               	movlw	0
  8543  0008A4  6EE6               	movwf	postinc1,c
  8544  0008A6  ECDB  F009         	call	_dac_spi_control	;wreg free
  8545                           
  8546                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  8547  0008AA  0012               	return		;funcret
  8548  0008AC                     __end_of_set_dac:
  8549                           	opt callstack 0
  8550                           
  8551 ;; *************** function _dac_spi_control *****************
  8552 ;; Defined at:
  8553 ;;		line 209 in file "daq.c"
  8554 ;; Parameters:    Size  Location     Type
  8555 ;;  set             1  [STACK] _Bool 
  8556 ;; Auto vars:     Size  Location     Type
  8557 ;;		None
  8558 ;; Return value:  Size  Location     Type
  8559 ;;                  1  [STACK] void 
  8560 ;; Registers used:
  8561 ;;		wreg, fsr1l, fsr1h, status,2
  8562 ;; Tracked objects:
  8563 ;;		On entry : 3F/3D
  8564 ;;		On exit  : 0/0
  8565 ;;		Unchanged: 0/0
  8566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8571 ;;Total ram usage:        0 bytes
  8572 ;; Hardware stack levels used:    1
  8573 ;; Hardware stack levels required when called:   15
  8574 ;; This function calls:
  8575 ;;		Nothing
  8576 ;; This function is called by:
  8577 ;;		_set_dac
  8578 ;; This function uses a reentrant model
  8579 ;;
  8580                           
  8581                           	psect	text12
  8582  0013B6                     __ptext12:
  8583                           	opt callstack 0
  8584  0013B6                     _dac_spi_control:
  8585                           	opt callstack 14
  8586                           
  8587                           ;daq.c: 209: void dac_spi_control(_Bool set);daq.c: 210: {;daq.c: 211:  static _Bool ini
      +                          t = 0;;daq.c: 212:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 214:  if (set) {
  8588                           ;stkvar	_set @ sp[(0)+-1]
  8589                           
  8590                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8591                           ;incstack = 0
  8592  0013B6  0EFF               	movlw	-1
  8593  0013B8  50E3               	movf	plusw1,w,c
  8594  0013BA  B4D8               	btfsc	status,2,c
  8595  0013BC  D022               	goto	l13682
  8596                           
  8597                           ;daq.c: 215:   SPI1CON0bits.EN = 0;
  8598  0013BE  013D               	movlb	61	; () banked
  8599  0013C0  9F14               	bcf	20,7,b	;volatile
  8600                           
  8601                           ; BSR set to: 61
  8602                           ;daq.c: 216:   if (!init) {
  8603  0013C2  5052               	movf	dac_spi_control@init^0,w,c
  8604  0013C4  A4D8               	btfss	status,2,c
  8605  0013C6  D011               	goto	l13670
  8606                           
  8607                           ; BSR set to: 61
  8608                           ;daq.c: 217:    init = 1;
  8609  0013C8  0E01               	movlw	1
  8610  0013CA  6E52               	movwf	dac_spi_control@init^0,c
  8611                           
  8612                           ; BSR set to: 61
  8613                           ;daq.c: 218:    S0 = SPI1CON0;
  8614  0013CC  006F F450  F0CB    	movff	15636,dac_spi_control@S0	;volatile
  8615                           
  8616                           ; BSR set to: 61
  8617                           ;daq.c: 219:    S1 = SPI1CON1;
  8618  0013D2  006F F454  F0CA    	movff	15637,dac_spi_control@S1	;volatile
  8619                           
  8620                           ; BSR set to: 61
  8621                           ;daq.c: 220:    S2 = SPI1CON2;
  8622  0013D8  006F F458  F0C9    	movff	15638,dac_spi_control@S2	;volatile
  8623                           
  8624                           ; BSR set to: 61
  8625                           ;daq.c: 221:    SC = SPI1CLK;
  8626  0013DE  006F F470  F0C8    	movff	15644,dac_spi_control@SC	;volatile
  8627                           
  8628                           ; BSR set to: 61
  8629                           ;daq.c: 222:    SB = SPI1BAUD;
  8630  0013E4  006F F464  F0C7    	movff	15641,dac_spi_control@SB	;volatile
  8631  0013EA                     l13670:
  8632                           
  8633                           ; BSR set to: 61
  8634                           ;daq.c: 228:   SPI1CON1 = 0x00;
  8635  0013EA  6B15               	clrf	21,b	;volatile
  8636                           
  8637                           ; BSR set to: 61
  8638                           ;daq.c: 229:   SPI1CON1bits.CKE = 1;
  8639  0013EC  8D15               	bsf	21,6,b	;volatile
  8640                           
  8641                           ; BSR set to: 61
  8642                           ;daq.c: 230:   SPI1CON1bits.CKP = 0;
  8643  0013EE  9B15               	bcf	21,5,b	;volatile
  8644                           
  8645                           ; BSR set to: 61
  8646                           ;daq.c: 231:   SPI1CON1bits.SMP = 0;
  8647  0013F0  9F15               	bcf	21,7,b	;volatile
  8648                           
  8649                           ;daq.c: 233:   SPI1CON2 = 0x03;
  8650  0013F2  0E03               	movlw	3
  8651  0013F4  6F16               	movwf	22,b	;volatile
  8652                           
  8653                           ;daq.c: 235:   SPI1BAUD = 0x0f;
  8654  0013F6  0E0F               	movlw	15
  8655  0013F8  6F19               	movwf	25,b	;volatile
  8656                           
  8657                           ; BSR set to: 61
  8658                           ;daq.c: 237:   SPI1CLK = 0x00;
  8659  0013FA  6B1C               	clrf	28,b	;volatile
  8660                           
  8661                           ;daq.c: 239:   SPI1CON0 = 0x83;
  8662  0013FC  0E83               	movlw	131
  8663  0013FE  6F14               	movwf	20,b	;volatile
  8664  001400  D014               	goto	L4
  8665  001402                     l13682:
  8666                           
  8667                           ;daq.c: 242:   if (init) {
  8668  001402  5052               	movf	dac_spi_control@init^0,w,c
  8669  001404  B4D8               	btfsc	status,2,c
  8670  001406  D012               	goto	l2017
  8671                           
  8672                           ;daq.c: 246:    SPI1CON0bits.EN = 0;
  8673  001408  013D               	movlb	61	; () banked
  8674  00140A  9F14               	bcf	20,7,b	;volatile
  8675                           
  8676                           ;daq.c: 247:    SPI1CON1 = S1;
  8677  00140C  0060  F32B  FD15   	movff	dac_spi_control@S1,15637	;volatile
  8678                           
  8679                           ;daq.c: 248:    SPI1CON2 = S2;
  8680  001412  0060  F327  FD16   	movff	dac_spi_control@S2,15638	;volatile
  8681                           
  8682                           ;daq.c: 249:    SPI1CLK = SC;
  8683  001418  0060  F323  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  8684                           
  8685                           ;daq.c: 250:    SPI1BAUD = SB;
  8686  00141E  0060  F31F  FD19   	movff	dac_spi_control@SB,15641	;volatile
  8687                           
  8688                           ;daq.c: 251:    SPI1CON0 = S0;
  8689  001424  0060  F32F  FD14   	movff	dac_spi_control@S0,15636	;volatile
  8690  00142A                     L4:
  8691                           
  8692                           ;daq.c: 252:    SPI1CON0bits.EN = 1;
  8693  00142A  8F14               	bsf	20,7,b	;volatile
  8694  00142C                     l2017:
  8695                           
  8696                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  8697  00142C  52E5               	movf	postdec1,f,c
  8698  00142E  0012               	return		;funcret
  8699  001430                     __end_of_dac_spi_control:
  8700                           	opt callstack 0
  8701                           
  8702 ;; *************** function _read_cal_data *****************
  8703 ;; Defined at:
  8704 ;;		line 370 in file "daq.c"
  8705 ;; Parameters:    Size  Location     Type
  8706 ;;		None
  8707 ;; Auto vars:     Size  Location     Type
  8708 ;;  x               2  [STACK] unsigned short 
  8709 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  8710 ;;		 -> r_cal(155), 
  8711 ;;  y               2  [STACK] unsigned short 
  8712 ;;  crcVal_save     1  [STACK] unsigned char 
  8713 ;; Return value:  Size  Location     Type
  8714 ;;                  1  [STACK] _Bool 
  8715 ;; Registers used:
  8716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
  8717 ;; Tracked objects:
  8718 ;;		On entry : 0/39
  8719 ;;		On exit  : 0/0
  8720 ;;		Unchanged: 0/0
  8721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8726 ;;Total ram usage:        0 bytes
  8727 ;; Hardware stack levels used:    1
  8728 ;; Hardware stack levels required when called:   17
  8729 ;; This function calls:
  8730 ;;		_CRC_8BitDataWrite
  8731 ;;		_CRC_CalculatedResultGet
  8732 ;;		_CRC_Initialize
  8733 ;;		_CRC_IsBusy
  8734 ;;		_CRC_Start
  8735 ;;		_DATAEE_ReadByte
  8736 ;; This function is called by:
  8737 ;;		_main
  8738 ;; This function uses a reentrant model
  8739 ;;
  8740                           
  8741                           	psect	text13
  8742  01D852                     __ptext13:
  8743                           	opt callstack 0
  8744  01D852                     _read_cal_data:
  8745                           	opt callstack 0
  8746                           
  8747                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8748  01D852  0E07               	movlw	7
  8749  01D854  26E1               	addwf	fsr1l,f,c
  8750  01D856  0E00               	movlw	0
  8751  01D858  22E2               	addwfc	fsr1h,f,c
  8752                           
  8753                           ;daq.c: 372:  uint16_t x = 0, y;
  8754                           ;stkvar	_x @ sp[(-7)+0]
  8755                           
  8756                           ;incstack = 0
  8757  01D85A  0EF9               	movlw	-7
  8758  01D85C  6AE3               	clrf	plusw1,c
  8759  01D85E  0EFA               	movlw	-6
  8760  01D860  6AE3               	clrf	plusw1,c
  8761                           
  8762                           ;daq.c: 373:  uint8_t *r_cal_ptr, crcVal_save;;daq.c: 375:  y = sizeof(r_cal);
  8763  01D862  0E9B               	movlw	155
  8764  01D864  6E34               	movwf	(btemp+10)^0,c
  8765  01D866  0E00               	movlw	0
  8766  01D868  6E35               	movwf	(btemp+11)^0,c
  8767                           
  8768                           ;stkvar	_y @ sp[(-7)+4]
  8769  01D86A  0EFD               	movlw	-3
  8770  01D86C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8771  01D872  0EFE               	movlw	-2
  8772  01D874  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8773                           
  8774                           ;daq.c: 376:  r_cal_ptr = (uint8_t*) & r_cal;
  8775                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8776  01D87A  0E04               	movlw	high _r_cal
  8777  01D87C  6E2A               	movwf	btemp^0,c
  8778  01D87E  0EFC               	movlw	-4
  8779  01D880  0060  F0AB  FFE3   	movff	btemp,plusw1
  8780  01D886  0E40               	movlw	low _r_cal
  8781  01D888  6E2A               	movwf	btemp^0,c
  8782  01D88A  0EFB               	movlw	-5
  8783  01D88C  0060  F0AB  FFE3   	movff	btemp,plusw1
  8784                           
  8785                           ;daq.c: 378:  CRC_Initialize();
  8786  01D892  EC0B  F008         	call	_CRC_Initialize	;wreg free
  8787                           
  8788                           ; BSR set to: 0
  8789                           ;daq.c: 381:  CRC_Start();
  8790  01D896  EC3C  F015         	call	_CRC_Start	;wreg free
  8791  01D89A                     l14116:
  8792                           
  8793                           ;daq.c: 384:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  8794                           ;stkvar	_x @ sp[(-7)+0]
  8795  01D89A  0EF9               	movlw	-7
  8796  01D89C  006F FF8F FFE6     	movff	plusw1,postinc1
  8797  01D8A2  006F FF8F FFE6     	movff	plusw1,postinc1
  8798  01D8A8  EC2C  F011         	call	_DATAEE_ReadByte	;wreg free
  8799                           
  8800                           ;stkvar	_x @ sp[(-7)+0]
  8801  01D8AC  0EF9               	movlw	-7
  8802  01D8AE  006F FF8C  F034    	movff	plusw1,btemp+10
  8803  01D8B4  0EFA               	movlw	-6
  8804  01D8B6  006F FF8C  F035    	movff	plusw1,btemp+11
  8805                           
  8806                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8807  01D8BC  0EFB               	movlw	-5
  8808  01D8BE  006F FF8C  F032    	movff	plusw1,btemp+8
  8809  01D8C4  0EFC               	movlw	-4
  8810  01D8C6  006F FF8C  F033    	movff	plusw1,btemp+9
  8811  01D8CC  5034               	movf	(btemp+10)^0,w,c
  8812  01D8CE  2432               	addwf	(btemp+8)^0,w,c
  8813  01D8D0  6ED9               	movwf	fsr2l,c
  8814  01D8D2  5035               	movf	(btemp+11)^0,w,c
  8815  01D8D4  2033               	addwfc	(btemp+9)^0,w,c
  8816  01D8D6  6EDA               	movwf	fsr2h,c
  8817  01D8D8  0060  F0AB  FFDF   	movff	btemp,indf2
  8818                           
  8819                           ;daq.c: 385:  } while (++x < y);
  8820                           ;stkvar	_y @ sp[(-7)+4]
  8821  01D8DE  0EFD               	movlw	-3
  8822  01D8E0  006F FF8C  F034    	movff	plusw1,btemp+10
  8823  01D8E6  0EFE               	movlw	-2
  8824  01D8E8  006F FF8C  F035    	movff	plusw1,btemp+11
  8825                           
  8826                           ;stkvar	_x @ sp[(-7)+0]
  8827  01D8EE  0EF9               	movlw	-7
  8828  01D8F0  50E3               	movf	plusw1,w,c
  8829  01D8F2  0F01               	addlw	1
  8830  01D8F4  6E2A               	movwf	btemp^0,c
  8831  01D8F6  0EF9               	movlw	-7
  8832  01D8F8  0060  F0AB  FFE3   	movff	btemp,plusw1
  8833  01D8FE  6A2A               	clrf	btemp^0,c
  8834  01D900  0EFA               	movlw	-6
  8835  01D902  50E3               	movf	plusw1,w,c
  8836  01D904  202A               	addwfc	btemp^0,w,c
  8837  01D906  6E2A               	movwf	btemp^0,c
  8838  01D908  0EFA               	movlw	-6
  8839  01D90A  0060  F0AB  FFE3   	movff	btemp,plusw1
  8840  01D910  0EF9               	movlw	-7
  8841  01D912  006F FF8C  F032    	movff	plusw1,btemp+8
  8842  01D918  0EFA               	movlw	-6
  8843  01D91A  006F FF8C  F033    	movff	plusw1,btemp+9
  8844  01D920  5034               	movf	(btemp+10)^0,w,c
  8845  01D922  5C32               	subwf	(btemp+8)^0,w,c
  8846  01D924  5035               	movf	(btemp+11)^0,w,c
  8847  01D926  5833               	subwfb	(btemp+9)^0,w,c
  8848  01D928  A0D8               	btfss	status,0,c
  8849  01D92A  D7B7               	goto	l14116
  8850                           
  8851                           ;daq.c: 386:  crcVal_save = r_cal.crc;
  8852                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8853  01D92C  0EFF               	movlw	-1
  8854  01D92E  0061  F36B  FFE3   	movff	_r_cal+154,plusw1
  8855                           
  8856                           ;daq.c: 388:  if (r_cal.checkmark == 0x1957) {
  8857  01D934  0E57               	movlw	87
  8858  01D936  0104               	movlb	4	; () banked
  8859  01D938  19D8               	xorwf	(_r_cal+152)& (0+255),w,b
  8860  01D93A  E163               	bnz	l14136
  8861  01D93C  0E19               	movlw	25
  8862  01D93E  19D9               	xorwf	(_r_cal+153)& (0+255),w,b
  8863  01D940  A4D8               	btfss	status,2,c
  8864  01D942  D05F               	goto	u13320
  8865                           
  8866                           ; BSR set to: 4
  8867                           ;daq.c: 389:   r_cal.crc = 0x42;
  8868  01D944  0E42               	movlw	66
  8869  01D946  6FDA               	movwf	(_r_cal+154)& (0+255),b
  8870                           
  8871                           ; BSR set to: 4
  8872                           ;daq.c: 390:   x = 0;
  8873                           ;stkvar	_x @ sp[(-7)+0]
  8874  01D948  0EF9               	movlw	-7
  8875  01D94A  6AE3               	clrf	plusw1,c
  8876  01D94C  0EFA               	movlw	-6
  8877  01D94E  6AE3               	clrf	plusw1,c
  8878  01D950                     l14128:
  8879                           
  8880                           ;daq.c: 393:    CRC_8BitDataWrite(r_cal_ptr[x]);
  8881                           ;stkvar	_x @ sp[(-7)+0]
  8882  01D950  0EF9               	movlw	-7
  8883  01D952  006F FF8C  F034    	movff	plusw1,btemp+10
  8884  01D958  0EFA               	movlw	-6
  8885  01D95A  006F FF8C  F035    	movff	plusw1,btemp+11
  8886                           
  8887                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8888  01D960  0EFB               	movlw	-5
  8889  01D962  006F FF8C  F032    	movff	plusw1,btemp+8
  8890  01D968  0EFC               	movlw	-4
  8891  01D96A  006F FF8C  F033    	movff	plusw1,btemp+9
  8892  01D970  5034               	movf	(btemp+10)^0,w,c
  8893  01D972  2432               	addwf	(btemp+8)^0,w,c
  8894  01D974  6ED9               	movwf	fsr2l,c
  8895  01D976  5035               	movf	(btemp+11)^0,w,c
  8896  01D978  2033               	addwfc	(btemp+9)^0,w,c
  8897  01D97A  6EDA               	movwf	fsr2h,c
  8898  01D97C  50DF               	movf	indf2,w,c
  8899  01D97E  6EE6               	movwf	postinc1,c
  8900  01D980  ECA3  F014         	call	_CRC_8BitDataWrite	;wreg free
  8901  01D984                     l14130:
  8902  01D984  ECC5  F014         	call	_CRC_IsBusy	;wreg free
  8903  01D988  502A               	movf	btemp^0,w,c
  8904  01D98A  A4D8               	btfss	status,2,c
  8905  01D98C  D7FB               	goto	l14130
  8906                           
  8907                           ;daq.c: 395:   } while (++x < y);
  8908                           ;stkvar	_y @ sp[(-7)+4]
  8909  01D98E  0EFD               	movlw	-3
  8910  01D990  006F FF8C  F034    	movff	plusw1,btemp+10
  8911  01D996  0EFE               	movlw	-2
  8912  01D998  006F FF8C  F035    	movff	plusw1,btemp+11
  8913                           
  8914                           ;stkvar	_x @ sp[(-7)+0]
  8915  01D99E  0EF9               	movlw	-7
  8916  01D9A0  50E3               	movf	plusw1,w,c
  8917  01D9A2  0F01               	addlw	1
  8918  01D9A4  6E2A               	movwf	btemp^0,c
  8919  01D9A6  0EF9               	movlw	-7
  8920  01D9A8  0060  F0AB  FFE3   	movff	btemp,plusw1
  8921  01D9AE  6A2A               	clrf	btemp^0,c
  8922  01D9B0  0EFA               	movlw	-6
  8923  01D9B2  50E3               	movf	plusw1,w,c
  8924  01D9B4  202A               	addwfc	btemp^0,w,c
  8925  01D9B6  6E2A               	movwf	btemp^0,c
  8926  01D9B8  0EFA               	movlw	-6
  8927  01D9BA  0060  F0AB  FFE3   	movff	btemp,plusw1
  8928  01D9C0  0EF9               	movlw	-7
  8929  01D9C2  006F FF8C  F032    	movff	plusw1,btemp+8
  8930  01D9C8  0EFA               	movlw	-6
  8931  01D9CA  006F FF8C  F033    	movff	plusw1,btemp+9
  8932  01D9D0  5034               	movf	(btemp+10)^0,w,c
  8933  01D9D2  5C32               	subwf	(btemp+8)^0,w,c
  8934  01D9D4  5035               	movf	(btemp+11)^0,w,c
  8935  01D9D6  5833               	subwfb	(btemp+9)^0,w,c
  8936  01D9D8  A0D8               	btfss	status,0,c
  8937  01D9DA  D7BA               	goto	l14128
  8938                           
  8939                           ;daq.c: 396:   if (CRC_CalculatedResultGet(0, 0x00) != crcVal_save)
  8940  01D9DC  0E00               	movlw	0
  8941  01D9DE  6EE6               	movwf	postinc1,c
  8942  01D9E0  0E00               	movlw	0
  8943  01D9E2  6EE6               	movwf	postinc1,c
  8944  01D9E4  0E00               	movlw	0
  8945  01D9E6  6EE6               	movwf	postinc1,c
  8946  01D9E8  EC9C  F0F2         	call	_CRC_CalculatedResultGet	;wreg free
  8947                           
  8948                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8949  01D9EC  0EFF               	movlw	-1
  8950  01D9EE  50E3               	movf	plusw1,w,c
  8951  01D9F0  6E34               	movwf	(btemp+10)^0,c
  8952  01D9F2  6A35               	clrf	(btemp+11)^0,c
  8953  01D9F4  5034               	movf	(btemp+10)^0,w,c
  8954  01D9F6  182A               	xorwf	btemp^0,w,c
  8955  01D9F8  E104               	bnz	u13320
  8956  01D9FA  5035               	movf	(btemp+11)^0,w,c
  8957  01D9FC  182B               	xorwf	(btemp+1)^0,w,c
  8958  01D9FE  B4D8               	btfsc	status,2,c
  8959  01DA00  D002               	goto	l14144
  8960  01DA02                     u13320:
  8961  01DA02                     l14136:
  8962                           
  8963                           ;daq.c: 397:    return 0;
  8964  01DA02  0E00               	movlw	0
  8965  01DA04  D005               	goto	L5
  8966  01DA06                     l14144:
  8967                           
  8968                           ;daq.c: 401:  r_cal.crc = crcVal_save;
  8969                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8970  01DA06  0EFF               	movlw	-1
  8971  01DA08  006F FF8C  F4DA    	movff	plusw1,_r_cal+154
  8972                           
  8973                           ;daq.c: 402:  return 1;
  8974  01DA0E  0E01               	movlw	1
  8975  01DA10                     L5:
  8976  01DA10  6E2A               	movwf	btemp^0,c
  8977                           
  8978                           ; _read_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8979  01DA12  0EF9               	movlw	249
  8980  01DA14  26E1               	addwf	fsr1l,f,c
  8981  01DA16  0EFF               	movlw	255
  8982  01DA18  22E2               	addwfc	fsr1h,f,c
  8983  01DA1A  0012               	return		;funcret
  8984  01DA1C                     __end_of_read_cal_data:
  8985                           	opt callstack 0
  8986                           
  8987 ;; *************** function _DATAEE_ReadByte *****************
  8988 ;; Defined at:
  8989 ;;		line 194 in file "mcc_generated_files/memory.c"
  8990 ;; Parameters:    Size  Location     Type
  8991 ;;  bAdd            2  [STACK] unsigned short 
  8992 ;; Auto vars:     Size  Location     Type
  8993 ;;		None
  8994 ;; Return value:  Size  Location     Type
  8995 ;;                  1  [STACK] unsigned char 
  8996 ;; Registers used:
  8997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  8998 ;; Tracked objects:
  8999 ;;		On entry : 0/39
  9000 ;;		On exit  : 0/0
  9001 ;;		Unchanged: 0/0
  9002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9007 ;;Total ram usage:        0 bytes
  9008 ;; Hardware stack levels used:    1
  9009 ;; Hardware stack levels required when called:   15
  9010 ;; This function calls:
  9011 ;;		Nothing
  9012 ;; This function is called by:
  9013 ;;		_read_cal_data
  9014 ;; This function uses a reentrant model
  9015 ;;
  9016                           
  9017                           	psect	text14
  9018  002258                     __ptext14:
  9019                           	opt callstack 0
  9020  002258                     _DATAEE_ReadByte:
  9021                           	opt callstack 14
  9022                           
  9023                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  9024                           ;stkvar	_bAdd @ sp[(0)+-2]
  9025                           
  9026                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9027                           ;incstack = 0
  9028  002258  0EFF               	movlw	255
  9029  00225A  24E1               	addwf	fsr1l,w,c
  9030  00225C  6ED9               	movwf	fsr2l,c
  9031  00225E  0EFF               	movlw	255
  9032  002260  20E2               	addwfc	fsr1h,w,c
  9033  002262  6EDA               	movwf	fsr2h,c
  9034  002264  50DF               	movf	indf2,w,c
  9035  002266  0B03               	andlw	3
  9036  002268  0139               	movlb	57	; () banked
  9037  00226A  6FE1               	movwf	225,b	;volatile
  9038                           
  9039                           ; BSR set to: 57
  9040                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  9041                           ;stkvar	_bAdd @ sp[(0)+-2]
  9042  00226C  0EFE               	movlw	-2
  9043  00226E  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  9044                           
  9045                           ; BSR set to: 57
  9046                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  9047  002274  0E3F               	movlw	-193
  9048  002276  17E5               	andwf	229,f,b	;volsfr
  9049                           
  9050                           ; BSR set to: 57
  9051                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  9052  002278  81E5               	bsf	229,0,b	;volsfr
  9053                           
  9054                           ; BSR set to: 57
  9055                           ;mcc_generated_files/memory.c: 200:     __nop();
  9056  00227A  F000               	nop	
  9057                           
  9058                           ;mcc_generated_files/memory.c: 201:     __nop();
  9059  00227C  F000               	nop	
  9060                           
  9061                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  9062  00227E  006E F78C  F02A    	movff	14819,btemp	;volatile
  9063                           
  9064                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  9065  002284  52E5               	movf	postdec1,f,c
  9066  002286  52E5               	movf	postdec1,f,c
  9067  002288  0012               	return		;funcret
  9068  00228A                     __end_of_DATAEE_ReadByte:
  9069                           	opt callstack 0
  9070                           
  9071 ;; *************** function _load_hist_data *****************
  9072 ;; Defined at:
  9073 ;;		line 224 in file "mbmc.c"
  9074 ;; Parameters:    Size  Location     Type
  9075 ;;		None
  9076 ;; Auto vars:     Size  Location     Type
  9077 ;;  esr_rescale     2  [STACK] short 
  9078 ;; Return value:  Size  Location     Type
  9079 ;;                  1  [STACK] void 
  9080 ;; Registers used:
  9081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, prodl, prodh
  9082 ;; Tracked objects:
  9083 ;;		On entry : 3F/1
  9084 ;;		On exit  : 3F/39
  9085 ;;		Unchanged: 0/0
  9086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9091 ;;Total ram usage:        0 bytes
  9092 ;; Hardware stack levels used:    1
  9093 ;; Hardware stack levels required when called:   16
  9094 ;; This function calls:
  9095 ;;		___fladd
  9096 ;;		___flmul
  9097 ;;		___fltol
  9098 ;;		___xxtofl
  9099 ;;		_start_bsoc
  9100 ;;		_stop_bsoc
  9101 ;;		_time
  9102 ;; This function is called by:
  9103 ;;		_main
  9104 ;; This function uses a reentrant model
  9105 ;;
  9106                           
  9107                           	psect	text15
  9108  0194E0                     __ptext15:
  9109                           	opt callstack 0
  9110  0194E0                     _load_hist_data:
  9111                           	opt callstack 0
  9112                           
  9113                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9114  0194E0  52E6               	movf	postinc1,f,c
  9115  0194E2  52E6               	movf	postinc1,f,c
  9116                           
  9117                           ;mbmc.c: 226:  int16_t esr_rescale;;mbmc.c: 228:  stop_bsoc();
  9118                           
  9119                           ;incstack = 0
  9120  0194E4  EC48  F015         	call	_stop_bsoc	;wreg free
  9121                           
  9122                           ; BSR set to: 57
  9123                           ;mbmc.c: 229:  esr_rescale = (int16_t) (C.esr * 1000.0);
  9124  0194E8  0E00               	movlw	0
  9125  0194EA  6EE6               	movwf	postinc1,c
  9126  0194EC  0E00               	movlw	0
  9127  0194EE  6EE6               	movwf	postinc1,c
  9128  0194F0  0E7A               	movlw	122
  9129  0194F2  6EE6               	movwf	postinc1,c
  9130  0194F4  0E44               	movlw	68
  9131  0194F6  6EE6               	movwf	postinc1,c
  9132  0194F8  EE22  F187         	lfsr	2,_C+136	;volatile
  9133  0194FC  006F FF7B FFE6     	movff	postinc2,postinc1
  9134  019502  006F FF7B FFE6     	movff	postinc2,postinc1
  9135  019508  006F FF7B FFE6     	movff	postinc2,postinc1
  9136  01950E  006F FF7B FFE6     	movff	postinc2,postinc1
  9137  019514  ECFF  F0B2         	call	___flmul	;wreg free
  9138  019518  0060  F0AB  FFE6   	movff	btemp,postinc1
  9139  01951E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9140  019524  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9141  01952A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9142  019530  EC55  F0F3         	call	___fltol	;wreg free
  9143  019534  0060  F0A8  F034   	movff	btemp,btemp+10
  9144  01953A  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9145                           
  9146                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9147  019540  0EFE               	movlw	-2
  9148  019542  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  9149  019548  0EFF               	movlw	-1
  9150  01954A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  9151                           
  9152                           ;mbmc.c: 230:  C.hist[0].updates++;
  9153  019550  EE22  F1C4         	lfsr	2,_C+197	;volatile
  9154  019554  2ADE               	incf	postinc2,f,c
  9155  019556  0E00               	movlw	0
  9156  019558  22DE               	addwfc	postinc2,f,c
  9157  01955A  22DE               	addwfc	postinc2,f,c
  9158  01955C  22DE               	addwfc	postinc2,f,c
  9159                           
  9160                           ;mbmc.c: 231:  C.hist[0].h[12] += C.pvkw;
  9161  01955E  EE22  F1A7         	lfsr	2,_C+168	;volatile
  9162  019562  006F FF7B FFE6     	movff	postinc2,postinc1
  9163  019568  006F FF7B FFE6     	movff	postinc2,postinc1
  9164  01956E  006F FF7B FFE6     	movff	postinc2,postinc1
  9165  019574  006F FF7B FFE6     	movff	postinc2,postinc1
  9166  01957A  0062  F7F0  F032   	movff	_C+253,btemp+8	;volatile
  9167  019580  0062  F7F4  F033   	movff	_C+254,btemp+9	;volatile
  9168  019586  0E00               	movlw	0
  9169  019588  BE33               	btfsc	(btemp+9)^0,7,c
  9170  01958A  0EFF               	movlw	255
  9171  01958C  6E34               	movwf	(btemp+10)^0,c
  9172  01958E  6E35               	movwf	(btemp+11)^0,c
  9173  019590  0060  F0CB  FFE6   	movff	btemp+8,postinc1
  9174  019596  0060  F0CF  FFE6   	movff	btemp+9,postinc1
  9175  01959C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  9176  0195A2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  9177  0195A8  0E01               	movlw	1
  9178  0195AA  6EE6               	movwf	postinc1,c
  9179  0195AC  EC27  F0EB         	call	___xxtofl	;wreg free
  9180  0195B0  0060  F0AB  FFE6   	movff	btemp,postinc1
  9181  0195B6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9182  0195BC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9183  0195C2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9184  0195C8  EC14  F0B7         	call	___fladd	;wreg free
  9185  0195CC  0060  F0AB  FFE6   	movff	btemp,postinc1
  9186  0195D2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9187  0195D8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9188  0195DE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9189  0195E4  EC55  F0F3         	call	___fltol	;wreg free
  9190  0195E8  0060  F0A8  F034   	movff	btemp,btemp+10
  9191  0195EE  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9192  0195F4  0060  F0D0  F9FC   	movff	btemp+10,_C+253	;volatile
  9193  0195FA  0060  F0D4  F9FD   	movff	btemp+11,_C+254	;volatile
  9194                           
  9195                           ;mbmc.c: 232:  C.hist[0].h[11]++;
  9196  019600  EE22  F1FA         	lfsr	2,_C+251	;volatile
  9197  019604  2ADE               	incf	postinc2,f,c
  9198  019606  0E00               	movlw	0
  9199  019608  22DD               	addwfc	postdec2,f,c
  9200                           
  9201                           ;mbmc.c: 233:  if (esr_rescale > C.hist[0].h[10])
  9202                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9203  01960A  EE22  F1F8         	lfsr	2,_C+249	;volatile
  9204  01960E  0EFE               	movlw	-2
  9205  019610  50E3               	movf	plusw1,w,c
  9206  019612  5CDE               	subwf	postinc2,w,c
  9207  019614  50DE               	movf	postinc2,w,c
  9208  019616  0A80               	xorlw	128
  9209  019618  6E2A               	movwf	btemp^0,c
  9210  01961A  0EFF               	movlw	-1
  9211  01961C  50E3               	movf	plusw1,w,c
  9212  01961E  0A80               	xorlw	128
  9213  019620  582A               	subwfb	btemp^0,w,c
  9214  019622  B0D8               	btfsc	status,0,c
  9215  019624  D00D               	goto	l14440
  9216                           
  9217                           ;mbmc.c: 234:   C.hist[0].h[10] = esr_rescale;
  9218                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9219  019626  50E1               	movf	fsr1l,w,c
  9220  019628  0FFE               	addlw	-2
  9221  01962A  6ED9               	movwf	fsr2l,c
  9222  01962C  50E2               	movf	fsr1h,w,c
  9223  01962E  6EDA               	movwf	fsr2h,c
  9224  019630  0EFF               	movlw	255
  9225  019632  22DA               	addwfc	fsr2h,f,c
  9226  019634  006F FF78  F9F8    	movff	postinc2,_C+249	;volatile
  9227  01963A  006F FF74  F9F9    	movff	postdec2,_C+250	;volatile
  9228  019640                     l14440:
  9229                           
  9230                           ;mbmc.c: 235:  if (esr_rescale < C.hist[0].h[9])
  9231  019640  EE22  F1F6         	lfsr	2,_C+247	;volatile
  9232                           
  9233                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9234  019644  0EFE               	movlw	-2
  9235  019646  006F FF8C  F02A    	movff	plusw1,btemp
  9236  01964C  50DE               	movf	postinc2,w,c
  9237  01964E  5C2A               	subwf	btemp^0,w,c
  9238  019650  0EFF               	movlw	-1
  9239  019652  50E3               	movf	plusw1,w,c
  9240  019654  0A80               	xorlw	128
  9241  019656  6E2A               	movwf	btemp^0,c
  9242  019658  50DE               	movf	postinc2,w,c
  9243  01965A  0A80               	xorlw	128
  9244  01965C  582A               	subwfb	btemp^0,w,c
  9245  01965E  B0D8               	btfsc	status,0,c
  9246  019660  D00D               	goto	l14444
  9247                           
  9248                           ;mbmc.c: 236:   C.hist[0].h[9] = esr_rescale;
  9249                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9250  019662  50E1               	movf	fsr1l,w,c
  9251  019664  0FFE               	addlw	-2
  9252  019666  6ED9               	movwf	fsr2l,c
  9253  019668  50E2               	movf	fsr1h,w,c
  9254  01966A  6EDA               	movwf	fsr2h,c
  9255  01966C  0EFF               	movlw	255
  9256  01966E  22DA               	addwfc	fsr2h,f,c
  9257  019670  006F FF78  F9F6    	movff	postinc2,_C+247	;volatile
  9258  019676  006F FF74  F9F7    	movff	postdec2,_C+248	;volatile
  9259  01967C                     l14444:
  9260                           
  9261                           ;mbmc.c: 237:  C.hist[0].h[8] = C.bv_one_load * 100.0;
  9262  01967C  0E00               	movlw	0
  9263  01967E  6EE6               	movwf	postinc1,c
  9264  019680  0E00               	movlw	0
  9265  019682  6EE6               	movwf	postinc1,c
  9266  019684  0EC8               	movlw	200
  9267  019686  6EE6               	movwf	postinc1,c
  9268  019688  0E42               	movlw	66
  9269  01968A  6EE6               	movwf	postinc1,c
  9270  01968C  EE22  F225         	lfsr	2,_C+294	;volatile
  9271  019690  006F FF7B FFE6     	movff	postinc2,postinc1
  9272  019696  006F FF7B FFE6     	movff	postinc2,postinc1
  9273  01969C  006F FF7B FFE6     	movff	postinc2,postinc1
  9274  0196A2  006F FF7B FFE6     	movff	postinc2,postinc1
  9275  0196A8  ECFF  F0B2         	call	___flmul	;wreg free
  9276  0196AC  0060  F0AB  FFE6   	movff	btemp,postinc1
  9277  0196B2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9278  0196B8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9279  0196BE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9280  0196C4  EC55  F0F3         	call	___fltol	;wreg free
  9281  0196C8  0060  F0A8  F034   	movff	btemp,btemp+10
  9282  0196CE  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9283  0196D4  0060  F0D0  F9F4   	movff	btemp+10,_C+245	;volatile
  9284  0196DA  0060  F0D4  F9F5   	movff	btemp+11,_C+246	;volatile
  9285                           
  9286                           ;mbmc.c: 238:  C.hist[0].h[7] = C.bv_full_load * 100.0;
  9287  0196E0  0E00               	movlw	0
  9288  0196E2  6EE6               	movwf	postinc1,c
  9289  0196E4  0E00               	movlw	0
  9290  0196E6  6EE6               	movwf	postinc1,c
  9291  0196E8  0EC8               	movlw	200
  9292  0196EA  6EE6               	movwf	postinc1,c
  9293  0196EC  0E42               	movlw	66
  9294  0196EE  6EE6               	movwf	postinc1,c
  9295  0196F0  EE22  F229         	lfsr	2,_C+298	;volatile
  9296  0196F4  006F FF7B FFE6     	movff	postinc2,postinc1
  9297  0196FA  006F FF7B FFE6     	movff	postinc2,postinc1
  9298  019700  006F FF7B FFE6     	movff	postinc2,postinc1
  9299  019706  006F FF7B FFE6     	movff	postinc2,postinc1
  9300  01970C  ECFF  F0B2         	call	___flmul	;wreg free
  9301  019710  0060  F0AB  FFE6   	movff	btemp,postinc1
  9302  019716  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9303  01971C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9304  019722  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9305  019728  EC55  F0F3         	call	___fltol	;wreg free
  9306  01972C  0060  F0A8  F034   	movff	btemp,btemp+10
  9307  019732  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9308  019738  0060  F0D0  F9F2   	movff	btemp+10,_C+243	;volatile
  9309  01973E  0060  F0D4  F9F3   	movff	btemp+11,_C+244	;volatile
  9310                           
  9311                           ;mbmc.c: 239:  C.hist[0].h[6] = C.dynamic_ah;
  9312  019744  EE22  F18F         	lfsr	2,_C+144	;volatile
  9313  019748  006F FF7B FFE6     	movff	postinc2,postinc1
  9314  01974E  006F FF7B FFE6     	movff	postinc2,postinc1
  9315  019754  006F FF7B FFE6     	movff	postinc2,postinc1
  9316  01975A  006F FF7B FFE6     	movff	postinc2,postinc1
  9317  019760  EC55  F0F3         	call	___fltol	;wreg free
  9318  019764  0060  F0A8  F034   	movff	btemp,btemp+10
  9319  01976A  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9320  019770  0060  F0D0  F9F0   	movff	btemp+10,_C+241	;volatile
  9321  019776  0060  F0D4  F9F1   	movff	btemp+11,_C+242	;volatile
  9322                           
  9323                           ;mbmc.c: 240:  C.hist[0].h[5] = C.bkwi;
  9324  01977C  EE22  F19F         	lfsr	2,_C+160	;volatile
  9325  019780  006F FF7B FFE6     	movff	postinc2,postinc1
  9326  019786  006F FF7B FFE6     	movff	postinc2,postinc1
  9327  01978C  006F FF7B FFE6     	movff	postinc2,postinc1
  9328  019792  006F FF7B FFE6     	movff	postinc2,postinc1
  9329  019798  EC55  F0F3         	call	___fltol	;wreg free
  9330  01979C  0060  F0A8  F034   	movff	btemp,btemp+10
  9331  0197A2  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9332  0197A8  0060  F0D0  F9EE   	movff	btemp+10,_C+239	;volatile
  9333  0197AE  0060  F0D4  F9EF   	movff	btemp+11,_C+240	;volatile
  9334                           
  9335                           ;mbmc.c: 241:  C.hist[0].h[4] = C.bkwo;
  9336  0197B4  EE22  F1A3         	lfsr	2,_C+164	;volatile
  9337  0197B8  006F FF7B FFE6     	movff	postinc2,postinc1
  9338  0197BE  006F FF7B FFE6     	movff	postinc2,postinc1
  9339  0197C4  006F FF7B FFE6     	movff	postinc2,postinc1
  9340  0197CA  006F FF7B FFE6     	movff	postinc2,postinc1
  9341  0197D0  EC55  F0F3         	call	___fltol	;wreg free
  9342  0197D4  0060  F0A8  F034   	movff	btemp,btemp+10
  9343  0197DA  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9344  0197E0  0060  F0D0  F9EC   	movff	btemp+10,_C+237	;volatile
  9345  0197E6  0060  F0D4  F9ED   	movff	btemp+11,_C+238	;volatile
  9346                           
  9347                           ;mbmc.c: 242:  C.hist[0].h[3] = C.pv_ah;
  9348  0197EC  EE22  F193         	lfsr	2,_C+148	;volatile
  9349  0197F0  006F FF7B FFE6     	movff	postinc2,postinc1
  9350  0197F6  006F FF7B FFE6     	movff	postinc2,postinc1
  9351  0197FC  006F FF7B FFE6     	movff	postinc2,postinc1
  9352  019802  006F FF7B FFE6     	movff	postinc2,postinc1
  9353  019808  EC55  F0F3         	call	___fltol	;wreg free
  9354  01980C  0060  F0A8  F034   	movff	btemp,btemp+10
  9355  019812  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9356  019818  0060  F0D0  F9EA   	movff	btemp+10,_C+235	;volatile
  9357  01981E  0060  F0D4  F9EB   	movff	btemp+11,_C+236	;volatile
  9358                           
  9359                           ;mbmc.c: 243:  C.hist[0].h[0] = C.dynamic_ah_adj;
  9360  019824  EE22  F19B         	lfsr	2,_C+156	;volatile
  9361  019828  006F FF7B FFE6     	movff	postinc2,postinc1
  9362  01982E  006F FF7B FFE6     	movff	postinc2,postinc1
  9363  019834  006F FF7B FFE6     	movff	postinc2,postinc1
  9364  01983A  006F FF7B FFE6     	movff	postinc2,postinc1
  9365  019840  EC55  F0F3         	call	___fltol	;wreg free
  9366  019844  0060  F0A8  F034   	movff	btemp,btemp+10
  9367  01984A  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9368  019850  0060  F0D0  F9E4   	movff	btemp+10,_C+229	;volatile
  9369  019856  0060  F0D4  F9E5   	movff	btemp+11,_C+230	;volatile
  9370                           
  9371                           ;mbmc.c: 244:  C.hist[0].pclock = time(((void*)0));
  9372  01985C  0E00               	movlw	0
  9373  01985E  6EE6               	movwf	postinc1,c
  9374  019860  0E00               	movlw	0
  9375  019862  6EE6               	movwf	postinc1,c
  9376  019864  ECBD  F00C         	call	_time	;wreg free
  9377  019868  52E5               	movf	postdec1,f,c
  9378  01986A  006F FF9C  F041    	movff	indf1,btemp+23
  9379  019870  52E5               	movf	postdec1,f,c
  9380  019872  006F FF9C  F040    	movff	indf1,btemp+22
  9381  019878  52E5               	movf	postdec1,f,c
  9382  01987A  006F FF9C  F03F    	movff	indf1,btemp+21
  9383  019880  52E5               	movf	postdec1,f,c
  9384  019882  006F FF9C  F03E    	movff	indf1,btemp+20
  9385  019888  52E5               	movf	postdec1,f,c
  9386  01988A  006F FF9C  F03D    	movff	indf1,btemp+19
  9387  019890  52E5               	movf	postdec1,f,c
  9388  019892  006F FF9C  F03C    	movff	indf1,btemp+18
  9389  019898  52E5               	movf	postdec1,f,c
  9390  01989A  006F FF9C  F03B    	movff	indf1,btemp+17
  9391  0198A0  52E5               	movf	postdec1,f,c
  9392  0198A2  006F FF9C  F03A    	movff	indf1,btemp+16
  9393  0198A8  EE22  F1C8         	lfsr	2,_C+201	;volatile
  9394  0198AC  0060  F0EB  FFDE   	movff	btemp+16,postinc2
  9395  0198B2  0060  F0EF  FFDE   	movff	btemp+17,postinc2
  9396  0198B8  0060  F0F3  FFDE   	movff	btemp+18,postinc2
  9397  0198BE  0060  F0F7  FFDE   	movff	btemp+19,postinc2
  9398  0198C4  0060  F0FB  FFDE   	movff	btemp+20,postinc2
  9399  0198CA  0060  F0FF  FFDE   	movff	btemp+21,postinc2
  9400  0198D0  0060  F103  FFDE   	movff	btemp+22,postinc2
  9401  0198D6  0060  F107  FFDE   	movff	btemp+23,postinc2
  9402                           
  9403                           ; BSR set to: 57
  9404                           ;mbmc.c: 245:  C.dynamic_ah = 0.0;
  9405  0198DC  0E00               	movlw	0
  9406  0198DE  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
  9407  0198E4  0E00               	movlw	0
  9408  0198E6  006F FFA0  F990    	movff	wreg,_C+145	;volatile
  9409  0198EC  0E00               	movlw	0
  9410  0198EE  006F FFA0  F991    	movff	wreg,_C+146	;volatile
  9411  0198F4  0E00               	movlw	0
  9412  0198F6  006F FFA0  F992    	movff	wreg,_C+147	;volatile
  9413                           
  9414                           ; BSR set to: 57
  9415                           ;mbmc.c: 246:  C.dynamic_ah_adj = 0.0;
  9416  0198FC  0E00               	movlw	0
  9417  0198FE  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
  9418  019904  0E00               	movlw	0
  9419  019906  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
  9420  01990C  0E00               	movlw	0
  9421  01990E  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
  9422  019914  0E00               	movlw	0
  9423  019916  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
  9424                           
  9425                           ; BSR set to: 57
  9426                           ;mbmc.c: 247:  C.pvkw = 0.0;
  9427  01991C  0E00               	movlw	0
  9428  01991E  006F FFA0  F9A7    	movff	wreg,_C+168	;volatile
  9429  019924  0E00               	movlw	0
  9430  019926  006F FFA0  F9A8    	movff	wreg,_C+169	;volatile
  9431  01992C  0E00               	movlw	0
  9432  01992E  006F FFA0  F9A9    	movff	wreg,_C+170	;volatile
  9433  019934  0E00               	movlw	0
  9434  019936  006F FFA0  F9AA    	movff	wreg,_C+171	;volatile
  9435                           
  9436                           ; BSR set to: 57
  9437                           ;mbmc.c: 248:  start_bsoc();
  9438  01993C  ECBD  F013         	call	_start_bsoc	;wreg free
  9439                           
  9440                           ; BSR set to: 57
  9441                           ; _load_hist_data: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9442  019940  52E5               	movf	postdec1,f,c
  9443  019942  52E5               	movf	postdec1,f,c
  9444  019944  0012               	return		;funcret
  9445  019946                     __end_of_load_hist_data:
  9446                           	opt callstack 0
  9447                           
  9448 ;; *************** function _init_port_dma *****************
  9449 ;; Defined at:
  9450 ;;		line 104 in file "eadog.c"
  9451 ;; Parameters:    Size  Location     Type
  9452 ;;		None
  9453 ;; Auto vars:     Size  Location     Type
  9454 ;;		None
  9455 ;; Return value:  Size  Location     Type
  9456 ;;                  1  [STACK] void 
  9457 ;; Registers used:
  9458 ;;		wreg, status,2
  9459 ;; Tracked objects:
  9460 ;;		On entry : 0/2
  9461 ;;		On exit  : 3F/3B
  9462 ;;		Unchanged: 0/0
  9463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9468 ;;Total ram usage:        0 bytes
  9469 ;; Hardware stack levels used:    1
  9470 ;; Hardware stack levels required when called:   15
  9471 ;; This function calls:
  9472 ;;		Nothing
  9473 ;; This function is called by:
  9474 ;;		_main
  9475 ;; This function uses a reentrant model
  9476 ;;
  9477                           
  9478                           	psect	text16
  9479  00228A                     __ptext16:
  9480                           	opt callstack 0
  9481  00228A                     _init_port_dma:
  9482                           	opt callstack 15
  9483                           
  9484                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  9485                           
  9486                           ; BSR set to: 57
  9487                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9488                           ;incstack = 0
  9489  00228A  0E3F               	movlw	-193
  9490  00228C  013B               	movlb	59	; () banked
  9491  00228E  17DD               	andwf	221,f,b	;volatile
  9492                           
  9493                           ; BSR set to: 59
  9494                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  9495  002290  9BDD               	bcf	221,5,b	;volatile
  9496                           
  9497                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  9498  002292  51DD               	movf	221,w,b	;volatile
  9499  002294  0BF9               	andlw	-7
  9500  002296  0902               	iorlw	2
  9501  002298  6FDD               	movwf	221,b	;volatile
  9502                           
  9503                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  9504  00229A  0EE7               	movlw	-25
  9505  00229C  17DD               	andwf	221,f,b	;volatile
  9506                           
  9507                           ; BSR set to: 59
  9508                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  9509  00229E  81DD               	bsf	221,0,b	;volatile
  9510                           
  9511                           ; BSR set to: 59
  9512                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  9513  0022A0  9DDC               	bcf	220,6,b	;volatile
  9514                           
  9515                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  9516  0022A2  0E3D               	movlw	61
  9517  0022A4  6FD1               	movwf	209,b	;volatile
  9518  0022A6  0EEA               	movlw	234
  9519  0022A8  6FD0               	movwf	208,b	;volatile
  9520                           
  9521                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  9522  0022AA  0EFF               	movlw	low _port_data
  9523  0022AC  6FD9               	movwf	217,b	;volatile
  9524  0022AE  0E06               	movlw	high _port_data
  9525  0022B0  6FDA               	movwf	218,b	;volatile
  9526  0022B2  0E00               	movlw	low (_port_data shr (0+16))
  9527  0022B4  6FDB               	movwf	219,b	;volatile
  9528                           
  9529                           ; BSR set to: 59
  9530                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  9531  0022B6  9BDC               	bcf	220,5,b	;volatile
  9532                           
  9533                           ; BSR set to: 59
  9534                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9535  0022B8  0012               	return		;funcret
  9536  0022BA                     __end_of_init_port_dma:
  9537                           	opt callstack 0
  9538                           
  9539 ;; *************** function _init_display *****************
  9540 ;; Defined at:
  9541 ;;		line 38 in file "eadog.c"
  9542 ;; Parameters:    Size  Location     Type
  9543 ;;		None
  9544 ;; Auto vars:     Size  Location     Type
  9545 ;;		None
  9546 ;; Return value:  Size  Location     Type
  9547 ;;                  1  [STACK] void 
  9548 ;; Registers used:
  9549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9550 ;; Tracked objects:
  9551 ;;		On entry : 3F/3B
  9552 ;;		On exit  : 3F/3D
  9553 ;;		Unchanged: 0/0
  9554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9559 ;;Total ram usage:        0 bytes
  9560 ;; Hardware stack levels used:    1
  9561 ;; Hardware stack levels required when called:   17
  9562 ;; This function calls:
  9563 ;;		_ringBufS_init
  9564 ;;		_send_lcd_cmd
  9565 ;;		_send_lcd_cmd_long
  9566 ;;		_send_lcd_data
  9567 ;;		_wdtdelay
  9568 ;; This function is called by:
  9569 ;;		_main
  9570 ;; This function uses a reentrant model
  9571 ;;
  9572                           
  9573                           	psect	text17
  9574  0001A2                     __ptext17:
  9575                           	opt callstack 0
  9576  0001A2                     _init_display:
  9577                           	opt callstack 13
  9578                           
  9579                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  9580                           
  9581                           ; BSR set to: 59
  9582                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9583                           ;incstack = 0
  9584  0001A2  0E43               	movlw	low _ring_buf1
  9585  0001A4  0100               	movlb	0	; () banked
  9586  0001A6  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  9587  0001A8  0E05               	movlw	high _ring_buf1
  9588  0001AA  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  9589                           
  9590                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  9591  0001AC  0E00               	movlw	low _ring_buf2
  9592  0001AE  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  9593  0001B0  0E05               	movlw	high _ring_buf2
  9594  0001B2  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  9595                           
  9596                           ; BSR set to: 0
  9597                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  9598  0001B4  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9599  0001BA  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9600  0001C0  EC13  F012         	call	_ringBufS_init	;wreg free
  9601                           
  9602                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  9603  0001C4  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  9604  0001CA  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  9605  0001D0  EC13  F012         	call	_ringBufS_init	;wreg free
  9606                           
  9607                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  9608  0001D4  84BE               	bsf	190,2,c	;volatile
  9609                           
  9610                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  9611  0001D6  013D               	movlb	61	; () banked
  9612  0001D8  9F14               	bcf	20,7,b	;volatile
  9613                           
  9614                           ; BSR set to: 61
  9615                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  9616  0001DA  0E20               	movlw	32
  9617  0001DC  6F15               	movwf	21,b	;volatile
  9618                           
  9619                           ; BSR set to: 61
  9620                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  9621  0001DE  0E03               	movlw	3
  9622  0001E0  6F16               	movwf	22,b	;volatile
  9623                           
  9624                           ; BSR set to: 61
  9625                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  9626  0001E2  0E04               	movlw	4
  9627  0001E4  6F19               	movwf	25,b	;volatile
  9628                           
  9629                           ; BSR set to: 61
  9630                           ;eadog.c: 55:  SPI1CLK = 0x02;
  9631  0001E6  0E02               	movlw	2
  9632  0001E8  6F1C               	movwf	28,b	;volatile
  9633                           
  9634                           ; BSR set to: 61
  9635                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  9636  0001EA  0E83               	movlw	131
  9637  0001EC  6F14               	movwf	20,b	;volatile
  9638                           
  9639                           ; BSR set to: 61
  9640                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  9641  0001EE  8F14               	bsf	20,7,b	;volatile
  9642                           
  9643                           ; BSR set to: 61
  9644                           ;eadog.c: 60:  wdtdelay(350000);
  9645  0001F0  0E30               	movlw	48
  9646  0001F2  6EE6               	movwf	postinc1,c
  9647  0001F4  0E57               	movlw	87
  9648  0001F6  6EE6               	movwf	postinc1,c
  9649  0001F8  0E05               	movlw	5
  9650  0001FA  6EE6               	movwf	postinc1,c
  9651  0001FC  0E00               	movlw	0
  9652  0001FE  6EE6               	movwf	postinc1,c
  9653  000200  EC19  F00D         	call	_wdtdelay	;wreg free
  9654                           
  9655                           ; BSR set to: 0
  9656                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  9657  000204  0E46               	movlw	70
  9658  000206  6EE6               	movwf	postinc1,c
  9659  000208  EC7A  F00F         	call	_send_lcd_cmd_long	;wreg free
  9660                           
  9661                           ; BSR set to: 0
  9662                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  9663  00020C  0E41               	movlw	65
  9664  00020E  6EE6               	movwf	postinc1,c
  9665  000210  EC9A  F00F         	call	_send_lcd_cmd	;wreg free
  9666                           
  9667                           ; BSR set to: 0
  9668                           ;eadog.c: 63:  wdtdelay(80);
  9669  000214  0E50               	movlw	80
  9670  000216  6EE6               	movwf	postinc1,c
  9671  000218  0E00               	movlw	0
  9672  00021A  6EE6               	movwf	postinc1,c
  9673  00021C  0E00               	movlw	0
  9674  00021E  6EE6               	movwf	postinc1,c
  9675  000220  0E00               	movlw	0
  9676  000222  6EE6               	movwf	postinc1,c
  9677  000224  EC19  F00D         	call	_wdtdelay	;wreg free
  9678                           
  9679                           ; BSR set to: 0
  9680                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  9681  000228  0E53               	movlw	83
  9682  00022A  6EE6               	movwf	postinc1,c
  9683  00022C  EC9A  F00F         	call	_send_lcd_cmd	;wreg free
  9684                           
  9685                           ; BSR set to: 0
  9686                           ;eadog.c: 65:  send_lcd_data(2);
  9687  000230  0E02               	movlw	2
  9688  000232  6EE6               	movwf	postinc1,c
  9689  000234  EC40  F013         	call	_send_lcd_data	;wreg free
  9690                           
  9691                           ; BSR set to: 0
  9692                           ;eadog.c: 66:  wdtdelay(80);
  9693  000238  0E50               	movlw	80
  9694  00023A  6EE6               	movwf	postinc1,c
  9695  00023C  0E00               	movlw	0
  9696  00023E  6EE6               	movwf	postinc1,c
  9697  000240  0E00               	movlw	0
  9698  000242  6EE6               	movwf	postinc1,c
  9699  000244  0E00               	movlw	0
  9700  000246  6EE6               	movwf	postinc1,c
  9701  000248  EC19  F00D         	call	_wdtdelay	;wreg free
  9702                           
  9703                           ; BSR set to: 0
  9704                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  9705  00024C  0E51               	movlw	81
  9706  00024E  6EE6               	movwf	postinc1,c
  9707  000250  EC7A  F00F         	call	_send_lcd_cmd_long	;wreg free
  9708                           
  9709                           ; BSR set to: 0
  9710                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  9711  000254  013D               	movlb	61	; () banked
  9712  000256  9F14               	bcf	20,7,b	;volatile
  9713                           
  9714                           ; BSR set to: 61
  9715                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  9716  000258  0E02               	movlw	2
  9717  00025A  6F16               	movwf	22,b	;volatile
  9718                           
  9719                           ; BSR set to: 61
  9720                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  9721  00025C  8F14               	bsf	20,7,b	;volatile
  9722                           
  9723                           ; BSR set to: 61
  9724                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  9725  00025E  931A               	bcf	26,1,b	;volatile
  9726                           
  9727                           ; BSR set to: 61
  9728                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  9729  000260  0E3F               	movlw	-193
  9730  000262  013B               	movlb	59	; () banked
  9731  000264  17FD               	andwf	253,f,b	;volatile
  9732                           
  9733                           ; BSR set to: 59
  9734                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  9735  000266  9BFD               	bcf	253,5,b	;volatile
  9736                           
  9737                           ; BSR set to: 59
  9738                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  9739  000268  51FD               	movf	253,w,b	;volatile
  9740  00026A  0BF9               	andlw	-7
  9741  00026C  0902               	iorlw	2
  9742  00026E  6FFD               	movwf	253,b	;volatile
  9743                           
  9744                           ; BSR set to: 59
  9745                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  9746  000270  0EE7               	movlw	-25
  9747  000272  17FD               	andwf	253,f,b	;volatile
  9748                           
  9749                           ; BSR set to: 59
  9750                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  9751  000274  81FD               	bsf	253,0,b	;volatile
  9752                           
  9753                           ; BSR set to: 59
  9754                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  9755  000276  0E43               	movlw	low _ring_buf1
  9756  000278  6FF9               	movwf	249,b	;volatile
  9757  00027A  0E05               	movlw	high _ring_buf1
  9758  00027C  6FFA               	movwf	250,b	;volatile
  9759  00027E  0E00               	movlw	low (_ring_buf1 shr (0+16))
  9760  000280  6FFB               	movwf	251,b	;volatile
  9761                           
  9762                           ; BSR set to: 59
  9763                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  9764  000282  9BFC               	bcf	252,5,b	;volatile
  9765                           
  9766                           ; BSR set to: 59
  9767                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  9768  000284  013D               	movlb	61	; () banked
  9769  000286  831A               	bsf	26,1,b	;volatile
  9770                           
  9771                           ; BSR set to: 61
  9772                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  9773  000288  94BE               	bcf	190,2,c	;volatile
  9774                           
  9775                           ; BSR set to: 61
  9776                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9777  00028A  0012               	return		;funcret
  9778  00028C                     __end_of_init_display:
  9779                           	opt callstack 0
  9780                           
  9781 ;; *************** function _send_lcd_data *****************
  9782 ;; Defined at:
  9783 ;;		line 123 in file "eadog.c"
  9784 ;; Parameters:    Size  Location     Type
  9785 ;;  data            1  [STACK] const unsigned char 
  9786 ;; Auto vars:     Size  Location     Type
  9787 ;;		None
  9788 ;; Return value:  Size  Location     Type
  9789 ;;                  1  [STACK] void 
  9790 ;; Registers used:
  9791 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9792 ;; Tracked objects:
  9793 ;;		On entry : 3F/0
  9794 ;;		On exit  : 3F/0
  9795 ;;		Unchanged: 0/0
  9796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9801 ;;Total ram usage:        0 bytes
  9802 ;; Hardware stack levels used:    1
  9803 ;; Hardware stack levels required when called:   16
  9804 ;; This function calls:
  9805 ;;		_SPI1_Exchange8bit
  9806 ;;		_wdtdelay
  9807 ;; This function is called by:
  9808 ;;		_init_display
  9809 ;; This function uses a reentrant model
  9810 ;;
  9811                           
  9812                           	psect	text18
  9813  002680                     __ptext18:
  9814                           	opt callstack 0
  9815  002680                     _send_lcd_data:
  9816                           	opt callstack 13
  9817                           
  9818                           ; BSR set to: 61
  9819                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9820                           ;incstack = 0
  9821                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  9822  002680  94BC               	bcf	188,2,c	;volatile
  9823                           
  9824                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  9825                           ;stkvar	_data @ sp[(0)+-1]
  9826  002682  0EFF               	movlw	-1
  9827  002684  50E3               	movf	plusw1,w,c
  9828  002686  6EE6               	movwf	postinc1,c
  9829  002688  ECFF  F013         	call	_SPI1_Exchange8bit	;wreg free
  9830                           
  9831                           ; BSR set to: 57
  9832                           ;eadog.c: 127:  wdtdelay(8);
  9833  00268C  0E08               	movlw	8
  9834  00268E  6EE6               	movwf	postinc1,c
  9835  002690  0E00               	movlw	0
  9836  002692  6EE6               	movwf	postinc1,c
  9837  002694  0E00               	movlw	0
  9838  002696  6EE6               	movwf	postinc1,c
  9839  002698  0E00               	movlw	0
  9840  00269A  6EE6               	movwf	postinc1,c
  9841  00269C  EC19  F00D         	call	_wdtdelay	;wreg free
  9842                           
  9843                           ; BSR set to: 0
  9844                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  9845  0026A0  52E5               	movf	postdec1,f,c
  9846  0026A2  0012               	return		;funcret
  9847  0026A4                     __end_of_send_lcd_data:
  9848                           	opt callstack 0
  9849                           
  9850 ;; *************** function _send_lcd_cmd_long *****************
  9851 ;; Defined at:
  9852 ;;		line 139 in file "eadog.c"
  9853 ;; Parameters:    Size  Location     Type
  9854 ;;  cmd             1  [STACK] const unsigned char 
  9855 ;; Auto vars:     Size  Location     Type
  9856 ;;		None
  9857 ;; Return value:  Size  Location     Type
  9858 ;;                  1  [STACK] void 
  9859 ;; Registers used:
  9860 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9861 ;; Tracked objects:
  9862 ;;		On entry : 3F/0
  9863 ;;		On exit  : 3F/0
  9864 ;;		Unchanged: 0/0
  9865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9870 ;;Total ram usage:        0 bytes
  9871 ;; Hardware stack levels used:    1
  9872 ;; Hardware stack levels required when called:   16
  9873 ;; This function calls:
  9874 ;;		_SPI1_Exchange8bit
  9875 ;;		_wdtdelay
  9876 ;; This function is called by:
  9877 ;;		_init_display
  9878 ;; This function uses a reentrant model
  9879 ;;
  9880                           
  9881                           	psect	text19
  9882  001EF4                     __ptext19:
  9883                           	opt callstack 0
  9884  001EF4                     _send_lcd_cmd_long:
  9885                           	opt callstack 13
  9886                           
  9887                           ; BSR set to: 0
  9888                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9889                           ;incstack = 0
  9890                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  9891  001EF4  94BC               	bcf	188,2,c	;volatile
  9892                           
  9893                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  9894  001EF6  0EFE               	movlw	254
  9895  001EF8  6EE6               	movwf	postinc1,c
  9896  001EFA  ECFF  F013         	call	_SPI1_Exchange8bit	;wreg free
  9897                           
  9898                           ; BSR set to: 57
  9899                           ;eadog.c: 143:  wdtdelay(8);
  9900  001EFE  0E08               	movlw	8
  9901  001F00  6EE6               	movwf	postinc1,c
  9902  001F02  0E00               	movlw	0
  9903  001F04  6EE6               	movwf	postinc1,c
  9904  001F06  0E00               	movlw	0
  9905  001F08  6EE6               	movwf	postinc1,c
  9906  001F0A  0E00               	movlw	0
  9907  001F0C  6EE6               	movwf	postinc1,c
  9908  001F0E  EC19  F00D         	call	_wdtdelay	;wreg free
  9909                           
  9910                           ; BSR set to: 0
  9911                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  9912                           ;stkvar	_cmd @ sp[(0)+-1]
  9913  001F12  0EFF               	movlw	-1
  9914  001F14  50E3               	movf	plusw1,w,c
  9915  001F16  6EE6               	movwf	postinc1,c
  9916  001F18  ECFF  F013         	call	_SPI1_Exchange8bit	;wreg free
  9917                           
  9918                           ;eadog.c: 145:  wdtdelay(800);
  9919  001F1C  0E20               	movlw	32
  9920  001F1E  6EE6               	movwf	postinc1,c
  9921  001F20  0E03               	movlw	3
  9922  001F22  6EE6               	movwf	postinc1,c
  9923  001F24  0E00               	movlw	0
  9924  001F26  6EE6               	movwf	postinc1,c
  9925  001F28  0E00               	movlw	0
  9926  001F2A  6EE6               	movwf	postinc1,c
  9927  001F2C  EC19  F00D         	call	_wdtdelay	;wreg free
  9928                           
  9929                           ; BSR set to: 0
  9930                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  9931  001F30  52E5               	movf	postdec1,f,c
  9932  001F32  0012               	return		;funcret
  9933  001F34                     __end_of_send_lcd_cmd_long:
  9934                           	opt callstack 0
  9935                           
  9936 ;; *************** function _send_lcd_cmd *****************
  9937 ;; Defined at:
  9938 ;;		line 130 in file "eadog.c"
  9939 ;; Parameters:    Size  Location     Type
  9940 ;;  cmd             1  [STACK] const unsigned char 
  9941 ;; Auto vars:     Size  Location     Type
  9942 ;;		None
  9943 ;; Return value:  Size  Location     Type
  9944 ;;                  1  [STACK] void 
  9945 ;; Registers used:
  9946 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9947 ;; Tracked objects:
  9948 ;;		On entry : 3F/0
  9949 ;;		On exit  : 3F/0
  9950 ;;		Unchanged: 0/0
  9951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9956 ;;Total ram usage:        0 bytes
  9957 ;; Hardware stack levels used:    1
  9958 ;; Hardware stack levels required when called:   16
  9959 ;; This function calls:
  9960 ;;		_SPI1_Exchange8bit
  9961 ;;		_wdtdelay
  9962 ;; This function is called by:
  9963 ;;		_init_display
  9964 ;; This function uses a reentrant model
  9965 ;;
  9966                           
  9967                           	psect	text20
  9968  001F34                     __ptext20:
  9969                           	opt callstack 0
  9970  001F34                     _send_lcd_cmd:
  9971                           	opt callstack 13
  9972                           
  9973                           ; BSR set to: 0
  9974                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9975                           ;incstack = 0
  9976                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  9977  001F34  94BC               	bcf	188,2,c	;volatile
  9978                           
  9979                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  9980  001F36  0EFE               	movlw	254
  9981  001F38  6EE6               	movwf	postinc1,c
  9982  001F3A  ECFF  F013         	call	_SPI1_Exchange8bit	;wreg free
  9983                           
  9984                           ; BSR set to: 57
  9985                           ;eadog.c: 134:  wdtdelay(8);
  9986  001F3E  0E08               	movlw	8
  9987  001F40  6EE6               	movwf	postinc1,c
  9988  001F42  0E00               	movlw	0
  9989  001F44  6EE6               	movwf	postinc1,c
  9990  001F46  0E00               	movlw	0
  9991  001F48  6EE6               	movwf	postinc1,c
  9992  001F4A  0E00               	movlw	0
  9993  001F4C  6EE6               	movwf	postinc1,c
  9994  001F4E  EC19  F00D         	call	_wdtdelay	;wreg free
  9995                           
  9996                           ; BSR set to: 0
  9997                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  9998                           ;stkvar	_cmd @ sp[(0)+-1]
  9999  001F52  0EFF               	movlw	-1
 10000  001F54  50E3               	movf	plusw1,w,c
 10001  001F56  6EE6               	movwf	postinc1,c
 10002  001F58  ECFF  F013         	call	_SPI1_Exchange8bit	;wreg free
 10003                           
 10004                           ;eadog.c: 136:  wdtdelay(8);
 10005  001F5C  0E08               	movlw	8
 10006  001F5E  6EE6               	movwf	postinc1,c
 10007  001F60  0E00               	movlw	0
 10008  001F62  6EE6               	movwf	postinc1,c
 10009  001F64  0E00               	movlw	0
 10010  001F66  6EE6               	movwf	postinc1,c
 10011  001F68  0E00               	movlw	0
 10012  001F6A  6EE6               	movwf	postinc1,c
 10013  001F6C  EC19  F00D         	call	_wdtdelay	;wreg free
 10014                           
 10015                           ; BSR set to: 0
 10016                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
 10017  001F70  52E5               	movf	postdec1,f,c
 10018  001F72  0012               	return		;funcret
 10019  001F74                     __end_of_send_lcd_cmd:
 10020                           	opt callstack 0
 10021                           
 10022 ;; *************** function _wdtdelay *****************
 10023 ;; Defined at:
 10024 ;;		line 23 in file "eadog.c"
 10025 ;; Parameters:    Size  Location     Type
 10026 ;;  delay           4  [STACK] const unsigned long 
 10027 ;; Auto vars:     Size  Location     Type
 10028 ;;		None
 10029 ;; Return value:  Size  Location     Type
 10030 ;;                  1  [STACK] void 
 10031 ;; Registers used:
 10032 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10033 ;; Tracked objects:
 10034 ;;		On entry : 2/3D
 10035 ;;		On exit  : 3F/0
 10036 ;;		Unchanged: 0/0
 10037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10042 ;;Total ram usage:        0 bytes
 10043 ;; Hardware stack levels used:    1
 10044 ;; Hardware stack levels required when called:   15
 10045 ;; This function calls:
 10046 ;;		Nothing
 10047 ;; This function is called by:
 10048 ;;		_init_display
 10049 ;;		_send_lcd_data
 10050 ;;		_send_lcd_cmd
 10051 ;;		_send_lcd_cmd_long
 10052 ;; This function uses a reentrant model
 10053 ;;
 10054                           
 10055                           	psect	text21
 10056  001A32                     __ptext21:
 10057                           	opt callstack 0
 10058  001A32                     _wdtdelay:
 10059                           	opt callstack 14
 10060                           
 10061                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 10062                           
 10063                           ; BSR set to: 0
 10064                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10065                           ;incstack = 0
 10066  001A32  0100               	movlb	0	; () banked
 10067  001A34  6B90               	clrf	wdtdelay@dcount& (0+255),b
 10068  001A36  6B91               	clrf	(wdtdelay@dcount+1)& (0+255),b
 10069  001A38  6B92               	clrf	(wdtdelay@dcount+2)& (0+255),b
 10070  001A3A  6B93               	clrf	(wdtdelay@dcount+3)& (0+255),b
 10071  001A3C                     l1614:
 10072                           
 10073                           ; BSR set to: 0
 10074                           ;eadog.c: 28:   __nop();
 10075  001A3C  F000               	nop	
 10076  001A3E  0004               	clrwdt		;# 
 10077                           
 10078                           ;eadog.c: 30:  };
 10079  001A40  0E01               	movlw	1
 10080  001A42  0100               	movlb	0	; () banked
 10081  001A44  2790               	addwf	wdtdelay@dcount& (0+255),f,b
 10082  001A46  0E00               	movlw	0
 10083  001A48  2391               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 10084  001A4A  2392               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 10085  001A4C  2393               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 10086                           
 10087                           ; BSR set to: 0
 10088                           ;stkvar	_delay @ sp[(0)+-4]
 10089  001A4E  0EFC               	movlw	-4
 10090  001A50  006F FF8C  F02A    	movff	plusw1,btemp
 10091  001A56  5190               	movf	wdtdelay@dcount& (0+255),w,b
 10092  001A58  5C2A               	subwf	btemp^0,w,c
 10093  001A5A  0EFD               	movlw	-3
 10094  001A5C  006F FF8C  F02A    	movff	plusw1,btemp
 10095  001A62  5191               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 10096  001A64  582A               	subwfb	btemp^0,w,c
 10097  001A66  0EFE               	movlw	-2
 10098  001A68  006F FF8C  F02A    	movff	plusw1,btemp
 10099  001A6E  5192               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 10100  001A70  582A               	subwfb	btemp^0,w,c
 10101  001A72  0EFF               	movlw	-1
 10102  001A74  006F FF8C  F02A    	movff	plusw1,btemp
 10103  001A7A  5193               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 10104  001A7C  582A               	subwfb	btemp^0,w,c
 10105  001A7E  B0D8               	btfsc	status,0,c
 10106  001A80  D7DD               	goto	l1614
 10107                           
 10108                           ; BSR set to: 0
 10109                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 10110  001A82  52E5               	movf	postdec1,f,c
 10111  001A84  52E5               	movf	postdec1,f,c
 10112  001A86  52E5               	movf	postdec1,f,c
 10113  001A88  52E5               	movf	postdec1,f,c
 10114  001A8A  0012               	return		;funcret
 10115  001A8C                     __end_of_wdtdelay:
 10116                           	opt callstack 0
 10117                           
 10118 ;; *************** function _SPI1_Exchange8bit *****************
 10119 ;; Defined at:
 10120 ;;		line 79 in file "mcc_generated_files/spi1.c"
 10121 ;; Parameters:    Size  Location     Type
 10122 ;;  data            1  [STACK] unsigned char 
 10123 ;; Auto vars:     Size  Location     Type
 10124 ;;		None
 10125 ;; Return value:  Size  Location     Type
 10126 ;;                  1  [STACK] unsigned char 
 10127 ;; Registers used:
 10128 ;;		wreg, fsr1l, fsr1h, status,2, btemp
 10129 ;; Tracked objects:
 10130 ;;		On entry : 0/1
 10131 ;;		On exit  : 3F/39
 10132 ;;		Unchanged: 0/0
 10133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10138 ;;Total ram usage:        0 bytes
 10139 ;; Hardware stack levels used:    1
 10140 ;; Hardware stack levels required when called:   15
 10141 ;; This function calls:
 10142 ;;		Nothing
 10143 ;; This function is called by:
 10144 ;;		_send_lcd_data
 10145 ;;		_send_lcd_cmd
 10146 ;;		_send_lcd_cmd_long
 10147 ;;		_set_dac
 10148 ;; This function uses a reentrant model
 10149 ;;
 10150                           
 10151                           	psect	text22
 10152  0027FE                     __ptext22:
 10153                           	opt callstack 0
 10154  0027FE                     _SPI1_Exchange8bit:
 10155                           	opt callstack 14
 10156                           
 10157                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
 10158                           
 10159                           ; BSR set to: 0
 10160                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10161                           ;incstack = 0
 10162  0027FE  0E01               	movlw	1
 10163  002800  013D               	movlb	61	; () banked
 10164  002802  6F12               	movwf	18,b	;volatile
 10165                           
 10166                           ; BSR set to: 61
 10167                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
 10168                           ;stkvar	_data @ sp[(0)+-1]
 10169  002804  0EFF               	movlw	-1
 10170  002806  006F FF8F FD11     	movff	plusw1,15633	;volatile
 10171  00280C                     l809:
 10172                           
 10173                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
 10174  00280C  0139               	movlb	57	; () banked
 10175  00280E  A9A2               	btfss	162,4,b	;volatile
 10176  002810  D7FD               	goto	l809
 10177                           
 10178                           ; BSR set to: 57
 10179                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
 10180  002812  006F F440  F02A    	movff	15632,btemp	;volatile
 10181                           
 10182                           ; BSR set to: 57
 10183                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 10184  002818  52E5               	movf	postdec1,f,c
 10185  00281A  0012               	return		;funcret
 10186  00281C                     __end_of_SPI1_Exchange8bit:
 10187                           	opt callstack 0
 10188                           
 10189 ;; *************** function _ringBufS_init *****************
 10190 ;; Defined at:
 10191 ;;		line 22 in file "ringbufs.c"
 10192 ;; Parameters:    Size  Location     Type
 10193 ;;  _this           2  [STACK] PTR volatile struct ring
 10194 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10195 ;; Auto vars:     Size  Location     Type
 10196 ;;		None
 10197 ;; Return value:  Size  Location     Type
 10198 ;;                  1  [STACK] void 
 10199 ;; Registers used:
 10200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10201 ;; Tracked objects:
 10202 ;;		On entry : 0/0
 10203 ;;		On exit  : 0/0
 10204 ;;		Unchanged: 0/0
 10205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10210 ;;Total ram usage:        0 bytes
 10211 ;; Hardware stack levels used:    1
 10212 ;; Hardware stack levels required when called:   16
 10213 ;; This function calls:
 10214 ;;		_memset
 10215 ;; This function is called by:
 10216 ;;		_init_display
 10217 ;; This function uses a reentrant model
 10218 ;;
 10219                           
 10220                           	psect	text23
 10221  002426                     __ptext23:
 10222                           	opt callstack 0
 10223  002426                     _ringBufS_init:
 10224                           	opt callstack 13
 10225                           
 10226                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
 10227                           
 10228                           ; BSR set to: 57
 10229                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10230                           ;incstack = 0
 10231  002426  0E43               	movlw	67
 10232  002428  6EE6               	movwf	postinc1,c
 10233  00242A  0E00               	movlw	0
 10234  00242C  6EE6               	movwf	postinc1,c
 10235  00242E  0E00               	movlw	0
 10236  002430  6EE6               	movwf	postinc1,c
 10237  002432  0E00               	movlw	0
 10238  002434  6EE6               	movwf	postinc1,c
 10239                           
 10240                           ;stkvar	__this @ sp[(-4)+-2]
 10241  002436  0EFA               	movlw	-6
 10242  002438  006F FF8F FFE6     	movff	plusw1,postinc1
 10243  00243E  006F FF8F FFE6     	movff	plusw1,postinc1
 10244  002444  ECDB  F0D8         	call	_memset	;wreg free
 10245                           
 10246                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 10247  002448  52E5               	movf	postdec1,f,c
 10248  00244A  52E5               	movf	postdec1,f,c
 10249  00244C  0012               	return		;funcret
 10250  00244E                     __end_of_ringBufS_init:
 10251                           	opt callstack 0
 10252                           
 10253 ;; *************** function _init_bsoc *****************
 10254 ;; Defined at:
 10255 ;;		line 110 in file "bsoc.c"
 10256 ;; Parameters:    Size  Location     Type
 10257 ;;		None
 10258 ;; Auto vars:     Size  Location     Type
 10259 ;;		None
 10260 ;; Return value:  Size  Location     Type
 10261 ;;                  1  [STACK] void 
 10262 ;; Registers used:
 10263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10264 ;; Tracked objects:
 10265 ;;		On entry : 0/1
 10266 ;;		On exit  : 0/0
 10267 ;;		Unchanged: 0/0
 10268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10273 ;;Total ram usage:        0 bytes
 10274 ;; Hardware stack levels used:    1
 10275 ;; Hardware stack levels required when called:   18
 10276 ;; This function calls:
 10277 ;;		_TMR3_SetInterruptHandler
 10278 ;;		_Volts_to_SOC
 10279 ;;		___fldiv
 10280 ;;		___flmul
 10281 ;;		___fltol
 10282 ;;		___xxtofl
 10283 ;;		_conv_raw_result
 10284 ;; This function is called by:
 10285 ;;		_main
 10286 ;; This function uses a reentrant model
 10287 ;;
 10288                           
 10289                           	psect	text24
 10290  01C706                     __ptext24:
 10291                           	opt callstack 0
 10292  01C706                     _init_bsoc:
 10293                           	opt callstack 12
 10294                           
 10295                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
 10296                           
 10297                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10298                           ;incstack = 0
 10299  01C706  0E00               	movlw	0
 10300  01C708  6EE6               	movwf	postinc1,c
 10301  01C70A  0E00               	movlw	0
 10302  01C70C  6EE6               	movwf	postinc1,c
 10303  01C70E  0E7A               	movlw	122
 10304  01C710  6EE6               	movwf	postinc1,c
 10305  01C712  0E44               	movlw	68
 10306  01C714  6EE6               	movwf	postinc1,c
 10307  01C716  0E00               	movlw	0
 10308  01C718  6EE6               	movwf	postinc1,c
 10309  01C71A  0E04               	movlw	4
 10310  01C71C  6EE6               	movwf	postinc1,c
 10311  01C71E  EC98  F0C3         	call	_conv_raw_result	;wreg free
 10312  01C722  0060  F0AB  FFE6   	movff	btemp,postinc1
 10313  01C728  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10314  01C72E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10315  01C734  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10316  01C73A  EC55  F0F3         	call	___fltol	;wreg free
 10317  01C73E  0060  F0AB  FFE6   	movff	btemp,postinc1
 10318  01C744  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10319  01C74A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10320  01C750  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10321  01C756  0E00               	movlw	0
 10322  01C758  6EE6               	movwf	postinc1,c
 10323  01C75A  EC27  F0EB         	call	___xxtofl	;wreg free
 10324  01C75E  0060  F0AB  FFE6   	movff	btemp,postinc1
 10325  01C764  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10326  01C76A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10327  01C770  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10328  01C776  ECFF  F0B2         	call	___flmul	;wreg free
 10329  01C77A  0060  F0AB  FFE6   	movff	btemp,postinc1
 10330  01C780  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10331  01C786  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10332  01C78C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10333  01C792  EC55  F0F3         	call	___fltol	;wreg free
 10334  01C796  0060  F0AB  FFE6   	movff	btemp,postinc1
 10335  01C79C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10336  01C7A2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10337  01C7A8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10338  01C7AE  EC42  F003         	call	_Volts_to_SOC	;wreg free
 10339  01C7B2  0060  F0A8  F9B5   	movff	btemp,_C+182	;volatile
 10340  01C7B8  0060  F0AC  F9B6   	movff	btemp+1,_C+183	;volatile
 10341                           
 10342                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
 10343  01C7BE  EE22  F18B         	lfsr	2,_C+140	;volatile
 10344  01C7C2  006F FF7B FFE6     	movff	postinc2,postinc1
 10345  01C7C8  006F FF7B FFE6     	movff	postinc2,postinc1
 10346  01C7CE  006F FF7B FFE6     	movff	postinc2,postinc1
 10347  01C7D4  006F FF7B FFE6     	movff	postinc2,postinc1
 10348  01C7DA  0E00               	movlw	0
 10349  01C7DC  6EE6               	movwf	postinc1,c
 10350  01C7DE  0E00               	movlw	0
 10351  01C7E0  6EE6               	movwf	postinc1,c
 10352  01C7E2  0EC8               	movlw	200
 10353  01C7E4  6EE6               	movwf	postinc1,c
 10354  01C7E6  0E42               	movlw	66
 10355  01C7E8  6EE6               	movwf	postinc1,c
 10356  01C7EA  0E00               	movlw	0
 10357  01C7EC  6EE6               	movwf	postinc1,c
 10358  01C7EE  0E00               	movlw	0
 10359  01C7F0  6EE6               	movwf	postinc1,c
 10360  01C7F2  0E7A               	movlw	122
 10361  01C7F4  6EE6               	movwf	postinc1,c
 10362  01C7F6  0E44               	movlw	68
 10363  01C7F8  6EE6               	movwf	postinc1,c
 10364  01C7FA  0E00               	movlw	0
 10365  01C7FC  6EE6               	movwf	postinc1,c
 10366  01C7FE  0E04               	movlw	4
 10367  01C800  6EE6               	movwf	postinc1,c
 10368  01C802  EC98  F0C3         	call	_conv_raw_result	;wreg free
 10369  01C806  0060  F0AB  FFE6   	movff	btemp,postinc1
 10370  01C80C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10371  01C812  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10372  01C818  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10373  01C81E  EC55  F0F3         	call	___fltol	;wreg free
 10374  01C822  0060  F0AB  FFE6   	movff	btemp,postinc1
 10375  01C828  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10376  01C82E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10377  01C834  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10378  01C83A  0E00               	movlw	0
 10379  01C83C  6EE6               	movwf	postinc1,c
 10380  01C83E  EC27  F0EB         	call	___xxtofl	;wreg free
 10381  01C842  0060  F0AB  FFE6   	movff	btemp,postinc1
 10382  01C848  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10383  01C84E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10384  01C854  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10385  01C85A  ECFF  F0B2         	call	___flmul	;wreg free
 10386  01C85E  0060  F0AB  FFE6   	movff	btemp,postinc1
 10387  01C864  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10388  01C86A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10389  01C870  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10390  01C876  EC55  F0F3         	call	___fltol	;wreg free
 10391  01C87A  0060  F0AB  FFE6   	movff	btemp,postinc1
 10392  01C880  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10393  01C886  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10394  01C88C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10395  01C892  EC42  F003         	call	_Volts_to_SOC	;wreg free
 10396  01C896  0060  F0A8  F034   	movff	btemp,btemp+10
 10397  01C89C  0060  F0AC  F035   	movff	btemp+1,btemp+11
 10398  01C8A2  5034               	movf	(btemp+10)^0,w,c
 10399  01C8A4  6E2E               	movwf	(btemp+4)^0,c
 10400  01C8A6  5035               	movf	(btemp+11)^0,w,c
 10401  01C8A8  6E2F               	movwf	(btemp+5)^0,c
 10402  01C8AA  6A30               	clrf	(btemp+6)^0,c
 10403  01C8AC  6A31               	clrf	(btemp+7)^0,c
 10404  01C8AE  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 10405  01C8B4  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 10406  01C8BA  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 10407  01C8C0  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 10408  01C8C6  0E00               	movlw	0
 10409  01C8C8  6EE6               	movwf	postinc1,c
 10410  01C8CA  EC27  F0EB         	call	___xxtofl	;wreg free
 10411  01C8CE  0060  F0AB  FFE6   	movff	btemp,postinc1
 10412  01C8D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10413  01C8DA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10414  01C8E0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10415  01C8E6  EC50  F0BE         	call	___fldiv	;wreg free
 10416  01C8EA  0060  F0AB  FFE6   	movff	btemp,postinc1
 10417  01C8F0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10418  01C8F6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10419  01C8FC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10420  01C902  ECFF  F0B2         	call	___flmul	;wreg free
 10421  01C906  0060  F0A8  F98F   	movff	btemp,_C+144	;volatile
 10422  01C90C  0060  F0AC  F990   	movff	btemp+1,_C+145	;volatile
 10423  01C912  0060  F0B0  F991   	movff	btemp+2,_C+146	;volatile
 10424  01C918  0060  F0B4  F992   	movff	btemp+3,_C+147	;volatile
 10425                           
 10426                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
 10427  01C91E  EE22  F18F         	lfsr	2,_C+144	;volatile
 10428  01C922  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 10429  01C928  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 10430  01C92E  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 10431  01C934  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 10432                           
 10433                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
 10434  01C93A  0E7C               	movlw	low _calc_bsoc
 10435  01C93C  6EE6               	movwf	postinc1,c
 10436  01C93E  0E49               	movlw	high _calc_bsoc
 10437  01C940  6EE6               	movwf	postinc1,c
 10438  01C942  0E01               	movlw	low (_calc_bsoc shr (0+16))
 10439  01C944  6EE6               	movwf	postinc1,c
 10440  01C946  EC9F  F012         	call	_TMR3_SetInterruptHandler	;wreg free
 10441                           
 10442                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10443  01C94A  0012               	return		;funcret
 10444  01C94C                     __end_of_init_bsoc:
 10445                           	opt callstack 0
 10446                           
 10447 ;; *************** function _Volts_to_SOC *****************
 10448 ;; Defined at:
 10449 ;;		line 175 in file "bsoc.c"
 10450 ;; Parameters:    Size  Location     Type
 10451 ;;  cvoltage        4  [STACK] const unsigned long 
 10452 ;; Auto vars:     Size  Location     Type
 10453 ;;  soc             2  [STACK] unsigned short 
 10454 ;;  slot            1  [STACK] unsigned char 
 10455 ;; Return value:  Size  Location     Type
 10456 ;;                  2  [STACK] unsigned short 
 10457 ;; Registers used:
 10458 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10459 ;; Tracked objects:
 10460 ;;		On entry : 0/1
 10461 ;;		On exit  : 0/0
 10462 ;;		Unchanged: 0/0
 10463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10468 ;;Total ram usage:        0 bytes
 10469 ;; Hardware stack levels used:    1
 10470 ;; Hardware stack levels required when called:   15
 10471 ;; This function calls:
 10472 ;;		Nothing
 10473 ;; This function is called by:
 10474 ;;		_init_bsoc
 10475 ;; This function uses a reentrant model
 10476 ;;
 10477                           
 10478                           	psect	text25
 10479  000684                     __ptext25:
 10480                           	opt callstack 0
 10481  000684                     _Volts_to_SOC:
 10482                           	opt callstack 0
 10483                           
 10484                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10485  000684  52E6               	movf	postinc1,f,c
 10486  000686  52E6               	movf	postinc1,f,c
 10487  000688  52E6               	movf	postinc1,f,c
 10488                           
 10489                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
 10490                           ;stkvar	_soc @ sp[(-3)+0]
 10491                           
 10492                           ;incstack = 0
 10493  00068A  0EFD               	movlw	-3
 10494  00068C  6AE3               	clrf	plusw1,c
 10495  00068E  0EFE               	movlw	-2
 10496  000690  6AE3               	clrf	plusw1,c
 10497                           
 10498                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
 10499                           ;stkvar	_slot @ sp[(-3)+2]
 10500  000692  0EFF               	movlw	-1
 10501  000694  6AE3               	clrf	plusw1,c
 10502  000696                     l13858:
 10503                           
 10504                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
 10505                           ;stkvar	_cvoltage @ sp[(-3)+-4]
 10506                           ;stkvar	_slot @ sp[(-3)+2]
 10507  000696  0EFF               	movlw	-1
 10508  000698  50E3               	movf	plusw1,w,c
 10509  00069A  0D08               	mullw	8
 10510  00069C  0EAB               	movlw	low _BVSOC_TABLE
 10511  00069E  24F3               	addwf	243,w,c
 10512  0006A0  6EF6               	movwf	tblptrl,c
 10513  0006A2  0EF7               	movlw	high _BVSOC_TABLE
 10514  0006A4  20F4               	addwfc	244,w,c
 10515  0006A6  6EF7               	movwf	tblptrh,c
 10516  0006A8                     	if	1	;There are 3 active tblptr bytes
 10517  0006A8  6AF8               	clrf	tblptru,c
 10518  0006AA  0E00               	movlw	low (__mediumconst shr (0+16))
 10519  0006AC  22F8               	addwfc	tblptru,f,c
 10520  0006AE                     	endif
 10521  0006AE  0EF9               	movlw	-7
 10522  0006B0  50E3               	movf	plusw1,w,c
 10523  0006B2  0009               	tblrd		*+
 10524  0006B4  5CF5               	subwf	tablat,w,c
 10525  0006B6  0EFA               	movlw	-6
 10526  0006B8  50E3               	movf	plusw1,w,c
 10527  0006BA  0009               	tblrd		*+
 10528  0006BC  58F5               	subwfb	tablat,w,c
 10529  0006BE  0EFB               	movlw	-5
 10530  0006C0  50E3               	movf	plusw1,w,c
 10531  0006C2  0009               	tblrd		*+
 10532  0006C4  58F5               	subwfb	tablat,w,c
 10533  0006C6  0EFC               	movlw	-4
 10534  0006C8  50E3               	movf	plusw1,w,c
 10535  0006CA  0009               	tblrd		*+
 10536  0006CC  58F5               	subwfb	tablat,w,c
 10537  0006CE  B0D8               	btfsc	status,0,c
 10538  0006D0  D020               	goto	l13862
 10539                           
 10540                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
 10541                           ;stkvar	_slot @ sp[(-3)+2]
 10542  0006D2  0EFF               	movlw	-1
 10543  0006D4  50E3               	movf	plusw1,w,c
 10544  0006D6  0D08               	mullw	8
 10545  0006D8  0E04               	movlw	4
 10546  0006DA  26F3               	addwf	243,f,c
 10547  0006DC  0E00               	movlw	0
 10548  0006DE  22F4               	addwfc	244,f,c
 10549  0006E0  0EAB               	movlw	low _BVSOC_TABLE
 10550  0006E2  24F3               	addwf	243,w,c
 10551  0006E4  6EF6               	movwf	tblptrl,c
 10552  0006E6  0EF7               	movlw	high _BVSOC_TABLE
 10553  0006E8  20F4               	addwfc	244,w,c
 10554  0006EA  6EF7               	movwf	tblptrh,c
 10555  0006EC                     	if	1	;There are 3 active tblptr bytes
 10556  0006EC  6AF8               	clrf	tblptru,c
 10557  0006EE  0E00               	movlw	low (__mediumconst shr (0+16))
 10558  0006F0  22F8               	addwfc	tblptru,f,c
 10559  0006F2                     	endif
 10560  0006F2  0009               	tblrd		*+
 10561  0006F4  006F FFD4  F034    	movff	tablat,btemp+10
 10562  0006FA  0009               	tblrd		*+
 10563  0006FC  006F FFD4  F035    	movff	tablat,btemp+11
 10564                           
 10565                           ;stkvar	_soc @ sp[(-3)+0]
 10566  000702  0EFD               	movlw	-3
 10567  000704  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 10568  00070A  0EFE               	movlw	-2
 10569  00070C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 10570  000712                     l13862:
 10571                           
 10572                           ;bsoc.c: 187:  }
 10573                           ;stkvar	_slot @ sp[(-3)+2]
 10574  000712  0EFF               	movlw	-1
 10575  000714  2AE3               	incf	plusw1,f,c
 10576                           
 10577                           ;stkvar	_slot @ sp[(-3)+2]
 10578  000716  0EFF               	movlw	-1
 10579  000718  006F FF8C  F02A    	movff	plusw1,btemp
 10580  00071E  0E19               	movlw	25
 10581  000720  642A               	cpfsgt	btemp^0,c
 10582  000722  D7B9               	goto	l13858
 10583                           
 10584                           ;bsoc.c: 188:  return soc;
 10585                           ;stkvar	_soc @ sp[(-3)+0]
 10586  000724  0EFD               	movlw	-3
 10587  000726  006F FF8C  F02A    	movff	plusw1,btemp
 10588  00072C  0EFE               	movlw	-2
 10589  00072E  006F FF8C  F02B    	movff	plusw1,btemp+1
 10590                           
 10591                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
 10592  000734  0EF9               	movlw	249
 10593  000736  26E1               	addwf	fsr1l,f,c
 10594  000738  0EFF               	movlw	255
 10595  00073A  22E2               	addwfc	fsr1h,f,c
 10596  00073C  0012               	return		;funcret
 10597  00073E                     __end_of_Volts_to_SOC:
 10598                           	opt callstack 0
 10599                           
 10600 ;; *************** function _hid_display *****************
 10601 ;; Defined at:
 10602 ;;		line 22 in file "hid.c"
 10603 ;; Parameters:    Size  Location     Type
 10604 ;;  h               2  [STACK] PTR struct H_data
 10605 ;;		 -> H(9), 
 10606 ;; Auto vars:     Size  Location     Type
 10607 ;;		None
 10608 ;; Return value:  Size  Location     Type
 10609 ;;                  2  [STACK] PTR struct H_data
 10610 ;; Registers used:
 10611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
 10612 ;; Tracked objects:
 10613 ;;		On entry : 0/39
 10614 ;;		On exit  : 0/0
 10615 ;;		Unchanged: 0/0
 10616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10621 ;;Total ram usage:        0 bytes
 10622 ;; Hardware stack levels used:    1
 10623 ;; Hardware stack levels required when called:   17
 10624 ;; This function calls:
 10625 ;;		_hid_input
 10626 ;; This function is called by:
 10627 ;;		_main
 10628 ;; This function uses a reentrant model
 10629 ;;
 10630                           
 10631                           	psect	text26
 10632  01D220                     __ptext26:
 10633                           	opt callstack 0
 10634  01D220                     _hid_display:
 10635                           	opt callstack 13
 10636                           
 10637                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
 10638                           ;stkvar	_h @ sp[(0)+-2]
 10639                           
 10640                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10641                           ;incstack = 0
 10642  01D220  0EFE               	movlw	-2
 10643  01D222  006F FF8F FFE6     	movff	plusw1,postinc1
 10644  01D228  006F FF8F FFE6     	movff	plusw1,postinc1
 10645  01D22E  EC14  F0FA         	call	_hid_input	;wreg free
 10646                           
 10647                           ;hid.c: 26:  switch (h->h_state) {
 10648  01D232  D0E6               	goto	l17292
 10649  01D234                     l17266:
 10650                           
 10651                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
 10652                           ;stkvar	_h @ sp[(0)+-2]
 10653  01D234  0EFE               	movlw	-2
 10654  01D236  006F FF8C  F034    	movff	plusw1,btemp+10
 10655  01D23C  0EFF               	movlw	-1
 10656  01D23E  006F FF8C  F035    	movff	plusw1,btemp+11
 10657  01D244  0E01               	movlw	1
 10658  01D246  2434               	addwf	(btemp+10)^0,w,c
 10659  01D248  6ED9               	movwf	fsr2l,c
 10660  01D24A  0E00               	movlw	0
 10661  01D24C  2035               	addwfc	(btemp+11)^0,w,c
 10662  01D24E  6EDA               	movwf	fsr2h,c
 10663  01D250  0E01               	movlw	1
 10664  01D252  6EDF               	movwf	indf2,c
 10665                           
 10666                           ;hid.c: 29:   h->hid_display = HID_MAIN;
 10667                           ;stkvar	_h @ sp[(0)+-2]
 10668  01D254  0EFE               	movlw	-2
 10669  01D256  006F FF8F FFD9     	movff	plusw1,fsr2l
 10670  01D25C  0EFF               	movlw	-1
 10671  01D25E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10672  01D264  0E00               	movlw	0
 10673  01D266  6EDF               	movwf	indf2,c
 10674                           
 10675                           ;hid.c: 30:   h->wait_enter = 1;
 10676                           ;stkvar	_h @ sp[(0)+-2]
 10677  01D268  0EFE               	movlw	-2
 10678  01D26A  006F FF8C  F034    	movff	plusw1,btemp+10
 10679  01D270  0EFF               	movlw	-1
 10680  01D272  006F FF8C  F035    	movff	plusw1,btemp+11
 10681  01D278  0E04               	movlw	4
 10682  01D27A  2434               	addwf	(btemp+10)^0,w,c
 10683  01D27C  6ED9               	movwf	fsr2l,c
 10684  01D27E  0E00               	movlw	0
 10685  01D280  2035               	addwfc	(btemp+11)^0,w,c
 10686  01D282  6EDA               	movwf	fsr2h,c
 10687  01D284  0E01               	movlw	1
 10688  01D286  6EDF               	movwf	indf2,c
 10689                           
 10690                           ;hid.c: 31:   h->wait_select = 1;
 10691                           ;stkvar	_h @ sp[(0)+-2]
 10692  01D288  0EFE               	movlw	-2
 10693  01D28A  006F FF8C  F034    	movff	plusw1,btemp+10
 10694  01D290  0EFF               	movlw	-1
 10695  01D292  006F FF8C  F035    	movff	plusw1,btemp+11
 10696  01D298  0E02               	movlw	2
 10697  01D29A  2434               	addwf	(btemp+10)^0,w,c
 10698  01D29C  6ED9               	movwf	fsr2l,c
 10699  01D29E  0E00               	movlw	0
 10700  01D2A0  2035               	addwfc	(btemp+11)^0,w,c
 10701  01D2A2  6EDA               	movwf	fsr2h,c
 10702  01D2A4  0E01               	movlw	1
 10703  01D2A6  6EDF               	movwf	indf2,c
 10704                           
 10705                           ;hid.c: 32:   h->wait_calib = 1;
 10706                           ;stkvar	_h @ sp[(0)+-2]
 10707  01D2A8  0EFE               	movlw	-2
 10708  01D2AA  006F FF8C  F034    	movff	plusw1,btemp+10
 10709  01D2B0  0EFF               	movlw	-1
 10710  01D2B2  006F FF8C  F035    	movff	plusw1,btemp+11
 10711  01D2B8  0E06               	movlw	6
 10712  01D2BA  2434               	addwf	(btemp+10)^0,w,c
 10713  01D2BC  6ED9               	movwf	fsr2l,c
 10714  01D2BE  0E00               	movlw	0
 10715  01D2C0  2035               	addwfc	(btemp+11)^0,w,c
 10716  01D2C2  6EDA               	movwf	fsr2h,c
 10717  01D2C4  0E01               	movlw	1
 10718  01D2C6  6EDF               	movwf	indf2,c
 10719                           
 10720                           ;hid.c: 33:   h->select_p = SW_OFF;
 10721                           ;stkvar	_h @ sp[(0)+-2]
 10722  01D2C8  0EFE               	movlw	-2
 10723  01D2CA  006F FF8C  F034    	movff	plusw1,btemp+10
 10724  01D2D0  0EFF               	movlw	-1
 10725  01D2D2  006F FF8C  F035    	movff	plusw1,btemp+11
 10726  01D2D8  0E03               	movlw	3
 10727  01D2DA  2434               	addwf	(btemp+10)^0,w,c
 10728  01D2DC  6ED9               	movwf	fsr2l,c
 10729  01D2DE  0E00               	movlw	0
 10730  01D2E0  2035               	addwfc	(btemp+11)^0,w,c
 10731  01D2E2  6EDA               	movwf	fsr2h,c
 10732  01D2E4  0E00               	movlw	0
 10733  01D2E6  6EDF               	movwf	indf2,c
 10734                           
 10735                           ;hid.c: 34:   h->enter_p = SW_OFF;
 10736                           ;stkvar	_h @ sp[(0)+-2]
 10737  01D2E8  0EFE               	movlw	-2
 10738  01D2EA  006F FF8C  F034    	movff	plusw1,btemp+10
 10739  01D2F0  0EFF               	movlw	-1
 10740  01D2F2  006F FF8C  F035    	movff	plusw1,btemp+11
 10741  01D2F8  0E05               	movlw	5
 10742  01D2FA  2434               	addwf	(btemp+10)^0,w,c
 10743  01D2FC  6ED9               	movwf	fsr2l,c
 10744  01D2FE  0E00               	movlw	0
 10745  01D300  2035               	addwfc	(btemp+11)^0,w,c
 10746  01D302  6EDA               	movwf	fsr2h,c
 10747  01D304  0E00               	movlw	0
 10748  01D306  6EDF               	movwf	indf2,c
 10749                           
 10750                           ;hid.c: 35:   h->calib_p = SW_OFF;
 10751                           ;stkvar	_h @ sp[(0)+-2]
 10752  01D308  0EFE               	movlw	-2
 10753  01D30A  006F FF8C  F034    	movff	plusw1,btemp+10
 10754  01D310  0EFF               	movlw	-1
 10755  01D312  006F FF8C  F035    	movff	plusw1,btemp+11
 10756  01D318  0E07               	movlw	7
 10757  01D31A  2434               	addwf	(btemp+10)^0,w,c
 10758  01D31C  6ED9               	movwf	fsr2l,c
 10759  01D31E  0E00               	movlw	0
 10760  01D320  2035               	addwfc	(btemp+11)^0,w,c
 10761  01D322  6EDA               	movwf	fsr2h,c
 10762  01D324  0E00               	movlw	0
 10763  01D326  D06A               	goto	L6
 10764  01D328                     l17282:
 10765                           
 10766                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
 10767                           ;stkvar	_h @ sp[(0)+-2]
 10768  01D328  0EFE               	movlw	-2
 10769  01D32A  006F FF8C  F034    	movff	plusw1,btemp+10
 10770  01D330  0EFF               	movlw	-1
 10771  01D332  006F FF8C  F035    	movff	plusw1,btemp+11
 10772  01D338  0E02               	movlw	2
 10773  01D33A  2434               	addwf	(btemp+10)^0,w,c
 10774  01D33C  6ED9               	movwf	fsr2l,c
 10775  01D33E  0E00               	movlw	0
 10776  01D340  2035               	addwfc	(btemp+11)^0,w,c
 10777  01D342  6EDA               	movwf	fsr2h,c
 10778  01D344  50DF               	movf	indf2,w,c
 10779  01D346  A4D8               	btfss	status,2,c
 10780  01D348  D076               	goto	l2292
 10781                           
 10782                           ;stkvar	_h @ sp[(0)+-2]
 10783  01D34A  0EFE               	movlw	-2
 10784  01D34C  006F FF8C  F034    	movff	plusw1,btemp+10
 10785  01D352  0EFF               	movlw	-1
 10786  01D354  006F FF8C  F035    	movff	plusw1,btemp+11
 10787  01D35A  0E03               	movlw	3
 10788  01D35C  2434               	addwf	(btemp+10)^0,w,c
 10789  01D35E  6ED9               	movwf	fsr2l,c
 10790  01D360  0E00               	movlw	0
 10791  01D362  2035               	addwfc	(btemp+11)^0,w,c
 10792  01D364  6EDA               	movwf	fsr2h,c
 10793  01D366  50DF               	movf	indf2,w,c
 10794  01D368  A4D8               	btfss	status,2,c
 10795  01D36A  D065               	goto	l2292
 10796                           
 10797                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
 10798                           ;stkvar	_h @ sp[(0)+-2]
 10799  01D36C  0EFE               	movlw	-2
 10800  01D36E  006F FF8C  F034    	movff	plusw1,btemp+10
 10801  01D374  0EFF               	movlw	-1
 10802  01D376  006F FF8C  F035    	movff	plusw1,btemp+11
 10803  01D37C  0E08               	movlw	8
 10804  01D37E  2434               	addwf	(btemp+10)^0,w,c
 10805  01D380  6ED9               	movwf	fsr2l,c
 10806  01D382  0E00               	movlw	0
 10807  01D384  2035               	addwfc	(btemp+11)^0,w,c
 10808  01D386  6EDA               	movwf	fsr2h,c
 10809                           
 10810                           ;stkvar	_h @ sp[(0)+-2]
 10811  01D388  0EFE               	movlw	-2
 10812  01D38A  006F FF8C  F034    	movff	plusw1,btemp+10
 10813  01D390  0EFF               	movlw	-1
 10814  01D392  006F FF8C  F035    	movff	plusw1,btemp+11
 10815  01D398  0E08               	movlw	8
 10816  01D39A  2434               	addwf	(btemp+10)^0,w,c
 10817  01D39C  6EE9               	movwf	fsr0l,c
 10818  01D39E  0E00               	movlw	0
 10819  01D3A0  2035               	addwfc	(btemp+11)^0,w,c
 10820  01D3A2  6EEA               	movwf	fsr0h,c
 10821  01D3A4  2AEF               	incf	indf0,f,c
 10822  01D3A6  50EF               	movf	indf0,w,c
 10823  01D3A8  0B03               	andlw	3
 10824  01D3AA  6EDF               	movwf	indf2,c
 10825                           
 10826                           ;hid.c: 41:    h->hid_display = h->sequence;
 10827                           ;stkvar	_h @ sp[(0)+-2]
 10828  01D3AC  0EFE               	movlw	-2
 10829  01D3AE  006F FF8C  F034    	movff	plusw1,btemp+10
 10830  01D3B4  0EFF               	movlw	-1
 10831  01D3B6  006F FF8C  F035    	movff	plusw1,btemp+11
 10832  01D3BC  0E08               	movlw	8
 10833  01D3BE  2434               	addwf	(btemp+10)^0,w,c
 10834  01D3C0  6ED9               	movwf	fsr2l,c
 10835  01D3C2  0E00               	movlw	0
 10836  01D3C4  2035               	addwfc	(btemp+11)^0,w,c
 10837  01D3C6  6EDA               	movwf	fsr2h,c
 10838                           
 10839                           ;stkvar	_h @ sp[(0)+-2]
 10840  01D3C8  0EFE               	movlw	-2
 10841  01D3CA  006F FF8F FFE9     	movff	plusw1,fsr0l
 10842  01D3D0  0EFF               	movlw	-1
 10843  01D3D2  006F FF8F FFEA     	movff	plusw1,fsr0h
 10844  01D3D8  006F FF7F FFEF     	movff	indf2,indf0
 10845                           
 10846                           ;hid.c: 42:    h->wait_select = 1;
 10847                           ;stkvar	_h @ sp[(0)+-2]
 10848  01D3DE  0EFE               	movlw	-2
 10849  01D3E0  006F FF8C  F034    	movff	plusw1,btemp+10
 10850  01D3E6  0EFF               	movlw	-1
 10851  01D3E8  006F FF8C  F035    	movff	plusw1,btemp+11
 10852  01D3EE  0E02               	movlw	2
 10853  01D3F0  2434               	addwf	(btemp+10)^0,w,c
 10854  01D3F2  6ED9               	movwf	fsr2l,c
 10855  01D3F4  0E00               	movlw	0
 10856  01D3F6  2035               	addwfc	(btemp+11)^0,w,c
 10857  01D3F8  6EDA               	movwf	fsr2h,c
 10858  01D3FA  0E01               	movlw	1
 10859  01D3FC                     L6:
 10860  01D3FC  6EDF               	movwf	indf2,c
 10861  01D3FE  D01B               	goto	l2292
 10862  01D400                     l17292:
 10863                           
 10864                           ;stkvar	_h @ sp[(0)+-2]
 10865  01D400  0EFE               	movlw	-2
 10866  01D402  006F FF8C  F034    	movff	plusw1,btemp+10
 10867  01D408  0EFF               	movlw	-1
 10868  01D40A  006F FF8C  F035    	movff	plusw1,btemp+11
 10869  01D410  0E01               	movlw	1
 10870  01D412  2434               	addwf	(btemp+10)^0,w,c
 10871  01D414  6ED9               	movwf	fsr2l,c
 10872  01D416  0E00               	movlw	0
 10873  01D418  2035               	addwfc	(btemp+11)^0,w,c
 10874  01D41A  6EDA               	movwf	fsr2h,c
 10875  01D41C  50DF               	movf	indf2,w,c
 10876  01D41E  6E34               	movwf	(btemp+10)^0,c
 10877  01D420  6A35               	clrf	(btemp+11)^0,c
 10878                           
 10879                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10880                           ; Switch size 1, requested type "simple"
 10881                           ; Number of cases is 1, Range of values is 0 to 0
 10882                           ; switch strategies available:
 10883                           ; Name         Instructions Cycles
 10884                           ; simple_byte            4     3 (average)
 10885                           ;	Chosen strategy is simple_byte
 10886  01D422  5035               	movf	(btemp+11)^0,w,c
 10887  01D424  0A00               	xorlw	0	; case 0
 10888  01D426  A4D8               	btfss	status,2,c
 10889  01D428  D77F               	goto	l17282
 10890                           
 10891                           ; Switch size 1, requested type "simple"
 10892                           ; Number of cases is 2, Range of values is 0 to 1
 10893                           ; switch strategies available:
 10894                           ; Name         Instructions Cycles
 10895                           ; simple_byte            7     4 (average)
 10896                           ;	Chosen strategy is simple_byte
 10897  01D42A  5034               	movf	(btemp+10)^0,w,c
 10898  01D42C  0A00               	xorlw	0	; case 0
 10899  01D42E  B4D8               	btfsc	status,2,c
 10900  01D430  D701               	goto	l17266
 10901  01D432  0A01               	xorlw	1	; case 1
 10902  01D434  D779               	goto	l17282
 10903  01D436                     l2292:
 10904                           
 10905                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
 10906  01D436  52E5               	movf	postdec1,f,c
 10907  01D438  52E5               	movf	postdec1,f,c
 10908  01D43A  0012               	return		;funcret
 10909  01D43C                     __end_of_hid_display:
 10910                           	opt callstack 0
 10911                           
 10912 ;; *************** function _hid_input *****************
 10913 ;; Defined at:
 10914 ;;		line 3 in file "hid.c"
 10915 ;; Parameters:    Size  Location     Type
 10916 ;;  h               2  [STACK] PTR struct H_data
 10917 ;;		 -> H(9), 
 10918 ;; Auto vars:     Size  Location     Type
 10919 ;;		None
 10920 ;; Return value:  Size  Location     Type
 10921 ;;                  2  [STACK] PTR struct H_data
 10922 ;; Registers used:
 10923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10924 ;; Tracked objects:
 10925 ;;		On entry : 0/39
 10926 ;;		On exit  : 0/0
 10927 ;;		Unchanged: 0/0
 10928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10933 ;;Total ram usage:        0 bytes
 10934 ;; Hardware stack levels used:    1
 10935 ;; Hardware stack levels required when called:   16
 10936 ;; This function calls:
 10937 ;;		_get_switch
 10938 ;; This function is called by:
 10939 ;;		_hid_display
 10940 ;; This function uses a reentrant model
 10941 ;;
 10942                           
 10943                           	psect	text27
 10944  01F428                     __ptext27:
 10945                           	opt callstack 0
 10946  01F428                     _hid_input:
 10947                           	opt callstack 13
 10948                           
 10949                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
 10950                           
 10951                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10952                           ;incstack = 0
 10953  01F428  0E02               	movlw	2
 10954  01F42A  6EE6               	movwf	postinc1,c
 10955  01F42C  ECBC  F011         	call	_get_switch	;wreg free
 10956  01F430  502A               	movf	btemp^0,w,c
 10957  01F432  B4D8               	btfsc	status,2,c
 10958  01F434  D02C               	goto	l17028
 10959                           
 10960                           ;hid.c: 6:   h->wait_select = 0;
 10961                           ;stkvar	_h @ sp[(0)+-2]
 10962  01F436  0EFE               	movlw	-2
 10963  01F438  006F FF8C  F034    	movff	plusw1,btemp+10
 10964  01F43E  0EFF               	movlw	-1
 10965  01F440  006F FF8C  F035    	movff	plusw1,btemp+11
 10966  01F446  0E02               	movlw	2
 10967  01F448  2434               	addwf	(btemp+10)^0,w,c
 10968  01F44A  6ED9               	movwf	fsr2l,c
 10969  01F44C  0E00               	movlw	0
 10970  01F44E  2035               	addwfc	(btemp+11)^0,w,c
 10971  01F450  6EDA               	movwf	fsr2h,c
 10972  01F452  0E00               	movlw	0
 10973  01F454  6EDF               	movwf	indf2,c
 10974                           
 10975                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
 10976  01F456  0E02               	movlw	2
 10977  01F458  6EE6               	movwf	postinc1,c
 10978  01F45A  ECBC  F011         	call	_get_switch	;wreg free
 10979  01F45E  502A               	movf	btemp^0,w,c
 10980  01F460  B4D8               	btfsc	status,2,c
 10981  01F462  D003               	goto	u16550
 10982  01F464  6A35               	clrf	(btemp+11)^0,c
 10983  01F466  2A35               	incf	(btemp+11)^0,f,c
 10984  01F468  D001               	goto	u16568
 10985  01F46A                     u16550:
 10986  01F46A  6A35               	clrf	(btemp+11)^0,c
 10987  01F46C                     u16568:
 10988                           
 10989                           ;stkvar	_h @ sp[(0)+-2]
 10990  01F46C  0EFE               	movlw	-2
 10991  01F46E  006F FF8C  F032    	movff	plusw1,btemp+8
 10992  01F474  0EFF               	movlw	-1
 10993  01F476  006F FF8C  F033    	movff	plusw1,btemp+9
 10994  01F47C  0E03               	movlw	3
 10995  01F47E  2432               	addwf	(btemp+8)^0,w,c
 10996  01F480  6ED9               	movwf	fsr2l,c
 10997  01F482  0E00               	movlw	0
 10998  01F484  2033               	addwfc	(btemp+9)^0,w,c
 10999  01F486  6EDA               	movwf	fsr2h,c
 11000  01F488  0060  F0D7  FFDF   	movff	btemp+11,indf2
 11001  01F48E                     l17028:
 11002                           
 11003                           ;hid.c: 10:  if (get_switch(SENTER)) {
 11004  01F48E  0E03               	movlw	3
 11005  01F490  6EE6               	movwf	postinc1,c
 11006  01F492  ECBC  F011         	call	_get_switch	;wreg free
 11007  01F496  502A               	movf	btemp^0,w,c
 11008  01F498  B4D8               	btfsc	status,2,c
 11009  01F49A  D02C               	goto	l17034
 11010                           
 11011                           ;hid.c: 11:   h->wait_enter = 0;
 11012                           ;stkvar	_h @ sp[(0)+-2]
 11013  01F49C  0EFE               	movlw	-2
 11014  01F49E  006F FF8C  F034    	movff	plusw1,btemp+10
 11015  01F4A4  0EFF               	movlw	-1
 11016  01F4A6  006F FF8C  F035    	movff	plusw1,btemp+11
 11017  01F4AC  0E04               	movlw	4
 11018  01F4AE  2434               	addwf	(btemp+10)^0,w,c
 11019  01F4B0  6ED9               	movwf	fsr2l,c
 11020  01F4B2  0E00               	movlw	0
 11021  01F4B4  2035               	addwfc	(btemp+11)^0,w,c
 11022  01F4B6  6EDA               	movwf	fsr2h,c
 11023  01F4B8  0E00               	movlw	0
 11024  01F4BA  6EDF               	movwf	indf2,c
 11025                           
 11026                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
 11027  01F4BC  0E03               	movlw	3
 11028  01F4BE  6EE6               	movwf	postinc1,c
 11029  01F4C0  ECBC  F011         	call	_get_switch	;wreg free
 11030  01F4C4  502A               	movf	btemp^0,w,c
 11031  01F4C6  B4D8               	btfsc	status,2,c
 11032  01F4C8  D003               	goto	u16580
 11033  01F4CA  6A35               	clrf	(btemp+11)^0,c
 11034  01F4CC  2A35               	incf	(btemp+11)^0,f,c
 11035  01F4CE  D001               	goto	u16598
 11036  01F4D0                     u16580:
 11037  01F4D0  6A35               	clrf	(btemp+11)^0,c
 11038  01F4D2                     u16598:
 11039                           
 11040                           ;stkvar	_h @ sp[(0)+-2]
 11041  01F4D2  0EFE               	movlw	-2
 11042  01F4D4  006F FF8C  F032    	movff	plusw1,btemp+8
 11043  01F4DA  0EFF               	movlw	-1
 11044  01F4DC  006F FF8C  F033    	movff	plusw1,btemp+9
 11045  01F4E2  0E05               	movlw	5
 11046  01F4E4  2432               	addwf	(btemp+8)^0,w,c
 11047  01F4E6  6ED9               	movwf	fsr2l,c
 11048  01F4E8  0E00               	movlw	0
 11049  01F4EA  2033               	addwfc	(btemp+9)^0,w,c
 11050  01F4EC  6EDA               	movwf	fsr2h,c
 11051  01F4EE  0060  F0D7  FFDF   	movff	btemp+11,indf2
 11052  01F4F4                     l17034:
 11053                           
 11054                           ;hid.c: 15:  if (get_switch(SCALIB)) {
 11055  01F4F4  0E04               	movlw	4
 11056  01F4F6  6EE6               	movwf	postinc1,c
 11057  01F4F8  ECBC  F011         	call	_get_switch	;wreg free
 11058  01F4FC  502A               	movf	btemp^0,w,c
 11059  01F4FE  B4D8               	btfsc	status,2,c
 11060  01F500  D02C               	goto	l2283
 11061                           
 11062                           ;hid.c: 16:   h->wait_calib = 0;
 11063                           ;stkvar	_h @ sp[(0)+-2]
 11064  01F502  0EFE               	movlw	-2
 11065  01F504  006F FF8C  F034    	movff	plusw1,btemp+10
 11066  01F50A  0EFF               	movlw	-1
 11067  01F50C  006F FF8C  F035    	movff	plusw1,btemp+11
 11068  01F512  0E06               	movlw	6
 11069  01F514  2434               	addwf	(btemp+10)^0,w,c
 11070  01F516  6ED9               	movwf	fsr2l,c
 11071  01F518  0E00               	movlw	0
 11072  01F51A  2035               	addwfc	(btemp+11)^0,w,c
 11073  01F51C  6EDA               	movwf	fsr2h,c
 11074  01F51E  0E00               	movlw	0
 11075  01F520  6EDF               	movwf	indf2,c
 11076                           
 11077                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
 11078  01F522  0E04               	movlw	4
 11079  01F524  6EE6               	movwf	postinc1,c
 11080  01F526  ECBC  F011         	call	_get_switch	;wreg free
 11081  01F52A  502A               	movf	btemp^0,w,c
 11082  01F52C  B4D8               	btfsc	status,2,c
 11083  01F52E  D003               	goto	u16610
 11084  01F530  6A35               	clrf	(btemp+11)^0,c
 11085  01F532  2A35               	incf	(btemp+11)^0,f,c
 11086  01F534  D001               	goto	u16628
 11087  01F536                     u16610:
 11088  01F536  6A35               	clrf	(btemp+11)^0,c
 11089  01F538                     u16628:
 11090                           
 11091                           ;stkvar	_h @ sp[(0)+-2]
 11092  01F538  0EFE               	movlw	-2
 11093  01F53A  006F FF8C  F032    	movff	plusw1,btemp+8
 11094  01F540  0EFF               	movlw	-1
 11095  01F542  006F FF8C  F033    	movff	plusw1,btemp+9
 11096  01F548  0E07               	movlw	7
 11097  01F54A  2432               	addwf	(btemp+8)^0,w,c
 11098  01F54C  6ED9               	movwf	fsr2l,c
 11099  01F54E  0E00               	movlw	0
 11100  01F550  2033               	addwfc	(btemp+9)^0,w,c
 11101  01F552  6EDA               	movwf	fsr2h,c
 11102  01F554  0060  F0D7  FFDF   	movff	btemp+11,indf2
 11103  01F55A                     l2283:
 11104                           
 11105                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 11106  01F55A  52E5               	movf	postdec1,f,c
 11107  01F55C  52E5               	movf	postdec1,f,c
 11108  01F55E  0012               	return		;funcret
 11109  01F560                     __end_of_hid_input:
 11110                           	opt callstack 0
 11111                           
 11112 ;; *************** function _esr_check *****************
 11113 ;; Defined at:
 11114 ;;		line 197 in file "bsoc.c"
 11115 ;; Parameters:    Size  Location     Type
 11116 ;;  fsm             1  [STACK] const unsigned char 
 11117 ;; Auto vars:     Size  Location     Type
 11118 ;;		None
 11119 ;; Return value:  Size  Location     Type
 11120 ;;                  4  [STACK] float 
 11121 ;; Registers used:
 11122 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 11123 ;; Tracked objects:
 11124 ;;		On entry : 0/0
 11125 ;;		On exit  : 0/0
 11126 ;;		Unchanged: 0/0
 11127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11132 ;;Total ram usage:        0 bytes
 11133 ;; Hardware stack levels used:    1
 11134 ;; Hardware stack levels required when called:   18
 11135 ;; This function calls:
 11136 ;;		_StartTimer
 11137 ;;		_TimerDone
 11138 ;;		___fldiv
 11139 ;;		___flsub
 11140 ;;		_conv_raw_result
 11141 ;;		_fabsf
 11142 ;;		_set_load_relay_one
 11143 ;;		_set_load_relay_two
 11144 ;;		_update_adc_result
 11145 ;; This function is called by:
 11146 ;;		_main
 11147 ;; This function uses a reentrant model
 11148 ;;
 11149                           
 11150                           	psect	text28
 11151  01B77C                     __ptext28:
 11152                           	opt callstack 0
 11153  01B77C                     _esr_check:
 11154                           	opt callstack 12
 11155                           
 11156                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
 11157                           ;stkvar	_fsm @ sp[(0)+-1]
 11158                           
 11159                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11160                           ;incstack = 0
 11161  01B77C  0EFF               	movlw	-1
 11162  01B77E  50E3               	movf	plusw1,w,c
 11163  01B780  B4D8               	btfsc	status,2,c
 11164  01B782  D149               	goto	l14286
 11165                           
 11166                           ;bsoc.c: 202:   esr_state = 0;
 11167  01B784  0100               	movlb	0	; () banked
 11168  01B786  6BC6               	clrf	esr_check@esr_state& (0+255),b
 11169                           
 11170                           ; BSR set to: 0
 11171                           ;bsoc.c: 203:   return -10.0;
 11172  01B788  0E00               	movlw	0
 11173  01B78A  6E2A               	movwf	btemp^0,c
 11174  01B78C  0E00               	movlw	0
 11175  01B78E  6E2B               	movwf	(btemp+1)^0,c
 11176  01B790  0E20               	movlw	32
 11177  01B792  6E2C               	movwf	(btemp+2)^0,c
 11178  01B794  0EC1               	movlw	193
 11179  01B796  D15B               	goto	L7
 11180  01B798                     l14218:
 11181                           
 11182                           ; BSR set to: 0
 11183                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
 11184  01B798  0E10               	movlw	16
 11185  01B79A  6EE6               	movwf	postinc1,c
 11186  01B79C  0E27               	movlw	39
 11187  01B79E  6EE6               	movwf	postinc1,c
 11188  01B7A0  0E0C               	movlw	12
 11189  01B7A2  6EE6               	movwf	postinc1,c
 11190  01B7A4  ECBA  F00F         	call	_StartTimer	;wreg free
 11191  01B7A8                     l14220:
 11192                           
 11193                           ;bsoc.c: 209:   esr_state++;
 11194  01B7A8  0100               	movlb	0	; () banked
 11195  01B7AA  2BC6               	incf	esr_check@esr_state& (0+255),f,b
 11196                           
 11197                           ;bsoc.c: 210:   break;
 11198  01B7AC  D149               	goto	l14288
 11199  01B7AE                     l14222:
 11200                           
 11201                           ; BSR set to: 0
 11202                           ;bsoc.c: 215:   set_load_relay_one(0);
 11203  01B7AE  0E00               	movlw	0
 11204  01B7B0  6EE6               	movwf	postinc1,c
 11205  01B7B2  ECBD  F014         	call	_set_load_relay_one	;wreg free
 11206                           
 11207                           ;bsoc.c: 216:   set_load_relay_two(0);
 11208  01B7B6  0E00               	movlw	0
 11209  01B7B8  6EE6               	movwf	postinc1,c
 11210  01B7BA  ECB5  F014         	call	_set_load_relay_two	;wreg free
 11211                           
 11212                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
 11213  01B7BE  0E0C               	movlw	12
 11214  01B7C0  6EE6               	movwf	postinc1,c
 11215  01B7C2  EC27  F012         	call	_TimerDone	;wreg free
 11216  01B7C6  502A               	movf	btemp^0,w,c
 11217  01B7C8  B4D8               	btfsc	status,2,c
 11218  01B7CA  D009               	goto	l14228
 11219                           
 11220                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
 11221  01B7CC  0E10               	movlw	16
 11222  01B7CE  6EE6               	movwf	postinc1,c
 11223  01B7D0  0E27               	movlw	39
 11224  01B7D2  6EE6               	movwf	postinc1,c
 11225  01B7D4  0E0C               	movlw	12
 11226  01B7D6  6EE6               	movwf	postinc1,c
 11227  01B7D8  ECBA  F00F         	call	_StartTimer	;wreg free
 11228                           
 11229                           ;bsoc.c: 219:   } else {
 11230  01B7DC  D006               	goto	l14232
 11231  01B7DE                     l14228:
 11232                           
 11233                           ;bsoc.c: 220:    return -2.0;
 11234  01B7DE  0E00               	movlw	0
 11235  01B7E0  6E2A               	movwf	btemp^0,c
 11236  01B7E2  0E00               	movlw	0
 11237  01B7E4  6E2B               	movwf	(btemp+1)^0,c
 11238  01B7E6  0E00               	movlw	0
 11239  01B7E8  D066               	goto	L9
 11240  01B7EA                     l14232:
 11241                           
 11242                           ;bsoc.c: 225:   update_adc_result();
 11243  01B7EA  EC39  F010         	call	_update_adc_result	;wreg free
 11244                           
 11245                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
 11246  01B7EE  0E00               	movlw	0
 11247  01B7F0  6EE6               	movwf	postinc1,c
 11248  01B7F2  0E04               	movlw	4
 11249  01B7F4  6EE6               	movwf	postinc1,c
 11250  01B7F6  EC98  F0C3         	call	_conv_raw_result	;wreg free
 11251  01B7FA  0060  F0A8  FA21   	movff	btemp,_C+290	;volatile
 11252  01B800  0060  F0AC  FA22   	movff	btemp+1,_C+291	;volatile
 11253  01B806  0060  F0B0  FA23   	movff	btemp+2,_C+292	;volatile
 11254  01B80C  0060  F0B4  FA24   	movff	btemp+3,_C+293	;volatile
 11255  01B812  D7CA               	goto	l14220
 11256  01B814                     l14238:
 11257                           
 11258                           ; BSR set to: 0
 11259                           ;bsoc.c: 230:   set_load_relay_one(1);
 11260  01B814  0E01               	movlw	1
 11261  01B816  6EE6               	movwf	postinc1,c
 11262  01B818  ECBD  F014         	call	_set_load_relay_one	;wreg free
 11263                           
 11264                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
 11265  01B81C  0E0C               	movlw	12
 11266  01B81E  6EE6               	movwf	postinc1,c
 11267  01B820  EC27  F012         	call	_TimerDone	;wreg free
 11268  01B824  502A               	movf	btemp^0,w,c
 11269  01B826  B4D8               	btfsc	status,2,c
 11270  01B828  D009               	goto	l14244
 11271                           
 11272                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
 11273  01B82A  0E10               	movlw	16
 11274  01B82C  6EE6               	movwf	postinc1,c
 11275  01B82E  0E27               	movlw	39
 11276  01B830  6EE6               	movwf	postinc1,c
 11277  01B832  0E0C               	movlw	12
 11278  01B834  6EE6               	movwf	postinc1,c
 11279  01B836  ECBA  F00F         	call	_StartTimer	;wreg free
 11280                           
 11281                           ;bsoc.c: 233:   } else {
 11282  01B83A  D006               	goto	l14248
 11283  01B83C                     l14244:
 11284                           
 11285                           ;bsoc.c: 234:    return -3.0;
 11286  01B83C  0E00               	movlw	0
 11287  01B83E  6E2A               	movwf	btemp^0,c
 11288  01B840  0E00               	movlw	0
 11289  01B842  6E2B               	movwf	(btemp+1)^0,c
 11290  01B844  0E40               	movlw	64
 11291  01B846  D037               	goto	L9
 11292  01B848                     l14248:
 11293                           
 11294                           ;bsoc.c: 237:   update_adc_result();
 11295  01B848  EC39  F010         	call	_update_adc_result	;wreg free
 11296                           
 11297                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
 11298  01B84C  0E00               	movlw	0
 11299  01B84E  6EE6               	movwf	postinc1,c
 11300  01B850  0E04               	movlw	4
 11301  01B852  6EE6               	movwf	postinc1,c
 11302  01B854  EC98  F0C3         	call	_conv_raw_result	;wreg free
 11303  01B858  0060  F0A8  FA25   	movff	btemp,_C+294	;volatile
 11304  01B85E  0060  F0AC  FA26   	movff	btemp+1,_C+295	;volatile
 11305  01B864  0060  F0B0  FA27   	movff	btemp+2,_C+296	;volatile
 11306  01B86A  0060  F0B4  FA28   	movff	btemp+3,_C+297	;volatile
 11307                           
 11308                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
 11309  01B870  0E00               	movlw	0
 11310  01B872  6EE6               	movwf	postinc1,c
 11311  01B874  0E00               	movlw	0
 11312  01B876  6EE6               	movwf	postinc1,c
 11313  01B878  EC98  F0C3         	call	_conv_raw_result	;wreg free
 11314  01B87C  0060  F0A8  FA19   	movff	btemp,_C+282	;volatile
 11315  01B882  0060  F0AC  FA1A   	movff	btemp+1,_C+283	;volatile
 11316  01B888  0060  F0B0  FA1B   	movff	btemp+2,_C+284	;volatile
 11317  01B88E  0060  F0B4  FA1C   	movff	btemp+3,_C+285	;volatile
 11318  01B894  D789               	goto	l14220
 11319  01B896                     l14256:
 11320                           
 11321                           ; BSR set to: 0
 11322                           ;bsoc.c: 243:   set_load_relay_two(1);
 11323  01B896  0E01               	movlw	1
 11324  01B898  6EE6               	movwf	postinc1,c
 11325  01B89A  ECB5  F014         	call	_set_load_relay_two	;wreg free
 11326                           
 11327                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
 11328  01B89E  0E0C               	movlw	12
 11329  01B8A0  6EE6               	movwf	postinc1,c
 11330  01B8A2  EC27  F012         	call	_TimerDone	;wreg free
 11331  01B8A6  502A               	movf	btemp^0,w,c
 11332  01B8A8  A4D8               	btfss	status,2,c
 11333  01B8AA  D008               	goto	l14264
 11334                           
 11335                           ;bsoc.c: 245:    return -4.0;
 11336  01B8AC  0E00               	movlw	0
 11337  01B8AE  6E2A               	movwf	btemp^0,c
 11338  01B8B0  0E00               	movlw	0
 11339  01B8B2  6E2B               	movwf	(btemp+1)^0,c
 11340  01B8B4  0E80               	movlw	128
 11341  01B8B6                     L9:
 11342  01B8B6  6E2C               	movwf	(btemp+2)^0,c
 11343  01B8B8  0EC0               	movlw	192
 11344  01B8BA  D0C9               	goto	L7
 11345  01B8BC                     l14264:
 11346                           
 11347                           ;bsoc.c: 247:   update_adc_result();
 11348  01B8BC  EC39  F010         	call	_update_adc_result	;wreg free
 11349                           
 11350                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
 11351  01B8C0  0E00               	movlw	0
 11352  01B8C2  6EE6               	movwf	postinc1,c
 11353  01B8C4  0E04               	movlw	4
 11354  01B8C6  6EE6               	movwf	postinc1,c
 11355  01B8C8  EC98  F0C3         	call	_conv_raw_result	;wreg free
 11356  01B8CC  0060  F0A8  FA29   	movff	btemp,_C+298	;volatile
 11357  01B8D2  0060  F0AC  FA2A   	movff	btemp+1,_C+299	;volatile
 11358  01B8D8  0060  F0B0  FA2B   	movff	btemp+2,_C+300	;volatile
 11359  01B8DE  0060  F0B4  FA2C   	movff	btemp+3,_C+301	;volatile
 11360                           
 11361                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
 11362  01B8E4  0E00               	movlw	0
 11363  01B8E6  6EE6               	movwf	postinc1,c
 11364  01B8E8  0E00               	movlw	0
 11365  01B8EA  6EE6               	movwf	postinc1,c
 11366  01B8EC  EC98  F0C3         	call	_conv_raw_result	;wreg free
 11367  01B8F0  0060  F0A8  FA1D   	movff	btemp,_C+286	;volatile
 11368  01B8F6  0060  F0AC  FA1E   	movff	btemp+1,_C+287	;volatile
 11369  01B8FC  0060  F0B0  FA1F   	movff	btemp+2,_C+288	;volatile
 11370  01B902  0060  F0B4  FA20   	movff	btemp+3,_C+289	;volatile
 11371                           
 11372                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
 11373  01B908  EE22  F21D         	lfsr	2,_C+286	;volatile
 11374  01B90C  006F FF7B FFE6     	movff	postinc2,postinc1
 11375  01B912  006F FF7B FFE6     	movff	postinc2,postinc1
 11376  01B918  006F FF7B FFE6     	movff	postinc2,postinc1
 11377  01B91E  006F FF7B FFE6     	movff	postinc2,postinc1
 11378  01B924  EE22  F219         	lfsr	2,_C+282	;volatile
 11379  01B928  006F FF7B FFE6     	movff	postinc2,postinc1
 11380  01B92E  006F FF7B FFE6     	movff	postinc2,postinc1
 11381  01B934  006F FF7B FFE6     	movff	postinc2,postinc1
 11382  01B93A  006F FF7B FFE6     	movff	postinc2,postinc1
 11383  01B940  EC14  F00F         	call	___flsub	;wreg free
 11384  01B944  0060  F0AB  FFE6   	movff	btemp,postinc1
 11385  01B94A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11386  01B950  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11387  01B956  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11388  01B95C  EE22  F229         	lfsr	2,_C+298	;volatile
 11389  01B960  006F FF7B FFE6     	movff	postinc2,postinc1
 11390  01B966  006F FF7B FFE6     	movff	postinc2,postinc1
 11391  01B96C  006F FF7B FFE6     	movff	postinc2,postinc1
 11392  01B972  006F FF7B FFE6     	movff	postinc2,postinc1
 11393  01B978  EE22  F225         	lfsr	2,_C+294	;volatile
 11394  01B97C  006F FF7B FFE6     	movff	postinc2,postinc1
 11395  01B982  006F FF7B FFE6     	movff	postinc2,postinc1
 11396  01B988  006F FF7B FFE6     	movff	postinc2,postinc1
 11397  01B98E  006F FF7B FFE6     	movff	postinc2,postinc1
 11398  01B994  EC14  F00F         	call	___flsub	;wreg free
 11399  01B998  0060  F0AB  FFE6   	movff	btemp,postinc1
 11400  01B99E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11401  01B9A4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11402  01B9AA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11403  01B9B0  EC50  F0BE         	call	___fldiv	;wreg free
 11404  01B9B4  0060  F0AB  FFE6   	movff	btemp,postinc1
 11405  01B9BA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11406  01B9C0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11407  01B9C6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11408  01B9CC  EC56  F004         	call	_fabsf	;wreg free
 11409  01B9D0  0060  F0A8  F987   	movff	btemp,_C+136	;volatile
 11410  01B9D6  0060  F0AC  F988   	movff	btemp+1,_C+137	;volatile
 11411  01B9DC  0060  F0B0  F989   	movff	btemp+2,_C+138	;volatile
 11412  01B9E2  0060  F0B4  F98A   	movff	btemp+3,_C+139	;volatile
 11413                           
 11414                           ;bsoc.c: 252:   set_load_relay_one(0);
 11415  01B9E8  0E00               	movlw	0
 11416  01B9EA  6EE6               	movwf	postinc1,c
 11417  01B9EC  ECBD  F014         	call	_set_load_relay_one	;wreg free
 11418                           
 11419                           ;bsoc.c: 253:   set_load_relay_two(0);
 11420  01B9F0  0E00               	movlw	0
 11421  01B9F2  6EE6               	movwf	postinc1,c
 11422  01B9F4  ECB5  F014         	call	_set_load_relay_two	;wreg free
 11423                           
 11424                           ;bsoc.c: 254:   esr_state = 0;
 11425  01B9F8  0100               	movlb	0	; () banked
 11426  01B9FA  6BC6               	clrf	esr_check@esr_state& (0+255),b
 11427                           
 11428                           ; BSR set to: 0
 11429                           ;bsoc.c: 255:   return C.esr;
 11430  01B9FC  0062  F61C  F02A   	movff	_C+136,btemp	;volatile
 11431  01BA02  0062  F620  F02B   	movff	_C+137,btemp+1	;volatile
 11432  01BA08  0062  F624  F02C   	movff	_C+138,btemp+2	;volatile
 11433  01BA0E  0062  F628  F02D   	movff	_C+139,btemp+3	;volatile
 11434  01BA14  D01D               	goto	l2408
 11435  01BA16                     l14286:
 11436  01BA16  0100               	movlb	0	; () banked
 11437  01BA18  51C6               	movf	esr_check@esr_state& (0+255),w,b
 11438  01BA1A  6E34               	movwf	(btemp+10)^0,c
 11439  01BA1C  6A35               	clrf	(btemp+11)^0,c
 11440                           
 11441                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11442                           ; Switch size 1, requested type "simple"
 11443                           ; Number of cases is 1, Range of values is 0 to 0
 11444                           ; switch strategies available:
 11445                           ; Name         Instructions Cycles
 11446                           ; simple_byte            4     3 (average)
 11447                           ;	Chosen strategy is simple_byte
 11448  01BA1E  5035               	movf	(btemp+11)^0,w,c
 11449  01BA20  0A00               	xorlw	0	; case 0
 11450  01BA22  A4D8               	btfss	status,2,c
 11451  01BA24  D00D               	goto	l14288
 11452                           
 11453                           ; BSR set to: 0
 11454                           ; Switch size 1, requested type "simple"
 11455                           ; Number of cases is 4, Range of values is 0 to 3
 11456                           ; switch strategies available:
 11457                           ; Name         Instructions Cycles
 11458                           ; simple_byte           13     7 (average)
 11459                           ;	Chosen strategy is simple_byte
 11460  01BA26  5034               	movf	(btemp+10)^0,w,c
 11461  01BA28  0A00               	xorlw	0	; case 0
 11462  01BA2A  B4D8               	btfsc	status,2,c
 11463  01BA2C  D6B5               	goto	l14218
 11464  01BA2E  0A01               	xorlw	1	; case 1
 11465  01BA30  B4D8               	btfsc	status,2,c
 11466  01BA32  D6BD               	goto	l14222
 11467  01BA34  0A03               	xorlw	3	; case 2
 11468  01BA36  B4D8               	btfsc	status,2,c
 11469  01BA38  D6ED               	goto	l14238
 11470  01BA3A  0A01               	xorlw	1	; case 3
 11471  01BA3C  B4D8               	btfsc	status,2,c
 11472  01BA3E  D72B               	goto	l14256
 11473  01BA40                     l14288:
 11474                           
 11475                           ; BSR set to: 0
 11476                           ;bsoc.c: 260:  return -1.0;
 11477  01BA40  0E00               	movlw	0
 11478  01BA42  6E2A               	movwf	btemp^0,c
 11479  01BA44  0E00               	movlw	0
 11480  01BA46  6E2B               	movwf	(btemp+1)^0,c
 11481  01BA48  0E80               	movlw	128
 11482  01BA4A  6E2C               	movwf	(btemp+2)^0,c
 11483  01BA4C  0EBF               	movlw	191
 11484  01BA4E                     L7:
 11485  01BA4E  6E2D               	movwf	(btemp+3)^0,c
 11486  01BA50                     l2408:
 11487                           
 11488                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 11489  01BA50  52E5               	movf	postdec1,f,c
 11490  01BA52  0012               	return		;funcret
 11491  01BA54                     __end_of_esr_check:
 11492                           	opt callstack 0
 11493                           
 11494 ;; *************** function _update_adc_result *****************
 11495 ;; Defined at:
 11496 ;;		line 111 in file "daq.c"
 11497 ;; Parameters:    Size  Location     Type
 11498 ;;		None
 11499 ;; Auto vars:     Size  Location     Type
 11500 ;;		None
 11501 ;; Return value:  Size  Location     Type
 11502 ;;                  1  [STACK] _Bool 
 11503 ;; Registers used:
 11504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
 11505 ;; Tracked objects:
 11506 ;;		On entry : 0/0
 11507 ;;		On exit  : 0/0
 11508 ;;		Unchanged: 0/0
 11509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11514 ;;Total ram usage:        0 bytes
 11515 ;; Hardware stack levels used:    1
 11516 ;; Hardware stack levels required when called:   17
 11517 ;; This function calls:
 11518 ;;		_StartTimer
 11519 ;;		_TimerDone
 11520 ;;		_check_adc_scan
 11521 ;;		_clear_adc_scan
 11522 ;;		_start_adc_scan
 11523 ;; This function is called by:
 11524 ;;		_esr_check
 11525 ;; This function uses a reentrant model
 11526 ;;
 11527                           
 11528                           	psect	text29
 11529  002072                     __ptext29:
 11530                           	opt callstack 0
 11531  002072                     _update_adc_result:
 11532                           	opt callstack 12
 11533                           
 11534                           ;daq.c: 113:  if (R.done) {
 11535                           
 11536                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11537                           ;incstack = 0
 11538  002072  0101               	movlb	1	; () banked
 11539  002074  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 11540  002076  B4D8               	btfsc	status,2,c
 11541  002078  0012               	return	
 11542                           
 11543                           ; BSR set to: 1
 11544                           ;daq.c: 114:   clear_adc_scan();
 11545  00207A  EC3F  F015         	call	_clear_adc_scan	;wreg free
 11546                           
 11547                           ; BSR set to: 1
 11548                           ;daq.c: 115:   start_adc_scan();
 11549  00207E  ECF9  F00B         	call	_start_adc_scan	;wreg free
 11550                           
 11551                           ;daq.c: 116:   StartTimer(TMR_ADC, 200);
 11552  002082  0EC8               	movlw	200
 11553  002084  6EE6               	movwf	postinc1,c
 11554  002086  0E00               	movlw	0
 11555  002088  6EE6               	movwf	postinc1,c
 11556  00208A  0E01               	movlw	1
 11557  00208C  6EE6               	movwf	postinc1,c
 11558  00208E  ECBA  F00F         	call	_StartTimer	;wreg free
 11559  002092                     l13646:
 11560  002092  0E01               	movlw	1
 11561  002094  6EE6               	movwf	postinc1,c
 11562  002096  EC27  F012         	call	_TimerDone	;wreg free
 11563  00209A  502A               	movf	btemp^0,w,c
 11564  00209C  A4D8               	btfss	status,2,c
 11565  00209E  0012               	return	
 11566  0020A0  EC25  F015         	call	_check_adc_scan	;wreg free
 11567  0020A4  502A               	movf	btemp^0,w,c
 11568  0020A6  A4D8               	btfss	status,2,c
 11569  0020A8  0012               	return	
 11570  0020AA  D7F3               	goto	l13646
 11571  0020AC                     __end_of_update_adc_result:
 11572                           	opt callstack 0
 11573                           
 11574 ;; *************** function _check_adc_scan *****************
 11575 ;; Defined at:
 11576 ;;		line 95 in file "daq.c"
 11577 ;; Parameters:    Size  Location     Type
 11578 ;;		None
 11579 ;; Auto vars:     Size  Location     Type
 11580 ;;		None
 11581 ;; Return value:  Size  Location     Type
 11582 ;;                  1  [STACK] _Bool 
 11583 ;; Registers used:
 11584 ;;		btemp
 11585 ;; Tracked objects:
 11586 ;;		On entry : 0/2
 11587 ;;		On exit  : 0/0
 11588 ;;		Unchanged: 0/0
 11589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11594 ;;Total ram usage:        0 bytes
 11595 ;; Hardware stack levels used:    1
 11596 ;; Hardware stack levels required when called:   15
 11597 ;; This function calls:
 11598 ;;		Nothing
 11599 ;; This function is called by:
 11600 ;;		_main
 11601 ;;		_update_adc_result
 11602 ;; This function uses a reentrant model
 11603 ;;
 11604                           
 11605                           	psect	text30
 11606  002A4A                     __ptext30:
 11607                           	opt callstack 0
 11608  002A4A                     _check_adc_scan:
 11609                           	opt callstack 13
 11610                           
 11611                           ;daq.c: 97:  return R.done;
 11612                           
 11613                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11614                           ;incstack = 0
 11615  002A4A  0060  F4D4  F02A   	movff	_R+53,btemp	;volatile
 11616                           
 11617                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11618  002A50  0012               	return		;funcret
 11619  002A52                     __end_of_check_adc_scan:
 11620                           	opt callstack 0
 11621                           
 11622 ;; *************** function _set_load_relay_two *****************
 11623 ;; Defined at:
 11624 ;;		line 131 in file "mbmc.c"
 11625 ;; Parameters:    Size  Location     Type
 11626 ;;  mode            1  [STACK] const _Bool 
 11627 ;; Auto vars:     Size  Location     Type
 11628 ;;		None
 11629 ;; Return value:  Size  Location     Type
 11630 ;;                  1  [STACK] void 
 11631 ;; Registers used:
 11632 ;;		wreg, fsr1l, fsr1h
 11633 ;; Tracked objects:
 11634 ;;		On entry : 0/3D
 11635 ;;		On exit  : 0/0
 11636 ;;		Unchanged: 0/0
 11637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11642 ;;Total ram usage:        0 bytes
 11643 ;; Hardware stack levels used:    1
 11644 ;; Hardware stack levels required when called:   15
 11645 ;; This function calls:
 11646 ;;		Nothing
 11647 ;; This function is called by:
 11648 ;;		_main
 11649 ;;		_esr_check
 11650 ;; This function uses a reentrant model
 11651 ;;
 11652                           
 11653                           	psect	text31
 11654  00296A                     __ptext31:
 11655                           	opt callstack 0
 11656  00296A                     _set_load_relay_two:
 11657                           	opt callstack 15
 11658                           
 11659                           ;mbmc.c: 131: void set_load_relay_two(const _Bool mode);mbmc.c: 132: {;mbmc.c: 133:  LAT
      +                          Dbits.LATD5 = mode;
 11660                           ;stkvar	_mode @ sp[(0)+-1]
 11661                           
 11662                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11663                           ;incstack = 0
 11664  00296A  0EFF               	movlw	-1
 11665  00296C  B0E3               	btfsc	plusw1,0,c
 11666  00296E  D002               	bra	u12505
 11667  002970  9ABD               	bcf	189,5,c	;volatile
 11668  002972  D001               	bra	u12506
 11669  002974                     u12505:
 11670  002974  8ABD               	bsf	189,5,c	;volatile
 11671  002976                     u12506:
 11672                           
 11673                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 11674  002976  52E5               	movf	postdec1,f,c
 11675  002978  0012               	return		;funcret
 11676  00297A                     __end_of_set_load_relay_two:
 11677                           	opt callstack 0
 11678                           
 11679 ;; *************** function _set_load_relay_one *****************
 11680 ;; Defined at:
 11681 ;;		line 126 in file "mbmc.c"
 11682 ;; Parameters:    Size  Location     Type
 11683 ;;  mode            1  [STACK] const _Bool 
 11684 ;; Auto vars:     Size  Location     Type
 11685 ;;		None
 11686 ;; Return value:  Size  Location     Type
 11687 ;;                  1  [STACK] void 
 11688 ;; Registers used:
 11689 ;;		wreg, fsr1l, fsr1h
 11690 ;; Tracked objects:
 11691 ;;		On entry : 0/3D
 11692 ;;		On exit  : 0/0
 11693 ;;		Unchanged: 0/0
 11694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11699 ;;Total ram usage:        0 bytes
 11700 ;; Hardware stack levels used:    1
 11701 ;; Hardware stack levels required when called:   15
 11702 ;; This function calls:
 11703 ;;		Nothing
 11704 ;; This function is called by:
 11705 ;;		_main
 11706 ;;		_esr_check
 11707 ;; This function uses a reentrant model
 11708 ;;
 11709                           
 11710                           	psect	text32
 11711  00297A                     __ptext32:
 11712                           	opt callstack 0
 11713  00297A                     _set_load_relay_one:
 11714                           	opt callstack 15
 11715                           
 11716                           ;mbmc.c: 126: void set_load_relay_one(const _Bool mode);mbmc.c: 127: {;mbmc.c: 128:  LAT
      +                          Dbits.LATD4 = mode;
 11717                           ;stkvar	_mode @ sp[(0)+-1]
 11718                           
 11719                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11720                           ;incstack = 0
 11721  00297A  0EFF               	movlw	-1
 11722  00297C  B0E3               	btfsc	plusw1,0,c
 11723  00297E  D002               	bra	u12495
 11724  002980  98BD               	bcf	189,4,c	;volatile
 11725  002982  D001               	bra	u12496
 11726  002984                     u12495:
 11727  002984  88BD               	bsf	189,4,c	;volatile
 11728  002986                     u12496:
 11729                           
 11730                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 11731  002986  52E5               	movf	postdec1,f,c
 11732  002988  0012               	return		;funcret
 11733  00298A                     __end_of_set_load_relay_one:
 11734                           	opt callstack 0
 11735                           
 11736 ;; *************** function _eaDogM_WriteCommand *****************
 11737 ;; Defined at:
 11738 ;;		line 384 in file "eadog.c"
 11739 ;; Parameters:    Size  Location     Type
 11740 ;;  cmd             1  [STACK] const unsigned char 
 11741 ;; Auto vars:     Size  Location     Type
 11742 ;;		None
 11743 ;; Return value:  Size  Location     Type
 11744 ;;                  1  [STACK] void 
 11745 ;; Registers used:
 11746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 11747 ;; Tracked objects:
 11748 ;;		On entry : 3F/3D
 11749 ;;		On exit  : 3F/3D
 11750 ;;		Unchanged: 0/0
 11751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11756 ;;Total ram usage:        0 bytes
 11757 ;; Hardware stack levels used:    1
 11758 ;; Hardware stack levels required when called:   19
 11759 ;; This function calls:
 11760 ;;		_send_lcd_cmd_dma
 11761 ;; This function is called by:
 11762 ;;		_main
 11763 ;; This function uses a reentrant model
 11764 ;;
 11765                           
 11766                           	psect	text33
 11767  0029BA                     __ptext33:
 11768                           	opt callstack 0
 11769  0029BA                     _eaDogM_WriteCommand:
 11770                           	opt callstack 11
 11771                           
 11772                           ;eadog.c: 384: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 385: {;eadog.c: 386:
      +                            send_lcd_cmd_dma(cmd);
 11773                           ;stkvar	_cmd @ sp[(0)+-1]
 11774                           
 11775                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11776                           ;incstack = 0
 11777  0029BA  0EFF               	movlw	-1
 11778  0029BC  50E3               	movf	plusw1,w,c
 11779  0029BE  6EE6               	movwf	postinc1,c
 11780  0029C0  EC0E  F014         	call	_send_lcd_cmd_dma	;wreg free
 11781                           
 11782                           ; BSR set to: 61
 11783                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 11784  0029C4  52E5               	movf	postdec1,f,c
 11785  0029C6  0012               	return		;funcret
 11786  0029C8                     __end_of_eaDogM_WriteCommand:
 11787                           	opt callstack 0
 11788                           
 11789 ;; *************** function _display_history *****************
 11790 ;; Defined at:
 11791 ;;		line 626 in file "main.c"
 11792 ;; Parameters:    Size  Location     Type
 11793 ;;		None
 11794 ;; Auto vars:     Size  Location     Type
 11795 ;;		None
 11796 ;; Return value:  Size  Location     Type
 11797 ;;                  1  [STACK] _Bool 
 11798 ;; Registers used:
 11799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11800 ;; Tracked objects:
 11801 ;;		On entry : 0/2
 11802 ;;		On exit  : 0/0
 11803 ;;		Unchanged: 0/0
 11804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11809 ;;Total ram usage:        0 bytes
 11810 ;; Hardware stack levels used:    1
 11811 ;; Hardware stack levels required when called:   27
 11812 ;; This function calls:
 11813 ;;		_WaitMs
 11814 ;;		_asctime
 11815 ;;		_get_switch
 11816 ;;		_get_vterm_ptr
 11817 ;;		_localtime
 11818 ;;		_sprintf
 11819 ;;		_time
 11820 ;;		_update_lcd
 11821 ;; This function is called by:
 11822 ;;		_main
 11823 ;; This function uses a reentrant model
 11824 ;;
 11825                           
 11826                           	psect	text34
 11827  01B4A2                     __ptext34:
 11828                           	opt callstack 0
 11829  01B4A2                     _display_history:
 11830                           	opt callstack 3
 11831                           
 11832                           ;main.c: 628:  static uint8_t bwait = 0;;main.c: 630:  if (get_switch(SCALIB) && (++bwai
      +                          t > 5)) {
 11833                           
 11834                           ; BSR set to: 61
 11835                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11836                           ;incstack = 0
 11837  01B4A2  0E04               	movlw	4
 11838  01B4A4  6EE6               	movwf	postinc1,c
 11839  01B4A6  ECBC  F011         	call	_get_switch	;wreg free
 11840  01B4AA  502A               	movf	btemp^0,w,c
 11841  01B4AC  B4D8               	btfsc	status,2,c
 11842  01B4AE  D15E               	goto	l17340
 11843  01B4B0  2A53               	incf	display_history@bwait^0,f,c
 11844  01B4B2  0E05               	movlw	5
 11845  01B4B4  6453               	cpfsgt	display_history@bwait^0,c
 11846  01B4B6  D15A               	goto	l17340
 11847                           
 11848                           ;main.c: 631:   pclock = time(((void*)0));
 11849  01B4B8  0E00               	movlw	0
 11850  01B4BA  6EE6               	movwf	postinc1,c
 11851  01B4BC  0E00               	movlw	0
 11852  01B4BE  6EE6               	movwf	postinc1,c
 11853  01B4C0  ECBD  F00C         	call	_time	;wreg free
 11854  01B4C4  52E5               	movf	postdec1,f,c
 11855  01B4C6  006F FF9C  F041    	movff	indf1,btemp+23
 11856  01B4CC  52E5               	movf	postdec1,f,c
 11857  01B4CE  006F FF9C  F040    	movff	indf1,btemp+22
 11858  01B4D4  52E5               	movf	postdec1,f,c
 11859  01B4D6  006F FF9C  F03F    	movff	indf1,btemp+21
 11860  01B4DC  52E5               	movf	postdec1,f,c
 11861  01B4DE  006F FF9C  F03E    	movff	indf1,btemp+20
 11862  01B4E4  52E5               	movf	postdec1,f,c
 11863  01B4E6  006F FF9C  F03D    	movff	indf1,btemp+19
 11864  01B4EC  52E5               	movf	postdec1,f,c
 11865  01B4EE  006F FF9C  F03C    	movff	indf1,btemp+18
 11866  01B4F4  52E5               	movf	postdec1,f,c
 11867  01B4F6  006F FF9C  F03B    	movff	indf1,btemp+17
 11868  01B4FC  52E5               	movf	postdec1,f,c
 11869  01B4FE  006F FF9C  F03A    	movff	indf1,btemp+16
 11870  01B504  0060  F0E8  F0DA   	movff	btemp+16,_pclock
 11871  01B50A  0060  F0EC  F0DB   	movff	btemp+17,_pclock+1
 11872  01B510  0060  F0F0  F0DC   	movff	btemp+18,_pclock+2
 11873  01B516  0060  F0F4  F0DD   	movff	btemp+19,_pclock+3
 11874  01B51C  0060  F0F8  F0DE   	movff	btemp+20,_pclock+4
 11875  01B522  0060  F0FC  F0DF   	movff	btemp+21,_pclock+5
 11876  01B528  0060  F100  F0E0   	movff	btemp+22,_pclock+6
 11877  01B52E  0060  F104  F0E1   	movff	btemp+23,_pclock+7
 11878                           
 11879                           ; BSR set to: 57
 11880                           ;main.c: 632:   t_mbmc = localtime(&pclock);
 11881  01B534  0EDA               	movlw	_pclock& (0+255)
 11882  01B536  6EE6               	movwf	postinc1,c
 11883  01B538  EC6D  F014         	call	_localtime	;wreg free
 11884  01B53C  0060  F0A8  F0BC   	movff	btemp,_t_mbmc
 11885  01B542  0060  F0AC  F0BD   	movff	btemp+1,_t_mbmc+1
 11886                           
 11887                           ;main.c: 633:   sprintf(get_vterm_ptr(0, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          0], C.hist[0].h[1], C.hist[0].h[2], C.hist[0].h[3]);
 11888  01B548  EE22  F1EA         	lfsr	2,_C+235	;volatile
 11889  01B54C  006F FF78  F034    	movff	postinc2,btemp+10
 11890  01B552  006F FF74  F035    	movff	postdec2,btemp+11
 11891  01B558  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11892  01B55E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11893  01B564  EE22  F1E8         	lfsr	2,_C+233	;volatile
 11894  01B568  006F FF78  F034    	movff	postinc2,btemp+10
 11895  01B56E  006F FF74  F035    	movff	postdec2,btemp+11
 11896  01B574  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11897  01B57A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11898  01B580  EE22  F1E6         	lfsr	2,_C+231	;volatile
 11899  01B584  006F FF78  F034    	movff	postinc2,btemp+10
 11900  01B58A  006F FF74  F035    	movff	postdec2,btemp+11
 11901  01B590  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11902  01B596  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11903  01B59C  EE22  F1E4         	lfsr	2,_C+229	;volatile
 11904  01B5A0  006F FF78  F034    	movff	postinc2,btemp+10
 11905  01B5A6  006F FF74  F035    	movff	postdec2,btemp+11
 11906  01B5AC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11907  01B5B2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11908  01B5B8  0EB9               	movlw	low STR_70
 11909  01B5BA  6EE6               	movwf	postinc1,c
 11910  01B5BC  0EFA               	movlw	high STR_70
 11911  01B5BE  6EE6               	movwf	postinc1,c
 11912  01B5C0  0E00               	movlw	0
 11913  01B5C2  6EE6               	movwf	postinc1,c
 11914  01B5C4  0E00               	movlw	0
 11915  01B5C6  6EE6               	movwf	postinc1,c
 11916  01B5C8  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 11917  01B5CC  0060  F0AB  FFE6   	movff	btemp,postinc1
 11918  01B5D2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11919  01B5D8  0E0C               	movlw	12
 11920  01B5DA  6EE6               	movwf	postinc1,c
 11921  01B5DC  EC71  F0FD         	call	_sprintf	;wreg free
 11922                           
 11923                           ; BSR set to: 0
 11924                           ;main.c: 634:   sprintf(get_vterm_ptr(1, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          4], C.hist[0].h[5], C.hist[0].h[6], C.hist[0].h[7]);
 11925  01B5E0  EE22  F1F2         	lfsr	2,_C+243	;volatile
 11926  01B5E4  006F FF78  F034    	movff	postinc2,btemp+10
 11927  01B5EA  006F FF74  F035    	movff	postdec2,btemp+11
 11928  01B5F0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11929  01B5F6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11930  01B5FC  EE22  F1F0         	lfsr	2,_C+241	;volatile
 11931  01B600  006F FF78  F034    	movff	postinc2,btemp+10
 11932  01B606  006F FF74  F035    	movff	postdec2,btemp+11
 11933  01B60C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11934  01B612  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11935  01B618  EE22  F1EE         	lfsr	2,_C+239	;volatile
 11936  01B61C  006F FF78  F034    	movff	postinc2,btemp+10
 11937  01B622  006F FF74  F035    	movff	postdec2,btemp+11
 11938  01B628  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11939  01B62E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11940  01B634  EE22  F1EC         	lfsr	2,_C+237	;volatile
 11941  01B638  006F FF78  F034    	movff	postinc2,btemp+10
 11942  01B63E  006F FF74  F035    	movff	postdec2,btemp+11
 11943  01B644  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11944  01B64A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11945  01B650  0EB9               	movlw	low STR_70
 11946  01B652  6EE6               	movwf	postinc1,c
 11947  01B654  0EFA               	movlw	high STR_70
 11948  01B656  6EE6               	movwf	postinc1,c
 11949  01B658  0E00               	movlw	0
 11950  01B65A  6EE6               	movwf	postinc1,c
 11951  01B65C  0E01               	movlw	1
 11952  01B65E  6EE6               	movwf	postinc1,c
 11953  01B660  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 11954  01B664  0060  F0AB  FFE6   	movff	btemp,postinc1
 11955  01B66A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11956  01B670  0E0C               	movlw	12
 11957  01B672  6EE6               	movwf	postinc1,c
 11958  01B674  EC71  F0FD         	call	_sprintf	;wreg free
 11959                           
 11960                           ; BSR set to: 0
 11961                           ;main.c: 635:   sprintf(get_vterm_ptr(2, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          8], C.hist[0].h[9], C.hist[0].h[10], C.hist[0].h[12]);
 11962  01B678  EE22  F1FC         	lfsr	2,_C+253	;volatile
 11963  01B67C  006F FF78  F034    	movff	postinc2,btemp+10
 11964  01B682  006F FF74  F035    	movff	postdec2,btemp+11
 11965  01B688  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11966  01B68E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11967  01B694  EE22  F1F8         	lfsr	2,_C+249	;volatile
 11968  01B698  006F FF78  F034    	movff	postinc2,btemp+10
 11969  01B69E  006F FF74  F035    	movff	postdec2,btemp+11
 11970  01B6A4  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11971  01B6AA  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11972  01B6B0  EE22  F1F6         	lfsr	2,_C+247	;volatile
 11973  01B6B4  006F FF78  F034    	movff	postinc2,btemp+10
 11974  01B6BA  006F FF74  F035    	movff	postdec2,btemp+11
 11975  01B6C0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11976  01B6C6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11977  01B6CC  EE22  F1F4         	lfsr	2,_C+245	;volatile
 11978  01B6D0  006F FF78  F034    	movff	postinc2,btemp+10
 11979  01B6D6  006F FF74  F035    	movff	postdec2,btemp+11
 11980  01B6DC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11981  01B6E2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11982  01B6E8  0EB9               	movlw	low STR_70
 11983  01B6EA  6EE6               	movwf	postinc1,c
 11984  01B6EC  0EFA               	movlw	high STR_70
 11985  01B6EE  6EE6               	movwf	postinc1,c
 11986  01B6F0  0E00               	movlw	0
 11987  01B6F2  6EE6               	movwf	postinc1,c
 11988  01B6F4  0E02               	movlw	2
 11989  01B6F6  6EE6               	movwf	postinc1,c
 11990  01B6F8  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 11991  01B6FC  0060  F0AB  FFE6   	movff	btemp,postinc1
 11992  01B702  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11993  01B708  0E0C               	movlw	12
 11994  01B70A  6EE6               	movwf	postinc1,c
 11995  01B70C  EC71  F0FD         	call	_sprintf	;wreg free
 11996                           
 11997                           ; BSR set to: 0
 11998                           ;main.c: 636:   sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
 11999  01B710  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
 12000  01B716  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
 12001  01B71C  EC0D  F0C1         	call	_asctime	;wreg free
 12002  01B720  0060  F0AB  FFE6   	movff	btemp,postinc1
 12003  01B726  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 12004  01B72C  0E76               	movlw	low (STR_77+5)
 12005  01B72E  6EE6               	movwf	postinc1,c
 12006  01B730  0EFF               	movlw	high (STR_77+5)
 12007  01B732  6EE6               	movwf	postinc1,c
 12008  01B734  0E00               	movlw	0
 12009  01B736  6EE6               	movwf	postinc1,c
 12010  01B738  0E03               	movlw	3
 12011  01B73A  6EE6               	movwf	postinc1,c
 12012  01B73C  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 12013  01B740  0060  F0AB  FFE6   	movff	btemp,postinc1
 12014  01B746  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 12015  01B74C  0E06               	movlw	6
 12016  01B74E  6EE6               	movwf	postinc1,c
 12017  01B750  EC71  F0FD         	call	_sprintf	;wreg free
 12018                           
 12019                           ; BSR set to: 0
 12020                           ;main.c: 637:   update_lcd(0);
 12021  01B754  0E00               	movlw	0
 12022  01B756  6EE6               	movwf	postinc1,c
 12023  01B758  EC23  F0F6         	call	_update_lcd	;wreg free
 12024                           
 12025                           ;main.c: 638:   WaitMs(2000);
 12026  01B75C  0ED0               	movlw	208
 12027  01B75E  6EE6               	movwf	postinc1,c
 12028  01B760  0E07               	movlw	7
 12029  01B762  6EE6               	movwf	postinc1,c
 12030  01B764  ECA9  F010         	call	_WaitMs	;wreg free
 12031  01B768                     l17334:
 12032                           
 12033                           ;main.c: 639:   bwait = 0;
 12034  01B768  6A53               	clrf	display_history@bwait^0,c
 12035  01B76A  0012               	return	
 12036  01B76C                     l17340:
 12037                           
 12038                           ;main.c: 642:   if (!get_switch(SCALIB))
 12039  01B76C  0E04               	movlw	4
 12040  01B76E  6EE6               	movwf	postinc1,c
 12041  01B770  ECBC  F011         	call	_get_switch	;wreg free
 12042  01B774  502A               	movf	btemp^0,w,c
 12043  01B776  A4D8               	btfss	status,2,c
 12044  01B778  0012               	return	
 12045  01B77A  D7F6               	goto	l17334
 12046  01B77C                     __end_of_display_history:
 12047                           	opt callstack 0
 12048                           
 12049 ;; *************** function _time *****************
 12050 ;; Defined at:
 12051 ;;		line 251 in file "mbmc.c"
 12052 ;; Parameters:    Size  Location     Type
 12053 ;;  t               2  [STACK] PTR long long 
 12054 ;;		 -> time@current_time(8), NULL(0), 
 12055 ;; Auto vars:     Size  Location     Type
 12056 ;;		None
 12057 ;; Return value:  Size  Location     Type
 12058 ;;                  8  [STACK] long long 
 12059 ;; Registers used:
 12060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
 12061 ;; Tracked objects:
 12062 ;;		On entry : 0/1
 12063 ;;		On exit  : 3F/39
 12064 ;;		Unchanged: 0/0
 12065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12070 ;;Total ram usage:        0 bytes
 12071 ;; Hardware stack levels used:    1
 12072 ;; Hardware stack levels required when called:   15
 12073 ;; This function calls:
 12074 ;;		Nothing
 12075 ;; This function is called by:
 12076 ;;		_main
 12077 ;;		_display_history
 12078 ;;		_check_day_time
 12079 ;;		_load_hist_data
 12080 ;; This function uses a reentrant model
 12081 ;;
 12082                           
 12083                           	psect	text35
 12084  00197A                     __ptext35:
 12085                           	opt callstack 0
 12086  00197A                     _time:
 12087                           	opt callstack 0
 12088                           
 12089                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 8 argfudge = 6
 12090  00197A  0E06               	movlw	6
 12091  00197C  26E1               	addwf	fsr1l,f,c
 12092  00197E  0E00               	movlw	0
 12093  001980  22E2               	addwfc	fsr1h,f,c
 12094                           
 12095                           ;mbmc.c: 251: time_t time(time_t * t);mbmc.c: 252: {;mbmc.c: 253:  static time_t current
      +                          _time;;mbmc.c: 254:  PIE8bits.TMR5IE = 0;
 12096                           
 12097                           ;incstack = 0
 12098 ;; hardware stack exceeded
 12099  001982  0139               	movlb	57	; () banked
 12100  001984  9D98               	bcf	152,6,b	;volatile
 12101                           
 12102                           ; BSR set to: 57
 12103                           ;mbmc.c: 255:  current_time = V.ticks;
 12104  001986  0102               	movlb	2	; () banked
 12105  001988  5188               	movf	(_V+129)& (0+255),w,b	;volatile
 12106  00198A  0100               	movlb	0	; () banked
 12107  00198C  6FD2               	movwf	time@current_time& (0+255),b
 12108  00198E  0102               	movlb	2	; () banked
 12109  001990  5189               	movf	(_V+130)& (0+255),w,b	;volatile
 12110  001992  0100               	movlb	0	; () banked
 12111  001994  6FD3               	movwf	(time@current_time+1)& (0+255),b
 12112  001996  0102               	movlb	2	; () banked
 12113  001998  518A               	movf	(_V+131)& (0+255),w,b	;volatile
 12114  00199A  0100               	movlb	0	; () banked
 12115  00199C  6FD4               	movwf	(time@current_time+2)& (0+255),b
 12116  00199E  0102               	movlb	2	; () banked
 12117  0019A0  518B               	movf	(_V+132)& (0+255),w,b	;volatile
 12118  0019A2  0100               	movlb	0	; () banked
 12119  0019A4  6FD5               	movwf	(time@current_time+3)& (0+255),b
 12120  0019A6  6BD6               	clrf	(time@current_time+4)& (0+255),b
 12121  0019A8  6BD7               	clrf	(time@current_time+5)& (0+255),b
 12122  0019AA  6BD8               	clrf	(time@current_time+6)& (0+255),b
 12123  0019AC  6BD9               	clrf	(time@current_time+7)& (0+255),b
 12124                           
 12125                           ; BSR set to: 0
 12126                           ;mbmc.c: 256:  PIE8bits.TMR5IE = 1;
 12127  0019AE  0139               	movlb	57	; () banked
 12128  0019B0  8D98               	bsf	152,6,b	;volatile
 12129                           
 12130                           ; BSR set to: 57
 12131                           ;mbmc.c: 257:  if (t) {
 12132                           ;stkvar	_t @ sp[(0)+-8]
 12133  0019B2  0EF8               	movlw	-8
 12134  0019B4  006F FF8C  F02A    	movff	plusw1,btemp
 12135  0019BA  0EF9               	movlw	-7
 12136  0019BC  50E3               	movf	plusw1,w,c
 12137  0019BE  102A               	iorwf	btemp^0,w,c
 12138                           
 12139                           ; BSR set to: 57
 12140                           ;mbmc.c: 260:  return current_time;
 12141                           
 12142                           ; BSR set to: 57
 12143  0019C0  EE20  F0D2         	lfsr	2,time@current_time
 12144                           
 12145                           ;stkvar	?_time @ sp[(0)+-8]
 12146  0019C4  0E08               	movlw	8
 12147  0019C6  6E2A               	movwf	btemp^0,c
 12148  0019C8  0EF8               	movlw	-8
 12149  0019CA                     us1158999:
 12150  0019CA  006F FF7B FFE3     	movff	postinc2,plusw1
 12151  0019D0  28E8               	incf	wreg,w,c
 12152  0019D2  2E2A               	decfsz	btemp^0,f,c
 12153  0019D4  D7FA               	bra	us1158999
 12154                           
 12155                           ; BSR set to: 57
 12156                           ; _time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize 
      +                          = 8, vargsize = 0
 12157  0019D6  0012               	return		;funcret
 12158  0019D8                     __end_of_time:
 12159                           	opt callstack 0
 12160                           
 12161 ;; *************** function _localtime *****************
 12162 ;; Defined at:
 12163 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime.c"
 12164 ;; Parameters:    Size  Location     Type
 12165 ;;  t               1  [STACK] PTR const long long 
 12166 ;;		 -> pclock(8), 
 12167 ;; Auto vars:     Size  Location     Type
 12168 ;;		None
 12169 ;; Return value:  Size  Location     Type
 12170 ;;                  2  [STACK] PTR struct tm
 12171 ;; Registers used:
 12172 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12173 ;; Tracked objects:
 12174 ;;		On entry : 3F/39
 12175 ;;		On exit  : 0/0
 12176 ;;		Unchanged: 0/0
 12177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12182 ;;Total ram usage:        0 bytes
 12183 ;; Hardware stack levels used:    1
 12184 ;; Hardware stack levels required when called:   21
 12185 ;; This function calls:
 12186 ;;		___localtime_r
 12187 ;; This function is called by:
 12188 ;;		_main
 12189 ;;		_display_history
 12190 ;; This function uses a reentrant model
 12191 ;;
 12192                           
 12193                           	psect	text36
 12194  0028DA                     __ptext36:
 12195                           	opt callstack 0
 12196  0028DA                     _localtime:
 12197                           	opt callstack 9
 12198                           
 12199                           ; BSR set to: 57
 12200                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12201                           ;incstack = 0
 12202  0028DA  0EDF               	movlw	low localtime@tm
 12203  0028DC  6EE6               	movwf	postinc1,c
 12204  0028DE  0E03               	movlw	high localtime@tm
 12205  0028E0  6EE6               	movwf	postinc1,c
 12206                           
 12207                           ;stkvar	_t @ sp[(-2)+-1]
 12208  0028E2  0EFD               	movlw	-3
 12209  0028E4  50E3               	movf	plusw1,w,c
 12210  0028E6  6EE6               	movwf	postinc1,c
 12211  0028E8  ECA6  F0E4         	call	___localtime_r	;wreg free
 12212                           
 12213                           ; _localtime: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 12214  0028EC  52E5               	movf	postdec1,f,c
 12215  0028EE  0012               	return		;funcret
 12216  0028F0                     __end_of_localtime:
 12217                           	opt callstack 0
 12218                           
 12219 ;; *************** function ___localtime_r *****************
 12220 ;; Defined at:
 12221 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime_r.c"
 12222 ;; Parameters:    Size  Location     Type
 12223 ;;  t               1  [STACK] PTR const long long 
 12224 ;;		 -> pclock(8), 
 12225 ;;  tm              2  [STACK] PTR struct tm
 12226 ;;		 -> localtime@tm(24), 
 12227 ;; Auto vars:     Size  Location     Type
 12228 ;;		None
 12229 ;; Return value:  Size  Location     Type
 12230 ;;                  2  [STACK] PTR struct tm
 12231 ;; Registers used:
 12232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12233 ;; Tracked objects:
 12234 ;;		On entry : 0/39
 12235 ;;		On exit  : 0/0
 12236 ;;		Unchanged: 0/0
 12237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12242 ;;Total ram usage:        0 bytes
 12243 ;; Hardware stack levels used:    1
 12244 ;; Hardware stack levels required when called:   20
 12245 ;; This function calls:
 12246 ;;		___secs_to_tm
 12247 ;;		___secs_to_zone
 12248 ;; This function is called by:
 12249 ;;		_localtime
 12250 ;; This function uses a reentrant model
 12251 ;;
 12252                           
 12253                           	psect	text37
 12254  01C94C                     __ptext37:
 12255                           	opt callstack 0
 12256  01C94C                     ___localtime_r:
 12257                           	opt callstack 9
 12258                           
 12259                           ;stkvar	_t @ sp[(0)+-1]
 12260                           
 12261                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12262                           ;incstack = 0
 12263  01C94C  0EFF               	movlw	-1
 12264  01C94E  50E3               	movf	plusw1,w,c
 12265  01C950  6ED9               	movwf	fsr2l,c
 12266  01C952  6ADA               	clrf	fsr2h,c
 12267  01C954  0E07               	movlw	7
 12268  01C956  AEDB               	btfss	plusw2,7,c
 12269  01C958  D010               	goto	u16460
 12270  01C95A  52DE               	movf	postinc2,f,c
 12271  01C95C  52DE               	movf	postinc2,f,c
 12272  01C95E  0E80               	movlw	128
 12273  01C960  5CDE               	subwf	postinc2,w,c
 12274  01C962  0EBD               	movlw	189
 12275  01C964  58DE               	subwfb	postinc2,w,c
 12276  01C966  0E0E               	movlw	14
 12277  01C968  58DE               	subwfb	postinc2,w,c
 12278  01C96A  0EFF               	movlw	255
 12279  01C96C  58DE               	subwfb	postinc2,w,c
 12280  01C96E  0EFF               	movlw	255
 12281  01C970  58DE               	subwfb	postinc2,w,c
 12282  01C972  0EFF               	movlw	255
 12283  01C974  58DE               	subwfb	postinc2,w,c
 12284  01C976  A0D8               	btfss	status,0,c
 12285  01C978  D01B               	goto	u16470
 12286  01C97A                     u16460:
 12287                           
 12288                           ;stkvar	_t @ sp[(0)+-1]
 12289  01C97A  0EFF               	movlw	-1
 12290  01C97C  50E3               	movf	plusw1,w,c
 12291  01C97E  6ED9               	movwf	fsr2l,c
 12292  01C980  6ADA               	clrf	fsr2h,c
 12293  01C982  0E07               	movlw	7
 12294  01C984  BEDB               	btfsc	plusw2,7,c
 12295  01C986  D019               	goto	l16890
 12296  01C988  0E07               	movlw	7
 12297  01C98A  50DB               	movf	plusw2,w,c
 12298  01C98C  E111               	bnz	u16470
 12299  01C98E  0E06               	movlw	6
 12300  01C990  50DB               	movf	plusw2,w,c
 12301  01C992  E10E               	bnz	u16470
 12302  01C994  0E05               	movlw	5
 12303  01C996  50DB               	movf	plusw2,w,c
 12304  01C998  E10B               	bnz	u16470
 12305  01C99A  04DE               	decf	postinc2,w,c
 12306  01C99C  0E7B               	movlw	123
 12307  01C99E  58DE               	subwfb	postinc2,w,c
 12308  01C9A0  0E9D               	movlw	157
 12309  01C9A2  58DE               	subwfb	postinc2,w,c
 12310  01C9A4  0E40               	movlw	64
 12311  01C9A6  58DE               	subwfb	postinc2,w,c
 12312  01C9A8  0EF1               	movlw	241
 12313  01C9AA  58DE               	subwfb	postinc2,w,c
 12314  01C9AC  A0D8               	btfss	status,0,c
 12315  01C9AE  D005               	goto	l16890
 12316  01C9B0                     u16470:
 12317  01C9B0  0E00               	movlw	0
 12318  01C9B2  6E2A               	movwf	btemp^0,c
 12319  01C9B4  0E00               	movlw	0
 12320  01C9B6  6E2B               	movwf	(btemp+1)^0,c
 12321  01C9B8  D0E7               	goto	l3517
 12322  01C9BA                     l16890:
 12323                           
 12324                           ;stkvar	_tm @ sp[(0)+-3]
 12325  01C9BA  0EFD               	movlw	-3
 12326  01C9BC  50E3               	movf	plusw1,w,c
 12327  01C9BE  0F16               	addlw	22
 12328  01C9C0  6E34               	movwf	(btemp+10)^0,c
 12329  01C9C2  0EFE               	movlw	-2
 12330  01C9C4  006F FF8C  F035    	movff	plusw1,btemp+11
 12331  01C9CA  0E00               	movlw	0
 12332  01C9CC  2235               	addwfc	(btemp+11)^0,f,c
 12333  01C9CE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12334  01C9D4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12335  01C9DA  0E00               	movlw	0
 12336  01C9DC  6EE6               	movwf	postinc1,c
 12337  01C9DE  0E00               	movlw	0
 12338  01C9E0  6EE6               	movwf	postinc1,c
 12339                           
 12340                           ;stkvar	_tm @ sp[(-4)+-3]
 12341  01C9E2  0EF9               	movlw	-7
 12342  01C9E4  50E3               	movf	plusw1,w,c
 12343  01C9E6  0F12               	addlw	18
 12344  01C9E8  6E34               	movwf	(btemp+10)^0,c
 12345  01C9EA  0EFA               	movlw	-6
 12346  01C9EC  006F FF8C  F035    	movff	plusw1,btemp+11
 12347  01C9F2  0E00               	movlw	0
 12348  01C9F4  2235               	addwfc	(btemp+11)^0,f,c
 12349  01C9F6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12350  01C9FC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12351                           
 12352                           ;stkvar	_tm @ sp[(-6)+-3]
 12353  01CA02  0EF7               	movlw	-9
 12354  01CA04  50E3               	movf	plusw1,w,c
 12355  01CA06  0F10               	addlw	16
 12356  01CA08  6E34               	movwf	(btemp+10)^0,c
 12357  01CA0A  0EF8               	movlw	-8
 12358  01CA0C  006F FF8C  F035    	movff	plusw1,btemp+11
 12359  01CA12  0E00               	movlw	0
 12360  01CA14  2235               	addwfc	(btemp+11)^0,f,c
 12361  01CA16  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12362  01CA1C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12363  01CA22  0E00               	movlw	0
 12364  01CA24  6EE6               	movwf	postinc1,c
 12365  01CA26  0E00               	movlw	0
 12366  01CA28  6EE6               	movwf	postinc1,c
 12367                           
 12368                           ;stkvar	_t @ sp[(-10)+-1]
 12369  01CA2A  0EF5               	movlw	-11
 12370  01CA2C  50E3               	movf	plusw1,w,c
 12371  01CA2E  6ED9               	movwf	fsr2l,c
 12372  01CA30  6ADA               	clrf	fsr2h,c
 12373  01CA32  006F FF7B FFE6     	movff	postinc2,postinc1
 12374  01CA38  006F FF7B FFE6     	movff	postinc2,postinc1
 12375  01CA3E  006F FF7B FFE6     	movff	postinc2,postinc1
 12376  01CA44  006F FF7B FFE6     	movff	postinc2,postinc1
 12377  01CA4A  006F FF7B FFE6     	movff	postinc2,postinc1
 12378  01CA50  006F FF7B FFE6     	movff	postinc2,postinc1
 12379  01CA56  006F FF7B FFE6     	movff	postinc2,postinc1
 12380  01CA5C  006F FF7B FFE6     	movff	postinc2,postinc1
 12381  01CA62  ECAE  F0AE         	call	___secs_to_zone	;wreg free
 12382                           
 12383                           ;stkvar	_tm @ sp[(0)+-3]
 12384  01CA66  0EFD               	movlw	-3
 12385  01CA68  006F FF8F FFE6     	movff	plusw1,postinc1
 12386  01CA6E  006F FF8F FFE6     	movff	plusw1,postinc1
 12387                           
 12388                           ;stkvar	_t @ sp[(-2)+-1]
 12389  01CA74  0EFD               	movlw	-3
 12390  01CA76  50E3               	movf	plusw1,w,c
 12391  01CA78  6ED9               	movwf	fsr2l,c
 12392  01CA7A  6ADA               	clrf	fsr2h,c
 12393  01CA7C  006F FF78  F03A    	movff	postinc2,btemp+16
 12394  01CA82  006F FF78  F03B    	movff	postinc2,btemp+17
 12395  01CA88  006F FF78  F03C    	movff	postinc2,btemp+18
 12396  01CA8E  006F FF78  F03D    	movff	postinc2,btemp+19
 12397  01CA94  006F FF78  F03E    	movff	postinc2,btemp+20
 12398  01CA9A  006F FF78  F03F    	movff	postinc2,btemp+21
 12399  01CAA0  006F FF78  F040    	movff	postinc2,btemp+22
 12400  01CAA6  006F FF78  F041    	movff	postinc2,btemp+23
 12401                           
 12402                           ;stkvar	_tm @ sp[(-2)+-3]
 12403  01CAAC  0EFB               	movlw	-5
 12404  01CAAE  006F FF8C  F034    	movff	plusw1,btemp+10
 12405  01CAB4  0EFC               	movlw	-4
 12406  01CAB6  006F FF8C  F035    	movff	plusw1,btemp+11
 12407  01CABC  0E12               	movlw	18
 12408  01CABE  2434               	addwf	(btemp+10)^0,w,c
 12409  01CAC0  6ED9               	movwf	fsr2l,c
 12410  01CAC2  0E00               	movlw	0
 12411  01CAC4  2035               	addwfc	(btemp+11)^0,w,c
 12412  01CAC6  6EDA               	movwf	fsr2h,c
 12413  01CAC8  006F FF78  F032    	movff	postinc2,btemp+8
 12414  01CACE  006F FF78  F033    	movff	postinc2,btemp+9
 12415  01CAD4  006F FF78  F034    	movff	postinc2,btemp+10
 12416  01CADA  006F FF78  F035    	movff	postinc2,btemp+11
 12417  01CAE0  0060  F0C8  F042   	movff	btemp+8,btemp+24
 12418  01CAE6  0060  F0CC  F043   	movff	btemp+9,btemp+25
 12419  01CAEC  0060  F0D0  F044   	movff	btemp+10,btemp+26
 12420  01CAF2  0060  F0D4  F045   	movff	btemp+11,btemp+27
 12421  01CAF8  6A46               	clrf	(btemp+28)^0,c
 12422  01CAFA  BE45               	btfsc	(btemp+27)^0,7,c
 12423  01CAFC  6846               	setf	(btemp+28)^0,c
 12424  01CAFE  0060  F118  F047   	movff	btemp+28,btemp+29
 12425  01CB04  0060  F118  F048   	movff	btemp+28,btemp+30
 12426  01CB0A  0060  F118  F049   	movff	btemp+28,btemp+31
 12427  01CB10  503A               	movf	(btemp+16)^0,w,c
 12428  01CB12  2442               	addwf	(btemp+24)^0,w,c
 12429  01CB14  6E32               	movwf	(btemp+8)^0,c
 12430  01CB16  503B               	movf	(btemp+17)^0,w,c
 12431  01CB18  2043               	addwfc	(btemp+25)^0,w,c
 12432  01CB1A  6E33               	movwf	(btemp+9)^0,c
 12433  01CB1C  503C               	movf	(btemp+18)^0,w,c
 12434  01CB1E  2044               	addwfc	(btemp+26)^0,w,c
 12435  01CB20  6E34               	movwf	(btemp+10)^0,c
 12436  01CB22  503D               	movf	(btemp+19)^0,w,c
 12437  01CB24  2045               	addwfc	(btemp+27)^0,w,c
 12438  01CB26  6E35               	movwf	(btemp+11)^0,c
 12439  01CB28  503E               	movf	(btemp+20)^0,w,c
 12440  01CB2A  2046               	addwfc	(btemp+28)^0,w,c
 12441  01CB2C  6E36               	movwf	(btemp+12)^0,c
 12442  01CB2E  503F               	movf	(btemp+21)^0,w,c
 12443  01CB30  2047               	addwfc	(btemp+29)^0,w,c
 12444  01CB32  6E37               	movwf	(btemp+13)^0,c
 12445  01CB34  5040               	movf	(btemp+22)^0,w,c
 12446  01CB36  2048               	addwfc	(btemp+30)^0,w,c
 12447  01CB38  6E38               	movwf	(btemp+14)^0,c
 12448  01CB3A  5041               	movf	(btemp+23)^0,w,c
 12449  01CB3C  2049               	addwfc	(btemp+31)^0,w,c
 12450  01CB3E  6E39               	movwf	(btemp+15)^0,c
 12451  01CB40  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 12452  01CB46  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 12453  01CB4C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12454  01CB52  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12455  01CB58  0060  F0DB  FFE6   	movff	btemp+12,postinc1
 12456  01CB5E  0060  F0DF  FFE6   	movff	btemp+13,postinc1
 12457  01CB64  0060  F0E3  FFE6   	movff	btemp+14,postinc1
 12458  01CB6A  0060  F0E7  FFE6   	movff	btemp+15,postinc1
 12459  01CB70  EC7F  F094         	call	___secs_to_tm	;wreg free
 12460  01CB74  BE2D               	btfsc	(btemp+3)^0,7,c
 12461  01CB76  D71C               	goto	u16470
 12462                           
 12463                           ;stkvar	_tm @ sp[(0)+-3]
 12464  01CB78  0EFD               	movlw	-3
 12465  01CB7A  006F FF8C  F02A    	movff	plusw1,btemp
 12466  01CB80  0EFE               	movlw	-2
 12467  01CB82  006F FF8C  F02B    	movff	plusw1,btemp+1
 12468  01CB88                     l3517:
 12469                           
 12470                           ; ___localtime_r: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3,
      +                           argsize = 3, vargsize = 0
 12471  01CB88  52E5               	movf	postdec1,f,c
 12472  01CB8A  52E5               	movf	postdec1,f,c
 12473  01CB8C  52E5               	movf	postdec1,f,c
 12474  01CB8E  0012               	return		;funcret
 12475  01CB90                     __end_of___localtime_r:
 12476                           	opt callstack 0
 12477                           
 12478 ;; *************** function ___secs_to_zone *****************
 12479 ;; Defined at:
 12480 ;;		line 249 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 12481 ;; Parameters:    Size  Location     Type
 12482 ;;  t               8  [STACK] long long 
 12483 ;;  local           2  [STACK] int 
 12484 ;;  isdst           2  [STACK] PTR int 
 12485 ;;		 -> localtime@tm(24), 
 12486 ;;  offset          2  [STACK] PTR long 
 12487 ;;		 -> localtime@tm(24), 
 12488 ;;  oppoff          2  [STACK] PTR long 
 12489 ;;		 -> NULL(0), 
 12490 ;;  zonename        2  [STACK] PTR PTR const unsigned c
 12491 ;;		 -> localtime@tm(24), 
 12492 ;; Auto vars:     Size  Location     Type
 12493 ;;  alt             2  [STACK] unsigned int 
 12494 ;;  i               2    0        unsigned int 
 12495 ;;  y               8  [STACK] long long 
 12496 ;;  t1              8  [STACK] long long 
 12497 ;;  t0              8  [STACK] long long 
 12498 ;; Return value:  Size  Location     Type
 12499 ;;                  1  [STACK] void 
 12500 ;; Registers used:
 12501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12502 ;; Tracked objects:
 12503 ;;		On entry : 0/39
 12504 ;;		On exit  : 0/0
 12505 ;;		Unchanged: 0/0
 12506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12511 ;;Total ram usage:        0 bytes
 12512 ;; Hardware stack levels used:    1
 12513 ;; Hardware stack levels required when called:   19
 12514 ;; This function calls:
 12515 ;;		___aodiv
 12516 ;;		___year_to_secs
 12517 ;;		_do_tzset
 12518 ;;		_rule_to_secs
 12519 ;;		_scan_trans
 12520 ;;		_zi_read32
 12521 ;; This function is called by:
 12522 ;;		___localtime_r
 12523 ;; This function uses a reentrant model
 12524 ;;
 12525                           
 12526                           	psect	text38
 12527  015D5C                     __ptext38:
 12528                           	opt callstack 0
 12529  015D5C                     ___secs_to_zone:
 12530                           	opt callstack 0
 12531                           
 12532                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18, argsize = 18 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12533  015D5C  0E18               	movlw	24
 12534  015D5E  26E1               	addwf	fsr1l,f,c
 12535  015D60  0E00               	movlw	0
 12536  015D62  22E2               	addwfc	fsr1h,f,c
 12537                           
 12538                           ;incstack = 0
 12539  015D64  EC89  F0DE         	call	_do_tzset	;wreg free
 12540  015D68  0100               	movlb	0	; () banked
 12541  015D6A  51B8               	movf	___daylight& (0+255),w,b
 12542  015D6C  11B9               	iorwf	(___daylight+1)& (0+255),w,b
 12543  015D6E  B4D8               	btfsc	status,2,c
 12544  015D70  D356               	goto	u16250
 12545                           
 12546                           ; BSR set to: 0
 12547  015D72  0E58               	movlw	88
 12548  015D74  6EE6               	movwf	postinc1,c
 12549  015D76  0E85               	movlw	133
 12550  015D78  6EE6               	movwf	postinc1,c
 12551  015D7A  0EE1               	movlw	225
 12552  015D7C  6EE6               	movwf	postinc1,c
 12553  015D7E  0E01               	movlw	1
 12554  015D80  6EE6               	movwf	postinc1,c
 12555  015D82  0E00               	movlw	0
 12556  015D84  6EE6               	movwf	postinc1,c
 12557  015D86  0E00               	movlw	0
 12558  015D88  6EE6               	movwf	postinc1,c
 12559  015D8A  0E00               	movlw	0
 12560  015D8C  6EE6               	movwf	postinc1,c
 12561  015D8E  0E00               	movlw	0
 12562  015D90  6EE6               	movwf	postinc1,c
 12563                           
 12564                           ;stkvar	_t @ sp[(-32)+-8]
 12565  015D92  50E1               	movf	fsr1l,w,c
 12566  015D94  0FD8               	addlw	-40
 12567  015D96  6ED9               	movwf	fsr2l,c
 12568  015D98  50E2               	movf	fsr1h,w,c
 12569  015D9A  6EDA               	movwf	fsr2h,c
 12570  015D9C  0EFF               	movlw	255
 12571  015D9E  22DA               	addwfc	fsr2h,f,c
 12572  015DA0  006F FF7B FFE6     	movff	postinc2,postinc1
 12573  015DA6  006F FF7B FFE6     	movff	postinc2,postinc1
 12574  015DAC  006F FF7B FFE6     	movff	postinc2,postinc1
 12575  015DB2  006F FF7B FFE6     	movff	postinc2,postinc1
 12576  015DB8  006F FF7B FFE6     	movff	postinc2,postinc1
 12577  015DBE  006F FF7B FFE6     	movff	postinc2,postinc1
 12578  015DC4  006F FF7B FFE6     	movff	postinc2,postinc1
 12579  015DCA  006F FF7B FFE6     	movff	postinc2,postinc1
 12580  015DD0  EC09  F0E1         	call	___aodiv	;wreg free
 12581  015DD4  52E5               	movf	postdec1,f,c
 12582  015DD6  006F FF9C  F041    	movff	indf1,btemp+23
 12583  015DDC  52E5               	movf	postdec1,f,c
 12584  015DDE  006F FF9C  F040    	movff	indf1,btemp+22
 12585  015DE4  52E5               	movf	postdec1,f,c
 12586  015DE6  006F FF9C  F03F    	movff	indf1,btemp+21
 12587  015DEC  52E5               	movf	postdec1,f,c
 12588  015DEE  006F FF9C  F03E    	movff	indf1,btemp+20
 12589  015DF4  52E5               	movf	postdec1,f,c
 12590  015DF6  006F FF9C  F03D    	movff	indf1,btemp+19
 12591  015DFC  52E5               	movf	postdec1,f,c
 12592  015DFE  006F FF9C  F03C    	movff	indf1,btemp+18
 12593  015E04  52E5               	movf	postdec1,f,c
 12594  015E06  006F FF9C  F03B    	movff	indf1,btemp+17
 12595  015E0C  52E5               	movf	postdec1,f,c
 12596  015E0E  006F FF9C  F03A    	movff	indf1,btemp+16
 12597  015E14  0EF8               	movlw	248
 12598  015E16  26E1               	addwf	fsr1l,f,c
 12599  015E18  0EFF               	movlw	255
 12600  015E1A  22E2               	addwfc	fsr1h,f,c
 12601  015E1C  0E46               	movlw	70
 12602  015E1E  243A               	addwf	(btemp+16)^0,w,c
 12603  015E20  6E42               	movwf	(btemp+24)^0,c
 12604  015E22  0E00               	movlw	0
 12605  015E24  203B               	addwfc	(btemp+17)^0,w,c
 12606  015E26  6E43               	movwf	(btemp+25)^0,c
 12607  015E28  0E00               	movlw	0
 12608  015E2A  203C               	addwfc	(btemp+18)^0,w,c
 12609  015E2C  6E44               	movwf	(btemp+26)^0,c
 12610  015E2E  0E00               	movlw	0
 12611  015E30  203D               	addwfc	(btemp+19)^0,w,c
 12612  015E32  6E45               	movwf	(btemp+27)^0,c
 12613  015E34  0E00               	movlw	0
 12614  015E36  203E               	addwfc	(btemp+20)^0,w,c
 12615  015E38  6E46               	movwf	(btemp+28)^0,c
 12616  015E3A  0E00               	movlw	0
 12617  015E3C  203F               	addwfc	(btemp+21)^0,w,c
 12618  015E3E  6E47               	movwf	(btemp+29)^0,c
 12619  015E40  0E00               	movlw	0
 12620  015E42  2040               	addwfc	(btemp+22)^0,w,c
 12621  015E44  6E48               	movwf	(btemp+30)^0,c
 12622  015E46  0E00               	movlw	0
 12623  015E48  2041               	addwfc	(btemp+23)^0,w,c
 12624  015E4A  6E49               	movwf	(btemp+31)^0,c
 12625                           
 12626                           ;stkvar	_y @ sp[(-24)+0]
 12627  015E4C  0EE8               	movlw	-24
 12628  015E4E  0060  F10B  FFE3   	movff	btemp+24,plusw1
 12629  015E54  0EE9               	movlw	-23
 12630  015E56  0060  F10F  FFE3   	movff	btemp+25,plusw1
 12631  015E5C  0EEA               	movlw	-22
 12632  015E5E  0060  F113  FFE3   	movff	btemp+26,plusw1
 12633  015E64  0EEB               	movlw	-21
 12634  015E66  0060  F117  FFE3   	movff	btemp+27,plusw1
 12635  015E6C  0EEC               	movlw	-20
 12636  015E6E  0060  F11B  FFE3   	movff	btemp+28,plusw1
 12637  015E74  0EED               	movlw	-19
 12638  015E76  0060  F11F  FFE3   	movff	btemp+29,plusw1
 12639  015E7C  0EEE               	movlw	-18
 12640  015E7E  0060  F123  FFE3   	movff	btemp+30,plusw1
 12641  015E84  0EEF               	movlw	-17
 12642  015E86  0060  F127  FFE3   	movff	btemp+31,plusw1
 12643  015E8C  D010               	goto	l16660
 12644  015E8E                     l16658:
 12645                           
 12646                           ;stkvar	_y @ sp[(-24)+0]
 12647  015E8E  50E1               	movf	fsr1l,w,c
 12648  015E90  0FE8               	addlw	-24
 12649  015E92  6ED9               	movwf	fsr2l,c
 12650  015E94  50E2               	movf	fsr1h,w,c
 12651  015E96  6EDA               	movwf	fsr2h,c
 12652  015E98  0EFF               	movlw	255
 12653  015E9A  22DA               	addwfc	fsr2h,f,c
 12654  015E9C  06DE               	decf	postinc2,f,c
 12655  015E9E  0E00               	movlw	0
 12656  015EA0  5ADE               	subwfb	postinc2,f,c
 12657  015EA2  5ADE               	subwfb	postinc2,f,c
 12658  015EA4  5ADE               	subwfb	postinc2,f,c
 12659  015EA6  5ADE               	subwfb	postinc2,f,c
 12660  015EA8  5ADE               	subwfb	postinc2,f,c
 12661  015EAA  5ADE               	subwfb	postinc2,f,c
 12662  015EAC  5ADE               	subwfb	postinc2,f,c
 12663  015EAE                     l16660:
 12664  015EAE  0E00               	movlw	0
 12665  015EB0  6EE6               	movwf	postinc1,c
 12666  015EB2  0E00               	movlw	0
 12667  015EB4  6EE6               	movwf	postinc1,c
 12668                           
 12669                           ;stkvar	_y @ sp[(-26)+0]
 12670  015EB6  50E1               	movf	fsr1l,w,c
 12671  015EB8  0FE6               	addlw	-26
 12672  015EBA  6ED9               	movwf	fsr2l,c
 12673  015EBC  50E2               	movf	fsr1h,w,c
 12674  015EBE  6EDA               	movwf	fsr2h,c
 12675  015EC0  0EFF               	movlw	255
 12676  015EC2  22DA               	addwfc	fsr2h,f,c
 12677  015EC4  006F FF7B FFE6     	movff	postinc2,postinc1
 12678  015ECA  006F FF7B FFE6     	movff	postinc2,postinc1
 12679  015ED0  006F FF7B FFE6     	movff	postinc2,postinc1
 12680  015ED6  006F FF7B FFE6     	movff	postinc2,postinc1
 12681  015EDC  006F FF7B FFE6     	movff	postinc2,postinc1
 12682  015EE2  006F FF7B FFE6     	movff	postinc2,postinc1
 12683  015EE8  006F FF7B FFE6     	movff	postinc2,postinc1
 12684  015EEE  006F FF7B FFE6     	movff	postinc2,postinc1
 12685  015EF4  ECF5  F0A9         	call	___year_to_secs	;wreg free
 12686  015EF8  52E5               	movf	postdec1,f,c
 12687  015EFA  006F FF9C  F041    	movff	indf1,btemp+23
 12688  015F00  52E5               	movf	postdec1,f,c
 12689  015F02  006F FF9C  F040    	movff	indf1,btemp+22
 12690  015F08  52E5               	movf	postdec1,f,c
 12691  015F0A  006F FF9C  F03F    	movff	indf1,btemp+21
 12692  015F10  52E5               	movf	postdec1,f,c
 12693  015F12  006F FF9C  F03E    	movff	indf1,btemp+20
 12694  015F18  52E5               	movf	postdec1,f,c
 12695  015F1A  006F FF9C  F03D    	movff	indf1,btemp+19
 12696  015F20  52E5               	movf	postdec1,f,c
 12697  015F22  006F FF9C  F03C    	movff	indf1,btemp+18
 12698  015F28  52E5               	movf	postdec1,f,c
 12699  015F2A  006F FF9C  F03B    	movff	indf1,btemp+17
 12700  015F30  52E5               	movf	postdec1,f,c
 12701  015F32  006F FF9C  F03A    	movff	indf1,btemp+16
 12702  015F38  52E5               	movf	postdec1,f,c
 12703  015F3A  52E5               	movf	postdec1,f,c
 12704                           
 12705                           ;stkvar	_t @ sp[(-24)+-8]
 12706  015F3C  0EE0               	movlw	-32
 12707  015F3E  006F FF8C  F02A    	movff	plusw1,btemp
 12708  015F44  503A               	movf	(btemp+16)^0,w,c
 12709  015F46  5C2A               	subwf	btemp^0,w,c
 12710  015F48  0EE1               	movlw	-31
 12711  015F4A  006F FF8C  F02A    	movff	plusw1,btemp
 12712  015F50  503B               	movf	(btemp+17)^0,w,c
 12713  015F52  582A               	subwfb	btemp^0,w,c
 12714  015F54  0EE2               	movlw	-30
 12715  015F56  006F FF8C  F02A    	movff	plusw1,btemp
 12716  015F5C  503C               	movf	(btemp+18)^0,w,c
 12717  015F5E  582A               	subwfb	btemp^0,w,c
 12718  015F60  0EE3               	movlw	-29
 12719  015F62  006F FF8C  F02A    	movff	plusw1,btemp
 12720  015F68  503D               	movf	(btemp+19)^0,w,c
 12721  015F6A  582A               	subwfb	btemp^0,w,c
 12722  015F6C  0EE4               	movlw	-28
 12723  015F6E  006F FF8C  F02A    	movff	plusw1,btemp
 12724  015F74  503E               	movf	(btemp+20)^0,w,c
 12725  015F76  582A               	subwfb	btemp^0,w,c
 12726  015F78  0EE5               	movlw	-27
 12727  015F7A  006F FF8C  F02A    	movff	plusw1,btemp
 12728  015F80  503F               	movf	(btemp+21)^0,w,c
 12729  015F82  582A               	subwfb	btemp^0,w,c
 12730  015F84  0EE6               	movlw	-26
 12731  015F86  006F FF8C  F02A    	movff	plusw1,btemp
 12732  015F8C  5040               	movf	(btemp+22)^0,w,c
 12733  015F8E  582A               	subwfb	btemp^0,w,c
 12734  015F90  0EE7               	movlw	-25
 12735  015F92  50E3               	movf	plusw1,w,c
 12736  015F94  0A80               	xorlw	128
 12737  015F96  6E2A               	movwf	btemp^0,c
 12738  015F98  5041               	movf	(btemp+23)^0,w,c
 12739  015F9A  0A80               	xorlw	128
 12740  015F9C  582A               	subwfb	btemp^0,w,c
 12741  015F9E  B0D8               	btfsc	status,0,c
 12742  015FA0  D011               	goto	l16664
 12743  015FA2  D775               	goto	l16658
 12744  015FA4                     l16662:
 12745                           
 12746                           ;stkvar	_y @ sp[(-24)+0]
 12747  015FA4  50E1               	movf	fsr1l,w,c
 12748  015FA6  0FE8               	addlw	-24
 12749  015FA8  6ED9               	movwf	fsr2l,c
 12750  015FAA  50E2               	movf	fsr1h,w,c
 12751  015FAC  6EDA               	movwf	fsr2h,c
 12752  015FAE  0EFF               	movlw	255
 12753  015FB0  22DA               	addwfc	fsr2h,f,c
 12754  015FB2  2ADE               	incf	postinc2,f,c
 12755  015FB4  0E00               	movlw	0
 12756  015FB6  22DE               	addwfc	postinc2,f,c
 12757  015FB8  22DE               	addwfc	postinc2,f,c
 12758  015FBA  22DE               	addwfc	postinc2,f,c
 12759  015FBC  22DE               	addwfc	postinc2,f,c
 12760  015FBE  22DE               	addwfc	postinc2,f,c
 12761  015FC0  22DE               	addwfc	postinc2,f,c
 12762  015FC2  22DE               	addwfc	postinc2,f,c
 12763  015FC4                     l16664:
 12764                           
 12765                           ;stkvar	_t @ sp[(-24)+-8]
 12766  015FC4  0E00               	movlw	0
 12767  015FC6  6EE6               	movwf	postinc1,c
 12768  015FC8  0E00               	movlw	0
 12769  015FCA  6EE6               	movwf	postinc1,c
 12770                           
 12771                           ;stkvar	_y @ sp[(-26)+0]
 12772  015FCC  0EE6               	movlw	-26
 12773  015FCE  50E3               	movf	plusw1,w,c
 12774  015FD0  0F01               	addlw	1
 12775  015FD2  6E3A               	movwf	(btemp+16)^0,c
 12776  015FD4  0EE7               	movlw	-25
 12777  015FD6  006F FF8C  F03B    	movff	plusw1,btemp+17
 12778  015FDC  0E00               	movlw	0
 12779  015FDE  223B               	addwfc	(btemp+17)^0,f,c
 12780  015FE0  0EE8               	movlw	-24
 12781  015FE2  006F FF8C  F03C    	movff	plusw1,btemp+18
 12782  015FE8  0E00               	movlw	0
 12783  015FEA  223C               	addwfc	(btemp+18)^0,f,c
 12784  015FEC  0EE9               	movlw	-23
 12785  015FEE  006F FF8C  F03D    	movff	plusw1,btemp+19
 12786  015FF4  0E00               	movlw	0
 12787  015FF6  223D               	addwfc	(btemp+19)^0,f,c
 12788  015FF8  0EEA               	movlw	-22
 12789  015FFA  006F FF8C  F03E    	movff	plusw1,btemp+20
 12790  016000  0E00               	movlw	0
 12791  016002  223E               	addwfc	(btemp+20)^0,f,c
 12792  016004  0EEB               	movlw	-21
 12793  016006  006F FF8C  F03F    	movff	plusw1,btemp+21
 12794  01600C  0E00               	movlw	0
 12795  01600E  223F               	addwfc	(btemp+21)^0,f,c
 12796  016010  0EEC               	movlw	-20
 12797  016012  006F FF8C  F040    	movff	plusw1,btemp+22
 12798  016018  0E00               	movlw	0
 12799  01601A  2240               	addwfc	(btemp+22)^0,f,c
 12800  01601C  0EED               	movlw	-19
 12801  01601E  006F FF8C  F041    	movff	plusw1,btemp+23
 12802  016024  0E00               	movlw	0
 12803  016026  2241               	addwfc	(btemp+23)^0,f,c
 12804  016028  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 12805  01602E  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 12806  016034  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 12807  01603A  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 12808  016040  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 12809  016046  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 12810  01604C  0060  F103  FFE6   	movff	btemp+22,postinc1
 12811  016052  0060  F107  FFE6   	movff	btemp+23,postinc1
 12812  016058  ECF5  F0A9         	call	___year_to_secs	;wreg free
 12813  01605C  52E5               	movf	postdec1,f,c
 12814  01605E  006F FF9C  F041    	movff	indf1,btemp+23
 12815  016064  52E5               	movf	postdec1,f,c
 12816  016066  006F FF9C  F040    	movff	indf1,btemp+22
 12817  01606C  52E5               	movf	postdec1,f,c
 12818  01606E  006F FF9C  F03F    	movff	indf1,btemp+21
 12819  016074  52E5               	movf	postdec1,f,c
 12820  016076  006F FF9C  F03E    	movff	indf1,btemp+20
 12821  01607C  52E5               	movf	postdec1,f,c
 12822  01607E  006F FF9C  F03D    	movff	indf1,btemp+19
 12823  016084  52E5               	movf	postdec1,f,c
 12824  016086  006F FF9C  F03C    	movff	indf1,btemp+18
 12825  01608C  52E5               	movf	postdec1,f,c
 12826  01608E  006F FF9C  F03B    	movff	indf1,btemp+17
 12827  016094  52E5               	movf	postdec1,f,c
 12828  016096  006F FF9C  F03A    	movff	indf1,btemp+16
 12829  01609C  52E5               	movf	postdec1,f,c
 12830  01609E  52E5               	movf	postdec1,f,c
 12831  0160A0  0EE0               	movlw	-32
 12832  0160A2  50E3               	movf	plusw1,w,c
 12833  0160A4  5C3A               	subwf	(btemp+16)^0,w,c
 12834  0160A6  0EE1               	movlw	-31
 12835  0160A8  50E3               	movf	plusw1,w,c
 12836  0160AA  583B               	subwfb	(btemp+17)^0,w,c
 12837  0160AC  0EE2               	movlw	-30
 12838  0160AE  50E3               	movf	plusw1,w,c
 12839  0160B0  583C               	subwfb	(btemp+18)^0,w,c
 12840  0160B2  0EE3               	movlw	-29
 12841  0160B4  50E3               	movf	plusw1,w,c
 12842  0160B6  583D               	subwfb	(btemp+19)^0,w,c
 12843  0160B8  0EE4               	movlw	-28
 12844  0160BA  50E3               	movf	plusw1,w,c
 12845  0160BC  583E               	subwfb	(btemp+20)^0,w,c
 12846  0160BE  0EE5               	movlw	-27
 12847  0160C0  50E3               	movf	plusw1,w,c
 12848  0160C2  583F               	subwfb	(btemp+21)^0,w,c
 12849  0160C4  0EE6               	movlw	-26
 12850  0160C6  50E3               	movf	plusw1,w,c
 12851  0160C8  5840               	subwfb	(btemp+22)^0,w,c
 12852  0160CA  5041               	movf	(btemp+23)^0,w,c
 12853  0160CC  0A80               	xorlw	128
 12854  0160CE  6E2A               	movwf	btemp^0,c
 12855  0160D0  0EE7               	movlw	-25
 12856  0160D2  50E3               	movf	plusw1,w,c
 12857  0160D4  0A80               	xorlw	128
 12858  0160D6  582A               	subwfb	btemp^0,w,c
 12859  0160D8  A0D8               	btfss	status,0,c
 12860  0160DA  D764               	goto	l16662
 12861                           
 12862                           ;stkvar	_y @ sp[(-24)+0]
 12863  0160DC  0EE8               	movlw	-24
 12864  0160DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12865  0160E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12866  0160EA  0EE5               	movlw	low _r0
 12867  0160EC  6EE6               	movwf	postinc1,c
 12868  0160EE  0E01               	movlw	high _r0
 12869  0160F0  6EE6               	movwf	postinc1,c
 12870  0160F2  ECF2  F0BA         	call	_rule_to_secs	;wreg free
 12871  0160F6  52E5               	movf	postdec1,f,c
 12872  0160F8  006F FF9C  F041    	movff	indf1,btemp+23
 12873  0160FE  52E5               	movf	postdec1,f,c
 12874  016100  006F FF9C  F040    	movff	indf1,btemp+22
 12875  016106  52E5               	movf	postdec1,f,c
 12876  016108  006F FF9C  F03F    	movff	indf1,btemp+21
 12877  01610E  52E5               	movf	postdec1,f,c
 12878  016110  006F FF9C  F03E    	movff	indf1,btemp+20
 12879  016116  52E5               	movf	postdec1,f,c
 12880  016118  006F FF9C  F03D    	movff	indf1,btemp+19
 12881  01611E  52E5               	movf	postdec1,f,c
 12882  016120  006F FF9C  F03C    	movff	indf1,btemp+18
 12883  016126  52E5               	movf	postdec1,f,c
 12884  016128  006F FF9C  F03B    	movff	indf1,btemp+17
 12885  01612E  52E5               	movf	postdec1,f,c
 12886  016130  006F FF9C  F03A    	movff	indf1,btemp+16
 12887                           
 12888                           ;stkvar	_t0 @ sp[(-24)+16]
 12889  016136  0EF8               	movlw	-8
 12890  016138  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 12891  01613E  0EF9               	movlw	-7
 12892  016140  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 12893  016146  0EFA               	movlw	-6
 12894  016148  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 12895  01614E  0EFB               	movlw	-5
 12896  016150  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 12897  016156  0EFC               	movlw	-4
 12898  016158  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 12899  01615E  0EFD               	movlw	-3
 12900  016160  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 12901  016166  0EFE               	movlw	-2
 12902  016168  0060  F103  FFE3   	movff	btemp+22,plusw1
 12903  01616E  0EFF               	movlw	-1
 12904  016170  0060  F107  FFE3   	movff	btemp+23,plusw1
 12905                           
 12906                           ;stkvar	_y @ sp[(-24)+0]
 12907  016176  0EE8               	movlw	-24
 12908  016178  006F FF8F FFE6     	movff	plusw1,postinc1
 12909  01617E  006F FF8F FFE6     	movff	plusw1,postinc1
 12910  016184  0EDB               	movlw	low _r1
 12911  016186  6EE6               	movwf	postinc1,c
 12912  016188  0E01               	movlw	high _r1
 12913  01618A  6EE6               	movwf	postinc1,c
 12914  01618C  ECF2  F0BA         	call	_rule_to_secs	;wreg free
 12915  016190  52E5               	movf	postdec1,f,c
 12916  016192  006F FF9C  F041    	movff	indf1,btemp+23
 12917  016198  52E5               	movf	postdec1,f,c
 12918  01619A  006F FF9C  F040    	movff	indf1,btemp+22
 12919  0161A0  52E5               	movf	postdec1,f,c
 12920  0161A2  006F FF9C  F03F    	movff	indf1,btemp+21
 12921  0161A8  52E5               	movf	postdec1,f,c
 12922  0161AA  006F FF9C  F03E    	movff	indf1,btemp+20
 12923  0161B0  52E5               	movf	postdec1,f,c
 12924  0161B2  006F FF9C  F03D    	movff	indf1,btemp+19
 12925  0161B8  52E5               	movf	postdec1,f,c
 12926  0161BA  006F FF9C  F03C    	movff	indf1,btemp+18
 12927  0161C0  52E5               	movf	postdec1,f,c
 12928  0161C2  006F FF9C  F03B    	movff	indf1,btemp+17
 12929  0161C8  52E5               	movf	postdec1,f,c
 12930  0161CA  006F FF9C  F03A    	movff	indf1,btemp+16
 12931                           
 12932                           ;stkvar	_t1 @ sp[(-24)+8]
 12933  0161D0  0EF0               	movlw	-16
 12934  0161D2  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 12935  0161D8  0EF1               	movlw	-15
 12936  0161DA  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 12937  0161E0  0EF2               	movlw	-14
 12938  0161E2  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 12939  0161E8  0EF3               	movlw	-13
 12940  0161EA  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 12941  0161F0  0EF4               	movlw	-12
 12942  0161F2  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 12943  0161F8  0EF5               	movlw	-11
 12944  0161FA  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 12945  016200  0EF6               	movlw	-10
 12946  016202  0060  F103  FFE3   	movff	btemp+22,plusw1
 12947  016208  0EF7               	movlw	-9
 12948  01620A  0060  F107  FFE3   	movff	btemp+23,plusw1
 12949                           
 12950                           ;stkvar	_local @ sp[(-24)+-10]
 12951  016210  0EDE               	movlw	-34
 12952  016212  006F FF8C  F02A    	movff	plusw1,btemp
 12953  016218  0EDF               	movlw	-33
 12954  01621A  50E3               	movf	plusw1,w,c
 12955  01621C  102A               	iorwf	btemp^0,w,c
 12956  01621E  A4D8               	btfss	status,2,c
 12957  016220  D044               	goto	l16674
 12958  016222  0060  F1C0  F03A   	movff	___timezone,btemp+16
 12959  016228  0060  F1C4  F03B   	movff	___timezone+1,btemp+17
 12960  01622E  0060  F1C8  F03C   	movff	___timezone+2,btemp+18
 12961  016234  0060  F1CC  F03D   	movff	___timezone+3,btemp+19
 12962  01623A  6A3E               	clrf	(btemp+20)^0,c
 12963  01623C  BE3D               	btfsc	(btemp+19)^0,7,c
 12964  01623E  683E               	setf	(btemp+20)^0,c
 12965  016240  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 12966  016246  0060  F0F8  F040   	movff	btemp+20,btemp+22
 12967  01624C  0060  F0F8  F041   	movff	btemp+20,btemp+23
 12968                           
 12969                           ;stkvar	_t0 @ sp[(-24)+16]
 12970  016252  50E1               	movf	fsr1l,w,c
 12971  016254  0FF8               	addlw	-8
 12972  016256  6ED9               	movwf	fsr2l,c
 12973  016258  50E2               	movf	fsr1h,w,c
 12974  01625A  6EDA               	movwf	fsr2h,c
 12975  01625C  0EFF               	movlw	255
 12976  01625E  22DA               	addwfc	fsr2h,f,c
 12977  016260  503A               	movf	(btemp+16)^0,w,c
 12978  016262  26DE               	addwf	postinc2,f,c
 12979  016264  503B               	movf	(btemp+17)^0,w,c
 12980  016266  22DE               	addwfc	postinc2,f,c
 12981  016268  503C               	movf	(btemp+18)^0,w,c
 12982  01626A  22DE               	addwfc	postinc2,f,c
 12983  01626C  503D               	movf	(btemp+19)^0,w,c
 12984  01626E  22DE               	addwfc	postinc2,f,c
 12985  016270  503E               	movf	(btemp+20)^0,w,c
 12986  016272  22DE               	addwfc	postinc2,f,c
 12987  016274  503F               	movf	(btemp+21)^0,w,c
 12988  016276  22DE               	addwfc	postinc2,f,c
 12989  016278  5040               	movf	(btemp+22)^0,w,c
 12990  01627A  22DE               	addwfc	postinc2,f,c
 12991  01627C  5041               	movf	(btemp+23)^0,w,c
 12992  01627E  22DE               	addwfc	postinc2,f,c
 12993                           
 12994                           ;stkvar	_t1 @ sp[(-24)+8]
 12995  016280  50E1               	movf	fsr1l,w,c
 12996  016282  0FF0               	addlw	-16
 12997  016284  6ED9               	movwf	fsr2l,c
 12998  016286  50E2               	movf	fsr1h,w,c
 12999  016288  6EDA               	movwf	fsr2h,c
 13000  01628A  0EFF               	movlw	255
 13001  01628C  22DA               	addwfc	fsr2h,f,c
 13002  01628E  0100               	movlb	0	; () banked
 13003  016290  51B6               	movf	_dst_off& (0+255),w,b
 13004  016292  26DE               	addwf	postinc2,f,c
 13005  016294  51B7               	movf	(_dst_off+1)& (0+255),w,b
 13006  016296  22DE               	addwfc	postinc2,f,c
 13007  016298  0E00               	movlw	0
 13008  01629A  BFB7               	btfsc	(_dst_off+1)& (0+255),7,b
 13009  01629C  0EFF               	movlw	255
 13010  01629E  22DE               	addwfc	postinc2,f,c
 13011  0162A0  22DE               	addwfc	postinc2,f,c
 13012  0162A2  22DE               	addwfc	postinc2,f,c
 13013  0162A4  22DE               	addwfc	postinc2,f,c
 13014  0162A6  22DE               	addwfc	postinc2,f,c
 13015  0162A8  22DE               	addwfc	postinc2,f,c
 13016  0162AA                     l16674:
 13017                           
 13018                           ;stkvar	_t1 @ sp[(-24)+8]
 13019                           ;stkvar	_t0 @ sp[(-24)+16]
 13020  0162AA  50E1               	movf	fsr1l,w,c
 13021  0162AC  0FF8               	addlw	-8
 13022  0162AE  6ED9               	movwf	fsr2l,c
 13023  0162B0  50E2               	movf	fsr1h,w,c
 13024  0162B2  6EDA               	movwf	fsr2h,c
 13025  0162B4  0EFF               	movlw	255
 13026  0162B6  22DA               	addwfc	fsr2h,f,c
 13027  0162B8  0EF0               	movlw	-16
 13028  0162BA  50E3               	movf	plusw1,w,c
 13029  0162BC  5CDE               	subwf	postinc2,w,c
 13030  0162BE  0EF1               	movlw	-15
 13031  0162C0  50E3               	movf	plusw1,w,c
 13032  0162C2  58DE               	subwfb	postinc2,w,c
 13033  0162C4  0EF2               	movlw	-14
 13034  0162C6  50E3               	movf	plusw1,w,c
 13035  0162C8  58DE               	subwfb	postinc2,w,c
 13036  0162CA  0EF3               	movlw	-13
 13037  0162CC  50E3               	movf	plusw1,w,c
 13038  0162CE  58DE               	subwfb	postinc2,w,c
 13039  0162D0  0EF4               	movlw	-12
 13040  0162D2  50E3               	movf	plusw1,w,c
 13041  0162D4  58DE               	subwfb	postinc2,w,c
 13042  0162D6  0EF5               	movlw	-11
 13043  0162D8  50E3               	movf	plusw1,w,c
 13044  0162DA  58DE               	subwfb	postinc2,w,c
 13045  0162DC  0EF6               	movlw	-10
 13046  0162DE  50E3               	movf	plusw1,w,c
 13047  0162E0  58DE               	subwfb	postinc2,w,c
 13048  0162E2  50DE               	movf	postinc2,w,c
 13049  0162E4  0A80               	xorlw	128
 13050  0162E6  6E2A               	movwf	btemp^0,c
 13051  0162E8  0EF7               	movlw	-9
 13052  0162EA  50E3               	movf	plusw1,w,c
 13053  0162EC  0A80               	xorlw	128
 13054  0162EE  582A               	subwfb	btemp^0,w,c
 13055  0162F0  B0D8               	btfsc	status,0,c
 13056  0162F2  D04B               	goto	l16684
 13057                           
 13058                           ;stkvar	_t0 @ sp[(-24)+16]
 13059                           ;stkvar	_t @ sp[(-24)+-8]
 13060  0162F4  50E1               	movf	fsr1l,w,c
 13061  0162F6  0FE0               	addlw	-32
 13062  0162F8  6ED9               	movwf	fsr2l,c
 13063  0162FA  50E2               	movf	fsr1h,w,c
 13064  0162FC  6EDA               	movwf	fsr2h,c
 13065  0162FE  0EFF               	movlw	255
 13066  016300  22DA               	addwfc	fsr2h,f,c
 13067  016302  0EF8               	movlw	-8
 13068  016304  50E3               	movf	plusw1,w,c
 13069  016306  5CDE               	subwf	postinc2,w,c
 13070  016308  0EF9               	movlw	-7
 13071  01630A  50E3               	movf	plusw1,w,c
 13072  01630C  58DE               	subwfb	postinc2,w,c
 13073  01630E  0EFA               	movlw	-6
 13074  016310  50E3               	movf	plusw1,w,c
 13075  016312  58DE               	subwfb	postinc2,w,c
 13076  016314  0EFB               	movlw	-5
 13077  016316  50E3               	movf	plusw1,w,c
 13078  016318  58DE               	subwfb	postinc2,w,c
 13079  01631A  0EFC               	movlw	-4
 13080  01631C  50E3               	movf	plusw1,w,c
 13081  01631E  58DE               	subwfb	postinc2,w,c
 13082  016320  0EFD               	movlw	-3
 13083  016322  50E3               	movf	plusw1,w,c
 13084  016324  58DE               	subwfb	postinc2,w,c
 13085  016326  0EFE               	movlw	-2
 13086  016328  50E3               	movf	plusw1,w,c
 13087  01632A  58DE               	subwfb	postinc2,w,c
 13088  01632C  50DE               	movf	postinc2,w,c
 13089  01632E  0A80               	xorlw	128
 13090  016330  6E2A               	movwf	btemp^0,c
 13091  016332  0EFF               	movlw	-1
 13092  016334  50E3               	movf	plusw1,w,c
 13093  016336  0A80               	xorlw	128
 13094  016338  582A               	subwfb	btemp^0,w,c
 13095  01633A  A0D8               	btfss	status,0,c
 13096  01633C  D070               	goto	u16250
 13097                           
 13098                           ;stkvar	_t1 @ sp[(-24)+8]
 13099                           ;stkvar	_t @ sp[(-24)+-8]
 13100  01633E  50E1               	movf	fsr1l,w,c
 13101  016340  0FE0               	addlw	-32
 13102  016342  6ED9               	movwf	fsr2l,c
 13103  016344  50E2               	movf	fsr1h,w,c
 13104  016346  6EDA               	movwf	fsr2h,c
 13105  016348  0EFF               	movlw	255
 13106  01634A  22DA               	addwfc	fsr2h,f,c
 13107  01634C  0EF0               	movlw	-16
 13108  01634E  50E3               	movf	plusw1,w,c
 13109  016350  5CDE               	subwf	postinc2,w,c
 13110  016352  0EF1               	movlw	-15
 13111  016354  50E3               	movf	plusw1,w,c
 13112  016356  58DE               	subwfb	postinc2,w,c
 13113  016358  0EF2               	movlw	-14
 13114  01635A  50E3               	movf	plusw1,w,c
 13115  01635C  58DE               	subwfb	postinc2,w,c
 13116  01635E  0EF3               	movlw	-13
 13117  016360  50E3               	movf	plusw1,w,c
 13118  016362  58DE               	subwfb	postinc2,w,c
 13119  016364  0EF4               	movlw	-12
 13120  016366  50E3               	movf	plusw1,w,c
 13121  016368  58DE               	subwfb	postinc2,w,c
 13122  01636A  0EF5               	movlw	-11
 13123  01636C  50E3               	movf	plusw1,w,c
 13124  01636E  58DE               	subwfb	postinc2,w,c
 13125  016370  0EF6               	movlw	-10
 13126  016372  50E3               	movf	plusw1,w,c
 13127  016374  58DE               	subwfb	postinc2,w,c
 13128  016376  50DE               	movf	postinc2,w,c
 13129  016378  0A80               	xorlw	128
 13130  01637A  6E2A               	movwf	btemp^0,c
 13131  01637C  0EF7               	movlw	-9
 13132  01637E  50E3               	movf	plusw1,w,c
 13133  016380  0A80               	xorlw	128
 13134  016382  582A               	subwfb	btemp^0,w,c
 13135  016384  A0D8               	btfss	status,0,c
 13136  016386  D0C1               	goto	l16702
 13137  016388  D04A               	goto	u16250
 13138  01638A                     l16684:
 13139                           
 13140                           ;stkvar	_t1 @ sp[(-24)+8]
 13141                           ;stkvar	_t @ sp[(-24)+-8]
 13142  01638A  50E1               	movf	fsr1l,w,c
 13143  01638C  0FE0               	addlw	-32
 13144  01638E  6ED9               	movwf	fsr2l,c
 13145  016390  50E2               	movf	fsr1h,w,c
 13146  016392  6EDA               	movwf	fsr2h,c
 13147  016394  0EFF               	movlw	255
 13148  016396  22DA               	addwfc	fsr2h,f,c
 13149  016398  0EF0               	movlw	-16
 13150  01639A  50E3               	movf	plusw1,w,c
 13151  01639C  5CDE               	subwf	postinc2,w,c
 13152  01639E  0EF1               	movlw	-15
 13153  0163A0  50E3               	movf	plusw1,w,c
 13154  0163A2  58DE               	subwfb	postinc2,w,c
 13155  0163A4  0EF2               	movlw	-14
 13156  0163A6  50E3               	movf	plusw1,w,c
 13157  0163A8  58DE               	subwfb	postinc2,w,c
 13158  0163AA  0EF3               	movlw	-13
 13159  0163AC  50E3               	movf	plusw1,w,c
 13160  0163AE  58DE               	subwfb	postinc2,w,c
 13161  0163B0  0EF4               	movlw	-12
 13162  0163B2  50E3               	movf	plusw1,w,c
 13163  0163B4  58DE               	subwfb	postinc2,w,c
 13164  0163B6  0EF5               	movlw	-11
 13165  0163B8  50E3               	movf	plusw1,w,c
 13166  0163BA  58DE               	subwfb	postinc2,w,c
 13167  0163BC  0EF6               	movlw	-10
 13168  0163BE  50E3               	movf	plusw1,w,c
 13169  0163C0  58DE               	subwfb	postinc2,w,c
 13170  0163C2  50DE               	movf	postinc2,w,c
 13171  0163C4  0A80               	xorlw	128
 13172  0163C6  6E2A               	movwf	btemp^0,c
 13173  0163C8  0EF7               	movlw	-9
 13174  0163CA  50E3               	movf	plusw1,w,c
 13175  0163CC  0A80               	xorlw	128
 13176  0163CE  582A               	subwfb	btemp^0,w,c
 13177  0163D0  A0D8               	btfss	status,0,c
 13178  0163D2  D09B               	goto	l16702
 13179                           
 13180                           ;stkvar	_t0 @ sp[(-24)+16]
 13181                           ;stkvar	_t @ sp[(-24)+-8]
 13182  0163D4  50E1               	movf	fsr1l,w,c
 13183  0163D6  0FE0               	addlw	-32
 13184  0163D8  6ED9               	movwf	fsr2l,c
 13185  0163DA  50E2               	movf	fsr1h,w,c
 13186  0163DC  6EDA               	movwf	fsr2h,c
 13187  0163DE  0EFF               	movlw	255
 13188  0163E0  22DA               	addwfc	fsr2h,f,c
 13189  0163E2  0EF8               	movlw	-8
 13190  0163E4  50E3               	movf	plusw1,w,c
 13191  0163E6  5CDE               	subwf	postinc2,w,c
 13192  0163E8  0EF9               	movlw	-7
 13193  0163EA  50E3               	movf	plusw1,w,c
 13194  0163EC  58DE               	subwfb	postinc2,w,c
 13195  0163EE  0EFA               	movlw	-6
 13196  0163F0  50E3               	movf	plusw1,w,c
 13197  0163F2  58DE               	subwfb	postinc2,w,c
 13198  0163F4  0EFB               	movlw	-5
 13199  0163F6  50E3               	movf	plusw1,w,c
 13200  0163F8  58DE               	subwfb	postinc2,w,c
 13201  0163FA  0EFC               	movlw	-4
 13202  0163FC  50E3               	movf	plusw1,w,c
 13203  0163FE  58DE               	subwfb	postinc2,w,c
 13204  016400  0EFD               	movlw	-3
 13205  016402  50E3               	movf	plusw1,w,c
 13206  016404  58DE               	subwfb	postinc2,w,c
 13207  016406  0EFE               	movlw	-2
 13208  016408  50E3               	movf	plusw1,w,c
 13209  01640A  58DE               	subwfb	postinc2,w,c
 13210  01640C  50DE               	movf	postinc2,w,c
 13211  01640E  0A80               	xorlw	128
 13212  016410  6E2A               	movwf	btemp^0,c
 13213  016412  0EFF               	movlw	-1
 13214  016414  50E3               	movf	plusw1,w,c
 13215  016416  0A80               	xorlw	128
 13216  016418  582A               	subwfb	btemp^0,w,c
 13217  01641A  B0D8               	btfsc	status,0,c
 13218  01641C  D076               	goto	l16702
 13219  01641E                     u16250:
 13220                           
 13221                           ;stkvar	_isdst @ sp[(-24)+-12]
 13222  01641E  0EDC               	movlw	-36
 13223  016420  006F FF8F FFD9     	movff	plusw1,fsr2l
 13224  016426  0EDD               	movlw	-35
 13225  016428  006F FF8F FFDA     	movff	plusw1,fsr2h
 13226  01642E  0E00               	movlw	0
 13227  016430  6EDE               	movwf	postinc2,c
 13228  016432  0E00               	movlw	0
 13229  016434  6EDD               	movwf	postdec2,c
 13230  016436  0060  F1C0  F032   	movff	___timezone,btemp+8
 13231  01643C  0060  F1C4  F033   	movff	___timezone+1,btemp+9
 13232  016442  0060  F1C8  F034   	movff	___timezone+2,btemp+10
 13233  016448  0060  F1CC  F035   	movff	___timezone+3,btemp+11
 13234  01644E  1E32               	comf	(btemp+8)^0,f,c
 13235  016450  1E33               	comf	(btemp+9)^0,f,c
 13236  016452  1E34               	comf	(btemp+10)^0,f,c
 13237  016454  1E35               	comf	(btemp+11)^0,f,c
 13238  016456  2A32               	incf	(btemp+8)^0,f,c
 13239  016458  0E00               	movlw	0
 13240  01645A  2233               	addwfc	(btemp+9)^0,f,c
 13241  01645C  2234               	addwfc	(btemp+10)^0,f,c
 13242  01645E  2235               	addwfc	(btemp+11)^0,f,c
 13243                           
 13244                           ;stkvar	_offset @ sp[(-24)+-14]
 13245  016460  0EDA               	movlw	-38
 13246  016462  006F FF8F FFD9     	movff	plusw1,fsr2l
 13247  016468  0EDB               	movlw	-37
 13248  01646A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13249  016470  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 13250  016476  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 13251  01647C  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 13252  016482  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 13253                           
 13254                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13255  016488  0ED8               	movlw	-40
 13256  01648A  006F FF8C  F02A    	movff	plusw1,btemp
 13257  016490  0ED9               	movlw	-39
 13258  016492  50E3               	movf	plusw1,w,c
 13259  016494  102A               	iorwf	btemp^0,w,c
 13260  016496  B4D8               	btfsc	status,2,c
 13261  016498  D029               	goto	l16698
 13262  01649A  0060  F2D8  F034   	movff	_dst_off,btemp+10
 13263  0164A0  0060  F2DC  F035   	movff	_dst_off+1,btemp+11
 13264  0164A6  1E34               	comf	(btemp+10)^0,f,c
 13265  0164A8  1E35               	comf	(btemp+11)^0,f,c
 13266  0164AA  4A34               	infsnz	(btemp+10)^0,f,c
 13267  0164AC  2A35               	incf	(btemp+11)^0,f,c
 13268  0164AE  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13269  0164B4  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13270  0164BA  0E00               	movlw	0
 13271  0164BC  BE2F               	btfsc	(btemp+5)^0,7,c
 13272  0164BE  0EFF               	movlw	255
 13273  0164C0  6E30               	movwf	(btemp+6)^0,c
 13274  0164C2  6E31               	movwf	(btemp+7)^0,c
 13275                           
 13276                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13277  0164C4  0ED8               	movlw	-40
 13278  0164C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 13279  0164CC  0ED9               	movlw	-39
 13280  0164CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 13281  0164D4  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 13282  0164DA  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 13283  0164E0  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 13284  0164E6  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 13285  0164EC                     l16698:
 13286                           
 13287                           ;stkvar	_zonename @ sp[(-24)+-18]
 13288  0164EC  0ED6               	movlw	-42
 13289  0164EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13290  0164F4  0ED7               	movlw	-41
 13291  0164F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13292  0164FC  0060  F1B3  FFDE   	movff	___tzname,postinc2
 13293  016502  0060  F1B7  FFDD   	movff	___tzname+1,postdec2
 13294  016508  D075               	goto	l4029
 13295  01650A                     l16702:
 13296                           
 13297                           ;stkvar	_isdst @ sp[(-24)+-12]
 13298  01650A  0EDC               	movlw	-36
 13299  01650C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13300  016512  0EDD               	movlw	-35
 13301  016514  006F FF8F FFDA     	movff	plusw1,fsr2h
 13302  01651A  0E01               	movlw	1
 13303  01651C  6EDE               	movwf	postinc2,c
 13304  01651E  0E00               	movlw	0
 13305  016520  6EDD               	movwf	postdec2,c
 13306  016522  0060  F2D8  F034   	movff	_dst_off,btemp+10
 13307  016528  0060  F2DC  F035   	movff	_dst_off+1,btemp+11
 13308  01652E  1E34               	comf	(btemp+10)^0,f,c
 13309  016530  1E35               	comf	(btemp+11)^0,f,c
 13310  016532  4A34               	infsnz	(btemp+10)^0,f,c
 13311  016534  2A35               	incf	(btemp+11)^0,f,c
 13312  016536  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13313  01653C  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13314  016542  0E00               	movlw	0
 13315  016544  BE2F               	btfsc	(btemp+5)^0,7,c
 13316  016546  0EFF               	movlw	255
 13317  016548  6E30               	movwf	(btemp+6)^0,c
 13318  01654A  6E31               	movwf	(btemp+7)^0,c
 13319                           
 13320                           ;stkvar	_offset @ sp[(-24)+-14]
 13321  01654C  0EDA               	movlw	-38
 13322  01654E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13323  016554  0EDB               	movlw	-37
 13324  016556  006F FF8F FFDA     	movff	plusw1,fsr2h
 13325  01655C  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 13326  016562  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 13327  016568  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 13328  01656E  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 13329                           
 13330                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13331  016574  0ED8               	movlw	-40
 13332  016576  006F FF8C  F02A    	movff	plusw1,btemp
 13333  01657C  0ED9               	movlw	-39
 13334  01657E  50E3               	movf	plusw1,w,c
 13335  016580  102A               	iorwf	btemp^0,w,c
 13336  016582  B4D8               	btfsc	status,2,c
 13337  016584  D029               	goto	l16710
 13338  016586  0060  F1C0  F032   	movff	___timezone,btemp+8
 13339  01658C  0060  F1C4  F033   	movff	___timezone+1,btemp+9
 13340  016592  0060  F1C8  F034   	movff	___timezone+2,btemp+10
 13341  016598  0060  F1CC  F035   	movff	___timezone+3,btemp+11
 13342  01659E  1E32               	comf	(btemp+8)^0,f,c
 13343  0165A0  1E33               	comf	(btemp+9)^0,f,c
 13344  0165A2  1E34               	comf	(btemp+10)^0,f,c
 13345  0165A4  1E35               	comf	(btemp+11)^0,f,c
 13346  0165A6  2A32               	incf	(btemp+8)^0,f,c
 13347  0165A8  0E00               	movlw	0
 13348  0165AA  2233               	addwfc	(btemp+9)^0,f,c
 13349  0165AC  2234               	addwfc	(btemp+10)^0,f,c
 13350  0165AE  2235               	addwfc	(btemp+11)^0,f,c
 13351                           
 13352                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13353  0165B0  0ED8               	movlw	-40
 13354  0165B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 13355  0165B8  0ED9               	movlw	-39
 13356  0165BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 13357  0165C0  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 13358  0165C6  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 13359  0165CC  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 13360  0165D2  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 13361  0165D8                     l16710:
 13362                           
 13363                           ;stkvar	_zonename @ sp[(-24)+-18]
 13364  0165D8  0ED6               	movlw	-42
 13365  0165DA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13366  0165E0  0ED7               	movlw	-41
 13367  0165E2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13368  0165E8  0060  F1BB  FFDE   	movff	___tzname+2,postinc2
 13369  0165EE  0060  F1BF  FFDD   	movff	___tzname+3,postdec2
 13370  0165F4                     l4029:
 13371                           
 13372                           ; ___secs_to_zone: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          18, argsize = 18, vargsize = 0
 13373  0165F4  0ED6               	movlw	214
 13374  0165F6  26E1               	addwf	fsr1l,f,c
 13375  0165F8  0EFF               	movlw	255
 13376  0165FA  22E2               	addwfc	fsr1h,f,c
 13377  0165FC  0012               	return		;funcret
 13378  0165FE                     __end_of___secs_to_zone:
 13379                           	opt callstack 0
 13380                           
 13381 ;; *************** function _scan_trans *****************
 13382 ;; Defined at:
 13383 ;;		line 145 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13384 ;; Parameters:    Size  Location     Type
 13385 ;;  t               8  [STACK] long long 
 13386 ;;  local           2  [STACK] int 
 13387 ;;  alt             2  [STACK] PTR unsigned int 
 13388 ;;		 -> alt(2), 
 13389 ;; Auto vars:     Size  Location     Type
 13390 ;;  x               8    0        unsigned long long 
 13391 ;;  a               2    0        unsigned int 
 13392 ;;  scale           2    0        int 
 13393 ;;  n               2    0        unsigned int 
 13394 ;;  m               2    0        unsigned int 
 13395 ;;  off             2    0        int 
 13396 ;; Return value:  Size  Location     Type
 13397 ;;                  2  [STACK] unsigned int 
 13398 ;; Registers used:
 13399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 13400 ;; Tracked objects:
 13401 ;;		On entry : 0/0
 13402 ;;		On exit  : 0/0
 13403 ;;		Unchanged: 0/0
 13404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13409 ;;Total ram usage:        0 bytes
 13410 ;; Hardware stack levels used:    1
 13411 ;; Hardware stack levels required when called:   16
 13412 ;; This function calls:
 13413 ;;		_zi_read32
 13414 ;; This function is called by:
 13415 ;;		___secs_to_zone
 13416 ;; This function uses a reentrant model
 13417 ;;
 13418                           
 13419                           	psect	text39
 13420  01FFC2                     __ptext39:
 13421                           	opt callstack 0
 13422  01FFC2                     _scan_trans:
 13423                           	opt callstack 11
 13424                           
 13425                           ;stkvar	_alt @ sp[(0)+-12]
 13426                           
 13427                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 12 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 13428                           ;incstack = 0
 13429  01FFC2  0EF4               	movlw	-12
 13430  01FFC4  006F FF8C  F02A    	movff	plusw1,btemp
 13431  01FFCA  0EF5               	movlw	-11
 13432  01FFCC  50E3               	movf	plusw1,w,c
 13433  01FFCE  102A               	iorwf	btemp^0,w,c
 13434  01FFD0  B4D8               	btfsc	status,2,c
 13435  01FFD2  D00C               	goto	l16438
 13436                           
 13437                           ;stkvar	_alt @ sp[(0)+-12]
 13438  01FFD4  0EF4               	movlw	-12
 13439  01FFD6  006F FF8F FFD9     	movff	plusw1,fsr2l
 13440  01FFDC  0EF5               	movlw	-11
 13441  01FFDE  006F FF8F FFDA     	movff	plusw1,fsr2h
 13442  01FFE4  0E00               	movlw	0
 13443  01FFE6  6EDE               	movwf	postinc2,c
 13444  01FFE8  0E00               	movlw	0
 13445  01FFEA  6EDD               	movwf	postdec2,c
 13446  01FFEC                     l16438:
 13447  01FFEC  0E00               	movlw	0
 13448  01FFEE  6E2A               	movwf	btemp^0,c
 13449  01FFF0  0E00               	movlw	0
 13450  01FFF2  6E2B               	movwf	(btemp+1)^0,c
 13451                           
 13452                           ; _scan_trans: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, a
      +                          rgsize = 12, vargsize = 0
 13453  01FFF4  0EF4               	movlw	244
 13454  01FFF6  26E1               	addwf	fsr1l,f,c
 13455  01FFF8  0EFF               	movlw	255
 13456  01FFFA  22E2               	addwfc	fsr1h,f,c
 13457  01FFFC  0012               	return		;funcret
 13458  01FFFE                     __end_of_scan_trans:
 13459                           	opt callstack 0
 13460                           
 13461 ;; *************** function _zi_read32 *****************
 13462 ;; Defined at:
 13463 ;;		line 100 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13464 ;; Parameters:    Size  Location     Type
 13465 ;;  z               2  [STACK] PTR const unsigned char 
 13466 ;;		 -> NULL(0), 
 13467 ;; Auto vars:     Size  Location     Type
 13468 ;;		None
 13469 ;; Return value:  Size  Location     Type
 13470 ;;                  4  [STACK] unsigned long 
 13471 ;; Registers used:
 13472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13473 ;; Tracked objects:
 13474 ;;		On entry : 0/0
 13475 ;;		On exit  : 0/0
 13476 ;;		Unchanged: 0/0
 13477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13482 ;;Total ram usage:        0 bytes
 13483 ;; Hardware stack levels used:    1
 13484 ;; Hardware stack levels required when called:   15
 13485 ;; This function calls:
 13486 ;;		Nothing
 13487 ;; This function is called by:
 13488 ;;		_scan_trans
 13489 ;;		___secs_to_zone
 13490 ;; This function uses a reentrant model
 13491 ;;
 13492                           
 13493                           	psect	text40
 13494  01FCE4                     __ptext40:
 13495                           	opt callstack 0
 13496  01FCE4                     _zi_read32:
 13497                           	opt callstack 12
 13498                           
 13499                           ;stkvar	_z @ sp[(0)+-2]
 13500                           
 13501                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13502                           ;incstack = 0
 13503  01FCE4  0EFE               	movlw	-2
 13504  01FCE6  006F FF8C  F034    	movff	plusw1,btemp+10
 13505  01FCEC  0EFF               	movlw	-1
 13506  01FCEE  006F FF8C  F035    	movff	plusw1,btemp+11
 13507  01FCF4  0E02               	movlw	2
 13508  01FCF6  2434               	addwf	(btemp+10)^0,w,c
 13509  01FCF8  6ED9               	movwf	fsr2l,c
 13510  01FCFA  0E00               	movlw	0
 13511  01FCFC  2035               	addwfc	(btemp+11)^0,w,c
 13512  01FCFE  6EDA               	movwf	fsr2h,c
 13513  01FD00  50DF               	movf	indf2,w,c
 13514  01FD02  6E35               	movwf	(btemp+11)^0,c
 13515  01FD04  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 13516  01FD0A  6A2F               	clrf	(btemp+5)^0,c
 13517  01FD0C  6A30               	clrf	(btemp+6)^0,c
 13518  01FD0E  6A31               	clrf	(btemp+7)^0,c
 13519  01FD10  0060  F0C0  F031   	movff	btemp+6,btemp+7
 13520  01FD16  0060  F0BC  F030   	movff	btemp+5,btemp+6
 13521  01FD1C  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 13522  01FD22  6A2E               	clrf	(btemp+4)^0,c
 13523                           
 13524                           ;stkvar	_z @ sp[(0)+-2]
 13525  01FD24  0EFE               	movlw	-2
 13526  01FD26  006F FF8C  F034    	movff	plusw1,btemp+10
 13527  01FD2C  0EFF               	movlw	-1
 13528  01FD2E  006F FF8C  F035    	movff	plusw1,btemp+11
 13529  01FD34  0E01               	movlw	1
 13530  01FD36  2434               	addwf	(btemp+10)^0,w,c
 13531  01FD38  6ED9               	movwf	fsr2l,c
 13532  01FD3A  0E00               	movlw	0
 13533  01FD3C  2035               	addwfc	(btemp+11)^0,w,c
 13534  01FD3E  6EDA               	movwf	fsr2h,c
 13535  01FD40  50DF               	movf	indf2,w,c
 13536  01FD42  6E35               	movwf	(btemp+11)^0,c
 13537  01FD44  0060  F0D4  F02A   	movff	btemp+11,btemp
 13538  01FD4A  6A2B               	clrf	(btemp+1)^0,c
 13539  01FD4C  6A2C               	clrf	(btemp+2)^0,c
 13540  01FD4E  6A2D               	clrf	(btemp+3)^0,c
 13541  01FD50  0060  F0AC  F02D   	movff	btemp+1,btemp+3
 13542  01FD56  0060  F0A8  F02C   	movff	btemp,btemp+2
 13543  01FD5C  6A2B               	clrf	(btemp+1)^0,c
 13544  01FD5E  6A2A               	clrf	btemp^0,c
 13545                           
 13546                           ;stkvar	_z @ sp[(0)+-2]
 13547  01FD60  0EFE               	movlw	-2
 13548  01FD62  006F FF8F FFD9     	movff	plusw1,fsr2l
 13549  01FD68  0EFF               	movlw	-1
 13550  01FD6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13551  01FD70  50DF               	movf	indf2,w,c
 13552  01FD72  6E32               	movwf	(btemp+8)^0,c
 13553  01FD74  6A33               	clrf	(btemp+9)^0,c
 13554  01FD76  6A34               	clrf	(btemp+10)^0,c
 13555  01FD78  6A35               	clrf	(btemp+11)^0,c
 13556  01FD7A  0060  F0C8  F035   	movff	btemp+8,btemp+11
 13557  01FD80  6A34               	clrf	(btemp+10)^0,c
 13558  01FD82  6A33               	clrf	(btemp+9)^0,c
 13559  01FD84  6A32               	clrf	(btemp+8)^0,c
 13560  01FD86  502A               	movf	btemp^0,w,c
 13561  01FD88  1232               	iorwf	(btemp+8)^0,f,c
 13562  01FD8A  502B               	movf	(btemp+1)^0,w,c
 13563  01FD8C  1233               	iorwf	(btemp+9)^0,f,c
 13564  01FD8E  502C               	movf	(btemp+2)^0,w,c
 13565  01FD90  1234               	iorwf	(btemp+10)^0,f,c
 13566  01FD92  502D               	movf	(btemp+3)^0,w,c
 13567  01FD94  1235               	iorwf	(btemp+11)^0,f,c
 13568  01FD96  502E               	movf	(btemp+4)^0,w,c
 13569  01FD98  1232               	iorwf	(btemp+8)^0,f,c
 13570  01FD9A  502F               	movf	(btemp+5)^0,w,c
 13571  01FD9C  1233               	iorwf	(btemp+9)^0,f,c
 13572  01FD9E  5030               	movf	(btemp+6)^0,w,c
 13573  01FDA0  1234               	iorwf	(btemp+10)^0,f,c
 13574  01FDA2  5031               	movf	(btemp+7)^0,w,c
 13575  01FDA4  1235               	iorwf	(btemp+11)^0,f,c
 13576                           
 13577                           ;stkvar	_z @ sp[(0)+-2]
 13578  01FDA6  0EFE               	movlw	-2
 13579  01FDA8  006F FF8C  F030    	movff	plusw1,btemp+6
 13580  01FDAE  0EFF               	movlw	-1
 13581  01FDB0  006F FF8C  F031    	movff	plusw1,btemp+7
 13582  01FDB6  0E03               	movlw	3
 13583  01FDB8  2430               	addwf	(btemp+6)^0,w,c
 13584  01FDBA  6ED9               	movwf	fsr2l,c
 13585  01FDBC  0E00               	movlw	0
 13586  01FDBE  2031               	addwfc	(btemp+7)^0,w,c
 13587  01FDC0  6EDA               	movwf	fsr2h,c
 13588  01FDC2  50DF               	movf	indf2,w,c
 13589  01FDC4  1032               	iorwf	(btemp+8)^0,w,c
 13590  01FDC6  6E2A               	movwf	btemp^0,c
 13591  01FDC8  5033               	movf	(btemp+9)^0,w,c
 13592  01FDCA  6E2B               	movwf	(btemp+1)^0,c
 13593  01FDCC  5034               	movf	(btemp+10)^0,w,c
 13594  01FDCE  6E2C               	movwf	(btemp+2)^0,c
 13595  01FDD0  5035               	movf	(btemp+11)^0,w,c
 13596  01FDD2  6E2D               	movwf	(btemp+3)^0,c
 13597                           
 13598                           ; _zi_read32: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 13599  01FDD4  52E5               	movf	postdec1,f,c
 13600  01FDD6  52E5               	movf	postdec1,f,c
 13601  01FDD8  0012               	return		;funcret
 13602  01FDDA                     __end_of_zi_read32:
 13603                           	opt callstack 0
 13604                           
 13605 ;; *************** function _rule_to_secs *****************
 13606 ;; Defined at:
 13607 ;;		line 218 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13608 ;; Parameters:    Size  Location     Type
 13609 ;;  rule            2  [STACK] PTR const int 
 13610 ;;		 -> r1(10), r0(10), 
 13611 ;;  year            2  [STACK] int 
 13612 ;; Auto vars:     Size  Location     Type
 13613 ;;  days            2  [STACK] int 
 13614 ;;  wday            2  [STACK] int 
 13615 ;;  t               8  [STACK] long long 
 13616 ;;  is_leap         2  [STACK] int 
 13617 ;;  n               2  [STACK] int 
 13618 ;;  x               2  [STACK] int 
 13619 ;;  m               2  [STACK] int 
 13620 ;;  d               2  [STACK] int 
 13621 ;; Return value:  Size  Location     Type
 13622 ;;                  8  [STACK] long long 
 13623 ;; Registers used:
 13624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 13625 ;; Tracked objects:
 13626 ;;		On entry : 0/0
 13627 ;;		On exit  : 0/0
 13628 ;;		Unchanged: 0/0
 13629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13634 ;;Total ram usage:        0 bytes
 13635 ;; Hardware stack levels used:    1
 13636 ;; Hardware stack levels required when called:   17
 13637 ;; This function calls:
 13638 ;;		___aldiv
 13639 ;;		___aomod
 13640 ;;		___lmul
 13641 ;;		___month_to_secs
 13642 ;;		___year_to_secs
 13643 ;;		_days_in_month
 13644 ;; This function is called by:
 13645 ;;		___secs_to_zone
 13646 ;; This function uses a reentrant model
 13647 ;;
 13648                           
 13649                           	psect	text41
 13650  0175E4                     __ptext41:
 13651                           	opt callstack 0
 13652  0175E4                     _rule_to_secs:
 13653                           	opt callstack 0
 13654                           
 13655                           ; autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 8 argfudge = 4
 13656  0175E4  0E1A               	movlw	26
 13657  0175E6  26E1               	addwf	fsr1l,f,c
 13658  0175E8  0E00               	movlw	0
 13659  0175EA  22E2               	addwfc	fsr1h,f,c
 13660                           
 13661                           ;stkvar	_is_leap @ sp[(-22)+12]
 13662                           
 13663                           ;incstack = 0
 13664  0175EC  0EF6               	movlw	246
 13665  0175EE  24E1               	addwf	fsr1l,w,c
 13666  0175F0  6E2A               	movwf	btemp^0,c
 13667  0175F2  0EFF               	movlw	255
 13668  0175F4  20E2               	addwfc	fsr1h,w,c
 13669  0175F6  6E2B               	movwf	(btemp+1)^0,c
 13670  0175F8  0060  F0AB  FFE6   	movff	btemp,postinc1
 13671  0175FE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 13672                           
 13673                           ;stkvar	_year @ sp[(-24)+-8]
 13674  017604  0EE0               	movlw	-32
 13675  017606  006F FF8C  F03A    	movff	plusw1,btemp+16
 13676  01760C  0EE1               	movlw	-31
 13677  01760E  006F FF8C  F03B    	movff	plusw1,btemp+17
 13678  017614  6A3C               	clrf	(btemp+18)^0,c
 13679  017616  BE3B               	btfsc	(btemp+17)^0,7,c
 13680  017618  683C               	setf	(btemp+18)^0,c
 13681  01761A  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 13682  017620  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 13683  017626  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 13684  01762C  0060  F0F0  F040   	movff	btemp+18,btemp+22
 13685  017632  0060  F0F0  F041   	movff	btemp+18,btemp+23
 13686  017638  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 13687  01763E  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 13688  017644  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 13689  01764A  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 13690  017650  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 13691  017656  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 13692  01765C  0060  F103  FFE6   	movff	btemp+22,postinc1
 13693  017662  0060  F107  FFE6   	movff	btemp+23,postinc1
 13694  017668  ECF5  F0A9         	call	___year_to_secs	;wreg free
 13695  01766C  52E5               	movf	postdec1,f,c
 13696  01766E  006F FF9C  F041    	movff	indf1,btemp+23
 13697  017674  52E5               	movf	postdec1,f,c
 13698  017676  006F FF9C  F040    	movff	indf1,btemp+22
 13699  01767C  52E5               	movf	postdec1,f,c
 13700  01767E  006F FF9C  F03F    	movff	indf1,btemp+21
 13701  017684  52E5               	movf	postdec1,f,c
 13702  017686  006F FF9C  F03E    	movff	indf1,btemp+20
 13703  01768C  52E5               	movf	postdec1,f,c
 13704  01768E  006F FF9C  F03D    	movff	indf1,btemp+19
 13705  017694  52E5               	movf	postdec1,f,c
 13706  017696  006F FF9C  F03C    	movff	indf1,btemp+18
 13707  01769C  52E5               	movf	postdec1,f,c
 13708  01769E  006F FF9C  F03B    	movff	indf1,btemp+17
 13709  0176A4  52E5               	movf	postdec1,f,c
 13710  0176A6  006F FF9C  F03A    	movff	indf1,btemp+16
 13711  0176AC  52E5               	movf	postdec1,f,c
 13712  0176AE  52E5               	movf	postdec1,f,c
 13713                           
 13714                           ;stkvar	_t @ sp[(-22)+4]
 13715  0176B0  0EEE               	movlw	-18
 13716  0176B2  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 13717  0176B8  0EEF               	movlw	-17
 13718  0176BA  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 13719  0176C0  0EF0               	movlw	-16
 13720  0176C2  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 13721  0176C8  0EF1               	movlw	-15
 13722  0176CA  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 13723  0176D0  0EF2               	movlw	-14
 13724  0176D2  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 13725  0176D8  0EF3               	movlw	-13
 13726  0176DA  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 13727  0176E0  0EF4               	movlw	-12
 13728  0176E2  0060  F103  FFE3   	movff	btemp+22,plusw1
 13729  0176E8  0EF5               	movlw	-11
 13730  0176EA  0060  F107  FFE3   	movff	btemp+23,plusw1
 13731                           
 13732                           ;stkvar	_rule @ sp[(-22)+-6]
 13733  0176F0  0EE4               	movlw	-28
 13734  0176F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 13735  0176F8  0EE5               	movlw	-27
 13736  0176FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 13737  017700  0E4D               	movlw	77
 13738  017702  18DE               	xorwf	postinc2,w,c
 13739  017704  10DE               	iorwf	postinc2,w,c
 13740  017706  B4D8               	btfsc	status,2,c
 13741  017708  D074               	goto	l16554
 13742                           
 13743                           ;stkvar	_rule @ sp[(-22)+-6]
 13744  01770A  0EE4               	movlw	-28
 13745  01770C  006F FF8C  F034    	movff	plusw1,btemp+10
 13746  017712  0EE5               	movlw	-27
 13747  017714  006F FF8C  F035    	movff	plusw1,btemp+11
 13748  01771A  0E02               	movlw	2
 13749  01771C  2434               	addwf	(btemp+10)^0,w,c
 13750  01771E  6ED9               	movwf	fsr2l,c
 13751  017720  0E00               	movlw	0
 13752  017722  2035               	addwfc	(btemp+11)^0,w,c
 13753  017724  6EDA               	movwf	fsr2h,c
 13754  017726  006F FF78  F034    	movff	postinc2,btemp+10
 13755  01772C  006F FF74  F035    	movff	postdec2,btemp+11
 13756                           
 13757                           ;stkvar	_x @ sp[(-22)+16]
 13758  017732  0EFA               	movlw	-6
 13759  017734  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13760  01773A  0EFB               	movlw	-5
 13761  01773C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13762                           
 13763                           ;stkvar	_rule @ sp[(-22)+-6]
 13764  017742  0EE4               	movlw	-28
 13765  017744  006F FF8F FFD9     	movff	plusw1,fsr2l
 13766  01774A  0EE5               	movlw	-27
 13767  01774C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13768  017752  0E4A               	movlw	74
 13769  017754  18DE               	xorwf	postinc2,w,c
 13770  017756  10DE               	iorwf	postinc2,w,c
 13771  017758  A4D8               	btfss	status,2,c
 13772  01775A  D021               	goto	l16552
 13773                           
 13774                           ;stkvar	_x @ sp[(-22)+16]
 13775  01775C  0EFB               	movlw	-5
 13776  01775E  BEE3               	btfsc	plusw1,7,c
 13777  017760  D014               	goto	u16080
 13778  017762  0EFB               	movlw	-5
 13779  017764  50E3               	movf	plusw1,w,c
 13780  017766  E108               	bnz	u16070
 13781  017768  0EFA               	movlw	-6
 13782  01776A  006F FF8C  F02A    	movff	plusw1,btemp
 13783  017770  0E3C               	movlw	60
 13784  017772  5E2A               	subwf	btemp^0,f,c
 13785  017774  A0D8               	btfss	status,0,c
 13786  017776  D009               	goto	u16080
 13787  017778                     u16070:
 13788                           
 13789                           ;stkvar	_is_leap @ sp[(-22)+12]
 13790  017778  0EF6               	movlw	-10
 13791  01777A  006F FF8C  F02A    	movff	plusw1,btemp
 13792  017780  0EF7               	movlw	-9
 13793  017782  50E3               	movf	plusw1,w,c
 13794  017784  102A               	iorwf	btemp^0,w,c
 13795  017786  A4D8               	btfss	status,2,c
 13796  017788  D00A               	goto	l16552
 13797  01778A                     u16080:
 13798                           
 13799                           ;stkvar	_x @ sp[(-22)+16]
 13800  01778A  50E1               	movf	fsr1l,w,c
 13801  01778C  0FFA               	addlw	-6
 13802  01778E  6ED9               	movwf	fsr2l,c
 13803  017790  50E2               	movf	fsr1h,w,c
 13804  017792  6EDA               	movwf	fsr2h,c
 13805  017794  0EFF               	movlw	255
 13806  017796  22DA               	addwfc	fsr2h,f,c
 13807  017798  06DE               	decf	postinc2,f,c
 13808  01779A  0E00               	movlw	0
 13809  01779C  5ADD               	subwfb	postdec2,f,c
 13810  01779E                     l16552:
 13811  01779E  0E80               	movlw	128
 13812  0177A0  6EE6               	movwf	postinc1,c
 13813  0177A2  0E51               	movlw	81
 13814  0177A4  6EE6               	movwf	postinc1,c
 13815  0177A6  0E01               	movlw	1
 13816  0177A8  6EE6               	movwf	postinc1,c
 13817  0177AA  0E00               	movlw	0
 13818  0177AC  6EE6               	movwf	postinc1,c
 13819                           
 13820                           ;stkvar	_x @ sp[(-26)+16]
 13821  0177AE  0EF6               	movlw	-10
 13822  0177B0  006F FF8C  F034    	movff	plusw1,btemp+10
 13823  0177B6  0EF7               	movlw	-9
 13824  0177B8  006F FF8C  F035    	movff	plusw1,btemp+11
 13825  0177BE  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13826  0177C4  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13827  0177CA  0E00               	movlw	0
 13828  0177CC  BE2F               	btfsc	(btemp+5)^0,7,c
 13829  0177CE  0EFF               	movlw	255
 13830  0177D0  6E30               	movwf	(btemp+6)^0,c
 13831  0177D2  6E31               	movwf	(btemp+7)^0,c
 13832  0177D4  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 13833  0177DA  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 13834  0177E0  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 13835  0177E6  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 13836  0177EC  EC46  F001         	call	___lmul	;wreg free
 13837  0177F0  D1EC               	goto	L10
 13838  0177F2                     l16554:
 13839                           
 13840                           ;stkvar	_rule @ sp[(-22)+-6]
 13841  0177F2  0EE4               	movlw	-28
 13842  0177F4  006F FF8C  F034    	movff	plusw1,btemp+10
 13843  0177FA  0EE5               	movlw	-27
 13844  0177FC  006F FF8C  F035    	movff	plusw1,btemp+11
 13845  017802  0E02               	movlw	2
 13846  017804  2434               	addwf	(btemp+10)^0,w,c
 13847  017806  6ED9               	movwf	fsr2l,c
 13848  017808  0E00               	movlw	0
 13849  01780A  2035               	addwfc	(btemp+11)^0,w,c
 13850  01780C  6EDA               	movwf	fsr2h,c
 13851  01780E  006F FF78  F034    	movff	postinc2,btemp+10
 13852  017814  006F FF74  F035    	movff	postdec2,btemp+11
 13853                           
 13854                           ;stkvar	_m @ sp[(-22)+18]
 13855  01781A  0EFC               	movlw	-4
 13856  01781C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13857  017822  0EFD               	movlw	-3
 13858  017824  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13859                           
 13860                           ;stkvar	_rule @ sp[(-22)+-6]
 13861  01782A  0EE4               	movlw	-28
 13862  01782C  006F FF8C  F034    	movff	plusw1,btemp+10
 13863  017832  0EE5               	movlw	-27
 13864  017834  006F FF8C  F035    	movff	plusw1,btemp+11
 13865  01783A  0E04               	movlw	4
 13866  01783C  2434               	addwf	(btemp+10)^0,w,c
 13867  01783E  6ED9               	movwf	fsr2l,c
 13868  017840  0E00               	movlw	0
 13869  017842  2035               	addwfc	(btemp+11)^0,w,c
 13870  017844  6EDA               	movwf	fsr2h,c
 13871  017846  006F FF78  F034    	movff	postinc2,btemp+10
 13872  01784C  006F FF74  F035    	movff	postdec2,btemp+11
 13873                           
 13874                           ;stkvar	_n @ sp[(-22)+14]
 13875  017852  0EF8               	movlw	-8
 13876  017854  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13877  01785A  0EF9               	movlw	-7
 13878  01785C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13879                           
 13880                           ;stkvar	_rule @ sp[(-22)+-6]
 13881  017862  0EE4               	movlw	-28
 13882  017864  006F FF8C  F034    	movff	plusw1,btemp+10
 13883  01786A  0EE5               	movlw	-27
 13884  01786C  006F FF8C  F035    	movff	plusw1,btemp+11
 13885  017872  0E06               	movlw	6
 13886  017874  2434               	addwf	(btemp+10)^0,w,c
 13887  017876  6ED9               	movwf	fsr2l,c
 13888  017878  0E00               	movlw	0
 13889  01787A  2035               	addwfc	(btemp+11)^0,w,c
 13890  01787C  6EDA               	movwf	fsr2h,c
 13891  01787E  006F FF78  F034    	movff	postinc2,btemp+10
 13892  017884  006F FF74  F035    	movff	postdec2,btemp+11
 13893                           
 13894                           ;stkvar	_d @ sp[(-22)+20]
 13895  01788A  0EFE               	movlw	-2
 13896  01788C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13897  017892  0EFF               	movlw	-1
 13898  017894  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13899                           
 13900                           ;stkvar	_is_leap @ sp[(-22)+12]
 13901  01789A  0EF6               	movlw	-10
 13902  01789C  006F FF8F FFE6     	movff	plusw1,postinc1
 13903  0178A2  006F FF8F FFE6     	movff	plusw1,postinc1
 13904                           
 13905                           ;stkvar	_m @ sp[(-24)+18]
 13906  0178A8  0EFA               	movlw	-6
 13907  0178AA  50E3               	movf	plusw1,w,c
 13908  0178AC  0FFF               	addlw	255
 13909  0178AE  6E34               	movwf	(btemp+10)^0,c
 13910  0178B0  0EFB               	movlw	-5
 13911  0178B2  006F FF8C  F035    	movff	plusw1,btemp+11
 13912  0178B8  0EFF               	movlw	255
 13913  0178BA  2235               	addwfc	(btemp+11)^0,f,c
 13914  0178BC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 13915  0178C2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 13916  0178C8  EC5B  F000         	call	___month_to_secs	;wreg free
 13917  0178CC  0060  F0A8  F03A   	movff	btemp,btemp+16
 13918  0178D2  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 13919  0178D8  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 13920  0178DE  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 13921  0178E4  6A3E               	clrf	(btemp+20)^0,c
 13922  0178E6  BE3D               	btfsc	(btemp+19)^0,7,c
 13923  0178E8  683E               	setf	(btemp+20)^0,c
 13924  0178EA  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 13925  0178F0  0060  F0F8  F040   	movff	btemp+20,btemp+22
 13926  0178F6  0060  F0F8  F041   	movff	btemp+20,btemp+23
 13927                           
 13928                           ;stkvar	_t @ sp[(-22)+4]
 13929  0178FC  50E1               	movf	fsr1l,w,c
 13930  0178FE  0FEE               	addlw	-18
 13931  017900  6ED9               	movwf	fsr2l,c
 13932  017902  50E2               	movf	fsr1h,w,c
 13933  017904  6EDA               	movwf	fsr2h,c
 13934  017906  0EFF               	movlw	255
 13935  017908  22DA               	addwfc	fsr2h,f,c
 13936  01790A  503A               	movf	(btemp+16)^0,w,c
 13937  01790C  26DE               	addwf	postinc2,f,c
 13938  01790E  503B               	movf	(btemp+17)^0,w,c
 13939  017910  22DE               	addwfc	postinc2,f,c
 13940  017912  503C               	movf	(btemp+18)^0,w,c
 13941  017914  22DE               	addwfc	postinc2,f,c
 13942  017916  503D               	movf	(btemp+19)^0,w,c
 13943  017918  22DE               	addwfc	postinc2,f,c
 13944  01791A  503E               	movf	(btemp+20)^0,w,c
 13945  01791C  22DE               	addwfc	postinc2,f,c
 13946  01791E  503F               	movf	(btemp+21)^0,w,c
 13947  017920  22DE               	addwfc	postinc2,f,c
 13948  017922  5040               	movf	(btemp+22)^0,w,c
 13949  017924  22DE               	addwfc	postinc2,f,c
 13950  017926  5041               	movf	(btemp+23)^0,w,c
 13951  017928  22DE               	addwfc	postinc2,f,c
 13952  01792A  0E80               	movlw	128
 13953  01792C  6EE6               	movwf	postinc1,c
 13954  01792E  0E51               	movlw	81
 13955  017930  6EE6               	movwf	postinc1,c
 13956  017932  0E01               	movlw	1
 13957  017934  6EE6               	movwf	postinc1,c
 13958  017936  0E00               	movlw	0
 13959  017938  6EE6               	movwf	postinc1,c
 13960  01793A  0E80               	movlw	128
 13961  01793C  6EE6               	movwf	postinc1,c
 13962  01793E  0E3A               	movlw	58
 13963  017940  6EE6               	movwf	postinc1,c
 13964  017942  0E09               	movlw	9
 13965  017944  6EE6               	movwf	postinc1,c
 13966  017946  0E00               	movlw	0
 13967  017948  6EE6               	movwf	postinc1,c
 13968  01794A  0E00               	movlw	0
 13969  01794C  6EE6               	movwf	postinc1,c
 13970  01794E  0E00               	movlw	0
 13971  017950  6EE6               	movwf	postinc1,c
 13972  017952  0E00               	movlw	0
 13973  017954  6EE6               	movwf	postinc1,c
 13974  017956  0E00               	movlw	0
 13975  017958  6EE6               	movwf	postinc1,c
 13976                           
 13977                           ;stkvar	_t @ sp[(-34)+4]
 13978  01795A  0EE2               	movlw	-30
 13979  01795C  50E3               	movf	plusw1,w,c
 13980  01795E  0F00               	addlw	0
 13981  017960  6E3A               	movwf	(btemp+16)^0,c
 13982  017962  0EE3               	movlw	-29
 13983  017964  006F FF8C  F03B    	movff	plusw1,btemp+17
 13984  01796A  0E46               	movlw	70
 13985  01796C  223B               	addwfc	(btemp+17)^0,f,c
 13986  01796E  0EE4               	movlw	-28
 13987  017970  006F FF8C  F03C    	movff	plusw1,btemp+18
 13988  017976  0E05               	movlw	5
 13989  017978  223C               	addwfc	(btemp+18)^0,f,c
 13990  01797A  0EE5               	movlw	-27
 13991  01797C  006F FF8C  F03D    	movff	plusw1,btemp+19
 13992  017982  0E00               	movlw	0
 13993  017984  223D               	addwfc	(btemp+19)^0,f,c
 13994  017986  0EE6               	movlw	-26
 13995  017988  006F FF8C  F03E    	movff	plusw1,btemp+20
 13996  01798E  0E00               	movlw	0
 13997  017990  223E               	addwfc	(btemp+20)^0,f,c
 13998  017992  0EE7               	movlw	-25
 13999  017994  006F FF8C  F03F    	movff	plusw1,btemp+21
 14000  01799A  0E00               	movlw	0
 14001  01799C  223F               	addwfc	(btemp+21)^0,f,c
 14002  01799E  0EE8               	movlw	-24
 14003  0179A0  006F FF8C  F040    	movff	plusw1,btemp+22
 14004  0179A6  0E00               	movlw	0
 14005  0179A8  2240               	addwfc	(btemp+22)^0,f,c
 14006  0179AA  0EE9               	movlw	-23
 14007  0179AC  006F FF8C  F041    	movff	plusw1,btemp+23
 14008  0179B2  0E00               	movlw	0
 14009  0179B4  2241               	addwfc	(btemp+23)^0,f,c
 14010  0179B6  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14011  0179BC  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14012  0179C2  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14013  0179C8  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14014  0179CE  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14015  0179D4  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14016  0179DA  0060  F103  FFE6   	movff	btemp+22,postinc1
 14017  0179E0  0060  F107  FFE6   	movff	btemp+23,postinc1
 14018  0179E6  ECC8  F0E5         	call	___aomod	;wreg free
 14019  0179EA  52E5               	movf	postdec1,f,c
 14020  0179EC  006F FF9C  F041    	movff	indf1,btemp+23
 14021  0179F2  52E5               	movf	postdec1,f,c
 14022  0179F4  006F FF9C  F040    	movff	indf1,btemp+22
 14023  0179FA  52E5               	movf	postdec1,f,c
 14024  0179FC  006F FF9C  F03F    	movff	indf1,btemp+21
 14025  017A02  52E5               	movf	postdec1,f,c
 14026  017A04  006F FF9C  F03E    	movff	indf1,btemp+20
 14027  017A0A  52E5               	movf	postdec1,f,c
 14028  017A0C  006F FF9C  F03D    	movff	indf1,btemp+19
 14029  017A12  52E5               	movf	postdec1,f,c
 14030  017A14  006F FF9C  F03C    	movff	indf1,btemp+18
 14031  017A1A  52E5               	movf	postdec1,f,c
 14032  017A1C  006F FF9C  F03B    	movff	indf1,btemp+17
 14033  017A22  52E5               	movf	postdec1,f,c
 14034  017A24  006F FF9C  F03A    	movff	indf1,btemp+16
 14035  017A2A  0EF8               	movlw	248
 14036  017A2C  26E1               	addwf	fsr1l,f,c
 14037  017A2E  0EFF               	movlw	255
 14038  017A30  22E2               	addwfc	fsr1h,f,c
 14039  017A32  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14040  017A38  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14041  017A3E  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 14042  017A44  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 14043  017A4A  0E00               	movlw	0
 14044  017A4C  BE2F               	btfsc	(btemp+5)^0,7,c
 14045  017A4E  0EFF               	movlw	255
 14046  017A50  6E30               	movwf	(btemp+6)^0,c
 14047  017A52  6E31               	movwf	(btemp+7)^0,c
 14048  017A54  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14049  017A5A  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14050  017A60  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14051  017A66  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14052  017A6C  EC88  F0EF         	call	___aldiv	;wreg free
 14053  017A70  0060  F0A8  F034   	movff	btemp,btemp+10
 14054  017A76  0060  F0AC  F035   	movff	btemp+1,btemp+11
 14055                           
 14056                           ;stkvar	_wday @ sp[(-22)+2]
 14057  017A7C  0EEC               	movlw	-20
 14058  017A7E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14059  017A84  0EED               	movlw	-19
 14060  017A86  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14061                           
 14062                           ;stkvar	_wday @ sp[(-22)+2]
 14063                           ;stkvar	_d @ sp[(-22)+20]
 14064  017A8C  0EFE               	movlw	-2
 14065  017A8E  006F FF8C  F034    	movff	plusw1,btemp+10
 14066  017A94  0EFF               	movlw	-1
 14067  017A96  006F FF8C  F035    	movff	plusw1,btemp+11
 14068  017A9C  0EEC               	movlw	-20
 14069  017A9E  50E3               	movf	plusw1,w,c
 14070  017AA0  5E34               	subwf	(btemp+10)^0,f,c
 14071  017AA2  0EED               	movlw	-19
 14072  017AA4  50E3               	movf	plusw1,w,c
 14073  017AA6  5A35               	subwfb	(btemp+11)^0,f,c
 14074                           
 14075                           ;stkvar	_days @ sp[(-22)+0]
 14076  017AA8  0EEA               	movlw	-22
 14077  017AAA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14078  017AB0  0EEB               	movlw	-21
 14079  017AB2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14080                           
 14081                           ;stkvar	_days @ sp[(-22)+0]
 14082  017AB8  0EEB               	movlw	-21
 14083  017ABA  AEE3               	btfss	plusw1,7,c
 14084  017ABC  D011               	goto	l4021
 14085                           
 14086                           ;stkvar	_days @ sp[(-22)+0]
 14087  017ABE  0EEA               	movlw	-22
 14088  017AC0  50E3               	movf	plusw1,w,c
 14089  017AC2  0F07               	addlw	7
 14090  017AC4  6E2A               	movwf	btemp^0,c
 14091  017AC6  0EEA               	movlw	-22
 14092  017AC8  0060  F0AB  FFE3   	movff	btemp,plusw1
 14093  017ACE  6A2A               	clrf	btemp^0,c
 14094  017AD0  0EEB               	movlw	-21
 14095  017AD2  50E3               	movf	plusw1,w,c
 14096  017AD4  202A               	addwfc	btemp^0,w,c
 14097  017AD6  6E2A               	movwf	btemp^0,c
 14098  017AD8  0EEB               	movlw	-21
 14099  017ADA  0060  F0AB  FFE3   	movff	btemp,plusw1
 14100  017AE0                     l4021:
 14101                           
 14102                           ;stkvar	_n @ sp[(-22)+14]
 14103  017AE0  0EF8               	movlw	-8
 14104  017AE2  006F FF8C  F02A    	movff	plusw1,btemp
 14105  017AE8  0E05               	movlw	5
 14106  017AEA  182A               	xorwf	btemp^0,w,c
 14107  017AEC  E134               	bnz	l16570
 14108  017AEE  0EF9               	movlw	-7
 14109  017AF0  50E3               	movf	plusw1,w,c
 14110  017AF2  A4D8               	btfss	status,2,c
 14111  017AF4  D030               	goto	l16570
 14112                           
 14113                           ;stkvar	_is_leap @ sp[(-22)+12]
 14114  017AF6  0EF6               	movlw	-10
 14115  017AF8  006F FF8F FFE6     	movff	plusw1,postinc1
 14116  017AFE  006F FF8F FFE6     	movff	plusw1,postinc1
 14117                           
 14118                           ;stkvar	_m @ sp[(-24)+18]
 14119  017B04  0EFA               	movlw	-6
 14120  017B06  006F FF8F FFE6     	movff	plusw1,postinc1
 14121  017B0C  006F FF8F FFE6     	movff	plusw1,postinc1
 14122  017B12  ECC7  F00B         	call	_days_in_month	;wreg free
 14123                           
 14124                           ;stkvar	_days @ sp[(-22)+0]
 14125  017B16  0EEA               	movlw	-22
 14126  017B18  50E3               	movf	plusw1,w,c
 14127  017B1A  0F1C               	addlw	28
 14128  017B1C  6E34               	movwf	(btemp+10)^0,c
 14129  017B1E  0EEB               	movlw	-21
 14130  017B20  006F FF8C  F035    	movff	plusw1,btemp+11
 14131  017B26  0E00               	movlw	0
 14132  017B28  2235               	addwfc	(btemp+11)^0,f,c
 14133  017B2A  502A               	movf	btemp^0,w,c
 14134  017B2C  5C34               	subwf	(btemp+10)^0,w,c
 14135  017B2E  5035               	movf	(btemp+11)^0,w,c
 14136  017B30  0A80               	xorlw	128
 14137  017B32  6E2C               	movwf	(btemp+2)^0,c
 14138  017B34  502B               	movf	(btemp+1)^0,w,c
 14139  017B36  0A80               	xorlw	128
 14140  017B38  582C               	subwfb	(btemp+2)^0,w,c
 14141  017B3A  A0D8               	btfss	status,0,c
 14142  017B3C  D00C               	goto	l16570
 14143  017B3E  0E04               	movlw	4
 14144  017B40  6E34               	movwf	(btemp+10)^0,c
 14145  017B42  0E00               	movlw	0
 14146  017B44  6E35               	movwf	(btemp+11)^0,c
 14147                           
 14148                           ;stkvar	_n @ sp[(-22)+14]
 14149  017B46  0EF8               	movlw	-8
 14150  017B48  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14151  017B4E  0EF9               	movlw	-7
 14152  017B50  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14153  017B56                     l16570:
 14154  017B56  0E80               	movlw	128
 14155  017B58  6EE6               	movwf	postinc1,c
 14156  017B5A  0E51               	movlw	81
 14157  017B5C  6EE6               	movwf	postinc1,c
 14158  017B5E  0E01               	movlw	1
 14159  017B60  6EE6               	movwf	postinc1,c
 14160  017B62  0E00               	movlw	0
 14161  017B64  6EE6               	movwf	postinc1,c
 14162                           
 14163                           ;stkvar	_days @ sp[(-26)+0]
 14164                           ;stkvar	_n @ sp[(-26)+14]
 14165  017B66  0EF4               	movlw	-12
 14166  017B68  006F FF8C  F034    	movff	plusw1,btemp+10
 14167  017B6E  0EF5               	movlw	-11
 14168  017B70  006F FF8C  F035    	movff	plusw1,btemp+11
 14169  017B76  0E07               	movlw	7
 14170  017B78  0234               	mulwf	(btemp+10)^0,c
 14171  017B7A  006F FFCC  F032    	movff	prodl,btemp+8
 14172  017B80  006F FFD0  F033    	movff	prodh,btemp+9
 14173  017B86  0235               	mulwf	(btemp+11)^0,c
 14174  017B88  50F3               	movf	prodl,w,c
 14175  017B8A  2633               	addwf	(btemp+9)^0,f,c
 14176  017B8C  0EE6               	movlw	-26
 14177  017B8E  50E3               	movf	plusw1,w,c
 14178  017B90  2632               	addwf	(btemp+8)^0,f,c
 14179  017B92  0EE7               	movlw	-25
 14180  017B94  50E3               	movf	plusw1,w,c
 14181  017B96  2233               	addwfc	(btemp+9)^0,f,c
 14182  017B98  0EF9               	movlw	249
 14183  017B9A  2432               	addwf	(btemp+8)^0,w,c
 14184  017B9C  6E2E               	movwf	(btemp+4)^0,c
 14185  017B9E  0EFF               	movlw	255
 14186  017BA0  2033               	addwfc	(btemp+9)^0,w,c
 14187  017BA2  6E2F               	movwf	(btemp+5)^0,c
 14188  017BA4  6A30               	clrf	(btemp+6)^0,c
 14189  017BA6  BE2F               	btfsc	(btemp+5)^0,7,c
 14190  017BA8  0630               	decf	(btemp+6)^0,f,c
 14191  017BAA  5030               	movf	(btemp+6)^0,w,c
 14192  017BAC  6E31               	movwf	(btemp+7)^0,c
 14193  017BAE  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14194  017BB4  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14195  017BBA  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14196  017BC0  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14197  017BC6  EC46  F001         	call	___lmul	;wreg free
 14198  017BCA                     L10:
 14199  017BCA  0060  F0A8  F03A   	movff	btemp,btemp+16
 14200  017BD0  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 14201  017BD6  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 14202  017BDC  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 14203  017BE2  6A3E               	clrf	(btemp+20)^0,c
 14204  017BE4  BE3D               	btfsc	(btemp+19)^0,7,c
 14205  017BE6  683E               	setf	(btemp+20)^0,c
 14206  017BE8  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 14207  017BEE  0060  F0F8  F040   	movff	btemp+20,btemp+22
 14208  017BF4  0060  F0F8  F041   	movff	btemp+20,btemp+23
 14209                           
 14210                           ;stkvar	_t @ sp[(-22)+4]
 14211  017BFA  50E1               	movf	fsr1l,w,c
 14212  017BFC  0FEE               	addlw	-18
 14213  017BFE  6ED9               	movwf	fsr2l,c
 14214  017C00  50E2               	movf	fsr1h,w,c
 14215  017C02  6EDA               	movwf	fsr2h,c
 14216  017C04  0EFF               	movlw	255
 14217  017C06  22DA               	addwfc	fsr2h,f,c
 14218  017C08  503A               	movf	(btemp+16)^0,w,c
 14219  017C0A  26DE               	addwf	postinc2,f,c
 14220  017C0C  503B               	movf	(btemp+17)^0,w,c
 14221  017C0E  22DE               	addwfc	postinc2,f,c
 14222  017C10  503C               	movf	(btemp+18)^0,w,c
 14223  017C12  22DE               	addwfc	postinc2,f,c
 14224  017C14  503D               	movf	(btemp+19)^0,w,c
 14225  017C16  22DE               	addwfc	postinc2,f,c
 14226  017C18  503E               	movf	(btemp+20)^0,w,c
 14227  017C1A  22DE               	addwfc	postinc2,f,c
 14228  017C1C  503F               	movf	(btemp+21)^0,w,c
 14229  017C1E  22DE               	addwfc	postinc2,f,c
 14230  017C20  5040               	movf	(btemp+22)^0,w,c
 14231  017C22  22DE               	addwfc	postinc2,f,c
 14232  017C24  5041               	movf	(btemp+23)^0,w,c
 14233  017C26  22DE               	addwfc	postinc2,f,c
 14234                           
 14235                           ;stkvar	_rule @ sp[(-22)+-6]
 14236  017C28  0EE4               	movlw	-28
 14237  017C2A  006F FF8C  F034    	movff	plusw1,btemp+10
 14238  017C30  0EE5               	movlw	-27
 14239  017C32  006F FF8C  F035    	movff	plusw1,btemp+11
 14240  017C38  0E08               	movlw	8
 14241  017C3A  2434               	addwf	(btemp+10)^0,w,c
 14242  017C3C  6ED9               	movwf	fsr2l,c
 14243  017C3E  0E00               	movlw	0
 14244  017C40  2035               	addwfc	(btemp+11)^0,w,c
 14245  017C42  6EDA               	movwf	fsr2h,c
 14246  017C44  006F FF78  F034    	movff	postinc2,btemp+10
 14247  017C4A  006F FF74  F035    	movff	postdec2,btemp+11
 14248                           
 14249                           ;stkvar	_t @ sp[(-22)+4]
 14250  017C50  50E1               	movf	fsr1l,w,c
 14251  017C52  0FEE               	addlw	-18
 14252  017C54  6ED9               	movwf	fsr2l,c
 14253  017C56  50E2               	movf	fsr1h,w,c
 14254  017C58  6EDA               	movwf	fsr2h,c
 14255  017C5A  0EFF               	movlw	255
 14256  017C5C  22DA               	addwfc	fsr2h,f,c
 14257  017C5E  5034               	movf	(btemp+10)^0,w,c
 14258  017C60  26DE               	addwf	postinc2,f,c
 14259  017C62  5035               	movf	(btemp+11)^0,w,c
 14260  017C64  22DE               	addwfc	postinc2,f,c
 14261  017C66  0E00               	movlw	0
 14262  017C68  BE35               	btfsc	(btemp+11)^0,7,c
 14263  017C6A  0EFF               	movlw	255
 14264  017C6C  22DE               	addwfc	postinc2,f,c
 14265  017C6E  22DE               	addwfc	postinc2,f,c
 14266  017C70  22DE               	addwfc	postinc2,f,c
 14267  017C72  22DE               	addwfc	postinc2,f,c
 14268  017C74  22DE               	addwfc	postinc2,f,c
 14269  017C76  22DE               	addwfc	postinc2,f,c
 14270                           
 14271                           ;stkvar	_t @ sp[(-22)+4]
 14272  017C78  0EEE               	movlw	238
 14273  017C7A  24E1               	addwf	fsr1l,w,c
 14274  017C7C  6ED9               	movwf	fsr2l,c
 14275  017C7E  0EFF               	movlw	255
 14276  017C80  20E2               	addwfc	fsr1h,w,c
 14277  017C82  6EDA               	movwf	fsr2h,c
 14278                           
 14279                           ;stkvar	?_rule_to_secs @ sp[(-22)+-8]
 14280  017C84  0E08               	movlw	8
 14281  017C86  6E2A               	movwf	btemp^0,c
 14282  017C88  0EE2               	movlw	-30
 14283  017C8A                     us1612999:
 14284  017C8A  006F FF7B FFE3     	movff	postinc2,plusw1
 14285  017C90  28E8               	incf	wreg,w,c
 14286  017C92  2E2A               	decfsz	btemp^0,f,c
 14287  017C94  D7FA               	bra	us1612999
 14288                           
 14289                           ; _rule_to_secs: autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8,
      +                           argsize = 8, vargsize = 0
 14290  017C96  0EEA               	movlw	234
 14291  017C98  26E1               	addwf	fsr1l,f,c
 14292  017C9A  0EFF               	movlw	255
 14293  017C9C  22E2               	addwfc	fsr1h,f,c
 14294  017C9E  0012               	return		;funcret
 14295  017CA0                     __end_of_rule_to_secs:
 14296                           	opt callstack 0
 14297                           
 14298 ;; *************** function _days_in_month *****************
 14299 ;; Defined at:
 14300 ;;		line 210 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 14301 ;; Parameters:    Size  Location     Type
 14302 ;;  m               2  [STACK] int 
 14303 ;;  is_leap         2  [STACK] int 
 14304 ;; Auto vars:     Size  Location     Type
 14305 ;;		None
 14306 ;; Return value:  Size  Location     Type
 14307 ;;                  2  [STACK] int 
 14308 ;; Registers used:
 14309 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14310 ;; Tracked objects:
 14311 ;;		On entry : 0/0
 14312 ;;		On exit  : 0/0
 14313 ;;		Unchanged: 0/0
 14314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14319 ;;Total ram usage:        0 bytes
 14320 ;; Hardware stack levels used:    1
 14321 ;; Hardware stack levels required when called:   15
 14322 ;; This function calls:
 14323 ;;		Nothing
 14324 ;; This function is called by:
 14325 ;;		_rule_to_secs
 14326 ;; This function uses a reentrant model
 14327 ;;
 14328                           
 14329                           	psect	text42
 14330  00178E                     __ptext42:
 14331                           	opt callstack 0
 14332  00178E                     _days_in_month:
 14333                           	opt callstack 11
 14334                           
 14335                           ;stkvar	_m @ sp[(0)+-2]
 14336                           
 14337                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14338                           ;incstack = 0
 14339  00178E  0EFE               	movlw	-2
 14340  001790  006F FF8C  F02A    	movff	plusw1,btemp
 14341  001796  0E02               	movlw	2
 14342  001798  182A               	xorwf	btemp^0,w,c
 14343  00179A  E10D               	bnz	l11630
 14344  00179C  0EFF               	movlw	-1
 14345  00179E  50E3               	movf	plusw1,w,c
 14346  0017A0  A4D8               	btfss	status,2,c
 14347  0017A2  D009               	goto	l11630
 14348                           
 14349                           ;stkvar	_is_leap @ sp[(0)+-4]
 14350  0017A4  0EFC               	movlw	-4
 14351  0017A6  50E3               	movf	plusw1,w,c
 14352  0017A8  0F1C               	addlw	28
 14353  0017AA  6E2A               	movwf	btemp^0,c
 14354  0017AC  0EFD               	movlw	-3
 14355  0017AE  006F FF8C  F02B    	movff	plusw1,btemp+1
 14356  0017B4  D017               	goto	L11
 14357  0017B6                     l11630:
 14358  0017B6  0EFF               	movlw	255
 14359  0017B8  6E35               	movwf	(btemp+11)^0,c
 14360                           
 14361                           ;stkvar	_m @ sp[(0)+-2]
 14362  0017BA  0EFE               	movlw	-2
 14363  0017BC  50E3               	movf	plusw1,w,c
 14364  0017BE  2435               	addwf	(btemp+11)^0,w,c
 14365  0017C0  6E34               	movwf	(btemp+10)^0,c
 14366  0017C2  0ED5               	movlw	213
 14367  0017C4  6E2A               	movwf	btemp^0,c
 14368  0017C6  0E0A               	movlw	10
 14369  0017C8  6E2B               	movwf	(btemp+1)^0,c
 14370  0017CA  2A34               	incf	(btemp+10)^0,f,c
 14371  0017CC  D003               	goto	u10704
 14372  0017CE                     u10705:
 14373  0017CE  342B               	rlcf	(btemp+1)^0,w,c
 14374  0017D0  322B               	rrcf	(btemp+1)^0,f,c
 14375  0017D2  322A               	rrcf	btemp^0,f,c
 14376  0017D4                     u10704:
 14377  0017D4  2E34               	decfsz	(btemp+10)^0,f,c
 14378  0017D6  D7FB               	goto	u10705
 14379  0017D8  0E01               	movlw	1
 14380  0017DA  162A               	andwf	btemp^0,f,c
 14381  0017DC  0E00               	movlw	0
 14382  0017DE  162B               	andwf	(btemp+1)^0,f,c
 14383  0017E0  0E1E               	movlw	30
 14384  0017E2  262A               	addwf	btemp^0,f,c
 14385  0017E4                     L11:
 14386  0017E4  0E00               	movlw	0
 14387  0017E6  222B               	addwfc	(btemp+1)^0,f,c
 14388                           
 14389                           ; _days_in_month: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14390  0017E8  52E5               	movf	postdec1,f,c
 14391  0017EA  52E5               	movf	postdec1,f,c
 14392  0017EC  52E5               	movf	postdec1,f,c
 14393  0017EE  52E5               	movf	postdec1,f,c
 14394  0017F0  0012               	return		;funcret
 14395  0017F2                     __end_of_days_in_month:
 14396                           	opt callstack 0
 14397                           
 14398 ;; *************** function ___year_to_secs *****************
 14399 ;; Defined at:
 14400 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__year_to_secs.c"
 14401 ;; Parameters:    Size  Location     Type
 14402 ;;  year            8  [STACK] long long 
 14403 ;;  is_leap         2  [STACK] PTR int 
 14404 ;;		 -> F5(2), is_leap(2), NULL(0), 
 14405 ;; Auto vars:     Size  Location     Type
 14406 ;;  y               2  [STACK] int 
 14407 ;;  leaps           2  [STACK] int 
 14408 ;;  rem             2  [STACK] int 
 14409 ;;  5               2  [STACK] int 
 14410 ;;  centuries       2  [STACK] int 
 14411 ;;  leaps           2  [STACK] int 
 14412 ;;  cycles          2  [STACK] int 
 14413 ;; Return value:  Size  Location     Type
 14414 ;;                  8  [STACK] long long 
 14415 ;; Registers used:
 14416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, prodl, prodh
 14417 ;; Tracked objects:
 14418 ;;		On entry : 0/0
 14419 ;;		On exit  : 0/0
 14420 ;;		Unchanged: 0/0
 14421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14426 ;;Total ram usage:        0 bytes
 14427 ;; Hardware stack levels used:    1
 14428 ;; Hardware stack levels required when called:   16
 14429 ;; This function calls:
 14430 ;;		___aodiv
 14431 ;;		___aomod
 14432 ;;		___lmul
 14433 ;;		___omul
 14434 ;; This function is called by:
 14435 ;;		_rule_to_secs
 14436 ;;		___secs_to_zone
 14437 ;; This function uses a reentrant model
 14438 ;;
 14439                           
 14440                           	psect	text43
 14441  0153EA                     __ptext43:
 14442                           	opt callstack 0
 14443  0153EA                     ___year_to_secs:
 14444                           	opt callstack 0
 14445                           
 14446                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 14447  0153EA  0E0E               	movlw	14
 14448  0153EC  26E1               	addwf	fsr1l,f,c
 14449  0153EE  0E00               	movlw	0
 14450  0153F0  22E2               	addwfc	fsr1h,f,c
 14451                           
 14452                           ;stkvar	_year @ sp[(-14)+-8]
 14453                           
 14454                           ;incstack = 0
 14455  0153F2  0EEA               	movlw	-22
 14456  0153F4  50E3               	movf	plusw1,w,c
 14457  0153F6  0FFE               	addlw	254
 14458  0153F8  6E3A               	movwf	(btemp+16)^0,c
 14459  0153FA  0EEB               	movlw	-21
 14460  0153FC  006F FF8C  F03B    	movff	plusw1,btemp+17
 14461  015402  0EFF               	movlw	255
 14462  015404  223B               	addwfc	(btemp+17)^0,f,c
 14463  015406  0EEC               	movlw	-20
 14464  015408  006F FF8C  F03C    	movff	plusw1,btemp+18
 14465  01540E  0EFF               	movlw	255
 14466  015410  223C               	addwfc	(btemp+18)^0,f,c
 14467  015412  0EED               	movlw	-19
 14468  015414  006F FF8C  F03D    	movff	plusw1,btemp+19
 14469  01541A  0EFF               	movlw	255
 14470  01541C  223D               	addwfc	(btemp+19)^0,f,c
 14471  01541E  0EEE               	movlw	-18
 14472  015420  006F FF8C  F03E    	movff	plusw1,btemp+20
 14473  015426  0EFF               	movlw	255
 14474  015428  223E               	addwfc	(btemp+20)^0,f,c
 14475  01542A  0EEF               	movlw	-17
 14476  01542C  006F FF8C  F03F    	movff	plusw1,btemp+21
 14477  015432  0EFF               	movlw	255
 14478  015434  223F               	addwfc	(btemp+21)^0,f,c
 14479  015436  0EF0               	movlw	-16
 14480  015438  006F FF8C  F040    	movff	plusw1,btemp+22
 14481  01543E  0EFF               	movlw	255
 14482  015440  2240               	addwfc	(btemp+22)^0,f,c
 14483  015442  0EF1               	movlw	-15
 14484  015444  006F FF8C  F041    	movff	plusw1,btemp+23
 14485  01544A  0EFF               	movlw	255
 14486  01544C  2241               	addwfc	(btemp+23)^0,f,c
 14487  01544E  5041               	movf	(btemp+23)^0,w,c
 14488  015450  1040               	iorwf	(btemp+22)^0,w,c
 14489  015452  103F               	iorwf	(btemp+21)^0,w,c
 14490  015454  103E               	iorwf	(btemp+20)^0,w,c
 14491  015456  103D               	iorwf	(btemp+19)^0,w,c
 14492  015458  103C               	iorwf	(btemp+18)^0,w,c
 14493  01545A  103B               	iorwf	(btemp+17)^0,w,c
 14494  01545C  E103               	bnz	u10711
 14495  01545E  0E89               	movlw	137
 14496  015460  5C3A               	subwf	(btemp+16)^0,w,c
 14497  015462  B0D8               	btfsc	status,0,c
 14498  015464                     u10711:
 14499  015464  D0E7               	goto	l11656
 14500                           
 14501                           ;stkvar	_year @ sp[(-14)+-8]
 14502                           ;stkvar	_y @ sp[(-14)+0]
 14503  015466  0EEA               	movlw	-22
 14504  015468  006F FF8C  F02A    	movff	plusw1,btemp
 14505  01546E  0EF2               	movlw	-14
 14506  015470  0060  F0AB  FFE3   	movff	btemp,plusw1
 14507  015476  0EEB               	movlw	-21
 14508  015478  006F FF8C  F02A    	movff	plusw1,btemp
 14509  01547E  0EF3               	movlw	-13
 14510  015480  0060  F0AB  FFE3   	movff	btemp,plusw1
 14511                           
 14512                           ;stkvar	_y @ sp[(-14)+0]
 14513  015486  0EF2               	movlw	-14
 14514  015488  50E3               	movf	plusw1,w,c
 14515  01548A  0FBC               	addlw	188
 14516  01548C  6E34               	movwf	(btemp+10)^0,c
 14517  01548E  0EF3               	movlw	-13
 14518  015490  006F FF8C  F035    	movff	plusw1,btemp+11
 14519  015496  0EFF               	movlw	255
 14520  015498  2235               	addwfc	(btemp+11)^0,f,c
 14521  01549A  3435               	rlcf	(btemp+11)^0,w,c
 14522  01549C  3235               	rrcf	(btemp+11)^0,f,c
 14523  01549E  3234               	rrcf	(btemp+10)^0,f,c
 14524  0154A0  3435               	rlcf	(btemp+11)^0,w,c
 14525  0154A2  3235               	rrcf	(btemp+11)^0,f,c
 14526  0154A4  3234               	rrcf	(btemp+10)^0,f,c
 14527                           
 14528                           ;stkvar	_leaps @ sp[(-14)+2]
 14529  0154A6  0EF4               	movlw	-12
 14530  0154A8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14531  0154AE  0EF5               	movlw	-11
 14532  0154B0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14533  0154B6  0EBC               	movlw	188
 14534  0154B8  6E35               	movwf	(btemp+11)^0,c
 14535                           
 14536                           ;stkvar	_y @ sp[(-14)+0]
 14537  0154BA  0EF2               	movlw	-14
 14538  0154BC  50E3               	movf	plusw1,w,c
 14539  0154BE  2435               	addwf	(btemp+11)^0,w,c
 14540  0154C0  6E34               	movwf	(btemp+10)^0,c
 14541  0154C2  0E03               	movlw	3
 14542  0154C4  1634               	andwf	(btemp+10)^0,f,c
 14543  0154C6  A4D8               	btfss	status,2,c
 14544  0154C8  D01D               	goto	l11648
 14545                           
 14546                           ;stkvar	_leaps @ sp[(-14)+2]
 14547  0154CA  50E1               	movf	fsr1l,w,c
 14548  0154CC  0FF4               	addlw	-12
 14549  0154CE  6ED9               	movwf	fsr2l,c
 14550  0154D0  50E2               	movf	fsr1h,w,c
 14551  0154D2  6EDA               	movwf	fsr2h,c
 14552  0154D4  0EFF               	movlw	255
 14553  0154D6  22DA               	addwfc	fsr2h,f,c
 14554  0154D8  06DE               	decf	postinc2,f,c
 14555  0154DA  0E00               	movlw	0
 14556  0154DC  5ADD               	subwfb	postdec2,f,c
 14557                           
 14558                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14559  0154DE  0EE8               	movlw	-24
 14560  0154E0  006F FF8C  F02A    	movff	plusw1,btemp
 14561  0154E6  0EE9               	movlw	-23
 14562  0154E8  50E3               	movf	plusw1,w,c
 14563  0154EA  102A               	iorwf	btemp^0,w,c
 14564  0154EC  B4D8               	btfsc	status,2,c
 14565  0154EE  D01F               	goto	l11652
 14566                           
 14567                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14568  0154F0  0EE8               	movlw	-24
 14569  0154F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 14570  0154F8  0EE9               	movlw	-23
 14571  0154FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 14572  015500  0E01               	movlw	1
 14573  015502  D012               	goto	L12
 14574  015504                     l11648:
 14575                           
 14576                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14577  015504  0EE8               	movlw	-24
 14578  015506  006F FF8C  F02A    	movff	plusw1,btemp
 14579  01550C  0EE9               	movlw	-23
 14580  01550E  50E3               	movf	plusw1,w,c
 14581  015510  102A               	iorwf	btemp^0,w,c
 14582  015512  B4D8               	btfsc	status,2,c
 14583  015514  D00C               	goto	l11652
 14584                           
 14585                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14586  015516  0EE8               	movlw	-24
 14587  015518  006F FF8F FFD9     	movff	plusw1,fsr2l
 14588  01551E  0EE9               	movlw	-23
 14589  015520  006F FF8F FFDA     	movff	plusw1,fsr2h
 14590  015526  0E00               	movlw	0
 14591  015528                     L12:
 14592  015528  6EDE               	movwf	postinc2,c
 14593  01552A  0E00               	movlw	0
 14594  01552C  6EDD               	movwf	postdec2,c
 14595  01552E                     l11652:
 14596  01552E  0E80               	movlw	128
 14597  015530  6EE6               	movwf	postinc1,c
 14598  015532  0E33               	movlw	51
 14599  015534  6EE6               	movwf	postinc1,c
 14600  015536  0EE1               	movlw	225
 14601  015538  6EE6               	movwf	postinc1,c
 14602  01553A  0E01               	movlw	1
 14603  01553C  6EE6               	movwf	postinc1,c
 14604                           
 14605                           ;stkvar	_y @ sp[(-18)+0]
 14606  01553E  0EEE               	movlw	-18
 14607  015540  006F FF8C  F034    	movff	plusw1,btemp+10
 14608  015546  0EEF               	movlw	-17
 14609  015548  006F FF8C  F035    	movff	plusw1,btemp+11
 14610  01554E  0EBA               	movlw	186
 14611  015550  2434               	addwf	(btemp+10)^0,w,c
 14612  015552  6E2E               	movwf	(btemp+4)^0,c
 14613  015554  0EFF               	movlw	255
 14614  015556  2035               	addwfc	(btemp+11)^0,w,c
 14615  015558  6E2F               	movwf	(btemp+5)^0,c
 14616  01555A  6A30               	clrf	(btemp+6)^0,c
 14617  01555C  BE2F               	btfsc	(btemp+5)^0,7,c
 14618  01555E  0630               	decf	(btemp+6)^0,f,c
 14619  015560  5030               	movf	(btemp+6)^0,w,c
 14620  015562  6E31               	movwf	(btemp+7)^0,c
 14621  015564  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14622  01556A  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14623  015570  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14624  015576  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14625  01557C  EC46  F001         	call	___lmul	;wreg free
 14626  015580  0060  F0A8  F032   	movff	btemp,btemp+8
 14627  015586  0060  F0AC  F033   	movff	btemp+1,btemp+9
 14628  01558C  0060  F0B0  F034   	movff	btemp+2,btemp+10
 14629  015592  0060  F0B4  F035   	movff	btemp+3,btemp+11
 14630  015598  0E80               	movlw	128
 14631  01559A  6EE6               	movwf	postinc1,c
 14632  01559C  0E51               	movlw	81
 14633  01559E  6EE6               	movwf	postinc1,c
 14634  0155A0  0E01               	movlw	1
 14635  0155A2  6EE6               	movwf	postinc1,c
 14636  0155A4  0E00               	movlw	0
 14637  0155A6  6EE6               	movwf	postinc1,c
 14638                           
 14639                           ;stkvar	_leaps @ sp[(-18)+2]
 14640  0155A8  0EF0               	movlw	-16
 14641  0155AA  006F FF8C  F030    	movff	plusw1,btemp+6
 14642  0155B0  0EF1               	movlw	-15
 14643  0155B2  006F FF8C  F031    	movff	plusw1,btemp+7
 14644  0155B8  0060  F0C0  F02A   	movff	btemp+6,btemp
 14645  0155BE  0060  F0C4  F02B   	movff	btemp+7,btemp+1
 14646  0155C4  0E00               	movlw	0
 14647  0155C6  BE2B               	btfsc	(btemp+1)^0,7,c
 14648  0155C8  0EFF               	movlw	255
 14649  0155CA  6E2C               	movwf	(btemp+2)^0,c
 14650  0155CC  6E2D               	movwf	(btemp+3)^0,c
 14651  0155CE  0060  F0AB  FFE6   	movff	btemp,postinc1
 14652  0155D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 14653  0155DA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 14654  0155E0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 14655  0155E6  EC46  F001         	call	___lmul	;wreg free
 14656  0155EA  502A               	movf	btemp^0,w,c
 14657  0155EC  2432               	addwf	(btemp+8)^0,w,c
 14658  0155EE  6E2E               	movwf	(btemp+4)^0,c
 14659  0155F0  502B               	movf	(btemp+1)^0,w,c
 14660  0155F2  2033               	addwfc	(btemp+9)^0,w,c
 14661  0155F4  6E2F               	movwf	(btemp+5)^0,c
 14662  0155F6  502C               	movf	(btemp+2)^0,w,c
 14663  0155F8  2034               	addwfc	(btemp+10)^0,w,c
 14664  0155FA  6E30               	movwf	(btemp+6)^0,c
 14665  0155FC  502D               	movf	(btemp+3)^0,w,c
 14666  0155FE  2035               	addwfc	(btemp+11)^0,w,c
 14667  015600  6E31               	movwf	(btemp+7)^0,c
 14668  015602  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 14669  015608  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 14670  01560E  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 14671  015614  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 14672  01561A  6A3E               	clrf	(btemp+20)^0,c
 14673  01561C  BE3D               	btfsc	(btemp+19)^0,7,c
 14674  01561E  683E               	setf	(btemp+20)^0,c
 14675  015620  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 14676  015626  0060  F0F8  F040   	movff	btemp+20,btemp+22
 14677  01562C  0060  F0F8  F041   	movff	btemp+20,btemp+23
 14678  015632  D36F               	goto	L13
 14679  015634                     l11656:
 14680                           
 14681                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14682  015634  0EE8               	movlw	-24
 14683  015636  006F FF8C  F02A    	movff	plusw1,btemp
 14684  01563C  0EE9               	movlw	-23
 14685  01563E  50E3               	movf	plusw1,w,c
 14686  015640  102A               	iorwf	btemp^0,w,c
 14687  015642  A4D8               	btfss	status,2,c
 14688  015644  D012               	goto	l11662
 14689                           
 14690                           ;stkvar	F5 @ sp[(-14)+6]
 14691  015646  0EF8               	movlw	-8
 14692  015648  6AE3               	clrf	plusw1,c
 14693  01564A  0EF9               	movlw	-7
 14694  01564C  6AE3               	clrf	plusw1,c
 14695                           
 14696                           ;stkvar	F5 @ sp[(-14)+6]
 14697  01564E  0EF8               	movlw	248
 14698  015650  24E1               	addwf	fsr1l,w,c
 14699  015652  6E34               	movwf	(btemp+10)^0,c
 14700  015654  0EFF               	movlw	255
 14701  015656  20E2               	addwfc	fsr1h,w,c
 14702  015658  6E35               	movwf	(btemp+11)^0,c
 14703                           
 14704                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14705  01565A  0EE9               	movlw	-23
 14706  01565C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14707  015662  0EE8               	movlw	-24
 14708  015664  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14709  01566A                     l11662:
 14710  01566A  0E90               	movlw	144
 14711  01566C  6EE6               	movwf	postinc1,c
 14712  01566E  0E01               	movlw	1
 14713  015670  6EE6               	movwf	postinc1,c
 14714  015672  0E00               	movlw	0
 14715  015674  6EE6               	movwf	postinc1,c
 14716  015676  0E00               	movlw	0
 14717  015678  6EE6               	movwf	postinc1,c
 14718  01567A  0E00               	movlw	0
 14719  01567C  6EE6               	movwf	postinc1,c
 14720  01567E  0E00               	movlw	0
 14721  015680  6EE6               	movwf	postinc1,c
 14722  015682  0E00               	movlw	0
 14723  015684  6EE6               	movwf	postinc1,c
 14724  015686  0E00               	movlw	0
 14725  015688  6EE6               	movwf	postinc1,c
 14726                           
 14727                           ;stkvar	_year @ sp[(-22)+-8]
 14728  01568A  0EE2               	movlw	-30
 14729  01568C  50E3               	movf	plusw1,w,c
 14730  01568E  0F9C               	addlw	156
 14731  015690  6E3A               	movwf	(btemp+16)^0,c
 14732  015692  0EE3               	movlw	-29
 14733  015694  006F FF8C  F03B    	movff	plusw1,btemp+17
 14734  01569A  0EFF               	movlw	255
 14735  01569C  223B               	addwfc	(btemp+17)^0,f,c
 14736  01569E  0EE4               	movlw	-28
 14737  0156A0  006F FF8C  F03C    	movff	plusw1,btemp+18
 14738  0156A6  0EFF               	movlw	255
 14739  0156A8  223C               	addwfc	(btemp+18)^0,f,c
 14740  0156AA  0EE5               	movlw	-27
 14741  0156AC  006F FF8C  F03D    	movff	plusw1,btemp+19
 14742  0156B2  0EFF               	movlw	255
 14743  0156B4  223D               	addwfc	(btemp+19)^0,f,c
 14744  0156B6  0EE6               	movlw	-26
 14745  0156B8  006F FF8C  F03E    	movff	plusw1,btemp+20
 14746  0156BE  0EFF               	movlw	255
 14747  0156C0  223E               	addwfc	(btemp+20)^0,f,c
 14748  0156C2  0EE7               	movlw	-25
 14749  0156C4  006F FF8C  F03F    	movff	plusw1,btemp+21
 14750  0156CA  0EFF               	movlw	255
 14751  0156CC  223F               	addwfc	(btemp+21)^0,f,c
 14752  0156CE  0EE8               	movlw	-24
 14753  0156D0  006F FF8C  F040    	movff	plusw1,btemp+22
 14754  0156D6  0EFF               	movlw	255
 14755  0156D8  2240               	addwfc	(btemp+22)^0,f,c
 14756  0156DA  0EE9               	movlw	-23
 14757  0156DC  006F FF8C  F041    	movff	plusw1,btemp+23
 14758  0156E2  0EFF               	movlw	255
 14759  0156E4  2241               	addwfc	(btemp+23)^0,f,c
 14760  0156E6  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14761  0156EC  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14762  0156F2  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14763  0156F8  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14764  0156FE  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14765  015704  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14766  01570A  0060  F103  FFE6   	movff	btemp+22,postinc1
 14767  015710  0060  F107  FFE6   	movff	btemp+23,postinc1
 14768  015716  EC09  F0E1         	call	___aodiv	;wreg free
 14769  01571A  52E5               	movf	postdec1,f,c
 14770  01571C  006F FF9C  F041    	movff	indf1,btemp+23
 14771  015722  52E5               	movf	postdec1,f,c
 14772  015724  006F FF9C  F040    	movff	indf1,btemp+22
 14773  01572A  52E5               	movf	postdec1,f,c
 14774  01572C  006F FF9C  F03F    	movff	indf1,btemp+21
 14775  015732  52E5               	movf	postdec1,f,c
 14776  015734  006F FF9C  F03E    	movff	indf1,btemp+20
 14777  01573A  52E5               	movf	postdec1,f,c
 14778  01573C  006F FF9C  F03D    	movff	indf1,btemp+19
 14779  015742  52E5               	movf	postdec1,f,c
 14780  015744  006F FF9C  F03C    	movff	indf1,btemp+18
 14781  01574A  52E5               	movf	postdec1,f,c
 14782  01574C  006F FF9C  F03B    	movff	indf1,btemp+17
 14783  015752  52E5               	movf	postdec1,f,c
 14784  015754  006F FF9C  F03A    	movff	indf1,btemp+16
 14785  01575A  0EF8               	movlw	248
 14786  01575C  26E1               	addwf	fsr1l,f,c
 14787  01575E  0EFF               	movlw	255
 14788  015760  22E2               	addwfc	fsr1h,f,c
 14789  015762  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14790  015768  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14791                           
 14792                           ;stkvar	_cycles @ sp[(-14)+12]
 14793  01576E  0EFE               	movlw	-2
 14794  015770  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14795  015776  0EFF               	movlw	-1
 14796  015778  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14797  01577E  0E90               	movlw	144
 14798  015780  6EE6               	movwf	postinc1,c
 14799  015782  0E01               	movlw	1
 14800  015784  6EE6               	movwf	postinc1,c
 14801  015786  0E00               	movlw	0
 14802  015788  6EE6               	movwf	postinc1,c
 14803  01578A  0E00               	movlw	0
 14804  01578C  6EE6               	movwf	postinc1,c
 14805  01578E  0E00               	movlw	0
 14806  015790  6EE6               	movwf	postinc1,c
 14807  015792  0E00               	movlw	0
 14808  015794  6EE6               	movwf	postinc1,c
 14809  015796  0E00               	movlw	0
 14810  015798  6EE6               	movwf	postinc1,c
 14811  01579A  0E00               	movlw	0
 14812  01579C  6EE6               	movwf	postinc1,c
 14813                           
 14814                           ;stkvar	_year @ sp[(-22)+-8]
 14815  01579E  0EE2               	movlw	-30
 14816  0157A0  50E3               	movf	plusw1,w,c
 14817  0157A2  0F9C               	addlw	156
 14818  0157A4  6E3A               	movwf	(btemp+16)^0,c
 14819  0157A6  0EE3               	movlw	-29
 14820  0157A8  006F FF8C  F03B    	movff	plusw1,btemp+17
 14821  0157AE  0EFF               	movlw	255
 14822  0157B0  223B               	addwfc	(btemp+17)^0,f,c
 14823  0157B2  0EE4               	movlw	-28
 14824  0157B4  006F FF8C  F03C    	movff	plusw1,btemp+18
 14825  0157BA  0EFF               	movlw	255
 14826  0157BC  223C               	addwfc	(btemp+18)^0,f,c
 14827  0157BE  0EE5               	movlw	-27
 14828  0157C0  006F FF8C  F03D    	movff	plusw1,btemp+19
 14829  0157C6  0EFF               	movlw	255
 14830  0157C8  223D               	addwfc	(btemp+19)^0,f,c
 14831  0157CA  0EE6               	movlw	-26
 14832  0157CC  006F FF8C  F03E    	movff	plusw1,btemp+20
 14833  0157D2  0EFF               	movlw	255
 14834  0157D4  223E               	addwfc	(btemp+20)^0,f,c
 14835  0157D6  0EE7               	movlw	-25
 14836  0157D8  006F FF8C  F03F    	movff	plusw1,btemp+21
 14837  0157DE  0EFF               	movlw	255
 14838  0157E0  223F               	addwfc	(btemp+21)^0,f,c
 14839  0157E2  0EE8               	movlw	-24
 14840  0157E4  006F FF8C  F040    	movff	plusw1,btemp+22
 14841  0157EA  0EFF               	movlw	255
 14842  0157EC  2240               	addwfc	(btemp+22)^0,f,c
 14843  0157EE  0EE9               	movlw	-23
 14844  0157F0  006F FF8C  F041    	movff	plusw1,btemp+23
 14845  0157F6  0EFF               	movlw	255
 14846  0157F8  2241               	addwfc	(btemp+23)^0,f,c
 14847  0157FA  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14848  015800  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14849  015806  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14850  01580C  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14851  015812  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14852  015818  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14853  01581E  0060  F103  FFE6   	movff	btemp+22,postinc1
 14854  015824  0060  F107  FFE6   	movff	btemp+23,postinc1
 14855  01582A  ECC8  F0E5         	call	___aomod	;wreg free
 14856  01582E  52E5               	movf	postdec1,f,c
 14857  015830  006F FF9C  F041    	movff	indf1,btemp+23
 14858  015836  52E5               	movf	postdec1,f,c
 14859  015838  006F FF9C  F040    	movff	indf1,btemp+22
 14860  01583E  52E5               	movf	postdec1,f,c
 14861  015840  006F FF9C  F03F    	movff	indf1,btemp+21
 14862  015846  52E5               	movf	postdec1,f,c
 14863  015848  006F FF9C  F03E    	movff	indf1,btemp+20
 14864  01584E  52E5               	movf	postdec1,f,c
 14865  015850  006F FF9C  F03D    	movff	indf1,btemp+19
 14866  015856  52E5               	movf	postdec1,f,c
 14867  015858  006F FF9C  F03C    	movff	indf1,btemp+18
 14868  01585E  52E5               	movf	postdec1,f,c
 14869  015860  006F FF9C  F03B    	movff	indf1,btemp+17
 14870  015866  52E5               	movf	postdec1,f,c
 14871  015868  006F FF9C  F03A    	movff	indf1,btemp+16
 14872  01586E  0EF8               	movlw	248
 14873  015870  26E1               	addwf	fsr1l,f,c
 14874  015872  0EFF               	movlw	255
 14875  015874  22E2               	addwfc	fsr1h,f,c
 14876  015876  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14877  01587C  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14878                           
 14879                           ;stkvar	_rem @ sp[(-14)+4]
 14880  015882  0EF6               	movlw	-10
 14881  015884  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14882  01588A  0EF7               	movlw	-9
 14883  01588C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14884                           
 14885                           ;stkvar	_rem @ sp[(-14)+4]
 14886  015892  0EF7               	movlw	-9
 14887  015894  AEE3               	btfss	plusw1,7,c
 14888  015896  D015               	goto	l11672
 14889                           
 14890                           ;stkvar	_cycles @ sp[(-14)+12]
 14891  015898  50E1               	movf	fsr1l,w,c
 14892  01589A  0FFE               	addlw	-2
 14893  01589C  6ED9               	movwf	fsr2l,c
 14894  01589E  50E2               	movf	fsr1h,w,c
 14895  0158A0  6EDA               	movwf	fsr2h,c
 14896  0158A2  0EFF               	movlw	255
 14897  0158A4  22DA               	addwfc	fsr2h,f,c
 14898  0158A6  06DE               	decf	postinc2,f,c
 14899  0158A8  0E00               	movlw	0
 14900  0158AA  5ADD               	subwfb	postdec2,f,c
 14901                           
 14902                           ;stkvar	_rem @ sp[(-14)+4]
 14903  0158AC  50E1               	movf	fsr1l,w,c
 14904  0158AE  0FF6               	addlw	-10
 14905  0158B0  6ED9               	movwf	fsr2l,c
 14906  0158B2  50E2               	movf	fsr1h,w,c
 14907  0158B4  6EDA               	movwf	fsr2h,c
 14908  0158B6  0EFF               	movlw	255
 14909  0158B8  22DA               	addwfc	fsr2h,f,c
 14910  0158BA  0E90               	movlw	144
 14911  0158BC  26DE               	addwf	postinc2,f,c
 14912  0158BE  0E01               	movlw	1
 14913  0158C0  22DD               	addwfc	postdec2,f,c
 14914  0158C2                     l11672:
 14915                           
 14916                           ;stkvar	_rem @ sp[(-14)+4]
 14917  0158C2  0EF6               	movlw	-10
 14918  0158C4  006F FF8C  F02A    	movff	plusw1,btemp
 14919  0158CA  0EF7               	movlw	-9
 14920  0158CC  50E3               	movf	plusw1,w,c
 14921  0158CE  102A               	iorwf	btemp^0,w,c
 14922  0158D0  A4D8               	btfss	status,2,c
 14923  0158D2  D015               	goto	l11680
 14924                           
 14925                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14926  0158D4  0EE8               	movlw	-24
 14927  0158D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 14928  0158DC  0EE9               	movlw	-23
 14929  0158DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 14930  0158E4  0E01               	movlw	1
 14931  0158E6  6EDE               	movwf	postinc2,c
 14932  0158E8  0E00               	movlw	0
 14933  0158EA  6EDD               	movwf	postdec2,c
 14934                           
 14935                           ;stkvar	_centuries @ sp[(-14)+8]
 14936  0158EC  0EFA               	movlw	-6
 14937  0158EE  6AE3               	clrf	plusw1,c
 14938  0158F0  0EFB               	movlw	-5
 14939  0158F2  6AE3               	clrf	plusw1,c
 14940  0158F4                     l11678:
 14941                           
 14942                           ;stkvar	_leaps @ sp[(-14)+10]
 14943  0158F4  0EFC               	movlw	-4
 14944  0158F6  6AE3               	clrf	plusw1,c
 14945  0158F8  0EFD               	movlw	-3
 14946  0158FA  6AE3               	clrf	plusw1,c
 14947  0158FC  D0D6               	goto	l11712
 14948  0158FE                     l11680:
 14949                           
 14950                           ;stkvar	_rem @ sp[(-14)+4]
 14951  0158FE  0EF7               	movlw	-9
 14952  015900  BEE3               	btfsc	plusw1,7,c
 14953  015902  D04A               	goto	l11692
 14954  015904  0EF7               	movlw	-9
 14955  015906  50E3               	movf	plusw1,w,c
 14956  015908  E108               	bnz	u10780
 14957  01590A  0EF6               	movlw	-10
 14958  01590C  006F FF8C  F02A    	movff	plusw1,btemp
 14959  015912  0EC8               	movlw	200
 14960  015914  5E2A               	subwf	btemp^0,f,c
 14961  015916  A0D8               	btfss	status,0,c
 14962  015918  D03F               	goto	l11692
 14963  01591A                     u10780:
 14964                           
 14965                           ;stkvar	_rem @ sp[(-14)+4]
 14966  01591A  0EF7               	movlw	-9
 14967  01591C  BEE3               	btfsc	plusw1,7,c
 14968  01591E  D025               	goto	l11688
 14969  015920  0EF6               	movlw	-10
 14970  015922  006F FF8C  F02A    	movff	plusw1,btemp
 14971  015928  0E2C               	movlw	44
 14972  01592A  5E2A               	subwf	btemp^0,f,c
 14973  01592C  0EF7               	movlw	-9
 14974  01592E  006F FF8C  F02A    	movff	plusw1,btemp
 14975  015934  0E01               	movlw	1
 14976  015936  5A2A               	subwfb	btemp^0,f,c
 14977  015938  A0D8               	btfss	status,0,c
 14978  01593A  D017               	goto	l11688
 14979  01593C  0E03               	movlw	3
 14980  01593E  6E34               	movwf	(btemp+10)^0,c
 14981  015940  0E00               	movlw	0
 14982  015942  6E35               	movwf	(btemp+11)^0,c
 14983                           
 14984                           ;stkvar	_centuries @ sp[(-14)+8]
 14985  015944  0EFA               	movlw	-6
 14986  015946  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14987  01594C  0EFB               	movlw	-5
 14988  01594E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14989                           
 14990                           ;stkvar	_rem @ sp[(-14)+4]
 14991  015954  50E1               	movf	fsr1l,w,c
 14992  015956  0FF6               	addlw	-10
 14993  015958  6ED9               	movwf	fsr2l,c
 14994  01595A  50E2               	movf	fsr1h,w,c
 14995  01595C  6EDA               	movwf	fsr2h,c
 14996  01595E  0EFF               	movlw	255
 14997  015960  22DA               	addwfc	fsr2h,f,c
 14998  015962  0ED4               	movlw	212
 14999  015964  26DE               	addwf	postinc2,f,c
 15000  015966  0EFE               	movlw	254
 15001  015968  D015               	goto	L14
 15002  01596A                     l11688:
 15003  01596A  0E02               	movlw	2
 15004  01596C  6E34               	movwf	(btemp+10)^0,c
 15005  01596E  0E00               	movlw	0
 15006  015970  6E35               	movwf	(btemp+11)^0,c
 15007                           
 15008                           ;stkvar	_centuries @ sp[(-14)+8]
 15009  015972  0EFA               	movlw	-6
 15010  015974  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15011  01597A  0EFB               	movlw	-5
 15012  01597C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15013                           
 15014                           ;stkvar	_rem @ sp[(-14)+4]
 15015  015982  50E1               	movf	fsr1l,w,c
 15016  015984  0FF6               	addlw	-10
 15017  015986  6ED9               	movwf	fsr2l,c
 15018  015988  50E2               	movf	fsr1h,w,c
 15019  01598A  6EDA               	movwf	fsr2h,c
 15020  01598C  0EFF               	movlw	255
 15021  01598E  22DA               	addwfc	fsr2h,f,c
 15022  015990  0E38               	movlw	56
 15023  015992  D024               	goto	L15
 15024  015994                     L14:
 15025  015994  22DD               	addwfc	postdec2,f,c
 15026  015996  D029               	goto	l11700
 15027  015998                     l11692:
 15028                           
 15029                           ;stkvar	_rem @ sp[(-14)+4]
 15030  015998  0EF7               	movlw	-9
 15031  01599A  BEE3               	btfsc	plusw1,7,c
 15032  01599C  D022               	goto	l11698
 15033  01599E  0EF7               	movlw	-9
 15034  0159A0  50E3               	movf	plusw1,w,c
 15035  0159A2  E108               	bnz	u10800
 15036  0159A4  0EF6               	movlw	-10
 15037  0159A6  006F FF8C  F02A    	movff	plusw1,btemp
 15038  0159AC  0E64               	movlw	100
 15039  0159AE  5E2A               	subwf	btemp^0,f,c
 15040  0159B0  A0D8               	btfss	status,0,c
 15041  0159B2  D017               	goto	l11698
 15042  0159B4                     u10800:
 15043  0159B4  0E01               	movlw	1
 15044  0159B6  6E34               	movwf	(btemp+10)^0,c
 15045  0159B8  0E00               	movlw	0
 15046  0159BA  6E35               	movwf	(btemp+11)^0,c
 15047                           
 15048                           ;stkvar	_centuries @ sp[(-14)+8]
 15049  0159BC  0EFA               	movlw	-6
 15050  0159BE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15051  0159C4  0EFB               	movlw	-5
 15052  0159C6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15053                           
 15054                           ;stkvar	_rem @ sp[(-14)+4]
 15055  0159CC  50E1               	movf	fsr1l,w,c
 15056  0159CE  0FF6               	addlw	-10
 15057  0159D0  6ED9               	movwf	fsr2l,c
 15058  0159D2  50E2               	movf	fsr1h,w,c
 15059  0159D4  6EDA               	movwf	fsr2h,c
 15060  0159D6  0EFF               	movlw	255
 15061  0159D8  22DA               	addwfc	fsr2h,f,c
 15062  0159DA  0E9C               	movlw	156
 15063  0159DC                     L15:
 15064  0159DC  26DE               	addwf	postinc2,f,c
 15065  0159DE  0EFF               	movlw	255
 15066  0159E0  D7D9               	goto	L14
 15067  0159E2                     l11698:
 15068                           
 15069                           ;stkvar	_centuries @ sp[(-14)+8]
 15070  0159E2  0EFA               	movlw	-6
 15071  0159E4  6AE3               	clrf	plusw1,c
 15072  0159E6  0EFB               	movlw	-5
 15073  0159E8  6AE3               	clrf	plusw1,c
 15074  0159EA                     l11700:
 15075                           
 15076                           ;stkvar	_rem @ sp[(-14)+4]
 15077  0159EA  0EF6               	movlw	-10
 15078  0159EC  006F FF8C  F02A    	movff	plusw1,btemp
 15079  0159F2  0EF7               	movlw	-9
 15080  0159F4  50E3               	movf	plusw1,w,c
 15081  0159F6  102A               	iorwf	btemp^0,w,c
 15082  0159F8  A4D8               	btfss	status,2,c
 15083  0159FA  D00D               	goto	l11706
 15084                           
 15085                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15086  0159FC  0EE8               	movlw	-24
 15087  0159FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 15088  015A04  0EE9               	movlw	-23
 15089  015A06  006F FF8F FFDA     	movff	plusw1,fsr2h
 15090  015A0C  0E00               	movlw	0
 15091  015A0E  6EDE               	movwf	postinc2,c
 15092  015A10  0E00               	movlw	0
 15093  015A12  6EDD               	movwf	postdec2,c
 15094  015A14  D76F               	goto	l11678
 15095  015A16                     l11706:
 15096                           
 15097                           ;stkvar	_rem @ sp[(-14)+4]
 15098  015A16  0EF6               	movlw	-10
 15099  015A18  006F FF8C  F034    	movff	plusw1,btemp+10
 15100  015A1E  0EF7               	movlw	-9
 15101  015A20  006F FF8C  F035    	movff	plusw1,btemp+11
 15102  015A26  90D8               	bcf	status,0,c
 15103  015A28  3235               	rrcf	(btemp+11)^0,f,c
 15104  015A2A  3234               	rrcf	(btemp+10)^0,f,c
 15105  015A2C  90D8               	bcf	status,0,c
 15106  015A2E  3235               	rrcf	(btemp+11)^0,f,c
 15107  015A30  3234               	rrcf	(btemp+10)^0,f,c
 15108                           
 15109                           ;stkvar	_leaps @ sp[(-14)+10]
 15110  015A32  0EFC               	movlw	-4
 15111  015A34  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15112  015A3A  0EFD               	movlw	-3
 15113  015A3C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15114  015A42  0E03               	movlw	3
 15115  015A44  6E34               	movwf	(btemp+10)^0,c
 15116  015A46  0E00               	movlw	0
 15117  015A48  6E35               	movwf	(btemp+11)^0,c
 15118                           
 15119                           ;stkvar	_rem @ sp[(-14)+4]
 15120  015A4A  0EF6               	movlw	-10
 15121  015A4C  006F FF8C  F02A    	movff	plusw1,btemp
 15122  015A52  5034               	movf	(btemp+10)^0,w,c
 15123  015A54  162A               	andwf	btemp^0,f,c
 15124  015A56  0EF6               	movlw	-10
 15125  015A58  0060  F0AB  FFE3   	movff	btemp,plusw1
 15126  015A5E  0EF7               	movlw	-9
 15127  015A60  006F FF8C  F02A    	movff	plusw1,btemp
 15128  015A66  5035               	movf	(btemp+11)^0,w,c
 15129  015A68  162A               	andwf	btemp^0,f,c
 15130  015A6A  0EF7               	movlw	-9
 15131  015A6C  0060  F0AB  FFE3   	movff	btemp,plusw1
 15132                           
 15133                           ;stkvar	_rem @ sp[(-14)+4]
 15134  015A72  0EF6               	movlw	-10
 15135  015A74  006F FF8C  F02A    	movff	plusw1,btemp
 15136  015A7A  0EF7               	movlw	-9
 15137  015A7C  50E3               	movf	plusw1,w,c
 15138  015A7E  102A               	iorwf	btemp^0,w,c
 15139  015A80  A4D8               	btfss	status,2,c
 15140  015A82  D002               	goto	u10820
 15141  015A84  0E01               	movlw	1
 15142  015A86  D001               	goto	u10830
 15143  015A88                     u10820:
 15144  015A88  0E00               	movlw	0
 15145  015A8A                     u10830:
 15146  015A8A  6E34               	movwf	(btemp+10)^0,c
 15147  015A8C  6A35               	clrf	(btemp+11)^0,c
 15148                           
 15149                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15150  015A8E  0EE8               	movlw	-24
 15151  015A90  006F FF8F FFD9     	movff	plusw1,fsr2l
 15152  015A96  0EE9               	movlw	-23
 15153  015A98  006F FF8F FFDA     	movff	plusw1,fsr2h
 15154  015A9E  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 15155  015AA4  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 15156  015AAA                     l11712:
 15157                           
 15158                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15159  015AAA  0EE8               	movlw	-24
 15160  015AAC  006F FF8F FFD9     	movff	plusw1,fsr2l
 15161  015AB2  0EE9               	movlw	-23
 15162  015AB4  006F FF8F FFDA     	movff	plusw1,fsr2h
 15163  015ABA  006F FF78  F034    	movff	postinc2,btemp+10
 15164  015AC0  006F FF74  F035    	movff	postdec2,btemp+11
 15165                           
 15166                           ;stkvar	_centuries @ sp[(-14)+8]
 15167  015AC6  0EFA               	movlw	-6
 15168  015AC8  006F FF8C  F032    	movff	plusw1,btemp+8
 15169  015ACE  0EFB               	movlw	-5
 15170  015AD0  006F FF8C  F033    	movff	plusw1,btemp+9
 15171  015AD6  0E18               	movlw	24
 15172  015AD8  0232               	mulwf	(btemp+8)^0,c
 15173  015ADA  006F FFCC  F030    	movff	prodl,btemp+6
 15174  015AE0  006F FFD0  F031    	movff	prodh,btemp+7
 15175  015AE6  0233               	mulwf	(btemp+9)^0,c
 15176  015AE8  50F3               	movf	prodl,w,c
 15177  015AEA  2631               	addwf	(btemp+7)^0,f,c
 15178                           
 15179                           ;stkvar	_cycles @ sp[(-14)+12]
 15180  015AEC  0EFE               	movlw	-2
 15181  015AEE  006F FF8C  F032    	movff	plusw1,btemp+8
 15182  015AF4  0EFF               	movlw	-1
 15183  015AF6  006F FF8C  F033    	movff	plusw1,btemp+9
 15184  015AFC  0E61               	movlw	97
 15185  015AFE  0232               	mulwf	(btemp+8)^0,c
 15186  015B00  006F FFCC  F02E    	movff	prodl,btemp+4
 15187  015B06  006F FFD0  F02F    	movff	prodh,btemp+5
 15188  015B0C  0233               	mulwf	(btemp+9)^0,c
 15189  015B0E  50F3               	movf	prodl,w,c
 15190  015B10  262F               	addwf	(btemp+5)^0,f,c
 15191  015B12  5030               	movf	(btemp+6)^0,w,c
 15192  015B14  262E               	addwf	(btemp+4)^0,f,c
 15193  015B16  5031               	movf	(btemp+7)^0,w,c
 15194  015B18  222F               	addwfc	(btemp+5)^0,f,c
 15195  015B1A  5034               	movf	(btemp+10)^0,w,c
 15196  015B1C  5E2E               	subwf	(btemp+4)^0,f,c
 15197  015B1E  5035               	movf	(btemp+11)^0,w,c
 15198  015B20  5A2F               	subwfb	(btemp+5)^0,f,c
 15199                           
 15200                           ;stkvar	_leaps @ sp[(-14)+10]
 15201  015B22  50E1               	movf	fsr1l,w,c
 15202  015B24  0FFC               	addlw	-4
 15203  015B26  6ED9               	movwf	fsr2l,c
 15204  015B28  50E2               	movf	fsr1h,w,c
 15205  015B2A  6EDA               	movwf	fsr2h,c
 15206  015B2C  0EFF               	movlw	255
 15207  015B2E  22DA               	addwfc	fsr2h,f,c
 15208  015B30  502E               	movf	(btemp+4)^0,w,c
 15209  015B32  26DE               	addwf	postinc2,f,c
 15210  015B34  502F               	movf	(btemp+5)^0,w,c
 15211  015B36  22DD               	addwfc	postdec2,f,c
 15212  015B38  0E80               	movlw	128
 15213  015B3A  6EE6               	movwf	postinc1,c
 15214  015B3C  0E51               	movlw	81
 15215  015B3E  6EE6               	movwf	postinc1,c
 15216  015B40  0E01               	movlw	1
 15217  015B42  6EE6               	movwf	postinc1,c
 15218  015B44  0E00               	movlw	0
 15219  015B46  6EE6               	movwf	postinc1,c
 15220  015B48  0E00               	movlw	0
 15221  015B4A  6EE6               	movwf	postinc1,c
 15222  015B4C  0E00               	movlw	0
 15223  015B4E  6EE6               	movwf	postinc1,c
 15224  015B50  0E00               	movlw	0
 15225  015B52  6EE6               	movwf	postinc1,c
 15226  015B54  0E00               	movlw	0
 15227  015B56  6EE6               	movwf	postinc1,c
 15228                           
 15229                           ;stkvar	_leaps @ sp[(-22)+10]
 15230  015B58  0EF4               	movlw	-12
 15231  015B5A  006F FF8C  F03A    	movff	plusw1,btemp+16
 15232  015B60  0EF5               	movlw	-11
 15233  015B62  006F FF8C  F03B    	movff	plusw1,btemp+17
 15234  015B68  6A3C               	clrf	(btemp+18)^0,c
 15235  015B6A  BE3B               	btfsc	(btemp+17)^0,7,c
 15236  015B6C  683C               	setf	(btemp+18)^0,c
 15237  015B6E  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 15238  015B74  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 15239  015B7A  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 15240  015B80  0060  F0F0  F040   	movff	btemp+18,btemp+22
 15241  015B86  0060  F0F0  F041   	movff	btemp+18,btemp+23
 15242  015B8C  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 15243  015B92  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 15244  015B98  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 15245  015B9E  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 15246  015BA4  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 15247  015BAA  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 15248  015BB0  0060  F103  FFE6   	movff	btemp+22,postinc1
 15249  015BB6  0060  F107  FFE6   	movff	btemp+23,postinc1
 15250  015BBC  ECD3  F0F6         	call	___omul	;wreg free
 15251  015BC0  52E5               	movf	postdec1,f,c
 15252  015BC2  006F FF9C  F041    	movff	indf1,btemp+23
 15253  015BC8  52E5               	movf	postdec1,f,c
 15254  015BCA  006F FF9C  F040    	movff	indf1,btemp+22
 15255  015BD0  52E5               	movf	postdec1,f,c
 15256  015BD2  006F FF9C  F03F    	movff	indf1,btemp+21
 15257  015BD8  52E5               	movf	postdec1,f,c
 15258  015BDA  006F FF9C  F03E    	movff	indf1,btemp+20
 15259  015BE0  52E5               	movf	postdec1,f,c
 15260  015BE2  006F FF9C  F03D    	movff	indf1,btemp+19
 15261  015BE8  52E5               	movf	postdec1,f,c
 15262  015BEA  006F FF9C  F03C    	movff	indf1,btemp+18
 15263  015BF0  52E5               	movf	postdec1,f,c
 15264  015BF2  006F FF9C  F03B    	movff	indf1,btemp+17
 15265  015BF8  52E5               	movf	postdec1,f,c
 15266  015BFA  006F FF9C  F03A    	movff	indf1,btemp+16
 15267  015C00  0EF8               	movlw	248
 15268  015C02  26E1               	addwf	fsr1l,f,c
 15269  015C04  0EFF               	movlw	255
 15270  015C06  22E2               	addwfc	fsr1h,f,c
 15271  015C08  0E80               	movlw	128
 15272  015C0A  6EE6               	movwf	postinc1,c
 15273  015C0C  0E33               	movlw	51
 15274  015C0E  6EE6               	movwf	postinc1,c
 15275  015C10  0EE1               	movlw	225
 15276  015C12  6EE6               	movwf	postinc1,c
 15277  015C14  0E01               	movlw	1
 15278  015C16  6EE6               	movwf	postinc1,c
 15279  015C18  0E00               	movlw	0
 15280  015C1A  6EE6               	movwf	postinc1,c
 15281  015C1C  0E00               	movlw	0
 15282  015C1E  6EE6               	movwf	postinc1,c
 15283  015C20  0E00               	movlw	0
 15284  015C22  6EE6               	movwf	postinc1,c
 15285  015C24  0E00               	movlw	0
 15286  015C26  6EE6               	movwf	postinc1,c
 15287                           
 15288                           ;stkvar	_year @ sp[(-22)+-8]
 15289  015C28  50E1               	movf	fsr1l,w,c
 15290  015C2A  0FE2               	addlw	-30
 15291  015C2C  6ED9               	movwf	fsr2l,c
 15292  015C2E  50E2               	movf	fsr1h,w,c
 15293  015C30  6EDA               	movwf	fsr2h,c
 15294  015C32  0EFF               	movlw	255
 15295  015C34  22DA               	addwfc	fsr2h,f,c
 15296  015C36  006F FF7B FFE6     	movff	postinc2,postinc1
 15297  015C3C  006F FF7B FFE6     	movff	postinc2,postinc1
 15298  015C42  006F FF7B FFE6     	movff	postinc2,postinc1
 15299  015C48  006F FF7B FFE6     	movff	postinc2,postinc1
 15300  015C4E  006F FF7B FFE6     	movff	postinc2,postinc1
 15301  015C54  006F FF7B FFE6     	movff	postinc2,postinc1
 15302  015C5A  006F FF7B FFE6     	movff	postinc2,postinc1
 15303  015C60  006F FF7B FFE6     	movff	postinc2,postinc1
 15304  015C66  ECD3  F0F6         	call	___omul	;wreg free
 15305  015C6A  52E5               	movf	postdec1,f,c
 15306  015C6C  006F FF9C  F049    	movff	indf1,btemp+31
 15307  015C72  52E5               	movf	postdec1,f,c
 15308  015C74  006F FF9C  F048    	movff	indf1,btemp+30
 15309  015C7A  52E5               	movf	postdec1,f,c
 15310  015C7C  006F FF9C  F047    	movff	indf1,btemp+29
 15311  015C82  52E5               	movf	postdec1,f,c
 15312  015C84  006F FF9C  F046    	movff	indf1,btemp+28
 15313  015C8A  52E5               	movf	postdec1,f,c
 15314  015C8C  006F FF9C  F045    	movff	indf1,btemp+27
 15315  015C92  52E5               	movf	postdec1,f,c
 15316  015C94  006F FF9C  F044    	movff	indf1,btemp+26
 15317  015C9A  52E5               	movf	postdec1,f,c
 15318  015C9C  006F FF9C  F043    	movff	indf1,btemp+25
 15319  015CA2  52E5               	movf	postdec1,f,c
 15320  015CA4  006F FF9C  F042    	movff	indf1,btemp+24
 15321  015CAA  0EF8               	movlw	248
 15322  015CAC  26E1               	addwf	fsr1l,f,c
 15323  015CAE  0EFF               	movlw	255
 15324  015CB0  22E2               	addwfc	fsr1h,f,c
 15325  015CB2  503A               	movf	(btemp+16)^0,w,c
 15326  015CB4  2442               	addwf	(btemp+24)^0,w,c
 15327  015CB6  6E32               	movwf	(btemp+8)^0,c
 15328  015CB8  503B               	movf	(btemp+17)^0,w,c
 15329  015CBA  2043               	addwfc	(btemp+25)^0,w,c
 15330  015CBC  6E33               	movwf	(btemp+9)^0,c
 15331  015CBE  503C               	movf	(btemp+18)^0,w,c
 15332  015CC0  2044               	addwfc	(btemp+26)^0,w,c
 15333  015CC2  6E34               	movwf	(btemp+10)^0,c
 15334  015CC4  503D               	movf	(btemp+19)^0,w,c
 15335  015CC6  2045               	addwfc	(btemp+27)^0,w,c
 15336  015CC8  6E35               	movwf	(btemp+11)^0,c
 15337  015CCA  503E               	movf	(btemp+20)^0,w,c
 15338  015CCC  2046               	addwfc	(btemp+28)^0,w,c
 15339  015CCE  6E36               	movwf	(btemp+12)^0,c
 15340  015CD0  503F               	movf	(btemp+21)^0,w,c
 15341  015CD2  2047               	addwfc	(btemp+29)^0,w,c
 15342  015CD4  6E37               	movwf	(btemp+13)^0,c
 15343  015CD6  5040               	movf	(btemp+22)^0,w,c
 15344  015CD8  2048               	addwfc	(btemp+30)^0,w,c
 15345  015CDA  6E38               	movwf	(btemp+14)^0,c
 15346  015CDC  5041               	movf	(btemp+23)^0,w,c
 15347  015CDE  2049               	addwfc	(btemp+31)^0,w,c
 15348  015CE0  6E39               	movwf	(btemp+15)^0,c
 15349  015CE2  0E00               	movlw	0
 15350  015CE4  2432               	addwf	(btemp+8)^0,w,c
 15351  015CE6  6E3A               	movwf	(btemp+16)^0,c
 15352  015CE8  0E77               	movlw	119
 15353  015CEA  2033               	addwfc	(btemp+9)^0,w,c
 15354  015CEC  6E3B               	movwf	(btemp+17)^0,c
 15355  015CEE  0E76               	movlw	118
 15356  015CF0  2034               	addwfc	(btemp+10)^0,w,c
 15357  015CF2  6E3C               	movwf	(btemp+18)^0,c
 15358  015CF4  0E7C               	movlw	124
 15359  015CF6  2035               	addwfc	(btemp+11)^0,w,c
 15360  015CF8  6E3D               	movwf	(btemp+19)^0,c
 15361  015CFA  0EFF               	movlw	255
 15362  015CFC  2036               	addwfc	(btemp+12)^0,w,c
 15363  015CFE  6E3E               	movwf	(btemp+20)^0,c
 15364  015D00  0EFF               	movlw	255
 15365  015D02  2037               	addwfc	(btemp+13)^0,w,c
 15366  015D04  6E3F               	movwf	(btemp+21)^0,c
 15367  015D06  0EFF               	movlw	255
 15368  015D08  2038               	addwfc	(btemp+14)^0,w,c
 15369  015D0A  6E40               	movwf	(btemp+22)^0,c
 15370  015D0C  0EFF               	movlw	255
 15371  015D0E  2039               	addwfc	(btemp+15)^0,w,c
 15372  015D10  6E41               	movwf	(btemp+23)^0,c
 15373  015D12                     L13:
 15374                           
 15375                           ;stkvar	?___year_to_secs @ sp[(-14)+-8]
 15376  015D12  0EEA               	movlw	-22
 15377  015D14  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 15378  015D1A  0EEB               	movlw	-21
 15379  015D1C  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 15380  015D22  0EEC               	movlw	-20
 15381  015D24  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 15382  015D2A  0EED               	movlw	-19
 15383  015D2C  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 15384  015D32  0EEE               	movlw	-18
 15385  015D34  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 15386  015D3A  0EEF               	movlw	-17
 15387  015D3C  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 15388  015D42  0EF0               	movlw	-16
 15389  015D44  0060  F103  FFE3   	movff	btemp+22,plusw1
 15390  015D4A  0EF1               	movlw	-15
 15391  015D4C  0060  F107  FFE3   	movff	btemp+23,plusw1
 15392                           
 15393                           ; ___year_to_secs: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          10, argsize = 10, vargsize = 0
 15394  015D52  0EF2               	movlw	242
 15395  015D54  26E1               	addwf	fsr1l,f,c
 15396  015D56  0EFF               	movlw	255
 15397  015D58  22E2               	addwfc	fsr1h,f,c
 15398  015D5A  0012               	return		;funcret
 15399  015D5C                     __end_of___year_to_secs:
 15400                           	opt callstack 0
 15401                           
 15402 ;; *************** function ___month_to_secs *****************
 15403 ;; Defined at:
 15404 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__month_to_secs.c"
 15405 ;; Parameters:    Size  Location     Type
 15406 ;;  month           2  [STACK] int 
 15407 ;;  is_leap         2  [STACK] int 
 15408 ;; Auto vars:     Size  Location     Type
 15409 ;;  t               4  [STACK] long 
 15410 ;; Return value:  Size  Location     Type
 15411 ;;                  4  [STACK] long 
 15412 ;; Registers used:
 15413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl
 15414 ;; Tracked objects:
 15415 ;;		On entry : 0/0
 15416 ;;		On exit  : 0/0
 15417 ;;		Unchanged: 0/0
 15418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15423 ;;Total ram usage:        0 bytes
 15424 ;; Hardware stack levels used:    1
 15425 ;; Hardware stack levels required when called:   15
 15426 ;; This function calls:
 15427 ;;		Nothing
 15428 ;; This function is called by:
 15429 ;;		_rule_to_secs
 15430 ;; This function uses a reentrant model
 15431 ;;
 15432                           
 15433                           	psect	text44
 15434  0000B6                     __ptext44:
 15435                           	opt callstack 0
 15436  0000B6                     ___month_to_secs:
 15437                           	opt callstack 0
 15438                           
 15439                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15440  0000B6  52E6               	movf	postinc1,f,c
 15441  0000B8  52E6               	movf	postinc1,f,c
 15442  0000BA  52E6               	movf	postinc1,f,c
 15443  0000BC  52E6               	movf	postinc1,f,c
 15444                           
 15445                           ;stkvar	_month @ sp[(-4)+-2]
 15446                           
 15447                           ;incstack = 0
 15448  0000BE  0EFA               	movlw	-6
 15449  0000C0  006F FF8C  F034    	movff	plusw1,btemp+10
 15450  0000C6  0EFB               	movlw	-5
 15451  0000C8  006F FF8C  F035    	movff	plusw1,btemp+11
 15452  0000CE  90D8               	bcf	status,0,c
 15453  0000D0  3634               	rlcf	(btemp+10)^0,f,c
 15454  0000D2  3635               	rlcf	(btemp+11)^0,f,c
 15455  0000D4  90D8               	bcf	status,0,c
 15456  0000D6  3634               	rlcf	(btemp+10)^0,f,c
 15457  0000D8  3635               	rlcf	(btemp+11)^0,f,c
 15458  0000DA  0E7B               	movlw	low ___month_to_secs@secs_through_month
 15459  0000DC  2434               	addwf	(btemp+10)^0,w,c
 15460  0000DE  6EF6               	movwf	tblptrl,c
 15461  0000E0  0EF8               	movlw	high ___month_to_secs@secs_through_month
 15462  0000E2  2035               	addwfc	(btemp+11)^0,w,c
 15463  0000E4  6EF7               	movwf	tblptrh,c
 15464  0000E6                     	if	1	;There are 3 active tblptr bytes
 15465  0000E6  6AF8               	clrf	tblptru,c
 15466  0000E8  0E00               	movlw	low (__mediumconst shr (0+16))
 15467  0000EA  22F8               	addwfc	tblptru,f,c
 15468  0000EC                     	endif
 15469  0000EC  0009               	tblrd		*+
 15470  0000EE  006F FFD4  F032    	movff	tablat,btemp+8
 15471  0000F4  0009               	tblrd		*+
 15472  0000F6  006F FFD4  F033    	movff	tablat,btemp+9
 15473  0000FC  0009               	tblrd		*+
 15474  0000FE  006F FFD4  F034    	movff	tablat,btemp+10
 15475  000104  0009               	tblrd		*+
 15476  000106  006F FFD4  F035    	movff	tablat,btemp+11
 15477                           
 15478                           ;stkvar	_t @ sp[(-4)+0]
 15479  00010C  0EFC               	movlw	-4
 15480  00010E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 15481  000114  0EFD               	movlw	-3
 15482  000116  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 15483  00011C  0EFE               	movlw	-2
 15484  00011E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15485  000124  0EFF               	movlw	-1
 15486  000126  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15487                           
 15488                           ;stkvar	_is_leap @ sp[(-4)+-4]
 15489  00012C  0EF8               	movlw	-8
 15490  00012E  006F FF8C  F02A    	movff	plusw1,btemp
 15491  000134  0EF9               	movlw	-7
 15492  000136  50E3               	movf	plusw1,w,c
 15493  000138  102A               	iorwf	btemp^0,w,c
 15494  00013A  B4D8               	btfsc	status,2,c
 15495  00013C  D01D               	goto	l11726
 15496                           
 15497                           ;stkvar	_month @ sp[(-4)+-2]
 15498  00013E  0EFB               	movlw	-5
 15499  000140  BEE3               	btfsc	plusw1,7,c
 15500  000142  D01A               	goto	l11726
 15501  000144  0EFB               	movlw	-5
 15502  000146  50E3               	movf	plusw1,w,c
 15503  000148  E108               	bnz	u10850
 15504  00014A  0EFA               	movlw	-6
 15505  00014C  006F FF8C  F02A    	movff	plusw1,btemp
 15506  000152  0E02               	movlw	2
 15507  000154  5E2A               	subwf	btemp^0,f,c
 15508  000156  A0D8               	btfss	status,0,c
 15509  000158  D00F               	goto	l11726
 15510  00015A                     u10850:
 15511                           
 15512                           ;stkvar	_t @ sp[(-4)+0]
 15513  00015A  50E1               	movf	fsr1l,w,c
 15514  00015C  0FFC               	addlw	-4
 15515  00015E  6ED9               	movwf	fsr2l,c
 15516  000160  50E2               	movf	fsr1h,w,c
 15517  000162  6EDA               	movwf	fsr2h,c
 15518  000164  0EFF               	movlw	255
 15519  000166  22DA               	addwfc	fsr2h,f,c
 15520  000168  0E80               	movlw	128
 15521  00016A  26DE               	addwf	postinc2,f,c
 15522  00016C  0E51               	movlw	81
 15523  00016E  22DE               	addwfc	postinc2,f,c
 15524  000170  0E01               	movlw	1
 15525  000172  22DE               	addwfc	postinc2,f,c
 15526  000174  0E00               	movlw	0
 15527  000176  22DE               	addwfc	postinc2,f,c
 15528  000178                     l11726:
 15529                           
 15530                           ;stkvar	_t @ sp[(-4)+0]
 15531  000178  0EFC               	movlw	-4
 15532  00017A  006F FF8C  F02A    	movff	plusw1,btemp
 15533  000180  0EFD               	movlw	-3
 15534  000182  006F FF8C  F02B    	movff	plusw1,btemp+1
 15535  000188  0EFE               	movlw	-2
 15536  00018A  006F FF8C  F02C    	movff	plusw1,btemp+2
 15537  000190  0EFF               	movlw	-1
 15538  000192  006F FF8C  F02D    	movff	plusw1,btemp+3
 15539                           
 15540                           ; ___month_to_secs: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
 15541  000198  0EF8               	movlw	248
 15542  00019A  26E1               	addwf	fsr1l,f,c
 15543  00019C  0EFF               	movlw	255
 15544  00019E  22E2               	addwfc	fsr1h,f,c
 15545  0001A0  0012               	return		;funcret
 15546  0001A2                     __end_of___month_to_secs:
 15547                           	opt callstack 0
 15548                           
 15549 ;; *************** function _do_tzset *****************
 15550 ;; Defined at:
 15551 ;;		line 118 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15552 ;; Parameters:    Size  Location     Type
 15553 ;;		None
 15554 ;; Auto vars:     Size  Location     Type
 15555 ;;  s               2  [STACK] PTR const unsigned char 
 15556 ;;		 -> __gmt(4), 
 15557 ;; Return value:  Size  Location     Type
 15558 ;;                  1  [STACK] void 
 15559 ;; Registers used:
 15560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15561 ;; Tracked objects:
 15562 ;;		On entry : 0/39
 15563 ;;		On exit  : 0/0
 15564 ;;		Unchanged: 0/0
 15565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15570 ;;Total ram usage:        0 bytes
 15571 ;; Hardware stack levels used:    1
 15572 ;; Hardware stack levels required when called:   18
 15573 ;; This function calls:
 15574 ;;		_getname
 15575 ;;		_getoff
 15576 ;;		_getrule
 15577 ;; This function is called by:
 15578 ;;		___secs_to_zone
 15579 ;; This function uses a reentrant model
 15580 ;;
 15581                           
 15582                           	psect	text45
 15583  01BD12                     __ptext45:
 15584                           	opt callstack 0
 15585  01BD12                     _do_tzset:
 15586                           	opt callstack 0
 15587                           
 15588                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15589  01BD12  52E6               	movf	postinc1,f,c
 15590  01BD14  52E6               	movf	postinc1,f,c
 15591                           
 15592                           ;stkvar	_s @ sp[(-2)+0]
 15593                           
 15594                           ;incstack = 0
 15595  01BD16  0EF9               	movlw	high ___gmt
 15596  01BD18  6E2A               	movwf	btemp^0,c
 15597  01BD1A  0EFF               	movlw	-1
 15598  01BD1C  0060  F0AB  FFE3   	movff	btemp,plusw1
 15599  01BD22  0EE7               	movlw	low ___gmt
 15600  01BD24  6E2A               	movwf	btemp^0,c
 15601  01BD26  0EFE               	movlw	-2
 15602  01BD28  0060  F0AB  FFE3   	movff	btemp,plusw1
 15603                           
 15604                           ;stkvar	_s @ sp[(-2)+0]
 15605  01BD2E  0EFE               	movlw	254
 15606  01BD30  24E1               	addwf	fsr1l,w,c
 15607  01BD32  6E2A               	movwf	btemp^0,c
 15608  01BD34  0EFF               	movlw	255
 15609  01BD36  20E2               	addwfc	fsr1h,w,c
 15610  01BD38  6E2B               	movwf	(btemp+1)^0,c
 15611  01BD3A  0060  F0AB  FFE6   	movff	btemp,postinc1
 15612  01BD40  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15613  01BD46  0EF6               	movlw	low _std_name
 15614  01BD48  6EE6               	movwf	postinc1,c
 15615  01BD4A  0E01               	movlw	high _std_name
 15616  01BD4C  6EE6               	movwf	postinc1,c
 15617  01BD4E  EC5D  F0D7         	call	_getname	;wreg free
 15618  01BD52  0EF6               	movlw	low _std_name
 15619  01BD54  0100               	movlb	0	; () banked
 15620  01BD56  6F6C               	movwf	___tzname& (0+255),b
 15621  01BD58  0E01               	movlw	high _std_name
 15622  01BD5A  6F6D               	movwf	(___tzname+1)& (0+255),b
 15623                           
 15624                           ; BSR set to: 0
 15625                           ;stkvar	_s @ sp[(-2)+0]
 15626  01BD5C  0EFE               	movlw	254
 15627  01BD5E  24E1               	addwf	fsr1l,w,c
 15628  01BD60  6E2A               	movwf	btemp^0,c
 15629  01BD62  0EFF               	movlw	255
 15630  01BD64  20E2               	addwfc	fsr1h,w,c
 15631  01BD66  6E2B               	movwf	(btemp+1)^0,c
 15632  01BD68  0060  F0AB  FFE6   	movff	btemp,postinc1
 15633  01BD6E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15634  01BD74  ECE8  F0E6         	call	_getoff	;wreg free
 15635  01BD78  0060  F0A8  F070   	movff	btemp,___timezone
 15636  01BD7E  0060  F0AC  F071   	movff	btemp+1,___timezone+1
 15637  01BD84  0100               	movlb	0	; () banked
 15638  01BD86  0E00               	movlw	0
 15639  01BD88  BF71               	btfsc	(___timezone+1)& (0+255),7,b
 15640  01BD8A  0EFF               	movlw	-1
 15641  01BD8C  6F72               	movwf	(___timezone+2)& (0+255),b
 15642  01BD8E  6F73               	movwf	(___timezone+3)& (0+255),b
 15643                           
 15644                           ; BSR set to: 0
 15645                           ;stkvar	_s @ sp[(-2)+0]
 15646  01BD90  0EFE               	movlw	254
 15647  01BD92  24E1               	addwf	fsr1l,w,c
 15648  01BD94  6E2A               	movwf	btemp^0,c
 15649  01BD96  0EFF               	movlw	255
 15650  01BD98  20E2               	addwfc	fsr1h,w,c
 15651  01BD9A  6E2B               	movwf	(btemp+1)^0,c
 15652  01BD9C  0060  F0AB  FFE6   	movff	btemp,postinc1
 15653  01BDA2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15654  01BDA8  0EEF               	movlw	low _dst_name
 15655  01BDAA  6EE6               	movwf	postinc1,c
 15656  01BDAC  0E01               	movlw	high _dst_name
 15657  01BDAE  6EE6               	movwf	postinc1,c
 15658  01BDB0  EC5D  F0D7         	call	_getname	;wreg free
 15659  01BDB4  0EEF               	movlw	low _dst_name
 15660  01BDB6  0100               	movlb	0	; () banked
 15661  01BDB8  6F6E               	movwf	(___tzname+2)& (0+255),b
 15662  01BDBA  0E01               	movlw	high _dst_name
 15663  01BDBC  6F6F               	movwf	(___tzname+3)& (0+255),b
 15664                           
 15665                           ; BSR set to: 0
 15666  01BDBE  0101               	movlb	1	; () banked
 15667  01BDC0  51EF               	movf	_dst_name& (0+255),w,b
 15668  01BDC2  B4D8               	btfsc	status,2,c
 15669  01BDC4  D070               	goto	l3969
 15670                           
 15671                           ; BSR set to: 1
 15672  01BDC6  0E00               	movlw	0
 15673  01BDC8  0100               	movlb	0	; () banked
 15674  01BDCA  6FB9               	movwf	(___daylight+1)& (0+255),b
 15675  01BDCC  0E01               	movlw	1
 15676  01BDCE  6FB8               	movwf	___daylight& (0+255),b
 15677                           
 15678                           ; BSR set to: 0
 15679                           ;stkvar	_s @ sp[(-2)+0]
 15680  01BDD0  50E1               	movf	fsr1l,w,c
 15681  01BDD2  0FFE               	addlw	-2
 15682  01BDD4  6ED9               	movwf	fsr2l,c
 15683  01BDD6  50E2               	movf	fsr1h,w,c
 15684  01BDD8  6EDA               	movwf	fsr2h,c
 15685  01BDDA  0EFF               	movlw	255
 15686  01BDDC  22DA               	addwfc	fsr2h,f,c
 15687  01BDDE  006F FF7B FFF6     	movff	postinc2,tblptrl
 15688  01BDE4  006F FF77 FFF7     	movff	postdec2,tblptrh
 15689  01BDEA                     	if	0	;tblptru may be non-zero
 15690  01BDEA                     	endif
 15691  01BDEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15692  01BDEA  0E00               	movlw	low (__mediumconst shr (0+16))
 15693  01BDEC  6EF8               	movwf	tblptru,c
 15694  01BDEE                     	endif
 15695  01BDEE  0008               	tblrd		*
 15696  01BDF0  50F5               	movf	tablat,w,c
 15697  01BDF2  0A2B               	xorlw	43
 15698  01BDF4  B4D8               	btfsc	status,2,c
 15699  01BDF6  D035               	goto	u16010
 15700                           
 15701                           ; BSR set to: 0
 15702                           ;stkvar	_s @ sp[(-2)+0]
 15703  01BDF8  50E1               	movf	fsr1l,w,c
 15704  01BDFA  0FFE               	addlw	-2
 15705  01BDFC  6ED9               	movwf	fsr2l,c
 15706  01BDFE  50E2               	movf	fsr1h,w,c
 15707  01BE00  6EDA               	movwf	fsr2h,c
 15708  01BE02  0EFF               	movlw	255
 15709  01BE04  22DA               	addwfc	fsr2h,f,c
 15710  01BE06  006F FF7B FFF6     	movff	postinc2,tblptrl
 15711  01BE0C  006F FF77 FFF7     	movff	postdec2,tblptrh
 15712  01BE12                     	if	0	;tblptru may be non-zero
 15713  01BE12                     	endif
 15714  01BE12                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15715  01BE12  0E00               	movlw	low (__mediumconst shr (0+16))
 15716  01BE14  6EF8               	movwf	tblptru,c
 15717  01BE16                     	endif
 15718  01BE16  0008               	tblrd		*
 15719  01BE18  50F5               	movf	tablat,w,c
 15720  01BE1A  0A2D               	xorlw	45
 15721  01BE1C  B4D8               	btfsc	status,2,c
 15722  01BE1E  D021               	goto	u16010
 15723                           
 15724                           ; BSR set to: 0
 15725  01BE20  0ED0               	movlw	208
 15726  01BE22  6E34               	movwf	(btemp+10)^0,c
 15727  01BE24  0EFF               	movlw	255
 15728  01BE26  6E35               	movwf	(btemp+11)^0,c
 15729                           
 15730                           ;stkvar	_s @ sp[(-2)+0]
 15731  01BE28  50E1               	movf	fsr1l,w,c
 15732  01BE2A  0FFE               	addlw	-2
 15733  01BE2C  6ED9               	movwf	fsr2l,c
 15734  01BE2E  50E2               	movf	fsr1h,w,c
 15735  01BE30  6EDA               	movwf	fsr2h,c
 15736  01BE32  0EFF               	movlw	255
 15737  01BE34  22DA               	addwfc	fsr2h,f,c
 15738  01BE36  006F FF7B FFF6     	movff	postinc2,tblptrl
 15739  01BE3C  006F FF77 FFF7     	movff	postdec2,tblptrh
 15740  01BE42                     	if	0	;tblptru may be non-zero
 15741  01BE42                     	endif
 15742  01BE42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15743  01BE42  0E00               	movlw	low (__mediumconst shr (0+16))
 15744  01BE44  6EF8               	movwf	tblptru,c
 15745  01BE46                     	endif
 15746  01BE46  0008               	tblrd		*
 15747  01BE48  50F5               	movf	tablat,w,c
 15748  01BE4A  6E32               	movwf	(btemp+8)^0,c
 15749  01BE4C  6A33               	clrf	(btemp+9)^0,c
 15750  01BE4E  5034               	movf	(btemp+10)^0,w,c
 15751  01BE50  2632               	addwf	(btemp+8)^0,f,c
 15752  01BE52  5035               	movf	(btemp+11)^0,w,c
 15753  01BE54  2233               	addwfc	(btemp+9)^0,f,c
 15754  01BE56  5033               	movf	(btemp+9)^0,w,c
 15755  01BE58  E119               	bnz	l16410
 15756  01BE5A  0E0A               	movlw	10
 15757  01BE5C  5C32               	subwf	(btemp+8)^0,w,c
 15758  01BE5E  B0D8               	btfsc	status,0,c
 15759  01BE60  D015               	goto	l16410
 15760  01BE62                     u16010:
 15761                           
 15762                           ; BSR set to: 0
 15763                           ;stkvar	_s @ sp[(-2)+0]
 15764  01BE62  0EFE               	movlw	254
 15765  01BE64  24E1               	addwf	fsr1l,w,c
 15766  01BE66  6E2A               	movwf	btemp^0,c
 15767  01BE68  0EFF               	movlw	255
 15768  01BE6A  20E2               	addwfc	fsr1h,w,c
 15769  01BE6C  6E2B               	movwf	(btemp+1)^0,c
 15770  01BE6E  0060  F0AB  FFE6   	movff	btemp,postinc1
 15771  01BE74  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15772  01BE7A  ECE8  F0E6         	call	_getoff	;wreg free
 15773  01BE7E  0060  F0A8  F0B6   	movff	btemp,_dst_off
 15774  01BE84  0060  F0AC  F0B7   	movff	btemp+1,_dst_off+1
 15775  01BE8A  D012               	goto	l16412
 15776  01BE8C                     l16410:
 15777                           
 15778                           ; BSR set to: 0
 15779  01BE8C  0060  F1C0  F034   	movff	___timezone,btemp+10
 15780  01BE92  0060  F1C4  F035   	movff	___timezone+1,btemp+11
 15781  01BE98  0EF0               	movlw	240
 15782  01BE9A  2434               	addwf	(btemp+10)^0,w,c
 15783  01BE9C  6FB6               	movwf	_dst_off& (0+255),b
 15784  01BE9E  0EF1               	movlw	241
 15785  01BEA0  2035               	addwfc	(btemp+11)^0,w,c
 15786  01BEA2  6FB7               	movwf	(_dst_off+1)& (0+255),b
 15787  01BEA4  D005               	goto	l16412
 15788  01BEA6                     l3969:
 15789                           
 15790                           ; BSR set to: 1
 15791  01BEA6  0100               	movlb	0	; () banked
 15792  01BEA8  6BB8               	clrf	___daylight& (0+255),b
 15793  01BEAA  6BB9               	clrf	(___daylight+1)& (0+255),b
 15794  01BEAC  6BB6               	clrf	_dst_off& (0+255),b
 15795  01BEAE  6BB7               	clrf	(_dst_off+1)& (0+255),b
 15796  01BEB0                     l16412:
 15797                           
 15798                           ;stkvar	_s @ sp[(-2)+0]
 15799  01BEB0  50E1               	movf	fsr1l,w,c
 15800  01BEB2  0FFE               	addlw	-2
 15801  01BEB4  6ED9               	movwf	fsr2l,c
 15802  01BEB6  50E2               	movf	fsr1h,w,c
 15803  01BEB8  6EDA               	movwf	fsr2h,c
 15804  01BEBA  0EFF               	movlw	255
 15805  01BEBC  22DA               	addwfc	fsr2h,f,c
 15806  01BEBE  006F FF7B FFF6     	movff	postinc2,tblptrl
 15807  01BEC4  006F FF77 FFF7     	movff	postdec2,tblptrh
 15808  01BECA                     	if	0	;tblptru may be non-zero
 15809  01BECA                     	endif
 15810  01BECA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15811  01BECA  0E00               	movlw	low (__mediumconst shr (0+16))
 15812  01BECC  6EF8               	movwf	tblptru,c
 15813  01BECE                     	endif
 15814  01BECE  0008               	tblrd		*
 15815  01BED0  50F5               	movf	tablat,w,c
 15816  01BED2  0A2C               	xorlw	44
 15817  01BED4  A4D8               	btfss	status,2,c
 15818  01BED6  D023               	goto	l16418
 15819                           
 15820                           ;stkvar	_s @ sp[(-2)+0]
 15821  01BED8  0EFE               	movlw	-2
 15822  01BEDA  50E3               	movf	plusw1,w,c
 15823  01BEDC  0F01               	addlw	1
 15824  01BEDE  6E2A               	movwf	btemp^0,c
 15825  01BEE0  0EFE               	movlw	-2
 15826  01BEE2  0060  F0AB  FFE3   	movff	btemp,plusw1
 15827  01BEE8  6A2A               	clrf	btemp^0,c
 15828  01BEEA  0EFF               	movlw	-1
 15829  01BEEC  50E3               	movf	plusw1,w,c
 15830  01BEEE  202A               	addwfc	btemp^0,w,c
 15831  01BEF0  6E2A               	movwf	btemp^0,c
 15832  01BEF2  0EFF               	movlw	-1
 15833  01BEF4  0060  F0AB  FFE3   	movff	btemp,plusw1
 15834  01BEFA  0EE5               	movlw	low _r0
 15835  01BEFC  6EE6               	movwf	postinc1,c
 15836  01BEFE  0E01               	movlw	high _r0
 15837  01BF00  6EE6               	movwf	postinc1,c
 15838                           
 15839                           ;stkvar	_s @ sp[(-4)+0]
 15840  01BF02  0EFC               	movlw	252
 15841  01BF04  24E1               	addwf	fsr1l,w,c
 15842  01BF06  6E2A               	movwf	btemp^0,c
 15843  01BF08  0EFF               	movlw	255
 15844  01BF0A  20E2               	addwfc	fsr1h,w,c
 15845  01BF0C  6E2B               	movwf	(btemp+1)^0,c
 15846  01BF0E  0060  F0AB  FFE6   	movff	btemp,postinc1
 15847  01BF14  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15848  01BF1A  ECC9  F0DF         	call	_getrule	;wreg free
 15849  01BF1E                     l16418:
 15850                           
 15851                           ;stkvar	_s @ sp[(-2)+0]
 15852  01BF1E  50E1               	movf	fsr1l,w,c
 15853  01BF20  0FFE               	addlw	-2
 15854  01BF22  6ED9               	movwf	fsr2l,c
 15855  01BF24  50E2               	movf	fsr1h,w,c
 15856  01BF26  6EDA               	movwf	fsr2h,c
 15857  01BF28  0EFF               	movlw	255
 15858  01BF2A  22DA               	addwfc	fsr2h,f,c
 15859  01BF2C  006F FF7B FFF6     	movff	postinc2,tblptrl
 15860  01BF32  006F FF77 FFF7     	movff	postdec2,tblptrh
 15861  01BF38                     	if	0	;tblptru may be non-zero
 15862  01BF38                     	endif
 15863  01BF38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15864  01BF38  0E00               	movlw	low (__mediumconst shr (0+16))
 15865  01BF3A  6EF8               	movwf	tblptru,c
 15866  01BF3C                     	endif
 15867  01BF3C  0008               	tblrd		*
 15868  01BF3E  50F5               	movf	tablat,w,c
 15869  01BF40  0A2C               	xorlw	44
 15870  01BF42  A4D8               	btfss	status,2,c
 15871  01BF44  D023               	goto	l3977
 15872                           
 15873                           ;stkvar	_s @ sp[(-2)+0]
 15874  01BF46  0EFE               	movlw	-2
 15875  01BF48  50E3               	movf	plusw1,w,c
 15876  01BF4A  0F01               	addlw	1
 15877  01BF4C  6E2A               	movwf	btemp^0,c
 15878  01BF4E  0EFE               	movlw	-2
 15879  01BF50  0060  F0AB  FFE3   	movff	btemp,plusw1
 15880  01BF56  6A2A               	clrf	btemp^0,c
 15881  01BF58  0EFF               	movlw	-1
 15882  01BF5A  50E3               	movf	plusw1,w,c
 15883  01BF5C  202A               	addwfc	btemp^0,w,c
 15884  01BF5E  6E2A               	movwf	btemp^0,c
 15885  01BF60  0EFF               	movlw	-1
 15886  01BF62  0060  F0AB  FFE3   	movff	btemp,plusw1
 15887  01BF68  0EDB               	movlw	low _r1
 15888  01BF6A  6EE6               	movwf	postinc1,c
 15889  01BF6C  0E01               	movlw	high _r1
 15890  01BF6E  6EE6               	movwf	postinc1,c
 15891                           
 15892                           ;stkvar	_s @ sp[(-4)+0]
 15893  01BF70  0EFC               	movlw	252
 15894  01BF72  24E1               	addwf	fsr1l,w,c
 15895  01BF74  6E2A               	movwf	btemp^0,c
 15896  01BF76  0EFF               	movlw	255
 15897  01BF78  20E2               	addwfc	fsr1h,w,c
 15898  01BF7A  6E2B               	movwf	(btemp+1)^0,c
 15899  01BF7C  0060  F0AB  FFE6   	movff	btemp,postinc1
 15900  01BF82  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15901  01BF88  ECC9  F0DF         	call	_getrule	;wreg free
 15902  01BF8C                     l3977:
 15903                           
 15904                           ; _do_tzset: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 15905  01BF8C  52E5               	movf	postdec1,f,c
 15906  01BF8E  52E5               	movf	postdec1,f,c
 15907  01BF90  0012               	return		;funcret
 15908  01BF92                     __end_of_do_tzset:
 15909                           	opt callstack 0
 15910                           
 15911 ;; *************** function _getrule *****************
 15912 ;; Defined at:
 15913 ;;		line 60 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15914 ;; Parameters:    Size  Location     Type
 15915 ;;  p               2  [STACK] PTR PTR const unsigned c
 15916 ;;		 -> s(2), 
 15917 ;;  rule            2  [STACK] PTR int 
 15918 ;;		 -> r1(10), r0(10), 
 15919 ;; Auto vars:     Size  Location     Type
 15920 ;;  r               2  [STACK] int 
 15921 ;; Return value:  Size  Location     Type
 15922 ;;                  1  [STACK] void 
 15923 ;; Registers used:
 15924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15925 ;; Tracked objects:
 15926 ;;		On entry : 0/0
 15927 ;;		On exit  : 0/0
 15928 ;;		Unchanged: 0/0
 15929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15934 ;;Total ram usage:        0 bytes
 15935 ;; Hardware stack levels used:    1
 15936 ;; Hardware stack levels required when called:   17
 15937 ;; This function calls:
 15938 ;;		_getint
 15939 ;;		_getoff
 15940 ;; This function is called by:
 15941 ;;		_do_tzset
 15942 ;; This function uses a reentrant model
 15943 ;;
 15944                           
 15945                           	psect	text46
 15946  01BF92                     __ptext46:
 15947                           	opt callstack 0
 15948  01BF92                     _getrule:
 15949                           	opt callstack 0
 15950                           
 15951                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15952  01BF92  52E6               	movf	postinc1,f,c
 15953  01BF94  52E6               	movf	postinc1,f,c
 15954                           
 15955                           ;stkvar	_p @ sp[(-2)+-2]
 15956                           
 15957                           ;incstack = 0
 15958  01BF96  0EFC               	movlw	-4
 15959  01BF98  006F FF8F FFD9     	movff	plusw1,fsr2l
 15960  01BF9E  0EFD               	movlw	-3
 15961  01BFA0  006F FF8F FFDA     	movff	plusw1,fsr2h
 15962  01BFA6  006F FF7B FFF6     	movff	postinc2,tblptrl
 15963  01BFAC  006F FF77 FFF7     	movff	postdec2,tblptrh
 15964  01BFB2                     	if	0	;tblptru may be non-zero
 15965  01BFB2                     	endif
 15966  01BFB2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15967  01BFB2  0E00               	movlw	low (__mediumconst shr (0+16))
 15968  01BFB4  6EF8               	movwf	tblptru,c
 15969  01BFB6                     	endif
 15970  01BFB6  0008               	tblrd		*
 15971  01BFB8  50F5               	movf	tablat,w,c
 15972  01BFBA  6E34               	movwf	(btemp+10)^0,c
 15973  01BFBC  6A35               	clrf	(btemp+11)^0,c
 15974                           
 15975                           ;stkvar	_rule @ sp[(-2)+-4]
 15976  01BFBE  0EFA               	movlw	-6
 15977  01BFC0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15978  01BFC6  0EFB               	movlw	-5
 15979  01BFC8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15980  01BFCE  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 15981  01BFD4  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 15982  01BFDA  006F FF78  F034    	movff	postinc2,btemp+10
 15983  01BFE0  006F FF74  F035    	movff	postdec2,btemp+11
 15984                           
 15985                           ;stkvar	_r @ sp[(-2)+0]
 15986  01BFE6  0EFE               	movlw	-2
 15987  01BFE8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15988  01BFEE  0EFF               	movlw	-1
 15989  01BFF0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15990                           
 15991                           ;stkvar	_r @ sp[(-2)+0]
 15992  01BFF6  0EFE               	movlw	-2
 15993  01BFF8  006F FF8C  F02A    	movff	plusw1,btemp
 15994  01BFFE  0E4D               	movlw	77
 15995  01C000  182A               	xorwf	btemp^0,w,c
 15996  01C002  E104               	bnz	u15590
 15997  01C004  0EFF               	movlw	-1
 15998  01C006  50E3               	movf	plusw1,w,c
 15999  01C008  B4D8               	btfsc	status,2,c
 16000  01C00A  D036               	goto	l16108
 16001  01C00C                     u15590:
 16002                           
 16003                           ;stkvar	_r @ sp[(-2)+0]
 16004  01C00C  0EFE               	movlw	-2
 16005  01C00E  006F FF8C  F02A    	movff	plusw1,btemp
 16006  01C014  0E4A               	movlw	74
 16007  01C016  182A               	xorwf	btemp^0,w,c
 16008  01C018  E110               	bnz	l16104
 16009  01C01A  0EFF               	movlw	-1
 16010  01C01C  50E3               	movf	plusw1,w,c
 16011  01C01E  A4D8               	btfss	status,2,c
 16012  01C020  D00C               	goto	l16104
 16013                           
 16014                           ;stkvar	_p @ sp[(-2)+-2]
 16015  01C022  0EFC               	movlw	-4
 16016  01C024  006F FF8F FFD9     	movff	plusw1,fsr2l
 16017  01C02A  0EFD               	movlw	-3
 16018  01C02C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16019  01C032  2ADE               	incf	postinc2,f,c
 16020  01C034  0E00               	movlw	0
 16021  01C036  22DD               	addwfc	postdec2,f,c
 16022  01C038  D00C               	goto	l16106
 16023  01C03A                     l16104:
 16024                           
 16025                           ;stkvar	_rule @ sp[(-2)+-4]
 16026  01C03A  0EFA               	movlw	-6
 16027  01C03C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16028  01C042  0EFB               	movlw	-5
 16029  01C044  006F FF8F FFDA     	movff	plusw1,fsr2h
 16030  01C04A  0E00               	movlw	0
 16031  01C04C  6EDE               	movwf	postinc2,c
 16032  01C04E  0E00               	movlw	0
 16033  01C050  6EDD               	movwf	postdec2,c
 16034  01C052                     l16106:
 16035                           
 16036                           ;stkvar	_p @ sp[(-2)+-2]
 16037  01C052  0EFC               	movlw	-4
 16038  01C054  006F FF8F FFE6     	movff	plusw1,postinc1
 16039  01C05A  006F FF8F FFE6     	movff	plusw1,postinc1
 16040  01C060  EC68  F0FF         	call	_getint	;wreg free
 16041                           
 16042                           ;stkvar	_rule @ sp[(-2)+-4]
 16043  01C064  0EFA               	movlw	-6
 16044  01C066  006F FF8C  F034    	movff	plusw1,btemp+10
 16045  01C06C  0EFB               	movlw	-5
 16046  01C06E  006F FF8C  F035    	movff	plusw1,btemp+11
 16047  01C074  0E02               	movlw	2
 16048  01C076  D06D               	goto	L16
 16049  01C078                     l16108:
 16050                           
 16051                           ;stkvar	_p @ sp[(-2)+-2]
 16052  01C078  0EFC               	movlw	-4
 16053  01C07A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16054  01C080  0EFD               	movlw	-3
 16055  01C082  006F FF8F FFDA     	movff	plusw1,fsr2h
 16056  01C088  2ADE               	incf	postinc2,f,c
 16057  01C08A  0E00               	movlw	0
 16058  01C08C  22DD               	addwfc	postdec2,f,c
 16059                           
 16060                           ;stkvar	_p @ sp[(-2)+-2]
 16061  01C08E  0EFC               	movlw	-4
 16062  01C090  006F FF8F FFE6     	movff	plusw1,postinc1
 16063  01C096  006F FF8F FFE6     	movff	plusw1,postinc1
 16064  01C09C  EC68  F0FF         	call	_getint	;wreg free
 16065                           
 16066                           ;stkvar	_rule @ sp[(-2)+-4]
 16067  01C0A0  0EFA               	movlw	-6
 16068  01C0A2  006F FF8C  F034    	movff	plusw1,btemp+10
 16069  01C0A8  0EFB               	movlw	-5
 16070  01C0AA  006F FF8C  F035    	movff	plusw1,btemp+11
 16071  01C0B0  0E02               	movlw	2
 16072  01C0B2  2434               	addwf	(btemp+10)^0,w,c
 16073  01C0B4  6ED9               	movwf	fsr2l,c
 16074  01C0B6  0E00               	movlw	0
 16075  01C0B8  2035               	addwfc	(btemp+11)^0,w,c
 16076  01C0BA  6EDA               	movwf	fsr2h,c
 16077  01C0BC  0060  F0AB  FFDE   	movff	btemp,postinc2
 16078  01C0C2  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16079                           
 16080                           ;stkvar	_p @ sp[(-2)+-2]
 16081  01C0C8  0EFC               	movlw	-4
 16082  01C0CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 16083  01C0D0  0EFD               	movlw	-3
 16084  01C0D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 16085  01C0D8  2ADE               	incf	postinc2,f,c
 16086  01C0DA  0E00               	movlw	0
 16087  01C0DC  22DD               	addwfc	postdec2,f,c
 16088                           
 16089                           ;stkvar	_p @ sp[(-2)+-2]
 16090  01C0DE  0EFC               	movlw	-4
 16091  01C0E0  006F FF8F FFE6     	movff	plusw1,postinc1
 16092  01C0E6  006F FF8F FFE6     	movff	plusw1,postinc1
 16093  01C0EC  EC68  F0FF         	call	_getint	;wreg free
 16094                           
 16095                           ;stkvar	_rule @ sp[(-2)+-4]
 16096  01C0F0  0EFA               	movlw	-6
 16097  01C0F2  006F FF8C  F034    	movff	plusw1,btemp+10
 16098  01C0F8  0EFB               	movlw	-5
 16099  01C0FA  006F FF8C  F035    	movff	plusw1,btemp+11
 16100  01C100  0E04               	movlw	4
 16101  01C102  2434               	addwf	(btemp+10)^0,w,c
 16102  01C104  6ED9               	movwf	fsr2l,c
 16103  01C106  0E00               	movlw	0
 16104  01C108  2035               	addwfc	(btemp+11)^0,w,c
 16105  01C10A  6EDA               	movwf	fsr2h,c
 16106  01C10C  0060  F0AB  FFDE   	movff	btemp,postinc2
 16107  01C112  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16108                           
 16109                           ;stkvar	_p @ sp[(-2)+-2]
 16110  01C118  0EFC               	movlw	-4
 16111  01C11A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16112  01C120  0EFD               	movlw	-3
 16113  01C122  006F FF8F FFDA     	movff	plusw1,fsr2h
 16114  01C128  2ADE               	incf	postinc2,f,c
 16115  01C12A  0E00               	movlw	0
 16116  01C12C  22DD               	addwfc	postdec2,f,c
 16117                           
 16118                           ;stkvar	_p @ sp[(-2)+-2]
 16119  01C12E  0EFC               	movlw	-4
 16120  01C130  006F FF8F FFE6     	movff	plusw1,postinc1
 16121  01C136  006F FF8F FFE6     	movff	plusw1,postinc1
 16122  01C13C  EC68  F0FF         	call	_getint	;wreg free
 16123                           
 16124                           ;stkvar	_rule @ sp[(-2)+-4]
 16125  01C140  0EFA               	movlw	-6
 16126  01C142  006F FF8C  F034    	movff	plusw1,btemp+10
 16127  01C148  0EFB               	movlw	-5
 16128  01C14A  006F FF8C  F035    	movff	plusw1,btemp+11
 16129  01C150  0E06               	movlw	6
 16130  01C152                     L16:
 16131  01C152  2434               	addwf	(btemp+10)^0,w,c
 16132  01C154  6ED9               	movwf	fsr2l,c
 16133  01C156  0E00               	movlw	0
 16134  01C158  2035               	addwfc	(btemp+11)^0,w,c
 16135  01C15A  6EDA               	movwf	fsr2h,c
 16136  01C15C  0060  F0AB  FFDE   	movff	btemp,postinc2
 16137  01C162  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16138                           
 16139                           ;stkvar	_p @ sp[(-2)+-2]
 16140  01C168  0EFC               	movlw	-4
 16141  01C16A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16142  01C170  0EFD               	movlw	-3
 16143  01C172  006F FF8F FFDA     	movff	plusw1,fsr2h
 16144  01C178  006F FF7B FFF6     	movff	postinc2,tblptrl
 16145  01C17E  006F FF77 FFF7     	movff	postdec2,tblptrh
 16146  01C184                     	if	0	;tblptru may be non-zero
 16147  01C184                     	endif
 16148  01C184                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16149  01C184  0E00               	movlw	low (__mediumconst shr (0+16))
 16150  01C186  6EF8               	movwf	tblptru,c
 16151  01C188                     	endif
 16152  01C188  0008               	tblrd		*
 16153  01C18A  50F5               	movf	tablat,w,c
 16154  01C18C  0A2F               	xorlw	47
 16155  01C18E  A4D8               	btfss	status,2,c
 16156  01C190  D029               	goto	l16124
 16157                           
 16158                           ;stkvar	_p @ sp[(-2)+-2]
 16159  01C192  0EFC               	movlw	-4
 16160  01C194  006F FF8F FFD9     	movff	plusw1,fsr2l
 16161  01C19A  0EFD               	movlw	-3
 16162  01C19C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16163  01C1A2  2ADE               	incf	postinc2,f,c
 16164  01C1A4  0E00               	movlw	0
 16165  01C1A6  22DD               	addwfc	postdec2,f,c
 16166                           
 16167                           ;stkvar	_p @ sp[(-2)+-2]
 16168  01C1A8  0EFC               	movlw	-4
 16169  01C1AA  006F FF8F FFE6     	movff	plusw1,postinc1
 16170  01C1B0  006F FF8F FFE6     	movff	plusw1,postinc1
 16171  01C1B6  ECE8  F0E6         	call	_getoff	;wreg free
 16172                           
 16173                           ;stkvar	_rule @ sp[(-2)+-4]
 16174  01C1BA  0EFA               	movlw	-6
 16175  01C1BC  006F FF8C  F034    	movff	plusw1,btemp+10
 16176  01C1C2  0EFB               	movlw	-5
 16177  01C1C4  006F FF8C  F035    	movff	plusw1,btemp+11
 16178  01C1CA  0E08               	movlw	8
 16179  01C1CC  2434               	addwf	(btemp+10)^0,w,c
 16180  01C1CE  6ED9               	movwf	fsr2l,c
 16181  01C1D0  0E00               	movlw	0
 16182  01C1D2  2035               	addwfc	(btemp+11)^0,w,c
 16183  01C1D4  6EDA               	movwf	fsr2h,c
 16184  01C1D6  0060  F0AB  FFDE   	movff	btemp,postinc2
 16185  01C1DC  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16186  01C1E2  D012               	goto	l3942
 16187  01C1E4                     l16124:
 16188                           
 16189                           ;stkvar	_rule @ sp[(-2)+-4]
 16190  01C1E4  0EFA               	movlw	-6
 16191  01C1E6  006F FF8C  F034    	movff	plusw1,btemp+10
 16192  01C1EC  0EFB               	movlw	-5
 16193  01C1EE  006F FF8C  F035    	movff	plusw1,btemp+11
 16194  01C1F4  0E08               	movlw	8
 16195  01C1F6  2434               	addwf	(btemp+10)^0,w,c
 16196  01C1F8  6ED9               	movwf	fsr2l,c
 16197  01C1FA  0E00               	movlw	0
 16198  01C1FC  2035               	addwfc	(btemp+11)^0,w,c
 16199  01C1FE  6EDA               	movwf	fsr2h,c
 16200  01C200  0E20               	movlw	32
 16201  01C202  6EDE               	movwf	postinc2,c
 16202  01C204  0E1C               	movlw	28
 16203  01C206  6EDD               	movwf	postdec2,c
 16204  01C208                     l3942:
 16205                           
 16206                           ; _getrule: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16207  01C208  0EFA               	movlw	250
 16208  01C20A  26E1               	addwf	fsr1l,f,c
 16209  01C20C  0EFF               	movlw	255
 16210  01C20E  22E2               	addwfc	fsr1h,f,c
 16211  01C210  0012               	return		;funcret
 16212  01C212                     __end_of_getrule:
 16213                           	opt callstack 0
 16214                           
 16215 ;; *************** function _getoff *****************
 16216 ;; Defined at:
 16217 ;;		line 39 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16218 ;; Parameters:    Size  Location     Type
 16219 ;;  p               2  [STACK] PTR PTR const unsigned c
 16220 ;;		 -> s(2), 
 16221 ;; Auto vars:     Size  Location     Type
 16222 ;;  off             2  [STACK] int 
 16223 ;;  neg             2  [STACK] int 
 16224 ;; Return value:  Size  Location     Type
 16225 ;;                  2  [STACK] int 
 16226 ;; Registers used:
 16227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16228 ;; Tracked objects:
 16229 ;;		On entry : 0/0
 16230 ;;		On exit  : 0/0
 16231 ;;		Unchanged: 0/0
 16232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16237 ;;Total ram usage:        0 bytes
 16238 ;; Hardware stack levels used:    1
 16239 ;; Hardware stack levels required when called:   16
 16240 ;; This function calls:
 16241 ;;		_getint
 16242 ;; This function is called by:
 16243 ;;		_getrule
 16244 ;;		_do_tzset
 16245 ;; This function uses a reentrant model
 16246 ;;
 16247                           
 16248                           	psect	text47
 16249  01CDD0                     __ptext47:
 16250                           	opt callstack 0
 16251  01CDD0                     _getoff:
 16252                           	opt callstack 0
 16253                           
 16254                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16255  01CDD0  52E6               	movf	postinc1,f,c
 16256  01CDD2  52E6               	movf	postinc1,f,c
 16257  01CDD4  52E6               	movf	postinc1,f,c
 16258  01CDD6  52E6               	movf	postinc1,f,c
 16259                           
 16260                           ;stkvar	_neg @ sp[(-4)+2]
 16261                           
 16262                           ;incstack = 0
 16263  01CDD8  0EFE               	movlw	-2
 16264  01CDDA  6AE3               	clrf	plusw1,c
 16265  01CDDC  0EFF               	movlw	-1
 16266  01CDDE  6AE3               	clrf	plusw1,c
 16267                           
 16268                           ;stkvar	_p @ sp[(-4)+-2]
 16269  01CDE0  0EFA               	movlw	-6
 16270  01CDE2  006F FF8F FFD9     	movff	plusw1,fsr2l
 16271  01CDE8  0EFB               	movlw	-5
 16272  01CDEA  006F FF8F FFDA     	movff	plusw1,fsr2h
 16273  01CDF0  006F FF7B FFF6     	movff	postinc2,tblptrl
 16274  01CDF6  006F FF77 FFF7     	movff	postdec2,tblptrh
 16275  01CDFC                     	if	0	;tblptru may be non-zero
 16276  01CDFC                     	endif
 16277  01CDFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16278  01CDFC  0E00               	movlw	low (__mediumconst shr (0+16))
 16279  01CDFE  6EF8               	movwf	tblptru,c
 16280  01CE00                     	endif
 16281  01CE00  0008               	tblrd		*
 16282  01CE02  50F5               	movf	tablat,w,c
 16283  01CE04  0A2D               	xorlw	45
 16284  01CE06  A4D8               	btfss	status,2,c
 16285  01CE08  D018               	goto	l10862
 16286                           
 16287                           ;stkvar	_p @ sp[(-4)+-2]
 16288  01CE0A  0EFA               	movlw	-6
 16289  01CE0C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16290  01CE12  0EFB               	movlw	-5
 16291  01CE14  006F FF8F FFDA     	movff	plusw1,fsr2h
 16292  01CE1A  2ADE               	incf	postinc2,f,c
 16293  01CE1C  0E00               	movlw	0
 16294  01CE1E  22DD               	addwfc	postdec2,f,c
 16295  01CE20  0E01               	movlw	1
 16296  01CE22  6E34               	movwf	(btemp+10)^0,c
 16297  01CE24  0E00               	movlw	0
 16298  01CE26  6E35               	movwf	(btemp+11)^0,c
 16299                           
 16300                           ;stkvar	_neg @ sp[(-4)+2]
 16301  01CE28  0EFE               	movlw	-2
 16302  01CE2A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 16303  01CE30  0EFF               	movlw	-1
 16304  01CE32  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 16305  01CE38  D020               	goto	l10866
 16306  01CE3A                     l10862:
 16307                           
 16308                           ;stkvar	_p @ sp[(-4)+-2]
 16309  01CE3A  0EFA               	movlw	-6
 16310  01CE3C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16311  01CE42  0EFB               	movlw	-5
 16312  01CE44  006F FF8F FFDA     	movff	plusw1,fsr2h
 16313  01CE4A  006F FF7B FFF6     	movff	postinc2,tblptrl
 16314  01CE50  006F FF77 FFF7     	movff	postdec2,tblptrh
 16315  01CE56                     	if	0	;tblptru may be non-zero
 16316  01CE56                     	endif
 16317  01CE56                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16318  01CE56  0E00               	movlw	low (__mediumconst shr (0+16))
 16319  01CE58  6EF8               	movwf	tblptru,c
 16320  01CE5A                     	endif
 16321  01CE5A  0008               	tblrd		*
 16322  01CE5C  50F5               	movf	tablat,w,c
 16323  01CE5E  0A2B               	xorlw	43
 16324  01CE60  A4D8               	btfss	status,2,c
 16325  01CE62  D00B               	goto	l10866
 16326                           
 16327                           ;stkvar	_p @ sp[(-4)+-2]
 16328  01CE64  0EFA               	movlw	-6
 16329  01CE66  006F FF8F FFD9     	movff	plusw1,fsr2l
 16330  01CE6C  0EFB               	movlw	-5
 16331  01CE6E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16332  01CE74  2ADE               	incf	postinc2,f,c
 16333  01CE76  0E00               	movlw	0
 16334  01CE78  22DD               	addwfc	postdec2,f,c
 16335  01CE7A                     l10866:
 16336                           
 16337                           ;stkvar	_p @ sp[(-4)+-2]
 16338  01CE7A  0EFA               	movlw	-6
 16339  01CE7C  006F FF8F FFE6     	movff	plusw1,postinc1
 16340  01CE82  006F FF8F FFE6     	movff	plusw1,postinc1
 16341  01CE88  EC68  F0FF         	call	_getint	;wreg free
 16342  01CE8C  0060  F0A8  F034   	movff	btemp,btemp+10
 16343  01CE92  0060  F0AC  F035   	movff	btemp+1,btemp+11
 16344  01CE98  0E10               	movlw	16
 16345  01CE9A  0234               	mulwf	(btemp+10)^0,c
 16346  01CE9C  006F FFCC  F032    	movff	prodl,btemp+8
 16347  01CEA2  006F FFD0  F033    	movff	prodh,btemp+9
 16348  01CEA8  0235               	mulwf	(btemp+11)^0,c
 16349  01CEAA  50F3               	movf	prodl,w,c
 16350  01CEAC  2633               	addwf	(btemp+9)^0,f,c
 16351  01CEAE  0E0E               	movlw	14
 16352  01CEB0  0234               	mulwf	(btemp+10)^0,c
 16353  01CEB2  50F3               	movf	prodl,w,c
 16354  01CEB4  2633               	addwf	(btemp+9)^0,f,c
 16355                           
 16356                           ;stkvar	_off @ sp[(-4)+0]
 16357  01CEB6  0EFC               	movlw	-4
 16358  01CEB8  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 16359  01CEBE  0EFD               	movlw	-3
 16360  01CEC0  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 16361                           
 16362                           ;stkvar	_p @ sp[(-4)+-2]
 16363  01CEC6  0EFA               	movlw	-6
 16364  01CEC8  006F FF8F FFD9     	movff	plusw1,fsr2l
 16365  01CECE  0EFB               	movlw	-5
 16366  01CED0  006F FF8F FFDA     	movff	plusw1,fsr2h
 16367  01CED6  006F FF7B FFF6     	movff	postinc2,tblptrl
 16368  01CEDC  006F FF77 FFF7     	movff	postdec2,tblptrh
 16369  01CEE2                     	if	0	;tblptru may be non-zero
 16370  01CEE2                     	endif
 16371  01CEE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16372  01CEE2  0E00               	movlw	low (__mediumconst shr (0+16))
 16373  01CEE4  6EF8               	movwf	tblptru,c
 16374  01CEE6                     	endif
 16375  01CEE6  0008               	tblrd		*
 16376  01CEE8  50F5               	movf	tablat,w,c
 16377  01CEEA  0A3A               	xorlw	58
 16378  01CEEC  A4D8               	btfss	status,2,c
 16379  01CEEE  D064               	goto	l10880
 16380                           
 16381                           ;stkvar	_p @ sp[(-4)+-2]
 16382  01CEF0  0EFA               	movlw	-6
 16383  01CEF2  006F FF8F FFD9     	movff	plusw1,fsr2l
 16384  01CEF8  0EFB               	movlw	-5
 16385  01CEFA  006F FF8F FFDA     	movff	plusw1,fsr2h
 16386  01CF00  2ADE               	incf	postinc2,f,c
 16387  01CF02  0E00               	movlw	0
 16388  01CF04  22DD               	addwfc	postdec2,f,c
 16389                           
 16390                           ;stkvar	_p @ sp[(-4)+-2]
 16391  01CF06  0EFA               	movlw	-6
 16392  01CF08  006F FF8F FFE6     	movff	plusw1,postinc1
 16393  01CF0E  006F FF8F FFE6     	movff	plusw1,postinc1
 16394  01CF14  EC68  F0FF         	call	_getint	;wreg free
 16395  01CF18  0060  F0A8  F034   	movff	btemp,btemp+10
 16396  01CF1E  0060  F0AC  F035   	movff	btemp+1,btemp+11
 16397  01CF24  0E3C               	movlw	60
 16398  01CF26  0234               	mulwf	(btemp+10)^0,c
 16399  01CF28  006F FFCC  F032    	movff	prodl,btemp+8
 16400  01CF2E  006F FFD0  F033    	movff	prodh,btemp+9
 16401  01CF34  0235               	mulwf	(btemp+11)^0,c
 16402  01CF36  50F3               	movf	prodl,w,c
 16403  01CF38  2633               	addwf	(btemp+9)^0,f,c
 16404                           
 16405                           ;stkvar	_off @ sp[(-4)+0]
 16406  01CF3A  50E1               	movf	fsr1l,w,c
 16407  01CF3C  0FFC               	addlw	-4
 16408  01CF3E  6ED9               	movwf	fsr2l,c
 16409  01CF40  50E2               	movf	fsr1h,w,c
 16410  01CF42  6EDA               	movwf	fsr2h,c
 16411  01CF44  0EFF               	movlw	255
 16412  01CF46  22DA               	addwfc	fsr2h,f,c
 16413  01CF48  5032               	movf	(btemp+8)^0,w,c
 16414  01CF4A  26DE               	addwf	postinc2,f,c
 16415  01CF4C  5033               	movf	(btemp+9)^0,w,c
 16416  01CF4E  22DD               	addwfc	postdec2,f,c
 16417                           
 16418                           ;stkvar	_p @ sp[(-4)+-2]
 16419  01CF50  0EFA               	movlw	-6
 16420  01CF52  006F FF8F FFD9     	movff	plusw1,fsr2l
 16421  01CF58  0EFB               	movlw	-5
 16422  01CF5A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16423  01CF60  006F FF7B FFF6     	movff	postinc2,tblptrl
 16424  01CF66  006F FF77 FFF7     	movff	postdec2,tblptrh
 16425  01CF6C                     	if	0	;tblptru may be non-zero
 16426  01CF6C                     	endif
 16427  01CF6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16428  01CF6C  0E00               	movlw	low (__mediumconst shr (0+16))
 16429  01CF6E  6EF8               	movwf	tblptru,c
 16430  01CF70                     	endif
 16431  01CF70  0008               	tblrd		*
 16432  01CF72  50F5               	movf	tablat,w,c
 16433  01CF74  0A3A               	xorlw	58
 16434  01CF76  A4D8               	btfss	status,2,c
 16435  01CF78  D01F               	goto	l10880
 16436                           
 16437                           ;stkvar	_p @ sp[(-4)+-2]
 16438  01CF7A  0EFA               	movlw	-6
 16439  01CF7C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16440  01CF82  0EFB               	movlw	-5
 16441  01CF84  006F FF8F FFDA     	movff	plusw1,fsr2h
 16442  01CF8A  2ADE               	incf	postinc2,f,c
 16443  01CF8C  0E00               	movlw	0
 16444  01CF8E  22DD               	addwfc	postdec2,f,c
 16445                           
 16446                           ;stkvar	_p @ sp[(-4)+-2]
 16447  01CF90  0EFA               	movlw	-6
 16448  01CF92  006F FF8F FFE6     	movff	plusw1,postinc1
 16449  01CF98  006F FF8F FFE6     	movff	plusw1,postinc1
 16450  01CF9E  EC68  F0FF         	call	_getint	;wreg free
 16451                           
 16452                           ;stkvar	_off @ sp[(-4)+0]
 16453  01CFA2  50E1               	movf	fsr1l,w,c
 16454  01CFA4  0FFC               	addlw	-4
 16455  01CFA6  6ED9               	movwf	fsr2l,c
 16456  01CFA8  50E2               	movf	fsr1h,w,c
 16457  01CFAA  6EDA               	movwf	fsr2h,c
 16458  01CFAC  0EFF               	movlw	255
 16459  01CFAE  22DA               	addwfc	fsr2h,f,c
 16460  01CFB0  502A               	movf	btemp^0,w,c
 16461  01CFB2  26DE               	addwf	postinc2,f,c
 16462  01CFB4  502B               	movf	(btemp+1)^0,w,c
 16463  01CFB6  22DD               	addwfc	postdec2,f,c
 16464  01CFB8                     l10880:
 16465                           
 16466                           ;stkvar	_neg @ sp[(-4)+2]
 16467  01CFB8  0EFE               	movlw	-2
 16468  01CFBA  006F FF8C  F02A    	movff	plusw1,btemp
 16469  01CFC0  0EFF               	movlw	-1
 16470  01CFC2  50E3               	movf	plusw1,w,c
 16471  01CFC4  102A               	iorwf	btemp^0,w,c
 16472  01CFC6  A4D8               	btfss	status,2,c
 16473  01CFC8  D009               	goto	l10884
 16474                           
 16475                           ;stkvar	_off @ sp[(-4)+0]
 16476  01CFCA  0EFC               	movlw	-4
 16477  01CFCC  006F FF8C  F02A    	movff	plusw1,btemp
 16478  01CFD2  0EFD               	movlw	-3
 16479  01CFD4  006F FF8C  F02B    	movff	plusw1,btemp+1
 16480  01CFDA  D00D               	goto	l3933
 16481  01CFDC                     l10884:
 16482                           
 16483                           ;stkvar	_off @ sp[(-4)+0]
 16484  01CFDC  0EFC               	movlw	-4
 16485  01CFDE  006F FF8C  F02A    	movff	plusw1,btemp
 16486  01CFE4  1E2A               	comf	btemp^0,f,c
 16487  01CFE6  0EFD               	movlw	-3
 16488  01CFE8  006F FF8C  F02B    	movff	plusw1,btemp+1
 16489  01CFEE  1E2B               	comf	(btemp+1)^0,f,c
 16490  01CFF0  2A2A               	incf	btemp^0,f,c
 16491  01CFF2  B4D8               	btfsc	status,2,c
 16492  01CFF4  2A2B               	incf	(btemp+1)^0,f,c
 16493  01CFF6                     l3933:
 16494                           
 16495                           ; _getoff: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 16496  01CFF6  0EFA               	movlw	250
 16497  01CFF8  26E1               	addwf	fsr1l,f,c
 16498  01CFFA  0EFF               	movlw	255
 16499  01CFFC  22E2               	addwfc	fsr1h,f,c
 16500  01CFFE  0012               	return		;funcret
 16501  01D000                     __end_of_getoff:
 16502                           	opt callstack 0
 16503                           
 16504 ;; *************** function _getint *****************
 16505 ;; Defined at:
 16506 ;;		line 32 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16507 ;; Parameters:    Size  Location     Type
 16508 ;;  p               2  [STACK] PTR PTR const unsigned c
 16509 ;;		 -> s(2), 
 16510 ;; Auto vars:     Size  Location     Type
 16511 ;;  x               2  [STACK] unsigned int 
 16512 ;; Return value:  Size  Location     Type
 16513 ;;                  2  [STACK] int 
 16514 ;; Registers used:
 16515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16516 ;; Tracked objects:
 16517 ;;		On entry : 0/0
 16518 ;;		On exit  : 0/0
 16519 ;;		Unchanged: 0/0
 16520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16525 ;;Total ram usage:        0 bytes
 16526 ;; Hardware stack levels used:    1
 16527 ;; Hardware stack levels required when called:   15
 16528 ;; This function calls:
 16529 ;;		Nothing
 16530 ;; This function is called by:
 16531 ;;		_getoff
 16532 ;;		_getrule
 16533 ;; This function uses a reentrant model
 16534 ;;
 16535                           
 16536                           	psect	text48
 16537  01FED0                     __ptext48:
 16538                           	opt callstack 0
 16539  01FED0                     _getint:
 16540                           	opt callstack 0
 16541                           
 16542                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16543  01FED0  52E6               	movf	postinc1,f,c
 16544  01FED2  52E6               	movf	postinc1,f,c
 16545                           
 16546                           ;stkvar	_x @ sp[(-2)+0]
 16547                           
 16548                           ;incstack = 0
 16549  01FED4  0EFE               	movlw	-2
 16550  01FED6  6AE3               	clrf	plusw1,c
 16551  01FED8  0EFF               	movlw	-1
 16552  01FEDA  6AE3               	clrf	plusw1,c
 16553  01FEDC  D043               	goto	l10018
 16554  01FEDE                     l10014:
 16555  01FEDE  0ED0               	movlw	208
 16556  01FEE0  6E34               	movwf	(btemp+10)^0,c
 16557  01FEE2  0EFF               	movlw	255
 16558  01FEE4  6E35               	movwf	(btemp+11)^0,c
 16559                           
 16560                           ;stkvar	_x @ sp[(-2)+0]
 16561  01FEE6  0EFE               	movlw	-2
 16562  01FEE8  006F FF8C  F032    	movff	plusw1,btemp+8
 16563  01FEEE  0EFF               	movlw	-1
 16564  01FEF0  006F FF8C  F033    	movff	plusw1,btemp+9
 16565  01FEF6  0E0A               	movlw	10
 16566  01FEF8  0232               	mulwf	(btemp+8)^0,c
 16567  01FEFA  006F FFCC  F030    	movff	prodl,btemp+6
 16568  01FF00  006F FFD0  F031    	movff	prodh,btemp+7
 16569  01FF06  0233               	mulwf	(btemp+9)^0,c
 16570  01FF08  50F3               	movf	prodl,w,c
 16571  01FF0A  2631               	addwf	(btemp+7)^0,f,c
 16572                           
 16573                           ;stkvar	_p @ sp[(-2)+-2]
 16574  01FF0C  0EFC               	movlw	-4
 16575  01FF0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16576  01FF14  0EFD               	movlw	-3
 16577  01FF16  006F FF8F FFDA     	movff	plusw1,fsr2h
 16578  01FF1C  006F FF7B FFF6     	movff	postinc2,tblptrl
 16579  01FF22  006F FF77 FFF7     	movff	postdec2,tblptrh
 16580  01FF28                     	if	0	;tblptru may be non-zero
 16581  01FF28                     	endif
 16582  01FF28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16583  01FF28  0E00               	movlw	low (__mediumconst shr (0+16))
 16584  01FF2A  6EF8               	movwf	tblptru,c
 16585  01FF2C                     	endif
 16586  01FF2C  0008               	tblrd		*
 16587  01FF2E  50F5               	movf	tablat,w,c
 16588  01FF30  2630               	addwf	(btemp+6)^0,f,c
 16589  01FF32  0E00               	movlw	0
 16590  01FF34  2231               	addwfc	(btemp+7)^0,f,c
 16591  01FF36  5034               	movf	(btemp+10)^0,w,c
 16592  01FF38  2630               	addwf	(btemp+6)^0,f,c
 16593  01FF3A  5035               	movf	(btemp+11)^0,w,c
 16594  01FF3C  2231               	addwfc	(btemp+7)^0,f,c
 16595                           
 16596                           ;stkvar	_x @ sp[(-2)+0]
 16597  01FF3E  0EFE               	movlw	-2
 16598  01FF40  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 16599  01FF46  0EFF               	movlw	-1
 16600  01FF48  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 16601                           
 16602                           ;stkvar	_p @ sp[(-2)+-2]
 16603  01FF4E  0EFC               	movlw	-4
 16604  01FF50  006F FF8F FFD9     	movff	plusw1,fsr2l
 16605  01FF56  0EFD               	movlw	-3
 16606  01FF58  006F FF8F FFDA     	movff	plusw1,fsr2h
 16607  01FF5E  2ADE               	incf	postinc2,f,c
 16608  01FF60  0E00               	movlw	0
 16609  01FF62  22DD               	addwfc	postdec2,f,c
 16610  01FF64                     l10018:
 16611  01FF64  0ED0               	movlw	208
 16612  01FF66  6E34               	movwf	(btemp+10)^0,c
 16613  01FF68  0EFF               	movlw	255
 16614  01FF6A  6E35               	movwf	(btemp+11)^0,c
 16615                           
 16616                           ;stkvar	_p @ sp[(-2)+-2]
 16617  01FF6C  0EFC               	movlw	-4
 16618  01FF6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16619  01FF74  0EFD               	movlw	-3
 16620  01FF76  006F FF8F FFDA     	movff	plusw1,fsr2h
 16621  01FF7C  006F FF7B FFF6     	movff	postinc2,tblptrl
 16622  01FF82  006F FF77 FFF7     	movff	postdec2,tblptrh
 16623  01FF88                     	if	0	;tblptru may be non-zero
 16624  01FF88                     	endif
 16625  01FF88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16626  01FF88  0E00               	movlw	low (__mediumconst shr (0+16))
 16627  01FF8A  6EF8               	movwf	tblptru,c
 16628  01FF8C                     	endif
 16629  01FF8C  0008               	tblrd		*
 16630  01FF8E  50F5               	movf	tablat,w,c
 16631  01FF90  6E32               	movwf	(btemp+8)^0,c
 16632  01FF92  6A33               	clrf	(btemp+9)^0,c
 16633  01FF94  5034               	movf	(btemp+10)^0,w,c
 16634  01FF96  2632               	addwf	(btemp+8)^0,f,c
 16635  01FF98  5035               	movf	(btemp+11)^0,w,c
 16636  01FF9A  2233               	addwfc	(btemp+9)^0,f,c
 16637  01FF9C  5033               	movf	(btemp+9)^0,w,c
 16638  01FF9E  E104               	bnz	u7640
 16639  01FFA0  0E0A               	movlw	10
 16640  01FFA2  5C32               	subwf	(btemp+8)^0,w,c
 16641  01FFA4  A0D8               	btfss	status,0,c
 16642  01FFA6  D79B               	goto	l10014
 16643  01FFA8                     u7640:
 16644                           
 16645                           ;stkvar	_x @ sp[(-2)+0]
 16646  01FFA8  0EFE               	movlw	-2
 16647  01FFAA  006F FF8C  F02A    	movff	plusw1,btemp
 16648  01FFB0  0EFF               	movlw	-1
 16649  01FFB2  006F FF8C  F02B    	movff	plusw1,btemp+1
 16650                           
 16651                           ; _getint: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 16652  01FFB8  52E5               	movf	postdec1,f,c
 16653  01FFBA  52E5               	movf	postdec1,f,c
 16654  01FFBC  52E5               	movf	postdec1,f,c
 16655  01FFBE  52E5               	movf	postdec1,f,c
 16656  01FFC0  0012               	return		;funcret
 16657  01FFC2                     __end_of_getint:
 16658                           	opt callstack 0
 16659                           
 16660 ;; *************** function _getname *****************
 16661 ;; Defined at:
 16662 ;;		line 82 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16663 ;; Parameters:    Size  Location     Type
 16664 ;;  d               2  [STACK] PTR unsigned char 
 16665 ;;		 -> dst_name(7), std_name(7), 
 16666 ;;  p               2  [STACK] PTR PTR const unsigned c
 16667 ;;		 -> s(2), 
 16668 ;; Auto vars:     Size  Location     Type
 16669 ;;  i               2  [STACK] int 
 16670 ;; Return value:  Size  Location     Type
 16671 ;;                  1  [STACK] void 
 16672 ;; Registers used:
 16673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11,
      + tblptrl, tblptrh, tblptru
 16674 ;; Tracked objects:
 16675 ;;		On entry : 0/39
 16676 ;;		On exit  : 0/0
 16677 ;;		Unchanged: 0/0
 16678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16683 ;;Total ram usage:        0 bytes
 16684 ;; Hardware stack levels used:    1
 16685 ;; Hardware stack levels required when called:   15
 16686 ;; This function calls:
 16687 ;;		Nothing
 16688 ;; This function is called by:
 16689 ;;		_do_tzset
 16690 ;; This function uses a reentrant model
 16691 ;;
 16692                           
 16693                           	psect	text49
 16694  01AEBA                     __ptext49:
 16695                           	opt callstack 0
 16696  01AEBA                     _getname:
 16697                           	opt callstack 0
 16698                           
 16699                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16700  01AEBA  52E6               	movf	postinc1,f,c
 16701  01AEBC  52E6               	movf	postinc1,f,c
 16702                           
 16703                           ;stkvar	_p @ sp[(-2)+-4]
 16704                           
 16705                           ;incstack = 0
 16706  01AEBE  0EFA               	movlw	-6
 16707  01AEC0  006F FF8F FFD9     	movff	plusw1,fsr2l
 16708  01AEC6  0EFB               	movlw	-5
 16709  01AEC8  006F FF8F FFDA     	movff	plusw1,fsr2h
 16710  01AECE  006F FF7B FFF6     	movff	postinc2,tblptrl
 16711  01AED4  006F FF77 FFF7     	movff	postdec2,tblptrh
 16712  01AEDA                     	if	0	;tblptru may be non-zero
 16713  01AEDA                     	endif
 16714  01AEDA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16715  01AEDA  0E00               	movlw	low (__mediumconst shr (0+16))
 16716  01AEDC  6EF8               	movwf	tblptru,c
 16717  01AEDE                     	endif
 16718  01AEDE  0008               	tblrd		*
 16719  01AEE0  50F5               	movf	tablat,w,c
 16720  01AEE2  0A3C               	xorlw	60
 16721  01AEE4  A4D8               	btfss	status,2,c
 16722  01AEE6  D09E               	goto	l16142
 16723                           
 16724                           ;stkvar	_p @ sp[(-2)+-4]
 16725  01AEE8  0EFA               	movlw	-6
 16726  01AEEA  006F FF8F FFD9     	movff	plusw1,fsr2l
 16727  01AEF0  0EFB               	movlw	-5
 16728  01AEF2  006F FF8F FFDA     	movff	plusw1,fsr2h
 16729  01AEF8  2ADE               	incf	postinc2,f,c
 16730  01AEFA  0E00               	movlw	0
 16731  01AEFC  22DD               	addwfc	postdec2,f,c
 16732                           
 16733                           ;stkvar	_i @ sp[(-2)+0]
 16734  01AEFE  0EFE               	movlw	-2
 16735  01AF00  6AE3               	clrf	plusw1,c
 16736  01AF02  0EFF               	movlw	-1
 16737  01AF04  6AE3               	clrf	plusw1,c
 16738  01AF06  D04D               	goto	l16136
 16739  01AF08                     l16132:
 16740                           
 16741                           ;stkvar	_i @ sp[(-2)+0]
 16742  01AF08  0EFE               	movlw	-2
 16743  01AF0A  006F FF8C  F034    	movff	plusw1,btemp+10
 16744  01AF10  0EFF               	movlw	-1
 16745  01AF12  006F FF8C  F035    	movff	plusw1,btemp+11
 16746                           
 16747                           ;stkvar	_p @ sp[(-2)+-4]
 16748  01AF18  0EFA               	movlw	-6
 16749  01AF1A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16750  01AF20  0EFB               	movlw	-5
 16751  01AF22  006F FF8F FFDA     	movff	plusw1,fsr2h
 16752  01AF28  006F FF78  F032    	movff	postinc2,btemp+8
 16753  01AF2E  006F FF74  F033    	movff	postdec2,btemp+9
 16754  01AF34  5034               	movf	(btemp+10)^0,w,c
 16755  01AF36  2632               	addwf	(btemp+8)^0,f,c
 16756  01AF38  5035               	movf	(btemp+11)^0,w,c
 16757  01AF3A  2233               	addwfc	(btemp+9)^0,f,c
 16758  01AF3C  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16759  01AF42  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16760  01AF48                     	if	0	;tblptru may be non-zero
 16761  01AF48                     	endif
 16762  01AF48                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16763  01AF48  0E00               	movlw	low (__mediumconst shr (0+16))
 16764  01AF4A  6EF8               	movwf	tblptru,c
 16765  01AF4C                     	endif
 16766                           
 16767                           ;stkvar	_i @ sp[(-2)+0]
 16768  01AF4C  0EFE               	movlw	-2
 16769  01AF4E  006F FF8C  F034    	movff	plusw1,btemp+10
 16770  01AF54  0EFF               	movlw	-1
 16771  01AF56  006F FF8C  F035    	movff	plusw1,btemp+11
 16772                           
 16773                           ;stkvar	_d @ sp[(-2)+-2]
 16774  01AF5C  0EFC               	movlw	-4
 16775  01AF5E  006F FF8C  F032    	movff	plusw1,btemp+8
 16776  01AF64  0EFD               	movlw	-3
 16777  01AF66  006F FF8C  F033    	movff	plusw1,btemp+9
 16778  01AF6C  5034               	movf	(btemp+10)^0,w,c
 16779  01AF6E  2432               	addwf	(btemp+8)^0,w,c
 16780  01AF70  6ED9               	movwf	fsr2l,c
 16781  01AF72  5035               	movf	(btemp+11)^0,w,c
 16782  01AF74  2033               	addwfc	(btemp+9)^0,w,c
 16783  01AF76  6EDA               	movwf	fsr2h,c
 16784  01AF78  0008               	tblrd		*
 16785  01AF7A  006F FFD7 FFDF     	movff	tablat,indf2
 16786                           
 16787                           ;stkvar	_i @ sp[(-2)+0]
 16788  01AF80  0EFE               	movlw	-2
 16789  01AF82  50E3               	movf	plusw1,w,c
 16790  01AF84  0F01               	addlw	1
 16791  01AF86  6E2A               	movwf	btemp^0,c
 16792  01AF88  0EFE               	movlw	-2
 16793  01AF8A  0060  F0AB  FFE3   	movff	btemp,plusw1
 16794  01AF90  6A2A               	clrf	btemp^0,c
 16795  01AF92  0EFF               	movlw	-1
 16796  01AF94  50E3               	movf	plusw1,w,c
 16797  01AF96  202A               	addwfc	btemp^0,w,c
 16798  01AF98  6E2A               	movwf	btemp^0,c
 16799  01AF9A  0EFF               	movlw	-1
 16800  01AF9C  0060  F0AB  FFE3   	movff	btemp,plusw1
 16801  01AFA2                     l16136:
 16802                           
 16803                           ;stkvar	_i @ sp[(-2)+0]
 16804  01AFA2  0EFE               	movlw	-2
 16805  01AFA4  006F FF8C  F034    	movff	plusw1,btemp+10
 16806  01AFAA  0EFF               	movlw	-1
 16807  01AFAC  006F FF8C  F035    	movff	plusw1,btemp+11
 16808                           
 16809                           ;stkvar	_p @ sp[(-2)+-4]
 16810  01AFB2  0EFA               	movlw	-6
 16811  01AFB4  006F FF8F FFD9     	movff	plusw1,fsr2l
 16812  01AFBA  0EFB               	movlw	-5
 16813  01AFBC  006F FF8F FFDA     	movff	plusw1,fsr2h
 16814  01AFC2  006F FF78  F032    	movff	postinc2,btemp+8
 16815  01AFC8  006F FF74  F033    	movff	postdec2,btemp+9
 16816  01AFCE  5034               	movf	(btemp+10)^0,w,c
 16817  01AFD0  2632               	addwf	(btemp+8)^0,f,c
 16818  01AFD2  5035               	movf	(btemp+11)^0,w,c
 16819  01AFD4  2233               	addwfc	(btemp+9)^0,f,c
 16820  01AFD6  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16821  01AFDC  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16822  01AFE2                     	if	0	;tblptru may be non-zero
 16823  01AFE2                     	endif
 16824  01AFE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16825  01AFE2  0E00               	movlw	low (__mediumconst shr (0+16))
 16826  01AFE4  6EF8               	movwf	tblptru,c
 16827  01AFE6                     	endif
 16828  01AFE6  0008               	tblrd		*
 16829  01AFE8  50F5               	movf	tablat,w,c
 16830  01AFEA  0A3E               	xorlw	62
 16831  01AFEC  B4D8               	btfsc	status,2,c
 16832  01AFEE  D00E               	goto	u15640
 16833                           
 16834                           ;stkvar	_i @ sp[(-2)+0]
 16835  01AFF0  0EFF               	movlw	-1
 16836  01AFF2  BEE3               	btfsc	plusw1,7,c
 16837  01AFF4  D789               	goto	l16132
 16838  01AFF6  0EFF               	movlw	-1
 16839  01AFF8  50E3               	movf	plusw1,w,c
 16840  01AFFA  E108               	bnz	u15640
 16841  01AFFC  0EFE               	movlw	-2
 16842  01AFFE  006F FF8C  F02A    	movff	plusw1,btemp
 16843  01B004  0E06               	movlw	6
 16844  01B006  5E2A               	subwf	btemp^0,f,c
 16845  01B008  A0D8               	btfss	status,0,c
 16846  01B00A  D77E               	goto	l16132
 16847  01B00C                     u15640:
 16848                           
 16849                           ;stkvar	_p @ sp[(-2)+-4]
 16850  01B00C  0EFA               	movlw	-6
 16851  01B00E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16852  01B014  0EFB               	movlw	-5
 16853  01B016  006F FF8F FFDA     	movff	plusw1,fsr2h
 16854  01B01C  2ADE               	incf	postinc2,f,c
 16855  01B01E  0E00               	movlw	0
 16856  01B020  22DD               	addwfc	postdec2,f,c
 16857  01B022  D098               	goto	u15660
 16858  01B024                     l16142:
 16859                           
 16860                           ;stkvar	_i @ sp[(-2)+0]
 16861  01B024  0EFE               	movlw	-2
 16862  01B026  6AE3               	clrf	plusw1,c
 16863  01B028  0EFF               	movlw	-1
 16864  01B02A  6AE3               	clrf	plusw1,c
 16865  01B02C  D04D               	goto	l16148
 16866  01B02E                     l16144:
 16867                           
 16868                           ;stkvar	_i @ sp[(-2)+0]
 16869  01B02E  0EFE               	movlw	-2
 16870  01B030  006F FF8C  F034    	movff	plusw1,btemp+10
 16871  01B036  0EFF               	movlw	-1
 16872  01B038  006F FF8C  F035    	movff	plusw1,btemp+11
 16873                           
 16874                           ;stkvar	_p @ sp[(-2)+-4]
 16875  01B03E  0EFA               	movlw	-6
 16876  01B040  006F FF8F FFD9     	movff	plusw1,fsr2l
 16877  01B046  0EFB               	movlw	-5
 16878  01B048  006F FF8F FFDA     	movff	plusw1,fsr2h
 16879  01B04E  006F FF78  F032    	movff	postinc2,btemp+8
 16880  01B054  006F FF74  F033    	movff	postdec2,btemp+9
 16881  01B05A  5034               	movf	(btemp+10)^0,w,c
 16882  01B05C  2632               	addwf	(btemp+8)^0,f,c
 16883  01B05E  5035               	movf	(btemp+11)^0,w,c
 16884  01B060  2233               	addwfc	(btemp+9)^0,f,c
 16885  01B062  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16886  01B068  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16887  01B06E                     	if	0	;tblptru may be non-zero
 16888  01B06E                     	endif
 16889  01B06E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16890  01B06E  0E00               	movlw	low (__mediumconst shr (0+16))
 16891  01B070  6EF8               	movwf	tblptru,c
 16892  01B072                     	endif
 16893                           
 16894                           ;stkvar	_i @ sp[(-2)+0]
 16895  01B072  0EFE               	movlw	-2
 16896  01B074  006F FF8C  F034    	movff	plusw1,btemp+10
 16897  01B07A  0EFF               	movlw	-1
 16898  01B07C  006F FF8C  F035    	movff	plusw1,btemp+11
 16899                           
 16900                           ;stkvar	_d @ sp[(-2)+-2]
 16901  01B082  0EFC               	movlw	-4
 16902  01B084  006F FF8C  F032    	movff	plusw1,btemp+8
 16903  01B08A  0EFD               	movlw	-3
 16904  01B08C  006F FF8C  F033    	movff	plusw1,btemp+9
 16905  01B092  5034               	movf	(btemp+10)^0,w,c
 16906  01B094  2432               	addwf	(btemp+8)^0,w,c
 16907  01B096  6ED9               	movwf	fsr2l,c
 16908  01B098  5035               	movf	(btemp+11)^0,w,c
 16909  01B09A  2033               	addwfc	(btemp+9)^0,w,c
 16910  01B09C  6EDA               	movwf	fsr2h,c
 16911  01B09E  0008               	tblrd		*
 16912  01B0A0  006F FFD7 FFDF     	movff	tablat,indf2
 16913                           
 16914                           ;stkvar	_i @ sp[(-2)+0]
 16915  01B0A6  0EFE               	movlw	-2
 16916  01B0A8  50E3               	movf	plusw1,w,c
 16917  01B0AA  0F01               	addlw	1
 16918  01B0AC  6E2A               	movwf	btemp^0,c
 16919  01B0AE  0EFE               	movlw	-2
 16920  01B0B0  0060  F0AB  FFE3   	movff	btemp,plusw1
 16921  01B0B6  6A2A               	clrf	btemp^0,c
 16922  01B0B8  0EFF               	movlw	-1
 16923  01B0BA  50E3               	movf	plusw1,w,c
 16924  01B0BC  202A               	addwfc	btemp^0,w,c
 16925  01B0BE  6E2A               	movwf	btemp^0,c
 16926  01B0C0  0EFF               	movlw	-1
 16927  01B0C2  0060  F0AB  FFE3   	movff	btemp,plusw1
 16928  01B0C8                     l16148:
 16929  01B0C8  0E9F               	movlw	159
 16930  01B0CA  6E34               	movwf	(btemp+10)^0,c
 16931  01B0CC  0EFF               	movlw	255
 16932  01B0CE  6E35               	movwf	(btemp+11)^0,c
 16933                           
 16934                           ;stkvar	_i @ sp[(-2)+0]
 16935  01B0D0  0EFE               	movlw	-2
 16936  01B0D2  006F FF8C  F032    	movff	plusw1,btemp+8
 16937  01B0D8  0EFF               	movlw	-1
 16938  01B0DA  006F FF8C  F033    	movff	plusw1,btemp+9
 16939                           
 16940                           ;stkvar	_p @ sp[(-2)+-4]
 16941  01B0E0  0EFA               	movlw	-6
 16942  01B0E2  006F FF8F FFD9     	movff	plusw1,fsr2l
 16943  01B0E8  0EFB               	movlw	-5
 16944  01B0EA  006F FF8F FFDA     	movff	plusw1,fsr2h
 16945  01B0F0  006F FF78  F030    	movff	postinc2,btemp+6
 16946  01B0F6  006F FF74  F031    	movff	postdec2,btemp+7
 16947  01B0FC  5032               	movf	(btemp+8)^0,w,c
 16948  01B0FE  2630               	addwf	(btemp+6)^0,f,c
 16949  01B100  5033               	movf	(btemp+9)^0,w,c
 16950  01B102  2231               	addwfc	(btemp+7)^0,f,c
 16951  01B104  0060  F0C3  FFF6   	movff	btemp+6,tblptrl
 16952  01B10A  0060  F0C7  FFF7   	movff	btemp+7,tblptrh
 16953  01B110                     	if	0	;tblptru may be non-zero
 16954  01B110                     	endif
 16955  01B110                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16956  01B110  0E00               	movlw	low (__mediumconst shr (0+16))
 16957  01B112  6EF8               	movwf	tblptru,c
 16958  01B114                     	endif
 16959  01B114  0008               	tblrd		*
 16960  01B116  50F5               	movf	tablat,w,c
 16961  01B118  6E32               	movwf	(btemp+8)^0,c
 16962  01B11A  6A33               	clrf	(btemp+9)^0,c
 16963  01B11C  0E20               	movlw	32
 16964  01B11E  1232               	iorwf	(btemp+8)^0,f,c
 16965  01B120  0E00               	movlw	0
 16966  01B122  1233               	iorwf	(btemp+9)^0,f,c
 16967  01B124  5034               	movf	(btemp+10)^0,w,c
 16968  01B126  2632               	addwf	(btemp+8)^0,f,c
 16969  01B128  5035               	movf	(btemp+11)^0,w,c
 16970  01B12A  2233               	addwfc	(btemp+9)^0,f,c
 16971  01B12C  5033               	movf	(btemp+9)^0,w,c
 16972  01B12E  E112               	bnz	l16152
 16973  01B130  0E1A               	movlw	26
 16974  01B132  5C32               	subwf	(btemp+8)^0,w,c
 16975  01B134  B0D8               	btfsc	status,0,c
 16976  01B136  D00E               	goto	u15660
 16977                           
 16978                           ;stkvar	_i @ sp[(-2)+0]
 16979  01B138  0EFF               	movlw	-1
 16980  01B13A  BEE3               	btfsc	plusw1,7,c
 16981  01B13C  D778               	goto	l16144
 16982  01B13E  0EFF               	movlw	-1
 16983  01B140  50E3               	movf	plusw1,w,c
 16984  01B142  E108               	bnz	u15660
 16985  01B144  0EFE               	movlw	-2
 16986  01B146  006F FF8C  F02A    	movff	plusw1,btemp
 16987  01B14C  0E06               	movlw	6
 16988  01B14E  5E2A               	subwf	btemp^0,f,c
 16989  01B150  A0D8               	btfss	status,0,c
 16990  01B152  D76D               	goto	l16144
 16991  01B154                     u15660:
 16992  01B154                     l16152:
 16993                           
 16994                           ;stkvar	_i @ sp[(-2)+0]
 16995  01B154  0EFE               	movlw	-2
 16996  01B156  006F FF8C  F034    	movff	plusw1,btemp+10
 16997  01B15C  0EFF               	movlw	-1
 16998  01B15E  006F FF8C  F035    	movff	plusw1,btemp+11
 16999                           
 17000                           ;stkvar	_p @ sp[(-2)+-4]
 17001  01B164  0EFA               	movlw	-6
 17002  01B166  006F FF8F FFD9     	movff	plusw1,fsr2l
 17003  01B16C  0EFB               	movlw	-5
 17004  01B16E  006F FF8F FFDA     	movff	plusw1,fsr2h
 17005  01B174  5034               	movf	(btemp+10)^0,w,c
 17006  01B176  26DE               	addwf	postinc2,f,c
 17007  01B178  5035               	movf	(btemp+11)^0,w,c
 17008  01B17A  22DD               	addwfc	postdec2,f,c
 17009                           
 17010                           ;stkvar	_i @ sp[(-2)+0]
 17011  01B17C  0EFE               	movlw	-2
 17012  01B17E  006F FF8C  F034    	movff	plusw1,btemp+10
 17013  01B184  0EFF               	movlw	-1
 17014  01B186  006F FF8C  F035    	movff	plusw1,btemp+11
 17015                           
 17016                           ;stkvar	_d @ sp[(-2)+-2]
 17017  01B18C  0EFC               	movlw	-4
 17018  01B18E  006F FF8C  F032    	movff	plusw1,btemp+8
 17019  01B194  0EFD               	movlw	-3
 17020  01B196  006F FF8C  F033    	movff	plusw1,btemp+9
 17021  01B19C  5034               	movf	(btemp+10)^0,w,c
 17022  01B19E  2432               	addwf	(btemp+8)^0,w,c
 17023  01B1A0  6ED9               	movwf	fsr2l,c
 17024  01B1A2  5035               	movf	(btemp+11)^0,w,c
 17025  01B1A4  2033               	addwfc	(btemp+9)^0,w,c
 17026  01B1A6  6EDA               	movwf	fsr2h,c
 17027  01B1A8  0E00               	movlw	0
 17028  01B1AA  6EDF               	movwf	indf2,c
 17029                           
 17030                           ; _getname: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17031  01B1AC  0EFA               	movlw	250
 17032  01B1AE  26E1               	addwf	fsr1l,f,c
 17033  01B1B0  0EFF               	movlw	255
 17034  01B1B2  22E2               	addwfc	fsr1h,f,c
 17035  01B1B4  0012               	return		;funcret
 17036  01B1B6                     __end_of_getname:
 17037                           	opt callstack 0
 17038                           
 17039 ;; *************** function ___secs_to_tm *****************
 17040 ;; Defined at:
 17041 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__secs_to_tm.c"
 17042 ;; Parameters:    Size  Location     Type
 17043 ;;  t               8  [STACK] long long 
 17044 ;;  tm              2  [STACK] PTR struct tm
 17045 ;;		 -> localtime@tm(24), 
 17046 ;; Auto vars:     Size  Location     Type
 17047 ;;  years           8  [STACK] long long 
 17048 ;;  days            8  [STACK] long long 
 17049 ;;  secs            8  [STACK] long long 
 17050 ;;  remdays         4  [STACK] long 
 17051 ;;  q_cycles        4  [STACK] long 
 17052 ;;  c_cycles        4  [STACK] long 
 17053 ;;  remyears        4  [STACK] long 
 17054 ;;  remsecs         4  [STACK] long 
 17055 ;;  qc_cycles       4  [STACK] long 
 17056 ;;  months          2  [STACK] int 
 17057 ;;  leap            2  [STACK] int 
 17058 ;;  yday            2  [STACK] int 
 17059 ;;  wday            2  [STACK] int 
 17060 ;; Return value:  Size  Location     Type
 17061 ;;                  4  [STACK] long 
 17062 ;; Registers used:
 17063 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru
 17064 ;; Tracked objects:
 17065 ;;		On entry : 0/39
 17066 ;;		On exit  : 0/0
 17067 ;;		Unchanged: 0/0
 17068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17073 ;;Total ram usage:        0 bytes
 17074 ;; Hardware stack levels used:    1
 17075 ;; Hardware stack levels required when called:   16
 17076 ;; This function calls:
 17077 ;;		___aldiv
 17078 ;;		___almod
 17079 ;;		___aodiv
 17080 ;;		___aomod
 17081 ;;		___lmul
 17082 ;;		___omul
 17083 ;; This function is called by:
 17084 ;;		___localtime_r
 17085 ;; This function uses a reentrant model
 17086 ;;
 17087                           
 17088                           	psect	text50
 17089  0128FE                     __ptext50:
 17090                           	opt callstack 0
 17091  0128FE                     ___secs_to_tm:
 17092                           	opt callstack 0
 17093                           
 17094                           ; autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17095  0128FE  0E39               	movlw	57
 17096  012900  26E1               	addwf	fsr1l,f,c
 17097  012902  0E00               	movlw	0
 17098  012904  22E2               	addwfc	fsr1h,f,c
 17099                           
 17100                           ;stkvar	_t @ sp[(-57)+-8]
 17101                           
 17102                           ;incstack = 0
 17103  012906  0EC6               	movlw	-58
 17104  012908  AEE3               	btfss	plusw1,7,c
 17105  01290A  D026               	goto	u16280
 17106  01290C  0EC1               	movlw	-63
 17107  01290E  006F FF8C  F02A    	movff	plusw1,btemp
 17108  012914  0E80               	movlw	128
 17109  012916  5E2A               	subwf	btemp^0,f,c
 17110  012918  0EC2               	movlw	-62
 17111  01291A  006F FF8C  F02A    	movff	plusw1,btemp
 17112  012920  0EBD               	movlw	189
 17113  012922  5A2A               	subwfb	btemp^0,f,c
 17114  012924  0EC3               	movlw	-61
 17115  012926  006F FF8C  F02A    	movff	plusw1,btemp
 17116  01292C  0E0E               	movlw	14
 17117  01292E  5A2A               	subwfb	btemp^0,f,c
 17118  012930  0EC4               	movlw	-60
 17119  012932  006F FF8C  F02A    	movff	plusw1,btemp
 17120  012938  0EFF               	movlw	255
 17121  01293A  5A2A               	subwfb	btemp^0,f,c
 17122  01293C  0EC5               	movlw	-59
 17123  01293E  006F FF8C  F02A    	movff	plusw1,btemp
 17124  012944  0EFF               	movlw	255
 17125  012946  5A2A               	subwfb	btemp^0,f,c
 17126  012948  0EC6               	movlw	-58
 17127  01294A  006F FF8C  F02A    	movff	plusw1,btemp
 17128  012950  0EFF               	movlw	255
 17129  012952  5A2A               	subwfb	btemp^0,f,c
 17130  012954  A0D8               	btfss	status,0,c
 17131  012956  D028               	goto	u16290
 17132  012958                     u16280:
 17133                           
 17134                           ;stkvar	_t @ sp[(-57)+-8]
 17135  012958  0EC6               	movlw	-58
 17136  01295A  BEE3               	btfsc	plusw1,7,c
 17137  01295C  D02F               	goto	l16720
 17138  01295E  0EC6               	movlw	-58
 17139  012960  50E3               	movf	plusw1,w,c
 17140  012962  E122               	bnz	u16290
 17141  012964  0EC5               	movlw	-59
 17142  012966  50E3               	movf	plusw1,w,c
 17143  012968  E11F               	bnz	u16290
 17144  01296A  0EC4               	movlw	-60
 17145  01296C  50E3               	movf	plusw1,w,c
 17146  01296E  E11C               	bnz	u16290
 17147  012970  0EBF               	movlw	-65
 17148  012972  04E3               	decf	plusw1,w,c
 17149  012974  0EC0               	movlw	-64
 17150  012976  006F FF8C  F02A    	movff	plusw1,btemp
 17151  01297C  0E7B               	movlw	123
 17152  01297E  5A2A               	subwfb	btemp^0,f,c
 17153  012980  0EC1               	movlw	-63
 17154  012982  006F FF8C  F02A    	movff	plusw1,btemp
 17155  012988  0E9D               	movlw	157
 17156  01298A  5A2A               	subwfb	btemp^0,f,c
 17157  01298C  0EC2               	movlw	-62
 17158  01298E  006F FF8C  F02A    	movff	plusw1,btemp
 17159  012994  0E40               	movlw	64
 17160  012996  5A2A               	subwfb	btemp^0,f,c
 17161  012998  0EC3               	movlw	-61
 17162  01299A  006F FF8C  F02A    	movff	plusw1,btemp
 17163  0129A0  0EF1               	movlw	241
 17164  0129A2  5A2A               	subwfb	btemp^0,f,c
 17165  0129A4  A0D8               	btfss	status,0,c
 17166  0129A6  D00A               	goto	l16720
 17167  0129A8                     u16290:
 17168  0129A8  0EFF               	movlw	255
 17169  0129AA  6E2A               	movwf	btemp^0,c
 17170  0129AC  0EFF               	movlw	255
 17171  0129AE  6E2B               	movwf	(btemp+1)^0,c
 17172  0129B0  0EFF               	movlw	255
 17173  0129B2  6E2C               	movwf	(btemp+2)^0,c
 17174  0129B4  0EFF               	movlw	255
 17175  0129B6  6E2D               	movwf	(btemp+3)^0,c
 17176  0129B8  EFE3  F09C         	goto	l3849
 17177  0129BC                     l16720:
 17178                           
 17179                           ;stkvar	_t @ sp[(-57)+-8]
 17180  0129BC  0EBF               	movlw	-65
 17181  0129BE  50E3               	movf	plusw1,w,c
 17182  0129C0  0F80               	addlw	128
 17183  0129C2  6E3A               	movwf	(btemp+16)^0,c
 17184  0129C4  0EC0               	movlw	-64
 17185  0129C6  006F FF8C  F03B    	movff	plusw1,btemp+17
 17186  0129CC  0EA2               	movlw	162
 17187  0129CE  223B               	addwfc	(btemp+17)^0,f,c
 17188  0129D0  0EC1               	movlw	-63
 17189  0129D2  006F FF8C  F03C    	movff	plusw1,btemp+18
 17190  0129D8  0E43               	movlw	67
 17191  0129DA  223C               	addwfc	(btemp+18)^0,f,c
 17192  0129DC  0EC2               	movlw	-62
 17193  0129DE  006F FF8C  F03D    	movff	plusw1,btemp+19
 17194  0129E4  0EC7               	movlw	199
 17195  0129E6  223D               	addwfc	(btemp+19)^0,f,c
 17196  0129E8  0EC3               	movlw	-61
 17197  0129EA  006F FF8C  F03E    	movff	plusw1,btemp+20
 17198  0129F0  0EFF               	movlw	255
 17199  0129F2  223E               	addwfc	(btemp+20)^0,f,c
 17200  0129F4  0EC4               	movlw	-60
 17201  0129F6  006F FF8C  F03F    	movff	plusw1,btemp+21
 17202  0129FC  0EFF               	movlw	255
 17203  0129FE  223F               	addwfc	(btemp+21)^0,f,c
 17204  012A00  0EC5               	movlw	-59
 17205  012A02  006F FF8C  F040    	movff	plusw1,btemp+22
 17206  012A08  0EFF               	movlw	255
 17207  012A0A  2240               	addwfc	(btemp+22)^0,f,c
 17208  012A0C  0EC6               	movlw	-58
 17209  012A0E  006F FF8C  F041    	movff	plusw1,btemp+23
 17210  012A14  0EFF               	movlw	255
 17211  012A16  2241               	addwfc	(btemp+23)^0,f,c
 17212                           
 17213                           ;stkvar	_secs @ sp[(-57)+17]
 17214  012A18  0ED8               	movlw	-40
 17215  012A1A  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 17216  012A20  0ED9               	movlw	-39
 17217  012A22  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 17218  012A28  0EDA               	movlw	-38
 17219  012A2A  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 17220  012A30  0EDB               	movlw	-37
 17221  012A32  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 17222  012A38  0EDC               	movlw	-36
 17223  012A3A  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 17224  012A40  0EDD               	movlw	-35
 17225  012A42  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 17226  012A48  0EDE               	movlw	-34
 17227  012A4A  0060  F103  FFE3   	movff	btemp+22,plusw1
 17228  012A50  0EDF               	movlw	-33
 17229  012A52  0060  F107  FFE3   	movff	btemp+23,plusw1
 17230  012A58  0E80               	movlw	128
 17231  012A5A  6EE6               	movwf	postinc1,c
 17232  012A5C  0E51               	movlw	81
 17233  012A5E  6EE6               	movwf	postinc1,c
 17234  012A60  0E01               	movlw	1
 17235  012A62  6EE6               	movwf	postinc1,c
 17236  012A64  0E00               	movlw	0
 17237  012A66  6EE6               	movwf	postinc1,c
 17238  012A68  0E00               	movlw	0
 17239  012A6A  6EE6               	movwf	postinc1,c
 17240  012A6C  0E00               	movlw	0
 17241  012A6E  6EE6               	movwf	postinc1,c
 17242  012A70  0E00               	movlw	0
 17243  012A72  6EE6               	movwf	postinc1,c
 17244  012A74  0E00               	movlw	0
 17245  012A76  6EE6               	movwf	postinc1,c
 17246                           
 17247                           ;stkvar	_secs @ sp[(-65)+17]
 17248  012A78  50E1               	movf	fsr1l,w,c
 17249  012A7A  0FD0               	addlw	-48
 17250  012A7C  6ED9               	movwf	fsr2l,c
 17251  012A7E  50E2               	movf	fsr1h,w,c
 17252  012A80  6EDA               	movwf	fsr2h,c
 17253  012A82  0EFF               	movlw	255
 17254  012A84  22DA               	addwfc	fsr2h,f,c
 17255  012A86  006F FF7B FFE6     	movff	postinc2,postinc1
 17256  012A8C  006F FF7B FFE6     	movff	postinc2,postinc1
 17257  012A92  006F FF7B FFE6     	movff	postinc2,postinc1
 17258  012A98  006F FF7B FFE6     	movff	postinc2,postinc1
 17259  012A9E  006F FF7B FFE6     	movff	postinc2,postinc1
 17260  012AA4  006F FF7B FFE6     	movff	postinc2,postinc1
 17261  012AAA  006F FF7B FFE6     	movff	postinc2,postinc1
 17262  012AB0  006F FF7B FFE6     	movff	postinc2,postinc1
 17263  012AB6  EC09  F0E1         	call	___aodiv	;wreg free
 17264  012ABA  52E5               	movf	postdec1,f,c
 17265  012ABC  006F FF9C  F041    	movff	indf1,btemp+23
 17266  012AC2  52E5               	movf	postdec1,f,c
 17267  012AC4  006F FF9C  F040    	movff	indf1,btemp+22
 17268  012ACA  52E5               	movf	postdec1,f,c
 17269  012ACC  006F FF9C  F03F    	movff	indf1,btemp+21
 17270  012AD2  52E5               	movf	postdec1,f,c
 17271  012AD4  006F FF9C  F03E    	movff	indf1,btemp+20
 17272  012ADA  52E5               	movf	postdec1,f,c
 17273  012ADC  006F FF9C  F03D    	movff	indf1,btemp+19
 17274  012AE2  52E5               	movf	postdec1,f,c
 17275  012AE4  006F FF9C  F03C    	movff	indf1,btemp+18
 17276  012AEA  52E5               	movf	postdec1,f,c
 17277  012AEC  006F FF9C  F03B    	movff	indf1,btemp+17
 17278  012AF2  52E5               	movf	postdec1,f,c
 17279  012AF4  006F FF9C  F03A    	movff	indf1,btemp+16
 17280  012AFA  0EF8               	movlw	248
 17281  012AFC  26E1               	addwf	fsr1l,f,c
 17282  012AFE  0EFF               	movlw	255
 17283  012B00  22E2               	addwfc	fsr1h,f,c
 17284                           
 17285                           ;stkvar	_days @ sp[(-57)+9]
 17286  012B02  0ED0               	movlw	-48
 17287  012B04  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 17288  012B0A  0ED1               	movlw	-47
 17289  012B0C  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 17290  012B12  0ED2               	movlw	-46
 17291  012B14  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 17292  012B1A  0ED3               	movlw	-45
 17293  012B1C  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 17294  012B22  0ED4               	movlw	-44
 17295  012B24  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 17296  012B2A  0ED5               	movlw	-43
 17297  012B2C  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 17298  012B32  0ED6               	movlw	-42
 17299  012B34  0060  F103  FFE3   	movff	btemp+22,plusw1
 17300  012B3A  0ED7               	movlw	-41
 17301  012B3C  0060  F107  FFE3   	movff	btemp+23,plusw1
 17302  012B42  0E80               	movlw	128
 17303  012B44  6EE6               	movwf	postinc1,c
 17304  012B46  0E51               	movlw	81
 17305  012B48  6EE6               	movwf	postinc1,c
 17306  012B4A  0E01               	movlw	1
 17307  012B4C  6EE6               	movwf	postinc1,c
 17308  012B4E  0E00               	movlw	0
 17309  012B50  6EE6               	movwf	postinc1,c
 17310  012B52  0E00               	movlw	0
 17311  012B54  6EE6               	movwf	postinc1,c
 17312  012B56  0E00               	movlw	0
 17313  012B58  6EE6               	movwf	postinc1,c
 17314  012B5A  0E00               	movlw	0
 17315  012B5C  6EE6               	movwf	postinc1,c
 17316  012B5E  0E00               	movlw	0
 17317  012B60  6EE6               	movwf	postinc1,c
 17318                           
 17319                           ;stkvar	_secs @ sp[(-65)+17]
 17320  012B62  50E1               	movf	fsr1l,w,c
 17321  012B64  0FD0               	addlw	-48
 17322  012B66  6ED9               	movwf	fsr2l,c
 17323  012B68  50E2               	movf	fsr1h,w,c
 17324  012B6A  6EDA               	movwf	fsr2h,c
 17325  012B6C  0EFF               	movlw	255
 17326  012B6E  22DA               	addwfc	fsr2h,f,c
 17327  012B70  006F FF7B FFE6     	movff	postinc2,postinc1
 17328  012B76  006F FF7B FFE6     	movff	postinc2,postinc1
 17329  012B7C  006F FF7B FFE6     	movff	postinc2,postinc1
 17330  012B82  006F FF7B FFE6     	movff	postinc2,postinc1
 17331  012B88  006F FF7B FFE6     	movff	postinc2,postinc1
 17332  012B8E  006F FF7B FFE6     	movff	postinc2,postinc1
 17333  012B94  006F FF7B FFE6     	movff	postinc2,postinc1
 17334  012B9A  006F FF7B FFE6     	movff	postinc2,postinc1
 17335  012BA0  ECC8  F0E5         	call	___aomod	;wreg free
 17336  012BA4  52E5               	movf	postdec1,f,c
 17337  012BA6  006F FF9C  F041    	movff	indf1,btemp+23
 17338  012BAC  52E5               	movf	postdec1,f,c
 17339  012BAE  006F FF9C  F040    	movff	indf1,btemp+22
 17340  012BB4  52E5               	movf	postdec1,f,c
 17341  012BB6  006F FF9C  F03F    	movff	indf1,btemp+21
 17342  012BBC  52E5               	movf	postdec1,f,c
 17343  012BBE  006F FF9C  F03E    	movff	indf1,btemp+20
 17344  012BC4  52E5               	movf	postdec1,f,c
 17345  012BC6  006F FF9C  F03D    	movff	indf1,btemp+19
 17346  012BCC  52E5               	movf	postdec1,f,c
 17347  012BCE  006F FF9C  F03C    	movff	indf1,btemp+18
 17348  012BD4  52E5               	movf	postdec1,f,c
 17349  012BD6  006F FF9C  F03B    	movff	indf1,btemp+17
 17350  012BDC  52E5               	movf	postdec1,f,c
 17351  012BDE  006F FF9C  F03A    	movff	indf1,btemp+16
 17352  012BE4  0EF8               	movlw	248
 17353  012BE6  26E1               	addwf	fsr1l,f,c
 17354  012BE8  0EFF               	movlw	255
 17355  012BEA  22E2               	addwfc	fsr1h,f,c
 17356  012BEC  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17357  012BF2  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17358  012BF8  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17359  012BFE  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17360                           
 17361                           ;stkvar	_remsecs @ sp[(-57)+41]
 17362  012C04  0EF0               	movlw	-16
 17363  012C06  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17364  012C0C  0EF1               	movlw	-15
 17365  012C0E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17366  012C14  0EF2               	movlw	-14
 17367  012C16  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17368  012C1C  0EF3               	movlw	-13
 17369  012C1E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17370                           
 17371                           ;stkvar	_remsecs @ sp[(-57)+41]
 17372  012C24  0EF3               	movlw	-13
 17373  012C26  AEE3               	btfss	plusw1,7,c
 17374  012C28  D01F               	goto	l16732
 17375                           
 17376                           ;stkvar	_remsecs @ sp[(-57)+41]
 17377  012C2A  50E1               	movf	fsr1l,w,c
 17378  012C2C  0FF0               	addlw	-16
 17379  012C2E  6ED9               	movwf	fsr2l,c
 17380  012C30  50E2               	movf	fsr1h,w,c
 17381  012C32  6EDA               	movwf	fsr2h,c
 17382  012C34  0EFF               	movlw	255
 17383  012C36  22DA               	addwfc	fsr2h,f,c
 17384  012C38  0E80               	movlw	128
 17385  012C3A  26DE               	addwf	postinc2,f,c
 17386  012C3C  0E51               	movlw	81
 17387  012C3E  22DE               	addwfc	postinc2,f,c
 17388  012C40  0E01               	movlw	1
 17389  012C42  22DE               	addwfc	postinc2,f,c
 17390  012C44  0E00               	movlw	0
 17391  012C46  22DE               	addwfc	postinc2,f,c
 17392                           
 17393                           ;stkvar	_days @ sp[(-57)+9]
 17394  012C48  50E1               	movf	fsr1l,w,c
 17395  012C4A  0FD0               	addlw	-48
 17396  012C4C  6ED9               	movwf	fsr2l,c
 17397  012C4E  50E2               	movf	fsr1h,w,c
 17398  012C50  6EDA               	movwf	fsr2h,c
 17399  012C52  0EFF               	movlw	255
 17400  012C54  22DA               	addwfc	fsr2h,f,c
 17401  012C56  06DE               	decf	postinc2,f,c
 17402  012C58  0E00               	movlw	0
 17403  012C5A  5ADE               	subwfb	postinc2,f,c
 17404  012C5C  5ADE               	subwfb	postinc2,f,c
 17405  012C5E  5ADE               	subwfb	postinc2,f,c
 17406  012C60  5ADE               	subwfb	postinc2,f,c
 17407  012C62  5ADE               	subwfb	postinc2,f,c
 17408  012C64  5ADE               	subwfb	postinc2,f,c
 17409  012C66  5ADE               	subwfb	postinc2,f,c
 17410  012C68                     l16732:
 17411  012C68  0E07               	movlw	7
 17412  012C6A  6EE6               	movwf	postinc1,c
 17413  012C6C  0E00               	movlw	0
 17414  012C6E  6EE6               	movwf	postinc1,c
 17415  012C70  0E00               	movlw	0
 17416  012C72  6EE6               	movwf	postinc1,c
 17417  012C74  0E00               	movlw	0
 17418  012C76  6EE6               	movwf	postinc1,c
 17419  012C78  0E00               	movlw	0
 17420  012C7A  6EE6               	movwf	postinc1,c
 17421  012C7C  0E00               	movlw	0
 17422  012C7E  6EE6               	movwf	postinc1,c
 17423  012C80  0E00               	movlw	0
 17424  012C82  6EE6               	movwf	postinc1,c
 17425  012C84  0E00               	movlw	0
 17426  012C86  6EE6               	movwf	postinc1,c
 17427                           
 17428                           ;stkvar	_days @ sp[(-65)+9]
 17429  012C88  0EC8               	movlw	-56
 17430  012C8A  50E3               	movf	plusw1,w,c
 17431  012C8C  0F03               	addlw	3
 17432  012C8E  6E3A               	movwf	(btemp+16)^0,c
 17433  012C90  0EC9               	movlw	-55
 17434  012C92  006F FF8C  F03B    	movff	plusw1,btemp+17
 17435  012C98  0E00               	movlw	0
 17436  012C9A  223B               	addwfc	(btemp+17)^0,f,c
 17437  012C9C  0ECA               	movlw	-54
 17438  012C9E  006F FF8C  F03C    	movff	plusw1,btemp+18
 17439  012CA4  0E00               	movlw	0
 17440  012CA6  223C               	addwfc	(btemp+18)^0,f,c
 17441  012CA8  0ECB               	movlw	-53
 17442  012CAA  006F FF8C  F03D    	movff	plusw1,btemp+19
 17443  012CB0  0E00               	movlw	0
 17444  012CB2  223D               	addwfc	(btemp+19)^0,f,c
 17445  012CB4  0ECC               	movlw	-52
 17446  012CB6  006F FF8C  F03E    	movff	plusw1,btemp+20
 17447  012CBC  0E00               	movlw	0
 17448  012CBE  223E               	addwfc	(btemp+20)^0,f,c
 17449  012CC0  0ECD               	movlw	-51
 17450  012CC2  006F FF8C  F03F    	movff	plusw1,btemp+21
 17451  012CC8  0E00               	movlw	0
 17452  012CCA  223F               	addwfc	(btemp+21)^0,f,c
 17453  012CCC  0ECE               	movlw	-50
 17454  012CCE  006F FF8C  F040    	movff	plusw1,btemp+22
 17455  012CD4  0E00               	movlw	0
 17456  012CD6  2240               	addwfc	(btemp+22)^0,f,c
 17457  012CD8  0ECF               	movlw	-49
 17458  012CDA  006F FF8C  F041    	movff	plusw1,btemp+23
 17459  012CE0  0E00               	movlw	0
 17460  012CE2  2241               	addwfc	(btemp+23)^0,f,c
 17461  012CE4  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 17462  012CEA  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 17463  012CF0  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 17464  012CF6  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 17465  012CFC  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 17466  012D02  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 17467  012D08  0060  F103  FFE6   	movff	btemp+22,postinc1
 17468  012D0E  0060  F107  FFE6   	movff	btemp+23,postinc1
 17469  012D14  ECC8  F0E5         	call	___aomod	;wreg free
 17470  012D18  52E5               	movf	postdec1,f,c
 17471  012D1A  006F FF9C  F041    	movff	indf1,btemp+23
 17472  012D20  52E5               	movf	postdec1,f,c
 17473  012D22  006F FF9C  F040    	movff	indf1,btemp+22
 17474  012D28  52E5               	movf	postdec1,f,c
 17475  012D2A  006F FF9C  F03F    	movff	indf1,btemp+21
 17476  012D30  52E5               	movf	postdec1,f,c
 17477  012D32  006F FF9C  F03E    	movff	indf1,btemp+20
 17478  012D38  52E5               	movf	postdec1,f,c
 17479  012D3A  006F FF9C  F03D    	movff	indf1,btemp+19
 17480  012D40  52E5               	movf	postdec1,f,c
 17481  012D42  006F FF9C  F03C    	movff	indf1,btemp+18
 17482  012D48  52E5               	movf	postdec1,f,c
 17483  012D4A  006F FF9C  F03B    	movff	indf1,btemp+17
 17484  012D50  52E5               	movf	postdec1,f,c
 17485  012D52  006F FF9C  F03A    	movff	indf1,btemp+16
 17486  012D58  0EF8               	movlw	248
 17487  012D5A  26E1               	addwf	fsr1l,f,c
 17488  012D5C  0EFF               	movlw	255
 17489  012D5E  22E2               	addwfc	fsr1h,f,c
 17490  012D60  0060  F0E8  F034   	movff	btemp+16,btemp+10
 17491  012D66  0060  F0EC  F035   	movff	btemp+17,btemp+11
 17492                           
 17493                           ;stkvar	_wday @ sp[(-57)+55]
 17494  012D6C  0EFE               	movlw	-2
 17495  012D6E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17496  012D74  0EFF               	movlw	-1
 17497  012D76  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17498                           
 17499                           ;stkvar	_wday @ sp[(-57)+55]
 17500  012D7C  0EFF               	movlw	-1
 17501  012D7E  AEE3               	btfss	plusw1,7,c
 17502  012D80  D011               	goto	l16738
 17503                           
 17504                           ;stkvar	_wday @ sp[(-57)+55]
 17505  012D82  0EFE               	movlw	-2
 17506  012D84  50E3               	movf	plusw1,w,c
 17507  012D86  0F07               	addlw	7
 17508  012D88  6E2A               	movwf	btemp^0,c
 17509  012D8A  0EFE               	movlw	-2
 17510  012D8C  0060  F0AB  FFE3   	movff	btemp,plusw1
 17511  012D92  6A2A               	clrf	btemp^0,c
 17512  012D94  0EFF               	movlw	-1
 17513  012D96  50E3               	movf	plusw1,w,c
 17514  012D98  202A               	addwfc	btemp^0,w,c
 17515  012D9A  6E2A               	movwf	btemp^0,c
 17516  012D9C  0EFF               	movlw	-1
 17517  012D9E  0060  F0AB  FFE3   	movff	btemp,plusw1
 17518  012DA4                     l16738:
 17519  012DA4  0EB1               	movlw	177
 17520  012DA6  6EE6               	movwf	postinc1,c
 17521  012DA8  0E3A               	movlw	58
 17522  012DAA  6EE6               	movwf	postinc1,c
 17523  012DAC  0E02               	movlw	2
 17524  012DAE  6EE6               	movwf	postinc1,c
 17525  012DB0  0E00               	movlw	0
 17526  012DB2  6EE6               	movwf	postinc1,c
 17527  012DB4  0E00               	movlw	0
 17528  012DB6  6EE6               	movwf	postinc1,c
 17529  012DB8  0E00               	movlw	0
 17530  012DBA  6EE6               	movwf	postinc1,c
 17531  012DBC  0E00               	movlw	0
 17532  012DBE  6EE6               	movwf	postinc1,c
 17533  012DC0  0E00               	movlw	0
 17534  012DC2  6EE6               	movwf	postinc1,c
 17535                           
 17536                           ;stkvar	_days @ sp[(-65)+9]
 17537  012DC4  50E1               	movf	fsr1l,w,c
 17538  012DC6  0FC8               	addlw	-56
 17539  012DC8  6ED9               	movwf	fsr2l,c
 17540  012DCA  50E2               	movf	fsr1h,w,c
 17541  012DCC  6EDA               	movwf	fsr2h,c
 17542  012DCE  0EFF               	movlw	255
 17543  012DD0  22DA               	addwfc	fsr2h,f,c
 17544  012DD2  006F FF7B FFE6     	movff	postinc2,postinc1
 17545  012DD8  006F FF7B FFE6     	movff	postinc2,postinc1
 17546  012DDE  006F FF7B FFE6     	movff	postinc2,postinc1
 17547  012DE4  006F FF7B FFE6     	movff	postinc2,postinc1
 17548  012DEA  006F FF7B FFE6     	movff	postinc2,postinc1
 17549  012DF0  006F FF7B FFE6     	movff	postinc2,postinc1
 17550  012DF6  006F FF7B FFE6     	movff	postinc2,postinc1
 17551  012DFC  006F FF7B FFE6     	movff	postinc2,postinc1
 17552  012E02  EC09  F0E1         	call	___aodiv	;wreg free
 17553  012E06  52E5               	movf	postdec1,f,c
 17554  012E08  006F FF9C  F041    	movff	indf1,btemp+23
 17555  012E0E  52E5               	movf	postdec1,f,c
 17556  012E10  006F FF9C  F040    	movff	indf1,btemp+22
 17557  012E16  52E5               	movf	postdec1,f,c
 17558  012E18  006F FF9C  F03F    	movff	indf1,btemp+21
 17559  012E1E  52E5               	movf	postdec1,f,c
 17560  012E20  006F FF9C  F03E    	movff	indf1,btemp+20
 17561  012E26  52E5               	movf	postdec1,f,c
 17562  012E28  006F FF9C  F03D    	movff	indf1,btemp+19
 17563  012E2E  52E5               	movf	postdec1,f,c
 17564  012E30  006F FF9C  F03C    	movff	indf1,btemp+18
 17565  012E36  52E5               	movf	postdec1,f,c
 17566  012E38  006F FF9C  F03B    	movff	indf1,btemp+17
 17567  012E3E  52E5               	movf	postdec1,f,c
 17568  012E40  006F FF9C  F03A    	movff	indf1,btemp+16
 17569  012E46  0EF8               	movlw	248
 17570  012E48  26E1               	addwf	fsr1l,f,c
 17571  012E4A  0EFF               	movlw	255
 17572  012E4C  22E2               	addwfc	fsr1h,f,c
 17573  012E4E  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17574  012E54  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17575  012E5A  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17576  012E60  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17577                           
 17578                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 17579  012E66  0EF4               	movlw	-12
 17580  012E68  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17581  012E6E  0EF5               	movlw	-11
 17582  012E70  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17583  012E76  0EF6               	movlw	-10
 17584  012E78  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17585  012E7E  0EF7               	movlw	-9
 17586  012E80  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17587  012E86  0EB1               	movlw	177
 17588  012E88  6EE6               	movwf	postinc1,c
 17589  012E8A  0E3A               	movlw	58
 17590  012E8C  6EE6               	movwf	postinc1,c
 17591  012E8E  0E02               	movlw	2
 17592  012E90  6EE6               	movwf	postinc1,c
 17593  012E92  0E00               	movlw	0
 17594  012E94  6EE6               	movwf	postinc1,c
 17595  012E96  0E00               	movlw	0
 17596  012E98  6EE6               	movwf	postinc1,c
 17597  012E9A  0E00               	movlw	0
 17598  012E9C  6EE6               	movwf	postinc1,c
 17599  012E9E  0E00               	movlw	0
 17600  012EA0  6EE6               	movwf	postinc1,c
 17601  012EA2  0E00               	movlw	0
 17602  012EA4  6EE6               	movwf	postinc1,c
 17603                           
 17604                           ;stkvar	_days @ sp[(-65)+9]
 17605  012EA6  50E1               	movf	fsr1l,w,c
 17606  012EA8  0FC8               	addlw	-56
 17607  012EAA  6ED9               	movwf	fsr2l,c
 17608  012EAC  50E2               	movf	fsr1h,w,c
 17609  012EAE  6EDA               	movwf	fsr2h,c
 17610  012EB0  0EFF               	movlw	255
 17611  012EB2  22DA               	addwfc	fsr2h,f,c
 17612  012EB4  006F FF7B FFE6     	movff	postinc2,postinc1
 17613  012EBA  006F FF7B FFE6     	movff	postinc2,postinc1
 17614  012EC0  006F FF7B FFE6     	movff	postinc2,postinc1
 17615  012EC6  006F FF7B FFE6     	movff	postinc2,postinc1
 17616  012ECC  006F FF7B FFE6     	movff	postinc2,postinc1
 17617  012ED2  006F FF7B FFE6     	movff	postinc2,postinc1
 17618  012ED8  006F FF7B FFE6     	movff	postinc2,postinc1
 17619  012EDE  006F FF7B FFE6     	movff	postinc2,postinc1
 17620  012EE4  ECC8  F0E5         	call	___aomod	;wreg free
 17621  012EE8  52E5               	movf	postdec1,f,c
 17622  012EEA  006F FF9C  F041    	movff	indf1,btemp+23
 17623  012EF0  52E5               	movf	postdec1,f,c
 17624  012EF2  006F FF9C  F040    	movff	indf1,btemp+22
 17625  012EF8  52E5               	movf	postdec1,f,c
 17626  012EFA  006F FF9C  F03F    	movff	indf1,btemp+21
 17627  012F00  52E5               	movf	postdec1,f,c
 17628  012F02  006F FF9C  F03E    	movff	indf1,btemp+20
 17629  012F08  52E5               	movf	postdec1,f,c
 17630  012F0A  006F FF9C  F03D    	movff	indf1,btemp+19
 17631  012F10  52E5               	movf	postdec1,f,c
 17632  012F12  006F FF9C  F03C    	movff	indf1,btemp+18
 17633  012F18  52E5               	movf	postdec1,f,c
 17634  012F1A  006F FF9C  F03B    	movff	indf1,btemp+17
 17635  012F20  52E5               	movf	postdec1,f,c
 17636  012F22  006F FF9C  F03A    	movff	indf1,btemp+16
 17637  012F28  0EF8               	movlw	248
 17638  012F2A  26E1               	addwf	fsr1l,f,c
 17639  012F2C  0EFF               	movlw	255
 17640  012F2E  22E2               	addwfc	fsr1h,f,c
 17641  012F30  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17642  012F36  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17643  012F3C  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17644  012F42  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17645                           
 17646                           ;stkvar	_remdays @ sp[(-57)+25]
 17647  012F48  0EE0               	movlw	-32
 17648  012F4A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17649  012F50  0EE1               	movlw	-31
 17650  012F52  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17651  012F58  0EE2               	movlw	-30
 17652  012F5A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17653  012F60  0EE3               	movlw	-29
 17654  012F62  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17655                           
 17656                           ;stkvar	_remdays @ sp[(-57)+25]
 17657  012F68  0EE3               	movlw	-29
 17658  012F6A  AEE3               	btfss	plusw1,7,c
 17659  012F6C  D01B               	goto	l16746
 17660                           
 17661                           ;stkvar	_remdays @ sp[(-57)+25]
 17662  012F6E  50E1               	movf	fsr1l,w,c
 17663  012F70  0FE0               	addlw	-32
 17664  012F72  6ED9               	movwf	fsr2l,c
 17665  012F74  50E2               	movf	fsr1h,w,c
 17666  012F76  6EDA               	movwf	fsr2h,c
 17667  012F78  0EFF               	movlw	255
 17668  012F7A  22DA               	addwfc	fsr2h,f,c
 17669  012F7C  0EB1               	movlw	177
 17670  012F7E  26DE               	addwf	postinc2,f,c
 17671  012F80  0E3A               	movlw	58
 17672  012F82  22DE               	addwfc	postinc2,f,c
 17673  012F84  0E02               	movlw	2
 17674  012F86  22DE               	addwfc	postinc2,f,c
 17675  012F88  0E00               	movlw	0
 17676  012F8A  22DE               	addwfc	postinc2,f,c
 17677                           
 17678                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 17679  012F8C  50E1               	movf	fsr1l,w,c
 17680  012F8E  0FF4               	addlw	-12
 17681  012F90  6ED9               	movwf	fsr2l,c
 17682  012F92  50E2               	movf	fsr1h,w,c
 17683  012F94  6EDA               	movwf	fsr2h,c
 17684  012F96  0EFF               	movlw	255
 17685  012F98  22DA               	addwfc	fsr2h,f,c
 17686  012F9A  06DE               	decf	postinc2,f,c
 17687  012F9C  0E00               	movlw	0
 17688  012F9E  5ADE               	subwfb	postinc2,f,c
 17689  012FA0  5ADE               	subwfb	postinc2,f,c
 17690  012FA2  5ADE               	subwfb	postinc2,f,c
 17691  012FA4                     l16746:
 17692  012FA4  0EAC               	movlw	172
 17693  012FA6  6EE6               	movwf	postinc1,c
 17694  012FA8  0E8E               	movlw	142
 17695  012FAA  6EE6               	movwf	postinc1,c
 17696  012FAC  0E00               	movlw	0
 17697  012FAE  6EE6               	movwf	postinc1,c
 17698  012FB0  0E00               	movlw	0
 17699  012FB2  6EE6               	movwf	postinc1,c
 17700                           
 17701                           ;stkvar	_remdays @ sp[(-61)+25]
 17702  012FB4  0EDC               	movlw	-36
 17703  012FB6  006F FF8F FFE6     	movff	plusw1,postinc1
 17704  012FBC  006F FF8F FFE6     	movff	plusw1,postinc1
 17705  012FC2  006F FF8F FFE6     	movff	plusw1,postinc1
 17706  012FC8  006F FF8F FFE6     	movff	plusw1,postinc1
 17707  012FCE  EC88  F0EF         	call	___aldiv	;wreg free
 17708                           
 17709                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17710  012FD2  0EE8               	movlw	-24
 17711  012FD4  0060  F0AB  FFE3   	movff	btemp,plusw1
 17712  012FDA  0EE9               	movlw	-23
 17713  012FDC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17714  012FE2  0EEA               	movlw	-22
 17715  012FE4  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17716  012FEA  0EEB               	movlw	-21
 17717  012FEC  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17718                           
 17719                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17720  012FF2  0EE8               	movlw	-24
 17721  012FF4  006F FF8C  F02A    	movff	plusw1,btemp
 17722  012FFA  0E04               	movlw	4
 17723  012FFC  182A               	xorwf	btemp^0,w,c
 17724  012FFE  E116               	bnz	l16752
 17725  013000  0EE9               	movlw	-23
 17726  013002  50E3               	movf	plusw1,w,c
 17727  013004  E113               	bnz	l16752
 17728  013006  0EEA               	movlw	-22
 17729  013008  50E3               	movf	plusw1,w,c
 17730  01300A  E110               	bnz	l16752
 17731  01300C  0EEB               	movlw	-21
 17732  01300E  50E3               	movf	plusw1,w,c
 17733  013010  A4D8               	btfss	status,2,c
 17734  013012  D00C               	goto	l16752
 17735                           
 17736                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17737  013014  50E1               	movf	fsr1l,w,c
 17738  013016  0FE8               	addlw	-24
 17739  013018  6ED9               	movwf	fsr2l,c
 17740  01301A  50E2               	movf	fsr1h,w,c
 17741  01301C  6EDA               	movwf	fsr2h,c
 17742  01301E  0EFF               	movlw	255
 17743  013020  22DA               	addwfc	fsr2h,f,c
 17744  013022  06DE               	decf	postinc2,f,c
 17745  013024  0E00               	movlw	0
 17746  013026  5ADE               	subwfb	postinc2,f,c
 17747  013028  5ADE               	subwfb	postinc2,f,c
 17748  01302A  5ADE               	subwfb	postinc2,f,c
 17749  01302C                     l16752:
 17750  01302C  0EAC               	movlw	172
 17751  01302E  6EE6               	movwf	postinc1,c
 17752  013030  0E8E               	movlw	142
 17753  013032  6EE6               	movwf	postinc1,c
 17754  013034  0E00               	movlw	0
 17755  013036  6EE6               	movwf	postinc1,c
 17756  013038  0E00               	movlw	0
 17757  01303A  6EE6               	movwf	postinc1,c
 17758                           
 17759                           ;stkvar	_c_cycles @ sp[(-61)+33]
 17760  01303C  0EE4               	movlw	-28
 17761  01303E  006F FF8F FFE6     	movff	plusw1,postinc1
 17762  013044  006F FF8F FFE6     	movff	plusw1,postinc1
 17763  01304A  006F FF8F FFE6     	movff	plusw1,postinc1
 17764  013050  006F FF8F FFE6     	movff	plusw1,postinc1
 17765  013056  EC46  F001         	call	___lmul	;wreg free
 17766                           
 17767                           ;stkvar	_remdays @ sp[(-57)+25]
 17768  01305A  50E1               	movf	fsr1l,w,c
 17769  01305C  0FE0               	addlw	-32
 17770  01305E  6ED9               	movwf	fsr2l,c
 17771  013060  50E2               	movf	fsr1h,w,c
 17772  013062  6EDA               	movwf	fsr2h,c
 17773  013064  0EFF               	movlw	255
 17774  013066  22DA               	addwfc	fsr2h,f,c
 17775  013068  502A               	movf	btemp^0,w,c
 17776  01306A  5EDE               	subwf	postinc2,f,c
 17777  01306C  502B               	movf	(btemp+1)^0,w,c
 17778  01306E  5ADE               	subwfb	postinc2,f,c
 17779  013070  502C               	movf	(btemp+2)^0,w,c
 17780  013072  5ADE               	subwfb	postinc2,f,c
 17781  013074  502D               	movf	(btemp+3)^0,w,c
 17782  013076  5ADE               	subwfb	postinc2,f,c
 17783  013078  0EB5               	movlw	181
 17784  01307A  6EE6               	movwf	postinc1,c
 17785  01307C  0E05               	movlw	5
 17786  01307E  6EE6               	movwf	postinc1,c
 17787  013080  0E00               	movlw	0
 17788  013082  6EE6               	movwf	postinc1,c
 17789  013084  0E00               	movlw	0
 17790  013086  6EE6               	movwf	postinc1,c
 17791                           
 17792                           ;stkvar	_remdays @ sp[(-61)+25]
 17793  013088  0EDC               	movlw	-36
 17794  01308A  006F FF8F FFE6     	movff	plusw1,postinc1
 17795  013090  006F FF8F FFE6     	movff	plusw1,postinc1
 17796  013096  006F FF8F FFE6     	movff	plusw1,postinc1
 17797  01309C  006F FF8F FFE6     	movff	plusw1,postinc1
 17798  0130A2  EC88  F0EF         	call	___aldiv	;wreg free
 17799                           
 17800                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17801  0130A6  0EE4               	movlw	-28
 17802  0130A8  0060  F0AB  FFE3   	movff	btemp,plusw1
 17803  0130AE  0EE5               	movlw	-27
 17804  0130B0  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17805  0130B6  0EE6               	movlw	-26
 17806  0130B8  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17807  0130BE  0EE7               	movlw	-25
 17808  0130C0  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17809                           
 17810                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17811  0130C6  0EE4               	movlw	-28
 17812  0130C8  006F FF8C  F02A    	movff	plusw1,btemp
 17813  0130CE  0E19               	movlw	25
 17814  0130D0  182A               	xorwf	btemp^0,w,c
 17815  0130D2  E116               	bnz	l16760
 17816  0130D4  0EE5               	movlw	-27
 17817  0130D6  50E3               	movf	plusw1,w,c
 17818  0130D8  E113               	bnz	l16760
 17819  0130DA  0EE6               	movlw	-26
 17820  0130DC  50E3               	movf	plusw1,w,c
 17821  0130DE  E110               	bnz	l16760
 17822  0130E0  0EE7               	movlw	-25
 17823  0130E2  50E3               	movf	plusw1,w,c
 17824  0130E4  A4D8               	btfss	status,2,c
 17825  0130E6  D00C               	goto	l16760
 17826                           
 17827                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17828  0130E8  50E1               	movf	fsr1l,w,c
 17829  0130EA  0FE4               	addlw	-28
 17830  0130EC  6ED9               	movwf	fsr2l,c
 17831  0130EE  50E2               	movf	fsr1h,w,c
 17832  0130F0  6EDA               	movwf	fsr2h,c
 17833  0130F2  0EFF               	movlw	255
 17834  0130F4  22DA               	addwfc	fsr2h,f,c
 17835  0130F6  06DE               	decf	postinc2,f,c
 17836  0130F8  0E00               	movlw	0
 17837  0130FA  5ADE               	subwfb	postinc2,f,c
 17838  0130FC  5ADE               	subwfb	postinc2,f,c
 17839  0130FE  5ADE               	subwfb	postinc2,f,c
 17840  013100                     l16760:
 17841  013100  0EB5               	movlw	181
 17842  013102  6EE6               	movwf	postinc1,c
 17843  013104  0E05               	movlw	5
 17844  013106  6EE6               	movwf	postinc1,c
 17845  013108  0E00               	movlw	0
 17846  01310A  6EE6               	movwf	postinc1,c
 17847  01310C  0E00               	movlw	0
 17848  01310E  6EE6               	movwf	postinc1,c
 17849                           
 17850                           ;stkvar	_q_cycles @ sp[(-61)+29]
 17851  013110  0EE0               	movlw	-32
 17852  013112  006F FF8F FFE6     	movff	plusw1,postinc1
 17853  013118  006F FF8F FFE6     	movff	plusw1,postinc1
 17854  01311E  006F FF8F FFE6     	movff	plusw1,postinc1
 17855  013124  006F FF8F FFE6     	movff	plusw1,postinc1
 17856  01312A  EC46  F001         	call	___lmul	;wreg free
 17857                           
 17858                           ;stkvar	_remdays @ sp[(-57)+25]
 17859  01312E  50E1               	movf	fsr1l,w,c
 17860  013130  0FE0               	addlw	-32
 17861  013132  6ED9               	movwf	fsr2l,c
 17862  013134  50E2               	movf	fsr1h,w,c
 17863  013136  6EDA               	movwf	fsr2h,c
 17864  013138  0EFF               	movlw	255
 17865  01313A  22DA               	addwfc	fsr2h,f,c
 17866  01313C  502A               	movf	btemp^0,w,c
 17867  01313E  5EDE               	subwf	postinc2,f,c
 17868  013140  502B               	movf	(btemp+1)^0,w,c
 17869  013142  5ADE               	subwfb	postinc2,f,c
 17870  013144  502C               	movf	(btemp+2)^0,w,c
 17871  013146  5ADE               	subwfb	postinc2,f,c
 17872  013148  502D               	movf	(btemp+3)^0,w,c
 17873  01314A  5ADE               	subwfb	postinc2,f,c
 17874  01314C  0E6D               	movlw	109
 17875  01314E  6EE6               	movwf	postinc1,c
 17876  013150  0E01               	movlw	1
 17877  013152  6EE6               	movwf	postinc1,c
 17878  013154  0E00               	movlw	0
 17879  013156  6EE6               	movwf	postinc1,c
 17880  013158  0E00               	movlw	0
 17881  01315A  6EE6               	movwf	postinc1,c
 17882                           
 17883                           ;stkvar	_remdays @ sp[(-61)+25]
 17884  01315C  0EDC               	movlw	-36
 17885  01315E  006F FF8F FFE6     	movff	plusw1,postinc1
 17886  013164  006F FF8F FFE6     	movff	plusw1,postinc1
 17887  01316A  006F FF8F FFE6     	movff	plusw1,postinc1
 17888  013170  006F FF8F FFE6     	movff	plusw1,postinc1
 17889  013176  EC88  F0EF         	call	___aldiv	;wreg free
 17890                           
 17891                           ;stkvar	_remyears @ sp[(-57)+37]
 17892  01317A  0EEC               	movlw	-20
 17893  01317C  0060  F0AB  FFE3   	movff	btemp,plusw1
 17894  013182  0EED               	movlw	-19
 17895  013184  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17896  01318A  0EEE               	movlw	-18
 17897  01318C  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17898  013192  0EEF               	movlw	-17
 17899  013194  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17900                           
 17901                           ;stkvar	_remyears @ sp[(-57)+37]
 17902  01319A  0EEC               	movlw	-20
 17903  01319C  006F FF8C  F02A    	movff	plusw1,btemp
 17904  0131A2  0E04               	movlw	4
 17905  0131A4  182A               	xorwf	btemp^0,w,c
 17906  0131A6  E116               	bnz	l16768
 17907  0131A8  0EED               	movlw	-19
 17908  0131AA  50E3               	movf	plusw1,w,c
 17909  0131AC  E113               	bnz	l16768
 17910  0131AE  0EEE               	movlw	-18
 17911  0131B0  50E3               	movf	plusw1,w,c
 17912  0131B2  E110               	bnz	l16768
 17913  0131B4  0EEF               	movlw	-17
 17914  0131B6  50E3               	movf	plusw1,w,c
 17915  0131B8  A4D8               	btfss	status,2,c
 17916  0131BA  D00C               	goto	l16768
 17917                           
 17918                           ;stkvar	_remyears @ sp[(-57)+37]
 17919  0131BC  50E1               	movf	fsr1l,w,c
 17920  0131BE  0FEC               	addlw	-20
 17921  0131C0  6ED9               	movwf	fsr2l,c
 17922  0131C2  50E2               	movf	fsr1h,w,c
 17923  0131C4  6EDA               	movwf	fsr2h,c
 17924  0131C6  0EFF               	movlw	255
 17925  0131C8  22DA               	addwfc	fsr2h,f,c
 17926  0131CA  06DE               	decf	postinc2,f,c
 17927  0131CC  0E00               	movlw	0
 17928  0131CE  5ADE               	subwfb	postinc2,f,c
 17929  0131D0  5ADE               	subwfb	postinc2,f,c
 17930  0131D2  5ADE               	subwfb	postinc2,f,c
 17931  0131D4                     l16768:
 17932  0131D4  0E6D               	movlw	109
 17933  0131D6  6EE6               	movwf	postinc1,c
 17934  0131D8  0E01               	movlw	1
 17935  0131DA  6EE6               	movwf	postinc1,c
 17936  0131DC  0E00               	movlw	0
 17937  0131DE  6EE6               	movwf	postinc1,c
 17938  0131E0  0E00               	movlw	0
 17939  0131E2  6EE6               	movwf	postinc1,c
 17940                           
 17941                           ;stkvar	_remyears @ sp[(-61)+37]
 17942  0131E4  0EE8               	movlw	-24
 17943  0131E6  006F FF8F FFE6     	movff	plusw1,postinc1
 17944  0131EC  006F FF8F FFE6     	movff	plusw1,postinc1
 17945  0131F2  006F FF8F FFE6     	movff	plusw1,postinc1
 17946  0131F8  006F FF8F FFE6     	movff	plusw1,postinc1
 17947  0131FE  EC46  F001         	call	___lmul	;wreg free
 17948                           
 17949                           ;stkvar	_remdays @ sp[(-57)+25]
 17950  013202  50E1               	movf	fsr1l,w,c
 17951  013204  0FE0               	addlw	-32
 17952  013206  6ED9               	movwf	fsr2l,c
 17953  013208  50E2               	movf	fsr1h,w,c
 17954  01320A  6EDA               	movwf	fsr2h,c
 17955  01320C  0EFF               	movlw	255
 17956  01320E  22DA               	addwfc	fsr2h,f,c
 17957  013210  502A               	movf	btemp^0,w,c
 17958  013212  5EDE               	subwf	postinc2,f,c
 17959  013214  502B               	movf	(btemp+1)^0,w,c
 17960  013216  5ADE               	subwfb	postinc2,f,c
 17961  013218  502C               	movf	(btemp+2)^0,w,c
 17962  01321A  5ADE               	subwfb	postinc2,f,c
 17963  01321C  502D               	movf	(btemp+3)^0,w,c
 17964  01321E  5ADE               	subwfb	postinc2,f,c
 17965                           
 17966                           ;stkvar	___secs_to_tm$7626 @ sp[(-57)+0]
 17967  013220  0EC7               	movlw	-57
 17968  013222  6AE3               	clrf	plusw1,c
 17969                           
 17970                           ;stkvar	_remyears @ sp[(-57)+37]
 17971  013224  0EEC               	movlw	-20
 17972  013226  50E3               	movf	plusw1,w,c
 17973  013228  E127               	bnz	l16780
 17974  01322A  0EED               	movlw	-19
 17975  01322C  50E3               	movf	plusw1,w,c
 17976  01322E  E124               	bnz	l16780
 17977  013230  0EEE               	movlw	-18
 17978  013232  50E3               	movf	plusw1,w,c
 17979  013234  E121               	bnz	l16780
 17980  013236  0EEF               	movlw	-17
 17981  013238  50E3               	movf	plusw1,w,c
 17982  01323A  A4D8               	btfss	status,2,c
 17983  01323C  D01D               	goto	l16780
 17984                           
 17985                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17986  01323E  0EE4               	movlw	-28
 17987  013240  50E3               	movf	plusw1,w,c
 17988  013242  E117               	bnz	l16778
 17989  013244  0EE5               	movlw	-27
 17990  013246  50E3               	movf	plusw1,w,c
 17991  013248  E114               	bnz	l16778
 17992  01324A  0EE6               	movlw	-26
 17993  01324C  50E3               	movf	plusw1,w,c
 17994  01324E  E111               	bnz	l16778
 17995  013250  0EE7               	movlw	-25
 17996  013252  50E3               	movf	plusw1,w,c
 17997  013254  A4D8               	btfss	status,2,c
 17998  013256  D00D               	goto	u16380
 17999                           
 18000                           ;stkvar	_c_cycles @ sp[(-57)+33]
 18001  013258  0EE8               	movlw	-24
 18002  01325A  50E3               	movf	plusw1,w,c
 18003  01325C  E10D               	bnz	l16780
 18004  01325E  0EE9               	movlw	-23
 18005  013260  50E3               	movf	plusw1,w,c
 18006  013262  E10A               	bnz	l16780
 18007  013264  0EEA               	movlw	-22
 18008  013266  50E3               	movf	plusw1,w,c
 18009  013268  E107               	bnz	l16780
 18010  01326A  0EEB               	movlw	-21
 18011  01326C  50E3               	movf	plusw1,w,c
 18012  01326E  A4D8               	btfss	status,2,c
 18013  013270  D003               	goto	l16780
 18014  013272                     u16380:
 18015  013272                     l16778:
 18016                           
 18017                           ;stkvar	___secs_to_tm$7626 @ sp[(-57)+0]
 18018  013272  0EC7               	movlw	-57
 18019  013274  6AE3               	clrf	plusw1,c
 18020  013276  2AE3               	incf	plusw1,f,c
 18021  013278                     l16780:
 18022                           
 18023                           ;stkvar	___secs_to_tm$7626 @ sp[(-57)+0]
 18024  013278  0EC7               	movlw	-57
 18025  01327A  50E3               	movf	plusw1,w,c
 18026  01327C  6E34               	movwf	(btemp+10)^0,c
 18027  01327E  6A35               	clrf	(btemp+11)^0,c
 18028                           
 18029                           ;stkvar	_leap @ sp[(-57)+51]
 18030  013280  0EFA               	movlw	-6
 18031  013282  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18032  013288  0EFB               	movlw	-5
 18033  01328A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18034                           
 18035                           ;stkvar	_remdays @ sp[(-57)+25]
 18036                           ;stkvar	_leap @ sp[(-57)+51]
 18037  013290  0EFA               	movlw	-6
 18038  013292  006F FF8C  F034    	movff	plusw1,btemp+10
 18039  013298  0EFB               	movlw	-5
 18040  01329A  006F FF8C  F035    	movff	plusw1,btemp+11
 18041  0132A0  0EE0               	movlw	-32
 18042  0132A2  50E3               	movf	plusw1,w,c
 18043  0132A4  2634               	addwf	(btemp+10)^0,f,c
 18044  0132A6  0EE1               	movlw	-31
 18045  0132A8  50E3               	movf	plusw1,w,c
 18046  0132AA  2235               	addwfc	(btemp+11)^0,f,c
 18047  0132AC  0E3B               	movlw	59
 18048  0132AE  2634               	addwf	(btemp+10)^0,f,c
 18049  0132B0  0E00               	movlw	0
 18050  0132B2  2235               	addwfc	(btemp+11)^0,f,c
 18051                           
 18052                           ;stkvar	_yday @ sp[(-57)+53]
 18053  0132B4  0EFC               	movlw	-4
 18054  0132B6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18055  0132BC  0EFD               	movlw	-3
 18056  0132BE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18057                           
 18058                           ;stkvar	_leap @ sp[(-57)+51]
 18059  0132C4  0EFA               	movlw	-6
 18060  0132C6  50E3               	movf	plusw1,w,c
 18061  0132C8  0F6D               	addlw	109
 18062  0132CA  6E34               	movwf	(btemp+10)^0,c
 18063  0132CC  0EFB               	movlw	-5
 18064  0132CE  006F FF8C  F035    	movff	plusw1,btemp+11
 18065  0132D4  0E01               	movlw	1
 18066  0132D6  2235               	addwfc	(btemp+11)^0,f,c
 18067                           
 18068                           ;stkvar	_yday @ sp[(-57)+53]
 18069  0132D8  0EFC               	movlw	-4
 18070  0132DA  006F FF8C  F02A    	movff	plusw1,btemp
 18071  0132E0  5034               	movf	(btemp+10)^0,w,c
 18072  0132E2  5C2A               	subwf	btemp^0,w,c
 18073  0132E4  0EFD               	movlw	-3
 18074  0132E6  50E3               	movf	plusw1,w,c
 18075  0132E8  0A80               	xorlw	128
 18076  0132EA  6E2A               	movwf	btemp^0,c
 18077  0132EC  5035               	movf	(btemp+11)^0,w,c
 18078  0132EE  0A80               	xorlw	128
 18079  0132F0  582A               	subwfb	btemp^0,w,c
 18080  0132F2  A0D8               	btfss	status,0,c
 18081  0132F4  D01E               	goto	l16788
 18082                           
 18083                           ;stkvar	_leap @ sp[(-57)+51]
 18084  0132F6  0EFA               	movlw	-6
 18085  0132F8  50E3               	movf	plusw1,w,c
 18086  0132FA  0F6D               	addlw	109
 18087  0132FC  6E34               	movwf	(btemp+10)^0,c
 18088  0132FE  0EFB               	movlw	-5
 18089  013300  006F FF8C  F035    	movff	plusw1,btemp+11
 18090  013306  0E01               	movlw	1
 18091  013308  2235               	addwfc	(btemp+11)^0,f,c
 18092                           
 18093                           ;stkvar	_yday @ sp[(-57)+53]
 18094  01330A  0EFC               	movlw	-4
 18095  01330C  006F FF8C  F02A    	movff	plusw1,btemp
 18096  013312  5034               	movf	(btemp+10)^0,w,c
 18097  013314  5E2A               	subwf	btemp^0,f,c
 18098  013316  0EFC               	movlw	-4
 18099  013318  0060  F0AB  FFE3   	movff	btemp,plusw1
 18100  01331E  0EFD               	movlw	-3
 18101  013320  006F FF8C  F02A    	movff	plusw1,btemp
 18102  013326  5035               	movf	(btemp+11)^0,w,c
 18103  013328  5A2A               	subwfb	btemp^0,f,c
 18104  01332A  0EFD               	movlw	-3
 18105  01332C  0060  F0AB  FFE3   	movff	btemp,plusw1
 18106  013332                     l16788:
 18107                           
 18108                           ;stkvar	_remyears @ sp[(-57)+37]
 18109                           ;stkvar	_q_cycles @ sp[(-57)+29]
 18110  013332  0EE4               	movlw	-28
 18111  013334  006F FF8C  F032    	movff	plusw1,btemp+8
 18112  01333A  0EE5               	movlw	-27
 18113  01333C  006F FF8C  F033    	movff	plusw1,btemp+9
 18114  013342  0EE6               	movlw	-26
 18115  013344  006F FF8C  F034    	movff	plusw1,btemp+10
 18116  01334A  0EE7               	movlw	-25
 18117  01334C  006F FF8C  F035    	movff	plusw1,btemp+11
 18118  013352  0E02               	movlw	2
 18119  013354                     u16405:
 18120  013354  90D8               	bcf	status,0,c
 18121  013356  3632               	rlcf	(btemp+8)^0,f,c
 18122  013358  3633               	rlcf	(btemp+9)^0,f,c
 18123  01335A  3634               	rlcf	(btemp+10)^0,f,c
 18124  01335C  3635               	rlcf	(btemp+11)^0,f,c
 18125  01335E  2EE8               	decfsz	wreg,f,c
 18126  013360  D7F9               	goto	u16405
 18127  013362  0E64               	movlw	100
 18128  013364  6EE6               	movwf	postinc1,c
 18129  013366  0E00               	movlw	0
 18130  013368  6EE6               	movwf	postinc1,c
 18131  01336A  0E00               	movlw	0
 18132  01336C  6EE6               	movwf	postinc1,c
 18133  01336E  0E00               	movlw	0
 18134  013370  6EE6               	movwf	postinc1,c
 18135                           
 18136                           ;stkvar	_c_cycles @ sp[(-61)+33]
 18137  013372  0EE4               	movlw	-28
 18138  013374  006F FF8F FFE6     	movff	plusw1,postinc1
 18139  01337A  006F FF8F FFE6     	movff	plusw1,postinc1
 18140  013380  006F FF8F FFE6     	movff	plusw1,postinc1
 18141  013386  006F FF8F FFE6     	movff	plusw1,postinc1
 18142  01338C  EC46  F001         	call	___lmul	;wreg free
 18143  013390  5032               	movf	(btemp+8)^0,w,c
 18144  013392  242A               	addwf	btemp^0,w,c
 18145  013394  6E2E               	movwf	(btemp+4)^0,c
 18146  013396  5033               	movf	(btemp+9)^0,w,c
 18147  013398  202B               	addwfc	(btemp+1)^0,w,c
 18148  01339A  6E2F               	movwf	(btemp+5)^0,c
 18149  01339C  5034               	movf	(btemp+10)^0,w,c
 18150  01339E  202C               	addwfc	(btemp+2)^0,w,c
 18151  0133A0  6E30               	movwf	(btemp+6)^0,c
 18152  0133A2  5035               	movf	(btemp+11)^0,w,c
 18153  0133A4  202D               	addwfc	(btemp+3)^0,w,c
 18154  0133A6  6E31               	movwf	(btemp+7)^0,c
 18155  0133A8  0EEC               	movlw	-20
 18156  0133AA  50E3               	movf	plusw1,w,c
 18157  0133AC  262E               	addwf	(btemp+4)^0,f,c
 18158  0133AE  0EED               	movlw	-19
 18159  0133B0  50E3               	movf	plusw1,w,c
 18160  0133B2  222F               	addwfc	(btemp+5)^0,f,c
 18161  0133B4  0EEE               	movlw	-18
 18162  0133B6  50E3               	movf	plusw1,w,c
 18163  0133B8  2230               	addwfc	(btemp+6)^0,f,c
 18164  0133BA  0EEF               	movlw	-17
 18165  0133BC  50E3               	movf	plusw1,w,c
 18166  0133BE  2231               	addwfc	(btemp+7)^0,f,c
 18167  0133C0  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 18168  0133C6  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 18169  0133CC  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 18170  0133D2  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 18171  0133D8  6A3E               	clrf	(btemp+20)^0,c
 18172  0133DA  BE3D               	btfsc	(btemp+19)^0,7,c
 18173  0133DC  683E               	setf	(btemp+20)^0,c
 18174  0133DE  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 18175  0133E4  0060  F0F8  F040   	movff	btemp+20,btemp+22
 18176  0133EA  0060  F0F8  F041   	movff	btemp+20,btemp+23
 18177  0133F0  0E90               	movlw	144
 18178  0133F2  6EE6               	movwf	postinc1,c
 18179  0133F4  0E01               	movlw	1
 18180  0133F6  6EE6               	movwf	postinc1,c
 18181  0133F8  0E00               	movlw	0
 18182  0133FA  6EE6               	movwf	postinc1,c
 18183  0133FC  0E00               	movlw	0
 18184  0133FE  6EE6               	movwf	postinc1,c
 18185  013400  0E00               	movlw	0
 18186  013402  6EE6               	movwf	postinc1,c
 18187  013404  0E00               	movlw	0
 18188  013406  6EE6               	movwf	postinc1,c
 18189  013408  0E00               	movlw	0
 18190  01340A  6EE6               	movwf	postinc1,c
 18191  01340C  0E00               	movlw	0
 18192  01340E  6EE6               	movwf	postinc1,c
 18193                           
 18194                           ;stkvar	_qc_cycles @ sp[(-65)+45]
 18195  013410  0EEC               	movlw	-20
 18196  013412  006F FF8C  F042    	movff	plusw1,btemp+24
 18197  013418  0EED               	movlw	-19
 18198  01341A  006F FF8C  F043    	movff	plusw1,btemp+25
 18199  013420  0EEE               	movlw	-18
 18200  013422  006F FF8C  F044    	movff	plusw1,btemp+26
 18201  013428  0EEF               	movlw	-17
 18202  01342A  006F FF8C  F045    	movff	plusw1,btemp+27
 18203  013430  6A46               	clrf	(btemp+28)^0,c
 18204  013432  BE45               	btfsc	(btemp+27)^0,7,c
 18205  013434  6846               	setf	(btemp+28)^0,c
 18206  013436  0060  F118  F047   	movff	btemp+28,btemp+29
 18207  01343C  0060  F118  F048   	movff	btemp+28,btemp+30
 18208  013442  0060  F118  F049   	movff	btemp+28,btemp+31
 18209  013448  0060  F10B  FFE6   	movff	btemp+24,postinc1
 18210  01344E  0060  F10F  FFE6   	movff	btemp+25,postinc1
 18211  013454  0060  F113  FFE6   	movff	btemp+26,postinc1
 18212  01345A  0060  F117  FFE6   	movff	btemp+27,postinc1
 18213  013460  0060  F11B  FFE6   	movff	btemp+28,postinc1
 18214  013466  0060  F11F  FFE6   	movff	btemp+29,postinc1
 18215  01346C  0060  F123  FFE6   	movff	btemp+30,postinc1
 18216  013472  0060  F127  FFE6   	movff	btemp+31,postinc1
 18217  013478  ECD3  F0F6         	call	___omul	;wreg free
 18218  01347C  52E5               	movf	postdec1,f,c
 18219  01347E  006F FF9C  F049    	movff	indf1,btemp+31
 18220  013484  52E5               	movf	postdec1,f,c
 18221  013486  006F FF9C  F048    	movff	indf1,btemp+30
 18222  01348C  52E5               	movf	postdec1,f,c
 18223  01348E  006F FF9C  F047    	movff	indf1,btemp+29
 18224  013494  52E5               	movf	postdec1,f,c
 18225  013496  006F FF9C  F046    	movff	indf1,btemp+28
 18226  01349C  52E5               	movf	postdec1,f,c
 18227  01349E  006F FF9C  F045    	movff	indf1,btemp+27
 18228  0134A4  52E5               	movf	postdec1,f,c
 18229  0134A6  006F FF9C  F044    	movff	indf1,btemp+26
 18230  0134AC  52E5               	movf	postdec1,f,c
 18231  0134AE  006F FF9C  F043    	movff	indf1,btemp+25
 18232  0134B4  52E5               	movf	postdec1,f,c
 18233  0134B6  006F FF9C  F042    	movff	indf1,btemp+24
 18234  0134BC  0EF8               	movlw	248
 18235  0134BE  26E1               	addwf	fsr1l,f,c
 18236  0134C0  0EFF               	movlw	255
 18237  0134C2  22E2               	addwfc	fsr1h,f,c
 18238  0134C4  503A               	movf	(btemp+16)^0,w,c
 18239  0134C6  2442               	addwf	(btemp+24)^0,w,c
 18240  0134C8  6E32               	movwf	(btemp+8)^0,c
 18241  0134CA  503B               	movf	(btemp+17)^0,w,c
 18242  0134CC  2043               	addwfc	(btemp+25)^0,w,c
 18243  0134CE  6E33               	movwf	(btemp+9)^0,c
 18244  0134D0  503C               	movf	(btemp+18)^0,w,c
 18245  0134D2  2044               	addwfc	(btemp+26)^0,w,c
 18246  0134D4  6E34               	movwf	(btemp+10)^0,c
 18247  0134D6  503D               	movf	(btemp+19)^0,w,c
 18248  0134D8  2045               	addwfc	(btemp+27)^0,w,c
 18249  0134DA  6E35               	movwf	(btemp+11)^0,c
 18250  0134DC  503E               	movf	(btemp+20)^0,w,c
 18251  0134DE  2046               	addwfc	(btemp+28)^0,w,c
 18252  0134E0  6E36               	movwf	(btemp+12)^0,c
 18253  0134E2  503F               	movf	(btemp+21)^0,w,c
 18254  0134E4  2047               	addwfc	(btemp+29)^0,w,c
 18255  0134E6  6E37               	movwf	(btemp+13)^0,c
 18256  0134E8  5040               	movf	(btemp+22)^0,w,c
 18257  0134EA  2048               	addwfc	(btemp+30)^0,w,c
 18258  0134EC  6E38               	movwf	(btemp+14)^0,c
 18259  0134EE  5041               	movf	(btemp+23)^0,w,c
 18260  0134F0  2049               	addwfc	(btemp+31)^0,w,c
 18261  0134F2  6E39               	movwf	(btemp+15)^0,c
 18262                           
 18263                           ;stkvar	_years @ sp[(-57)+1]
 18264  0134F4  0EC8               	movlw	-56
 18265  0134F6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 18266  0134FC  0EC9               	movlw	-55
 18267  0134FE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 18268  013504  0ECA               	movlw	-54
 18269  013506  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18270  01350C  0ECB               	movlw	-53
 18271  01350E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18272  013514  0ECC               	movlw	-52
 18273  013516  0060  F0DB  FFE3   	movff	btemp+12,plusw1
 18274  01351C  0ECD               	movlw	-51
 18275  01351E  0060  F0DF  FFE3   	movff	btemp+13,plusw1
 18276  013524  0ECE               	movlw	-50
 18277  013526  0060  F0E3  FFE3   	movff	btemp+14,plusw1
 18278  01352C  0ECF               	movlw	-49
 18279  01352E  0060  F0E7  FFE3   	movff	btemp+15,plusw1
 18280                           
 18281                           ;stkvar	_months @ sp[(-57)+49]
 18282  013534  0EF8               	movlw	-8
 18283  013536  6AE3               	clrf	plusw1,c
 18284  013538  0EF9               	movlw	-7
 18285  01353A  6AE3               	clrf	plusw1,c
 18286  01353C  D030               	goto	l16796
 18287  01353E                     l16792:
 18288                           
 18289                           ;stkvar	_remdays @ sp[(-57)+25]
 18290  01353E  50E1               	movf	fsr1l,w,c
 18291  013540  0FE0               	addlw	-32
 18292  013542  6ED9               	movwf	fsr2l,c
 18293  013544  50E2               	movf	fsr1h,w,c
 18294  013546  6EDA               	movwf	fsr2h,c
 18295  013548  0EFF               	movlw	255
 18296  01354A  22DA               	addwfc	fsr2h,f,c
 18297                           
 18298                           ;stkvar	_months @ sp[(-57)+49]
 18299  01354C  0EF8               	movlw	-8
 18300  01354E  006F FF8C  F034    	movff	plusw1,btemp+10
 18301  013554  0EF9               	movlw	-7
 18302  013556  006F FF8C  F035    	movff	plusw1,btemp+11
 18303  01355C  0EAB               	movlw	low ___secs_to_tm@days_in_month
 18304  01355E  2434               	addwf	(btemp+10)^0,w,c
 18305  013560  6EF6               	movwf	tblptrl,c
 18306  013562  0EF8               	movlw	high ___secs_to_tm@days_in_month
 18307  013564  2035               	addwfc	(btemp+11)^0,w,c
 18308  013566  6EF7               	movwf	tblptrh,c
 18309  013568                     	if	1	;There are 3 active tblptr bytes
 18310  013568  6AF8               	clrf	tblptru,c
 18311  01356A  0E00               	movlw	low (__mediumconst shr (0+16))
 18312  01356C  22F8               	addwfc	tblptru,f,c
 18313  01356E                     	endif
 18314  01356E  0008               	tblrd		*
 18315  013570  50F5               	movf	tablat,w,c
 18316  013572  5EDE               	subwf	postinc2,f,c
 18317  013574  0E00               	movlw	0
 18318  013576  5ADE               	subwfb	postinc2,f,c
 18319  013578  5ADE               	subwfb	postinc2,f,c
 18320  01357A  5ADE               	subwfb	postinc2,f,c
 18321                           
 18322                           ;stkvar	_months @ sp[(-57)+49]
 18323  01357C  0EF8               	movlw	-8
 18324  01357E  50E3               	movf	plusw1,w,c
 18325  013580  0F01               	addlw	1
 18326  013582  6E2A               	movwf	btemp^0,c
 18327  013584  0EF8               	movlw	-8
 18328  013586  0060  F0AB  FFE3   	movff	btemp,plusw1
 18329  01358C  6A2A               	clrf	btemp^0,c
 18330  01358E  0EF9               	movlw	-7
 18331  013590  50E3               	movf	plusw1,w,c
 18332  013592  202A               	addwfc	btemp^0,w,c
 18333  013594  6E2A               	movwf	btemp^0,c
 18334  013596  0EF9               	movlw	-7
 18335  013598  0060  F0AB  FFE3   	movff	btemp,plusw1
 18336  01359E                     l16796:
 18337                           
 18338                           ;stkvar	_months @ sp[(-57)+49]
 18339  01359E  0EF8               	movlw	-8
 18340  0135A0  006F FF8C  F034    	movff	plusw1,btemp+10
 18341  0135A6  0EF9               	movlw	-7
 18342  0135A8  006F FF8C  F035    	movff	plusw1,btemp+11
 18343  0135AE  0EAB               	movlw	low ___secs_to_tm@days_in_month
 18344  0135B0  2434               	addwf	(btemp+10)^0,w,c
 18345  0135B2  6EF6               	movwf	tblptrl,c
 18346  0135B4  0EF8               	movlw	high ___secs_to_tm@days_in_month
 18347  0135B6  2035               	addwfc	(btemp+11)^0,w,c
 18348  0135B8  6EF7               	movwf	tblptrh,c
 18349  0135BA                     	if	1	;There are 3 active tblptr bytes
 18350  0135BA  6AF8               	clrf	tblptru,c
 18351  0135BC  0E00               	movlw	low (__mediumconst shr (0+16))
 18352  0135BE  22F8               	addwfc	tblptru,f,c
 18353  0135C0                     	endif
 18354  0135C0  0008               	tblrd		*
 18355  0135C2  006F FFD4  F035    	movff	tablat,btemp+11
 18356  0135C8  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 18357  0135CE  6A2F               	clrf	(btemp+5)^0,c
 18358  0135D0  6A30               	clrf	(btemp+6)^0,c
 18359  0135D2  6A31               	clrf	(btemp+7)^0,c
 18360                           
 18361                           ;stkvar	_remdays @ sp[(-57)+25]
 18362  0135D4  0EE0               	movlw	-32
 18363  0135D6  006F FF8C  F02A    	movff	plusw1,btemp
 18364  0135DC  502E               	movf	(btemp+4)^0,w,c
 18365  0135DE  5C2A               	subwf	btemp^0,w,c
 18366  0135E0  0EE1               	movlw	-31
 18367  0135E2  006F FF8C  F02A    	movff	plusw1,btemp
 18368  0135E8  502F               	movf	(btemp+5)^0,w,c
 18369  0135EA  582A               	subwfb	btemp^0,w,c
 18370  0135EC  0EE2               	movlw	-30
 18371  0135EE  006F FF8C  F02A    	movff	plusw1,btemp
 18372  0135F4  5030               	movf	(btemp+6)^0,w,c
 18373  0135F6  582A               	subwfb	btemp^0,w,c
 18374  0135F8  0EE3               	movlw	-29
 18375  0135FA  50E3               	movf	plusw1,w,c
 18376  0135FC  0A80               	xorlw	128
 18377  0135FE  6E2A               	movwf	btemp^0,c
 18378  013600  5031               	movf	(btemp+7)^0,w,c
 18379  013602  0A80               	xorlw	128
 18380  013604  582A               	subwfb	btemp^0,w,c
 18381  013606  B0D8               	btfsc	status,0,c
 18382  013608  D79A               	goto	l16792
 18383                           
 18384                           ;stkvar	_months @ sp[(-57)+49]
 18385  01360A  0EF9               	movlw	-7
 18386  01360C  BEE3               	btfsc	plusw1,7,c
 18387  01360E  D026               	goto	l16804
 18388  013610  0EF9               	movlw	-7
 18389  013612  50E3               	movf	plusw1,w,c
 18390  013614  E108               	bnz	u16420
 18391  013616  0EF8               	movlw	-8
 18392  013618  006F FF8C  F02A    	movff	plusw1,btemp
 18393  01361E  0E0A               	movlw	10
 18394  013620  5E2A               	subwf	btemp^0,f,c
 18395  013622  A0D8               	btfss	status,0,c
 18396  013624  D01B               	goto	l16804
 18397  013626                     u16420:
 18398                           
 18399                           ;stkvar	_months @ sp[(-57)+49]
 18400  013626  50E1               	movf	fsr1l,w,c
 18401  013628  0FF8               	addlw	-8
 18402  01362A  6ED9               	movwf	fsr2l,c
 18403  01362C  50E2               	movf	fsr1h,w,c
 18404  01362E  6EDA               	movwf	fsr2h,c
 18405  013630  0EFF               	movlw	255
 18406  013632  22DA               	addwfc	fsr2h,f,c
 18407  013634  0EF4               	movlw	244
 18408  013636  26DE               	addwf	postinc2,f,c
 18409  013638  0EFF               	movlw	255
 18410  01363A  22DD               	addwfc	postdec2,f,c
 18411                           
 18412                           ;stkvar	_years @ sp[(-57)+1]
 18413  01363C  50E1               	movf	fsr1l,w,c
 18414  01363E  0FC8               	addlw	-56
 18415  013640  6ED9               	movwf	fsr2l,c
 18416  013642  50E2               	movf	fsr1h,w,c
 18417  013644  6EDA               	movwf	fsr2h,c
 18418  013646  0EFF               	movlw	255
 18419  013648  22DA               	addwfc	fsr2h,f,c
 18420  01364A  2ADE               	incf	postinc2,f,c
 18421  01364C  0E00               	movlw	0
 18422  01364E  22DE               	addwfc	postinc2,f,c
 18423  013650  22DE               	addwfc	postinc2,f,c
 18424  013652  22DE               	addwfc	postinc2,f,c
 18425  013654  22DE               	addwfc	postinc2,f,c
 18426  013656  22DE               	addwfc	postinc2,f,c
 18427  013658  22DE               	addwfc	postinc2,f,c
 18428  01365A  22DE               	addwfc	postinc2,f,c
 18429  01365C                     l16804:
 18430                           
 18431                           ;stkvar	_years @ sp[(-57)+1]
 18432  01365C  0EC8               	movlw	-56
 18433  01365E  50E3               	movf	plusw1,w,c
 18434  013660  0F64               	addlw	100
 18435  013662  6E3A               	movwf	(btemp+16)^0,c
 18436  013664  0EC9               	movlw	-55
 18437  013666  006F FF8C  F03B    	movff	plusw1,btemp+17
 18438  01366C  0E00               	movlw	0
 18439  01366E  223B               	addwfc	(btemp+17)^0,f,c
 18440  013670  0ECA               	movlw	-54
 18441  013672  006F FF8C  F03C    	movff	plusw1,btemp+18
 18442  013678  0E00               	movlw	0
 18443  01367A  223C               	addwfc	(btemp+18)^0,f,c
 18444  01367C  0ECB               	movlw	-53
 18445  01367E  006F FF8C  F03D    	movff	plusw1,btemp+19
 18446  013684  0E00               	movlw	0
 18447  013686  223D               	addwfc	(btemp+19)^0,f,c
 18448  013688  0ECC               	movlw	-52
 18449  01368A  006F FF8C  F03E    	movff	plusw1,btemp+20
 18450  013690  0E00               	movlw	0
 18451  013692  223E               	addwfc	(btemp+20)^0,f,c
 18452  013694  0ECD               	movlw	-51
 18453  013696  006F FF8C  F03F    	movff	plusw1,btemp+21
 18454  01369C  0E00               	movlw	0
 18455  01369E  223F               	addwfc	(btemp+21)^0,f,c
 18456  0136A0  0ECE               	movlw	-50
 18457  0136A2  006F FF8C  F040    	movff	plusw1,btemp+22
 18458  0136A8  0E00               	movlw	0
 18459  0136AA  2240               	addwfc	(btemp+22)^0,f,c
 18460  0136AC  0ECF               	movlw	-49
 18461  0136AE  006F FF8C  F041    	movff	plusw1,btemp+23
 18462  0136B4  0E00               	movlw	0
 18463  0136B6  2241               	addwfc	(btemp+23)^0,f,c
 18464  0136B8  BE41               	btfsc	(btemp+23)^0,7,c
 18465  0136BA  D00C               	goto	u16430
 18466  0136BC  5041               	movf	(btemp+23)^0,w,c
 18467  0136BE  1040               	iorwf	(btemp+22)^0,w,c
 18468  0136C0  103F               	iorwf	(btemp+21)^0,w,c
 18469  0136C2  103E               	iorwf	(btemp+20)^0,w,c
 18470  0136C4  103D               	iorwf	(btemp+19)^0,w,c
 18471  0136C6  103C               	iorwf	(btemp+18)^0,w,c
 18472  0136C8  E103               	bnz	u16431
 18473  0136CA  0E80               	movlw	128
 18474  0136CC  5C3B               	subwf	(btemp+17)^0,w,c
 18475  0136CE  B0D8               	btfsc	status,0,c
 18476  0136D0                     u16431:
 18477  0136D0  EFD4  F094         	goto	u16290
 18478  0136D4                     u16430:
 18479                           
 18480                           ;stkvar	_years @ sp[(-57)+1]
 18481  0136D4  0EC8               	movlw	-56
 18482  0136D6  50E3               	movf	plusw1,w,c
 18483  0136D8  0F64               	addlw	100
 18484  0136DA  6E3A               	movwf	(btemp+16)^0,c
 18485  0136DC  0EC9               	movlw	-55
 18486  0136DE  006F FF8C  F03B    	movff	plusw1,btemp+17
 18487  0136E4  0E00               	movlw	0
 18488  0136E6  223B               	addwfc	(btemp+17)^0,f,c
 18489  0136E8  0ECA               	movlw	-54
 18490  0136EA  006F FF8C  F03C    	movff	plusw1,btemp+18
 18491  0136F0  0E00               	movlw	0
 18492  0136F2  223C               	addwfc	(btemp+18)^0,f,c
 18493  0136F4  0ECB               	movlw	-53
 18494  0136F6  006F FF8C  F03D    	movff	plusw1,btemp+19
 18495  0136FC  0E00               	movlw	0
 18496  0136FE  223D               	addwfc	(btemp+19)^0,f,c
 18497  013700  0ECC               	movlw	-52
 18498  013702  006F FF8C  F03E    	movff	plusw1,btemp+20
 18499  013708  0E00               	movlw	0
 18500  01370A  223E               	addwfc	(btemp+20)^0,f,c
 18501  01370C  0ECD               	movlw	-51
 18502  01370E  006F FF8C  F03F    	movff	plusw1,btemp+21
 18503  013714  0E00               	movlw	0
 18504  013716  223F               	addwfc	(btemp+21)^0,f,c
 18505  013718  0ECE               	movlw	-50
 18506  01371A  006F FF8C  F040    	movff	plusw1,btemp+22
 18507  013720  0E00               	movlw	0
 18508  013722  2240               	addwfc	(btemp+22)^0,f,c
 18509  013724  0ECF               	movlw	-49
 18510  013726  006F FF8C  F041    	movff	plusw1,btemp+23
 18511  01372C  0E00               	movlw	0
 18512  01372E  2241               	addwfc	(btemp+23)^0,f,c
 18513  013730  AE41               	btfss	(btemp+23)^0,7,c
 18514  013732  D011               	goto	l16812
 18515  013734  0E80               	movlw	128
 18516  013736  5C3B               	subwf	(btemp+17)^0,w,c
 18517  013738  0EFF               	movlw	255
 18518  01373A  583C               	subwfb	(btemp+18)^0,w,c
 18519  01373C  0EFF               	movlw	255
 18520  01373E  583D               	subwfb	(btemp+19)^0,w,c
 18521  013740  0EFF               	movlw	255
 18522  013742  583E               	subwfb	(btemp+20)^0,w,c
 18523  013744  0EFF               	movlw	255
 18524  013746  583F               	subwfb	(btemp+21)^0,w,c
 18525  013748  0EFF               	movlw	255
 18526  01374A  5840               	subwfb	(btemp+22)^0,w,c
 18527  01374C  0EFF               	movlw	255
 18528  01374E  5841               	subwfb	(btemp+23)^0,w,c
 18529  013750  A0D8               	btfss	status,0,c
 18530  013752  EFD4  F094         	goto	u16290
 18531  013756                     l16812:
 18532                           
 18533                           ;stkvar	_years @ sp[(-57)+1]
 18534  013756  0EC8               	movlw	-56
 18535  013758  50E3               	movf	plusw1,w,c
 18536  01375A  0F64               	addlw	100
 18537  01375C  6E34               	movwf	(btemp+10)^0,c
 18538  01375E  0EC9               	movlw	-55
 18539  013760  006F FF8C  F035    	movff	plusw1,btemp+11
 18540  013766  0E00               	movlw	0
 18541  013768  2235               	addwfc	(btemp+11)^0,f,c
 18542                           
 18543                           ;stkvar	_tm @ sp[(-57)+-10]
 18544  01376A  0EBD               	movlw	-67
 18545  01376C  006F FF8C  F032    	movff	plusw1,btemp+8
 18546  013772  0EBE               	movlw	-66
 18547  013774  006F FF8C  F033    	movff	plusw1,btemp+9
 18548  01377A  0E0A               	movlw	10
 18549  01377C  2432               	addwf	(btemp+8)^0,w,c
 18550  01377E  6ED9               	movwf	fsr2l,c
 18551  013780  0E00               	movlw	0
 18552  013782  2033               	addwfc	(btemp+9)^0,w,c
 18553  013784  6EDA               	movwf	fsr2h,c
 18554  013786  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18555  01378C  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18556                           
 18557                           ;stkvar	_months @ sp[(-57)+49]
 18558  013792  0EF8               	movlw	-8
 18559  013794  50E3               	movf	plusw1,w,c
 18560  013796  0F02               	addlw	2
 18561  013798  6E34               	movwf	(btemp+10)^0,c
 18562  01379A  0EF9               	movlw	-7
 18563  01379C  006F FF8C  F035    	movff	plusw1,btemp+11
 18564  0137A2  0E00               	movlw	0
 18565  0137A4  2235               	addwfc	(btemp+11)^0,f,c
 18566                           
 18567                           ;stkvar	_tm @ sp[(-57)+-10]
 18568  0137A6  0EBD               	movlw	-67
 18569  0137A8  006F FF8C  F032    	movff	plusw1,btemp+8
 18570  0137AE  0EBE               	movlw	-66
 18571  0137B0  006F FF8C  F033    	movff	plusw1,btemp+9
 18572  0137B6  0E08               	movlw	8
 18573  0137B8  2432               	addwf	(btemp+8)^0,w,c
 18574  0137BA  6ED9               	movwf	fsr2l,c
 18575  0137BC  0E00               	movlw	0
 18576  0137BE  2033               	addwfc	(btemp+9)^0,w,c
 18577  0137C0  6EDA               	movwf	fsr2h,c
 18578  0137C2  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18579  0137C8  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18580                           
 18581                           ;stkvar	_remdays @ sp[(-57)+25]
 18582  0137CE  0EE0               	movlw	-32
 18583  0137D0  50E3               	movf	plusw1,w,c
 18584  0137D2  0F01               	addlw	1
 18585  0137D4  6E34               	movwf	(btemp+10)^0,c
 18586  0137D6  0EE1               	movlw	-31
 18587  0137D8  006F FF8C  F035    	movff	plusw1,btemp+11
 18588  0137DE  0E00               	movlw	0
 18589  0137E0  2235               	addwfc	(btemp+11)^0,f,c
 18590                           
 18591                           ;stkvar	_tm @ sp[(-57)+-10]
 18592  0137E2  0EBD               	movlw	-67
 18593  0137E4  006F FF8C  F032    	movff	plusw1,btemp+8
 18594  0137EA  0EBE               	movlw	-66
 18595  0137EC  006F FF8C  F033    	movff	plusw1,btemp+9
 18596  0137F2  0E06               	movlw	6
 18597  0137F4  2432               	addwf	(btemp+8)^0,w,c
 18598  0137F6  6ED9               	movwf	fsr2l,c
 18599  0137F8  0E00               	movlw	0
 18600  0137FA  2033               	addwfc	(btemp+9)^0,w,c
 18601  0137FC  6EDA               	movwf	fsr2h,c
 18602  0137FE  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18603  013804  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18604                           
 18605                           ;stkvar	_wday @ sp[(-57)+55]
 18606  01380A  50E1               	movf	fsr1l,w,c
 18607  01380C  0FFE               	addlw	-2
 18608  01380E  6ED9               	movwf	fsr2l,c
 18609  013810  50E2               	movf	fsr1h,w,c
 18610  013812  6EDA               	movwf	fsr2h,c
 18611  013814  0EFF               	movlw	255
 18612  013816  22DA               	addwfc	fsr2h,f,c
 18613                           
 18614                           ;stkvar	_tm @ sp[(-57)+-10]
 18615  013818  0EBD               	movlw	-67
 18616  01381A  006F FF8C  F034    	movff	plusw1,btemp+10
 18617  013820  0EBE               	movlw	-66
 18618  013822  006F FF8C  F035    	movff	plusw1,btemp+11
 18619  013828  0E0C               	movlw	12
 18620  01382A  2434               	addwf	(btemp+10)^0,w,c
 18621  01382C  6EE9               	movwf	fsr0l,c
 18622  01382E  0E00               	movlw	0
 18623  013830  2035               	addwfc	(btemp+11)^0,w,c
 18624  013832  6EEA               	movwf	fsr0h,c
 18625  013834  006F FF7B FFEE     	movff	postinc2,postinc0
 18626  01383A  006F FF77 FFED     	movff	postdec2,postdec0
 18627                           
 18628                           ;stkvar	_yday @ sp[(-57)+53]
 18629  013840  50E1               	movf	fsr1l,w,c
 18630  013842  0FFC               	addlw	-4
 18631  013844  6ED9               	movwf	fsr2l,c
 18632  013846  50E2               	movf	fsr1h,w,c
 18633  013848  6EDA               	movwf	fsr2h,c
 18634  01384A  0EFF               	movlw	255
 18635  01384C  22DA               	addwfc	fsr2h,f,c
 18636                           
 18637                           ;stkvar	_tm @ sp[(-57)+-10]
 18638  01384E  0EBD               	movlw	-67
 18639  013850  006F FF8C  F034    	movff	plusw1,btemp+10
 18640  013856  0EBE               	movlw	-66
 18641  013858  006F FF8C  F035    	movff	plusw1,btemp+11
 18642  01385E  0E0E               	movlw	14
 18643  013860  2434               	addwf	(btemp+10)^0,w,c
 18644  013862  6EE9               	movwf	fsr0l,c
 18645  013864  0E00               	movlw	0
 18646  013866  2035               	addwfc	(btemp+11)^0,w,c
 18647  013868  6EEA               	movwf	fsr0h,c
 18648  01386A  006F FF7B FFEE     	movff	postinc2,postinc0
 18649  013870  006F FF77 FFED     	movff	postdec2,postdec0
 18650  013876  0E10               	movlw	16
 18651  013878  6EE6               	movwf	postinc1,c
 18652  01387A  0E0E               	movlw	14
 18653  01387C  6EE6               	movwf	postinc1,c
 18654  01387E  0E00               	movlw	0
 18655  013880  6EE6               	movwf	postinc1,c
 18656  013882  0E00               	movlw	0
 18657  013884  6EE6               	movwf	postinc1,c
 18658                           
 18659                           ;stkvar	_remsecs @ sp[(-61)+41]
 18660  013886  0EEC               	movlw	-20
 18661  013888  006F FF8F FFE6     	movff	plusw1,postinc1
 18662  01388E  006F FF8F FFE6     	movff	plusw1,postinc1
 18663  013894  006F FF8F FFE6     	movff	plusw1,postinc1
 18664  01389A  006F FF8F FFE6     	movff	plusw1,postinc1
 18665  0138A0  EC88  F0EF         	call	___aldiv	;wreg free
 18666  0138A4  0060  F0A8  F034   	movff	btemp,btemp+10
 18667  0138AA  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18668                           
 18669                           ;stkvar	_tm @ sp[(-57)+-10]
 18670  0138B0  0EBD               	movlw	-67
 18671  0138B2  006F FF8C  F032    	movff	plusw1,btemp+8
 18672  0138B8  0EBE               	movlw	-66
 18673  0138BA  006F FF8C  F033    	movff	plusw1,btemp+9
 18674  0138C0  0E04               	movlw	4
 18675  0138C2  2432               	addwf	(btemp+8)^0,w,c
 18676  0138C4  6ED9               	movwf	fsr2l,c
 18677  0138C6  0E00               	movlw	0
 18678  0138C8  2033               	addwfc	(btemp+9)^0,w,c
 18679  0138CA  6EDA               	movwf	fsr2h,c
 18680  0138CC  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18681  0138D2  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18682  0138D8  0E3C               	movlw	60
 18683  0138DA  6EE6               	movwf	postinc1,c
 18684  0138DC  0E00               	movlw	0
 18685  0138DE  6EE6               	movwf	postinc1,c
 18686  0138E0  0E00               	movlw	0
 18687  0138E2  6EE6               	movwf	postinc1,c
 18688  0138E4  0E00               	movlw	0
 18689  0138E6  6EE6               	movwf	postinc1,c
 18690  0138E8  0E3C               	movlw	60
 18691  0138EA  6EE6               	movwf	postinc1,c
 18692  0138EC  0E00               	movlw	0
 18693  0138EE  6EE6               	movwf	postinc1,c
 18694  0138F0  0E00               	movlw	0
 18695  0138F2  6EE6               	movwf	postinc1,c
 18696  0138F4  0E00               	movlw	0
 18697  0138F6  6EE6               	movwf	postinc1,c
 18698                           
 18699                           ;stkvar	_remsecs @ sp[(-65)+41]
 18700  0138F8  0EE8               	movlw	-24
 18701  0138FA  006F FF8F FFE6     	movff	plusw1,postinc1
 18702  013900  006F FF8F FFE6     	movff	plusw1,postinc1
 18703  013906  006F FF8F FFE6     	movff	plusw1,postinc1
 18704  01390C  006F FF8F FFE6     	movff	plusw1,postinc1
 18705  013912  EC88  F0EF         	call	___aldiv	;wreg free
 18706  013916  0060  F0AB  FFE6   	movff	btemp,postinc1
 18707  01391C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 18708  013922  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 18709  013928  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 18710  01392E  EC0E  F0F4         	call	___almod	;wreg free
 18711  013932  0060  F0A8  F034   	movff	btemp,btemp+10
 18712  013938  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18713                           
 18714                           ;stkvar	_tm @ sp[(-57)+-10]
 18715  01393E  0EBD               	movlw	-67
 18716  013940  006F FF8C  F032    	movff	plusw1,btemp+8
 18717  013946  0EBE               	movlw	-66
 18718  013948  006F FF8C  F033    	movff	plusw1,btemp+9
 18719  01394E  0E02               	movlw	2
 18720  013950  2432               	addwf	(btemp+8)^0,w,c
 18721  013952  6ED9               	movwf	fsr2l,c
 18722  013954  0E00               	movlw	0
 18723  013956  2033               	addwfc	(btemp+9)^0,w,c
 18724  013958  6EDA               	movwf	fsr2h,c
 18725  01395A  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18726  013960  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18727  013966  0E3C               	movlw	60
 18728  013968  6EE6               	movwf	postinc1,c
 18729  01396A  0E00               	movlw	0
 18730  01396C  6EE6               	movwf	postinc1,c
 18731  01396E  0E00               	movlw	0
 18732  013970  6EE6               	movwf	postinc1,c
 18733  013972  0E00               	movlw	0
 18734  013974  6EE6               	movwf	postinc1,c
 18735                           
 18736                           ;stkvar	_remsecs @ sp[(-61)+41]
 18737  013976  0EEC               	movlw	-20
 18738  013978  006F FF8F FFE6     	movff	plusw1,postinc1
 18739  01397E  006F FF8F FFE6     	movff	plusw1,postinc1
 18740  013984  006F FF8F FFE6     	movff	plusw1,postinc1
 18741  01398A  006F FF8F FFE6     	movff	plusw1,postinc1
 18742  013990  EC0E  F0F4         	call	___almod	;wreg free
 18743  013994  0060  F0A8  F034   	movff	btemp,btemp+10
 18744  01399A  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18745                           
 18746                           ;stkvar	_tm @ sp[(-57)+-10]
 18747  0139A0  0EBD               	movlw	-67
 18748  0139A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 18749  0139A8  0EBE               	movlw	-66
 18750  0139AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 18751  0139B0  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18752  0139B6  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18753  0139BC  0E00               	movlw	0
 18754  0139BE  6E2A               	movwf	btemp^0,c
 18755  0139C0  6A2B               	clrf	(btemp+1)^0,c
 18756  0139C2  6A2C               	clrf	(btemp+2)^0,c
 18757  0139C4  6A2D               	clrf	(btemp+3)^0,c
 18758  0139C6                     l3849:
 18759                           
 18760                           ; ___secs_to_tm: autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10
      +                          , argsize = 10, vargsize = 0
 18761  0139C6  0EBD               	movlw	189
 18762  0139C8  26E1               	addwf	fsr1l,f,c
 18763  0139CA  0EFF               	movlw	255
 18764  0139CC  22E2               	addwfc	fsr1h,f,c
 18765  0139CE  0012               	return		;funcret
 18766  0139D0                     __end_of___secs_to_tm:
 18767                           	opt callstack 0
 18768                           
 18769 ;; *************** function ___omul *****************
 18770 ;; Defined at:
 18771 ;;		line 91 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul64.c"
 18772 ;; Parameters:    Size  Location     Type
 18773 ;;  multiplier      8  [STACK] unsigned long long 
 18774 ;;  multiplicand    8  [STACK] unsigned long long 
 18775 ;; Auto vars:     Size  Location     Type
 18776 ;;  product         8  [STACK] unsigned long long 
 18777 ;; Return value:  Size  Location     Type
 18778 ;;                  8  [STACK] unsigned long long 
 18779 ;; Registers used:
 18780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18781 ;; Tracked objects:
 18782 ;;		On entry : 0/0
 18783 ;;		On exit  : 0/0
 18784 ;;		Unchanged: 0/0
 18785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18790 ;;Total ram usage:        0 bytes
 18791 ;; Hardware stack levels used:    1
 18792 ;; Hardware stack levels required when called:   15
 18793 ;; This function calls:
 18794 ;;		Nothing
 18795 ;; This function is called by:
 18796 ;;		___secs_to_tm
 18797 ;;		___year_to_secs
 18798 ;; This function uses a reentrant model
 18799 ;;
 18800                           
 18801                           	psect	text51
 18802  01EDA6                     __ptext51:
 18803                           	opt callstack 0
 18804  01EDA6                     ___omul:
 18805                           	opt callstack 0
 18806                           
 18807                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18808  01EDA6  0E08               	movlw	8
 18809  01EDA8  26E1               	addwf	fsr1l,f,c
 18810  01EDAA  0E00               	movlw	0
 18811  01EDAC  22E2               	addwfc	fsr1h,f,c
 18812                           
 18813                           ;stkvar	_product @ sp[(-8)+0]
 18814                           
 18815                           ;incstack = 0
 18816  01EDAE  0E07               	movlw	7
 18817  01EDB0  6E2A               	movwf	btemp^0,c
 18818  01EDB2  0EF8               	movlw	-8
 18819  01EDB4                     u8061:
 18820  01EDB4  6AE3               	clrf	plusw1,c
 18821  01EDB6  2AE8               	incf	wreg,f,c
 18822  01EDB8  062A               	decf	btemp^0,f,c
 18823  01EDBA  E2FC               	bc	u8061
 18824  01EDBC                     l10212:
 18825                           
 18826                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18827  01EDBC  0EF0               	movlw	-16
 18828  01EDBE  A0E3               	btfss	plusw1,0,c
 18829  01EDC0  D050               	goto	l10216
 18830                           
 18831                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 18832                           ;stkvar	_product @ sp[(-8)+0]
 18833  01EDC2  0EF8               	movlw	-8
 18834  01EDC4  50E3               	movf	plusw1,w,c
 18835  01EDC6  6E2A               	movwf	btemp^0,c
 18836  01EDC8  0EE8               	movlw	-24
 18837  01EDCA  50E3               	movf	plusw1,w,c
 18838  01EDCC  262A               	addwf	btemp^0,f,c
 18839  01EDCE  0EF8               	movlw	-8
 18840  01EDD0  0060  F0AB  FFE3   	movff	btemp,plusw1
 18841  01EDD6  0EF9               	movlw	-7
 18842  01EDD8  50E3               	movf	plusw1,w,c
 18843  01EDDA  6E2A               	movwf	btemp^0,c
 18844  01EDDC  0EE9               	movlw	-23
 18845  01EDDE  50E3               	movf	plusw1,w,c
 18846  01EDE0  222A               	addwfc	btemp^0,f,c
 18847  01EDE2  0EF9               	movlw	-7
 18848  01EDE4  0060  F0AB  FFE3   	movff	btemp,plusw1
 18849  01EDEA  0EFA               	movlw	-6
 18850  01EDEC  50E3               	movf	plusw1,w,c
 18851  01EDEE  6E2A               	movwf	btemp^0,c
 18852  01EDF0  0EEA               	movlw	-22
 18853  01EDF2  50E3               	movf	plusw1,w,c
 18854  01EDF4  222A               	addwfc	btemp^0,f,c
 18855  01EDF6  0EFA               	movlw	-6
 18856  01EDF8  0060  F0AB  FFE3   	movff	btemp,plusw1
 18857  01EDFE  0EFB               	movlw	-5
 18858  01EE00  50E3               	movf	plusw1,w,c
 18859  01EE02  6E2A               	movwf	btemp^0,c
 18860  01EE04  0EEB               	movlw	-21
 18861  01EE06  50E3               	movf	plusw1,w,c
 18862  01EE08  222A               	addwfc	btemp^0,f,c
 18863  01EE0A  0EFB               	movlw	-5
 18864  01EE0C  0060  F0AB  FFE3   	movff	btemp,plusw1
 18865  01EE12  0EFC               	movlw	-4
 18866  01EE14  50E3               	movf	plusw1,w,c
 18867  01EE16  6E2A               	movwf	btemp^0,c
 18868  01EE18  0EEC               	movlw	-20
 18869  01EE1A  50E3               	movf	plusw1,w,c
 18870  01EE1C  222A               	addwfc	btemp^0,f,c
 18871  01EE1E  0EFC               	movlw	-4
 18872  01EE20  0060  F0AB  FFE3   	movff	btemp,plusw1
 18873  01EE26  0EFD               	movlw	-3
 18874  01EE28  50E3               	movf	plusw1,w,c
 18875  01EE2A  6E2A               	movwf	btemp^0,c
 18876  01EE2C  0EED               	movlw	-19
 18877  01EE2E  50E3               	movf	plusw1,w,c
 18878  01EE30  222A               	addwfc	btemp^0,f,c
 18879  01EE32  0EFD               	movlw	-3
 18880  01EE34  0060  F0AB  FFE3   	movff	btemp,plusw1
 18881  01EE3A  0EFE               	movlw	-2
 18882  01EE3C  50E3               	movf	plusw1,w,c
 18883  01EE3E  6E2A               	movwf	btemp^0,c
 18884  01EE40  0EEE               	movlw	-18
 18885  01EE42  50E3               	movf	plusw1,w,c
 18886  01EE44  222A               	addwfc	btemp^0,f,c
 18887  01EE46  0EFE               	movlw	-2
 18888  01EE48  0060  F0AB  FFE3   	movff	btemp,plusw1
 18889  01EE4E  0EFF               	movlw	-1
 18890  01EE50  50E3               	movf	plusw1,w,c
 18891  01EE52  6E2A               	movwf	btemp^0,c
 18892  01EE54  0EEF               	movlw	-17
 18893  01EE56  50E3               	movf	plusw1,w,c
 18894  01EE58  222A               	addwfc	btemp^0,f,c
 18895  01EE5A  0EFF               	movlw	-1
 18896  01EE5C  0060  F0AB  FFE3   	movff	btemp,plusw1
 18897  01EE62                     l10216:
 18898                           
 18899                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 18900  01EE62  90D8               	bcf	status,0,c
 18901  01EE64  0EE8               	movlw	-24
 18902  01EE66  36E3               	rlcf	plusw1,f,c
 18903  01EE68  0EE9               	movlw	-23
 18904  01EE6A  36E3               	rlcf	plusw1,f,c
 18905  01EE6C  0EEA               	movlw	-22
 18906  01EE6E  36E3               	rlcf	plusw1,f,c
 18907  01EE70  0EEB               	movlw	-21
 18908  01EE72  36E3               	rlcf	plusw1,f,c
 18909  01EE74  0EEC               	movlw	-20
 18910  01EE76  36E3               	rlcf	plusw1,f,c
 18911  01EE78  0EED               	movlw	-19
 18912  01EE7A  36E3               	rlcf	plusw1,f,c
 18913  01EE7C  0EEE               	movlw	-18
 18914  01EE7E  36E3               	rlcf	plusw1,f,c
 18915  01EE80  0EEF               	movlw	-17
 18916  01EE82  36E3               	rlcf	plusw1,f,c
 18917                           
 18918                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18919  01EE84  90D8               	bcf	status,0,c
 18920  01EE86  0EF7               	movlw	-9
 18921  01EE88  32E3               	rrcf	plusw1,f,c
 18922  01EE8A  0EF6               	movlw	-10
 18923  01EE8C  32E3               	rrcf	plusw1,f,c
 18924  01EE8E  0EF5               	movlw	-11
 18925  01EE90  32E3               	rrcf	plusw1,f,c
 18926  01EE92  0EF4               	movlw	-12
 18927  01EE94  32E3               	rrcf	plusw1,f,c
 18928  01EE96  0EF3               	movlw	-13
 18929  01EE98  32E3               	rrcf	plusw1,f,c
 18930  01EE9A  0EF2               	movlw	-14
 18931  01EE9C  32E3               	rrcf	plusw1,f,c
 18932  01EE9E  0EF1               	movlw	-15
 18933  01EEA0  32E3               	rrcf	plusw1,f,c
 18934  01EEA2  0EF0               	movlw	-16
 18935  01EEA4  32E3               	rrcf	plusw1,f,c
 18936                           
 18937                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18938  01EEA6  0EF0               	movlw	-16
 18939  01EEA8  50E3               	movf	plusw1,w,c
 18940  01EEAA  E188               	bnz	l10212
 18941  01EEAC  0EF1               	movlw	-15
 18942  01EEAE  50E3               	movf	plusw1,w,c
 18943  01EEB0  E185               	bnz	l10212
 18944  01EEB2  0EF2               	movlw	-14
 18945  01EEB4  50E3               	movf	plusw1,w,c
 18946  01EEB6  E182               	bnz	l10212
 18947  01EEB8  0EF3               	movlw	-13
 18948  01EEBA  50E3               	movf	plusw1,w,c
 18949  01EEBC  E10C               	bnz	u8081
 18950  01EEBE  0EF4               	movlw	-12
 18951  01EEC0  50E3               	movf	plusw1,w,c
 18952  01EEC2  E109               	bnz	u8081
 18953  01EEC4  0EF5               	movlw	-11
 18954  01EEC6  50E3               	movf	plusw1,w,c
 18955  01EEC8  E106               	bnz	u8081
 18956  01EECA  0EF6               	movlw	-10
 18957  01EECC  50E3               	movf	plusw1,w,c
 18958  01EECE  E103               	bnz	u8081
 18959  01EED0  0EF7               	movlw	-9
 18960  01EED2  50E3               	movf	plusw1,w,c
 18961  01EED4  A4D8               	btfss	status,2,c
 18962  01EED6                     u8081:
 18963  01EED6  D772               	goto	l10212
 18964                           
 18965                           ;stkvar	_product @ sp[(-8)+0]
 18966  01EED8  0EF8               	movlw	248
 18967  01EEDA  24E1               	addwf	fsr1l,w,c
 18968  01EEDC  6ED9               	movwf	fsr2l,c
 18969  01EEDE  0EFF               	movlw	255
 18970  01EEE0  20E2               	addwfc	fsr1h,w,c
 18971  01EEE2  6EDA               	movwf	fsr2h,c
 18972                           
 18973                           ;stkvar	?___omul @ sp[(-8)+-8]
 18974  01EEE4  0E08               	movlw	8
 18975  01EEE6  6E2A               	movwf	btemp^0,c
 18976  01EEE8  0EF0               	movlw	-16
 18977  01EEEA                     us809999:
 18978  01EEEA  006F FF7B FFE3     	movff	postinc2,plusw1
 18979  01EEF0  28E8               	incf	wreg,w,c
 18980  01EEF2  2E2A               	decfsz	btemp^0,f,c
 18981  01EEF4  D7FA               	bra	us809999
 18982                           
 18983                           ; ___omul: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsi
      +                          ze = 16, vargsize = 0
 18984  01EEF6  0EF8               	movlw	248
 18985  01EEF8  26E1               	addwf	fsr1l,f,c
 18986  01EEFA  0EFF               	movlw	255
 18987  01EEFC  22E2               	addwfc	fsr1h,f,c
 18988  01EEFE  0012               	return		;funcret
 18989  01EF00                     __end_of___omul:
 18990                           	opt callstack 0
 18991                           
 18992 ;; *************** function ___lmul *****************
 18993 ;; Defined at:
 18994 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
 18995 ;; Parameters:    Size  Location     Type
 18996 ;;  multiplier      4  [STACK] unsigned long 
 18997 ;;  multiplicand    4  [STACK] unsigned long 
 18998 ;; Auto vars:     Size  Location     Type
 18999 ;;  product         4  [STACK] unsigned long 
 19000 ;; Return value:  Size  Location     Type
 19001 ;;                  4  [STACK] unsigned long 
 19002 ;; Registers used:
 19003 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19004 ;; Tracked objects:
 19005 ;;		On entry : 0/0
 19006 ;;		On exit  : 0/0
 19007 ;;		Unchanged: 0/0
 19008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19013 ;;Total ram usage:        0 bytes
 19014 ;; Hardware stack levels used:    1
 19015 ;; Hardware stack levels required when called:   15
 19016 ;; This function calls:
 19017 ;;		Nothing
 19018 ;; This function is called by:
 19019 ;;		___secs_to_tm
 19020 ;;		_rule_to_secs
 19021 ;;		___year_to_secs
 19022 ;; This function uses a reentrant model
 19023 ;;
 19024                           
 19025                           	psect	text52
 19026  00028C                     __ptext52:
 19027                           	opt callstack 0
 19028  00028C                     ___lmul:
 19029                           	opt callstack 0
 19030                           
 19031                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19032  00028C  52E6               	movf	postinc1,f,c
 19033  00028E  52E6               	movf	postinc1,f,c
 19034  000290  52E6               	movf	postinc1,f,c
 19035  000292  52E6               	movf	postinc1,f,c
 19036                           
 19037                           ;stkvar	_product @ sp[(-4)+0]
 19038                           
 19039                           ;incstack = 0
 19040  000294  0EFC               	movlw	-4
 19041  000296  6AE3               	clrf	plusw1,c
 19042  000298  0EFD               	movlw	-3
 19043  00029A  6AE3               	clrf	plusw1,c
 19044  00029C  0EFE               	movlw	-2
 19045  00029E  6AE3               	clrf	plusw1,c
 19046  0002A0  0EFF               	movlw	-1
 19047  0002A2  6AE3               	clrf	plusw1,c
 19048  0002A4                     l2733:
 19049                           
 19050                           ;stkvar	_multiplier @ sp[(-4)+-4]
 19051  0002A4  0EF8               	movlw	-8
 19052  0002A6  A0E3               	btfss	plusw1,0,c
 19053  0002A8  D028               	goto	l10202
 19054                           
 19055                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 19056                           ;stkvar	_product @ sp[(-4)+0]
 19057  0002AA  0EFC               	movlw	-4
 19058  0002AC  50E3               	movf	plusw1,w,c
 19059  0002AE  6E2A               	movwf	btemp^0,c
 19060  0002B0  0EF4               	movlw	-12
 19061  0002B2  50E3               	movf	plusw1,w,c
 19062  0002B4  262A               	addwf	btemp^0,f,c
 19063  0002B6  0EFC               	movlw	-4
 19064  0002B8  0060  F0AB  FFE3   	movff	btemp,plusw1
 19065  0002BE  0EFD               	movlw	-3
 19066  0002C0  50E3               	movf	plusw1,w,c
 19067  0002C2  6E2A               	movwf	btemp^0,c
 19068  0002C4  0EF5               	movlw	-11
 19069  0002C6  50E3               	movf	plusw1,w,c
 19070  0002C8  222A               	addwfc	btemp^0,f,c
 19071  0002CA  0EFD               	movlw	-3
 19072  0002CC  0060  F0AB  FFE3   	movff	btemp,plusw1
 19073  0002D2  0EFE               	movlw	-2
 19074  0002D4  50E3               	movf	plusw1,w,c
 19075  0002D6  6E2A               	movwf	btemp^0,c
 19076  0002D8  0EF6               	movlw	-10
 19077  0002DA  50E3               	movf	plusw1,w,c
 19078  0002DC  222A               	addwfc	btemp^0,f,c
 19079  0002DE  0EFE               	movlw	-2
 19080  0002E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 19081  0002E6  0EFF               	movlw	-1
 19082  0002E8  50E3               	movf	plusw1,w,c
 19083  0002EA  6E2A               	movwf	btemp^0,c
 19084  0002EC  0EF7               	movlw	-9
 19085  0002EE  50E3               	movf	plusw1,w,c
 19086  0002F0  222A               	addwfc	btemp^0,f,c
 19087  0002F2  0EFF               	movlw	-1
 19088  0002F4  0060  F0AB  FFE3   	movff	btemp,plusw1
 19089  0002FA                     l10202:
 19090                           
 19091                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 19092  0002FA  90D8               	bcf	status,0,c
 19093  0002FC  0EF4               	movlw	-12
 19094  0002FE  36E3               	rlcf	plusw1,f,c
 19095  000300  0EF5               	movlw	-11
 19096  000302  36E3               	rlcf	plusw1,f,c
 19097  000304  0EF6               	movlw	-10
 19098  000306  36E3               	rlcf	plusw1,f,c
 19099  000308  0EF7               	movlw	-9
 19100  00030A  36E3               	rlcf	plusw1,f,c
 19101                           
 19102                           ;stkvar	_multiplier @ sp[(-4)+-4]
 19103  00030C  90D8               	bcf	status,0,c
 19104  00030E  0EFB               	movlw	-5
 19105  000310  32E3               	rrcf	plusw1,f,c
 19106  000312  0EFA               	movlw	-6
 19107  000314  32E3               	rrcf	plusw1,f,c
 19108  000316  0EF9               	movlw	-7
 19109  000318  32E3               	rrcf	plusw1,f,c
 19110  00031A  0EF8               	movlw	-8
 19111  00031C  32E3               	rrcf	plusw1,f,c
 19112                           
 19113                           ;stkvar	_multiplier @ sp[(-4)+-4]
 19114  00031E  0EF8               	movlw	-8
 19115  000320  50E3               	movf	plusw1,w,c
 19116  000322  E1C0               	bnz	l2733
 19117  000324  0EF9               	movlw	-7
 19118  000326  50E3               	movf	plusw1,w,c
 19119  000328  E1BD               	bnz	l2733
 19120  00032A  0EFA               	movlw	-6
 19121  00032C  50E3               	movf	plusw1,w,c
 19122  00032E  E1BA               	bnz	l2733
 19123  000330  0EFB               	movlw	-5
 19124  000332  50E3               	movf	plusw1,w,c
 19125  000334  A4D8               	btfss	status,2,c
 19126  000336  D7B6               	goto	l2733
 19127                           
 19128                           ;stkvar	_product @ sp[(-4)+0]
 19129  000338  0EFC               	movlw	-4
 19130  00033A  006F FF8C  F02A    	movff	plusw1,btemp
 19131  000340  0EFD               	movlw	-3
 19132  000342  006F FF8C  F02B    	movff	plusw1,btemp+1
 19133  000348  0EFE               	movlw	-2
 19134  00034A  006F FF8C  F02C    	movff	plusw1,btemp+2
 19135  000350  0EFF               	movlw	-1
 19136  000352  006F FF8C  F02D    	movff	plusw1,btemp+3
 19137                           
 19138                           ; ___lmul: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 19139  000358  0EF4               	movlw	244
 19140  00035A  26E1               	addwf	fsr1l,f,c
 19141  00035C  0EFF               	movlw	255
 19142  00035E  22E2               	addwfc	fsr1h,f,c
 19143  000360  0012               	return		;funcret
 19144  000362                     __end_of___lmul:
 19145                           	opt callstack 0
 19146                           
 19147 ;; *************** function ___almod *****************
 19148 ;; Defined at:
 19149 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/almod.c"
 19150 ;; Parameters:    Size  Location     Type
 19151 ;;  dividend        4  [STACK] long 
 19152 ;;  divisor         4  [STACK] long 
 19153 ;; Auto vars:     Size  Location     Type
 19154 ;;  sign            1  [STACK] unsigned char 
 19155 ;;  counter         1  [STACK] unsigned char 
 19156 ;; Return value:  Size  Location     Type
 19157 ;;                  4  [STACK] long 
 19158 ;; Registers used:
 19159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19160 ;; Tracked objects:
 19161 ;;		On entry : 0/39
 19162 ;;		On exit  : 0/0
 19163 ;;		Unchanged: 0/0
 19164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19169 ;;Total ram usage:        0 bytes
 19170 ;; Hardware stack levels used:    1
 19171 ;; Hardware stack levels required when called:   15
 19172 ;; This function calls:
 19173 ;;		Nothing
 19174 ;; This function is called by:
 19175 ;;		___secs_to_tm
 19176 ;; This function uses a reentrant model
 19177 ;;
 19178                           
 19179                           	psect	text53
 19180  01E81C                     __ptext53:
 19181                           	opt callstack 0
 19182  01E81C                     ___almod:
 19183                           	opt callstack 0
 19184                           
 19185                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19186  01E81C  52E6               	movf	postinc1,f,c
 19187  01E81E  52E6               	movf	postinc1,f,c
 19188                           
 19189                           ;stkvar	_sign @ sp[(-2)+0]
 19190                           
 19191                           ;incstack = 0
 19192  01E820  0EFE               	movlw	-2
 19193  01E822  6AE3               	clrf	plusw1,c
 19194                           
 19195                           ;stkvar	_dividend @ sp[(-2)+-4]
 19196  01E824  0EFD               	movlw	-3
 19197  01E826  AEE3               	btfss	plusw1,7,c
 19198  01E828  D014               	goto	l11980
 19199                           
 19200                           ;stkvar	_dividend @ sp[(-2)+-4]
 19201                           ;stkvar	_dividend @ sp[(-2)+-4]
 19202  01E82A  0EFA               	movlw	-6
 19203  01E82C  6CE3               	negf	plusw1,c
 19204  01E82E  0EFB               	movlw	-5
 19205  01E830  1EE3               	comf	plusw1,f,c
 19206  01E832  0EFC               	movlw	-4
 19207  01E834  1EE3               	comf	plusw1,f,c
 19208  01E836  0EFD               	movlw	-3
 19209  01E838  1EE3               	comf	plusw1,f,c
 19210  01E83A  E308               	bnc	u11200
 19211  01E83C  0EFB               	movlw	-5
 19212  01E83E  2AE3               	incf	plusw1,f,c
 19213  01E840  E305               	bnc	u11200
 19214  01E842  0EFC               	movlw	-4
 19215  01E844  2AE3               	incf	plusw1,f,c
 19216  01E846  E302               	bnc	u11200
 19217  01E848  0EFD               	movlw	-3
 19218  01E84A  2AE3               	incf	plusw1,f,c
 19219  01E84C                     u11200:
 19220                           
 19221                           ;stkvar	_sign @ sp[(-2)+0]
 19222  01E84C  0EFE               	movlw	-2
 19223  01E84E  6AE3               	clrf	plusw1,c
 19224  01E850  2AE3               	incf	plusw1,f,c
 19225  01E852                     l11980:
 19226                           
 19227                           ;stkvar	_divisor @ sp[(-2)+-8]
 19228  01E852  0EF9               	movlw	-7
 19229  01E854  AEE3               	btfss	plusw1,7,c
 19230  01E856  D011               	goto	u11220
 19231                           
 19232                           ;stkvar	_divisor @ sp[(-2)+-8]
 19233                           ;stkvar	_divisor @ sp[(-2)+-8]
 19234  01E858  0EF6               	movlw	-10
 19235  01E85A  6CE3               	negf	plusw1,c
 19236  01E85C  0EF7               	movlw	-9
 19237  01E85E  1EE3               	comf	plusw1,f,c
 19238  01E860  0EF8               	movlw	-8
 19239  01E862  1EE3               	comf	plusw1,f,c
 19240  01E864  0EF9               	movlw	-7
 19241  01E866  1EE3               	comf	plusw1,f,c
 19242  01E868  E308               	bnc	u11220
 19243  01E86A  0EF7               	movlw	-9
 19244  01E86C  2AE3               	incf	plusw1,f,c
 19245  01E86E  E305               	bnc	u11220
 19246  01E870  0EF8               	movlw	-8
 19247  01E872  2AE3               	incf	plusw1,f,c
 19248  01E874  E302               	bnc	u11220
 19249  01E876  0EF9               	movlw	-7
 19250  01E878  2AE3               	incf	plusw1,f,c
 19251  01E87A                     u11220:
 19252                           
 19253                           ;stkvar	_divisor @ sp[(-2)+-8]
 19254  01E87A  0EF6               	movlw	-10
 19255  01E87C  50E3               	movf	plusw1,w,c
 19256  01E87E  E10A               	bnz	u11230
 19257  01E880  0EF7               	movlw	-9
 19258  01E882  50E3               	movf	plusw1,w,c
 19259  01E884  E107               	bnz	u11230
 19260  01E886  0EF8               	movlw	-8
 19261  01E888  50E3               	movf	plusw1,w,c
 19262  01E88A  E104               	bnz	u11230
 19263  01E88C  0EF9               	movlw	-7
 19264  01E88E  50E3               	movf	plusw1,w,c
 19265  01E890  B4D8               	btfsc	status,2,c
 19266  01E892  D04D               	goto	u11260
 19267  01E894                     u11230:
 19268                           
 19269                           ;stkvar	_counter @ sp[(-2)+1]
 19270  01E894  0EFF               	movlw	-1
 19271  01E896  6AE3               	clrf	plusw1,c
 19272  01E898  D00A               	goto	L17
 19273  01E89A                     l11988:
 19274                           
 19275                           ;stkvar	_divisor @ sp[(-2)+-8]
 19276  01E89A  90D8               	bcf	status,0,c
 19277  01E89C  0EF6               	movlw	-10
 19278  01E89E  36E3               	rlcf	plusw1,f,c
 19279  01E8A0  0EF7               	movlw	-9
 19280  01E8A2  36E3               	rlcf	plusw1,f,c
 19281  01E8A4  0EF8               	movlw	-8
 19282  01E8A6  36E3               	rlcf	plusw1,f,c
 19283  01E8A8  0EF9               	movlw	-7
 19284  01E8AA  36E3               	rlcf	plusw1,f,c
 19285                           
 19286                           ;stkvar	_counter @ sp[(-2)+1]
 19287  01E8AC  0EFF               	movlw	-1
 19288  01E8AE                     L17:
 19289  01E8AE  2AE3               	incf	plusw1,f,c
 19290                           
 19291                           ;stkvar	_divisor @ sp[(-2)+-8]
 19292  01E8B0  0EF9               	movlw	-7
 19293  01E8B2  AEE3               	btfss	plusw1,7,c
 19294  01E8B4  D7F2               	goto	l11988
 19295  01E8B6                     u11240:
 19296                           
 19297                           ;stkvar	_divisor @ sp[(-2)+-8]
 19298                           ;stkvar	_dividend @ sp[(-2)+-4]
 19299  01E8B6  50E1               	movf	fsr1l,w,c
 19300  01E8B8  0FFA               	addlw	-6
 19301  01E8BA  6ED9               	movwf	fsr2l,c
 19302  01E8BC  50E2               	movf	fsr1h,w,c
 19303  01E8BE  6EDA               	movwf	fsr2h,c
 19304  01E8C0  0EFF               	movlw	255
 19305  01E8C2  22DA               	addwfc	fsr2h,f,c
 19306  01E8C4  0EF6               	movlw	-10
 19307  01E8C6  50E3               	movf	plusw1,w,c
 19308  01E8C8  5CDE               	subwf	postinc2,w,c
 19309  01E8CA  0EF7               	movlw	-9
 19310  01E8CC  50E3               	movf	plusw1,w,c
 19311  01E8CE  58DE               	subwfb	postinc2,w,c
 19312  01E8D0  0EF8               	movlw	-8
 19313  01E8D2  50E3               	movf	plusw1,w,c
 19314  01E8D4  58DE               	subwfb	postinc2,w,c
 19315  01E8D6  0EF9               	movlw	-7
 19316  01E8D8  50E3               	movf	plusw1,w,c
 19317  01E8DA  58DE               	subwfb	postinc2,w,c
 19318  01E8DC  A0D8               	btfss	status,0,c
 19319  01E8DE  D013               	goto	l11996
 19320                           
 19321                           ;stkvar	_divisor @ sp[(-2)+-8]
 19322                           ;stkvar	_dividend @ sp[(-2)+-4]
 19323  01E8E0  50E1               	movf	fsr1l,w,c
 19324  01E8E2  0FFA               	addlw	-6
 19325  01E8E4  6ED9               	movwf	fsr2l,c
 19326  01E8E6  50E2               	movf	fsr1h,w,c
 19327  01E8E8  6EDA               	movwf	fsr2h,c
 19328  01E8EA  0EFF               	movlw	255
 19329  01E8EC  22DA               	addwfc	fsr2h,f,c
 19330  01E8EE  0EF6               	movlw	-10
 19331  01E8F0  50E3               	movf	plusw1,w,c
 19332  01E8F2  5EDE               	subwf	postinc2,f,c
 19333  01E8F4  0EF7               	movlw	-9
 19334  01E8F6  50E3               	movf	plusw1,w,c
 19335  01E8F8  5ADE               	subwfb	postinc2,f,c
 19336  01E8FA  0EF8               	movlw	-8
 19337  01E8FC  50E3               	movf	plusw1,w,c
 19338  01E8FE  5ADE               	subwfb	postinc2,f,c
 19339  01E900  0EF9               	movlw	-7
 19340  01E902  50E3               	movf	plusw1,w,c
 19341  01E904  5ADE               	subwfb	postinc2,f,c
 19342  01E906                     l11996:
 19343                           
 19344                           ;stkvar	_divisor @ sp[(-2)+-8]
 19345  01E906  90D8               	bcf	status,0,c
 19346  01E908  0EF9               	movlw	-7
 19347  01E90A  32E3               	rrcf	plusw1,f,c
 19348  01E90C  0EF8               	movlw	-8
 19349  01E90E  32E3               	rrcf	plusw1,f,c
 19350  01E910  0EF7               	movlw	-9
 19351  01E912  32E3               	rrcf	plusw1,f,c
 19352  01E914  0EF6               	movlw	-10
 19353  01E916  32E3               	rrcf	plusw1,f,c
 19354                           
 19355                           ;stkvar	_counter @ sp[(-2)+1]
 19356  01E918  0EFF               	movlw	-1
 19357  01E91A  50E3               	movf	plusw1,w,c
 19358  01E91C  6E2A               	movwf	btemp^0,c
 19359  01E91E  0E01               	movlw	1
 19360  01E920  5E2A               	subwf	btemp^0,f,c
 19361  01E922  0EFF               	movlw	-1
 19362  01E924  0060  F0AB  FFE3   	movff	btemp,plusw1
 19363  01E92A  A4D8               	btfss	status,2,c
 19364  01E92C  D7C4               	goto	u11240
 19365  01E92E                     u11260:
 19366                           
 19367                           ;stkvar	_sign @ sp[(-2)+0]
 19368  01E92E  0EFE               	movlw	-2
 19369  01E930  50E3               	movf	plusw1,w,c
 19370  01E932  B4D8               	btfsc	status,2,c
 19371  01E934  D011               	goto	u11280
 19372                           
 19373                           ;stkvar	_dividend @ sp[(-2)+-4]
 19374                           ;stkvar	_dividend @ sp[(-2)+-4]
 19375  01E936  0EFA               	movlw	-6
 19376  01E938  6CE3               	negf	plusw1,c
 19377  01E93A  0EFB               	movlw	-5
 19378  01E93C  1EE3               	comf	plusw1,f,c
 19379  01E93E  0EFC               	movlw	-4
 19380  01E940  1EE3               	comf	plusw1,f,c
 19381  01E942  0EFD               	movlw	-3
 19382  01E944  1EE3               	comf	plusw1,f,c
 19383  01E946  E308               	bnc	u11280
 19384  01E948  0EFB               	movlw	-5
 19385  01E94A  2AE3               	incf	plusw1,f,c
 19386  01E94C  E305               	bnc	u11280
 19387  01E94E  0EFC               	movlw	-4
 19388  01E950  2AE3               	incf	plusw1,f,c
 19389  01E952  E302               	bnc	u11280
 19390  01E954  0EFD               	movlw	-3
 19391  01E956  2AE3               	incf	plusw1,f,c
 19392  01E958                     u11280:
 19393                           
 19394                           ;stkvar	_dividend @ sp[(-2)+-4]
 19395  01E958  0EFA               	movlw	-6
 19396  01E95A  006F FF8C  F02A    	movff	plusw1,btemp
 19397  01E960  0EFB               	movlw	-5
 19398  01E962  006F FF8C  F02B    	movff	plusw1,btemp+1
 19399  01E968  0EFC               	movlw	-4
 19400  01E96A  006F FF8C  F02C    	movff	plusw1,btemp+2
 19401  01E970  0EFD               	movlw	-3
 19402  01E972  006F FF8C  F02D    	movff	plusw1,btemp+3
 19403                           
 19404                           ; ___almod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19405  01E978  0EF6               	movlw	246
 19406  01E97A  26E1               	addwf	fsr1l,f,c
 19407  01E97C  0EFF               	movlw	255
 19408  01E97E  22E2               	addwfc	fsr1h,f,c
 19409  01E980  0012               	return		;funcret
 19410  01E982                     __end_of___almod:
 19411                           	opt callstack 0
 19412                           
 19413 ;; *************** function ___aldiv *****************
 19414 ;; Defined at:
 19415 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aldiv.c"
 19416 ;; Parameters:    Size  Location     Type
 19417 ;;  dividend        4  [STACK] long 
 19418 ;;  divisor         4  [STACK] long 
 19419 ;; Auto vars:     Size  Location     Type
 19420 ;;  quotient        4  [STACK] long 
 19421 ;;  sign            1  [STACK] unsigned char 
 19422 ;;  counter         1  [STACK] unsigned char 
 19423 ;; Return value:  Size  Location     Type
 19424 ;;                  4  [STACK] long 
 19425 ;; Registers used:
 19426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19427 ;; Tracked objects:
 19428 ;;		On entry : 0/0
 19429 ;;		On exit  : 0/0
 19430 ;;		Unchanged: 0/0
 19431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19436 ;;Total ram usage:        0 bytes
 19437 ;; Hardware stack levels used:    1
 19438 ;; Hardware stack levels required when called:   15
 19439 ;; This function calls:
 19440 ;;		Nothing
 19441 ;; This function is called by:
 19442 ;;		___secs_to_tm
 19443 ;;		_rule_to_secs
 19444 ;; This function uses a reentrant model
 19445 ;;
 19446                           
 19447                           	psect	text54
 19448  01DF10                     __ptext54:
 19449                           	opt callstack 0
 19450  01DF10                     ___aldiv:
 19451                           	opt callstack 0
 19452                           
 19453                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19454  01DF10  0E06               	movlw	6
 19455  01DF12  26E1               	addwf	fsr1l,f,c
 19456  01DF14  0E00               	movlw	0
 19457  01DF16  22E2               	addwfc	fsr1h,f,c
 19458                           
 19459                           ;stkvar	_sign @ sp[(-6)+4]
 19460                           
 19461                           ;incstack = 0
 19462  01DF18  0EFE               	movlw	-2
 19463  01DF1A  6AE3               	clrf	plusw1,c
 19464                           
 19465                           ;stkvar	_divisor @ sp[(-6)+-8]
 19466  01DF1C  0EF5               	movlw	-11
 19467  01DF1E  AEE3               	btfss	plusw1,7,c
 19468  01DF20  D014               	goto	l11522
 19469                           
 19470                           ;stkvar	_divisor @ sp[(-6)+-8]
 19471                           ;stkvar	_divisor @ sp[(-6)+-8]
 19472  01DF22  0EF2               	movlw	-14
 19473  01DF24  6CE3               	negf	plusw1,c
 19474  01DF26  0EF3               	movlw	-13
 19475  01DF28  1EE3               	comf	plusw1,f,c
 19476  01DF2A  0EF4               	movlw	-12
 19477  01DF2C  1EE3               	comf	plusw1,f,c
 19478  01DF2E  0EF5               	movlw	-11
 19479  01DF30  1EE3               	comf	plusw1,f,c
 19480  01DF32  E308               	bnc	u10520
 19481  01DF34  0EF3               	movlw	-13
 19482  01DF36  2AE3               	incf	plusw1,f,c
 19483  01DF38  E305               	bnc	u10520
 19484  01DF3A  0EF4               	movlw	-12
 19485  01DF3C  2AE3               	incf	plusw1,f,c
 19486  01DF3E  E302               	bnc	u10520
 19487  01DF40  0EF5               	movlw	-11
 19488  01DF42  2AE3               	incf	plusw1,f,c
 19489  01DF44                     u10520:
 19490                           
 19491                           ;stkvar	_sign @ sp[(-6)+4]
 19492  01DF44  0EFE               	movlw	-2
 19493  01DF46  6AE3               	clrf	plusw1,c
 19494  01DF48  2AE3               	incf	plusw1,f,c
 19495  01DF4A                     l11522:
 19496                           
 19497                           ;stkvar	_dividend @ sp[(-6)+-4]
 19498  01DF4A  0EF9               	movlw	-7
 19499  01DF4C  AEE3               	btfss	plusw1,7,c
 19500  01DF4E  D013               	goto	l11528
 19501                           
 19502                           ;stkvar	_dividend @ sp[(-6)+-4]
 19503                           ;stkvar	_dividend @ sp[(-6)+-4]
 19504  01DF50  0EF6               	movlw	-10
 19505  01DF52  6CE3               	negf	plusw1,c
 19506  01DF54  0EF7               	movlw	-9
 19507  01DF56  1EE3               	comf	plusw1,f,c
 19508  01DF58  0EF8               	movlw	-8
 19509  01DF5A  1EE3               	comf	plusw1,f,c
 19510  01DF5C  0EF9               	movlw	-7
 19511  01DF5E  1EE3               	comf	plusw1,f,c
 19512  01DF60  E308               	bnc	u10540
 19513  01DF62  0EF7               	movlw	-9
 19514  01DF64  2AE3               	incf	plusw1,f,c
 19515  01DF66  E305               	bnc	u10540
 19516  01DF68  0EF8               	movlw	-8
 19517  01DF6A  2AE3               	incf	plusw1,f,c
 19518  01DF6C  E302               	bnc	u10540
 19519  01DF6E  0EF9               	movlw	-7
 19520  01DF70  2AE3               	incf	plusw1,f,c
 19521  01DF72                     u10540:
 19522                           
 19523                           ;stkvar	_sign @ sp[(-6)+4]
 19524  01DF72  0EFE               	movlw	-2
 19525  01DF74  70E3               	btg	plusw1,0,c
 19526  01DF76                     l11528:
 19527                           
 19528                           ;stkvar	_quotient @ sp[(-6)+0]
 19529  01DF76  0EFA               	movlw	-6
 19530  01DF78  6AE3               	clrf	plusw1,c
 19531  01DF7A  0EFB               	movlw	-5
 19532  01DF7C  6AE3               	clrf	plusw1,c
 19533  01DF7E  0EFC               	movlw	-4
 19534  01DF80  6AE3               	clrf	plusw1,c
 19535  01DF82  0EFD               	movlw	-3
 19536  01DF84  6AE3               	clrf	plusw1,c
 19537                           
 19538                           ;stkvar	_divisor @ sp[(-6)+-8]
 19539  01DF86  0EF2               	movlw	-14
 19540  01DF88  50E3               	movf	plusw1,w,c
 19541  01DF8A  E10A               	bnz	u10550
 19542  01DF8C  0EF3               	movlw	-13
 19543  01DF8E  50E3               	movf	plusw1,w,c
 19544  01DF90  E107               	bnz	u10550
 19545  01DF92  0EF4               	movlw	-12
 19546  01DF94  50E3               	movf	plusw1,w,c
 19547  01DF96  E104               	bnz	u10550
 19548  01DF98  0EF5               	movlw	-11
 19549  01DF9A  50E3               	movf	plusw1,w,c
 19550  01DF9C  B4D8               	btfsc	status,2,c
 19551  01DF9E  D058               	goto	u10580
 19552  01DFA0                     u10550:
 19553                           
 19554                           ;stkvar	_counter @ sp[(-6)+5]
 19555  01DFA0  0EFF               	movlw	-1
 19556  01DFA2  6AE3               	clrf	plusw1,c
 19557  01DFA4  D00A               	goto	L18
 19558  01DFA6                     l11534:
 19559                           
 19560                           ;stkvar	_divisor @ sp[(-6)+-8]
 19561  01DFA6  90D8               	bcf	status,0,c
 19562  01DFA8  0EF2               	movlw	-14
 19563  01DFAA  36E3               	rlcf	plusw1,f,c
 19564  01DFAC  0EF3               	movlw	-13
 19565  01DFAE  36E3               	rlcf	plusw1,f,c
 19566  01DFB0  0EF4               	movlw	-12
 19567  01DFB2  36E3               	rlcf	plusw1,f,c
 19568  01DFB4  0EF5               	movlw	-11
 19569  01DFB6  36E3               	rlcf	plusw1,f,c
 19570                           
 19571                           ;stkvar	_counter @ sp[(-6)+5]
 19572  01DFB8  0EFF               	movlw	-1
 19573  01DFBA                     L18:
 19574  01DFBA  2AE3               	incf	plusw1,f,c
 19575                           
 19576                           ;stkvar	_divisor @ sp[(-6)+-8]
 19577  01DFBC  0EF5               	movlw	-11
 19578  01DFBE  AEE3               	btfss	plusw1,7,c
 19579  01DFC0  D7F2               	goto	l11534
 19580  01DFC2                     u10560:
 19581                           
 19582                           ;stkvar	_quotient @ sp[(-6)+0]
 19583  01DFC2  90D8               	bcf	status,0,c
 19584  01DFC4  0EFA               	movlw	-6
 19585  01DFC6  36E3               	rlcf	plusw1,f,c
 19586  01DFC8  0EFB               	movlw	-5
 19587  01DFCA  36E3               	rlcf	plusw1,f,c
 19588  01DFCC  0EFC               	movlw	-4
 19589  01DFCE  36E3               	rlcf	plusw1,f,c
 19590  01DFD0  0EFD               	movlw	-3
 19591  01DFD2  36E3               	rlcf	plusw1,f,c
 19592                           
 19593                           ;stkvar	_divisor @ sp[(-6)+-8]
 19594                           ;stkvar	_dividend @ sp[(-6)+-4]
 19595  01DFD4  50E1               	movf	fsr1l,w,c
 19596  01DFD6  0FF6               	addlw	-10
 19597  01DFD8  6ED9               	movwf	fsr2l,c
 19598  01DFDA  50E2               	movf	fsr1h,w,c
 19599  01DFDC  6EDA               	movwf	fsr2h,c
 19600  01DFDE  0EFF               	movlw	255
 19601  01DFE0  22DA               	addwfc	fsr2h,f,c
 19602  01DFE2  0EF2               	movlw	-14
 19603  01DFE4  50E3               	movf	plusw1,w,c
 19604  01DFE6  5CDE               	subwf	postinc2,w,c
 19605  01DFE8  0EF3               	movlw	-13
 19606  01DFEA  50E3               	movf	plusw1,w,c
 19607  01DFEC  58DE               	subwfb	postinc2,w,c
 19608  01DFEE  0EF4               	movlw	-12
 19609  01DFF0  50E3               	movf	plusw1,w,c
 19610  01DFF2  58DE               	subwfb	postinc2,w,c
 19611  01DFF4  0EF5               	movlw	-11
 19612  01DFF6  50E3               	movf	plusw1,w,c
 19613  01DFF8  58DE               	subwfb	postinc2,w,c
 19614  01DFFA  A0D8               	btfss	status,0,c
 19615  01DFFC  D015               	goto	l11546
 19616                           
 19617                           ;stkvar	_divisor @ sp[(-6)+-8]
 19618                           ;stkvar	_dividend @ sp[(-6)+-4]
 19619  01DFFE  50E1               	movf	fsr1l,w,c
 19620  01E000  0FF6               	addlw	-10
 19621  01E002  6ED9               	movwf	fsr2l,c
 19622  01E004  50E2               	movf	fsr1h,w,c
 19623  01E006  6EDA               	movwf	fsr2h,c
 19624  01E008  0EFF               	movlw	255
 19625  01E00A  22DA               	addwfc	fsr2h,f,c
 19626  01E00C  0EF2               	movlw	-14
 19627  01E00E  50E3               	movf	plusw1,w,c
 19628  01E010  5EDE               	subwf	postinc2,f,c
 19629  01E012  0EF3               	movlw	-13
 19630  01E014  50E3               	movf	plusw1,w,c
 19631  01E016  5ADE               	subwfb	postinc2,f,c
 19632  01E018  0EF4               	movlw	-12
 19633  01E01A  50E3               	movf	plusw1,w,c
 19634  01E01C  5ADE               	subwfb	postinc2,f,c
 19635  01E01E  0EF5               	movlw	-11
 19636  01E020  50E3               	movf	plusw1,w,c
 19637  01E022  5ADE               	subwfb	postinc2,f,c
 19638                           
 19639                           ;stkvar	_quotient @ sp[(-6)+0]
 19640  01E024  0EFA               	movlw	-6
 19641  01E026  80E3               	bsf	plusw1,0,c
 19642  01E028                     l11546:
 19643                           
 19644                           ;stkvar	_divisor @ sp[(-6)+-8]
 19645  01E028  90D8               	bcf	status,0,c
 19646  01E02A  0EF5               	movlw	-11
 19647  01E02C  32E3               	rrcf	plusw1,f,c
 19648  01E02E  0EF4               	movlw	-12
 19649  01E030  32E3               	rrcf	plusw1,f,c
 19650  01E032  0EF3               	movlw	-13
 19651  01E034  32E3               	rrcf	plusw1,f,c
 19652  01E036  0EF2               	movlw	-14
 19653  01E038  32E3               	rrcf	plusw1,f,c
 19654                           
 19655                           ;stkvar	_counter @ sp[(-6)+5]
 19656  01E03A  0EFF               	movlw	-1
 19657  01E03C  50E3               	movf	plusw1,w,c
 19658  01E03E  6E2A               	movwf	btemp^0,c
 19659  01E040  0E01               	movlw	1
 19660  01E042  5E2A               	subwf	btemp^0,f,c
 19661  01E044  0EFF               	movlw	-1
 19662  01E046  0060  F0AB  FFE3   	movff	btemp,plusw1
 19663  01E04C  A4D8               	btfss	status,2,c
 19664  01E04E  D7B9               	goto	u10560
 19665  01E050                     u10580:
 19666                           
 19667                           ;stkvar	_sign @ sp[(-6)+4]
 19668  01E050  0EFE               	movlw	-2
 19669  01E052  50E3               	movf	plusw1,w,c
 19670  01E054  B4D8               	btfsc	status,2,c
 19671  01E056  D011               	goto	u10600
 19672                           
 19673                           ;stkvar	_quotient @ sp[(-6)+0]
 19674                           ;stkvar	_quotient @ sp[(-6)+0]
 19675  01E058  0EFA               	movlw	-6
 19676  01E05A  6CE3               	negf	plusw1,c
 19677  01E05C  0EFB               	movlw	-5
 19678  01E05E  1EE3               	comf	plusw1,f,c
 19679  01E060  0EFC               	movlw	-4
 19680  01E062  1EE3               	comf	plusw1,f,c
 19681  01E064  0EFD               	movlw	-3
 19682  01E066  1EE3               	comf	plusw1,f,c
 19683  01E068  E308               	bnc	u10600
 19684  01E06A  0EFB               	movlw	-5
 19685  01E06C  2AE3               	incf	plusw1,f,c
 19686  01E06E  E305               	bnc	u10600
 19687  01E070  0EFC               	movlw	-4
 19688  01E072  2AE3               	incf	plusw1,f,c
 19689  01E074  E302               	bnc	u10600
 19690  01E076  0EFD               	movlw	-3
 19691  01E078  2AE3               	incf	plusw1,f,c
 19692  01E07A                     u10600:
 19693                           
 19694                           ;stkvar	_quotient @ sp[(-6)+0]
 19695  01E07A  0EFA               	movlw	-6
 19696  01E07C  006F FF8C  F02A    	movff	plusw1,btemp
 19697  01E082  0EFB               	movlw	-5
 19698  01E084  006F FF8C  F02B    	movff	plusw1,btemp+1
 19699  01E08A  0EFC               	movlw	-4
 19700  01E08C  006F FF8C  F02C    	movff	plusw1,btemp+2
 19701  01E092  0EFD               	movlw	-3
 19702  01E094  006F FF8C  F02D    	movff	plusw1,btemp+3
 19703                           
 19704                           ; ___aldiv: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19705  01E09A  0EF2               	movlw	242
 19706  01E09C  26E1               	addwf	fsr1l,f,c
 19707  01E09E  0EFF               	movlw	255
 19708  01E0A0  22E2               	addwfc	fsr1h,f,c
 19709  01E0A2  0012               	return		;funcret
 19710  01E0A4                     __end_of___aldiv:
 19711                           	opt callstack 0
 19712                           
 19713 ;; *************** function _asctime *****************
 19714 ;; Defined at:
 19715 ;;		line 19 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 19716 ;; Parameters:    Size  Location     Type
 19717 ;;  tim             2  [STACK] PTR const struct tm
 19718 ;;		 -> localtime@tm(24), NULL(0), 
 19719 ;; Auto vars:     Size  Location     Type
 19720 ;;  cp              2  [STACK] PTR unsigned char 
 19721 ;;		 -> asctime@buf(27), 
 19722 ;;  s               2  [STACK] PTR const unsigned char 
 19723 ;;		 -> STR_133(37), STR_132(22), 
 19724 ;; Return value:  Size  Location     Type
 19725 ;;                  2  [STACK] PTR unsigned char 
 19726 ;; Registers used:
 19727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 19728 ;; Tracked objects:
 19729 ;;		On entry : 0/39
 19730 ;;		On exit  : 0/0
 19731 ;;		Unchanged: 0/0
 19732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19737 ;;Total ram usage:        0 bytes
 19738 ;; Hardware stack levels used:    1
 19739 ;; Hardware stack levels required when called:   17
 19740 ;; This function calls:
 19741 ;;		___awdiv
 19742 ;;		___awmod
 19743 ;;		_put2d
 19744 ;; This function is called by:
 19745 ;;		_main
 19746 ;;		_display_history
 19747 ;; This function uses a reentrant model
 19748 ;;
 19749                           
 19750                           	psect	text55
 19751  01821A                     __ptext55:
 19752                           	opt callstack 0
 19753  01821A                     _asctime:
 19754                           	opt callstack 0
 19755                           
 19756                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19757  01821A  52E6               	movf	postinc1,f,c
 19758  01821C  52E6               	movf	postinc1,f,c
 19759  01821E  52E6               	movf	postinc1,f,c
 19760  018220  52E6               	movf	postinc1,f,c
 19761                           
 19762                           ;stkvar	_tim @ sp[(-4)+-2]
 19763                           
 19764                           ;incstack = 0
 19765  018222  0EFA               	movlw	-6
 19766  018224  006F FF8C  F034    	movff	plusw1,btemp+10
 19767  01822A  0EFB               	movlw	-5
 19768  01822C  006F FF8C  F035    	movff	plusw1,btemp+11
 19769  018232  0E0C               	movlw	12
 19770  018234  2434               	addwf	(btemp+10)^0,w,c
 19771  018236  6ED9               	movwf	fsr2l,c
 19772  018238  0E00               	movlw	0
 19773  01823A  2035               	addwfc	(btemp+11)^0,w,c
 19774  01823C  6EDA               	movwf	fsr2h,c
 19775  01823E  006F FF78  F034    	movff	postinc2,btemp+10
 19776  018244  006F FF74  F035    	movff	postdec2,btemp+11
 19777  01824A  0E03               	movlw	3
 19778  01824C  0234               	mulwf	(btemp+10)^0,c
 19779  01824E  006F FFCC  F032    	movff	prodl,btemp+8
 19780  018254  006F FFD0  F033    	movff	prodh,btemp+9
 19781  01825A  0235               	mulwf	(btemp+11)^0,c
 19782  01825C  50F3               	movf	prodl,w,c
 19783  01825E  2633               	addwf	(btemp+9)^0,f,c
 19784  018260  0E27               	movlw	low STR_132
 19785  018262  6E34               	movwf	(btemp+10)^0,c
 19786  018264  0EFD               	movlw	high STR_132
 19787  018266  6E35               	movwf	(btemp+11)^0,c
 19788  018268  5032               	movf	(btemp+8)^0,w,c
 19789  01826A  2634               	addwf	(btemp+10)^0,f,c
 19790  01826C  5033               	movf	(btemp+9)^0,w,c
 19791  01826E  2235               	addwfc	(btemp+11)^0,f,c
 19792                           
 19793                           ;stkvar	_s @ sp[(-4)+2]
 19794  018270  0EFF               	movlw	-1
 19795  018272  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 19796  018278  0EFE               	movlw	-2
 19797  01827A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 19798                           
 19799                           ;stkvar	_cp @ sp[(-4)+0]
 19800  018280  0E03               	movlw	high asctime@buf
 19801  018282  6E2A               	movwf	btemp^0,c
 19802  018284  0EFD               	movlw	-3
 19803  018286  0060  F0AB  FFE3   	movff	btemp,plusw1
 19804  01828C  0EC4               	movlw	low asctime@buf
 19805  01828E  6E2A               	movwf	btemp^0,c
 19806  018290  0EFC               	movlw	-4
 19807  018292  0060  F0AB  FFE3   	movff	btemp,plusw1
 19808                           
 19809                           ;stkvar	_s @ sp[(-4)+2]
 19810  018298  50E1               	movf	fsr1l,w,c
 19811  01829A  0FFE               	addlw	-2
 19812  01829C  6ED9               	movwf	fsr2l,c
 19813  01829E  50E2               	movf	fsr1h,w,c
 19814  0182A0  6EDA               	movwf	fsr2h,c
 19815  0182A2  0EFF               	movlw	255
 19816  0182A4  22DA               	addwfc	fsr2h,f,c
 19817  0182A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 19818  0182AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 19819  0182B2                     	if	0	;tblptru may be non-zero
 19820  0182B2                     	endif
 19821  0182B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19822  0182B2  0E00               	movlw	low (__mediumconst shr (0+16))
 19823  0182B4  6EF8               	movwf	tblptru,c
 19824  0182B6                     	endif
 19825                           
 19826                           ;stkvar	_cp @ sp[(-4)+0]
 19827  0182B6  0EFC               	movlw	-4
 19828  0182B8  006F FF8F FFD9     	movff	plusw1,fsr2l
 19829  0182BE  0EFD               	movlw	-3
 19830  0182C0  006F FF8F FFDA     	movff	plusw1,fsr2h
 19831  0182C6  0008               	tblrd		*
 19832  0182C8  006F FFD7 FFDF     	movff	tablat,indf2
 19833                           
 19834                           ;stkvar	_s @ sp[(-4)+2]
 19835  0182CE  0EFE               	movlw	-2
 19836  0182D0  50E3               	movf	plusw1,w,c
 19837  0182D2  0F01               	addlw	1
 19838  0182D4  6E2A               	movwf	btemp^0,c
 19839  0182D6  0EFE               	movlw	-2
 19840  0182D8  0060  F0AB  FFE3   	movff	btemp,plusw1
 19841  0182DE  6A2A               	clrf	btemp^0,c
 19842  0182E0  0EFF               	movlw	-1
 19843  0182E2  50E3               	movf	plusw1,w,c
 19844  0182E4  202A               	addwfc	btemp^0,w,c
 19845  0182E6  6E2A               	movwf	btemp^0,c
 19846  0182E8  0EFF               	movlw	-1
 19847  0182EA  0060  F0AB  FFE3   	movff	btemp,plusw1
 19848                           
 19849                           ;stkvar	_cp @ sp[(-4)+0]
 19850  0182F0  0EFC               	movlw	-4
 19851  0182F2  50E3               	movf	plusw1,w,c
 19852  0182F4  0F01               	addlw	1
 19853  0182F6  6E2A               	movwf	btemp^0,c
 19854  0182F8  0EFC               	movlw	-4
 19855  0182FA  0060  F0AB  FFE3   	movff	btemp,plusw1
 19856  018300  6A2A               	clrf	btemp^0,c
 19857  018302  0EFD               	movlw	-3
 19858  018304  50E3               	movf	plusw1,w,c
 19859  018306  202A               	addwfc	btemp^0,w,c
 19860  018308  6E2A               	movwf	btemp^0,c
 19861  01830A  0EFD               	movlw	-3
 19862  01830C  0060  F0AB  FFE3   	movff	btemp,plusw1
 19863                           
 19864                           ;stkvar	_s @ sp[(-4)+2]
 19865  018312  50E1               	movf	fsr1l,w,c
 19866  018314  0FFE               	addlw	-2
 19867  018316  6ED9               	movwf	fsr2l,c
 19868  018318  50E2               	movf	fsr1h,w,c
 19869  01831A  6EDA               	movwf	fsr2h,c
 19870  01831C  0EFF               	movlw	255
 19871  01831E  22DA               	addwfc	fsr2h,f,c
 19872  018320  006F FF7B FFF6     	movff	postinc2,tblptrl
 19873  018326  006F FF77 FFF7     	movff	postdec2,tblptrh
 19874  01832C                     	if	0	;tblptru may be non-zero
 19875  01832C                     	endif
 19876  01832C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19877  01832C  0E00               	movlw	low (__mediumconst shr (0+16))
 19878  01832E  6EF8               	movwf	tblptru,c
 19879  018330                     	endif
 19880                           
 19881                           ;stkvar	_cp @ sp[(-4)+0]
 19882  018330  0EFC               	movlw	-4
 19883  018332  006F FF8F FFD9     	movff	plusw1,fsr2l
 19884  018338  0EFD               	movlw	-3
 19885  01833A  006F FF8F FFDA     	movff	plusw1,fsr2h
 19886  018340  0008               	tblrd		*
 19887  018342  006F FFD7 FFDF     	movff	tablat,indf2
 19888                           
 19889                           ;stkvar	_s @ sp[(-4)+2]
 19890  018348  0EFE               	movlw	-2
 19891  01834A  50E3               	movf	plusw1,w,c
 19892  01834C  0F01               	addlw	1
 19893  01834E  6E2A               	movwf	btemp^0,c
 19894  018350  0EFE               	movlw	-2
 19895  018352  0060  F0AB  FFE3   	movff	btemp,plusw1
 19896  018358  6A2A               	clrf	btemp^0,c
 19897  01835A  0EFF               	movlw	-1
 19898  01835C  50E3               	movf	plusw1,w,c
 19899  01835E  202A               	addwfc	btemp^0,w,c
 19900  018360  6E2A               	movwf	btemp^0,c
 19901  018362  0EFF               	movlw	-1
 19902  018364  0060  F0AB  FFE3   	movff	btemp,plusw1
 19903                           
 19904                           ;stkvar	_cp @ sp[(-4)+0]
 19905  01836A  0EFC               	movlw	-4
 19906  01836C  50E3               	movf	plusw1,w,c
 19907  01836E  0F01               	addlw	1
 19908  018370  6E2A               	movwf	btemp^0,c
 19909  018372  0EFC               	movlw	-4
 19910  018374  0060  F0AB  FFE3   	movff	btemp,plusw1
 19911  01837A  6A2A               	clrf	btemp^0,c
 19912  01837C  0EFD               	movlw	-3
 19913  01837E  50E3               	movf	plusw1,w,c
 19914  018380  202A               	addwfc	btemp^0,w,c
 19915  018382  6E2A               	movwf	btemp^0,c
 19916  018384  0EFD               	movlw	-3
 19917  018386  0060  F0AB  FFE3   	movff	btemp,plusw1
 19918                           
 19919                           ;stkvar	_s @ sp[(-4)+2]
 19920  01838C  50E1               	movf	fsr1l,w,c
 19921  01838E  0FFE               	addlw	-2
 19922  018390  6ED9               	movwf	fsr2l,c
 19923  018392  50E2               	movf	fsr1h,w,c
 19924  018394  6EDA               	movwf	fsr2h,c
 19925  018396  0EFF               	movlw	255
 19926  018398  22DA               	addwfc	fsr2h,f,c
 19927  01839A  006F FF7B FFF6     	movff	postinc2,tblptrl
 19928  0183A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 19929  0183A6                     	if	0	;tblptru may be non-zero
 19930  0183A6                     	endif
 19931  0183A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19932  0183A6  0E00               	movlw	low (__mediumconst shr (0+16))
 19933  0183A8  6EF8               	movwf	tblptru,c
 19934  0183AA                     	endif
 19935                           
 19936                           ;stkvar	_cp @ sp[(-4)+0]
 19937  0183AA  0EFC               	movlw	-4
 19938  0183AC  006F FF8F FFD9     	movff	plusw1,fsr2l
 19939  0183B2  0EFD               	movlw	-3
 19940  0183B4  006F FF8F FFDA     	movff	plusw1,fsr2h
 19941  0183BA  0008               	tblrd		*
 19942  0183BC  006F FFD7 FFDF     	movff	tablat,indf2
 19943                           
 19944                           ;stkvar	_cp @ sp[(-4)+0]
 19945  0183C2  0EFC               	movlw	-4
 19946  0183C4  50E3               	movf	plusw1,w,c
 19947  0183C6  0F01               	addlw	1
 19948  0183C8  6E2A               	movwf	btemp^0,c
 19949  0183CA  0EFC               	movlw	-4
 19950  0183CC  0060  F0AB  FFE3   	movff	btemp,plusw1
 19951  0183D2  6A2A               	clrf	btemp^0,c
 19952  0183D4  0EFD               	movlw	-3
 19953  0183D6  50E3               	movf	plusw1,w,c
 19954  0183D8  202A               	addwfc	btemp^0,w,c
 19955  0183DA  6E2A               	movwf	btemp^0,c
 19956  0183DC  0EFD               	movlw	-3
 19957  0183DE  0060  F0AB  FFE3   	movff	btemp,plusw1
 19958                           
 19959                           ;stkvar	_cp @ sp[(-4)+0]
 19960  0183E4  0EFC               	movlw	-4
 19961  0183E6  006F FF8F FFD9     	movff	plusw1,fsr2l
 19962  0183EC  0EFD               	movlw	-3
 19963  0183EE  006F FF8F FFDA     	movff	plusw1,fsr2h
 19964  0183F4  0E20               	movlw	32
 19965  0183F6  6EDF               	movwf	indf2,c
 19966                           
 19967                           ;stkvar	_cp @ sp[(-4)+0]
 19968  0183F8  0EFC               	movlw	-4
 19969  0183FA  50E3               	movf	plusw1,w,c
 19970  0183FC  0F01               	addlw	1
 19971  0183FE  6E2A               	movwf	btemp^0,c
 19972  018400  0EFC               	movlw	-4
 19973  018402  0060  F0AB  FFE3   	movff	btemp,plusw1
 19974  018408  6A2A               	clrf	btemp^0,c
 19975  01840A  0EFD               	movlw	-3
 19976  01840C  50E3               	movf	plusw1,w,c
 19977  01840E  202A               	addwfc	btemp^0,w,c
 19978  018410  6E2A               	movwf	btemp^0,c
 19979  018412  0EFD               	movlw	-3
 19980  018414  0060  F0AB  FFE3   	movff	btemp,plusw1
 19981                           
 19982                           ;stkvar	_tim @ sp[(-4)+-2]
 19983  01841A  0EFA               	movlw	-6
 19984  01841C  006F FF8C  F034    	movff	plusw1,btemp+10
 19985  018422  0EFB               	movlw	-5
 19986  018424  006F FF8C  F035    	movff	plusw1,btemp+11
 19987  01842A  0E08               	movlw	8
 19988  01842C  2434               	addwf	(btemp+10)^0,w,c
 19989  01842E  6ED9               	movwf	fsr2l,c
 19990  018430  0E00               	movlw	0
 19991  018432  2035               	addwfc	(btemp+11)^0,w,c
 19992  018434  6EDA               	movwf	fsr2h,c
 19993  018436  006F FF78  F034    	movff	postinc2,btemp+10
 19994  01843C  006F FF74  F035    	movff	postdec2,btemp+11
 19995  018442  0E03               	movlw	3
 19996  018444  0234               	mulwf	(btemp+10)^0,c
 19997  018446  006F FFCC  F032    	movff	prodl,btemp+8
 19998  01844C  006F FFD0  F033    	movff	prodh,btemp+9
 19999  018452  0235               	mulwf	(btemp+11)^0,c
 20000  018454  50F3               	movf	prodl,w,c
 20001  018456  2633               	addwf	(btemp+9)^0,f,c
 20002  018458  0E76               	movlw	low STR_133
 20003  01845A  6E34               	movwf	(btemp+10)^0,c
 20004  01845C  0EFA               	movlw	high STR_133
 20005  01845E  6E35               	movwf	(btemp+11)^0,c
 20006  018460  5032               	movf	(btemp+8)^0,w,c
 20007  018462  2634               	addwf	(btemp+10)^0,f,c
 20008  018464  5033               	movf	(btemp+9)^0,w,c
 20009  018466  2235               	addwfc	(btemp+11)^0,f,c
 20010                           
 20011                           ;stkvar	_s @ sp[(-4)+2]
 20012  018468  0EFF               	movlw	-1
 20013  01846A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 20014  018470  0EFE               	movlw	-2
 20015  018472  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 20016                           
 20017                           ;stkvar	_s @ sp[(-4)+2]
 20018  018478  50E1               	movf	fsr1l,w,c
 20019  01847A  0FFE               	addlw	-2
 20020  01847C  6ED9               	movwf	fsr2l,c
 20021  01847E  50E2               	movf	fsr1h,w,c
 20022  018480  6EDA               	movwf	fsr2h,c
 20023  018482  0EFF               	movlw	255
 20024  018484  22DA               	addwfc	fsr2h,f,c
 20025  018486  006F FF7B FFF6     	movff	postinc2,tblptrl
 20026  01848C  006F FF77 FFF7     	movff	postdec2,tblptrh
 20027  018492                     	if	0	;tblptru may be non-zero
 20028  018492                     	endif
 20029  018492                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20030  018492  0E00               	movlw	low (__mediumconst shr (0+16))
 20031  018494  6EF8               	movwf	tblptru,c
 20032  018496                     	endif
 20033                           
 20034                           ;stkvar	_cp @ sp[(-4)+0]
 20035  018496  0EFC               	movlw	-4
 20036  018498  006F FF8F FFD9     	movff	plusw1,fsr2l
 20037  01849E  0EFD               	movlw	-3
 20038  0184A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 20039  0184A6  0008               	tblrd		*
 20040  0184A8  006F FFD7 FFDF     	movff	tablat,indf2
 20041                           
 20042                           ;stkvar	_s @ sp[(-4)+2]
 20043  0184AE  0EFE               	movlw	-2
 20044  0184B0  50E3               	movf	plusw1,w,c
 20045  0184B2  0F01               	addlw	1
 20046  0184B4  6E2A               	movwf	btemp^0,c
 20047  0184B6  0EFE               	movlw	-2
 20048  0184B8  0060  F0AB  FFE3   	movff	btemp,plusw1
 20049  0184BE  6A2A               	clrf	btemp^0,c
 20050  0184C0  0EFF               	movlw	-1
 20051  0184C2  50E3               	movf	plusw1,w,c
 20052  0184C4  202A               	addwfc	btemp^0,w,c
 20053  0184C6  6E2A               	movwf	btemp^0,c
 20054  0184C8  0EFF               	movlw	-1
 20055  0184CA  0060  F0AB  FFE3   	movff	btemp,plusw1
 20056                           
 20057                           ;stkvar	_cp @ sp[(-4)+0]
 20058  0184D0  0EFC               	movlw	-4
 20059  0184D2  50E3               	movf	plusw1,w,c
 20060  0184D4  0F01               	addlw	1
 20061  0184D6  6E2A               	movwf	btemp^0,c
 20062  0184D8  0EFC               	movlw	-4
 20063  0184DA  0060  F0AB  FFE3   	movff	btemp,plusw1
 20064  0184E0  6A2A               	clrf	btemp^0,c
 20065  0184E2  0EFD               	movlw	-3
 20066  0184E4  50E3               	movf	plusw1,w,c
 20067  0184E6  202A               	addwfc	btemp^0,w,c
 20068  0184E8  6E2A               	movwf	btemp^0,c
 20069  0184EA  0EFD               	movlw	-3
 20070  0184EC  0060  F0AB  FFE3   	movff	btemp,plusw1
 20071                           
 20072                           ;stkvar	_s @ sp[(-4)+2]
 20073  0184F2  50E1               	movf	fsr1l,w,c
 20074  0184F4  0FFE               	addlw	-2
 20075  0184F6  6ED9               	movwf	fsr2l,c
 20076  0184F8  50E2               	movf	fsr1h,w,c
 20077  0184FA  6EDA               	movwf	fsr2h,c
 20078  0184FC  0EFF               	movlw	255
 20079  0184FE  22DA               	addwfc	fsr2h,f,c
 20080  018500  006F FF7B FFF6     	movff	postinc2,tblptrl
 20081  018506  006F FF77 FFF7     	movff	postdec2,tblptrh
 20082  01850C                     	if	0	;tblptru may be non-zero
 20083  01850C                     	endif
 20084  01850C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20085  01850C  0E00               	movlw	low (__mediumconst shr (0+16))
 20086  01850E  6EF8               	movwf	tblptru,c
 20087  018510                     	endif
 20088                           
 20089                           ;stkvar	_cp @ sp[(-4)+0]
 20090  018510  0EFC               	movlw	-4
 20091  018512  006F FF8F FFD9     	movff	plusw1,fsr2l
 20092  018518  0EFD               	movlw	-3
 20093  01851A  006F FF8F FFDA     	movff	plusw1,fsr2h
 20094  018520  0008               	tblrd		*
 20095  018522  006F FFD7 FFDF     	movff	tablat,indf2
 20096                           
 20097                           ;stkvar	_s @ sp[(-4)+2]
 20098  018528  0EFE               	movlw	-2
 20099  01852A  50E3               	movf	plusw1,w,c
 20100  01852C  0F01               	addlw	1
 20101  01852E  6E2A               	movwf	btemp^0,c
 20102  018530  0EFE               	movlw	-2
 20103  018532  0060  F0AB  FFE3   	movff	btemp,plusw1
 20104  018538  6A2A               	clrf	btemp^0,c
 20105  01853A  0EFF               	movlw	-1
 20106  01853C  50E3               	movf	plusw1,w,c
 20107  01853E  202A               	addwfc	btemp^0,w,c
 20108  018540  6E2A               	movwf	btemp^0,c
 20109  018542  0EFF               	movlw	-1
 20110  018544  0060  F0AB  FFE3   	movff	btemp,plusw1
 20111                           
 20112                           ;stkvar	_cp @ sp[(-4)+0]
 20113  01854A  0EFC               	movlw	-4
 20114  01854C  50E3               	movf	plusw1,w,c
 20115  01854E  0F01               	addlw	1
 20116  018550  6E2A               	movwf	btemp^0,c
 20117  018552  0EFC               	movlw	-4
 20118  018554  0060  F0AB  FFE3   	movff	btemp,plusw1
 20119  01855A  6A2A               	clrf	btemp^0,c
 20120  01855C  0EFD               	movlw	-3
 20121  01855E  50E3               	movf	plusw1,w,c
 20122  018560  202A               	addwfc	btemp^0,w,c
 20123  018562  6E2A               	movwf	btemp^0,c
 20124  018564  0EFD               	movlw	-3
 20125  018566  0060  F0AB  FFE3   	movff	btemp,plusw1
 20126                           
 20127                           ;stkvar	_s @ sp[(-4)+2]
 20128  01856C  50E1               	movf	fsr1l,w,c
 20129  01856E  0FFE               	addlw	-2
 20130  018570  6ED9               	movwf	fsr2l,c
 20131  018572  50E2               	movf	fsr1h,w,c
 20132  018574  6EDA               	movwf	fsr2h,c
 20133  018576  0EFF               	movlw	255
 20134  018578  22DA               	addwfc	fsr2h,f,c
 20135  01857A  006F FF7B FFF6     	movff	postinc2,tblptrl
 20136  018580  006F FF77 FFF7     	movff	postdec2,tblptrh
 20137  018586                     	if	0	;tblptru may be non-zero
 20138  018586                     	endif
 20139  018586                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20140  018586  0E00               	movlw	low (__mediumconst shr (0+16))
 20141  018588  6EF8               	movwf	tblptru,c
 20142  01858A                     	endif
 20143                           
 20144                           ;stkvar	_cp @ sp[(-4)+0]
 20145  01858A  0EFC               	movlw	-4
 20146  01858C  006F FF8F FFD9     	movff	plusw1,fsr2l
 20147  018592  0EFD               	movlw	-3
 20148  018594  006F FF8F FFDA     	movff	plusw1,fsr2h
 20149  01859A  0008               	tblrd		*
 20150  01859C  006F FFD7 FFDF     	movff	tablat,indf2
 20151  0185A2  0E20               	movlw	32
 20152  0185A4  0103               	movlb	3	; () banked
 20153  0185A6  6FCB               	movwf	(asctime@buf+7)& (0+255),b
 20154                           
 20155                           ; BSR set to: 3
 20156  0185A8  0E20               	movlw	32
 20157  0185AA  6EE6               	movwf	postinc1,c
 20158  0185AC  0E20               	movlw	32
 20159  0185AE  6EE6               	movwf	postinc1,c
 20160                           
 20161                           ;stkvar	_tim @ sp[(-6)+-2]
 20162  0185B0  0EF8               	movlw	-8
 20163  0185B2  006F FF8C  F034    	movff	plusw1,btemp+10
 20164  0185B8  0EF9               	movlw	-7
 20165  0185BA  006F FF8C  F035    	movff	plusw1,btemp+11
 20166  0185C0  0E06               	movlw	6
 20167  0185C2  2434               	addwf	(btemp+10)^0,w,c
 20168  0185C4  6ED9               	movwf	fsr2l,c
 20169  0185C6  0E00               	movlw	0
 20170  0185C8  2035               	addwfc	(btemp+11)^0,w,c
 20171  0185CA  6EDA               	movwf	fsr2h,c
 20172  0185CC  50DF               	movf	indf2,w,c
 20173  0185CE  6EE6               	movwf	postinc1,c
 20174  0185D0  0ECE               	movlw	low (asctime@buf+10)
 20175  0185D2  6EE6               	movwf	postinc1,c
 20176  0185D4  0E03               	movlw	high (asctime@buf+10)
 20177  0185D6  6EE6               	movwf	postinc1,c
 20178  0185D8  EC42  F0FB         	call	_put2d	;wreg free
 20179  0185DC  0E3A               	movlw	58
 20180  0185DE  6EE6               	movwf	postinc1,c
 20181  0185E0  0E30               	movlw	48
 20182  0185E2  6EE6               	movwf	postinc1,c
 20183                           
 20184                           ;stkvar	_tim @ sp[(-6)+-2]
 20185  0185E4  0EF8               	movlw	-8
 20186  0185E6  006F FF8C  F034    	movff	plusw1,btemp+10
 20187  0185EC  0EF9               	movlw	-7
 20188  0185EE  006F FF8C  F035    	movff	plusw1,btemp+11
 20189  0185F4  0E04               	movlw	4
 20190  0185F6  2434               	addwf	(btemp+10)^0,w,c
 20191  0185F8  6ED9               	movwf	fsr2l,c
 20192  0185FA  0E00               	movlw	0
 20193  0185FC  2035               	addwfc	(btemp+11)^0,w,c
 20194  0185FE  6EDA               	movwf	fsr2h,c
 20195  018600  50DF               	movf	indf2,w,c
 20196  018602  6EE6               	movwf	postinc1,c
 20197  018604  0ED1               	movlw	low (asctime@buf+13)
 20198  018606  6EE6               	movwf	postinc1,c
 20199  018608  0E03               	movlw	high (asctime@buf+13)
 20200  01860A  6EE6               	movwf	postinc1,c
 20201  01860C  EC42  F0FB         	call	_put2d	;wreg free
 20202  018610  0E3A               	movlw	58
 20203  018612  6EE6               	movwf	postinc1,c
 20204  018614  0E30               	movlw	48
 20205  018616  6EE6               	movwf	postinc1,c
 20206                           
 20207                           ;stkvar	_tim @ sp[(-6)+-2]
 20208  018618  0EF8               	movlw	-8
 20209  01861A  006F FF8C  F034    	movff	plusw1,btemp+10
 20210  018620  0EF9               	movlw	-7
 20211  018622  006F FF8C  F035    	movff	plusw1,btemp+11
 20212  018628  0E02               	movlw	2
 20213  01862A  2434               	addwf	(btemp+10)^0,w,c
 20214  01862C  6ED9               	movwf	fsr2l,c
 20215  01862E  0E00               	movlw	0
 20216  018630  2035               	addwfc	(btemp+11)^0,w,c
 20217  018632  6EDA               	movwf	fsr2h,c
 20218  018634  50DF               	movf	indf2,w,c
 20219  018636  6EE6               	movwf	postinc1,c
 20220  018638  0ED4               	movlw	low (asctime@buf+16)
 20221  01863A  6EE6               	movwf	postinc1,c
 20222  01863C  0E03               	movlw	high (asctime@buf+16)
 20223  01863E  6EE6               	movwf	postinc1,c
 20224  018640  EC42  F0FB         	call	_put2d	;wreg free
 20225  018644  0E20               	movlw	32
 20226  018646  6EE6               	movwf	postinc1,c
 20227  018648  0E30               	movlw	48
 20228  01864A  6EE6               	movwf	postinc1,c
 20229                           
 20230                           ;stkvar	_tim @ sp[(-6)+-2]
 20231  01864C  0EF8               	movlw	-8
 20232  01864E  006F FF8F FFD9     	movff	plusw1,fsr2l
 20233  018654  0EF9               	movlw	-7
 20234  018656  006F FF8F FFDA     	movff	plusw1,fsr2h
 20235  01865C  50DF               	movf	indf2,w,c
 20236  01865E  6EE6               	movwf	postinc1,c
 20237  018660  0ED7               	movlw	low (asctime@buf+19)
 20238  018662  6EE6               	movwf	postinc1,c
 20239  018664  0E03               	movlw	high (asctime@buf+19)
 20240  018666  6EE6               	movwf	postinc1,c
 20241  018668  EC42  F0FB         	call	_put2d	;wreg free
 20242  01866C  0E00               	movlw	0
 20243  01866E  6EE6               	movwf	postinc1,c
 20244  018670  0E20               	movlw	32
 20245  018672  6EE6               	movwf	postinc1,c
 20246  018674  0E64               	movlw	100
 20247  018676  6EE6               	movwf	postinc1,c
 20248  018678  0E00               	movlw	0
 20249  01867A  6EE6               	movwf	postinc1,c
 20250                           
 20251                           ;stkvar	_tim @ sp[(-8)+-2]
 20252  01867C  0EF6               	movlw	-10
 20253  01867E  006F FF8C  F034    	movff	plusw1,btemp+10
 20254  018684  0EF7               	movlw	-9
 20255  018686  006F FF8C  F035    	movff	plusw1,btemp+11
 20256  01868C  0E0A               	movlw	10
 20257  01868E  2434               	addwf	(btemp+10)^0,w,c
 20258  018690  6ED9               	movwf	fsr2l,c
 20259  018692  0E00               	movlw	0
 20260  018694  2035               	addwfc	(btemp+11)^0,w,c
 20261  018696  6EDA               	movwf	fsr2h,c
 20262  018698  006F FF78  F034    	movff	postinc2,btemp+10
 20263  01869E  006F FF74  F035    	movff	postdec2,btemp+11
 20264  0186A4  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 20265  0186AA  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 20266  0186B0  EC2C  F0F8         	call	___awdiv	;wreg free
 20267  0186B4  502A               	movf	btemp^0,w,c
 20268  0186B6  0F13               	addlw	19
 20269  0186B8  6EE6               	movwf	postinc1,c
 20270  0186BA  0EDA               	movlw	low (asctime@buf+22)
 20271  0186BC  6EE6               	movwf	postinc1,c
 20272  0186BE  0E03               	movlw	high (asctime@buf+22)
 20273  0186C0  6EE6               	movwf	postinc1,c
 20274  0186C2  EC42  F0FB         	call	_put2d	;wreg free
 20275  0186C6  0E0A               	movlw	10
 20276  0186C8  6EE6               	movwf	postinc1,c
 20277  0186CA  0E30               	movlw	48
 20278  0186CC  6EE6               	movwf	postinc1,c
 20279  0186CE  0E64               	movlw	100
 20280  0186D0  6EE6               	movwf	postinc1,c
 20281  0186D2  0E00               	movlw	0
 20282  0186D4  6EE6               	movwf	postinc1,c
 20283                           
 20284                           ;stkvar	_tim @ sp[(-8)+-2]
 20285  0186D6  0EF6               	movlw	-10
 20286  0186D8  006F FF8C  F034    	movff	plusw1,btemp+10
 20287  0186DE  0EF7               	movlw	-9
 20288  0186E0  006F FF8C  F035    	movff	plusw1,btemp+11
 20289  0186E6  0E0A               	movlw	10
 20290  0186E8  2434               	addwf	(btemp+10)^0,w,c
 20291  0186EA  6ED9               	movwf	fsr2l,c
 20292  0186EC  0E00               	movlw	0
 20293  0186EE  2035               	addwfc	(btemp+11)^0,w,c
 20294  0186F0  6EDA               	movwf	fsr2h,c
 20295  0186F2  006F FF78  F034    	movff	postinc2,btemp+10
 20296  0186F8  006F FF74  F035    	movff	postdec2,btemp+11
 20297  0186FE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 20298  018704  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 20299  01870A  EC5B  F0FC         	call	___awmod	;wreg free
 20300  01870E  502A               	movf	btemp^0,w,c
 20301  018710  6EE6               	movwf	postinc1,c
 20302  018712  0EDC               	movlw	low (asctime@buf+24)
 20303  018714  6EE6               	movwf	postinc1,c
 20304  018716  0E03               	movlw	high (asctime@buf+24)
 20305  018718  6EE6               	movwf	postinc1,c
 20306  01871A  EC42  F0FB         	call	_put2d	;wreg free
 20307  01871E  0EC4               	movlw	low asctime@buf
 20308  018720  6E2A               	movwf	btemp^0,c
 20309  018722  0E03               	movlw	high asctime@buf
 20310  018724  6E2B               	movwf	(btemp+1)^0,c
 20311                           
 20312                           ; _asctime: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20313  018726  0EFA               	movlw	250
 20314  018728  26E1               	addwf	fsr1l,f,c
 20315  01872A  0EFF               	movlw	255
 20316  01872C  22E2               	addwfc	fsr1h,f,c
 20317  01872E  0012               	return		;funcret
 20318  018730                     __end_of_asctime:
 20319                           	opt callstack 0
 20320                           
 20321 ;; *************** function _put2d *****************
 20322 ;; Defined at:
 20323 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 20324 ;; Parameters:    Size  Location     Type
 20325 ;;  cp              2  [STACK] PTR unsigned char 
 20326 ;;		 -> asctime@buf(27), 
 20327 ;;  i               1  [STACK] unsigned char 
 20328 ;;  cl              1  [STACK] unsigned char 
 20329 ;;  ct              1  [STACK] unsigned char 
 20330 ;; Auto vars:     Size  Location     Type
 20331 ;;		None
 20332 ;; Return value:  Size  Location     Type
 20333 ;;                  1  [STACK] void 
 20334 ;; Registers used:
 20335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 20336 ;; Tracked objects:
 20337 ;;		On entry : 0/3
 20338 ;;		On exit  : 0/0
 20339 ;;		Unchanged: 0/0
 20340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20345 ;;Total ram usage:        0 bytes
 20346 ;; Hardware stack levels used:    1
 20347 ;; Hardware stack levels required when called:   16
 20348 ;; This function calls:
 20349 ;;		___awdiv
 20350 ;;		___lbmod
 20351 ;; This function is called by:
 20352 ;;		_asctime
 20353 ;; This function uses a reentrant model
 20354 ;;
 20355                           
 20356                           	psect	text56
 20357  01F684                     __ptext56:
 20358                           	opt callstack 0
 20359  01F684                     _put2d:
 20360                           	opt callstack 12
 20361                           
 20362                           ;stkvar	_ct @ sp[(0)+-5]
 20363                           ;stkvar	_cp @ sp[(0)+-2]
 20364                           
 20365                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20366                           ;incstack = 0
 20367  01F684  0EFE               	movlw	-2
 20368  01F686  006F FF8F FFD9     	movff	plusw1,fsr2l
 20369  01F68C  0EFF               	movlw	-1
 20370  01F68E  006F FF8F FFDA     	movff	plusw1,fsr2h
 20371  01F694  0EFB               	movlw	-5
 20372  01F696  006F FF8F FFDF     	movff	plusw1,indf2
 20373  01F69C  0E0A               	movlw	10
 20374  01F69E  6EE6               	movwf	postinc1,c
 20375                           
 20376                           ;stkvar	_i @ sp[(-1)+-3]
 20377  01F6A0  0EFC               	movlw	-4
 20378  01F6A2  50E3               	movf	plusw1,w,c
 20379  01F6A4  6EE6               	movwf	postinc1,c
 20380  01F6A6  EC4E  F006         	call	___lbmod	;wreg free
 20381  01F6AA  0E30               	movlw	48
 20382  01F6AC  262A               	addwf	btemp^0,f,c
 20383                           
 20384                           ;stkvar	_cp @ sp[(0)+-2]
 20385  01F6AE  0EFE               	movlw	-2
 20386  01F6B0  006F FF8C  F02B    	movff	plusw1,btemp+1
 20387  01F6B6  0E01               	movlw	1
 20388  01F6B8  5E2B               	subwf	(btemp+1)^0,f,c
 20389  01F6BA  0EFE               	movlw	-2
 20390  01F6BC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 20391  01F6C2  0EFF               	movlw	-1
 20392  01F6C4  006F FF8C  F02B    	movff	plusw1,btemp+1
 20393  01F6CA  0E00               	movlw	0
 20394  01F6CC  5A2B               	subwfb	(btemp+1)^0,f,c
 20395  01F6CE  0EFF               	movlw	-1
 20396  01F6D0  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 20397  01F6D6  0EFE               	movlw	-2
 20398  01F6D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 20399  01F6DE  0EFF               	movlw	-1
 20400  01F6E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 20401  01F6E6  0060  F0AB  FFDF   	movff	btemp,indf2
 20402  01F6EC  0E0A               	movlw	10
 20403  01F6EE  6EE6               	movwf	postinc1,c
 20404  01F6F0  0E00               	movlw	0
 20405  01F6F2  6EE6               	movwf	postinc1,c
 20406                           
 20407                           ;stkvar	_i @ sp[(-2)+-3]
 20408  01F6F4  0EFB               	movlw	-5
 20409  01F6F6  50E3               	movf	plusw1,w,c
 20410  01F6F8  6EE6               	movwf	postinc1,c
 20411  01F6FA  0E00               	movlw	0
 20412  01F6FC  6EE6               	movwf	postinc1,c
 20413  01F6FE  EC2C  F0F8         	call	___awdiv	;wreg free
 20414                           
 20415                           ;stkvar	_i @ sp[(0)+-3]
 20416  01F702  0EFD               	movlw	-3
 20417  01F704  0060  F0AB  FFE3   	movff	btemp,plusw1
 20418  01F70A  0EFD               	movlw	-3
 20419  01F70C  50E3               	movf	plusw1,w,c
 20420  01F70E  B4D8               	btfsc	status,2,c
 20421  01F710  D021               	goto	l16880
 20422                           
 20423                           ;stkvar	_cp @ sp[(0)+-2]
 20424  01F712  0EFE               	movlw	-2
 20425  01F714  006F FF8C  F02A    	movff	plusw1,btemp
 20426  01F71A  0E01               	movlw	1
 20427  01F71C  5E2A               	subwf	btemp^0,f,c
 20428  01F71E  0EFE               	movlw	-2
 20429  01F720  0060  F0AB  FFE3   	movff	btemp,plusw1
 20430  01F726  0EFF               	movlw	-1
 20431  01F728  006F FF8C  F02A    	movff	plusw1,btemp
 20432  01F72E  0E00               	movlw	0
 20433  01F730  5A2A               	subwfb	btemp^0,f,c
 20434  01F732  0EFF               	movlw	-1
 20435  01F734  0060  F0AB  FFE3   	movff	btemp,plusw1
 20436  01F73A  0EFE               	movlw	-2
 20437  01F73C  006F FF8F FFD9     	movff	plusw1,fsr2l
 20438  01F742  0EFF               	movlw	-1
 20439  01F744  006F FF8F FFDA     	movff	plusw1,fsr2h
 20440                           
 20441                           ;stkvar	_i @ sp[(0)+-3]
 20442  01F74A  0EFD               	movlw	-3
 20443  01F74C  50E3               	movf	plusw1,w,c
 20444  01F74E  0F30               	addlw	48
 20445  01F750  6EDF               	movwf	indf2,c
 20446  01F752  D020               	goto	l3418
 20447  01F754                     l16880:
 20448                           
 20449                           ;stkvar	_cl @ sp[(0)+-4]
 20450                           ;stkvar	_cp @ sp[(0)+-2]
 20451  01F754  0EFE               	movlw	-2
 20452  01F756  006F FF8C  F02A    	movff	plusw1,btemp
 20453  01F75C  0E01               	movlw	1
 20454  01F75E  5E2A               	subwf	btemp^0,f,c
 20455  01F760  0EFE               	movlw	-2
 20456  01F762  0060  F0AB  FFE3   	movff	btemp,plusw1
 20457  01F768  0EFF               	movlw	-1
 20458  01F76A  006F FF8C  F02A    	movff	plusw1,btemp
 20459  01F770  0E00               	movlw	0
 20460  01F772  5A2A               	subwfb	btemp^0,f,c
 20461  01F774  0EFF               	movlw	-1
 20462  01F776  0060  F0AB  FFE3   	movff	btemp,plusw1
 20463  01F77C  0EFE               	movlw	-2
 20464  01F77E  006F FF8F FFD9     	movff	plusw1,fsr2l
 20465  01F784  0EFF               	movlw	-1
 20466  01F786  006F FF8F FFDA     	movff	plusw1,fsr2h
 20467  01F78C  0EFC               	movlw	-4
 20468  01F78E  006F FF8F FFDF     	movff	plusw1,indf2
 20469  01F794                     l3418:
 20470                           
 20471                           ; _put2d: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize
      +                           = 5, vargsize = 0
 20472  01F794  0EFB               	movlw	251
 20473  01F796  26E1               	addwf	fsr1l,f,c
 20474  01F798  0EFF               	movlw	255
 20475  01F79A  22E2               	addwfc	fsr1h,f,c
 20476  01F79C  0012               	return		;funcret
 20477  01F79E                     __end_of_put2d:
 20478                           	opt callstack 0
 20479                           
 20480 ;; *************** function ___lbmod *****************
 20481 ;; Defined at:
 20482 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lbmod.c"
 20483 ;; Parameters:    Size  Location     Type
 20484 ;;  dividend        1  [STACK] unsigned char 
 20485 ;;  divisor         1  [STACK] unsigned char 
 20486 ;; Auto vars:     Size  Location     Type
 20487 ;;  rem             1  [STACK] unsigned char 
 20488 ;;  counter         1  [STACK] unsigned char 
 20489 ;; Return value:  Size  Location     Type
 20490 ;;                  1  [STACK] unsigned char 
 20491 ;; Registers used:
 20492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 20493 ;; Tracked objects:
 20494 ;;		On entry : 0/3
 20495 ;;		On exit  : 0/0
 20496 ;;		Unchanged: 0/0
 20497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20502 ;;Total ram usage:        0 bytes
 20503 ;; Hardware stack levels used:    1
 20504 ;; Hardware stack levels required when called:   15
 20505 ;; This function calls:
 20506 ;;		Nothing
 20507 ;; This function is called by:
 20508 ;;		_put2d
 20509 ;; This function uses a reentrant model
 20510 ;;
 20511                           
 20512                           	psect	text57
 20513  000C9C                     __ptext57:
 20514                           	opt callstack 0
 20515  000C9C                     ___lbmod:
 20516                           	opt callstack 0
 20517                           
 20518                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20519  000C9C  52E6               	movf	postinc1,f,c
 20520  000C9E  52E6               	movf	postinc1,f,c
 20521                           
 20522                           ;stkvar	_counter @ sp[(-2)+1]
 20523                           
 20524                           ;incstack = 0
 20525  000CA0  0EFF               	movlw	-1
 20526  000CA2  6AE3               	clrf	plusw1,c
 20527  000CA4  86E3               	bsf	plusw1,3,c
 20528                           
 20529                           ;stkvar	_rem @ sp[(-2)+0]
 20530  000CA6  0EFE               	movlw	-2
 20531  000CA8  6AE3               	clrf	plusw1,c
 20532  000CAA                     l16620:
 20533                           
 20534                           ;stkvar	_dividend @ sp[(-2)+-1]
 20535  000CAA  0EFD               	movlw	-3
 20536  000CAC  006F FF8C  F035    	movff	plusw1,btemp+11
 20537                           
 20538                           ;stkvar	_rem @ sp[(-2)+0]
 20539  000CB2  0EFE               	movlw	-2
 20540  000CB4  006F FF8C  F034    	movff	plusw1,btemp+10
 20541  000CBA  90D8               	bcf	status,0,c
 20542  000CBC  3435               	rlcf	(btemp+11)^0,w,c
 20543  000CBE  3434               	rlcf	(btemp+10)^0,w,c
 20544  000CC0  6E35               	movwf	(btemp+11)^0,c
 20545                           
 20546                           ;stkvar	_rem @ sp[(-2)+0]
 20547  000CC2  0EFE               	movlw	-2
 20548  000CC4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 20549                           
 20550                           ;stkvar	_dividend @ sp[(-2)+-1]
 20551  000CCA  50E1               	movf	fsr1l,w,c
 20552  000CCC  0FFD               	addlw	-3
 20553  000CCE  6ED9               	movwf	fsr2l,c
 20554  000CD0  50E2               	movf	fsr1h,w,c
 20555  000CD2  6EDA               	movwf	fsr2h,c
 20556  000CD4  0EFF               	movlw	255
 20557  000CD6  22DA               	addwfc	fsr2h,f,c
 20558  000CD8  90D8               	bcf	status,0,c
 20559  000CDA  36DF               	rlcf	indf2,f,c
 20560                           
 20561                           ;stkvar	_divisor @ sp[(-2)+-2]
 20562                           ;stkvar	_rem @ sp[(-2)+0]
 20563  000CDC  50E1               	movf	fsr1l,w,c
 20564  000CDE  0FFE               	addlw	-2
 20565  000CE0  6ED9               	movwf	fsr2l,c
 20566  000CE2  50E2               	movf	fsr1h,w,c
 20567  000CE4  6EDA               	movwf	fsr2h,c
 20568  000CE6  0EFF               	movlw	255
 20569  000CE8  22DA               	addwfc	fsr2h,f,c
 20570  000CEA  0EFC               	movlw	-4
 20571  000CEC  50E3               	movf	plusw1,w,c
 20572  000CEE  5CDE               	subwf	postinc2,w,c
 20573  000CF0  A0D8               	btfss	status,0,c
 20574  000CF2  D00D               	goto	l16628
 20575                           
 20576                           ;stkvar	_divisor @ sp[(-2)+-2]
 20577  000CF4  0EFC               	movlw	-4
 20578  000CF6  006F FF8C  F035    	movff	plusw1,btemp+11
 20579                           
 20580                           ;stkvar	_rem @ sp[(-2)+0]
 20581  000CFC  50E1               	movf	fsr1l,w,c
 20582  000CFE  0FFE               	addlw	-2
 20583  000D00  6ED9               	movwf	fsr2l,c
 20584  000D02  50E2               	movf	fsr1h,w,c
 20585  000D04  6EDA               	movwf	fsr2h,c
 20586  000D06  0EFF               	movlw	255
 20587  000D08  22DA               	addwfc	fsr2h,f,c
 20588  000D0A  5035               	movf	(btemp+11)^0,w,c
 20589  000D0C  5EDF               	subwf	indf2,f,c
 20590  000D0E                     l16628:
 20591                           
 20592                           ;stkvar	_counter @ sp[(-2)+1]
 20593  000D0E  0EFF               	movlw	-1
 20594  000D10  50E3               	movf	plusw1,w,c
 20595  000D12  6E2A               	movwf	btemp^0,c
 20596  000D14  0E01               	movlw	1
 20597  000D16  5E2A               	subwf	btemp^0,f,c
 20598  000D18  0EFF               	movlw	-1
 20599  000D1A  0060  F0AB  FFE3   	movff	btemp,plusw1
 20600  000D20  A4D8               	btfss	status,2,c
 20601  000D22  D7C3               	goto	l16620
 20602                           
 20603                           ;stkvar	_rem @ sp[(-2)+0]
 20604  000D24  0EFE               	movlw	-2
 20605  000D26  006F FF8C  F02A    	movff	plusw1,btemp
 20606                           
 20607                           ; ___lbmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20608  000D2C  52E5               	movf	postdec1,f,c
 20609  000D2E  52E5               	movf	postdec1,f,c
 20610  000D30  52E5               	movf	postdec1,f,c
 20611  000D32  52E5               	movf	postdec1,f,c
 20612  000D34  0012               	return		;funcret
 20613  000D36                     __end_of___lbmod:
 20614                           	opt callstack 0
 20615                           
 20616 ;; *************** function _current_sensor_cal *****************
 20617 ;; Defined at:
 20618 ;;		line 517 in file "main.c"
 20619 ;; Parameters:    Size  Location     Type
 20620 ;;		None
 20621 ;; Auto vars:     Size  Location     Type
 20622 ;;  cp              4  [STACK] unsigned long 
 20623 ;;  cb              4  [STACK] unsigned long 
 20624 ;;  x               1  [STACK] unsigned char 
 20625 ;; Return value:  Size  Location     Type
 20626 ;;                  1  [STACK] _Bool 
 20627 ;; Registers used:
 20628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 20629 ;; Tracked objects:
 20630 ;;		On entry : 0/2
 20631 ;;		On exit  : 0/0
 20632 ;;		Unchanged: 0/0
 20633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20638 ;;Total ram usage:        0 bytes
 20639 ;; Hardware stack levels used:    1
 20640 ;; Hardware stack levels required when called:   27
 20641 ;; This function calls:
 20642 ;;		_WaitMs
 20643 ;;		_cal_current_zero
 20644 ;;		_clear_adc_scan
 20645 ;;		_get_raw_result
 20646 ;;		_get_switch
 20647 ;;		_get_vterm_ptr
 20648 ;;		_spinners
 20649 ;;		_sprintf
 20650 ;;		_start_adc_scan
 20651 ;;		_update_lcd
 20652 ;;		_write_cal_data
 20653 ;; This function is called by:
 20654 ;;		_main
 20655 ;; This function uses a reentrant model
 20656 ;;
 20657                           
 20658                           	psect	text58
 20659  01906C                     __ptext58:
 20660                           	opt callstack 0
 20661  01906C                     _current_sensor_cal:
 20662                           	opt callstack 0
 20663                           
 20664                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20665  01906C  0E09               	movlw	9
 20666  01906E  26E1               	addwf	fsr1l,f,c
 20667  019070  0E00               	movlw	0
 20668  019072  22E2               	addwfc	fsr1h,f,c
 20669                           
 20670                           ;main.c: 519:  uint8_t x = 0;
 20671                           ;stkvar	_x @ sp[(-9)+8]
 20672                           
 20673                           ;incstack = 0
 20674  019074  0EFF               	movlw	-1
 20675  019076  6AE3               	clrf	plusw1,c
 20676                           
 20677                           ;main.c: 520:  uint32_t cb = 0, cp = 0;
 20678                           ;stkvar	_cb @ sp[(-9)+4]
 20679  019078  0EFB               	movlw	-5
 20680  01907A  6AE3               	clrf	plusw1,c
 20681  01907C  0EFC               	movlw	-4
 20682  01907E  6AE3               	clrf	plusw1,c
 20683  019080  0EFD               	movlw	-3
 20684  019082  6AE3               	clrf	plusw1,c
 20685  019084  0EFE               	movlw	-2
 20686  019086  6AE3               	clrf	plusw1,c
 20687                           
 20688                           ;stkvar	_cp @ sp[(-9)+0]
 20689  019088  0EF7               	movlw	-9
 20690  01908A  6AE3               	clrf	plusw1,c
 20691  01908C  0EF8               	movlw	-8
 20692  01908E  6AE3               	clrf	plusw1,c
 20693  019090  0EF9               	movlw	-7
 20694  019092  6AE3               	clrf	plusw1,c
 20695  019094  0EFA               	movlw	-6
 20696  019096  6AE3               	clrf	plusw1,c
 20697                           
 20698                           ;main.c: 522:  sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 20699  019098  0E03               	movlw	low STR_57
 20700  01909A  6EE6               	movwf	postinc1,c
 20701  01909C  0EFE               	movlw	high STR_57
 20702  01909E  6EE6               	movwf	postinc1,c
 20703  0190A0  0E00               	movlw	0
 20704  0190A2  6EE6               	movwf	postinc1,c
 20705  0190A4  0E00               	movlw	0
 20706  0190A6  6EE6               	movwf	postinc1,c
 20707  0190A8  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 20708  0190AC  0060  F0AB  FFE6   	movff	btemp,postinc1
 20709  0190B2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20710  0190B8  0E04               	movlw	4
 20711  0190BA  6EE6               	movwf	postinc1,c
 20712  0190BC  EC71  F0FD         	call	_sprintf	;wreg free
 20713                           
 20714                           ; BSR set to: 0
 20715                           ;main.c: 523:  sprintf(get_vterm_ptr(1, 0), "Sensor Zero          ");
 20716  0190C0  0ED7               	movlw	low STR_58
 20717  0190C2  6EE6               	movwf	postinc1,c
 20718  0190C4  0EFD               	movlw	high STR_58
 20719  0190C6  6EE6               	movwf	postinc1,c
 20720  0190C8  0E00               	movlw	0
 20721  0190CA  6EE6               	movwf	postinc1,c
 20722  0190CC  0E01               	movlw	1
 20723  0190CE  6EE6               	movwf	postinc1,c
 20724  0190D0  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 20725  0190D4  0060  F0AB  FFE6   	movff	btemp,postinc1
 20726  0190DA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20727  0190E0  0E04               	movlw	4
 20728  0190E2  6EE6               	movwf	postinc1,c
 20729  0190E4  EC71  F0FD         	call	_sprintf	;wreg free
 20730                           
 20731                           ; BSR set to: 0
 20732                           ;main.c: 524:  sprintf(get_vterm_ptr(2, 0), "Calibration          ");
 20733  0190E8  0EC1               	movlw	low STR_59
 20734  0190EA  6EE6               	movwf	postinc1,c
 20735  0190EC  0EFD               	movlw	high STR_59
 20736  0190EE  6EE6               	movwf	postinc1,c
 20737  0190F0  0E00               	movlw	0
 20738  0190F2  6EE6               	movwf	postinc1,c
 20739  0190F4  0E02               	movlw	2
 20740  0190F6  6EE6               	movwf	postinc1,c
 20741  0190F8  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 20742  0190FC  0060  F0AB  FFE6   	movff	btemp,postinc1
 20743  019102  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20744  019108  0E04               	movlw	4
 20745  01910A  6EE6               	movwf	postinc1,c
 20746  01910C  EC71  F0FD         	call	_sprintf	;wreg free
 20747                           
 20748                           ; BSR set to: 0
 20749                           ;main.c: 525:  update_lcd(0);
 20750  019110  0E00               	movlw	0
 20751  019112  6EE6               	movwf	postinc1,c
 20752  019114  EC23  F0F6         	call	_update_lcd	;wreg free
 20753                           
 20754                           ;main.c: 526:  WaitMs(2000);
 20755  019118  0ED0               	movlw	208
 20756  01911A  6EE6               	movwf	postinc1,c
 20757  01911C  0E07               	movlw	7
 20758  01911E  6EE6               	movwf	postinc1,c
 20759  019120  ECA9  F010         	call	_WaitMs	;wreg free
 20760  019124                     l17208:
 20761                           
 20762                           ;main.c: 528:   if (++x > 64)
 20763                           ;stkvar	_x @ sp[(-9)+8]
 20764  019124  0EFF               	movlw	-1
 20765  019126  2AE3               	incf	plusw1,f,c
 20766  019128  0EFF               	movlw	-1
 20767  01912A  006F FF8C  F02A    	movff	plusw1,btemp
 20768  019130  0E40               	movlw	64
 20769  019132  642A               	cpfsgt	btemp^0,c
 20770  019134  D001               	goto	l17212
 20771  019136  D1CF               	goto	l1520
 20772  019138                     l17212:
 20773                           
 20774                           ;main.c: 530:   sprintf(get_vterm_ptr(2, 0), "Release button %c   ", spinners(4, 0));
 20775  019138  0E00               	movlw	0
 20776  01913A  6EE6               	movwf	postinc1,c
 20777  01913C  0E04               	movlw	4
 20778  01913E  6EE6               	movwf	postinc1,c
 20779  019140  ECED  F0FE         	call	_spinners	;wreg free
 20780  019144  502A               	movf	btemp^0,w,c
 20781  019146  6EE6               	movwf	postinc1,c
 20782  019148  0E00               	movlw	0
 20783  01914A  6EE6               	movwf	postinc1,c
 20784  01914C  0E47               	movlw	low STR_60
 20785  01914E  6EE6               	movwf	postinc1,c
 20786  019150  0EFF               	movlw	high STR_60
 20787  019152  6EE6               	movwf	postinc1,c
 20788  019154  0E00               	movlw	0
 20789  019156  6EE6               	movwf	postinc1,c
 20790  019158  0E02               	movlw	2
 20791  01915A  6EE6               	movwf	postinc1,c
 20792  01915C  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 20793  019160  0060  F0AB  FFE6   	movff	btemp,postinc1
 20794  019166  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20795  01916C  0E06               	movlw	6
 20796  01916E  6EE6               	movwf	postinc1,c
 20797  019170  EC71  F0FD         	call	_sprintf	;wreg free
 20798                           
 20799                           ;main.c: 531:   update_lcd(0);
 20800  019174  0E00               	movlw	0
 20801  019176  6EE6               	movwf	postinc1,c
 20802  019178  EC23  F0F6         	call	_update_lcd	;wreg free
 20803                           
 20804                           ;main.c: 532:   WaitMs(100);
 20805  01917C  0E64               	movlw	100
 20806  01917E  6EE6               	movwf	postinc1,c
 20807  019180  0E00               	movlw	0
 20808  019182  6EE6               	movwf	postinc1,c
 20809  019184  ECA9  F010         	call	_WaitMs	;wreg free
 20810                           
 20811                           ;main.c: 533:  } while (get_switch(SCALIB));
 20812  019188  0E04               	movlw	4
 20813  01918A  6EE6               	movwf	postinc1,c
 20814  01918C  ECBC  F011         	call	_get_switch	;wreg free
 20815  019190  502A               	movf	btemp^0,w,c
 20816  019192  A4D8               	btfss	status,2,c
 20817  019194  D7C7               	goto	l17208
 20818                           
 20819                           ;main.c: 535:  x = 0;
 20820                           ;stkvar	_x @ sp[(-9)+8]
 20821  019196  0EFF               	movlw	-1
 20822  019198  6AE3               	clrf	plusw1,c
 20823  01919A                     l17220:
 20824                           
 20825                           ;main.c: 537:   cb += get_raw_result(C_BATT);
 20826  01919A  0E00               	movlw	0
 20827  01919C  6EE6               	movwf	postinc1,c
 20828  01919E  ECAC  F013         	call	_get_raw_result	;wreg free
 20829                           
 20830                           ;stkvar	_cb @ sp[(-9)+4]
 20831  0191A2  50E1               	movf	fsr1l,w,c
 20832  0191A4  0FFB               	addlw	-5
 20833  0191A6  6ED9               	movwf	fsr2l,c
 20834  0191A8  50E2               	movf	fsr1h,w,c
 20835  0191AA  6EDA               	movwf	fsr2h,c
 20836  0191AC  0EFF               	movlw	255
 20837  0191AE  22DA               	addwfc	fsr2h,f,c
 20838  0191B0  502A               	movf	btemp^0,w,c
 20839  0191B2  26DE               	addwf	postinc2,f,c
 20840  0191B4  502B               	movf	(btemp+1)^0,w,c
 20841  0191B6  22DE               	addwfc	postinc2,f,c
 20842  0191B8  0E00               	movlw	0
 20843  0191BA  22DE               	addwfc	postinc2,f,c
 20844  0191BC  22DE               	addwfc	postinc2,f,c
 20845                           
 20846                           ;main.c: 538:   cp += get_raw_result(C_PV);
 20847  0191BE  0E01               	movlw	1
 20848  0191C0  6EE6               	movwf	postinc1,c
 20849  0191C2  ECAC  F013         	call	_get_raw_result	;wreg free
 20850                           
 20851                           ;stkvar	_cp @ sp[(-9)+0]
 20852  0191C6  50E1               	movf	fsr1l,w,c
 20853  0191C8  0FF7               	addlw	-9
 20854  0191CA  6ED9               	movwf	fsr2l,c
 20855  0191CC  50E2               	movf	fsr1h,w,c
 20856  0191CE  6EDA               	movwf	fsr2h,c
 20857  0191D0  0EFF               	movlw	255
 20858  0191D2  22DA               	addwfc	fsr2h,f,c
 20859  0191D4  502A               	movf	btemp^0,w,c
 20860  0191D6  26DE               	addwf	postinc2,f,c
 20861  0191D8  502B               	movf	(btemp+1)^0,w,c
 20862  0191DA  22DE               	addwfc	postinc2,f,c
 20863  0191DC  0E00               	movlw	0
 20864  0191DE  22DE               	addwfc	postinc2,f,c
 20865  0191E0  22DE               	addwfc	postinc2,f,c
 20866                           
 20867                           ;main.c: 539:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings      ");
 20868  0191E2  0E45               	movlw	low STR_61
 20869  0191E4  6EE6               	movwf	postinc1,c
 20870  0191E6  0EFE               	movlw	high STR_61
 20871  0191E8  6EE6               	movwf	postinc1,c
 20872  0191EA  0E00               	movlw	0
 20873  0191EC  6EE6               	movwf	postinc1,c
 20874  0191EE  0E00               	movlw	0
 20875  0191F0  6EE6               	movwf	postinc1,c
 20876  0191F2  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 20877  0191F6  0060  F0AB  FFE6   	movff	btemp,postinc1
 20878  0191FC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20879  019202  0E04               	movlw	4
 20880  019204  6EE6               	movwf	postinc1,c
 20881  019206  EC71  F0FD         	call	_sprintf	;wreg free
 20882                           
 20883                           ; BSR set to: 0
 20884                           ;main.c: 540:   sprintf(get_vterm_ptr(1, 0), " %d %d               ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 20885  01920A  0E01               	movlw	1
 20886  01920C  6EE6               	movwf	postinc1,c
 20887  01920E  ECAC  F013         	call	_get_raw_result	;wreg free
 20888  019212  0060  F0AB  FFE6   	movff	btemp,postinc1
 20889  019218  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20890  01921E  0E00               	movlw	0
 20891  019220  6EE6               	movwf	postinc1,c
 20892  019222  ECAC  F013         	call	_get_raw_result	;wreg free
 20893  019226  0060  F0AB  FFE6   	movff	btemp,postinc1
 20894  01922C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20895  019232  0E3D               	movlw	low STR_62
 20896  019234  6EE6               	movwf	postinc1,c
 20897  019236  0EFD               	movlw	high STR_62
 20898  019238  6EE6               	movwf	postinc1,c
 20899  01923A  0E00               	movlw	0
 20900  01923C  6EE6               	movwf	postinc1,c
 20901  01923E  0E01               	movlw	1
 20902  019240  6EE6               	movwf	postinc1,c
 20903  019242  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 20904  019246  0060  F0AB  FFE6   	movff	btemp,postinc1
 20905  01924C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20906  019252  0E08               	movlw	8
 20907  019254  6EE6               	movwf	postinc1,c
 20908  019256  EC71  F0FD         	call	_sprintf	;wreg free
 20909                           
 20910                           ; BSR set to: 0
 20911                           ;main.c: 541:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d   ", x);
 20912                           ;stkvar	_x @ sp[(-9)+8]
 20913  01925A  0EFF               	movlw	-1
 20914  01925C  50E3               	movf	plusw1,w,c
 20915  01925E  6EE6               	movwf	postinc1,c
 20916  019260  0E00               	movlw	0
 20917  019262  6EE6               	movwf	postinc1,c
 20918  019264  0E9D               	movlw	low STR_63
 20919  019266  6EE6               	movwf	postinc1,c
 20920  019268  0EFE               	movlw	high STR_63
 20921  01926A  6EE6               	movwf	postinc1,c
 20922  01926C  0E00               	movlw	0
 20923  01926E  6EE6               	movwf	postinc1,c
 20924  019270  0E02               	movlw	2
 20925  019272  6EE6               	movwf	postinc1,c
 20926  019274  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 20927  019278  0060  F0AB  FFE6   	movff	btemp,postinc1
 20928  01927E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20929  019284  0E06               	movlw	6
 20930  019286  6EE6               	movwf	postinc1,c
 20931  019288  EC71  F0FD         	call	_sprintf	;wreg free
 20932                           
 20933                           ; BSR set to: 0
 20934                           ;main.c: 542:   update_lcd(0);
 20935  01928C  0E00               	movlw	0
 20936  01928E  6EE6               	movwf	postinc1,c
 20937  019290  EC23  F0F6         	call	_update_lcd	;wreg free
 20938                           
 20939                           ;main.c: 543:   clear_adc_scan();
 20940  019294  EC3F  F015         	call	_clear_adc_scan	;wreg free
 20941                           
 20942                           ; BSR set to: 1
 20943                           ;main.c: 544:   start_adc_scan();
 20944  019298  ECF9  F00B         	call	_start_adc_scan	;wreg free
 20945                           
 20946                           ;main.c: 545:   WaitMs(100);
 20947  01929C  0E64               	movlw	100
 20948  01929E  6EE6               	movwf	postinc1,c
 20949  0192A0  0E00               	movlw	0
 20950  0192A2  6EE6               	movwf	postinc1,c
 20951  0192A4  ECA9  F010         	call	_WaitMs	;wreg free
 20952                           
 20953                           ;main.c: 546:  } while (++x < 64);
 20954                           ;stkvar	_x @ sp[(-9)+8]
 20955  0192A8  0EFF               	movlw	-1
 20956  0192AA  2AE3               	incf	plusw1,f,c
 20957  0192AC  0EFF               	movlw	-1
 20958  0192AE  006F FF8C  F02A    	movff	plusw1,btemp
 20959  0192B4  0E3F               	movlw	63
 20960  0192B6  642A               	cpfsgt	btemp^0,c
 20961  0192B8  D770               	goto	l17220
 20962                           
 20963                           ;main.c: 547:  cb = cb >> 6;
 20964  0192BA  0E06               	movlw	6
 20965  0192BC  6E35               	movwf	(btemp+11)^0,c
 20966                           
 20967                           ;stkvar	_cb @ sp[(-9)+4]
 20968  0192BE  50E1               	movf	fsr1l,w,c
 20969  0192C0  0FFB               	addlw	-5
 20970  0192C2  6ED9               	movwf	fsr2l,c
 20971  0192C4  50E2               	movf	fsr1h,w,c
 20972  0192C6  6EDA               	movwf	fsr2h,c
 20973  0192C8  0EFF               	movlw	255
 20974  0192CA  22DA               	addwfc	fsr2h,f,c
 20975  0192CC  2835               	incf	(btemp+11)^0,w,c
 20976  0192CE  52DE               	movf	postinc2,f,c
 20977  0192D0  D007               	goto	u16820
 20978  0192D2                     u16825:
 20979  0192D2  52DE               	movf	postinc2,f,c
 20980  0192D4  52DE               	movf	postinc2,f,c
 20981  0192D6  90D8               	bcf	status,0,c
 20982  0192D8  32DD               	rrcf	postdec2,f,c
 20983  0192DA  32DD               	rrcf	postdec2,f,c
 20984  0192DC  32DD               	rrcf	postdec2,f,c
 20985  0192DE  32DE               	rrcf	postinc2,f,c
 20986  0192E0                     u16820:
 20987  0192E0  2EE8               	decfsz	wreg,f,c
 20988  0192E2  D7F7               	goto	u16825
 20989                           
 20990                           ;main.c: 548:  cp = cp >> 6;
 20991  0192E4  0E06               	movlw	6
 20992  0192E6  6E35               	movwf	(btemp+11)^0,c
 20993                           
 20994                           ;stkvar	_cp @ sp[(-9)+0]
 20995  0192E8  50E1               	movf	fsr1l,w,c
 20996  0192EA  0FF7               	addlw	-9
 20997  0192EC  6ED9               	movwf	fsr2l,c
 20998  0192EE  50E2               	movf	fsr1h,w,c
 20999  0192F0  6EDA               	movwf	fsr2h,c
 21000  0192F2  0EFF               	movlw	255
 21001  0192F4  22DA               	addwfc	fsr2h,f,c
 21002  0192F6  2835               	incf	(btemp+11)^0,w,c
 21003  0192F8  52DE               	movf	postinc2,f,c
 21004  0192FA  D007               	goto	u16830
 21005  0192FC                     u16835:
 21006  0192FC  52DE               	movf	postinc2,f,c
 21007  0192FE  52DE               	movf	postinc2,f,c
 21008  019300  90D8               	bcf	status,0,c
 21009  019302  32DD               	rrcf	postdec2,f,c
 21010  019304  32DD               	rrcf	postdec2,f,c
 21011  019306  32DD               	rrcf	postdec2,f,c
 21012  019308  32DE               	rrcf	postinc2,f,c
 21013  01930A                     u16830:
 21014  01930A  2EE8               	decfsz	wreg,f,c
 21015  01930C  D7F7               	goto	u16835
 21016                           
 21017                           ;main.c: 550:  if (cal_current_zero(0, cb, cp)) {
 21018                           ;stkvar	_cp @ sp[(-9)+0]
 21019  01930E  0EF7               	movlw	-9
 21020  019310  006F FF8F FFE6     	movff	plusw1,postinc1
 21021  019316  006F FF8F FFE6     	movff	plusw1,postinc1
 21022                           
 21023                           ;stkvar	_cb @ sp[(-11)+4]
 21024  01931C  0EF9               	movlw	-7
 21025  01931E  006F FF8F FFE6     	movff	plusw1,postinc1
 21026  019324  006F FF8F FFE6     	movff	plusw1,postinc1
 21027  01932A  0E00               	movlw	0
 21028  01932C  6EE6               	movwf	postinc1,c
 21029  01932E  ECE7  F006         	call	_cal_current_zero	;wreg free
 21030  019332  502A               	movf	btemp^0,w,c
 21031  019334  B4D8               	btfsc	status,2,c
 21032  019336  D075               	goto	l17258
 21033                           
 21034                           ;main.c: 551:   cal_current_zero(1, cb, cp);
 21035                           ;stkvar	_cp @ sp[(-9)+0]
 21036  019338  0EF7               	movlw	-9
 21037  01933A  006F FF8F FFE6     	movff	plusw1,postinc1
 21038  019340  006F FF8F FFE6     	movff	plusw1,postinc1
 21039                           
 21040                           ;stkvar	_cb @ sp[(-11)+4]
 21041  019346  0EF9               	movlw	-7
 21042  019348  006F FF8F FFE6     	movff	plusw1,postinc1
 21043  01934E  006F FF8F FFE6     	movff	plusw1,postinc1
 21044  019354  0E01               	movlw	1
 21045  019356  6EE6               	movwf	postinc1,c
 21046  019358  ECE7  F006         	call	_cal_current_zero	;wreg free
 21047                           
 21048                           ;main.c: 552:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 21049  01935C  0E03               	movlw	low STR_57
 21050  01935E  6EE6               	movwf	postinc1,c
 21051  019360  0EFE               	movlw	high STR_57
 21052  019362  6EE6               	movwf	postinc1,c
 21053  019364  0E00               	movlw	0
 21054  019366  6EE6               	movwf	postinc1,c
 21055  019368  0E00               	movlw	0
 21056  01936A  6EE6               	movwf	postinc1,c
 21057  01936C  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 21058  019370  0060  F0AB  FFE6   	movff	btemp,postinc1
 21059  019376  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21060  01937C  0E04               	movlw	4
 21061  01937E  6EE6               	movwf	postinc1,c
 21062  019380  EC71  F0FD         	call	_sprintf	;wreg free
 21063                           
 21064                           ; BSR set to: 0
 21065                           ;main.c: 553:   sprintf(get_vterm_ptr(1, 0), " %ld %ld             ", cb, cp);
 21066                           ;stkvar	_cp @ sp[(-9)+0]
 21067  019384  0EF7               	movlw	-9
 21068  019386  006F FF8F FFE6     	movff	plusw1,postinc1
 21069  01938C  006F FF8F FFE6     	movff	plusw1,postinc1
 21070  019392  006F FF8F FFE6     	movff	plusw1,postinc1
 21071  019398  006F FF8F FFE6     	movff	plusw1,postinc1
 21072                           
 21073                           ;stkvar	_cb @ sp[(-13)+4]
 21074  01939E  0EF7               	movlw	-9
 21075  0193A0  006F FF8F FFE6     	movff	plusw1,postinc1
 21076  0193A6  006F FF8F FFE6     	movff	plusw1,postinc1
 21077  0193AC  006F FF8F FFE6     	movff	plusw1,postinc1
 21078  0193B2  006F FF8F FFE6     	movff	plusw1,postinc1
 21079  0193B8  0E53               	movlw	low STR_65
 21080  0193BA  6EE6               	movwf	postinc1,c
 21081  0193BC  0EFD               	movlw	high STR_65
 21082  0193BE  6EE6               	movwf	postinc1,c
 21083  0193C0  0E00               	movlw	0
 21084  0193C2  6EE6               	movwf	postinc1,c
 21085  0193C4  0E01               	movlw	1
 21086  0193C6  6EE6               	movwf	postinc1,c
 21087  0193C8  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 21088  0193CC  0060  F0AB  FFE6   	movff	btemp,postinc1
 21089  0193D2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21090  0193D8  0E0C               	movlw	12
 21091  0193DA  6EE6               	movwf	postinc1,c
 21092  0193DC  EC71  F0FD         	call	_sprintf	;wreg free
 21093                           
 21094                           ; BSR set to: 0
 21095                           ;main.c: 554:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set         ");
 21096  0193E0  0EED               	movlw	low STR_66
 21097  0193E2  6EE6               	movwf	postinc1,c
 21098  0193E4  0EFD               	movlw	high STR_66
 21099  0193E6  6EE6               	movwf	postinc1,c
 21100  0193E8  0E00               	movlw	0
 21101  0193EA  6EE6               	movwf	postinc1,c
 21102  0193EC  0E02               	movlw	2
 21103  0193EE  6EE6               	movwf	postinc1,c
 21104  0193F0  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 21105  0193F4  0060  F0AB  FFE6   	movff	btemp,postinc1
 21106  0193FA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21107  019400  0E04               	movlw	4
 21108  019402  6EE6               	movwf	postinc1,c
 21109  019404  EC71  F0FD         	call	_sprintf	;wreg free
 21110                           
 21111                           ; BSR set to: 0
 21112                           ;main.c: 555:   update_lcd(0);
 21113  019408  0E00               	movlw	0
 21114  01940A  6EE6               	movwf	postinc1,c
 21115  01940C  EC23  F0F6         	call	_update_lcd	;wreg free
 21116                           
 21117                           ;main.c: 556:   WaitMs(2000);
 21118  019410  0ED0               	movlw	208
 21119  019412  6EE6               	movwf	postinc1,c
 21120  019414  0E07               	movlw	7
 21121  019416  6EE6               	movwf	postinc1,c
 21122  019418  ECA9  F010         	call	_WaitMs	;wreg free
 21123                           
 21124                           ;main.c: 557:   write_cal_data();
 21125  01941C  EC80  F0F7         	call	_write_cal_data	;wreg free
 21126                           
 21127                           ;main.c: 558:  } else {
 21128  019420  D05A               	goto	l1520
 21129  019422                     l17258:
 21130                           
 21131                           ;main.c: 559:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 21132  019422  0E03               	movlw	low STR_57
 21133  019424  6EE6               	movwf	postinc1,c
 21134  019426  0EFE               	movlw	high STR_57
 21135  019428  6EE6               	movwf	postinc1,c
 21136  01942A  0E00               	movlw	0
 21137  01942C  6EE6               	movwf	postinc1,c
 21138  01942E  0E00               	movlw	0
 21139  019430  6EE6               	movwf	postinc1,c
 21140  019432  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 21141  019436  0060  F0AB  FFE6   	movff	btemp,postinc1
 21142  01943C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21143  019442  0E04               	movlw	4
 21144  019444  6EE6               	movwf	postinc1,c
 21145  019446  EC71  F0FD         	call	_sprintf	;wreg free
 21146                           
 21147                           ;main.c: 560:   sprintf(get_vterm_ptr(1, 0), " %ld %ld             ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 21148  01944A  0E01               	movlw	1
 21149  01944C  6EE6               	movwf	postinc1,c
 21150  01944E  ECAC  F013         	call	_get_raw_result	;wreg free
 21151  019452  0060  F0AB  FFE6   	movff	btemp,postinc1
 21152  019458  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21153  01945E  0E00               	movlw	0
 21154  019460  6EE6               	movwf	postinc1,c
 21155  019462  ECAC  F013         	call	_get_raw_result	;wreg free
 21156  019466  0060  F0AB  FFE6   	movff	btemp,postinc1
 21157  01946C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21158  019472  0E53               	movlw	low STR_65
 21159  019474  6EE6               	movwf	postinc1,c
 21160  019476  0EFD               	movlw	high STR_65
 21161  019478  6EE6               	movwf	postinc1,c
 21162  01947A  0E00               	movlw	0
 21163  01947C  6EE6               	movwf	postinc1,c
 21164  01947E  0E01               	movlw	1
 21165  019480  6EE6               	movwf	postinc1,c
 21166  019482  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 21167  019486  0060  F0AB  FFE6   	movff	btemp,postinc1
 21168  01948C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21169  019492  0E08               	movlw	8
 21170  019494  6EE6               	movwf	postinc1,c
 21171  019496  EC71  F0FD         	call	_sprintf	;wreg free
 21172                           
 21173                           ;main.c: 561:   sprintf(get_vterm_ptr(2, 0), "Zero Out Of Range    ");
 21174  01949A  0E71               	movlw	low STR_69
 21175  01949C  6EE6               	movwf	postinc1,c
 21176  01949E  0EFE               	movlw	high STR_69
 21177  0194A0  6EE6               	movwf	postinc1,c
 21178  0194A2  0E00               	movlw	0
 21179  0194A4  6EE6               	movwf	postinc1,c
 21180  0194A6  0E02               	movlw	2
 21181  0194A8  6EE6               	movwf	postinc1,c
 21182  0194AA  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 21183  0194AE  0060  F0AB  FFE6   	movff	btemp,postinc1
 21184  0194B4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21185  0194BA  0E04               	movlw	4
 21186  0194BC  6EE6               	movwf	postinc1,c
 21187  0194BE  EC71  F0FD         	call	_sprintf	;wreg free
 21188                           
 21189                           ;main.c: 562:   update_lcd(0);
 21190  0194C2  0E00               	movlw	0
 21191  0194C4  6EE6               	movwf	postinc1,c
 21192  0194C6  EC23  F0F6         	call	_update_lcd	;wreg free
 21193                           
 21194                           ;main.c: 563:   WaitMs(2000);
 21195  0194CA  0ED0               	movlw	208
 21196  0194CC  6EE6               	movwf	postinc1,c
 21197  0194CE  0E07               	movlw	7
 21198  0194D0  6EE6               	movwf	postinc1,c
 21199  0194D2  ECA9  F010         	call	_WaitMs	;wreg free
 21200  0194D6                     l1520:
 21201                           
 21202                           ; _current_sensor_cal: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 21203  0194D6  0EF7               	movlw	247
 21204  0194D8  26E1               	addwf	fsr1l,f,c
 21205  0194DA  0EFF               	movlw	255
 21206  0194DC  22E2               	addwfc	fsr1h,f,c
 21207  0194DE  0012               	return		;funcret
 21208  0194E0                     __end_of_current_sensor_cal:
 21209                           	opt callstack 0
 21210                           
 21211 ;; *************** function _write_cal_data *****************
 21212 ;; Defined at:
 21213 ;;		line 408 in file "daq.c"
 21214 ;; Parameters:    Size  Location     Type
 21215 ;;		None
 21216 ;; Auto vars:     Size  Location     Type
 21217 ;;  x               2  [STACK] unsigned short 
 21218 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
 21219 ;;		 -> R(155), 
 21220 ;;  y               2  [STACK] unsigned short 
 21221 ;;  crcVal          1  [STACK] unsigned char 
 21222 ;; Return value:  Size  Location     Type
 21223 ;;                  1  [STACK] void 
 21224 ;; Registers used:
 21225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
 21226 ;; Tracked objects:
 21227 ;;		On entry : 0/39
 21228 ;;		On exit  : 0/0
 21229 ;;		Unchanged: 0/0
 21230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21235 ;;Total ram usage:        0 bytes
 21236 ;; Hardware stack levels used:    1
 21237 ;; Hardware stack levels required when called:   17
 21238 ;; This function calls:
 21239 ;;		_CRC_8BitDataWrite
 21240 ;;		_CRC_CalculatedResultGet
 21241 ;;		_CRC_Initialize
 21242 ;;		_CRC_IsBusy
 21243 ;;		_CRC_Start
 21244 ;;		_DATAEE_WriteByte
 21245 ;; This function is called by:
 21246 ;;		_main
 21247 ;;		_current_sensor_cal
 21248 ;; This function uses a reentrant model
 21249 ;;
 21250                           
 21251                           	psect	text59
 21252  01EF00                     __ptext59:
 21253                           	opt callstack 0
 21254  01EF00                     _write_cal_data:
 21255                           	opt callstack 0
 21256                           
 21257                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21258  01EF00  0E07               	movlw	7
 21259  01EF02  26E1               	addwf	fsr1l,f,c
 21260  01EF04  0E00               	movlw	0
 21261  01EF06  22E2               	addwfc	fsr1h,f,c
 21262                           
 21263                           ;daq.c: 410:  uint16_t x = 0, y;
 21264                           ;stkvar	_x @ sp[(-7)+0]
 21265                           
 21266                           ;incstack = 0
 21267  01EF08  0EF9               	movlw	-7
 21268  01EF0A  6AE3               	clrf	plusw1,c
 21269  01EF0C  0EFA               	movlw	-6
 21270  01EF0E  6AE3               	clrf	plusw1,c
 21271                           
 21272                           ;daq.c: 411:  uint8_t *r_cal_ptr, crcVal;;daq.c: 413:  y = sizeof(R);
 21273  01EF10  0E9B               	movlw	155
 21274  01EF12  6E34               	movwf	(btemp+10)^0,c
 21275  01EF14  0E00               	movlw	0
 21276  01EF16  6E35               	movwf	(btemp+11)^0,c
 21277                           
 21278                           ;stkvar	_y @ sp[(-7)+4]
 21279  01EF18  0EFD               	movlw	-3
 21280  01EF1A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 21281  01EF20  0EFE               	movlw	-2
 21282  01EF22  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21283                           
 21284                           ;daq.c: 414:  R.crc = 0x42;
 21285  01EF28  0E42               	movlw	66
 21286  01EF2A  0101               	movlb	1	; () banked
 21287  01EF2C  6F9A               	movwf	(_R+154)& (0+255),b	;volatile
 21288                           
 21289                           ; BSR set to: 1
 21290                           ;daq.c: 415:  r_cal_ptr = (uint8_t*) & R;
 21291                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 21292  01EF2E  0E01               	movlw	high _R
 21293  01EF30  6E2A               	movwf	btemp^0,c
 21294  01EF32  0EFC               	movlw	-4
 21295  01EF34  0060  F0AB  FFE3   	movff	btemp,plusw1
 21296  01EF3A  0E00               	movlw	low _R
 21297  01EF3C  6E2A               	movwf	btemp^0,c
 21298  01EF3E  0EFB               	movlw	-5
 21299  01EF40  0060  F0AB  FFE3   	movff	btemp,plusw1
 21300                           
 21301                           ; BSR set to: 1
 21302                           ;daq.c: 416:  R.checkmark = 0x1957;
 21303  01EF46  0E19               	movlw	25
 21304  01EF48  6F99               	movwf	(_R+153)& (0+255),b	;volatile
 21305  01EF4A  0E57               	movlw	87
 21306  01EF4C  6F98               	movwf	(_R+152)& (0+255),b	;volatile
 21307                           
 21308                           ; BSR set to: 1
 21309                           ;daq.c: 418:  CRC_Initialize();
 21310  01EF4E  EC0B  F008         	call	_CRC_Initialize	;wreg free
 21311                           
 21312                           ; BSR set to: 0
 21313                           ;daq.c: 421:  CRC_Start();
 21314  01EF52  EC3C  F015         	call	_CRC_Start	;wreg free
 21315  01EF56                     l13514:
 21316                           
 21317                           ;daq.c: 424:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 21318                           ;stkvar	_x @ sp[(-7)+0]
 21319  01EF56  0EF9               	movlw	-7
 21320  01EF58  006F FF8C  F034    	movff	plusw1,btemp+10
 21321  01EF5E  0EFA               	movlw	-6
 21322  01EF60  006F FF8C  F035    	movff	plusw1,btemp+11
 21323                           
 21324                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 21325  01EF66  0EFB               	movlw	-5
 21326  01EF68  006F FF8C  F032    	movff	plusw1,btemp+8
 21327  01EF6E  0EFC               	movlw	-4
 21328  01EF70  006F FF8C  F033    	movff	plusw1,btemp+9
 21329  01EF76  5034               	movf	(btemp+10)^0,w,c
 21330  01EF78  2432               	addwf	(btemp+8)^0,w,c
 21331  01EF7A  6ED9               	movwf	fsr2l,c
 21332  01EF7C  5035               	movf	(btemp+11)^0,w,c
 21333  01EF7E  2033               	addwfc	(btemp+9)^0,w,c
 21334  01EF80  6EDA               	movwf	fsr2h,c
 21335  01EF82  50DF               	movf	indf2,w,c
 21336  01EF84  6EE6               	movwf	postinc1,c
 21337                           
 21338                           ;stkvar	_x @ sp[(-8)+0]
 21339  01EF86  0EF8               	movlw	-8
 21340  01EF88  006F FF8F FFE6     	movff	plusw1,postinc1
 21341  01EF8E  006F FF8F FFE6     	movff	plusw1,postinc1
 21342  01EF94  EC2D  F00B         	call	_DATAEE_WriteByte	;wreg free
 21343                           
 21344                           ;daq.c: 425:   CRC_8BitDataWrite(r_cal_ptr[x]);
 21345                           ;stkvar	_x @ sp[(-7)+0]
 21346  01EF98  0EF9               	movlw	-7
 21347  01EF9A  006F FF8C  F034    	movff	plusw1,btemp+10
 21348  01EFA0  0EFA               	movlw	-6
 21349  01EFA2  006F FF8C  F035    	movff	plusw1,btemp+11
 21350                           
 21351                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 21352  01EFA8  0EFB               	movlw	-5
 21353  01EFAA  006F FF8C  F032    	movff	plusw1,btemp+8
 21354  01EFB0  0EFC               	movlw	-4
 21355  01EFB2  006F FF8C  F033    	movff	plusw1,btemp+9
 21356  01EFB8  5034               	movf	(btemp+10)^0,w,c
 21357  01EFBA  2432               	addwf	(btemp+8)^0,w,c
 21358  01EFBC  6ED9               	movwf	fsr2l,c
 21359  01EFBE  5035               	movf	(btemp+11)^0,w,c
 21360  01EFC0  2033               	addwfc	(btemp+9)^0,w,c
 21361  01EFC2  6EDA               	movwf	fsr2h,c
 21362  01EFC4  50DF               	movf	indf2,w,c
 21363  01EFC6  6EE6               	movwf	postinc1,c
 21364  01EFC8  ECA3  F014         	call	_CRC_8BitDataWrite	;wreg free
 21365  01EFCC                     l13518:
 21366  01EFCC  ECC5  F014         	call	_CRC_IsBusy	;wreg free
 21367  01EFD0  502A               	movf	btemp^0,w,c
 21368  01EFD2  A4D8               	btfss	status,2,c
 21369  01EFD4  D7FB               	goto	l13518
 21370                           
 21371                           ;daq.c: 427:  } while (++x < y);
 21372                           ;stkvar	_y @ sp[(-7)+4]
 21373  01EFD6  0EFD               	movlw	-3
 21374  01EFD8  006F FF8C  F034    	movff	plusw1,btemp+10
 21375  01EFDE  0EFE               	movlw	-2
 21376  01EFE0  006F FF8C  F035    	movff	plusw1,btemp+11
 21377                           
 21378                           ;stkvar	_x @ sp[(-7)+0]
 21379  01EFE6  0EF9               	movlw	-7
 21380  01EFE8  50E3               	movf	plusw1,w,c
 21381  01EFEA  0F01               	addlw	1
 21382  01EFEC  6E2A               	movwf	btemp^0,c
 21383  01EFEE  0EF9               	movlw	-7
 21384  01EFF0  0060  F0AB  FFE3   	movff	btemp,plusw1
 21385  01EFF6  6A2A               	clrf	btemp^0,c
 21386  01EFF8  0EFA               	movlw	-6
 21387  01EFFA  50E3               	movf	plusw1,w,c
 21388  01EFFC  202A               	addwfc	btemp^0,w,c
 21389  01EFFE  6E2A               	movwf	btemp^0,c
 21390  01F000  0EFA               	movlw	-6
 21391  01F002  0060  F0AB  FFE3   	movff	btemp,plusw1
 21392  01F008  0EF9               	movlw	-7
 21393  01F00A  006F FF8C  F032    	movff	plusw1,btemp+8
 21394  01F010  0EFA               	movlw	-6
 21395  01F012  006F FF8C  F033    	movff	plusw1,btemp+9
 21396  01F018  5034               	movf	(btemp+10)^0,w,c
 21397  01F01A  5C32               	subwf	(btemp+8)^0,w,c
 21398  01F01C  5035               	movf	(btemp+11)^0,w,c
 21399  01F01E  5833               	subwfb	(btemp+9)^0,w,c
 21400  01F020  A0D8               	btfss	status,0,c
 21401  01F022  D799               	goto	l13514
 21402                           
 21403                           ;daq.c: 429:  crcVal = CRC_CalculatedResultGet(0, 0x00);
 21404  01F024  0E00               	movlw	0
 21405  01F026  6EE6               	movwf	postinc1,c
 21406  01F028  0E00               	movlw	0
 21407  01F02A  6EE6               	movwf	postinc1,c
 21408  01F02C  0E00               	movlw	0
 21409  01F02E  6EE6               	movwf	postinc1,c
 21410  01F030  EC9C  F0F2         	call	_CRC_CalculatedResultGet	;wreg free
 21411                           
 21412                           ;stkvar	_crcVal @ sp[(-7)+6]
 21413  01F034  0EFF               	movlw	-1
 21414  01F036  0060  F0AB  FFE3   	movff	btemp,plusw1
 21415                           
 21416                           ;daq.c: 431:  DATAEE_WriteByte(sizeof(R) - 1, crcVal);
 21417                           ;stkvar	_crcVal @ sp[(-7)+6]
 21418  01F03C  0EFF               	movlw	-1
 21419  01F03E  50E3               	movf	plusw1,w,c
 21420  01F040  6EE6               	movwf	postinc1,c
 21421  01F042  0E9A               	movlw	154
 21422  01F044  6EE6               	movwf	postinc1,c
 21423  01F046  0E00               	movlw	0
 21424  01F048  6EE6               	movwf	postinc1,c
 21425  01F04A  EC2D  F00B         	call	_DATAEE_WriteByte	;wreg free
 21426                           
 21427                           ; _write_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21428  01F04E  0EF9               	movlw	249
 21429  01F050  26E1               	addwf	fsr1l,f,c
 21430  01F052  0EFF               	movlw	255
 21431  01F054  22E2               	addwfc	fsr1h,f,c
 21432  01F056  0012               	return		;funcret
 21433  01F058                     __end_of_write_cal_data:
 21434                           	opt callstack 0
 21435                           
 21436 ;; *************** function _DATAEE_WriteByte *****************
 21437 ;; Defined at:
 21438 ;;		line 172 in file "mcc_generated_files/memory.c"
 21439 ;; Parameters:    Size  Location     Type
 21440 ;;  bAdd            2  [STACK] unsigned short 
 21441 ;;  bData           1  [STACK] unsigned char 
 21442 ;; Auto vars:     Size  Location     Type
 21443 ;;  GIEBitValue     1  [STACK] unsigned char 
 21444 ;; Return value:  Size  Location     Type
 21445 ;;                  1  [STACK] void 
 21446 ;; Registers used:
 21447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 21448 ;; Tracked objects:
 21449 ;;		On entry : 0/39
 21450 ;;		On exit  : 0/0
 21451 ;;		Unchanged: 0/0
 21452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21457 ;;Total ram usage:        0 bytes
 21458 ;; Hardware stack levels used:    1
 21459 ;; Hardware stack levels required when called:   15
 21460 ;; This function calls:
 21461 ;;		Nothing
 21462 ;; This function is called by:
 21463 ;;		_write_cal_data
 21464 ;; This function uses a reentrant model
 21465 ;;
 21466                           
 21467                           	psect	text60
 21468  00165A                     __ptext60:
 21469                           	opt callstack 0
 21470  00165A                     _DATAEE_WriteByte:
 21471                           	opt callstack 0
 21472                           
 21473                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21474  00165A  52E6               	movf	postinc1,f,c
 21475                           
 21476                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 21477                           
 21478                           ;incstack = 0
 21479  00165C  AED2               	btfss	210,7,c	;volatile
 21480  00165E  D003               	goto	u12060
 21481  001660  6A35               	clrf	(btemp+11)^0,c
 21482  001662  2A35               	incf	(btemp+11)^0,f,c
 21483  001664  D001               	goto	u12068
 21484  001666                     u12060:
 21485  001666  6A35               	clrf	(btemp+11)^0,c
 21486  001668                     u12068:
 21487                           
 21488                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 21489  001668  0EFF               	movlw	-1
 21490  00166A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21491                           
 21492                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 21493                           ;stkvar	_bAdd @ sp[(-1)+-2]
 21494  001670  0EFE               	movlw	254
 21495  001672  24E1               	addwf	fsr1l,w,c
 21496  001674  6ED9               	movwf	fsr2l,c
 21497  001676  0EFF               	movlw	255
 21498  001678  20E2               	addwfc	fsr1h,w,c
 21499  00167A  6EDA               	movwf	fsr2h,c
 21500  00167C  50DF               	movf	indf2,w,c
 21501  00167E  0B03               	andlw	3
 21502  001680  0139               	movlb	57	; () banked
 21503  001682  6FE1               	movwf	225,b	;volatile
 21504                           
 21505                           ; BSR set to: 57
 21506                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 21507                           ;stkvar	_bAdd @ sp[(-1)+-2]
 21508  001684  0EFD               	movlw	-3
 21509  001686  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 21510                           
 21511                           ; BSR set to: 57
 21512                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 21513                           ;stkvar	_bData @ sp[(-1)+-3]
 21514  00168C  0EFC               	movlw	-4
 21515  00168E  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 21516                           
 21517                           ; BSR set to: 57
 21518                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 21519  001694  0E3F               	movlw	-193
 21520  001696  17E5               	andwf	229,f,b	;volsfr
 21521                           
 21522                           ; BSR set to: 57
 21523                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 21524  001698  85E5               	bsf	229,2,b	;volsfr
 21525                           
 21526                           ; BSR set to: 57
 21527                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 21528  00169A  9ED2               	bcf	210,7,c	;volatile
 21529                           
 21530                           ; BSR set to: 57
 21531                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 21532  00169C  0E55               	movlw	85
 21533  00169E  6FE6               	movwf	230,b	;volsfr
 21534                           
 21535                           ; BSR set to: 57
 21536                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 21537  0016A0  0EAA               	movlw	170
 21538  0016A2  6FE6               	movwf	230,b	;volsfr
 21539                           
 21540                           ; BSR set to: 57
 21541                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 21542  0016A4  83E5               	bsf	229,1,b	;volsfr
 21543  0016A6                     l942:
 21544                           
 21545                           ; BSR set to: 57
 21546                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 21547  0016A6  B3E5               	btfsc	229,1,b	;volsfr
 21548  0016A8  D7FE               	goto	l942
 21549                           
 21550                           ; BSR set to: 57
 21551                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 21552  0016AA  95E5               	bcf	229,2,b	;volsfr
 21553                           
 21554                           ; BSR set to: 57
 21555                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 21556                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 21557  0016AC  0EFF               	movlw	-1
 21558  0016AE  B0E3               	btfsc	plusw1,0,c
 21559  0016B0  D002               	bra	u12085
 21560  0016B2  9ED2               	bcf	210,7,c	;volatile
 21561  0016B4  D001               	bra	u12086
 21562  0016B6                     u12085:
 21563  0016B6  8ED2               	bsf	210,7,c	;volatile
 21564  0016B8                     u12086:
 21565                           
 21566                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21567  0016B8  52E5               	movf	postdec1,f,c
 21568  0016BA  52E5               	movf	postdec1,f,c
 21569  0016BC  52E5               	movf	postdec1,f,c
 21570  0016BE  52E5               	movf	postdec1,f,c
 21571  0016C0  0012               	return		;funcret
 21572  0016C2                     __end_of_DATAEE_WriteByte:
 21573                           	opt callstack 0
 21574                           
 21575 ;; *************** function _CRC_Start *****************
 21576 ;; Defined at:
 21577 ;;		line 119 in file "mcc_generated_files/crc.c"
 21578 ;; Parameters:    Size  Location     Type
 21579 ;;		None
 21580 ;; Auto vars:     Size  Location     Type
 21581 ;;		None
 21582 ;; Return value:  Size  Location     Type
 21583 ;;                  1  [STACK] void 
 21584 ;; Registers used:
 21585 ;;		None
 21586 ;; Tracked objects:
 21587 ;;		On entry : 3F/0
 21588 ;;		On exit  : 3F/39
 21589 ;;		Unchanged: 0/0
 21590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21595 ;;Total ram usage:        0 bytes
 21596 ;; Hardware stack levels used:    1
 21597 ;; Hardware stack levels required when called:   15
 21598 ;; This function calls:
 21599 ;;		Nothing
 21600 ;; This function is called by:
 21601 ;;		_read_cal_data
 21602 ;;		_write_cal_data
 21603 ;; This function uses a reentrant model
 21604 ;;
 21605                           
 21606                           	psect	text61
 21607  002A78                     __ptext61:
 21608                           	opt callstack 0
 21609  002A78                     _CRC_Start:
 21610                           	opt callstack 14
 21611                           
 21612                           ;mcc_generated_files/crc.c: 122:     CRCCON0bits.CRCGO = 1;
 21613                           
 21614                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21615                           ;incstack = 0
 21616  002A78  0139               	movlb	57	; () banked
 21617  002A7A  8D68               	bsf	104,6,b	;volatile
 21618                           
 21619                           ; BSR set to: 57
 21620                           ; _CRC_Start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 21621  002A7C  0012               	return		;funcret
 21622  002A7E                     __end_of_CRC_Start:
 21623                           	opt callstack 0
 21624                           
 21625 ;; *************** function _CRC_IsBusy *****************
 21626 ;; Defined at:
 21627 ;;		line 201 in file "mcc_generated_files/crc.c"
 21628 ;; Parameters:    Size  Location     Type
 21629 ;;		None
 21630 ;; Auto vars:     Size  Location     Type
 21631 ;;		None
 21632 ;; Return value:  Size  Location     Type
 21633 ;;                  1  [STACK] _Bool 
 21634 ;; Registers used:
 21635 ;;		btemp
 21636 ;; Tracked objects:
 21637 ;;		On entry : 0/39
 21638 ;;		On exit  : 0/0
 21639 ;;		Unchanged: 0/0
 21640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21645 ;;Total ram usage:        0 bytes
 21646 ;; Hardware stack levels used:    1
 21647 ;; Hardware stack levels required when called:   15
 21648 ;; This function calls:
 21649 ;;		Nothing
 21650 ;; This function is called by:
 21651 ;;		_read_cal_data
 21652 ;;		_write_cal_data
 21653 ;; This function uses a reentrant model
 21654 ;;
 21655                           
 21656                           	psect	text62
 21657  00298A                     __ptext62:
 21658                           	opt callstack 0
 21659  00298A                     _CRC_IsBusy:
 21660                           	opt callstack 14
 21661                           
 21662                           ;mcc_generated_files/crc.c: 204:     return(CRCCON0bits.BUSY);
 21663                           
 21664                           ; BSR set to: 57
 21665                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21666                           ;incstack = 0
 21667  00298A  0139               	movlb	57	; () banked
 21668  00298C  AB68               	btfss	104,5,b	;volatile
 21669  00298E  D003               	goto	u12290
 21670  002990  6A2A               	clrf	btemp^0,c
 21671  002992  2A2A               	incf	btemp^0,f,c
 21672  002994  0012               	return	
 21673  002996                     u12290:
 21674  002996  6A2A               	clrf	btemp^0,c
 21675                           
 21676                           ; _CRC_IsBusy: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 21677  002998  0012               	return		;funcret
 21678  00299A                     __end_of_CRC_IsBusy:
 21679                           	opt callstack 0
 21680                           
 21681 ;; *************** function _CRC_CalculatedResultGet *****************
 21682 ;; Defined at:
 21683 ;;		line 159 in file "mcc_generated_files/crc.c"
 21684 ;; Parameters:    Size  Location     Type
 21685 ;;  reverse         1  [STACK] _Bool 
 21686 ;;  xorValue        2  [STACK] unsigned short 
 21687 ;; Auto vars:     Size  Location     Type
 21688 ;;  result          2  [STACK] unsigned short 
 21689 ;;  mask            2  [STACK] unsigned short 
 21690 ;; Return value:  Size  Location     Type
 21691 ;;                  2  [STACK] unsigned short 
 21692 ;; Registers used:
 21693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+9, btemp+10, btemp+11,
      + prodl
 21694 ;; Tracked objects:
 21695 ;;		On entry : 0/39
 21696 ;;		On exit  : 0/0
 21697 ;;		Unchanged: 0/0
 21698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21703 ;;Total ram usage:        0 bytes
 21704 ;; Hardware stack levels used:    1
 21705 ;; Hardware stack levels required when called:   16
 21706 ;; This function calls:
 21707 ;;		_CRC_ReverseValue
 21708 ;; This function is called by:
 21709 ;;		_read_cal_data
 21710 ;;		_write_cal_data
 21711 ;; This function uses a reentrant model
 21712 ;;
 21713                           
 21714                           	psect	text63
 21715  01E538                     __ptext63:
 21716                           	opt callstack 0
 21717  01E538                     _CRC_CalculatedResultGet:
 21718                           	opt callstack 0
 21719                           
 21720                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21721  01E538  52E6               	movf	postinc1,f,c
 21722  01E53A  52E6               	movf	postinc1,f,c
 21723  01E53C  52E6               	movf	postinc1,f,c
 21724  01E53E  52E6               	movf	postinc1,f,c
 21725                           
 21726                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 21727                           
 21728                           ;incstack = 0
 21729  01E540  0139               	movlb	57	; () banked
 21730  01E542  9D68               	bcf	104,6,b	;volatile
 21731                           
 21732                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 21733  01E544  9DA0               	bcf	160,6,b	;volatile
 21734                           
 21735                           ; BSR set to: 57
 21736                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 21737  01E546  5169               	movf	105,w,b	;volatile
 21738  01E548  0B0F               	andlw	15
 21739  01E54A  6E35               	movwf	(btemp+11)^0,c
 21740  01E54C  3A35               	swapf	(btemp+11)^0,f,c
 21741  01E54E  5169               	movf	105,w,b	;volatile
 21742  01E550  1835               	xorwf	(btemp+11)^0,w,c
 21743  01E552  0B0F               	andlw	-241
 21744  01E554  1835               	xorwf	(btemp+11)^0,w,c
 21745  01E556  6F69               	movwf	105,b	;volatile
 21746                           
 21747                           ; BSR set to: 57
 21748                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 21749  01E558  0E08               	movlw	8
 21750  01E55A  0100               	movlb	0	; () banked
 21751  01E55C  65E3               	cpfsgt	(_crcObj+1)& (0+255),b
 21752  01E55E  D003               	goto	l1282
 21753                           
 21754                           ; BSR set to: 0
 21755                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 21756  01E560  0139               	movlb	57	; () banked
 21757  01E562  6B61               	clrf	97,b	;volatile
 21758  01E564  D001               	goto	L19
 21759  01E566                     l1282:
 21760                           
 21761                           ; BSR set to: 0
 21762                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 21763  01E566  0139               	movlb	57	; () banked
 21764  01E568                     L19:
 21765  01E568  6B60               	clrf	96,b	;volatile
 21766                           
 21767                           ; BSR set to: 57
 21768                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 21769                           
 21770                           ;mcc_generated_files/crc.c: 176:      }
 21771  01E56A  8D68               	bsf	104,6,b	;volatile
 21772  01E56C                     l1284:
 21773                           
 21774                           ; BSR set to: 57
 21775  01E56C  ADA0               	btfss	160,6,b	;volatile
 21776  01E56E  D7FE               	goto	l1284
 21777                           
 21778                           ; BSR set to: 57
 21779                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 21780  01E570  9DA0               	bcf	160,6,b	;volatile
 21781                           
 21782                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 21783  01E572  9D68               	bcf	104,6,b	;volatile
 21784                           
 21785                           ; BSR set to: 57
 21786                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 21787  01E574  0060  F388  F035   	movff	_crcObj,btemp+11
 21788  01E57A  0EFF               	movlw	255
 21789  01E57C  2635               	addwf	(btemp+11)^0,f,c
 21790  01E57E  3A35               	swapf	(btemp+11)^0,f,c
 21791  01E580  5169               	movf	105,w,b	;volatile
 21792  01E582  1835               	xorwf	(btemp+11)^0,w,c
 21793  01E584  0B0F               	andlw	-241
 21794  01E586  1835               	xorwf	(btemp+11)^0,w,c
 21795  01E588  6F69               	movwf	105,b	;volatile
 21796                           
 21797                           ; BSR set to: 57
 21798                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 21799  01E58A  5162               	movf	98,w,b	;volatile
 21800  01E58C  006E F58C  F02A    	movff	14691,btemp	;volatile
 21801  01E592  6A2B               	clrf	(btemp+1)^0,c
 21802  01E594  0060  F0A8  F02B   	movff	btemp,btemp+1
 21803  01E59A  6A2A               	clrf	btemp^0,c
 21804  01E59C  122A               	iorwf	btemp^0,f,c
 21805  01E59E  0E00               	movlw	0
 21806  01E5A0  122B               	iorwf	(btemp+1)^0,f,c
 21807                           
 21808                           ;stkvar	_result @ sp[(-4)+0]
 21809  01E5A2  0EFC               	movlw	-4
 21810  01E5A4  0060  F0AB  FFE3   	movff	btemp,plusw1
 21811  01E5AA  0EFD               	movlw	-3
 21812  01E5AC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 21813                           
 21814                           ; BSR set to: 57
 21815                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 21816  01E5B2  0E10               	movlw	16
 21817  01E5B4  0100               	movlb	0	; () banked
 21818  01E5B6  61E3               	cpfslt	(_crcObj+1)& (0+255),b
 21819  01E5B8  D03A               	goto	l12786
 21820                           
 21821                           ; BSR set to: 0
 21822                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 21823  01E5BA  0EFF               	movlw	255
 21824  01E5BC  6E34               	movwf	(btemp+10)^0,c
 21825  01E5BE  0EFF               	movlw	255
 21826  01E5C0  6E35               	movwf	(btemp+11)^0,c
 21827  01E5C2  0060  F38C  F033   	movff	_crcObj+1,btemp+9
 21828  01E5C8  0E01               	movlw	1
 21829  01E5CA  6E30               	movwf	(btemp+6)^0,c
 21830  01E5CC  0E00               	movlw	0
 21831  01E5CE  6E31               	movwf	(btemp+7)^0,c
 21832  01E5D0  2A33               	incf	(btemp+9)^0,f,c
 21833  01E5D2  D003               	goto	u12274
 21834  01E5D4                     u12275:
 21835  01E5D4  90D8               	bcf	status,0,c
 21836  01E5D6  3630               	rlcf	(btemp+6)^0,f,c
 21837  01E5D8  3631               	rlcf	(btemp+7)^0,f,c
 21838  01E5DA                     u12274:
 21839  01E5DA  2E33               	decfsz	(btemp+9)^0,f,c
 21840  01E5DC  D7FB               	goto	u12275
 21841  01E5DE  5034               	movf	(btemp+10)^0,w,c
 21842  01E5E0  2630               	addwf	(btemp+6)^0,f,c
 21843  01E5E2  5035               	movf	(btemp+11)^0,w,c
 21844  01E5E4  2231               	addwfc	(btemp+7)^0,f,c
 21845                           
 21846                           ;stkvar	_mask @ sp[(-4)+2]
 21847  01E5E6  0EFE               	movlw	-2
 21848  01E5E8  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 21849  01E5EE  0EFF               	movlw	-1
 21850  01E5F0  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 21851                           
 21852                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 21853                           ;stkvar	_mask @ sp[(-4)+2]
 21854  01E5F6  0EFE               	movlw	-2
 21855  01E5F8  006F FF8C  F034    	movff	plusw1,btemp+10
 21856  01E5FE  0EFF               	movlw	-1
 21857  01E600  006F FF8C  F035    	movff	plusw1,btemp+11
 21858                           
 21859                           ;stkvar	_result @ sp[(-4)+0]
 21860  01E606  0EFC               	movlw	-4
 21861  01E608  006F FF8C  F02A    	movff	plusw1,btemp
 21862  01E60E  5034               	movf	(btemp+10)^0,w,c
 21863  01E610  162A               	andwf	btemp^0,f,c
 21864  01E612  0EFC               	movlw	-4
 21865  01E614  0060  F0AB  FFE3   	movff	btemp,plusw1
 21866  01E61A  0EFD               	movlw	-3
 21867  01E61C  006F FF8C  F02A    	movff	plusw1,btemp
 21868  01E622  5035               	movf	(btemp+11)^0,w,c
 21869  01E624  162A               	andwf	btemp^0,f,c
 21870  01E626  0EFD               	movlw	-3
 21871  01E628  0060  F0AB  FFE3   	movff	btemp,plusw1
 21872  01E62E                     l12786:
 21873                           
 21874                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 21875                           ;stkvar	_reverse @ sp[(-4)+-1]
 21876  01E62E  0EFB               	movlw	-5
 21877  01E630  50E3               	movf	plusw1,w,c
 21878  01E632  B4D8               	btfsc	status,2,c
 21879  01E634  D011               	goto	l12790
 21880                           
 21881                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 21882                           ;stkvar	_result @ sp[(-4)+0]
 21883  01E636  0EFC               	movlw	-4
 21884  01E638  006F FF8F FFE6     	movff	plusw1,postinc1
 21885  01E63E  006F FF8F FFE6     	movff	plusw1,postinc1
 21886  01E644  EC1B  F002         	call	_CRC_ReverseValue	;wreg free
 21887                           
 21888                           ;stkvar	_result @ sp[(-4)+0]
 21889  01E648  0EFC               	movlw	-4
 21890  01E64A  0060  F0AB  FFE3   	movff	btemp,plusw1
 21891  01E650  0EFD               	movlw	-3
 21892  01E652  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 21893  01E658                     l12790:
 21894                           
 21895                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 21896                           ;stkvar	_xorValue @ sp[(-4)+-3]
 21897  01E658  0EF9               	movlw	-7
 21898  01E65A  006F FF8C  F034    	movff	plusw1,btemp+10
 21899  01E660  0EFA               	movlw	-6
 21900  01E662  006F FF8C  F035    	movff	plusw1,btemp+11
 21901                           
 21902                           ;stkvar	_result @ sp[(-4)+0]
 21903  01E668  0EFC               	movlw	-4
 21904  01E66A  006F FF8C  F02A    	movff	plusw1,btemp
 21905  01E670  5034               	movf	(btemp+10)^0,w,c
 21906  01E672  1A2A               	xorwf	btemp^0,f,c
 21907  01E674  0EFC               	movlw	-4
 21908  01E676  0060  F0AB  FFE3   	movff	btemp,plusw1
 21909  01E67C  0EFD               	movlw	-3
 21910  01E67E  006F FF8C  F02A    	movff	plusw1,btemp
 21911  01E684  5035               	movf	(btemp+11)^0,w,c
 21912  01E686  1A2A               	xorwf	btemp^0,f,c
 21913  01E688  0EFD               	movlw	-3
 21914  01E68A  0060  F0AB  FFE3   	movff	btemp,plusw1
 21915                           
 21916                           ;mcc_generated_files/crc.c: 198:     return result;
 21917                           ;stkvar	_result @ sp[(-4)+0]
 21918  01E690  0EFC               	movlw	-4
 21919  01E692  006F FF8C  F02A    	movff	plusw1,btemp
 21920  01E698  0EFD               	movlw	-3
 21921  01E69A  006F FF8C  F02B    	movff	plusw1,btemp+1
 21922                           
 21923                           ; _CRC_CalculatedResultGet: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
 21924  01E6A0  0EF9               	movlw	249
 21925  01E6A2  26E1               	addwf	fsr1l,f,c
 21926  01E6A4  0EFF               	movlw	255
 21927  01E6A6  22E2               	addwfc	fsr1h,f,c
 21928  01E6A8  0012               	return		;funcret
 21929  01E6AA                     __end_of_CRC_CalculatedResultGet:
 21930                           	opt callstack 0
 21931                           
 21932 ;; *************** function _CRC_ReverseValue *****************
 21933 ;; Defined at:
 21934 ;;		line 138 in file "mcc_generated_files/crc.c"
 21935 ;; Parameters:    Size  Location     Type
 21936 ;;  crc             2  [STACK] unsigned short 
 21937 ;; Auto vars:     Size  Location     Type
 21938 ;;  mask            2  [STACK] unsigned short 
 21939 ;;  reverse         2  [STACK] unsigned short 
 21940 ;; Return value:  Size  Location     Type
 21941 ;;                  2  [STACK] unsigned short 
 21942 ;; Registers used:
 21943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 21944 ;; Tracked objects:
 21945 ;;		On entry : 0/0
 21946 ;;		On exit  : 0/0
 21947 ;;		Unchanged: 0/0
 21948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21953 ;;Total ram usage:        0 bytes
 21954 ;; Hardware stack levels used:    1
 21955 ;; Hardware stack levels required when called:   15
 21956 ;; This function calls:
 21957 ;;		Nothing
 21958 ;; This function is called by:
 21959 ;;		_CRC_CalculatedResultGet
 21960 ;; This function uses a reentrant model
 21961 ;;
 21962                           
 21963                           	psect	text64
 21964  000436                     __ptext64:
 21965                           	opt callstack 0
 21966  000436                     _CRC_ReverseValue:
 21967                           	opt callstack 0
 21968                           
 21969                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21970  000436  52E6               	movf	postinc1,f,c
 21971  000438  52E6               	movf	postinc1,f,c
 21972  00043A  52E6               	movf	postinc1,f,c
 21973  00043C  52E6               	movf	postinc1,f,c
 21974                           
 21975                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 21976                           
 21977                           ;incstack = 0
 21978  00043E  0E01               	movlw	1
 21979  000440  6E34               	movwf	(btemp+10)^0,c
 21980  000442  0E00               	movlw	0
 21981  000444  6E35               	movwf	(btemp+11)^0,c
 21982                           
 21983                           ;stkvar	_mask @ sp[(-4)+0]
 21984  000446  0EFC               	movlw	-4
 21985  000448  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 21986  00044E  0EFD               	movlw	-3
 21987  000450  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21988                           
 21989                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 21990  000456  0060  F38C  F035   	movff	_crcObj+1,btemp+11
 21991  00045C  0EFF               	movlw	255
 21992  00045E  2635               	addwf	(btemp+11)^0,f,c
 21993                           
 21994                           ;stkvar	_mask @ sp[(-4)+0]
 21995  000460  50E1               	movf	fsr1l,w,c
 21996  000462  0FFC               	addlw	-4
 21997  000464  6ED9               	movwf	fsr2l,c
 21998  000466  50E2               	movf	fsr1h,w,c
 21999  000468  6EDA               	movwf	fsr2h,c
 22000  00046A  0EFF               	movlw	255
 22001  00046C  22DA               	addwfc	fsr2h,f,c
 22002  00046E  2835               	incf	(btemp+11)^0,w,c
 22003  000470  D003               	goto	u11540
 22004  000472                     u11545:
 22005  000472  90D8               	bcf	status,0,c
 22006  000474  36DE               	rlcf	postinc2,f,c
 22007  000476  36DD               	rlcf	postdec2,f,c
 22008  000478                     u11540:
 22009  000478  2EE8               	decfsz	wreg,f,c
 22010  00047A  D7FB               	goto	u11545
 22011                           
 22012                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 22013                           ;stkvar	_reverse @ sp[(-4)+2]
 22014  00047C  0EFE               	movlw	-2
 22015  00047E  6AE3               	clrf	plusw1,c
 22016  000480  0EFF               	movlw	-1
 22017  000482  6AE3               	clrf	plusw1,c
 22018                           
 22019                           ;mcc_generated_files/crc.c: 147:     while(crc)
 22020  000484  D029               	goto	l12270
 22021  000486                     l12262:
 22022                           
 22023                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 22024                           ;stkvar	_crc @ sp[(-4)+-2]
 22025  000486  0EFA               	movlw	-6
 22026  000488  A0E3               	btfss	plusw1,0,c
 22027  00048A  D01C               	goto	l12266
 22028                           
 22029                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 22030                           ;stkvar	_mask @ sp[(-4)+0]
 22031  00048C  0EFC               	movlw	-4
 22032  00048E  006F FF8C  F034    	movff	plusw1,btemp+10
 22033  000494  0EFD               	movlw	-3
 22034  000496  006F FF8C  F035    	movff	plusw1,btemp+11
 22035                           
 22036                           ;stkvar	_reverse @ sp[(-4)+2]
 22037  00049C  0EFE               	movlw	-2
 22038  00049E  006F FF8C  F02A    	movff	plusw1,btemp
 22039  0004A4  5034               	movf	(btemp+10)^0,w,c
 22040  0004A6  122A               	iorwf	btemp^0,f,c
 22041  0004A8  0EFE               	movlw	-2
 22042  0004AA  0060  F0AB  FFE3   	movff	btemp,plusw1
 22043  0004B0  0EFF               	movlw	-1
 22044  0004B2  006F FF8C  F02A    	movff	plusw1,btemp
 22045  0004B8  5035               	movf	(btemp+11)^0,w,c
 22046  0004BA  122A               	iorwf	btemp^0,f,c
 22047  0004BC  0EFF               	movlw	-1
 22048  0004BE  0060  F0AB  FFE3   	movff	btemp,plusw1
 22049  0004C4                     l12266:
 22050                           
 22051                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 22052                           ;stkvar	_mask @ sp[(-4)+0]
 22053  0004C4  90D8               	bcf	status,0,c
 22054  0004C6  0EFD               	movlw	-3
 22055  0004C8  32E3               	rrcf	plusw1,f,c
 22056  0004CA  0EFC               	movlw	-4
 22057  0004CC  32E3               	rrcf	plusw1,f,c
 22058                           
 22059                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 22060                           ;stkvar	_crc @ sp[(-4)+-2]
 22061  0004CE  90D8               	bcf	status,0,c
 22062  0004D0  0EFB               	movlw	-5
 22063  0004D2  32E3               	rrcf	plusw1,f,c
 22064  0004D4  0EFA               	movlw	-6
 22065  0004D6  32E3               	rrcf	plusw1,f,c
 22066  0004D8                     l12270:
 22067                           
 22068                           ;mcc_generated_files/crc.c: 147:     while(crc)
 22069                           ;stkvar	_crc @ sp[(-4)+-2]
 22070  0004D8  0EFA               	movlw	-6
 22071  0004DA  006F FF8C  F02A    	movff	plusw1,btemp
 22072  0004E0  0EFB               	movlw	-5
 22073  0004E2  50E3               	movf	plusw1,w,c
 22074  0004E4  102A               	iorwf	btemp^0,w,c
 22075  0004E6  A4D8               	btfss	status,2,c
 22076  0004E8  D7CE               	goto	l12262
 22077                           
 22078                           ;mcc_generated_files/crc.c: 156:     return reverse;
 22079                           ;stkvar	_reverse @ sp[(-4)+2]
 22080  0004EA  0EFE               	movlw	-2
 22081  0004EC  006F FF8C  F02A    	movff	plusw1,btemp
 22082  0004F2  0EFF               	movlw	-1
 22083  0004F4  006F FF8C  F02B    	movff	plusw1,btemp+1
 22084                           
 22085                           ; _CRC_ReverseValue: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 22086  0004FA  0EFA               	movlw	250
 22087  0004FC  26E1               	addwf	fsr1l,f,c
 22088  0004FE  0EFF               	movlw	255
 22089  000500  22E2               	addwfc	fsr1h,f,c
 22090  000502  0012               	return		;funcret
 22091  000504                     __end_of_CRC_ReverseValue:
 22092                           	opt callstack 0
 22093                           
 22094 ;; *************** function _CRC_8BitDataWrite *****************
 22095 ;; Defined at:
 22096 ;;		line 125 in file "mcc_generated_files/crc.c"
 22097 ;; Parameters:    Size  Location     Type
 22098 ;;  data            1  [STACK] unsigned char 
 22099 ;; Auto vars:     Size  Location     Type
 22100 ;;		None
 22101 ;; Return value:  Size  Location     Type
 22102 ;;                  1  [STACK] _Bool 
 22103 ;; Registers used:
 22104 ;;		fsr1l, fsr1h
 22105 ;; Tracked objects:
 22106 ;;		On entry : 0/4
 22107 ;;		On exit  : 3F/39
 22108 ;;		Unchanged: 0/0
 22109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22114 ;;Total ram usage:        0 bytes
 22115 ;; Hardware stack levels used:    1
 22116 ;; Hardware stack levels required when called:   15
 22117 ;; This function calls:
 22118 ;;		Nothing
 22119 ;; This function is called by:
 22120 ;;		_read_cal_data
 22121 ;;		_write_cal_data
 22122 ;; This function uses a reentrant model
 22123 ;;
 22124                           
 22125                           	psect	text65
 22126  002946                     __ptext65:
 22127                           	opt callstack 0
 22128  002946                     _CRC_8BitDataWrite:
 22129                           	opt callstack 14
 22130                           
 22131                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 22132                           
 22133                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22134                           ;incstack = 0
 22135  002946  0139               	movlb	57	; () banked
 22136  002948  B168               	btfsc	104,0,b	;volatile
 22137  00294A  D004               	goto	l1271
 22138                           
 22139                           ; BSR set to: 57
 22140                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 22141                           ;stkvar	_data @ sp[(0)+-1]
 22142  00294C  0EFF               	movlw	-1
 22143  00294E  006F FF8F F960     	movff	plusw1,14688	;volatile
 22144  002954                     l1271:
 22145                           
 22146                           ; BSR set to: 57
 22147                           ; _CRC_8BitDataWrite: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 22148  002954  52E5               	movf	postdec1,f,c
 22149  002956  0012               	return		;funcret
 22150  002958                     __end_of_CRC_8BitDataWrite:
 22151                           	opt callstack 0
 22152                           
 22153 ;; *************** function _start_adc_scan *****************
 22154 ;; Defined at:
 22155 ;;		line 72 in file "daq.c"
 22156 ;; Parameters:    Size  Location     Type
 22157 ;;		None
 22158 ;; Auto vars:     Size  Location     Type
 22159 ;;		None
 22160 ;; Return value:  Size  Location     Type
 22161 ;;                  1  [STACK] _Bool 
 22162 ;; Registers used:
 22163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 22164 ;; Tracked objects:
 22165 ;;		On entry : 0/0
 22166 ;;		On exit  : 0/0
 22167 ;;		Unchanged: 0/0
 22168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22173 ;;Total ram usage:        0 bytes
 22174 ;; Hardware stack levels used:    1
 22175 ;; Hardware stack levels required when called:   16
 22176 ;; This function calls:
 22177 ;;		_ADCC_DischargeSampleCapacitor
 22178 ;;		_ADCC_SetADIInterruptHandler
 22179 ;;		_ADCC_SetADTIInterruptHandler
 22180 ;;		_ADCC_StartConversion
 22181 ;; This function is called by:
 22182 ;;		_main
 22183 ;;		_current_sensor_cal
 22184 ;;		_update_adc_result
 22185 ;; This function uses a reentrant model
 22186 ;;
 22187                           
 22188                           	psect	text66
 22189  0017F2                     __ptext66:
 22190                           	opt callstack 0
 22191  0017F2                     _start_adc_scan:
 22192                           	opt callstack 14
 22193                           
 22194                           ;daq.c: 74:  if (R.done)
 22195                           
 22196                           ; BSR set to: 57
 22197                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22198                           ;incstack = 0
 22199  0017F2  0101               	movlb	1	; () banked
 22200  0017F4  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 22201  0017F6  A4D8               	btfss	status,2,c
 22202  0017F8  0012               	return	
 22203                           
 22204                           ; BSR set to: 1
 22205                           ;daq.c: 77:  R.scan_index = 0;
 22206  0017FA  6B32               	clrf	(_R+50)& (0+255),b	;volatile
 22207                           
 22208                           ; BSR set to: 1
 22209                           ;daq.c: 78:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 22210  0017FC  013A               	movlb	58	; () banked
 22211  0017FE  5140               	movf	64,w,b	;volatile
 22212  001800  006E F940  F02A    	movff	14928,btemp	;volatile
 22213  001806  6A2B               	clrf	(btemp+1)^0,c
 22214  001808  0060  F0A8  F02B   	movff	btemp,btemp+1
 22215  00180E  6A2A               	clrf	btemp^0,c
 22216  001810  262A               	addwf	btemp^0,f,c
 22217  001812  0E00               	movlw	0
 22218  001814  222B               	addwfc	(btemp+1)^0,f,c
 22219  001816  0E77               	movlw	119
 22220  001818  142A               	andwf	btemp^0,w,c
 22221  00181A  0101               	movlb	1	; () banked
 22222  00181C  6F33               	movwf	(_R+51)& (0+255),b	;volatile
 22223  00181E  0E3C               	movlw	60
 22224  001820  142B               	andwf	(btemp+1)^0,w,c
 22225  001822  6F34               	movwf	(_R+52)& (0+255),b	;volatile
 22226                           
 22227                           ; BSR set to: 1
 22228                           ;daq.c: 79:  ADCC_SetADIInterruptHandler(adc_int_handler);
 22229  001824  0EA4               	movlw	low _adc_int_handler
 22230  001826  6EE6               	movwf	postinc1,c
 22231  001828  0E2A               	movlw	high _adc_int_handler
 22232  00182A  6EE6               	movwf	postinc1,c
 22233  00182C  0E00               	movlw	low (_adc_int_handler shr (0+16))
 22234  00182E  6EE6               	movwf	postinc1,c
 22235  001830  ECEF  F012         	call	_ADCC_SetADIInterruptHandler	;wreg free
 22236                           
 22237                           ;daq.c: 80:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 22238  001834  0E38               	movlw	low _adc_int_t_handler
 22239  001836  6EE6               	movwf	postinc1,c
 22240  001838  0E12               	movlw	high _adc_int_t_handler
 22241  00183A  6EE6               	movwf	postinc1,c
 22242  00183C  0E00               	movlw	low (_adc_int_t_handler shr (0+16))
 22243  00183E  6EE6               	movwf	postinc1,c
 22244  001840  ECDB  F012         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 22245                           
 22246                           ;daq.c: 81:  ADCC_DischargeSampleCapacitor();
 22247  001844  EC29  F015         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 22248                           
 22249                           ; BSR set to: 62
 22250                           ;daq.c: 82:  ADCC_StartConversion(R.scan_index & 0xf);
 22251  001848  0101               	movlb	1	; () banked
 22252  00184A  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 22253  00184C  0B0F               	andlw	15
 22254  00184E  6EE6               	movwf	postinc1,c
 22255  001850  ECAC  F014         	call	_ADCC_StartConversion	;wreg free
 22256                           
 22257                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22258  001854  0012               	return		;funcret
 22259  001856                     __end_of_start_adc_scan:
 22260                           	opt callstack 0
 22261                           
 22262 ;; *************** function _ADCC_StartConversion *****************
 22263 ;; Defined at:
 22264 ;;		line 128 in file "mcc_generated_files/adcc.c"
 22265 ;; Parameters:    Size  Location     Type
 22266 ;;  channel         1  [STACK] enum E16136
 22267 ;; Auto vars:     Size  Location     Type
 22268 ;;		None
 22269 ;; Return value:  Size  Location     Type
 22270 ;;                  1  [STACK] void 
 22271 ;; Registers used:
 22272 ;;		fsr1l, fsr1h
 22273 ;; Tracked objects:
 22274 ;;		On entry : 3F/1
 22275 ;;		On exit  : 3F/3E
 22276 ;;		Unchanged: 0/0
 22277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22282 ;;Total ram usage:        0 bytes
 22283 ;; Hardware stack levels used:    1
 22284 ;; Hardware stack levels required when called:   15
 22285 ;; This function calls:
 22286 ;;		Nothing
 22287 ;; This function is called by:
 22288 ;;		_start_adc_scan
 22289 ;;		_adc_int_t_handler
 22290 ;; This function uses a reentrant model
 22291 ;;
 22292                           
 22293                           	psect	text67
 22294  002958                     __ptext67:
 22295                           	opt callstack 0
 22296  002958                     _ADCC_StartConversion:
 22297                           	opt callstack 0
 22298                           
 22299                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 22300                           ;stkvar	_channel @ sp[(0)+-1]
 22301                           
 22302                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22303                           ;incstack = 0
 22304 ;; hardware stack exceeded
 22305  002958  0EFF               	movlw	-1
 22306  00295A  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 22307                           
 22308                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 22309  002960  013E               	movlb	62	; () banked
 22310  002962  8FF8               	bsf	248,7,b	;volatile
 22311                           
 22312                           ; BSR set to: 62
 22313                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 22314  002964  81F8               	bsf	248,0,b	;volatile
 22315                           
 22316                           ; BSR set to: 62
 22317                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 22318  002966  52E5               	movf	postdec1,f,c
 22319  002968  0012               	return		;funcret
 22320  00296A                     __end_of_ADCC_StartConversion:
 22321                           	opt callstack 0
 22322                           
 22323 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 22324 ;; Defined at:
 22325 ;;		line 189 in file "mcc_generated_files/adcc.c"
 22326 ;; Parameters:    Size  Location     Type
 22327 ;;		None
 22328 ;; Auto vars:     Size  Location     Type
 22329 ;;		None
 22330 ;; Return value:  Size  Location     Type
 22331 ;;                  1  [STACK] void 
 22332 ;; Registers used:
 22333 ;;		wreg, status,2
 22334 ;; Tracked objects:
 22335 ;;		On entry : 0/1
 22336 ;;		On exit  : 3F/3E
 22337 ;;		Unchanged: 0/0
 22338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22343 ;;Total ram usage:        0 bytes
 22344 ;; Hardware stack levels used:    1
 22345 ;; Hardware stack levels required when called:   15
 22346 ;; This function calls:
 22347 ;;		Nothing
 22348 ;; This function is called by:
 22349 ;;		_start_adc_scan
 22350 ;;		_adc_int_t_handler
 22351 ;; This function uses a reentrant model
 22352 ;;
 22353                           
 22354                           	psect	text68
 22355  002A52                     __ptext68:
 22356                           	opt callstack 0
 22357  002A52                     _ADCC_DischargeSampleCapacitor:
 22358                           	opt callstack 0
 22359                           
 22360                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 22361                           
 22362                           ; BSR set to: 62
 22363                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22364                           ;incstack = 0
 22365 ;; hardware stack exceeded
 22366  002A52  0E3B               	movlw	59
 22367  002A54  013E               	movlb	62	; () banked
 22368  002A56  6FF1               	movwf	241,b	;volatile
 22369                           
 22370                           ; BSR set to: 62
 22371                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 22372  002A58  0012               	return		;funcret
 22373  002A5A                     __end_of_ADCC_DischargeSampleCapacitor:
 22374                           	opt callstack 0
 22375                           
 22376 ;; *************** function _spinners *****************
 22377 ;; Defined at:
 22378 ;;		line 147 in file "mbmc.c"
 22379 ;; Parameters:    Size  Location     Type
 22380 ;;  shape           1  [STACK] unsigned char 
 22381 ;;  reset           1  [STACK] const unsigned char 
 22382 ;; Auto vars:     Size  Location     Type
 22383 ;;  c               1  [STACK] unsigned char 
 22384 ;; Return value:  Size  Location     Type
 22385 ;;                  1  [STACK] unsigned char 
 22386 ;; Registers used:
 22387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 22388 ;; Tracked objects:
 22389 ;;		On entry : 0/0
 22390 ;;		On exit  : 0/0
 22391 ;;		Unchanged: 0/0
 22392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22397 ;;Total ram usage:        0 bytes
 22398 ;; Hardware stack levels used:    1
 22399 ;; Hardware stack levels required when called:   16
 22400 ;; This function calls:
 22401 ;;		_strlen
 22402 ;; This function is called by:
 22403 ;;		_main
 22404 ;;		_current_sensor_cal
 22405 ;; This function uses a reentrant model
 22406 ;;
 22407                           
 22408                           	psect	text69
 22409  01FDDA                     __ptext69:
 22410                           	opt callstack 0
 22411  01FDDA                     _spinners:
 22412                           	opt callstack 0
 22413                           
 22414                           ; BSR set to: 62
 22415                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22416  01FDDA  52E6               	movf	postinc1,f,c
 22417                           
 22418                           ;mbmc.c: 147: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 148: {;mbmc.c: 1
      +                          49:  static uint8_t s[6];;mbmc.c: 150:  char c;;mbmc.c: 152:  if (shape > (6 - 1))
 22419                           ;stkvar	_shape @ sp[(-1)+-1]
 22420                           
 22421                           ;incstack = 0
 22422  01FDDC  0EFE               	movlw	-2
 22423  01FDDE  006F FF8C  F02A    	movff	plusw1,btemp
 22424  01FDE4  0E05               	movlw	5
 22425  01FDE6  642A               	cpfsgt	btemp^0,c
 22426  01FDE8  D002               	goto	l2184
 22427                           
 22428                           ;mbmc.c: 153:   shape = 0;
 22429                           ;stkvar	_shape @ sp[(-1)+-1]
 22430  01FDEA  0EFE               	movlw	-2
 22431  01FDEC  6AE3               	clrf	plusw1,c
 22432  01FDEE                     l2184:
 22433                           
 22434                           ;mbmc.c: 154:  if (reset)
 22435                           ;stkvar	_reset @ sp[(-1)+-2]
 22436  01FDEE  0EFD               	movlw	-3
 22437  01FDF0  50E3               	movf	plusw1,w,c
 22438  01FDF2  B4D8               	btfsc	status,2,c
 22439  01FDF4  D00C               	goto	l16936
 22440                           
 22441                           ;mbmc.c: 155:   s[shape] = 0;
 22442                           ;stkvar	_shape @ sp[(-1)+-1]
 22443  01FDF6  0EFE               	movlw	-2
 22444  01FDF8  50E3               	movf	plusw1,w,c
 22445  01FDFA  6E34               	movwf	(btemp+10)^0,c
 22446  01FDFC  6A35               	clrf	(btemp+11)^0,c
 22447  01FDFE  0ECD               	movlw	low spinners@s
 22448  01FE00  2434               	addwf	(btemp+10)^0,w,c
 22449  01FE02  6ED9               	movwf	fsr2l,c
 22450  01FE04  0E01               	movlw	high spinners@s
 22451  01FE06  2035               	addwfc	(btemp+11)^0,w,c
 22452  01FE08  6EDA               	movwf	fsr2h,c
 22453  01FE0A  0E00               	movlw	0
 22454  01FE0C  6EDF               	movwf	indf2,c
 22455  01FE0E                     l16936:
 22456                           
 22457                           ;mbmc.c: 156:  c = spin[shape][s[shape]];
 22458                           ;stkvar	_shape @ sp[(-1)+-1]
 22459  01FE0E  0EFE               	movlw	-2
 22460  01FE10  50E3               	movf	plusw1,w,c
 22461  01FE12  0D14               	mullw	20
 22462  01FE14  0E67               	movlw	low _spin
 22463  01FE16  6E34               	movwf	(btemp+10)^0,c
 22464  01FE18  0EF9               	movlw	high _spin
 22465  01FE1A  6E35               	movwf	(btemp+11)^0,c
 22466  01FE1C  50F3               	movf	243,w,c
 22467  01FE1E  2634               	addwf	(btemp+10)^0,f,c
 22468  01FE20  50F4               	movf	244,w,c
 22469  01FE22  2235               	addwfc	(btemp+11)^0,f,c
 22470                           
 22471                           ;stkvar	_shape @ sp[(-1)+-1]
 22472  01FE24  0EFE               	movlw	-2
 22473  01FE26  50E3               	movf	plusw1,w,c
 22474  01FE28  6E32               	movwf	(btemp+8)^0,c
 22475  01FE2A  6A33               	clrf	(btemp+9)^0,c
 22476  01FE2C  0ECD               	movlw	low spinners@s
 22477  01FE2E  2432               	addwf	(btemp+8)^0,w,c
 22478  01FE30  6ED9               	movwf	fsr2l,c
 22479  01FE32  0E01               	movlw	high spinners@s
 22480  01FE34  2033               	addwfc	(btemp+9)^0,w,c
 22481  01FE36  6EDA               	movwf	fsr2h,c
 22482  01FE38  50DF               	movf	indf2,w,c
 22483  01FE3A  2634               	addwf	(btemp+10)^0,f,c
 22484  01FE3C  0E00               	movlw	0
 22485  01FE3E  2235               	addwfc	(btemp+11)^0,f,c
 22486  01FE40  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 22487  01FE46  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 22488  01FE4C                     	if	0	;tblptru may be non-zero
 22489  01FE4C                     	endif
 22490  01FE4C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22491  01FE4C  0E00               	movlw	low (__mediumconst shr (0+16))
 22492  01FE4E  6EF8               	movwf	tblptru,c
 22493  01FE50                     	endif
 22494                           
 22495                           ;stkvar	_c @ sp[(-1)+0]
 22496  01FE50  0008               	tblrd		*
 22497  01FE52  0EFF               	movlw	-1
 22498  01FE54  006F FFD7 FFE3     	movff	tablat,plusw1
 22499                           
 22500                           ;mbmc.c: 157:  if (++s[shape] >= strlen(spin[shape]))
 22501                           ;stkvar	_shape @ sp[(-1)+-1]
 22502  01FE5A  0EFE               	movlw	-2
 22503  01FE5C  50E3               	movf	plusw1,w,c
 22504  01FE5E  0D14               	mullw	20
 22505  01FE60  0E67               	movlw	low _spin
 22506  01FE62  6E34               	movwf	(btemp+10)^0,c
 22507  01FE64  0EF9               	movlw	high _spin
 22508  01FE66  6E35               	movwf	(btemp+11)^0,c
 22509  01FE68  50F3               	movf	243,w,c
 22510  01FE6A  2634               	addwf	(btemp+10)^0,f,c
 22511  01FE6C  50F4               	movf	244,w,c
 22512  01FE6E  2235               	addwfc	(btemp+11)^0,f,c
 22513  01FE70  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 22514  01FE76  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 22515  01FE7C  ECFD  F005         	call	_strlen	;wreg free
 22516                           
 22517                           ;stkvar	_shape @ sp[(-1)+-1]
 22518  01FE80  0EFE               	movlw	-2
 22519  01FE82  50E3               	movf	plusw1,w,c
 22520  01FE84  6E34               	movwf	(btemp+10)^0,c
 22521  01FE86  6A35               	clrf	(btemp+11)^0,c
 22522  01FE88  0ECD               	movlw	low spinners@s
 22523  01FE8A  2434               	addwf	(btemp+10)^0,w,c
 22524  01FE8C  6ED9               	movwf	fsr2l,c
 22525  01FE8E  0E01               	movlw	high spinners@s
 22526  01FE90  2035               	addwfc	(btemp+11)^0,w,c
 22527  01FE92  6EDA               	movwf	fsr2h,c
 22528  01FE94  2ADF               	incf	indf2,f,c
 22529  01FE96  50DF               	movf	indf2,w,c
 22530  01FE98  6E34               	movwf	(btemp+10)^0,c
 22531  01FE9A  6A35               	clrf	(btemp+11)^0,c
 22532  01FE9C  502A               	movf	btemp^0,w,c
 22533  01FE9E  5C34               	subwf	(btemp+10)^0,w,c
 22534  01FEA0  502B               	movf	(btemp+1)^0,w,c
 22535  01FEA2  5835               	subwfb	(btemp+11)^0,w,c
 22536  01FEA4  A0D8               	btfss	status,0,c
 22537  01FEA6  D00C               	goto	l16942
 22538                           
 22539                           ;mbmc.c: 158:   s[shape] = 0;
 22540                           ;stkvar	_shape @ sp[(-1)+-1]
 22541  01FEA8  0EFE               	movlw	-2
 22542  01FEAA  50E3               	movf	plusw1,w,c
 22543  01FEAC  6E34               	movwf	(btemp+10)^0,c
 22544  01FEAE  6A35               	clrf	(btemp+11)^0,c
 22545  01FEB0  0ECD               	movlw	low spinners@s
 22546  01FEB2  2434               	addwf	(btemp+10)^0,w,c
 22547  01FEB4  6ED9               	movwf	fsr2l,c
 22548  01FEB6  0E01               	movlw	high spinners@s
 22549  01FEB8  2035               	addwfc	(btemp+11)^0,w,c
 22550  01FEBA  6EDA               	movwf	fsr2h,c
 22551  01FEBC  0E00               	movlw	0
 22552  01FEBE  6EDF               	movwf	indf2,c
 22553  01FEC0                     l16942:
 22554                           
 22555                           ;mbmc.c: 159:  return c;
 22556                           ;stkvar	_c @ sp[(-1)+0]
 22557  01FEC0  0EFF               	movlw	-1
 22558  01FEC2  006F FF8C  F02A    	movff	plusw1,btemp
 22559                           
 22560                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 22561  01FEC8  52E5               	movf	postdec1,f,c
 22562  01FECA  52E5               	movf	postdec1,f,c
 22563  01FECC  52E5               	movf	postdec1,f,c
 22564  01FECE  0012               	return		;funcret
 22565  01FED0                     __end_of_spinners:
 22566                           	opt callstack 0
 22567                           
 22568 ;; *************** function _get_switch *****************
 22569 ;; Defined at:
 22570 ;;		line 18 in file "dio.c"
 22571 ;; Parameters:    Size  Location     Type
 22572 ;;  i               1  [STACK] const unsigned char 
 22573 ;; Auto vars:     Size  Location     Type
 22574 ;;		None
 22575 ;; Return value:  Size  Location     Type
 22576 ;;                  1  [STACK] enum E17187
 22577 ;; Registers used:
 22578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22579 ;; Tracked objects:
 22580 ;;		On entry : 0/0
 22581 ;;		On exit  : 0/0
 22582 ;;		Unchanged: 0/0
 22583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22588 ;;Total ram usage:        0 bytes
 22589 ;; Hardware stack levels used:    1
 22590 ;; Hardware stack levels required when called:   15
 22591 ;; This function calls:
 22592 ;;		Nothing
 22593 ;; This function is called by:
 22594 ;;		_main
 22595 ;;		_current_sensor_cal
 22596 ;;		_display_history
 22597 ;;		_hid_input
 22598 ;; This function uses a reentrant model
 22599 ;;
 22600                           
 22601                           	psect	text70
 22602  002378                     __ptext70:
 22603                           	opt callstack 0
 22604  002378                     _get_switch:
 22605                           	opt callstack 13
 22606                           
 22607                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 22608                           ;stkvar	_i @ sp[(0)+-1]
 22609                           
 22610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22611                           ;incstack = 0
 22612  002378  0EFF               	movlw	-1
 22613  00237A  006F FF8C  F02A    	movff	plusw1,btemp
 22614  002380  0E05               	movlw	5
 22615  002382  642A               	cpfsgt	btemp^0,c
 22616  002384  D002               	goto	l12856
 22617                           
 22618                           ;dio.c: 21:   return SW_OFF;
 22619  002386  0E00               	movlw	0
 22620  002388  D00A               	goto	L20
 22621  00238A                     l12856:
 22622                           
 22623                           ;dio.c: 23:  return S.button[i].sw;
 22624                           ;stkvar	_i @ sp[(0)+-1]
 22625  00238A  0EFF               	movlw	-1
 22626  00238C  50E3               	movf	plusw1,w,c
 22627  00238E  0D05               	mullw	5
 22628  002390  0EA4               	movlw	low _S
 22629  002392  24F3               	addwf	243,w,c
 22630  002394  6ED9               	movwf	fsr2l,c
 22631  002396  0E01               	movlw	high _S
 22632  002398  20F4               	addwfc	prodh,w,c
 22633  00239A  6EDA               	movwf	fsr2h,c
 22634  00239C  50DF               	movf	indf2,w,c
 22635  00239E                     L20:
 22636  00239E  6E2A               	movwf	btemp^0,c
 22637                           
 22638                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 22639  0023A0  52E5               	movf	postdec1,f,c
 22640  0023A2  0012               	return		;funcret
 22641  0023A4                     __end_of_get_switch:
 22642                           	opt callstack 0
 22643                           
 22644 ;; *************** function _clear_adc_scan *****************
 22645 ;; Defined at:
 22646 ;;		line 103 in file "daq.c"
 22647 ;; Parameters:    Size  Location     Type
 22648 ;;		None
 22649 ;; Auto vars:     Size  Location     Type
 22650 ;;		None
 22651 ;; Return value:  Size  Location     Type
 22652 ;;                  1  [STACK] void 
 22653 ;; Registers used:
 22654 ;;		None
 22655 ;; Tracked objects:
 22656 ;;		On entry : 0/0
 22657 ;;		On exit  : 3F/1
 22658 ;;		Unchanged: 0/0
 22659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22664 ;;Total ram usage:        0 bytes
 22665 ;; Hardware stack levels used:    1
 22666 ;; Hardware stack levels required when called:   15
 22667 ;; This function calls:
 22668 ;;		Nothing
 22669 ;; This function is called by:
 22670 ;;		_main
 22671 ;;		_current_sensor_cal
 22672 ;;		_update_adc_result
 22673 ;; This function uses a reentrant model
 22674 ;;
 22675                           
 22676                           	psect	text71
 22677  002A7E                     __ptext71:
 22678                           	opt callstack 0
 22679  002A7E                     _clear_adc_scan:
 22680                           	opt callstack 13
 22681                           
 22682                           ;daq.c: 105:  R.done = 0;
 22683                           
 22684                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22685                           ;incstack = 0
 22686  002A7E  0101               	movlb	1	; () banked
 22687  002A80  6B35               	clrf	(_R+53)& (0+255),b	;volatile
 22688                           
 22689                           ; BSR set to: 1
 22690                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22691  002A82  0012               	return		;funcret
 22692  002A84                     __end_of_clear_adc_scan:
 22693                           	opt callstack 0
 22694                           
 22695 ;; *************** function _cal_current_zero *****************
 22696 ;; Defined at:
 22697 ;;		line 329 in file "daq.c"
 22698 ;; Parameters:    Size  Location     Type
 22699 ;;  mode            1  [STACK] const _Bool 
 22700 ;;  cb              2  [STACK] const short 
 22701 ;;  cp              2  [STACK] const short 
 22702 ;; Auto vars:     Size  Location     Type
 22703 ;;		None
 22704 ;; Return value:  Size  Location     Type
 22705 ;;                  1  [STACK] _Bool 
 22706 ;; Registers used:
 22707 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22708 ;; Tracked objects:
 22709 ;;		On entry : 0/1
 22710 ;;		On exit  : 0/0
 22711 ;;		Unchanged: 0/0
 22712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22717 ;;Total ram usage:        0 bytes
 22718 ;; Hardware stack levels used:    1
 22719 ;; Hardware stack levels required when called:   16
 22720 ;; This function calls:
 22721 ;;		_check_range
 22722 ;; This function is called by:
 22723 ;;		_current_sensor_cal
 22724 ;; This function uses a reentrant model
 22725 ;;
 22726                           
 22727                           	psect	text72
 22728  000DCE                     __ptext72:
 22729                           	opt callstack 0
 22730  000DCE                     _cal_current_zero:
 22731                           	opt callstack 13
 22732                           
 22733                           ;daq.c: 329: _Bool cal_current_zero(const _Bool mode, const int16_t cb, const int16_t cp
      +                          );daq.c: 330: {;daq.c: 332:  if (!check_range(cb, 100, 4000))
 22734                           
 22735                           ; BSR set to: 1
 22736                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22737                           ;incstack = 0
 22738  000DCE  0EA0               	movlw	160
 22739  000DD0  6EE6               	movwf	postinc1,c
 22740  000DD2  0E0F               	movlw	15
 22741  000DD4  6EE6               	movwf	postinc1,c
 22742  000DD6  0E64               	movlw	100
 22743  000DD8  6EE6               	movwf	postinc1,c
 22744  000DDA  0E00               	movlw	0
 22745  000DDC  6EE6               	movwf	postinc1,c
 22746                           
 22747                           ;stkvar	_cb @ sp[(-4)+-3]
 22748  000DDE  0EF9               	movlw	-7
 22749  000DE0  006F FF8F FFE6     	movff	plusw1,postinc1
 22750  000DE6  006F FF8F FFE6     	movff	plusw1,postinc1
 22751  000DEC  EC5D  F009         	call	_check_range	;wreg free
 22752  000DF0  502A               	movf	btemp^0,w,c
 22753  000DF2  A4D8               	btfss	status,2,c
 22754  000DF4  D002               	goto	l13556
 22755  000DF6                     u12620:
 22756                           
 22757                           ;daq.c: 333:   return 0;
 22758  000DF6  0E00               	movlw	0
 22759  000DF8  D019               	goto	L21
 22760  000DFA                     l13556:
 22761                           
 22762                           ;daq.c: 335:  if (!check_range(cp, 100, 4000))
 22763  000DFA  0EA0               	movlw	160
 22764  000DFC  6EE6               	movwf	postinc1,c
 22765  000DFE  0E0F               	movlw	15
 22766  000E00  6EE6               	movwf	postinc1,c
 22767  000E02  0E64               	movlw	100
 22768  000E04  6EE6               	movwf	postinc1,c
 22769  000E06  0E00               	movlw	0
 22770  000E08  6EE6               	movwf	postinc1,c
 22771                           
 22772                           ;stkvar	_cp @ sp[(-4)+-5]
 22773  000E0A  0EF7               	movlw	-9
 22774  000E0C  006F FF8F FFE6     	movff	plusw1,postinc1
 22775  000E12  006F FF8F FFE6     	movff	plusw1,postinc1
 22776  000E18  EC5D  F009         	call	_check_range	;wreg free
 22777  000E1C  502A               	movf	btemp^0,w,c
 22778  000E1E  B4D8               	btfsc	status,2,c
 22779  000E20  D7EA               	goto	u12620
 22780                           
 22781                           ;daq.c: 338:  if (!mode)
 22782                           ;stkvar	_mode @ sp[(0)+-1]
 22783  000E22  0EFF               	movlw	-1
 22784  000E24  50E3               	movf	plusw1,w,c
 22785  000E26  A4D8               	btfss	status,2,c
 22786  000E28  D003               	goto	l13568
 22787  000E2A                     u12640:
 22788                           
 22789                           ;daq.c: 339:   return 1;
 22790  000E2A  0E01               	movlw	1
 22791  000E2C                     L21:
 22792  000E2C  6E2A               	movwf	btemp^0,c
 22793  000E2E  D013               	goto	l2058
 22794  000E30                     l13568:
 22795                           
 22796                           ;daq.c: 341:  R.n_offset[0] = cb;
 22797                           ;stkvar	_cb @ sp[(0)+-3]
 22798  000E30  0EFD               	movlw	-3
 22799  000E32  006F FF8C  F126    	movff	plusw1,_R+38	;volatile
 22800  000E38  0EFE               	movlw	-2
 22801  000E3A  006F FF8C  F127    	movff	plusw1,_R+39	;volatile
 22802                           
 22803                           ;daq.c: 342:  R.n_offset[1] = cp;
 22804                           ;stkvar	_cp @ sp[(0)+-5]
 22805  000E40  0EFB               	movlw	-5
 22806  000E42  006F FF8C  F128    	movff	plusw1,_R+40	;volatile
 22807  000E48  0EFC               	movlw	-4
 22808  000E4A  006F FF8C  F129    	movff	plusw1,_R+41	;volatile
 22809                           
 22810                           ;daq.c: 343:  R.c_zero_cal = 1;
 22811  000E50  0101               	movlb	1	; () banked
 22812  000E52  8597               	bsf	(_R+151)& (0+255),2,b	;volatile
 22813  000E54  D7EA               	goto	u12640
 22814  000E56                     l2058:
 22815                           
 22816                           ; _cal_current_zero: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
 22817  000E56  0EFB               	movlw	251
 22818  000E58  26E1               	addwf	fsr1l,f,c
 22819  000E5A  0EFF               	movlw	255
 22820  000E5C  22E2               	addwfc	fsr1h,f,c
 22821  000E5E  0012               	return		;funcret
 22822  000E60                     __end_of_cal_current_zero:
 22823                           	opt callstack 0
 22824                           
 22825 ;; *************** function _check_range *****************
 22826 ;; Defined at:
 22827 ;;		line 317 in file "daq.c"
 22828 ;; Parameters:    Size  Location     Type
 22829 ;;  value           2  [STACK] const short 
 22830 ;;  window          2  [STACK] const short 
 22831 ;;  standard        2  [STACK] const short 
 22832 ;; Auto vars:     Size  Location     Type
 22833 ;;		None
 22834 ;; Return value:  Size  Location     Type
 22835 ;;                  1  [STACK] _Bool 
 22836 ;; Registers used:
 22837 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22838 ;; Tracked objects:
 22839 ;;		On entry : 0/1
 22840 ;;		On exit  : 0/0
 22841 ;;		Unchanged: 0/0
 22842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22847 ;;Total ram usage:        0 bytes
 22848 ;; Hardware stack levels used:    1
 22849 ;; Hardware stack levels required when called:   15
 22850 ;; This function calls:
 22851 ;;		Nothing
 22852 ;; This function is called by:
 22853 ;;		_cal_current_zero
 22854 ;; This function uses a reentrant model
 22855 ;;
 22856                           
 22857                           	psect	text73
 22858  0012BA                     __ptext73:
 22859                           	opt callstack 0
 22860  0012BA                     _check_range:
 22861                           	opt callstack 13
 22862                           
 22863                           ;daq.c: 317: static _Bool check_range(const int16_t value, const int16_t window, const i
      +                          nt16_t standard);daq.c: 318: {;daq.c: 319:  if (value > (standard + window))
 22864                           ;stkvar	_value @ sp[(0)+-2]
 22865                           ;stkvar	_window @ sp[(0)+-4]
 22866                           ;stkvar	_standard @ sp[(0)+-6]
 22867                           
 22868                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22869                           ;incstack = 0
 22870  0012BA  0EFA               	movlw	-6
 22871  0012BC  006F FF8C  F034    	movff	plusw1,btemp+10
 22872  0012C2  0EFB               	movlw	-5
 22873  0012C4  006F FF8C  F035    	movff	plusw1,btemp+11
 22874  0012CA  0EFC               	movlw	-4
 22875  0012CC  50E3               	movf	plusw1,w,c
 22876  0012CE  2634               	addwf	(btemp+10)^0,f,c
 22877  0012D0  0EFD               	movlw	-3
 22878  0012D2  50E3               	movf	plusw1,w,c
 22879  0012D4  2235               	addwfc	(btemp+11)^0,f,c
 22880  0012D6  0EFE               	movlw	-2
 22881  0012D8  50E3               	movf	plusw1,w,c
 22882  0012DA  5C34               	subwf	(btemp+10)^0,w,c
 22883  0012DC  5035               	movf	(btemp+11)^0,w,c
 22884  0012DE  0A80               	xorlw	128
 22885  0012E0  6E2A               	movwf	btemp^0,c
 22886  0012E2  0EFF               	movlw	-1
 22887  0012E4  50E3               	movf	plusw1,w,c
 22888  0012E6  0A80               	xorlw	128
 22889  0012E8  582A               	subwfb	btemp^0,w,c
 22890  0012EA  B0D8               	btfsc	status,0,c
 22891  0012EC  D002               	goto	l12928
 22892  0012EE                     u12350:
 22893                           
 22894                           ;daq.c: 320:   return 0;
 22895  0012EE  0E00               	movlw	0
 22896  0012F0  D01E               	goto	L22
 22897  0012F2                     l12928:
 22898                           
 22899                           ;daq.c: 321:  if (value < (standard - window))
 22900                           ;stkvar	_window @ sp[(0)+-4]
 22901                           ;stkvar	_standard @ sp[(0)+-6]
 22902  0012F2  0EFA               	movlw	-6
 22903  0012F4  006F FF8C  F034    	movff	plusw1,btemp+10
 22904  0012FA  0EFB               	movlw	-5
 22905  0012FC  006F FF8C  F035    	movff	plusw1,btemp+11
 22906  001302  0EFC               	movlw	-4
 22907  001304  50E3               	movf	plusw1,w,c
 22908  001306  5E34               	subwf	(btemp+10)^0,f,c
 22909  001308  0EFD               	movlw	-3
 22910  00130A  50E3               	movf	plusw1,w,c
 22911  00130C  5A35               	subwfb	(btemp+11)^0,f,c
 22912                           
 22913                           ;stkvar	_value @ sp[(0)+-2]
 22914  00130E  0EFE               	movlw	-2
 22915  001310  006F FF8C  F02A    	movff	plusw1,btemp
 22916  001316  5034               	movf	(btemp+10)^0,w,c
 22917  001318  5C2A               	subwf	btemp^0,w,c
 22918  00131A  0EFF               	movlw	-1
 22919  00131C  50E3               	movf	plusw1,w,c
 22920  00131E  0A80               	xorlw	128
 22921  001320  6E2A               	movwf	btemp^0,c
 22922  001322  5035               	movf	(btemp+11)^0,w,c
 22923  001324  0A80               	xorlw	128
 22924  001326  582A               	subwfb	btemp^0,w,c
 22925  001328  A0D8               	btfss	status,0,c
 22926  00132A  D7E1               	goto	u12350
 22927                           
 22928                           ;daq.c: 323:  return 1;
 22929  00132C  0E01               	movlw	1
 22930  00132E                     L22:
 22931  00132E  6E2A               	movwf	btemp^0,c
 22932                           
 22933                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 22934  001330  0EFA               	movlw	250
 22935  001332  26E1               	addwf	fsr1l,f,c
 22936  001334  0EFF               	movlw	255
 22937  001336  22E2               	addwfc	fsr1h,f,c
 22938  001338  0012               	return		;funcret
 22939  00133A                     __end_of_check_range:
 22940                           	opt callstack 0
 22941                           
 22942 ;; *************** function _convert_adc_data *****************
 22943 ;; Defined at:
 22944 ;;		line 51 in file "mbmc.c"
 22945 ;; Parameters:    Size  Location     Type
 22946 ;;		None
 22947 ;; Auto vars:     Size  Location     Type
 22948 ;;  i               1  [STACK] unsigned char 
 22949 ;; Return value:  Size  Location     Type
 22950 ;;                  1  [STACK] void 
 22951 ;; Registers used:
 22952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22953 ;; Tracked objects:
 22954 ;;		On entry : 0/2
 22955 ;;		On exit  : 0/0
 22956 ;;		Unchanged: 0/0
 22957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22962 ;;Total ram usage:        0 bytes
 22963 ;; Hardware stack levels used:    1
 22964 ;; Hardware stack levels required when called:   18
 22965 ;; This function calls:
 22966 ;;		_conv_raw_result
 22967 ;;		_lp_filter
 22968 ;; This function is called by:
 22969 ;;		_main
 22970 ;; This function uses a reentrant model
 22971 ;;
 22972                           
 22973                           	psect	text74
 22974  00073E                     __ptext74:
 22975                           	opt callstack 0
 22976  00073E                     _convert_adc_data:
 22977                           	opt callstack 0
 22978                           
 22979                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22980  00073E  52E6               	movf	postinc1,f,c
 22981                           
 22982                           ;mbmc.c: 53:  uint8_t i = 0;
 22983                           ;stkvar	_i @ sp[(-1)+0]
 22984                           
 22985                           ;incstack = 0
 22986  000740  0EFF               	movlw	-1
 22987  000742  6AE3               	clrf	plusw1,c
 22988  000744                     l14370:
 22989                           
 22990                           ;mbmc.c: 56:   if (V.calib) {
 22991  000744  0102               	movlb	2	; () banked
 22992  000746  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
 22993  000748  B4D8               	btfsc	status,2,c
 22994  00074A  D01B               	goto	l14374
 22995                           
 22996                           ; BSR set to: 2
 22997                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 22998  00074C  0E01               	movlw	1
 22999  00074E  6EE6               	movwf	postinc1,c
 23000                           
 23001                           ;stkvar	_i @ sp[(-2)+0]
 23002  000750  0EFE               	movlw	-2
 23003  000752  50E3               	movf	plusw1,w,c
 23004  000754  6EE6               	movwf	postinc1,c
 23005  000756  0E01               	movlw	1
 23006  000758  6EE6               	movwf	postinc1,c
 23007                           
 23008                           ;stkvar	_i @ sp[(-4)+0]
 23009  00075A  0EFC               	movlw	-4
 23010  00075C  50E3               	movf	plusw1,w,c
 23011  00075E  6EE6               	movwf	postinc1,c
 23012  000760  EC98  F0C3         	call	_conv_raw_result	;wreg free
 23013  000764  0060  F0AB  FFE6   	movff	btemp,postinc1
 23014  00076A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23015  000770  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 23016  000776  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 23017  00077C  EC0E  F0ED         	call	_lp_filter	;wreg free
 23018  000780  D01A               	goto	L23
 23019  000782                     l14374:
 23020                           
 23021                           ; BSR set to: 2
 23022                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 23023  000782  0E00               	movlw	0
 23024  000784  6EE6               	movwf	postinc1,c
 23025                           
 23026                           ;stkvar	_i @ sp[(-2)+0]
 23027  000786  0EFE               	movlw	-2
 23028  000788  50E3               	movf	plusw1,w,c
 23029  00078A  6EE6               	movwf	postinc1,c
 23030  00078C  0E00               	movlw	0
 23031  00078E  6EE6               	movwf	postinc1,c
 23032                           
 23033                           ;stkvar	_i @ sp[(-4)+0]
 23034  000790  0EFC               	movlw	-4
 23035  000792  50E3               	movf	plusw1,w,c
 23036  000794  6EE6               	movwf	postinc1,c
 23037  000796  EC98  F0C3         	call	_conv_raw_result	;wreg free
 23038  00079A  0060  F0AB  FFE6   	movff	btemp,postinc1
 23039  0007A0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23040  0007A6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 23041  0007AC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 23042  0007B2  EC0E  F0ED         	call	_lp_filter	;wreg free
 23043  0007B6                     L23:
 23044                           
 23045                           ;stkvar	_i @ sp[(-1)+0]
 23046  0007B6  0EFF               	movlw	-1
 23047  0007B8  50E3               	movf	plusw1,w,c
 23048  0007BA  0D04               	mullw	4
 23049  0007BC  0EFF               	movlw	low _C
 23050  0007BE  24F3               	addwf	243,w,c
 23051  0007C0  6ED9               	movwf	fsr2l,c
 23052  0007C2  0E08               	movlw	high _C
 23053  0007C4  20F4               	addwfc	prodh,w,c
 23054  0007C6  6EDA               	movwf	fsr2h,c
 23055  0007C8  0060  F0AB  FFDE   	movff	btemp,postinc2
 23056  0007CE  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 23057  0007D4  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 23058  0007DA  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 23059                           
 23060                           ;mbmc.c: 61:  } while (++i < 16);
 23061                           ;stkvar	_i @ sp[(-1)+0]
 23062  0007E0  0EFF               	movlw	-1
 23063  0007E2  2AE3               	incf	plusw1,f,c
 23064  0007E4  0EFF               	movlw	-1
 23065  0007E6  006F FF8C  F02A    	movff	plusw1,btemp
 23066  0007EC  0E0F               	movlw	15
 23067  0007EE  642A               	cpfsgt	btemp^0,c
 23068  0007F0  D7A9               	goto	l14370
 23069                           
 23070                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23071  0007F2  52E5               	movf	postdec1,f,c
 23072  0007F4  0012               	return		;funcret
 23073  0007F6                     __end_of_convert_adc_data:
 23074                           	opt callstack 0
 23075                           
 23076 ;; *************** function _clear_hid_pflags *****************
 23077 ;; Defined at:
 23078 ;;		line 67 in file "hid.c"
 23079 ;; Parameters:    Size  Location     Type
 23080 ;;  h               2  [STACK] PTR struct H_data
 23081 ;;		 -> H(9), 
 23082 ;; Auto vars:     Size  Location     Type
 23083 ;;		None
 23084 ;; Return value:  Size  Location     Type
 23085 ;;                  1  [STACK] void 
 23086 ;; Registers used:
 23087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 23088 ;; Tracked objects:
 23089 ;;		On entry : 3E/0
 23090 ;;		On exit  : 0/0
 23091 ;;		Unchanged: 0/0
 23092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23097 ;;Total ram usage:        0 bytes
 23098 ;; Hardware stack levels used:    1
 23099 ;; Hardware stack levels required when called:   15
 23100 ;; This function calls:
 23101 ;;		Nothing
 23102 ;; This function is called by:
 23103 ;;		_main
 23104 ;; This function uses a reentrant model
 23105 ;;
 23106                           
 23107                           	psect	text75
 23108  0016C2                     __ptext75:
 23109                           	opt callstack 0
 23110  0016C2                     _clear_hid_pflags:
 23111                           	opt callstack 15
 23112                           
 23113                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 23114                           ;stkvar	_h @ sp[(0)+-2]
 23115                           
 23116                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23117                           ;incstack = 0
 23118  0016C2  0EFE               	movlw	-2
 23119  0016C4  006F FF8C  F034    	movff	plusw1,btemp+10
 23120  0016CA  0EFF               	movlw	-1
 23121  0016CC  006F FF8C  F035    	movff	plusw1,btemp+11
 23122  0016D2  0E03               	movlw	3
 23123  0016D4  2434               	addwf	(btemp+10)^0,w,c
 23124  0016D6  6ED9               	movwf	fsr2l,c
 23125  0016D8  0E00               	movlw	0
 23126  0016DA  2035               	addwfc	(btemp+11)^0,w,c
 23127  0016DC  6EDA               	movwf	fsr2h,c
 23128  0016DE  0E00               	movlw	0
 23129  0016E0  6EDF               	movwf	indf2,c
 23130                           
 23131                           ;hid.c: 70:  h->enter_p = SW_OFF;
 23132                           ;stkvar	_h @ sp[(0)+-2]
 23133  0016E2  0EFE               	movlw	-2
 23134  0016E4  006F FF8C  F034    	movff	plusw1,btemp+10
 23135  0016EA  0EFF               	movlw	-1
 23136  0016EC  006F FF8C  F035    	movff	plusw1,btemp+11
 23137  0016F2  0E05               	movlw	5
 23138  0016F4  2434               	addwf	(btemp+10)^0,w,c
 23139  0016F6  6ED9               	movwf	fsr2l,c
 23140  0016F8  0E00               	movlw	0
 23141  0016FA  2035               	addwfc	(btemp+11)^0,w,c
 23142  0016FC  6EDA               	movwf	fsr2h,c
 23143  0016FE  0E00               	movlw	0
 23144  001700  6EDF               	movwf	indf2,c
 23145                           
 23146                           ;hid.c: 71:  h->calib_p = SW_OFF;
 23147                           ;stkvar	_h @ sp[(0)+-2]
 23148  001702  0EFE               	movlw	-2
 23149  001704  006F FF8C  F034    	movff	plusw1,btemp+10
 23150  00170A  0EFF               	movlw	-1
 23151  00170C  006F FF8C  F035    	movff	plusw1,btemp+11
 23152  001712  0E07               	movlw	7
 23153  001714  2434               	addwf	(btemp+10)^0,w,c
 23154  001716  6ED9               	movwf	fsr2l,c
 23155  001718  0E00               	movlw	0
 23156  00171A  2035               	addwfc	(btemp+11)^0,w,c
 23157  00171C  6EDA               	movwf	fsr2h,c
 23158  00171E  0E00               	movlw	0
 23159  001720  6EDF               	movwf	indf2,c
 23160                           
 23161                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 23162  001722  52E5               	movf	postdec1,f,c
 23163  001724  52E5               	movf	postdec1,f,c
 23164  001726  0012               	return		;funcret
 23165  001728                     __end_of_clear_hid_pflags:
 23166                           	opt callstack 0
 23167                           
 23168 ;; *************** function _check_help *****************
 23169 ;; Defined at:
 23170 ;;		line 40 in file "mconfig.c"
 23171 ;; Parameters:    Size  Location     Type
 23172 ;;  flipper         1  [STACK] const _Bool 
 23173 ;; Auto vars:     Size  Location     Type
 23174 ;;  estatus         1    0        _Bool 
 23175 ;; Return value:  Size  Location     Type
 23176 ;;                  1  [STACK] _Bool 
 23177 ;; Registers used:
 23178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23179 ;; Tracked objects:
 23180 ;;		On entry : 3F/2
 23181 ;;		On exit  : 0/0
 23182 ;;		Unchanged: 0/0
 23183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23188 ;;Total ram usage:        0 bytes
 23189 ;; Hardware stack levels used:    1
 23190 ;; Hardware stack levels required when called:   27
 23191 ;; This function calls:
 23192 ;;		_StartTimer
 23193 ;;		_TimerDone
 23194 ;;		_display_help
 23195 ;;		_display_info
 23196 ;;		_get_vterm_ptr
 23197 ;;		_help_button
 23198 ;;		_mode_lamp_bright
 23199 ;;		_mode_lamp_dim
 23200 ;;		_set_display_info
 23201 ;;		_set_temp_display_help
 23202 ;;		_set_vterm
 23203 ;;		_sprintf
 23204 ;;		_update_lcd
 23205 ;;		_vterm_dump
 23206 ;; This function is called by:
 23207 ;;		_main
 23208 ;; This function uses a reentrant model
 23209 ;;
 23210                           
 23211                           	psect	text76
 23212  01D43C                     __ptext76:
 23213                           	opt callstack 0
 23214  01D43C                     _check_help:
 23215                           	opt callstack 3
 23216                           
 23217                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 23218                           
 23219                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23220                           ;incstack = 0
 23221  01D43C  EC56  F010         	call	_help_button	;wreg free
 23222  01D440  502A               	movf	btemp^0,w,c
 23223  01D442  B4D8               	btfsc	status,2,c
 23224  01D444  D0D0               	goto	l17380
 23225  01D446  EC2D  F015         	call	_display_info	;wreg free
 23226  01D44A  042A               	decf	btemp^0,w,c
 23227  01D44C  B4D8               	btfsc	status,2,c
 23228  01D44E  D0CB               	goto	l17380
 23229                           
 23230                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 23231  01D450  0EDC               	movlw	220
 23232  01D452  6EE6               	movwf	postinc1,c
 23233  01D454  0E05               	movlw	5
 23234  01D456  6EE6               	movwf	postinc1,c
 23235  01D458  0E0B               	movlw	11
 23236  01D45A  6EE6               	movwf	postinc1,c
 23237  01D45C  ECBA  F00F         	call	_StartTimer	;wreg free
 23238                           
 23239                           ;mconfig.c: 48:   if (V.debug)
 23240  01D460  0102               	movlb	2	; () banked
 23241  01D462  B39F               	btfsc	(_V+152)& (0+255),1,b	;volatile
 23242                           
 23243                           ; BSR set to: 2
 23244                           ;mconfig.c: 49:    vterm_dump();
 23245  01D464  EC52  F0F0         	call	_vterm_dump	;wreg free
 23246                           
 23247                           ;mconfig.c: 51:   set_vterm(1);
 23248  01D468  0E01               	movlw	1
 23249  01D46A  6EE6               	movwf	postinc1,c
 23250  01D46C  EC1D  F014         	call	_set_vterm	;wreg free
 23251                           
 23252                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 23253  01D470  EC2D  F015         	call	_display_info	;wreg free
 23254  01D474  502A               	movf	btemp^0,w,c
 23255  01D476  6EE6               	movwf	postinc1,c
 23256  01D478  ECCD  F014         	call	_set_temp_display_help	;wreg free
 23257                           
 23258                           ; BSR set to: 2
 23259                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 23260  01D47C  0E01               	movlw	1
 23261  01D47E  6EE6               	movwf	postinc1,c
 23262  01D480  EC2C  F014         	call	_set_display_info	;wreg free
 23263                           
 23264                           ;mconfig.c: 54:   if (flipper) {
 23265                           ;stkvar	_flipper @ sp[(0)+-1]
 23266  01D484  0EFF               	movlw	-1
 23267  01D486  50E3               	movf	plusw1,w,c
 23268  01D488  B4D8               	btfsc	status,2,c
 23269  01D48A  D019               	goto	l17366
 23270                           
 23271                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 23272  01D48C  0EB6               	movlw	low STR_75
 23273  01D48E  6EE6               	movwf	postinc1,c
 23274  01D490  0EFF               	movlw	high STR_75
 23275  01D492  6EE6               	movwf	postinc1,c
 23276  01D494  0E71               	movlw	low STR_77
 23277  01D496  6EE6               	movwf	postinc1,c
 23278  01D498  0EFF               	movlw	high STR_77
 23279  01D49A  6EE6               	movwf	postinc1,c
 23280  01D49C  0E01               	movlw	1
 23281  01D49E  6EE6               	movwf	postinc1,c
 23282  01D4A0  0E00               	movlw	0
 23283  01D4A2  6EE6               	movwf	postinc1,c
 23284  01D4A4  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 23285  01D4A8  0060  F0AB  FFE6   	movff	btemp,postinc1
 23286  01D4AE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23287  01D4B4  0E06               	movlw	6
 23288  01D4B6  6EE6               	movwf	postinc1,c
 23289  01D4B8  EC71  F0FD         	call	_sprintf	;wreg free
 23290                           
 23291                           ;mconfig.c: 56:   } else {
 23292  01D4BC  D018               	goto	l1829
 23293  01D4BE                     l17366:
 23294                           
 23295                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 23296  01D4BE  0ECC               	movlw	low STR_76
 23297  01D4C0  6EE6               	movwf	postinc1,c
 23298  01D4C2  0EFF               	movlw	high STR_76
 23299  01D4C4  6EE6               	movwf	postinc1,c
 23300  01D4C6  0E71               	movlw	low STR_77
 23301  01D4C8  6EE6               	movwf	postinc1,c
 23302  01D4CA  0EFF               	movlw	high STR_77
 23303  01D4CC  6EE6               	movwf	postinc1,c
 23304  01D4CE  0E01               	movlw	1
 23305  01D4D0  6EE6               	movwf	postinc1,c
 23306  01D4D2  0E00               	movlw	0
 23307  01D4D4  6EE6               	movwf	postinc1,c
 23308  01D4D6  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 23309  01D4DA  0060  F0AB  FFE6   	movff	btemp,postinc1
 23310  01D4E0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23311  01D4E6  0E06               	movlw	6
 23312  01D4E8  6EE6               	movwf	postinc1,c
 23313  01D4EA  EC71  F0FD         	call	_sprintf	;wreg free
 23314  01D4EE                     l1829:
 23315                           
 23316                           ; BSR set to: 0
 23317                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 23318  01D4EE  0102               	movlb	2	; () banked
 23319  01D4F0  399F               	swapf	(_V+152)& (0+255),w,b	;volatile
 23320  01D4F2  32E8               	rrcf	wreg,f,c
 23321  01D4F4  32E8               	rrcf	wreg,f,c
 23322  01D4F6  0B03               	andlw	3
 23323  01D4F8  0D2C               	mullw	44
 23324  01D4FA  0E16               	movlw	22
 23325  01D4FC  26F3               	addwf	243,f,c
 23326  01D4FE  0E00               	movlw	0
 23327  01D500  22F4               	addwfc	244,f,c
 23328  01D502  0EB7               	movlw	low _T
 23329  01D504  6E34               	movwf	(btemp+10)^0,c
 23330  01D506  0EF8               	movlw	high _T
 23331  01D508  6E35               	movwf	(btemp+11)^0,c
 23332  01D50A  50F3               	movf	243,w,c
 23333  01D50C  2634               	addwf	(btemp+10)^0,f,c
 23334  01D50E  50F4               	movf	244,w,c
 23335  01D510  2235               	addwfc	(btemp+11)^0,f,c
 23336  01D512  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23337  01D518  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23338  01D51E  0EC2               	movlw	low STR_79
 23339  01D520  6EE6               	movwf	postinc1,c
 23340  01D522  0EFF               	movlw	high STR_79
 23341  01D524  6EE6               	movwf	postinc1,c
 23342  01D526  0E01               	movlw	1
 23343  01D528  6EE6               	movwf	postinc1,c
 23344  01D52A  0E01               	movlw	1
 23345  01D52C  6EE6               	movwf	postinc1,c
 23346  01D52E  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 23347  01D532  0060  F0AB  FFE6   	movff	btemp,postinc1
 23348  01D538  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23349  01D53E  0E06               	movlw	6
 23350  01D540  6EE6               	movwf	postinc1,c
 23351  01D542  EC71  F0FD         	call	_sprintf	;wreg free
 23352                           
 23353                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 23354  01D546  0102               	movlb	2	; () banked
 23355  01D548  399F               	swapf	(_V+152)& (0+255),w,b	;volatile
 23356  01D54A  32E8               	rrcf	wreg,f,c
 23357  01D54C  32E8               	rrcf	wreg,f,c
 23358  01D54E  0B03               	andlw	3
 23359  01D550  0D2C               	mullw	44
 23360  01D552  0EB7               	movlw	low _T
 23361  01D554  6E34               	movwf	(btemp+10)^0,c
 23362  01D556  0EF8               	movlw	high _T
 23363  01D558  6E35               	movwf	(btemp+11)^0,c
 23364  01D55A  50F3               	movf	243,w,c
 23365  01D55C  2634               	addwf	(btemp+10)^0,f,c
 23366  01D55E  50F4               	movf	244,w,c
 23367  01D560  2235               	addwfc	(btemp+11)^0,f,c
 23368  01D562  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23369  01D568  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23370  01D56E  0EC2               	movlw	low STR_79
 23371  01D570  6EE6               	movwf	postinc1,c
 23372  01D572  0EFF               	movlw	high STR_79
 23373  01D574  6EE6               	movwf	postinc1,c
 23374  01D576  0E01               	movlw	1
 23375  01D578  6EE6               	movwf	postinc1,c
 23376  01D57A  0E02               	movlw	2
 23377  01D57C  6EE6               	movwf	postinc1,c
 23378  01D57E  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 23379  01D582  0060  F0AB  FFE6   	movff	btemp,postinc1
 23380  01D588  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23381  01D58E  0E06               	movlw	6
 23382  01D590  6EE6               	movwf	postinc1,c
 23383  01D592  EC71  F0FD         	call	_sprintf	;wreg free
 23384                           
 23385                           ; BSR set to: 0
 23386                           ;mconfig.c: 61:   V.help_id++;
 23387  01D596  EE20  F29F         	lfsr	2,_V+152	;volatile
 23388  01D59A  38DF               	swapf	223,w,c
 23389  01D59C  6E35               	movwf	(btemp+11)^0,c
 23390  01D59E  3235               	rrcf	(btemp+11)^0,f,c
 23391  01D5A0  3035               	rrcf	(btemp+11)^0,w,c
 23392  01D5A2  0B03               	andlw	3
 23393  01D5A4  6E35               	movwf	(btemp+11)^0,c
 23394  01D5A6  2A35               	incf	(btemp+11)^0,f,c
 23395  01D5A8  3A35               	swapf	(btemp+11)^0,f,c
 23396  01D5AA  3635               	rlcf	(btemp+11)^0,f,c
 23397  01D5AC  3635               	rlcf	(btemp+11)^0,f,c
 23398  01D5AE  50DF               	movf	223,w,c
 23399  01D5B0  1835               	xorwf	(btemp+11)^0,w,c
 23400  01D5B2  0B3F               	andlw	-193
 23401  01D5B4  1835               	xorwf	(btemp+11)^0,w,c
 23402  01D5B6  6EDF               	movwf	223,c
 23403                           
 23404                           ; BSR set to: 0
 23405                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 23406  01D5B8  0EB8               	movlw	184
 23407  01D5BA  6EE6               	movwf	postinc1,c
 23408  01D5BC  0E0B               	movlw	11
 23409  01D5BE  6EE6               	movwf	postinc1,c
 23410  01D5C0  0E09               	movlw	9
 23411  01D5C2  6EE6               	movwf	postinc1,c
 23412  01D5C4  ECBA  F00F         	call	_StartTimer	;wreg free
 23413                           
 23414                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 23415  01D5C8  0EB8               	movlw	184
 23416  01D5CA  6EE6               	movwf	postinc1,c
 23417  01D5CC  0E0B               	movlw	11
 23418  01D5CE  6EE6               	movwf	postinc1,c
 23419  01D5D0  0E07               	movlw	7
 23420  01D5D2  6EE6               	movwf	postinc1,c
 23421  01D5D4  ECBA  F00F         	call	_StartTimer	;wreg free
 23422                           
 23423                           ;mconfig.c: 64:   mode_lamp_bright();
 23424  01D5D8  ECEB  F014         	call	_mode_lamp_bright	;wreg free
 23425                           
 23426                           ;mconfig.c: 65:   update_lcd(1);
 23427  01D5DC  0E01               	movlw	1
 23428  01D5DE  6EE6               	movwf	postinc1,c
 23429  01D5E0  EC23  F0F6         	call	_update_lcd	;wreg free
 23430                           
 23431                           ;mconfig.c: 67:  } else {
 23432  01D5E4  D032               	goto	l1830
 23433  01D5E6                     l17380:
 23434                           
 23435                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 23436  01D5E6  0E09               	movlw	9
 23437  01D5E8  6EE6               	movwf	postinc1,c
 23438  01D5EA  EC27  F012         	call	_TimerDone	;wreg free
 23439  01D5EE  502A               	movf	btemp^0,w,c
 23440  01D5F0  B4D8               	btfsc	status,2,c
 23441  01D5F2  D02B               	goto	l1830
 23442                           
 23443                           ;mconfig.c: 69:    set_vterm(0);
 23444  01D5F4  0E00               	movlw	0
 23445  01D5F6  6EE6               	movwf	postinc1,c
 23446  01D5F8  EC1D  F014         	call	_set_vterm	;wreg free
 23447                           
 23448                           ;mconfig.c: 70:    V.help = 0;
 23449  01D5FC  0102               	movlb	2	; () banked
 23450  01D5FE  959F               	bcf	(_V+152)& (0+255),2,b	;volatile
 23451                           
 23452                           ; BSR set to: 2
 23453                           ;mconfig.c: 71:    set_display_info(display_help());
 23454  01D600  EC31  F015         	call	_display_help	;wreg free
 23455  01D604  502A               	movf	btemp^0,w,c
 23456  01D606  6EE6               	movwf	postinc1,c
 23457  01D608  EC2C  F014         	call	_set_display_info	;wreg free
 23458                           
 23459                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 23460  01D60C  0060  FA67  FFE6   	movff	_V+146,postinc1
 23461  01D612  0060  FA6B  FFE6   	movff	_V+147,postinc1
 23462  01D618  EC55  F014         	call	_mode_lamp_dim	;wreg free
 23463                           
 23464                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 23465  01D61C  0E0B               	movlw	11
 23466  01D61E  6EE6               	movwf	postinc1,c
 23467  01D620  EC27  F012         	call	_TimerDone	;wreg free
 23468  01D624  502A               	movf	btemp^0,w,c
 23469  01D626  B4D8               	btfsc	status,2,c
 23470  01D628  D010               	goto	l1830
 23471                           
 23472                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 23473  01D62A  0102               	movlb	2	; () banked
 23474  01D62C  51AF               	movf	(_V+168)& (0+255),w,b	;volatile
 23475  01D62E  A4D8               	btfss	status,2,c
 23476  01D630  D002               	goto	u16980
 23477  01D632  0E01               	movlw	1
 23478  01D634  D001               	goto	u16990
 23479  01D636                     u16980:
 23480  01D636  0E00               	movlw	0
 23481  01D638                     u16990:
 23482  01D638  6FAF               	movwf	(_V+168)& (0+255),b	;volatile
 23483                           
 23484                           ; BSR set to: 2
 23485                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 23486  01D63A  0EDC               	movlw	220
 23487  01D63C  6EE6               	movwf	postinc1,c
 23488  01D63E  0E05               	movlw	5
 23489  01D640  6EE6               	movwf	postinc1,c
 23490  01D642  0E0B               	movlw	11
 23491  01D644  6EE6               	movwf	postinc1,c
 23492  01D646  ECBA  F00F         	call	_StartTimer	;wreg free
 23493  01D64A                     l1830:
 23494                           
 23495                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 23496  01D64A  52E5               	movf	postdec1,f,c
 23497  01D64C  0012               	return		;funcret
 23498  01D64E                     __end_of_check_help:
 23499                           	opt callstack 0
 23500                           
 23501 ;; *************** function _vterm_dump *****************
 23502 ;; Defined at:
 23503 ;;		line 124 in file "mconfig.c"
 23504 ;; Parameters:    Size  Location     Type
 23505 ;;		None
 23506 ;; Auto vars:     Size  Location     Type
 23507 ;;		None
 23508 ;; Return value:  Size  Location     Type
 23509 ;;                  1  [STACK] void 
 23510 ;; Registers used:
 23511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23512 ;; Tracked objects:
 23513 ;;		On entry : 3F/2
 23514 ;;		On exit  : 0/0
 23515 ;;		Unchanged: 0/0
 23516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23521 ;;Total ram usage:        0 bytes
 23522 ;; Hardware stack levels used:    1
 23523 ;; Hardware stack levels required when called:   26
 23524 ;; This function calls:
 23525 ;;		_WaitMs
 23526 ;;		_eaDogM_WriteStringAtPos
 23527 ;;		_get_vterm_ptr
 23528 ;;		_sprintf
 23529 ;;		_wait_lcd_done
 23530 ;; This function is called by:
 23531 ;;		_check_help
 23532 ;; This function uses a reentrant model
 23533 ;;
 23534                           
 23535                           	psect	text77
 23536  01E0A4                     __ptext77:
 23537                           	opt callstack 0
 23538  01E0A4                     _vterm_dump:
 23539                           	opt callstack 3
 23540                           
 23541                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 23542                           
 23543                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23544                           ;incstack = 0
 23545  01E0A4  0E01               	movlw	1
 23546  01E0A6  6EE6               	movwf	postinc1,c
 23547  01E0A8  0E00               	movlw	0
 23548  01E0AA  6EE6               	movwf	postinc1,c
 23549  01E0AC  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 23550  01E0B0  0060  F0AB  FFE6   	movff	btemp,postinc1
 23551  01E0B6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23552  01E0BC  0E00               	movlw	0
 23553  01E0BE  6EE6               	movwf	postinc1,c
 23554  01E0C0  0E00               	movlw	0
 23555  01E0C2  6EE6               	movwf	postinc1,c
 23556  01E0C4  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 23557  01E0C8  0060  F0AB  FFE6   	movff	btemp,postinc1
 23558  01E0CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23559  01E0D4  0EA7               	movlw	low STR_81
 23560  01E0D6  6EE6               	movwf	postinc1,c
 23561  01E0D8  0EFF               	movlw	high STR_81
 23562  01E0DA  6EE6               	movwf	postinc1,c
 23563  01E0DC  0E08               	movlw	low (_V+1)
 23564  01E0DE  6EE6               	movwf	postinc1,c
 23565  01E0E0  0E02               	movlw	high (_V+1)
 23566  01E0E2  6EE6               	movwf	postinc1,c
 23567  01E0E4  0E08               	movlw	8
 23568  01E0E6  6EE6               	movwf	postinc1,c
 23569  01E0E8  EC71  F0FD         	call	_sprintf	;wreg free
 23570                           
 23571                           ; BSR set to: 0
 23572                           ;mconfig.c: 127:  wait_lcd_done();
 23573  01E0EC  ECE4  F014         	call	_wait_lcd_done	;wreg free
 23574                           
 23575                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 23576  01E0F0  0E08               	movlw	low (_V+1)
 23577  01E0F2  6EE6               	movwf	postinc1,c
 23578  01E0F4  0E02               	movlw	high (_V+1)
 23579  01E0F6  6EE6               	movwf	postinc1,c
 23580  01E0F8  0E00               	movlw	0
 23581  01E0FA  6EE6               	movwf	postinc1,c
 23582  01E0FC  0E00               	movlw	0
 23583  01E0FE  6EE6               	movwf	postinc1,c
 23584  01E100  EC30  F007         	call	_eaDogM_WriteStringAtPos	;wreg free
 23585                           
 23586                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 23587  01E104  0E01               	movlw	1
 23588  01E106  6EE6               	movwf	postinc1,c
 23589  01E108  0E01               	movlw	1
 23590  01E10A  6EE6               	movwf	postinc1,c
 23591  01E10C  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 23592  01E110  0060  F0AB  FFE6   	movff	btemp,postinc1
 23593  01E116  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23594  01E11C  0E00               	movlw	0
 23595  01E11E  6EE6               	movwf	postinc1,c
 23596  01E120  0E01               	movlw	1
 23597  01E122  6EE6               	movwf	postinc1,c
 23598  01E124  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 23599  01E128  0060  F0AB  FFE6   	movff	btemp,postinc1
 23600  01E12E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23601  01E134  0EA7               	movlw	low STR_81
 23602  01E136  6EE6               	movwf	postinc1,c
 23603  01E138  0EFF               	movlw	high STR_81
 23604  01E13A  6EE6               	movwf	postinc1,c
 23605  01E13C  0E08               	movlw	low (_V+1)
 23606  01E13E  6EE6               	movwf	postinc1,c
 23607  01E140  0E02               	movlw	high (_V+1)
 23608  01E142  6EE6               	movwf	postinc1,c
 23609  01E144  0E08               	movlw	8
 23610  01E146  6EE6               	movwf	postinc1,c
 23611  01E148  EC71  F0FD         	call	_sprintf	;wreg free
 23612                           
 23613                           ; BSR set to: 0
 23614                           ;mconfig.c: 130:  wait_lcd_done();
 23615  01E14C  ECE4  F014         	call	_wait_lcd_done	;wreg free
 23616                           
 23617                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 23618  01E150  0E08               	movlw	low (_V+1)
 23619  01E152  6EE6               	movwf	postinc1,c
 23620  01E154  0E02               	movlw	high (_V+1)
 23621  01E156  6EE6               	movwf	postinc1,c
 23622  01E158  0E00               	movlw	0
 23623  01E15A  6EE6               	movwf	postinc1,c
 23624  01E15C  0E01               	movlw	1
 23625  01E15E  6EE6               	movwf	postinc1,c
 23626  01E160  EC30  F007         	call	_eaDogM_WriteStringAtPos	;wreg free
 23627                           
 23628                           ;mconfig.c: 132:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 23629  01E164  0E01               	movlw	1
 23630  01E166  6EE6               	movwf	postinc1,c
 23631  01E168  0E02               	movlw	2
 23632  01E16A  6EE6               	movwf	postinc1,c
 23633  01E16C  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 23634  01E170  0060  F0AB  FFE6   	movff	btemp,postinc1
 23635  01E176  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23636  01E17C  0E00               	movlw	0
 23637  01E17E  6EE6               	movwf	postinc1,c
 23638  01E180  0E02               	movlw	2
 23639  01E182  6EE6               	movwf	postinc1,c
 23640  01E184  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 23641  01E188  0060  F0AB  FFE6   	movff	btemp,postinc1
 23642  01E18E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23643  01E194  0EA7               	movlw	low STR_81
 23644  01E196  6EE6               	movwf	postinc1,c
 23645  01E198  0EFF               	movlw	high STR_81
 23646  01E19A  6EE6               	movwf	postinc1,c
 23647  01E19C  0E08               	movlw	low (_V+1)
 23648  01E19E  6EE6               	movwf	postinc1,c
 23649  01E1A0  0E02               	movlw	high (_V+1)
 23650  01E1A2  6EE6               	movwf	postinc1,c
 23651  01E1A4  0E08               	movlw	8
 23652  01E1A6  6EE6               	movwf	postinc1,c
 23653  01E1A8  EC71  F0FD         	call	_sprintf	;wreg free
 23654                           
 23655                           ; BSR set to: 0
 23656                           ;mconfig.c: 133:  wait_lcd_done();
 23657  01E1AC  ECE4  F014         	call	_wait_lcd_done	;wreg free
 23658                           
 23659                           ;mconfig.c: 134:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 23660  01E1B0  0E08               	movlw	low (_V+1)
 23661  01E1B2  6EE6               	movwf	postinc1,c
 23662  01E1B4  0E02               	movlw	high (_V+1)
 23663  01E1B6  6EE6               	movwf	postinc1,c
 23664  01E1B8  0E00               	movlw	0
 23665  01E1BA  6EE6               	movwf	postinc1,c
 23666  01E1BC  0E02               	movlw	2
 23667  01E1BE  6EE6               	movwf	postinc1,c
 23668  01E1C0  EC30  F007         	call	_eaDogM_WriteStringAtPos	;wreg free
 23669                           
 23670                           ;mconfig.c: 135:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(3, 0), get_vterm_ptr(3,
      +                           1));
 23671  01E1C4  0E01               	movlw	1
 23672  01E1C6  6EE6               	movwf	postinc1,c
 23673  01E1C8  0E03               	movlw	3
 23674  01E1CA  6EE6               	movwf	postinc1,c
 23675  01E1CC  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 23676  01E1D0  0060  F0AB  FFE6   	movff	btemp,postinc1
 23677  01E1D6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23678  01E1DC  0E00               	movlw	0
 23679  01E1DE  6EE6               	movwf	postinc1,c
 23680  01E1E0  0E03               	movlw	3
 23681  01E1E2  6EE6               	movwf	postinc1,c
 23682  01E1E4  ECA5  F011         	call	_get_vterm_ptr	;wreg free
 23683  01E1E8  0060  F0AB  FFE6   	movff	btemp,postinc1
 23684  01E1EE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23685  01E1F4  0EA7               	movlw	low STR_81
 23686  01E1F6  6EE6               	movwf	postinc1,c
 23687  01E1F8  0EFF               	movlw	high STR_81
 23688  01E1FA  6EE6               	movwf	postinc1,c
 23689  01E1FC  0E08               	movlw	low (_V+1)
 23690  01E1FE  6EE6               	movwf	postinc1,c
 23691  01E200  0E02               	movlw	high (_V+1)
 23692  01E202  6EE6               	movwf	postinc1,c
 23693  01E204  0E08               	movlw	8
 23694  01E206  6EE6               	movwf	postinc1,c
 23695  01E208  EC71  F0FD         	call	_sprintf	;wreg free
 23696                           
 23697                           ; BSR set to: 0
 23698                           ;mconfig.c: 136:  wait_lcd_done();
 23699  01E20C  ECE4  F014         	call	_wait_lcd_done	;wreg free
 23700                           
 23701                           ;mconfig.c: 137:  eaDogM_WriteStringAtPos(3, 0, V.buf);
 23702  01E210  0E08               	movlw	low (_V+1)
 23703  01E212  6EE6               	movwf	postinc1,c
 23704  01E214  0E02               	movlw	high (_V+1)
 23705  01E216  6EE6               	movwf	postinc1,c
 23706  01E218  0E00               	movlw	0
 23707  01E21A  6EE6               	movwf	postinc1,c
 23708  01E21C  0E03               	movlw	3
 23709  01E21E  6EE6               	movwf	postinc1,c
 23710  01E220  EC30  F007         	call	_eaDogM_WriteStringAtPos	;wreg free
 23711                           
 23712                           ; BSR set to: 59
 23713                           ;mconfig.c: 138:  WaitMs(3000);
 23714  01E224  0EB8               	movlw	184
 23715  01E226  6EE6               	movwf	postinc1,c
 23716  01E228  0E0B               	movlw	11
 23717  01E22A  6EE6               	movwf	postinc1,c
 23718  01E22C  ECA9  F010         	call	_WaitMs	;wreg free
 23719                           
 23720                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 23721  01E230  0012               	return		;funcret
 23722  01E232                     __end_of_vterm_dump:
 23723                           	opt callstack 0
 23724                           
 23725 ;; *************** function _sprintf *****************
 23726 ;; Defined at:
 23727 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 23728 ;; Parameters:    Size  Location     Type
 23729 ;;  s               2  [STACK] PTR unsigned char 
 23730 ;;		 -> D.lcd(640), D(642), port_data(512), V(181), 
 23731 ;;  fmt             2  [STACK] PTR const unsigned char 
 23732 ;;		 -> STR_95(127), STR_93(3), STR_92(3), STR_91(21), 
 23733 ;;		 -> STR_90(21), STR_89(21), STR_88(21), STR_87(21), 
 23734 ;;		 -> STR_86(21), STR_85(26), STR_84(15), STR_83(15), 
 23735 ;;		 -> STR_82(15), STR_81(15), STR_80(10), STR_79(10), 
 23736 ;;		 -> STR_78(19), STR_77(19), STR_73(14), STR_72(28), 
 23737 ;;		 -> STR_71(28), STR_70(28), STR_69(22), STR_68(22), 
 23738 ;;		 -> STR_67(22), STR_66(22), STR_65(22), STR_64(22), 
 23739 ;;		 -> STR_63(22), STR_62(22), STR_61(22), STR_60(21), 
 23740 ;;		 -> STR_59(22), STR_58(22), STR_57(22), STR_56(22), 
 23741 ;;		 -> STR_55(22), STR_54(22), STR_53(24), STR_52(24), 
 23742 ;;		 -> STR_51(24), STR_50(30), STR_49(24), STR_48(24), 
 23743 ;;		 -> STR_47(23), STR_46(23), STR_45(23), STR_44(23), 
 23744 ;;		 -> STR_43(23), STR_42(23), STR_41(23), STR_40(23), 
 23745 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(23), 
 23746 ;;		 -> STR_35(18), STR_34(17), STR_33(17), STR_32(22), 
 23747 ;;		 -> STR_31(22), STR_30(22), STR_29(14), STR_28(14), 
 23748 ;;		 -> STR_27(27), STR_26(27), STR_25(23), STR_24(22), 
 23749 ;;		 -> STR_23(22), STR_22(22), STR_21(22), STR_20(23), 
 23750 ;;		 -> STR_19(23), STR_18(23), STR_17(26), STR_16(22), 
 23751 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
 23752 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 23753 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 23754 ;;		 -> STR_2(21), STR_1(21), 
 23755 ;; Auto vars:     Size  Location     Type
 23756 ;;  f               6  [STACK] struct _IO_FILE
 23757 ;;  ap              2  [STACK] PTR void [1]
 23758 ;;		 -> ?_printf(2), ?_sprintf(2), 
 23759 ;;  ret             2    0        int 
 23760 ;; Return value:  Size  Location     Type
 23761 ;;                  2  [STACK] int 
 23762 ;; Registers used:
 23763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23764 ;; Tracked objects:
 23765 ;;		On entry : 0/2
 23766 ;;		On exit  : 3F/0
 23767 ;;		Unchanged: 0/0
 23768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23773 ;;Total ram usage:        0 bytes
 23774 ;; Hardware stack levels used:    1
 23775 ;; Hardware stack levels required when called:   23
 23776 ;; This function calls:
 23777 ;;		_vfprintf
 23778 ;; This function is called by:
 23779 ;;		_main
 23780 ;;		_current_sensor_cal
 23781 ;;		_display_history
 23782 ;;		_check_help
 23783 ;;		_vterm_dump
 23784 ;;		_calc_bsoc
 23785 ;; This function uses a reentrant model
 23786 ;;
 23787                           
 23788                           	psect	text78
 23789  01FAE2                     __ptext78:
 23790                           	opt callstack 0
 23791  01FAE2                     _sprintf:
 23792                           	opt callstack 0
 23793                           
 23794                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 23795  01FAE2  0E08               	movlw	8
 23796  01FAE4  26E1               	addwf	fsr1l,f,c
 23797  01FAE6  0E00               	movlw	0
 23798  01FAE8  22E2               	addwfc	fsr1h,f,c
 23799                           
 23800                           ;incstack = 0
 23801 ;; hardware stack exceeded
 23802  01FAEA  0EFE               	movlw	254
 23803  01FAEC  6E34               	movwf	(btemp+10)^0,c
 23804  01FAEE  0EFF               	movlw	255
 23805  01FAF0  6E35               	movwf	(btemp+11)^0,c
 23806                           
 23807                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 23808  01FAF2  0EF5               	movlw	245
 23809  01FAF4  24E1               	addwf	fsr1l,w,c
 23810  01FAF6  6E32               	movwf	(btemp+8)^0,c
 23811  01FAF8  0EFF               	movlw	255
 23812  01FAFA  20E2               	addwfc	fsr1h,w,c
 23813  01FAFC  6E33               	movwf	(btemp+9)^0,c
 23814  01FAFE  5034               	movf	(btemp+10)^0,w,c
 23815  01FB00  2632               	addwf	(btemp+8)^0,f,c
 23816  01FB02  5035               	movf	(btemp+11)^0,w,c
 23817  01FB04  2233               	addwfc	(btemp+9)^0,f,c
 23818                           
 23819                           ;stkvar	_ap @ sp[(-8)+6]
 23820  01FB06  0EFF               	movlw	-1
 23821  01FB08  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 23822  01FB0E  0EFE               	movlw	-2
 23823  01FB10  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 23824                           
 23825                           ;stkvar	_s @ sp[(-8)+-3]
 23826  01FB16  0EF5               	movlw	-11
 23827  01FB18  006F FF8C  F034    	movff	plusw1,btemp+10
 23828  01FB1E  0EF6               	movlw	-10
 23829  01FB20  006F FF8C  F035    	movff	plusw1,btemp+11
 23830                           
 23831                           ;stkvar	_f @ sp[(-8)+0]
 23832  01FB26  0EF9               	movlw	-7
 23833  01FB28  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 23834  01FB2E  0EF8               	movlw	-8
 23835  01FB30  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 23836                           
 23837                           ;stkvar	_f @ sp[(-8)+0]
 23838  01FB36  0EFA               	movlw	250
 23839  01FB38  24E1               	addwf	fsr1l,w,c
 23840  01FB3A  6ED9               	movwf	fsr2l,c
 23841  01FB3C  0EFF               	movlw	255
 23842  01FB3E  20E2               	addwfc	fsr1h,w,c
 23843  01FB40  6EDA               	movwf	fsr2h,c
 23844  01FB42  0E00               	movlw	0
 23845  01FB44  6EDE               	movwf	postinc2,c
 23846  01FB46  0E00               	movlw	0
 23847  01FB48  6EDD               	movwf	postdec2,c
 23848                           
 23849                           ;stkvar	_f @ sp[(-8)+0]
 23850  01FB4A  0EFC               	movlw	252
 23851  01FB4C  24E1               	addwf	fsr1l,w,c
 23852  01FB4E  6ED9               	movwf	fsr2l,c
 23853  01FB50  0EFF               	movlw	255
 23854  01FB52  20E2               	addwfc	fsr1h,w,c
 23855  01FB54  6EDA               	movwf	fsr2h,c
 23856  01FB56  0E00               	movlw	0
 23857  01FB58  6EDE               	movwf	postinc2,c
 23858  01FB5A  0E00               	movlw	0
 23859  01FB5C  6EDD               	movwf	postdec2,c
 23860                           
 23861                           ;stkvar	_ap @ sp[(-8)+6]
 23862  01FB5E  0EFE               	movlw	254
 23863  01FB60  24E1               	addwf	fsr1l,w,c
 23864  01FB62  6E2A               	movwf	btemp^0,c
 23865  01FB64  0EFF               	movlw	255
 23866  01FB66  20E2               	addwfc	fsr1h,w,c
 23867  01FB68  6E2B               	movwf	(btemp+1)^0,c
 23868  01FB6A  0060  F0AB  FFE6   	movff	btemp,postinc1
 23869  01FB70  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23870                           
 23871                           ;stkvar	_fmt @ sp[(-10)+-5]
 23872  01FB76  0EF1               	movlw	-15
 23873  01FB78  006F FF8F FFE6     	movff	plusw1,postinc1
 23874  01FB7E  006F FF8F FFE6     	movff	plusw1,postinc1
 23875                           
 23876                           ;stkvar	_f @ sp[(-12)+0]
 23877  01FB84  0EF4               	movlw	244
 23878  01FB86  24E1               	addwf	fsr1l,w,c
 23879  01FB88  6E2A               	movwf	btemp^0,c
 23880  01FB8A  0EFF               	movlw	255
 23881  01FB8C  20E2               	addwfc	fsr1h,w,c
 23882  01FB8E  6E2B               	movwf	(btemp+1)^0,c
 23883  01FB90  0060  F0AB  FFE6   	movff	btemp,postinc1
 23884  01FB96  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23885  01FB9C  ECAD  F004         	call	_vfprintf	;wreg free
 23886                           
 23887                           ; BSR set to: 0
 23888                           ;stkvar	_f @ sp[(-8)+0]
 23889  01FBA0  0EFA               	movlw	250
 23890  01FBA2  24E1               	addwf	fsr1l,w,c
 23891  01FBA4  6ED9               	movwf	fsr2l,c
 23892  01FBA6  0EFF               	movlw	255
 23893  01FBA8  20E2               	addwfc	fsr1h,w,c
 23894  01FBAA  6EDA               	movwf	fsr2h,c
 23895  01FBAC  006F FF78  F034    	movff	postinc2,btemp+10
 23896  01FBB2  006F FF74  F035    	movff	postdec2,btemp+11
 23897                           
 23898                           ;stkvar	_s @ sp[(-8)+-3]
 23899  01FBB8  0EF5               	movlw	-11
 23900  01FBBA  006F FF8C  F032    	movff	plusw1,btemp+8
 23901  01FBC0  0EF6               	movlw	-10
 23902  01FBC2  006F FF8C  F033    	movff	plusw1,btemp+9
 23903  01FBC8  5034               	movf	(btemp+10)^0,w,c
 23904  01FBCA  2432               	addwf	(btemp+8)^0,w,c
 23905  01FBCC  6ED9               	movwf	fsr2l,c
 23906  01FBCE  5035               	movf	(btemp+11)^0,w,c
 23907  01FBD0  2033               	addwfc	(btemp+9)^0,w,c
 23908  01FBD2  6EDA               	movwf	fsr2h,c
 23909  01FBD4  0E00               	movlw	0
 23910  01FBD6  6EDF               	movwf	indf2,c
 23911                           
 23912                           ; BSR set to: 0
 23913                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 23914  01FBD8  0EF8               	movlw	248
 23915  01FBDA  26E1               	addwf	fsr1l,f,c
 23916  01FBDC  0EFF               	movlw	255
 23917  01FBDE  22E2               	addwfc	fsr1h,f,c
 23918  01FBE0  52E5               	movf	postdec1,f,c
 23919  01FBE2  50E7               	movf	indf1,w,c
 23920  01FBE4  5EE1               	subwf	fsr1l,f,c
 23921  01FBE6  0E00               	movlw	0
 23922  01FBE8  5AE2               	subwfb	fsr1h,f,c
 23923  01FBEA  0012               	return		;funcret
 23924  01FBEC                     __end_of_sprintf:
 23925                           	opt callstack 0
 23926                           
 23927 ;; *************** function _get_vterm_ptr *****************
 23928 ;; Defined at:
 23929 ;;		line 119 in file "mconfig.c"
 23930 ;; Parameters:    Size  Location     Type
 23931 ;;  line            1  [STACK] const unsigned char 
 23932 ;;  vterm           1  [STACK] const unsigned char 
 23933 ;; Auto vars:     Size  Location     Type
 23934 ;;		None
 23935 ;; Return value:  Size  Location     Type
 23936 ;;                  2  [STACK] PTR unsigned char 
 23937 ;; Registers used:
 23938 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 23939 ;; Tracked objects:
 23940 ;;		On entry : 0/2
 23941 ;;		On exit  : 0/0
 23942 ;;		Unchanged: 0/0
 23943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23948 ;;Total ram usage:        0 bytes
 23949 ;; Hardware stack levels used:    1
 23950 ;; Hardware stack levels required when called:   15
 23951 ;; This function calls:
 23952 ;;		Nothing
 23953 ;; This function is called by:
 23954 ;;		_main
 23955 ;;		_current_sensor_cal
 23956 ;;		_display_history
 23957 ;;		_check_help
 23958 ;;		_vterm_dump
 23959 ;; This function uses a reentrant model
 23960 ;;
 23961                           
 23962                           	psect	text79
 23963  00234A                     __ptext79:
 23964                           	opt callstack 0
 23965  00234A                     _get_vterm_ptr:
 23966                           	opt callstack 15
 23967                           
 23968                           ;mconfig.c: 119: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 120: {;mconfig.c: 121:  return D.lcd[vterm & 0x03][line & 0x03];
 23969                           ;stkvar	_vterm @ sp[(0)+-2]
 23970                           
 23971                           ; BSR set to: 0
 23972                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23973                           ;incstack = 0
 23974  00234A  0EFE               	movlw	-2
 23975  00234C  50E3               	movf	plusw1,w,c
 23976  00234E  0B03               	andlw	3
 23977  002350  0DA0               	mullw	160
 23978  002352  0E3F               	movlw	low _D
 23979  002354  6E2A               	movwf	btemp^0,c
 23980  002356  0E0A               	movlw	high _D
 23981  002358  6E2B               	movwf	(btemp+1)^0,c
 23982  00235A  50F3               	movf	243,w,c
 23983  00235C  262A               	addwf	btemp^0,f,c
 23984  00235E  50F4               	movf	244,w,c
 23985  002360  222B               	addwfc	(btemp+1)^0,f,c
 23986                           
 23987                           ;stkvar	_line @ sp[(0)+-1]
 23988  002362  0EFF               	movlw	-1
 23989  002364  50E3               	movf	plusw1,w,c
 23990  002366  0B03               	andlw	3
 23991  002368  0D28               	mullw	40
 23992  00236A  50F3               	movf	243,w,c
 23993  00236C  262A               	addwf	btemp^0,f,c
 23994  00236E  50F4               	movf	244,w,c
 23995  002370  222B               	addwfc	(btemp+1)^0,f,c
 23996                           
 23997                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 23998  002372  52E5               	movf	postdec1,f,c
 23999  002374  52E5               	movf	postdec1,f,c
 24000  002376  0012               	return		;funcret
 24001  002378                     __end_of_get_vterm_ptr:
 24002                           	opt callstack 0
 24003                           
 24004 ;; *************** function _WaitMs *****************
 24005 ;; Defined at:
 24006 ;;		line 32 in file "timers.c"
 24007 ;; Parameters:    Size  Location     Type
 24008 ;;  numMilliseco    2  [STACK] const unsigned short 
 24009 ;; Auto vars:     Size  Location     Type
 24010 ;;		None
 24011 ;; Return value:  Size  Location     Type
 24012 ;;                  1  [STACK] void 
 24013 ;; Registers used:
 24014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24015 ;; Tracked objects:
 24016 ;;		On entry : 0/2
 24017 ;;		On exit  : 0/0
 24018 ;;		Unchanged: 0/0
 24019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24024 ;;Total ram usage:        0 bytes
 24025 ;; Hardware stack levels used:    1
 24026 ;; Hardware stack levels required when called:   16
 24027 ;; This function calls:
 24028 ;;		_StartTimer
 24029 ;;		_TimerDone
 24030 ;; This function is called by:
 24031 ;;		_main
 24032 ;;		_current_sensor_cal
 24033 ;;		_display_history
 24034 ;;		_vterm_dump
 24035 ;; This function uses a reentrant model
 24036 ;;
 24037                           
 24038                           	psect	text80
 24039  002152                     __ptext80:
 24040                           	opt callstack 0
 24041  002152                     _WaitMs:
 24042                           	opt callstack 13
 24043                           
 24044                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 24045                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 24046                           
 24047                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24048                           ;incstack = 0
 24049  002152  0EFE               	movlw	-2
 24050  002154  006F FF8F FFE6     	movff	plusw1,postinc1
 24051  00215A  006F FF8F FFE6     	movff	plusw1,postinc1
 24052  002160  0E00               	movlw	0
 24053  002162  6EE6               	movwf	postinc1,c
 24054  002164  ECBA  F00F         	call	_StartTimer	;wreg free
 24055                           
 24056                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 24057  002168  D005               	goto	l12802
 24058  00216A                     l1761:
 24059                           
 24060                           ;timers.c: 36:   __nop();
 24061  00216A  F000               	nop	
 24062                           
 24063                           ;timers.c: 37:   __nop();
 24064  00216C  F000               	nop	
 24065                           
 24066                           ;timers.c: 38:   __nop();
 24067  00216E  F000               	nop	
 24068                           
 24069                           ;timers.c: 39:   __nop();
 24070  002170  F000               	nop	
 24071  002172  0004               	clrwdt		;# 
 24072  002174                     l12802:
 24073                           
 24074                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 24075  002174  0E00               	movlw	0
 24076  002176  6EE6               	movwf	postinc1,c
 24077  002178  EC27  F012         	call	_TimerDone	;wreg free
 24078  00217C  502A               	movf	btemp^0,w,c
 24079  00217E  B4D8               	btfsc	status,2,c
 24080  002180  D7F4               	goto	l1761
 24081                           
 24082                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 24083  002182  52E5               	movf	postdec1,f,c
 24084  002184  52E5               	movf	postdec1,f,c
 24085  002186  0012               	return		;funcret
 24086  002188                     __end_of_WaitMs:
 24087                           	opt callstack 0
 24088                           
 24089 ;; *************** function _update_lcd *****************
 24090 ;; Defined at:
 24091 ;;		line 85 in file "mconfig.c"
 24092 ;; Parameters:    Size  Location     Type
 24093 ;;  vterm           1  [STACK] unsigned char 
 24094 ;; Auto vars:     Size  Location     Type
 24095 ;;		None
 24096 ;; Return value:  Size  Location     Type
 24097 ;;                  1  [STACK] unsigned char 
 24098 ;; Registers used:
 24099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24100 ;; Tracked objects:
 24101 ;;		On entry : 0/0
 24102 ;;		On exit  : 0/0
 24103 ;;		Unchanged: 0/0
 24104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24109 ;;Total ram usage:        0 bytes
 24110 ;; Hardware stack levels used:    1
 24111 ;; Hardware stack levels required when called:   26
 24112 ;; This function calls:
 24113 ;;		_eaDogM_WriteStringAtPos
 24114 ;;		_wait_lcd_done
 24115 ;; This function is called by:
 24116 ;;		_main
 24117 ;;		_current_sensor_cal
 24118 ;;		_display_history
 24119 ;;		_check_help
 24120 ;; This function uses a reentrant model
 24121 ;;
 24122                           
 24123                           	psect	text81
 24124  01EC46                     __ptext81:
 24125                           	opt callstack 0
 24126  01EC46                     _update_lcd:
 24127                           	opt callstack 4
 24128                           
 24129                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 24130                           ;stkvar	_vterm @ sp[(0)+-1]
 24131                           
 24132                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24133                           ;incstack = 0
 24134  01EC46  0EFF               	movlw	-1
 24135  01EC48  006F FF8C  F02A    	movff	plusw1,btemp
 24136  01EC4E  0E03               	movlw	3
 24137  01EC50  162A               	andwf	btemp^0,f,c
 24138  01EC52  0EFF               	movlw	-1
 24139  01EC54  0060  F0AB  FFE3   	movff	btemp,plusw1
 24140                           
 24141                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 24142  01EC5A  EE23  F0BF         	lfsr	2,_D+640
 24143  01EC5E  A0DF               	btfss	indf2,0,c
 24144  01EC60  D004               	goto	l16910
 24145                           
 24146                           ;stkvar	_vterm @ sp[(0)+-1]
 24147  01EC62  0EFF               	movlw	-1
 24148  01EC64  50E3               	movf	plusw1,w,c
 24149  01EC66  B4D8               	btfsc	status,2,c
 24150  01EC68  D09C               	goto	l1837
 24151  01EC6A                     l16910:
 24152                           
 24153                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 24154                           ;stkvar	_vterm @ sp[(0)+-1]
 24155  01EC6A  0EFF               	movlw	-1
 24156  01EC6C  50E3               	movf	plusw1,w,c
 24157  01EC6E  0DA0               	mullw	160
 24158  01EC70  0E53               	movlw	low (_D+20)
 24159  01EC72  24F3               	addwf	243,w,c
 24160  01EC74  6ED9               	movwf	fsr2l,c
 24161  01EC76  0E0A               	movlw	high (_D+20)
 24162  01EC78  20F4               	addwfc	prodh,w,c
 24163  01EC7A  6EDA               	movwf	fsr2h,c
 24164  01EC7C  0E00               	movlw	0
 24165  01EC7E  6EDF               	movwf	indf2,c
 24166                           
 24167                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 24168                           ;stkvar	_vterm @ sp[(0)+-1]
 24169  01EC80  0EFF               	movlw	-1
 24170  01EC82  50E3               	movf	plusw1,w,c
 24171  01EC84  0DA0               	mullw	160
 24172  01EC86  0E7B               	movlw	low (_D+60)
 24173  01EC88  24F3               	addwf	243,w,c
 24174  01EC8A  6ED9               	movwf	fsr2l,c
 24175  01EC8C  0E0A               	movlw	high (_D+60)
 24176  01EC8E  20F4               	addwfc	prodh,w,c
 24177  01EC90  6EDA               	movwf	fsr2h,c
 24178  01EC92  0E00               	movlw	0
 24179  01EC94  6EDF               	movwf	indf2,c
 24180                           
 24181                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 24182                           ;stkvar	_vterm @ sp[(0)+-1]
 24183  01EC96  0EFF               	movlw	-1
 24184  01EC98  50E3               	movf	plusw1,w,c
 24185  01EC9A  0DA0               	mullw	160
 24186  01EC9C  0EA3               	movlw	low (_D+100)
 24187  01EC9E  24F3               	addwf	243,w,c
 24188  01ECA0  6ED9               	movwf	fsr2l,c
 24189  01ECA2  0E0A               	movlw	high (_D+100)
 24190  01ECA4  20F4               	addwfc	prodh,w,c
 24191  01ECA6  6EDA               	movwf	fsr2h,c
 24192  01ECA8  0E00               	movlw	0
 24193  01ECAA  6EDF               	movwf	indf2,c
 24194                           
 24195                           ;mconfig.c: 95:  D.lcd[vterm][3][20] = 0;
 24196                           ;stkvar	_vterm @ sp[(0)+-1]
 24197  01ECAC  0EFF               	movlw	-1
 24198  01ECAE  50E3               	movf	plusw1,w,c
 24199  01ECB0  0DA0               	mullw	160
 24200  01ECB2  0ECB               	movlw	low (_D+140)
 24201  01ECB4  24F3               	addwf	243,w,c
 24202  01ECB6  6ED9               	movwf	fsr2l,c
 24203  01ECB8  0E0A               	movlw	high (_D+140)
 24204  01ECBA  20F4               	addwfc	prodh,w,c
 24205  01ECBC  6EDA               	movwf	fsr2h,c
 24206  01ECBE  0E00               	movlw	0
 24207  01ECC0  6EDF               	movwf	indf2,c
 24208                           
 24209                           ;mconfig.c: 96:  wait_lcd_done();
 24210  01ECC2  ECE4  F014         	call	_wait_lcd_done	;wreg free
 24211                           
 24212                           ; BSR set to: 61
 24213                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 24214                           ;stkvar	_vterm @ sp[(0)+-1]
 24215  01ECC6  0EFF               	movlw	-1
 24216  01ECC8  50E3               	movf	plusw1,w,c
 24217  01ECCA  0DA0               	mullw	160
 24218  01ECCC  0E3F               	movlw	low _D
 24219  01ECCE  6E34               	movwf	(btemp+10)^0,c
 24220  01ECD0  0E0A               	movlw	high _D
 24221  01ECD2  6E35               	movwf	(btemp+11)^0,c
 24222  01ECD4  50F3               	movf	243,w,c
 24223  01ECD6  2634               	addwf	(btemp+10)^0,f,c
 24224  01ECD8  50F4               	movf	244,w,c
 24225  01ECDA  2235               	addwfc	(btemp+11)^0,f,c
 24226  01ECDC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24227  01ECE2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24228  01ECE8  0E00               	movlw	0
 24229  01ECEA  6EE6               	movwf	postinc1,c
 24230  01ECEC  0E00               	movlw	0
 24231  01ECEE  6EE6               	movwf	postinc1,c
 24232  01ECF0  EC30  F007         	call	_eaDogM_WriteStringAtPos	;wreg free
 24233                           
 24234                           ; BSR set to: 59
 24235                           ;mconfig.c: 98:  wait_lcd_done();
 24236  01ECF4  ECE4  F014         	call	_wait_lcd_done	;wreg free
 24237                           
 24238                           ; BSR set to: 61
 24239                           ;mconfig.c: 99:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 24240                           ;stkvar	_vterm @ sp[(0)+-1]
 24241  01ECF8  0EFF               	movlw	-1
 24242  01ECFA  50E3               	movf	plusw1,w,c
 24243  01ECFC  0DA0               	mullw	160
 24244  01ECFE  0E3F               	movlw	low _D
 24245  01ED00  6E34               	movwf	(btemp+10)^0,c
 24246  01ED02  0E0A               	movlw	high _D
 24247  01ED04  6E35               	movwf	(btemp+11)^0,c
 24248  01ED06  0E28               	movlw	40
 24249  01ED08  2634               	addwf	(btemp+10)^0,f,c
 24250  01ED0A  0E00               	movlw	0
 24251  01ED0C  2235               	addwfc	(btemp+11)^0,f,c
 24252  01ED0E  50F3               	movf	243,w,c
 24253  01ED10  2634               	addwf	(btemp+10)^0,f,c
 24254  01ED12  50F4               	movf	244,w,c
 24255  01ED14  2235               	addwfc	(btemp+11)^0,f,c
 24256  01ED16  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24257  01ED1C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24258  01ED22  0E00               	movlw	0
 24259  01ED24  6EE6               	movwf	postinc1,c
 24260  01ED26  0E01               	movlw	1
 24261  01ED28  6EE6               	movwf	postinc1,c
 24262  01ED2A  EC30  F007         	call	_eaDogM_WriteStringAtPos	;wreg free
 24263                           
 24264                           ; BSR set to: 59
 24265                           ;mconfig.c: 100:  wait_lcd_done();
 24266  01ED2E  ECE4  F014         	call	_wait_lcd_done	;wreg free
 24267                           
 24268                           ; BSR set to: 61
 24269                           ;mconfig.c: 101:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 24270                           ;stkvar	_vterm @ sp[(0)+-1]
 24271  01ED32  0EFF               	movlw	-1
 24272  01ED34  50E3               	movf	plusw1,w,c
 24273  01ED36  0DA0               	mullw	160
 24274  01ED38  0E3F               	movlw	low _D
 24275  01ED3A  6E34               	movwf	(btemp+10)^0,c
 24276  01ED3C  0E0A               	movlw	high _D
 24277  01ED3E  6E35               	movwf	(btemp+11)^0,c
 24278  01ED40  0E50               	movlw	80
 24279  01ED42  2634               	addwf	(btemp+10)^0,f,c
 24280  01ED44  0E00               	movlw	0
 24281  01ED46  2235               	addwfc	(btemp+11)^0,f,c
 24282  01ED48  50F3               	movf	243,w,c
 24283  01ED4A  2634               	addwf	(btemp+10)^0,f,c
 24284  01ED4C  50F4               	movf	244,w,c
 24285  01ED4E  2235               	addwfc	(btemp+11)^0,f,c
 24286  01ED50  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24287  01ED56  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24288  01ED5C  0E00               	movlw	0
 24289  01ED5E  6EE6               	movwf	postinc1,c
 24290  01ED60  0E02               	movlw	2
 24291  01ED62  6EE6               	movwf	postinc1,c
 24292  01ED64  EC30  F007         	call	_eaDogM_WriteStringAtPos	;wreg free
 24293                           
 24294                           ; BSR set to: 59
 24295                           ;mconfig.c: 102:  wait_lcd_done();
 24296  01ED68  ECE4  F014         	call	_wait_lcd_done	;wreg free
 24297                           
 24298                           ; BSR set to: 61
 24299                           ;mconfig.c: 103:  eaDogM_WriteStringAtPos(3, 0, D.lcd[vterm][3]);
 24300                           ;stkvar	_vterm @ sp[(0)+-1]
 24301  01ED6C  0EFF               	movlw	-1
 24302  01ED6E  50E3               	movf	plusw1,w,c
 24303  01ED70  0DA0               	mullw	160
 24304  01ED72  0E3F               	movlw	low _D
 24305  01ED74  6E34               	movwf	(btemp+10)^0,c
 24306  01ED76  0E0A               	movlw	high _D
 24307  01ED78  6E35               	movwf	(btemp+11)^0,c
 24308  01ED7A  0E78               	movlw	120
 24309  01ED7C  2634               	addwf	(btemp+10)^0,f,c
 24310  01ED7E  0E00               	movlw	0
 24311  01ED80  2235               	addwfc	(btemp+11)^0,f,c
 24312  01ED82  50F3               	movf	243,w,c
 24313  01ED84  2634               	addwf	(btemp+10)^0,f,c
 24314  01ED86  50F4               	movf	244,w,c
 24315  01ED88  2235               	addwfc	(btemp+11)^0,f,c
 24316  01ED8A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24317  01ED90  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24318  01ED96  0E00               	movlw	0
 24319  01ED98  6EE6               	movwf	postinc1,c
 24320  01ED9A  0E03               	movlw	3
 24321  01ED9C  6EE6               	movwf	postinc1,c
 24322  01ED9E  EC30  F007         	call	_eaDogM_WriteStringAtPos	;wreg free
 24323  01EDA2                     l1837:
 24324                           
 24325                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 24326  01EDA2  52E5               	movf	postdec1,f,c
 24327  01EDA4  0012               	return		;funcret
 24328  01EDA6                     __end_of_update_lcd:
 24329                           	opt callstack 0
 24330                           
 24331 ;; *************** function _eaDogM_WriteStringAtPos *****************
 24332 ;; Defined at:
 24333 ;;		line 195 in file "eadog.c"
 24334 ;; Parameters:    Size  Location     Type
 24335 ;;  r               1  [STACK] const unsigned char 
 24336 ;;  c               1  [STACK] const unsigned char 
 24337 ;;  strPtr          2  [STACK] PTR unsigned char 
 24338 ;;		 -> D.lcd(640), D(642), V(181), 
 24339 ;; Auto vars:     Size  Location     Type
 24340 ;;  row             1  [STACK] unsigned char 
 24341 ;; Return value:  Size  Location     Type
 24342 ;;                  1  [STACK] void 
 24343 ;; Registers used:
 24344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24345 ;; Tracked objects:
 24346 ;;		On entry : 3F/3D
 24347 ;;		On exit  : 3F/3B
 24348 ;;		Unchanged: 0/0
 24349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24354 ;;Total ram usage:        0 bytes
 24355 ;; Hardware stack levels used:    1
 24356 ;; Hardware stack levels required when called:   25
 24357 ;; This function calls:
 24358 ;;		_eaDogM_WriteString
 24359 ;;		_send_lcd_cmd_dma
 24360 ;;		_send_lcd_data_dma
 24361 ;;		_wait_lcd_done
 24362 ;; This function is called by:
 24363 ;;		_update_lcd
 24364 ;;		_vterm_dump
 24365 ;; This function uses a reentrant model
 24366 ;;
 24367                           
 24368                           	psect	text82
 24369  000E60                     __ptext82:
 24370                           	opt callstack 0
 24371  000E60                     _eaDogM_WriteStringAtPos:
 24372                           	opt callstack 0
 24373                           
 24374                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24375  000E60  52E6               	movf	postinc1,f,c
 24376                           
 24377                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 24378                           
 24379                           ;incstack = 0
 24380  000E62  D013               	goto	l16856
 24381  000E64                     l16844:
 24382                           
 24383                           ;eadog.c: 201:   row = 0x40;
 24384                           ;stkvar	_row @ sp[(-1)+0]
 24385  000E64  0EFF               	movlw	-1
 24386  000E66  6AE3               	clrf	plusw1,c
 24387  000E68  8CE3               	bsf	plusw1,6,c
 24388                           
 24389                           ;eadog.c: 202:   break;
 24390  000E6A  D025               	goto	l16858
 24391  000E6C                     l16846:
 24392                           
 24393                           ;eadog.c: 204:   row = 0x14;
 24394                           ;stkvar	_row @ sp[(-1)+0]
 24395  000E6C  0EFF               	movlw	-1
 24396  000E6E  6AE3               	clrf	plusw1,c
 24397  000E70  84E3               	bsf	plusw1,2,c
 24398  000E72  88E3               	bsf	plusw1,4,c	;indir
 24399                           
 24400                           ;eadog.c: 205:   break;
 24401  000E74  D020               	goto	l16858
 24402  000E76                     l16848:
 24403                           
 24404                           ;eadog.c: 207:   row = 0x54;
 24405  000E76  0E54               	movlw	84
 24406  000E78  6E35               	movwf	(btemp+11)^0,c
 24407                           
 24408                           ;stkvar	_row @ sp[(-1)+0]
 24409  000E7A  0EFF               	movlw	-1
 24410  000E7C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 24411                           
 24412                           ;eadog.c: 208:   break;
 24413  000E82  D019               	goto	l16858
 24414  000E84                     l16850:
 24415                           
 24416                           ;eadog.c: 210:   row = 0x00;
 24417                           ;stkvar	_row @ sp[(-1)+0]
 24418  000E84  0EFF               	movlw	-1
 24419  000E86  6AE3               	clrf	plusw1,c
 24420                           
 24421                           ;eadog.c: 211:   break;
 24422  000E88  D016               	goto	l16858
 24423  000E8A                     l16856:
 24424                           
 24425                           ;stkvar	_r @ sp[(-1)+-1]
 24426  000E8A  0EFE               	movlw	-2
 24427  000E8C  50E3               	movf	plusw1,w,c
 24428  000E8E  6E34               	movwf	(btemp+10)^0,c
 24429  000E90  6A35               	clrf	(btemp+11)^0,c
 24430                           
 24431                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24432                           ; Switch size 1, requested type "simple"
 24433                           ; Number of cases is 1, Range of values is 0 to 0
 24434                           ; switch strategies available:
 24435                           ; Name         Instructions Cycles
 24436                           ; simple_byte            4     3 (average)
 24437                           ;	Chosen strategy is simple_byte
 24438  000E92  5035               	movf	(btemp+11)^0,w,c
 24439  000E94  0A00               	xorlw	0	; case 0
 24440  000E96  A4D8               	btfss	status,2,c
 24441  000E98  D7E5               	goto	l16844
 24442                           
 24443                           ; Switch size 1, requested type "simple"
 24444                           ; Number of cases is 4, Range of values is 0 to 3
 24445                           ; switch strategies available:
 24446                           ; Name         Instructions Cycles
 24447                           ; simple_byte           13     7 (average)
 24448                           ;	Chosen strategy is simple_byte
 24449  000E9A  5034               	movf	(btemp+10)^0,w,c
 24450  000E9C  0A00               	xorlw	0	; case 0
 24451  000E9E  B4D8               	btfsc	status,2,c
 24452  000EA0  D7E1               	goto	l16844
 24453  000EA2  0A01               	xorlw	1	; case 1
 24454  000EA4  B4D8               	btfsc	status,2,c
 24455  000EA6  D7E2               	goto	l16846
 24456  000EA8  0A03               	xorlw	3	; case 2
 24457  000EAA  B4D8               	btfsc	status,2,c
 24458  000EAC  D7E4               	goto	l16848
 24459  000EAE  0A01               	xorlw	1	; case 3
 24460  000EB0  B4D8               	btfsc	status,2,c
 24461  000EB2  D7E8               	goto	l16850
 24462  000EB4  D7D7               	goto	l16844
 24463  000EB6                     l16858:
 24464                           
 24465                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 24466  000EB6  0E45               	movlw	69
 24467  000EB8  6EE6               	movwf	postinc1,c
 24468  000EBA  EC0E  F014         	call	_send_lcd_cmd_dma	;wreg free
 24469                           
 24470                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 24471                           ;stkvar	_c @ sp[(-1)+-2]
 24472  000EBE  0EFD               	movlw	-3
 24473  000EC0  006F FF8C  F035    	movff	plusw1,btemp+11
 24474                           
 24475                           ;stkvar	_row @ sp[(-1)+0]
 24476  000EC6  0EFF               	movlw	-1
 24477  000EC8  50E3               	movf	plusw1,w,c
 24478  000ECA  2435               	addwf	(btemp+11)^0,w,c
 24479  000ECC  6EE6               	movwf	postinc1,c
 24480  000ECE  ECCE  F00E         	call	_send_lcd_data_dma	;wreg free
 24481                           
 24482                           ; BSR set to: 59
 24483                           ;eadog.c: 218:  wait_lcd_done();
 24484  000ED2  ECE4  F014         	call	_wait_lcd_done	;wreg free
 24485                           
 24486                           ; BSR set to: 61
 24487                           ;eadog.c: 219:  eaDogM_WriteString(strPtr);
 24488                           ;stkvar	_strPtr @ sp[(-1)+-4]
 24489  000ED6  0EFB               	movlw	-5
 24490  000ED8  006F FF8F FFE6     	movff	plusw1,postinc1
 24491  000EDE  006F FF8F FFE6     	movff	plusw1,postinc1
 24492  000EE4  EC58  F005         	call	_eaDogM_WriteString	;wreg free
 24493                           
 24494                           ; BSR set to: 59
 24495                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 24496  000EE8  0EFB               	movlw	251
 24497  000EEA  26E1               	addwf	fsr1l,f,c
 24498  000EEC  0EFF               	movlw	255
 24499  000EEE  22E2               	addwfc	fsr1h,f,c
 24500  000EF0  0012               	return		;funcret
 24501  000EF2                     __end_of_eaDogM_WriteStringAtPos:
 24502                           	opt callstack 0
 24503                           
 24504 ;; *************** function _send_lcd_cmd_dma *****************
 24505 ;; Defined at:
 24506 ;;		line 171 in file "eadog.c"
 24507 ;; Parameters:    Size  Location     Type
 24508 ;;  strPtr          1  [STACK] const unsigned char 
 24509 ;; Auto vars:     Size  Location     Type
 24510 ;;		None
 24511 ;; Return value:  Size  Location     Type
 24512 ;;                  1  [STACK] void 
 24513 ;; Registers used:
 24514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 24515 ;; Tracked objects:
 24516 ;;		On entry : 0/3D
 24517 ;;		On exit  : 3F/3D
 24518 ;;		Unchanged: 0/0
 24519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24524 ;;Total ram usage:        0 bytes
 24525 ;; Hardware stack levels used:    1
 24526 ;; Hardware stack levels required when called:   18
 24527 ;; This function calls:
 24528 ;;		_send_lcd_data_dma
 24529 ;;		_wait_lcd_done
 24530 ;; This function is called by:
 24531 ;;		_eaDogM_WriteStringAtPos
 24532 ;;		_eaDogM_WriteCommand
 24533 ;; This function uses a reentrant model
 24534 ;;
 24535                           
 24536                           	psect	text83
 24537  00281C                     __ptext83:
 24538                           	opt callstack 0
 24539  00281C                     _send_lcd_cmd_dma:
 24540                           	opt callstack 10
 24541                           
 24542                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 24543                           
 24544                           ; BSR set to: 59
 24545                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24546                           ;incstack = 0
 24547  00281C  0EFE               	movlw	254
 24548  00281E  6EE6               	movwf	postinc1,c
 24549  002820  ECCE  F00E         	call	_send_lcd_data_dma	;wreg free
 24550                           
 24551                           ; BSR set to: 59
 24552                           ;eadog.c: 174:  wait_lcd_done();
 24553  002824  ECE4  F014         	call	_wait_lcd_done	;wreg free
 24554                           
 24555                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 24556                           ;stkvar	_strPtr @ sp[(0)+-1]
 24557  002828  0EFF               	movlw	-1
 24558  00282A  50E3               	movf	plusw1,w,c
 24559  00282C  6EE6               	movwf	postinc1,c
 24560  00282E  ECCE  F00E         	call	_send_lcd_data_dma	;wreg free
 24561                           
 24562                           ; BSR set to: 59
 24563                           ;eadog.c: 176:  wait_lcd_done();
 24564  002832  ECE4  F014         	call	_wait_lcd_done	;wreg free
 24565                           
 24566                           ; BSR set to: 61
 24567                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 24568  002836  52E5               	movf	postdec1,f,c
 24569  002838  0012               	return		;funcret
 24570  00283A                     __end_of_send_lcd_cmd_dma:
 24571                           	opt callstack 0
 24572                           
 24573 ;; *************** function _wait_lcd_done *****************
 24574 ;; Defined at:
 24575 ;;		line 443 in file "eadog.c"
 24576 ;; Parameters:    Size  Location     Type
 24577 ;;		None
 24578 ;; Auto vars:     Size  Location     Type
 24579 ;;		None
 24580 ;; Return value:  Size  Location     Type
 24581 ;;                  1  [STACK] void 
 24582 ;; Registers used:
 24583 ;;		None
 24584 ;; Tracked objects:
 24585 ;;		On entry : 0/2
 24586 ;;		On exit  : 3F/3D
 24587 ;;		Unchanged: 0/0
 24588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24593 ;;Total ram usage:        0 bytes
 24594 ;; Hardware stack levels used:    1
 24595 ;; Hardware stack levels required when called:   15
 24596 ;; This function calls:
 24597 ;;		Nothing
 24598 ;; This function is called by:
 24599 ;;		_main
 24600 ;;		_send_lcd_cmd_dma
 24601 ;;		_eaDogM_WriteStringAtPos
 24602 ;;		_update_lcd
 24603 ;;		_vterm_dump
 24604 ;; This function uses a reentrant model
 24605 ;;
 24606                           
 24607                           	psect	text84
 24608  0029C8                     __ptext84:
 24609                           	opt callstack 0
 24610  0029C8                     _wait_lcd_done:
 24611                           	opt callstack 15
 24612                           
 24613                           ;eadog.c: 445:  while (spi_link.LCD_DATA);
 24614                           
 24615                           ; BSR set to: 61
 24616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24617                           ;incstack = 0
 24618  0029C8  0100               	movlb	0	; () banked
 24619  0029CA  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 24620  0029CC  D7FD               	goto	_wait_lcd_done
 24621  0029CE                     u10860:
 24622  0029CE  013D               	movlb	61	; () banked
 24623  0029D0  BB17               	btfsc	23,5,b	;volatile
 24624  0029D2  0012               	return	
 24625  0029D4  D7FC               	goto	u10860
 24626  0029D6                     __end_of_wait_lcd_done:
 24627                           	opt callstack 0
 24628                           
 24629 ;; *************** function _send_lcd_data_dma *****************
 24630 ;; Defined at:
 24631 ;;		line 182 in file "eadog.c"
 24632 ;; Parameters:    Size  Location     Type
 24633 ;;  strPtr          1  [STACK] const unsigned char 
 24634 ;; Auto vars:     Size  Location     Type
 24635 ;;		None
 24636 ;; Return value:  Size  Location     Type
 24637 ;;                  1  [STACK] void 
 24638 ;; Registers used:
 24639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 24640 ;; Tracked objects:
 24641 ;;		On entry : 0/3D
 24642 ;;		On exit  : 3F/3B
 24643 ;;		Unchanged: 0/0
 24644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24649 ;;Total ram usage:        0 bytes
 24650 ;; Hardware stack levels used:    1
 24651 ;; Hardware stack levels required when called:   17
 24652 ;; This function calls:
 24653 ;;		_ringBufS_flush
 24654 ;;		_ringBufS_put_dma
 24655 ;;		_start_lcd
 24656 ;;		_wait_lcd_set
 24657 ;; This function is called by:
 24658 ;;		_send_lcd_cmd_dma
 24659 ;;		_eaDogM_WriteStringAtPos
 24660 ;; This function uses a reentrant model
 24661 ;;
 24662                           
 24663                           	psect	text85
 24664  001D9C                     __ptext85:
 24665                           	opt callstack 0
 24666  001D9C                     _send_lcd_data_dma:
 24667                           	opt callstack 11
 24668                           
 24669                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 24670                           
 24671                           ; BSR set to: 61
 24672                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24673                           ;incstack = 0
 24674  001D9C  EC42  F015         	call	_wait_lcd_set	;wreg free
 24675                           
 24676                           ; BSR set to: 0
 24677                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 24678  001DA0  0E00               	movlw	0
 24679  001DA2  6EE6               	movwf	postinc1,c
 24680  001DA4  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 24681  001DAA  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 24682  001DB0  EC79  F007         	call	_ringBufS_flush	;wreg free
 24683  001DB4  94BC               	bcf	188,2,c	;volatile
 24684                           
 24685                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 24686  001DB6  013B               	movlb	59	; () banked
 24687  001DB8  9FFC               	bcf	252,7,b	;volatile
 24688                           
 24689                           ; BSR set to: 59
 24690                           ;eadog.c: 189:  DMA1SSZ = 1;
 24691  001DBA  0E00               	movlw	0
 24692  001DBC  6FF8               	movwf	248,b	;volatile
 24693  001DBE  0E01               	movlw	1
 24694  001DC0  6FF7               	movwf	247,b	;volatile
 24695                           
 24696                           ; BSR set to: 59
 24697                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 24698  001DC2  8FFC               	bsf	252,7,b	;volatile
 24699                           
 24700                           ; BSR set to: 59
 24701                           ;eadog.c: 191:  ringBufS_put_dma(spi_link.tx1a, strPtr);
 24702                           ;stkvar	_strPtr @ sp[(0)+-1]
 24703  001DC4  0EFF               	movlw	-1
 24704  001DC6  50E3               	movf	plusw1,w,c
 24705  001DC8  6EE6               	movwf	postinc1,c
 24706  001DCA  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 24707  001DD0  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 24708  001DD6  EC03  F005         	call	_ringBufS_put_dma	;wreg free
 24709                           
 24710                           ;eadog.c: 192:  start_lcd();
 24711  001DDA  EC45  F015         	call	_start_lcd	;wreg free
 24712                           
 24713                           ; BSR set to: 59
 24714                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 24715  001DDE  52E5               	movf	postdec1,f,c
 24716  001DE0  0012               	return		;funcret
 24717  001DE2                     __end_of_send_lcd_data_dma:
 24718                           	opt callstack 0
 24719                           
 24720 ;; *************** function _eaDogM_WriteString *****************
 24721 ;; Defined at:
 24722 ;;		line 151 in file "eadog.c"
 24723 ;; Parameters:    Size  Location     Type
 24724 ;;  strPtr          2  [STACK] PTR unsigned char 
 24725 ;;		 -> D.lcd(640), D(642), V(181), 
 24726 ;; Auto vars:     Size  Location     Type
 24727 ;;		None
 24728 ;; Return value:  Size  Location     Type
 24729 ;;                  1  [STACK] void 
 24730 ;; Registers used:
 24731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24732 ;; Tracked objects:
 24733 ;;		On entry : 3F/3D
 24734 ;;		On exit  : 3F/3B
 24735 ;;		Unchanged: 0/0
 24736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24741 ;;Total ram usage:        0 bytes
 24742 ;; Hardware stack levels used:    1
 24743 ;; Hardware stack levels required when called:   24
 24744 ;; This function calls:
 24745 ;;		_printf
 24746 ;;		_ringBufS_flush
 24747 ;;		_start_lcd
 24748 ;;		_strlen
 24749 ;;		_wait_lcd_set
 24750 ;; This function is called by:
 24751 ;;		_eaDogM_WriteStringAtPos
 24752 ;; This function uses a reentrant model
 24753 ;;
 24754                           
 24755                           	psect	text86
 24756  000AB0                     __ptext86:
 24757                           	opt callstack 0
 24758  000AB0                     _eaDogM_WriteString:
 24759                           	opt callstack 4
 24760                           
 24761                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 24762                           
 24763                           ; BSR set to: 59
 24764                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24765                           ;incstack = 0
 24766  000AB0  EC42  F015         	call	_wait_lcd_set	;wreg free
 24767                           
 24768                           ; BSR set to: 0
 24769                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 24770  000AB4  0E00               	movlw	0
 24771  000AB6  6EE6               	movwf	postinc1,c
 24772  000AB8  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 24773  000ABE  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 24774  000AC4  EC79  F007         	call	_ringBufS_flush	;wreg free
 24775  000AC8  94BC               	bcf	188,2,c	;volatile
 24776                           
 24777                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 24778                           ;stkvar	_strPtr @ sp[(0)+-2]
 24779  000ACA  0EFE               	movlw	-2
 24780  000ACC  006F FF8F FFE6     	movff	plusw1,postinc1
 24781  000AD2  006F FF8F FFE6     	movff	plusw1,postinc1
 24782  000AD8  ECFD  F005         	call	_strlen	;wreg free
 24783  000ADC  502B               	movf	(btemp+1)^0,w,c
 24784  000ADE  E104               	bnz	u16130
 24785  000AE0  0E41               	movlw	65
 24786  000AE2  5C2A               	subwf	btemp^0,w,c
 24787  000AE4  A0D8               	btfss	status,0,c
 24788  000AE6  D010               	goto	l16588
 24789  000AE8                     u16130:
 24790                           
 24791                           ;stkvar	_strPtr @ sp[(0)+-2]
 24792  000AE8  0EFE               	movlw	-2
 24793  000AEA  006F FF8C  F034    	movff	plusw1,btemp+10
 24794  000AF0  0EFF               	movlw	-1
 24795  000AF2  006F FF8C  F035    	movff	plusw1,btemp+11
 24796  000AF8  0E40               	movlw	64
 24797  000AFA  2434               	addwf	(btemp+10)^0,w,c
 24798  000AFC  6ED9               	movwf	fsr2l,c
 24799  000AFE  0E00               	movlw	0
 24800  000B00  2035               	addwfc	(btemp+11)^0,w,c
 24801  000B02  6EDA               	movwf	fsr2h,c
 24802  000B04  0E00               	movlw	0
 24803  000B06  6EDF               	movwf	indf2,c
 24804  000B08                     l16588:
 24805                           
 24806                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 24807  000B08  013B               	movlb	59	; () banked
 24808  000B0A  9FFC               	bcf	252,7,b	;volatile
 24809                           
 24810                           ; BSR set to: 59
 24811                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 24812                           ;stkvar	_strPtr @ sp[(0)+-2]
 24813  000B0C  0EFE               	movlw	-2
 24814  000B0E  006F FF8F FFE6     	movff	plusw1,postinc1
 24815  000B14  006F FF8F FFE6     	movff	plusw1,postinc1
 24816  000B1A  ECFD  F005         	call	_strlen	;wreg free
 24817  000B1E  0060  F0AB  FBF7   	movff	btemp,15351	;volatile
 24818  000B24  0060  F0AF  FBF8   	movff	btemp+1,15352	;volatile
 24819                           
 24820                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 24821  000B2A  013B               	movlb	59	; () banked
 24822  000B2C  8FFC               	bsf	252,7,b	;volatile
 24823                           
 24824                           ; BSR set to: 59
 24825                           ;eadog.c: 161:  printf("%s", strPtr);
 24826                           ;stkvar	_strPtr @ sp[(0)+-2]
 24827  000B2E  0EFE               	movlw	-2
 24828  000B30  006F FF8F FFE6     	movff	plusw1,postinc1
 24829  000B36  006F FF8F FFE6     	movff	plusw1,postinc1
 24830  000B3C  0EFC               	movlw	low STR_74
 24831  000B3E  6EE6               	movwf	postinc1,c
 24832  000B40  0EFF               	movlw	high STR_74
 24833  000B42  6EE6               	movwf	postinc1,c
 24834  000B44  0E04               	movlw	4
 24835  000B46  6EE6               	movwf	postinc1,c
 24836  000B48  EC2B  F00C         	call	_printf	;wreg free
 24837                           
 24838                           ; BSR set to: 0
 24839                           ;eadog.c: 162:  start_lcd();
 24840  000B4C  EC45  F015         	call	_start_lcd	;wreg free
 24841                           
 24842                           ; BSR set to: 59
 24843                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 24844  000B50  52E5               	movf	postdec1,f,c
 24845  000B52  52E5               	movf	postdec1,f,c
 24846  000B54  0012               	return		;funcret
 24847  000B56                     __end_of_eaDogM_WriteString:
 24848                           	opt callstack 0
 24849                           
 24850 ;; *************** function _wait_lcd_set *****************
 24851 ;; Defined at:
 24852 ;;		line 433 in file "eadog.c"
 24853 ;; Parameters:    Size  Location     Type
 24854 ;;		None
 24855 ;; Auto vars:     Size  Location     Type
 24856 ;;		None
 24857 ;; Return value:  Size  Location     Type
 24858 ;;                  1  [STACK] void 
 24859 ;; Registers used:
 24860 ;;		None
 24861 ;; Tracked objects:
 24862 ;;		On entry : 0/3D
 24863 ;;		On exit  : 3F/0
 24864 ;;		Unchanged: 0/0
 24865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24870 ;;Total ram usage:        0 bytes
 24871 ;; Hardware stack levels used:    1
 24872 ;; Hardware stack levels required when called:   15
 24873 ;; This function calls:
 24874 ;;		Nothing
 24875 ;; This function is called by:
 24876 ;;		_eaDogM_WriteString
 24877 ;;		_send_lcd_data_dma
 24878 ;; This function uses a reentrant model
 24879 ;;
 24880                           
 24881                           	psect	text87
 24882  002A84                     __ptext87:
 24883                           	opt callstack 0
 24884  002A84                     _wait_lcd_set:
 24885                           	opt callstack 12
 24886                           
 24887                           ;eadog.c: 435:  spi_link.LCD_DATA = 1;
 24888                           
 24889                           ; BSR set to: 59
 24890                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24891                           ;incstack = 0
 24892  002A84  0100               	movlb	0	; () banked
 24893  002A86  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 24894                           
 24895                           ; BSR set to: 0
 24896                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24897  002A88  0012               	return		;funcret
 24898  002A8A                     __end_of_wait_lcd_set:
 24899                           	opt callstack 0
 24900                           
 24901 ;; *************** function _start_lcd *****************
 24902 ;; Defined at:
 24903 ;;		line 428 in file "eadog.c"
 24904 ;; Parameters:    Size  Location     Type
 24905 ;;		None
 24906 ;; Auto vars:     Size  Location     Type
 24907 ;;		None
 24908 ;; Return value:  Size  Location     Type
 24909 ;;                  1  [STACK] void 
 24910 ;; Registers used:
 24911 ;;		None
 24912 ;; Tracked objects:
 24913 ;;		On entry : 0/3B
 24914 ;;		On exit  : 3F/3B
 24915 ;;		Unchanged: 0/0
 24916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24921 ;;Total ram usage:        0 bytes
 24922 ;; Hardware stack levels used:    1
 24923 ;; Hardware stack levels required when called:   15
 24924 ;; This function calls:
 24925 ;;		Nothing
 24926 ;; This function is called by:
 24927 ;;		_eaDogM_WriteString
 24928 ;;		_send_lcd_data_dma
 24929 ;; This function uses a reentrant model
 24930 ;;
 24931                           
 24932                           	psect	text88
 24933  002A8A                     __ptext88:
 24934                           	opt callstack 0
 24935  002A8A                     _start_lcd:
 24936                           	opt callstack 12
 24937                           
 24938                           ;eadog.c: 430:  DMA1CON0bits.DMA1SIRQEN = 1;
 24939                           
 24940                           ; BSR set to: 0
 24941                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24942                           ;incstack = 0
 24943  002A8A  013B               	movlb	59	; () banked
 24944  002A8C  8DFC               	bsf	252,6,b	;volatile
 24945                           
 24946                           ; BSR set to: 59
 24947                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 24948  002A8E  0012               	return		;funcret
 24949  002A90                     __end_of_start_lcd:
 24950                           	opt callstack 0
 24951                           
 24952 ;; *************** function _ringBufS_flush *****************
 24953 ;; Defined at:
 24954 ;;		line 76 in file "ringbufs.c"
 24955 ;; Parameters:    Size  Location     Type
 24956 ;;  _this           2  [STACK] PTR struct ringBufS_t
 24957 ;;		 -> ring_buf1(67), 
 24958 ;;  clearBuffer     1  [STACK] const char 
 24959 ;; Auto vars:     Size  Location     Type
 24960 ;;		None
 24961 ;; Return value:  Size  Location     Type
 24962 ;;                  1  [STACK] void 
 24963 ;; Registers used:
 24964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 24965 ;; Tracked objects:
 24966 ;;		On entry : 3F/0
 24967 ;;		On exit  : 0/0
 24968 ;;		Unchanged: 0/0
 24969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24974 ;;Total ram usage:        0 bytes
 24975 ;; Hardware stack levels used:    1
 24976 ;; Hardware stack levels required when called:   16
 24977 ;; This function calls:
 24978 ;;		_memset
 24979 ;; This function is called by:
 24980 ;;		_eaDogM_WriteString
 24981 ;;		_send_lcd_data_dma
 24982 ;; This function uses a reentrant model
 24983 ;;
 24984                           
 24985                           	psect	text89
 24986  000EF2                     __ptext89:
 24987                           	opt callstack 0
 24988  000EF2                     _ringBufS_flush:
 24989                           	opt callstack 11
 24990                           
 24991                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 24992                           ;stkvar	__this @ sp[(0)+-2]
 24993                           
 24994                           ; BSR set to: 59
 24995                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24996                           ;incstack = 0
 24997  000EF2  0EFE               	movlw	-2
 24998  000EF4  006F FF8C  F034    	movff	plusw1,btemp+10
 24999  000EFA  0EFF               	movlw	-1
 25000  000EFC  006F FF8C  F035    	movff	plusw1,btemp+11
 25001  000F02  0E42               	movlw	66
 25002  000F04  2434               	addwf	(btemp+10)^0,w,c
 25003  000F06  6ED9               	movwf	fsr2l,c
 25004  000F08  0E00               	movlw	0
 25005  000F0A  2035               	addwfc	(btemp+11)^0,w,c
 25006  000F0C  6EDA               	movwf	fsr2h,c
 25007  000F0E  0E00               	movlw	0
 25008  000F10  6EDF               	movwf	indf2,c
 25009                           
 25010                           ;ringbufs.c: 79:  _this->head = 0;
 25011                           ;stkvar	__this @ sp[(0)+-2]
 25012  000F12  0EFE               	movlw	-2
 25013  000F14  006F FF8C  F034    	movff	plusw1,btemp+10
 25014  000F1A  0EFF               	movlw	-1
 25015  000F1C  006F FF8C  F035    	movff	plusw1,btemp+11
 25016  000F22  0E40               	movlw	64
 25017  000F24  2434               	addwf	(btemp+10)^0,w,c
 25018  000F26  6ED9               	movwf	fsr2l,c
 25019  000F28  0E00               	movlw	0
 25020  000F2A  2035               	addwfc	(btemp+11)^0,w,c
 25021  000F2C  6EDA               	movwf	fsr2h,c
 25022  000F2E  0E00               	movlw	0
 25023  000F30  6EDF               	movwf	indf2,c
 25024                           
 25025                           ;ringbufs.c: 80:  _this->tail = 0;
 25026                           ;stkvar	__this @ sp[(0)+-2]
 25027  000F32  0EFE               	movlw	-2
 25028  000F34  006F FF8C  F034    	movff	plusw1,btemp+10
 25029  000F3A  0EFF               	movlw	-1
 25030  000F3C  006F FF8C  F035    	movff	plusw1,btemp+11
 25031  000F42  0E41               	movlw	65
 25032  000F44  2434               	addwf	(btemp+10)^0,w,c
 25033  000F46  6ED9               	movwf	fsr2l,c
 25034  000F48  0E00               	movlw	0
 25035  000F4A  2035               	addwfc	(btemp+11)^0,w,c
 25036  000F4C  6EDA               	movwf	fsr2h,c
 25037  000F4E  0E00               	movlw	0
 25038  000F50  6EDF               	movwf	indf2,c
 25039                           
 25040                           ;ringbufs.c: 81:  if (clearBuffer) {
 25041                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 25042  000F52  0EFD               	movlw	-3
 25043  000F54  50E3               	movf	plusw1,w,c
 25044  000F56  B4D8               	btfsc	status,2,c
 25045  000F58  D011               	goto	l1746
 25046                           
 25047                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 25048  000F5A  0E40               	movlw	64
 25049  000F5C  6EE6               	movwf	postinc1,c
 25050  000F5E  0E00               	movlw	0
 25051  000F60  6EE6               	movwf	postinc1,c
 25052  000F62  0E00               	movlw	0
 25053  000F64  6EE6               	movwf	postinc1,c
 25054  000F66  0E00               	movlw	0
 25055  000F68  6EE6               	movwf	postinc1,c
 25056                           
 25057                           ;stkvar	__this @ sp[(-4)+-2]
 25058  000F6A  0EFA               	movlw	-6
 25059  000F6C  006F FF8F FFE6     	movff	plusw1,postinc1
 25060  000F72  006F FF8F FFE6     	movff	plusw1,postinc1
 25061  000F78  ECDB  F0D8         	call	_memset	;wreg free
 25062  000F7C                     l1746:
 25063                           
 25064                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 25065  000F7C  52E5               	movf	postdec1,f,c
 25066  000F7E  52E5               	movf	postdec1,f,c
 25067  000F80  52E5               	movf	postdec1,f,c
 25068  000F82  0012               	return		;funcret
 25069  000F84                     __end_of_ringBufS_flush:
 25070                           	opt callstack 0
 25071                           
 25072 ;; *************** function _memset *****************
 25073 ;; Defined at:
 25074 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 25075 ;; Parameters:    Size  Location     Type
 25076 ;;  dest            2  [STACK] PTR void 
 25077 ;;		 -> ring_buf2(67), ring_buf1(67), 
 25078 ;;  c               2  [STACK] int 
 25079 ;;  n               2  [STACK] unsigned int 
 25080 ;; Auto vars:     Size  Location     Type
 25081 ;;  s               2  [STACK] PTR unsigned char 
 25082 ;;		 -> ring_buf2(67), ring_buf1(67), 
 25083 ;;  k               2  [STACK] unsigned int 
 25084 ;; Return value:  Size  Location     Type
 25085 ;;                  2  [STACK] PTR void 
 25086 ;; Registers used:
 25087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 25088 ;; Tracked objects:
 25089 ;;		On entry : 0/0
 25090 ;;		On exit  : 0/0
 25091 ;;		Unchanged: 0/0
 25092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25097 ;;Total ram usage:        0 bytes
 25098 ;; Hardware stack levels used:    1
 25099 ;; Hardware stack levels required when called:   15
 25100 ;; This function calls:
 25101 ;;		Nothing
 25102 ;; This function is called by:
 25103 ;;		_ringBufS_init
 25104 ;;		_ringBufS_flush
 25105 ;; This function uses a reentrant model
 25106 ;;
 25107                           
 25108                           	psect	text90
 25109  01B1B6                     __ptext90:
 25110                           	opt callstack 0
 25111  01B1B6                     _memset:
 25112                           	opt callstack 0
 25113                           
 25114                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25115  01B1B6  52E6               	movf	postinc1,f,c
 25116  01B1B8  52E6               	movf	postinc1,f,c
 25117  01B1BA  52E6               	movf	postinc1,f,c
 25118  01B1BC  52E6               	movf	postinc1,f,c
 25119                           
 25120                           ;stkvar	_dest @ sp[(-4)+-2]
 25121                           
 25122                           ;incstack = 0
 25123  01B1BE  0EFA               	movlw	-6
 25124  01B1C0  006F FF8C  F034    	movff	plusw1,btemp+10
 25125  01B1C6  0EFB               	movlw	-5
 25126  01B1C8  006F FF8C  F035    	movff	plusw1,btemp+11
 25127                           
 25128                           ;stkvar	_s @ sp[(-4)+0]
 25129  01B1CE  0EFD               	movlw	-3
 25130  01B1D0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25131  01B1D6  0EFC               	movlw	-4
 25132  01B1D8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25133                           
 25134                           ;stkvar	_n @ sp[(-4)+-6]
 25135  01B1DE  0EF6               	movlw	-10
 25136  01B1E0  006F FF8C  F02A    	movff	plusw1,btemp
 25137  01B1E6  0EF7               	movlw	-9
 25138  01B1E8  50E3               	movf	plusw1,w,c
 25139  01B1EA  102A               	iorwf	btemp^0,w,c
 25140  01B1EC  B4D8               	btfsc	status,2,c
 25141  01B1EE  D154               	goto	u14310
 25142                           
 25143                           ;stkvar	_c @ sp[(-4)+-4]
 25144                           ;stkvar	_s @ sp[(-4)+0]
 25145  01B1F0  0EFC               	movlw	-4
 25146  01B1F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 25147  01B1F8  0EFD               	movlw	-3
 25148  01B1FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 25149  01B200  0EF8               	movlw	-8
 25150  01B202  006F FF8F FFDF     	movff	plusw1,indf2
 25151                           
 25152                           ;stkvar	_c @ sp[(-4)+-4]
 25153                           ;stkvar	_n @ sp[(-4)+-6]
 25154                           ;stkvar	_s @ sp[(-4)+0]
 25155  01B208  0EFC               	movlw	-4
 25156  01B20A  006F FF8C  F034    	movff	plusw1,btemp+10
 25157  01B210  0EFD               	movlw	-3
 25158  01B212  006F FF8C  F035    	movff	plusw1,btemp+11
 25159  01B218  0EF6               	movlw	-10
 25160  01B21A  50E3               	movf	plusw1,w,c
 25161  01B21C  2634               	addwf	(btemp+10)^0,f,c
 25162  01B21E  0EF7               	movlw	-9
 25163  01B220  50E3               	movf	plusw1,w,c
 25164  01B222  2235               	addwfc	(btemp+11)^0,f,c
 25165  01B224  0EFF               	movlw	255
 25166  01B226  2434               	addwf	(btemp+10)^0,w,c
 25167  01B228  6ED9               	movwf	fsr2l,c
 25168  01B22A  0EFF               	movlw	255
 25169  01B22C  2035               	addwfc	(btemp+11)^0,w,c
 25170  01B22E  6EDA               	movwf	fsr2h,c
 25171  01B230  0EF8               	movlw	-8
 25172  01B232  006F FF8F FFDF     	movff	plusw1,indf2
 25173                           
 25174                           ;stkvar	_n @ sp[(-4)+-6]
 25175  01B238  0EF7               	movlw	-9
 25176  01B23A  50E3               	movf	plusw1,w,c
 25177  01B23C  E108               	bnz	l15404
 25178  01B23E  0EF6               	movlw	-10
 25179  01B240  006F FF8C  F02A    	movff	plusw1,btemp
 25180  01B246  0E03               	movlw	3
 25181  01B248  5E2A               	subwf	btemp^0,f,c
 25182  01B24A  A0D8               	btfss	status,0,c
 25183  01B24C  D125               	goto	u14310
 25184  01B24E                     l15404:
 25185                           
 25186                           ;stkvar	_c @ sp[(-4)+-4]
 25187                           ;stkvar	_s @ sp[(-4)+0]
 25188  01B24E  0EFC               	movlw	-4
 25189  01B250  006F FF8C  F034    	movff	plusw1,btemp+10
 25190  01B256  0EFD               	movlw	-3
 25191  01B258  006F FF8C  F035    	movff	plusw1,btemp+11
 25192  01B25E  0E01               	movlw	1
 25193  01B260  2434               	addwf	(btemp+10)^0,w,c
 25194  01B262  6ED9               	movwf	fsr2l,c
 25195  01B264  0E00               	movlw	0
 25196  01B266  2035               	addwfc	(btemp+11)^0,w,c
 25197  01B268  6EDA               	movwf	fsr2h,c
 25198  01B26A  0EF8               	movlw	-8
 25199  01B26C  006F FF8F FFDF     	movff	plusw1,indf2
 25200                           
 25201                           ;stkvar	_c @ sp[(-4)+-4]
 25202                           ;stkvar	_s @ sp[(-4)+0]
 25203  01B272  0EFC               	movlw	-4
 25204  01B274  006F FF8C  F034    	movff	plusw1,btemp+10
 25205  01B27A  0EFD               	movlw	-3
 25206  01B27C  006F FF8C  F035    	movff	plusw1,btemp+11
 25207  01B282  0E02               	movlw	2
 25208  01B284  2434               	addwf	(btemp+10)^0,w,c
 25209  01B286  6ED9               	movwf	fsr2l,c
 25210  01B288  0E00               	movlw	0
 25211  01B28A  2035               	addwfc	(btemp+11)^0,w,c
 25212  01B28C  6EDA               	movwf	fsr2h,c
 25213  01B28E  0EF8               	movlw	-8
 25214  01B290  006F FF8F FFDF     	movff	plusw1,indf2
 25215                           
 25216                           ;stkvar	_c @ sp[(-4)+-4]
 25217                           ;stkvar	_n @ sp[(-4)+-6]
 25218                           ;stkvar	_s @ sp[(-4)+0]
 25219  01B296  0EFC               	movlw	-4
 25220  01B298  006F FF8C  F034    	movff	plusw1,btemp+10
 25221  01B29E  0EFD               	movlw	-3
 25222  01B2A0  006F FF8C  F035    	movff	plusw1,btemp+11
 25223  01B2A6  0EF6               	movlw	-10
 25224  01B2A8  50E3               	movf	plusw1,w,c
 25225  01B2AA  2634               	addwf	(btemp+10)^0,f,c
 25226  01B2AC  0EF7               	movlw	-9
 25227  01B2AE  50E3               	movf	plusw1,w,c
 25228  01B2B0  2235               	addwfc	(btemp+11)^0,f,c
 25229  01B2B2  0EFE               	movlw	254
 25230  01B2B4  2434               	addwf	(btemp+10)^0,w,c
 25231  01B2B6  6ED9               	movwf	fsr2l,c
 25232  01B2B8  0EFF               	movlw	255
 25233  01B2BA  2035               	addwfc	(btemp+11)^0,w,c
 25234  01B2BC  6EDA               	movwf	fsr2h,c
 25235  01B2BE  0EF8               	movlw	-8
 25236  01B2C0  006F FF8F FFDF     	movff	plusw1,indf2
 25237                           
 25238                           ;stkvar	_c @ sp[(-4)+-4]
 25239                           ;stkvar	_n @ sp[(-4)+-6]
 25240                           ;stkvar	_s @ sp[(-4)+0]
 25241  01B2C6  0EFC               	movlw	-4
 25242  01B2C8  006F FF8C  F034    	movff	plusw1,btemp+10
 25243  01B2CE  0EFD               	movlw	-3
 25244  01B2D0  006F FF8C  F035    	movff	plusw1,btemp+11
 25245  01B2D6  0EF6               	movlw	-10
 25246  01B2D8  50E3               	movf	plusw1,w,c
 25247  01B2DA  2634               	addwf	(btemp+10)^0,f,c
 25248  01B2DC  0EF7               	movlw	-9
 25249  01B2DE  50E3               	movf	plusw1,w,c
 25250  01B2E0  2235               	addwfc	(btemp+11)^0,f,c
 25251  01B2E2  0EFD               	movlw	253
 25252  01B2E4  2434               	addwf	(btemp+10)^0,w,c
 25253  01B2E6  6ED9               	movwf	fsr2l,c
 25254  01B2E8  0EFF               	movlw	255
 25255  01B2EA  2035               	addwfc	(btemp+11)^0,w,c
 25256  01B2EC  6EDA               	movwf	fsr2h,c
 25257  01B2EE  0EF8               	movlw	-8
 25258  01B2F0  006F FF8F FFDF     	movff	plusw1,indf2
 25259                           
 25260                           ;stkvar	_n @ sp[(-4)+-6]
 25261  01B2F6  0EF7               	movlw	-9
 25262  01B2F8  50E3               	movf	plusw1,w,c
 25263  01B2FA  E108               	bnz	l15410
 25264  01B2FC  0EF6               	movlw	-10
 25265  01B2FE  006F FF8C  F02A    	movff	plusw1,btemp
 25266  01B304  0E07               	movlw	7
 25267  01B306  5E2A               	subwf	btemp^0,f,c
 25268  01B308  A0D8               	btfss	status,0,c
 25269  01B30A  D0C6               	goto	u14310
 25270  01B30C                     l15410:
 25271                           
 25272                           ;stkvar	_c @ sp[(-4)+-4]
 25273                           ;stkvar	_s @ sp[(-4)+0]
 25274  01B30C  0EFC               	movlw	-4
 25275  01B30E  006F FF8C  F034    	movff	plusw1,btemp+10
 25276  01B314  0EFD               	movlw	-3
 25277  01B316  006F FF8C  F035    	movff	plusw1,btemp+11
 25278  01B31C  0E03               	movlw	3
 25279  01B31E  2434               	addwf	(btemp+10)^0,w,c
 25280  01B320  6ED9               	movwf	fsr2l,c
 25281  01B322  0E00               	movlw	0
 25282  01B324  2035               	addwfc	(btemp+11)^0,w,c
 25283  01B326  6EDA               	movwf	fsr2h,c
 25284  01B328  0EF8               	movlw	-8
 25285  01B32A  006F FF8F FFDF     	movff	plusw1,indf2
 25286                           
 25287                           ;stkvar	_c @ sp[(-4)+-4]
 25288                           ;stkvar	_n @ sp[(-4)+-6]
 25289                           ;stkvar	_s @ sp[(-4)+0]
 25290  01B330  0EFC               	movlw	-4
 25291  01B332  006F FF8C  F034    	movff	plusw1,btemp+10
 25292  01B338  0EFD               	movlw	-3
 25293  01B33A  006F FF8C  F035    	movff	plusw1,btemp+11
 25294  01B340  0EF6               	movlw	-10
 25295  01B342  50E3               	movf	plusw1,w,c
 25296  01B344  2634               	addwf	(btemp+10)^0,f,c
 25297  01B346  0EF7               	movlw	-9
 25298  01B348  50E3               	movf	plusw1,w,c
 25299  01B34A  2235               	addwfc	(btemp+11)^0,f,c
 25300  01B34C  0EFC               	movlw	252
 25301  01B34E  2434               	addwf	(btemp+10)^0,w,c
 25302  01B350  6ED9               	movwf	fsr2l,c
 25303  01B352  0EFF               	movlw	255
 25304  01B354  2035               	addwfc	(btemp+11)^0,w,c
 25305  01B356  6EDA               	movwf	fsr2h,c
 25306  01B358  0EF8               	movlw	-8
 25307  01B35A  006F FF8F FFDF     	movff	plusw1,indf2
 25308                           
 25309                           ;stkvar	_n @ sp[(-4)+-6]
 25310  01B360  0EF7               	movlw	-9
 25311  01B362  50E3               	movf	plusw1,w,c
 25312  01B364  E108               	bnz	l15416
 25313  01B366  0EF6               	movlw	-10
 25314  01B368  006F FF8C  F02A    	movff	plusw1,btemp
 25315  01B36E  0E09               	movlw	9
 25316  01B370  5E2A               	subwf	btemp^0,f,c
 25317  01B372  A0D8               	btfss	status,0,c
 25318  01B374  D091               	goto	u14310
 25319  01B376                     l15416:
 25320                           
 25321                           ;stkvar	_s @ sp[(-4)+0]
 25322  01B376  0EFC               	movlw	-4
 25323  01B378  006F FF8C  F034    	movff	plusw1,btemp+10
 25324  01B37E  1E34               	comf	(btemp+10)^0,f,c
 25325  01B380  0EFD               	movlw	-3
 25326  01B382  006F FF8C  F035    	movff	plusw1,btemp+11
 25327  01B388  1E35               	comf	(btemp+11)^0,f,c
 25328  01B38A  2A34               	incf	(btemp+10)^0,f,c
 25329  01B38C  B4D8               	btfsc	status,2,c
 25330  01B38E  2A35               	incf	(btemp+11)^0,f,c
 25331  01B390  0E03               	movlw	3
 25332  01B392  1634               	andwf	(btemp+10)^0,f,c
 25333  01B394  0E00               	movlw	0
 25334  01B396  1635               	andwf	(btemp+11)^0,f,c
 25335                           
 25336                           ;stkvar	_k @ sp[(-4)+2]
 25337  01B398  0EFE               	movlw	-2
 25338  01B39A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25339  01B3A0  0EFF               	movlw	-1
 25340  01B3A2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25341                           
 25342                           ;stkvar	_k @ sp[(-4)+2]
 25343                           ;stkvar	_s @ sp[(-4)+0]
 25344  01B3A8  0EFC               	movlw	-4
 25345  01B3AA  50E3               	movf	plusw1,w,c
 25346  01B3AC  6E2A               	movwf	btemp^0,c
 25347  01B3AE  0EFE               	movlw	-2
 25348  01B3B0  50E3               	movf	plusw1,w,c
 25349  01B3B2  262A               	addwf	btemp^0,f,c
 25350  01B3B4  0EFC               	movlw	-4
 25351  01B3B6  0060  F0AB  FFE3   	movff	btemp,plusw1
 25352  01B3BC  0EFD               	movlw	-3
 25353  01B3BE  50E3               	movf	plusw1,w,c
 25354  01B3C0  6E2A               	movwf	btemp^0,c
 25355  01B3C2  0EFF               	movlw	-1
 25356  01B3C4  50E3               	movf	plusw1,w,c
 25357  01B3C6  222A               	addwfc	btemp^0,f,c
 25358  01B3C8  0EFD               	movlw	-3
 25359  01B3CA  0060  F0AB  FFE3   	movff	btemp,plusw1
 25360                           
 25361                           ;stkvar	_k @ sp[(-4)+2]
 25362                           ;stkvar	_n @ sp[(-4)+-6]
 25363  01B3D0  0EF6               	movlw	-10
 25364  01B3D2  50E3               	movf	plusw1,w,c
 25365  01B3D4  6E2A               	movwf	btemp^0,c
 25366  01B3D6  0EFE               	movlw	-2
 25367  01B3D8  50E3               	movf	plusw1,w,c
 25368  01B3DA  5E2A               	subwf	btemp^0,f,c
 25369  01B3DC  0EF6               	movlw	-10
 25370  01B3DE  0060  F0AB  FFE3   	movff	btemp,plusw1
 25371  01B3E4  0EF7               	movlw	-9
 25372  01B3E6  50E3               	movf	plusw1,w,c
 25373  01B3E8  6E2A               	movwf	btemp^0,c
 25374  01B3EA  0EFF               	movlw	-1
 25375  01B3EC  50E3               	movf	plusw1,w,c
 25376  01B3EE  5A2A               	subwfb	btemp^0,f,c
 25377  01B3F0  0EF7               	movlw	-9
 25378  01B3F2  0060  F0AB  FFE3   	movff	btemp,plusw1
 25379  01B3F8  0EFC               	movlw	252
 25380  01B3FA  6E34               	movwf	(btemp+10)^0,c
 25381  01B3FC  0EFF               	movlw	255
 25382  01B3FE  6E35               	movwf	(btemp+11)^0,c
 25383                           
 25384                           ;stkvar	_n @ sp[(-4)+-6]
 25385  01B400  0EF6               	movlw	-10
 25386  01B402  006F FF8C  F02A    	movff	plusw1,btemp
 25387  01B408  5034               	movf	(btemp+10)^0,w,c
 25388  01B40A  162A               	andwf	btemp^0,f,c
 25389  01B40C  0EF6               	movlw	-10
 25390  01B40E  0060  F0AB  FFE3   	movff	btemp,plusw1
 25391  01B414  0EF7               	movlw	-9
 25392  01B416  006F FF8C  F02A    	movff	plusw1,btemp
 25393  01B41C  5035               	movf	(btemp+11)^0,w,c
 25394  01B41E  162A               	andwf	btemp^0,f,c
 25395  01B420  0EF7               	movlw	-9
 25396  01B422  D02E               	goto	L24
 25397  01B424                     l15424:
 25398                           
 25399                           ;stkvar	_c @ sp[(-4)+-4]
 25400                           ;stkvar	_s @ sp[(-4)+0]
 25401  01B424  0EFC               	movlw	-4
 25402  01B426  006F FF8F FFD9     	movff	plusw1,fsr2l
 25403  01B42C  0EFD               	movlw	-3
 25404  01B42E  006F FF8F FFDA     	movff	plusw1,fsr2h
 25405  01B434  0EF8               	movlw	-8
 25406  01B436  006F FF8F FFDF     	movff	plusw1,indf2
 25407                           
 25408                           ;stkvar	_n @ sp[(-4)+-6]
 25409  01B43C  0EF6               	movlw	-10
 25410  01B43E  006F FF8C  F02A    	movff	plusw1,btemp
 25411  01B444  0E01               	movlw	1
 25412  01B446  5E2A               	subwf	btemp^0,f,c
 25413  01B448  0EF6               	movlw	-10
 25414  01B44A  0060  F0AB  FFE3   	movff	btemp,plusw1
 25415  01B450  0EF7               	movlw	-9
 25416  01B452  006F FF8C  F02A    	movff	plusw1,btemp
 25417  01B458  0E00               	movlw	0
 25418  01B45A  5A2A               	subwfb	btemp^0,f,c
 25419  01B45C  0EF7               	movlw	-9
 25420  01B45E  0060  F0AB  FFE3   	movff	btemp,plusw1
 25421                           
 25422                           ;stkvar	_s @ sp[(-4)+0]
 25423  01B464  0EFC               	movlw	-4
 25424  01B466  50E3               	movf	plusw1,w,c
 25425  01B468  0F01               	addlw	1
 25426  01B46A  6E2A               	movwf	btemp^0,c
 25427  01B46C  0EFC               	movlw	-4
 25428  01B46E  0060  F0AB  FFE3   	movff	btemp,plusw1
 25429  01B474  6A2A               	clrf	btemp^0,c
 25430  01B476  0EFD               	movlw	-3
 25431  01B478  50E3               	movf	plusw1,w,c
 25432  01B47A  202A               	addwfc	btemp^0,w,c
 25433  01B47C  6E2A               	movwf	btemp^0,c
 25434  01B47E  0EFD               	movlw	-3
 25435  01B480                     L24:
 25436  01B480  0060  F0AB  FFE3   	movff	btemp,plusw1
 25437                           
 25438                           ;stkvar	_n @ sp[(-4)+-6]
 25439  01B486  0EF6               	movlw	-10
 25440  01B488  006F FF8C  F02A    	movff	plusw1,btemp
 25441  01B48E  0EF7               	movlw	-9
 25442  01B490  50E3               	movf	plusw1,w,c
 25443  01B492  102A               	iorwf	btemp^0,w,c
 25444  01B494  A4D8               	btfss	status,2,c
 25445  01B496  D7C6               	goto	l15424
 25446  01B498                     u14310:
 25447                           
 25448                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 25449  01B498  0EF6               	movlw	246
 25450  01B49A  26E1               	addwf	fsr1l,f,c
 25451  01B49C  0EFF               	movlw	255
 25452  01B49E  22E2               	addwfc	fsr1h,f,c
 25453  01B4A0  0012               	return		;funcret
 25454  01B4A2                     __end_of_memset:
 25455                           	opt callstack 0
 25456                           
 25457 ;; *************** function _printf *****************
 25458 ;; Defined at:
 25459 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 25460 ;; Parameters:    Size  Location     Type
 25461 ;;  fmt             2  [STACK] PTR const unsigned char 
 25462 ;;		 -> STR_74(3), 
 25463 ;; Auto vars:     Size  Location     Type
 25464 ;;  ap              2  [STACK] PTR void [1]
 25465 ;;		 -> ?_printf(2), ?_sprintf(2), 
 25466 ;;  ret             2    0        int 
 25467 ;; Return value:  Size  Location     Type
 25468 ;;                  2  [STACK] int 
 25469 ;; Registers used:
 25470 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25471 ;; Tracked objects:
 25472 ;;		On entry : 3F/3B
 25473 ;;		On exit  : 3F/0
 25474 ;;		Unchanged: 0/0
 25475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25480 ;;Total ram usage:        0 bytes
 25481 ;; Hardware stack levels used:    1
 25482 ;; Hardware stack levels required when called:   23
 25483 ;; This function calls:
 25484 ;;		_vfprintf
 25485 ;; This function is called by:
 25486 ;;		_eaDogM_WriteString
 25487 ;; This function uses a reentrant model
 25488 ;;
 25489                           
 25490                           	psect	text91
 25491  001856                     __ptext91:
 25492                           	opt callstack 0
 25493  001856                     _printf:
 25494                           	opt callstack 0
 25495                           
 25496                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25497  001856  52E6               	movf	postinc1,f,c
 25498  001858  52E6               	movf	postinc1,f,c
 25499                           
 25500                           ;stkvar	?_printf @ sp[(-2)+-3]
 25501                           
 25502                           ;incstack = 0
 25503  00185A  0EFB               	movlw	251
 25504  00185C  24E1               	addwf	fsr1l,w,c
 25505  00185E  6E34               	movwf	(btemp+10)^0,c
 25506  001860  0EFF               	movlw	255
 25507  001862  20E2               	addwfc	fsr1h,w,c
 25508  001864  6E35               	movwf	(btemp+11)^0,c
 25509                           
 25510                           ;stkvar	_ap @ sp[(-2)+0]
 25511  001866  0EFF               	movlw	-1
 25512  001868  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25513  00186E  0EFE               	movlw	-2
 25514  001870  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25515                           
 25516                           ;stkvar	_ap @ sp[(-2)+0]
 25517  001876  0EFE               	movlw	254
 25518  001878  24E1               	addwf	fsr1l,w,c
 25519  00187A  6E2A               	movwf	btemp^0,c
 25520  00187C  0EFF               	movlw	255
 25521  00187E  20E2               	addwfc	fsr1h,w,c
 25522  001880  6E2B               	movwf	(btemp+1)^0,c
 25523  001882  0060  F0AB  FFE6   	movff	btemp,postinc1
 25524  001888  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 25525                           
 25526                           ;stkvar	_fmt @ sp[(-4)+-3]
 25527  00188E  0EF9               	movlw	-7
 25528  001890  006F FF8F FFE6     	movff	plusw1,postinc1
 25529  001896  006F FF8F FFE6     	movff	plusw1,postinc1
 25530  00189C  0E00               	movlw	0
 25531  00189E  6EE6               	movwf	postinc1,c
 25532  0018A0  0E00               	movlw	0
 25533  0018A2  6EE6               	movwf	postinc1,c
 25534  0018A4  ECAD  F004         	call	_vfprintf	;wreg free
 25535                           
 25536                           ; BSR set to: 0
 25537                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 25538  0018A8  52E5               	movf	postdec1,f,c
 25539  0018AA  52E5               	movf	postdec1,f,c
 25540  0018AC  52E5               	movf	postdec1,f,c
 25541  0018AE  50E7               	movf	indf1,w,c
 25542  0018B0  5EE1               	subwf	fsr1l,f,c
 25543  0018B2  0E00               	movlw	0
 25544  0018B4  5AE2               	subwfb	fsr1h,f,c
 25545  0018B6  0012               	return		;funcret
 25546  0018B8                     __end_of_printf:
 25547                           	opt callstack 0
 25548                           
 25549 ;; *************** function _vfprintf *****************
 25550 ;; Defined at:
 25551 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25552 ;; Parameters:    Size  Location     Type
 25553 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25554 ;;		 -> f(6), NULL(0), 
 25555 ;;  fmt             2  [STACK] PTR const unsigned char 
 25556 ;;		 -> STR_95(127), STR_93(3), STR_92(3), STR_91(21), 
 25557 ;;		 -> STR_90(21), STR_89(21), STR_88(21), STR_87(21), 
 25558 ;;		 -> STR_86(21), STR_85(26), STR_84(15), STR_83(15), 
 25559 ;;		 -> STR_82(15), STR_81(15), STR_80(10), STR_79(10), 
 25560 ;;		 -> STR_78(19), STR_77(19), STR_74(3), STR_73(14), 
 25561 ;;		 -> STR_72(28), STR_71(28), STR_70(28), STR_69(22), 
 25562 ;;		 -> STR_68(22), STR_67(22), STR_66(22), STR_65(22), 
 25563 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 25564 ;;		 -> STR_60(21), STR_59(22), STR_58(22), STR_57(22), 
 25565 ;;		 -> STR_56(22), STR_55(22), STR_54(22), STR_53(24), 
 25566 ;;		 -> STR_52(24), STR_51(24), STR_50(30), STR_49(24), 
 25567 ;;		 -> STR_48(24), STR_47(23), STR_46(23), STR_45(23), 
 25568 ;;		 -> STR_44(23), STR_43(23), STR_42(23), STR_41(23), 
 25569 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 25570 ;;		 -> STR_36(23), STR_35(18), STR_34(17), STR_33(17), 
 25571 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(14), 
 25572 ;;		 -> STR_28(14), STR_27(27), STR_26(27), STR_25(23), 
 25573 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(22), 
 25574 ;;		 -> STR_20(23), STR_19(23), STR_18(23), STR_17(26), 
 25575 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 25576 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
 25577 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 25578 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 25579 ;;  ap              2  [STACK] PTR PTR void 
 25580 ;;		 -> ap(2), ap(2), 
 25581 ;; Auto vars:     Size  Location     Type
 25582 ;;  cfmt            2  [STACK] PTR unsigned char 
 25583 ;;		 -> STR_95(127), STR_93(3), STR_92(3), STR_91(21), 
 25584 ;;		 -> STR_90(21), STR_89(21), STR_88(21), STR_87(21), 
 25585 ;;		 -> STR_86(21), STR_85(26), STR_84(15), STR_83(15), 
 25586 ;;		 -> STR_82(15), STR_81(15), STR_80(10), STR_79(10), 
 25587 ;;		 -> STR_78(19), STR_77(19), STR_74(3), STR_73(14), 
 25588 ;;		 -> STR_72(28), STR_71(28), STR_70(28), STR_69(22), 
 25589 ;;		 -> STR_68(22), STR_67(22), STR_66(22), STR_65(22), 
 25590 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 25591 ;;		 -> STR_60(21), STR_59(22), STR_58(22), STR_57(22), 
 25592 ;;		 -> STR_56(22), STR_55(22), STR_54(22), STR_53(24), 
 25593 ;;		 -> STR_52(24), STR_51(24), STR_50(30), STR_49(24), 
 25594 ;;		 -> STR_48(24), STR_47(23), STR_46(23), STR_45(23), 
 25595 ;;		 -> STR_44(23), STR_43(23), STR_42(23), STR_41(23), 
 25596 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 25597 ;;		 -> STR_36(23), STR_35(18), STR_34(17), STR_33(17), 
 25598 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(14), 
 25599 ;;		 -> STR_28(14), STR_27(27), STR_26(27), STR_25(23), 
 25600 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(22), 
 25601 ;;		 -> STR_20(23), STR_19(23), STR_18(23), STR_17(26), 
 25602 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 25603 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
 25604 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 25605 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 25606 ;; Return value:  Size  Location     Type
 25607 ;;                  2  [STACK] int 
 25608 ;; Registers used:
 25609 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25610 ;; Tracked objects:
 25611 ;;		On entry : 0/2
 25612 ;;		On exit  : 3F/0
 25613 ;;		Unchanged: 0/0
 25614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25619 ;;Total ram usage:        0 bytes
 25620 ;; Hardware stack levels used:    1
 25621 ;; Hardware stack levels required when called:   22
 25622 ;; This function calls:
 25623 ;;		_vfpfcnvrt
 25624 ;; This function is called by:
 25625 ;;		_sprintf
 25626 ;;		_printf
 25627 ;; This function uses a reentrant model
 25628 ;;
 25629                           
 25630                           	psect	text92
 25631  00095A                     __ptext92:
 25632                           	opt callstack 0
 25633  00095A                     _vfprintf:
 25634                           	opt callstack 0
 25635                           
 25636                           ; BSR set to: 0
 25637                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25638  00095A  52E6               	movf	postinc1,f,c
 25639  00095C  52E6               	movf	postinc1,f,c
 25640                           
 25641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 25642                           ;stkvar	_fmt @ sp[(-2)+-4]
 25643                           
 25644                           ;incstack = 0
 25645 ;; hardware stack exceeded
 25646  00095E  0EFA               	movlw	-6
 25647  000960  006F FF8C  F034    	movff	plusw1,btemp+10
 25648  000966  0EFB               	movlw	-5
 25649  000968  006F FF8C  F035    	movff	plusw1,btemp+11
 25650                           
 25651                           ;stkvar	_cfmt @ sp[(-2)+0]
 25652  00096E  0EFF               	movlw	-1
 25653  000970  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25654  000976  0EFE               	movlw	-2
 25655  000978  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25656                           
 25657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 25658  00097E  0100               	movlb	0	; () banked
 25659  000980  6BBA               	clrf	_nout& (0+255),b
 25660  000982  6BBB               	clrf	(_nout+1)& (0+255),b
 25661                           
 25662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 25663  000984  D021               	goto	l16610
 25664  000986                     l16608:
 25665                           
 25666                           ; BSR set to: 0
 25667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 25668                           ;stkvar	_ap @ sp[(-2)+-6]
 25669  000986  0EF8               	movlw	-8
 25670  000988  006F FF8F FFE6     	movff	plusw1,postinc1
 25671  00098E  006F FF8F FFE6     	movff	plusw1,postinc1
 25672                           
 25673                           ;stkvar	_cfmt @ sp[(-4)+0]
 25674  000994  0EFC               	movlw	252
 25675  000996  24E1               	addwf	fsr1l,w,c
 25676  000998  6E2A               	movwf	btemp^0,c
 25677  00099A  0EFF               	movlw	255
 25678  00099C  20E2               	addwfc	fsr1h,w,c
 25679  00099E  6E2B               	movwf	(btemp+1)^0,c
 25680  0009A0  0060  F0AB  FFE6   	movff	btemp,postinc1
 25681  0009A6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 25682                           
 25683                           ;stkvar	_fp @ sp[(-6)+-2]
 25684  0009AC  0EF8               	movlw	-8
 25685  0009AE  006F FF8F FFE6     	movff	plusw1,postinc1
 25686  0009B4  006F FF8F FFE6     	movff	plusw1,postinc1
 25687  0009BA  ECE8  F09C         	call	_vfpfcnvrt	;wreg free
 25688  0009BE  502A               	movf	btemp^0,w,c
 25689  0009C0  0100               	movlb	0	; () banked
 25690  0009C2  27BA               	addwf	_nout& (0+255),f,b
 25691  0009C4  502B               	movf	(btemp+1)^0,w,c
 25692  0009C6  23BB               	addwfc	(_nout+1)& (0+255),f,b
 25693  0009C8                     l16610:
 25694                           
 25695                           ; BSR set to: 0
 25696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 25697                           ;stkvar	_cfmt @ sp[(-2)+0]
 25698  0009C8  50E1               	movf	fsr1l,w,c
 25699  0009CA  0FFE               	addlw	-2
 25700  0009CC  6ED9               	movwf	fsr2l,c
 25701  0009CE  50E2               	movf	fsr1h,w,c
 25702  0009D0  6EDA               	movwf	fsr2h,c
 25703  0009D2  0EFF               	movlw	255
 25704  0009D4  22DA               	addwfc	fsr2h,f,c
 25705  0009D6  006F FF7B FFF6     	movff	postinc2,tblptrl
 25706  0009DC  006F FF77 FFF7     	movff	postdec2,tblptrh
 25707  0009E2                     	if	0	;tblptru may be non-zero
 25708  0009E2                     	endif
 25709  0009E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25710  0009E2  0E00               	movlw	low (__mediumconst shr (0+16))
 25711  0009E4  6EF8               	movwf	tblptru,c
 25712  0009E6                     	endif
 25713  0009E6  0008               	tblrd		*
 25714  0009E8  50F5               	movf	tablat,w,c
 25715  0009EA  0900               	iorlw	0
 25716  0009EC  A4D8               	btfss	status,2,c
 25717  0009EE  D7CB               	goto	l16608
 25718                           
 25719                           ; BSR set to: 0
 25720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 25721  0009F0  0060  F2E8  F02A   	movff	_nout,btemp
 25722  0009F6  0060  F2EC  F02B   	movff	_nout+1,btemp+1
 25723                           
 25724                           ; BSR set to: 0
 25725                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 25726  0009FC  0EF8               	movlw	248
 25727  0009FE  26E1               	addwf	fsr1l,f,c
 25728  000A00  0EFF               	movlw	255
 25729  000A02  22E2               	addwfc	fsr1h,f,c
 25730  000A04  0012               	return		;funcret
 25731  000A06                     __end_of_vfprintf:
 25732                           	opt callstack 0
 25733                           
 25734 ;; *************** function _vfpfcnvrt *****************
 25735 ;; Defined at:
 25736 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25737 ;; Parameters:    Size  Location     Type
 25738 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25739 ;;		 -> f(6), NULL(0), 
 25740 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 25741 ;;		 -> cfmt(2), 
 25742 ;;  ap              2  [STACK] PTR PTR void 
 25743 ;;		 -> ap(2), ap(2), 
 25744 ;; Auto vars:     Size  Location     Type
 25745 ;;  llu             8  [STACK] unsigned long long 
 25746 ;;  ll              8  [STACK] long long 
 25747 ;;  f               4  [STACK] long long 
 25748 ;;  ct              3  [STACK] unsigned char [3]
 25749 ;;  vp              3    0        PTR void 
 25750 ;;  cp              2  [STACK] PTR unsigned char 
 25751 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_76(9), 
 25752 ;;		 -> STR_75(12), D.lcd(640), D(642), T(176), 
 25753 ;;		 -> STR_3(5), V(181), 
 25754 ;;  i               2    0        int 
 25755 ;;  done            2    0        int 
 25756 ;;  c               1  [STACK] unsigned char 
 25757 ;; Return value:  Size  Location     Type
 25758 ;;                  2  [STACK] int 
 25759 ;; Registers used:
 25760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25761 ;; Tracked objects:
 25762 ;;		On entry : 0/0
 25763 ;;		On exit  : 0/0
 25764 ;;		Unchanged: 0/0
 25765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25770 ;;Total ram usage:        0 bytes
 25771 ;; Hardware stack levels used:    1
 25772 ;; Hardware stack levels required when called:   21
 25773 ;; This function calls:
 25774 ;;		_atoi
 25775 ;;		_ctoa
 25776 ;;		_dtoa
 25777 ;;		_efgtoa
 25778 ;;		_fputc
 25779 ;;		_isdigit
 25780 ;;		_isupper
 25781 ;;		_stoa
 25782 ;;		_strncmp
 25783 ;;		_tolower
 25784 ;;		_utoa
 25785 ;;		_xtoa
 25786 ;; This function is called by:
 25787 ;;		_vfprintf
 25788 ;; This function uses a reentrant model
 25789 ;;
 25790                           
 25791                           	psect	text93
 25792  0139D0                     __ptext93:
 25793                           	opt callstack 0
 25794  0139D0                     _vfpfcnvrt:
 25795                           	opt callstack 0
 25796                           
 25797                           ; BSR set to: 0
 25798                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 25799  0139D0  0E20               	movlw	32
 25800  0139D2  26E1               	addwf	fsr1l,f,c
 25801  0139D4  0E00               	movlw	0
 25802  0139D6  22E2               	addwfc	fsr1h,f,c
 25803                           
 25804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 25805                           ;stkvar	_fmt @ sp[(-32)+-4]
 25806                           
 25807                           ;incstack = 0
 25808 ;; hardware stack exceeded
 25809  0139D8  0EDC               	movlw	-36
 25810  0139DA  006F FF8F FFD9     	movff	plusw1,fsr2l
 25811  0139E0  0EDD               	movlw	-35
 25812  0139E2  006F FF8F FFDA     	movff	plusw1,fsr2h
 25813  0139E8  006F FF7B FFF6     	movff	postinc2,tblptrl
 25814  0139EE  006F FF77 FFF7     	movff	postdec2,tblptrh
 25815  0139F4                     	if	0	;tblptru may be non-zero
 25816  0139F4                     	endif
 25817  0139F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25818  0139F4  0E00               	movlw	low (__mediumconst shr (0+16))
 25819  0139F6  6EF8               	movwf	tblptru,c
 25820  0139F8                     	endif
 25821  0139F8  0008               	tblrd		*
 25822  0139FA  50F5               	movf	tablat,w,c
 25823  0139FC  0A25               	xorlw	37
 25824  0139FE  A4D8               	btfss	status,2,c
 25825  013A00  EF8F  F0A4         	goto	l16378
 25826                           
 25827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 25828                           ;stkvar	_fmt @ sp[(-32)+-4]
 25829  013A04  0EDC               	movlw	-36
 25830  013A06  006F FF8F FFD9     	movff	plusw1,fsr2l
 25831  013A0C  0EDD               	movlw	-35
 25832  013A0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 25833  013A14  2ADE               	incf	postinc2,f,c
 25834  013A16  0E00               	movlw	0
 25835  013A18  22DD               	addwfc	postdec2,f,c
 25836                           
 25837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 25838  013A1A  6A4A               	clrf	_width^0,c
 25839  013A1C  6A4B               	clrf	(_width+1)^0,c
 25840  013A1E  6A4E               	clrf	_flags^0,c
 25841  013A20  6A4F               	clrf	(_flags+1)^0,c
 25842                           
 25843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 25844  013A22  684C               	setf	_prec^0,c
 25845  013A24  684D               	setf	(_prec+1)^0,c
 25846                           
 25847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 25848                           ;stkvar	_fmt @ sp[(-32)+-4]
 25849  013A26  0EDC               	movlw	-36
 25850  013A28  006F FF8F FFD9     	movff	plusw1,fsr2l
 25851  013A2E  0EDD               	movlw	-35
 25852  013A30  006F FF8F FFDA     	movff	plusw1,fsr2h
 25853  013A36  006F FF7B FFF6     	movff	postinc2,tblptrl
 25854  013A3C  006F FF77 FFF7     	movff	postdec2,tblptrh
 25855  013A42                     	if	0	;tblptru may be non-zero
 25856  013A42                     	endif
 25857  013A42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25858  013A42  0E00               	movlw	low (__mediumconst shr (0+16))
 25859  013A44  6EF8               	movwf	tblptru,c
 25860  013A46                     	endif
 25861  013A46  0008               	tblrd		*
 25862  013A48  50F5               	movf	tablat,w,c
 25863  013A4A  0A2A               	xorlw	42
 25864  013A4C  A4D8               	btfss	status,2,c
 25865  013A4E  D031               	goto	l16196
 25866                           
 25867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 25868                           ;stkvar	_fmt @ sp[(-32)+-4]
 25869  013A50  0EDC               	movlw	-36
 25870  013A52  006F FF8F FFD9     	movff	plusw1,fsr2l
 25871  013A58  0EDD               	movlw	-35
 25872  013A5A  006F FF8F FFDA     	movff	plusw1,fsr2h
 25873  013A60  2ADE               	incf	postinc2,f,c
 25874  013A62  0E00               	movlw	0
 25875  013A64  22DD               	addwfc	postdec2,f,c
 25876                           
 25877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 25878                           ;stkvar	_ap @ sp[(-32)+-6]
 25879  013A66  0EDA               	movlw	-38
 25880  013A68  006F FF8F FFD9     	movff	plusw1,fsr2l
 25881  013A6E  0EDB               	movlw	-37
 25882  013A70  006F FF8F FFDA     	movff	plusw1,fsr2h
 25883  013A76  0E02               	movlw	2
 25884  013A78  5EDE               	subwf	postinc2,f,c
 25885  013A7A  0E00               	movlw	0
 25886  013A7C  5ADD               	subwfb	postdec2,f,c
 25887  013A7E  006F FF78  F034    	movff	postinc2,btemp+10
 25888  013A84  006F FF74  F035    	movff	postdec2,btemp+11
 25889  013A8A  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 25890  013A90  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 25891  013A96  006F FF78  F04A    	movff	postinc2,_width
 25892  013A9C  006F FF74  F04B    	movff	postdec2,_width+1
 25893                           
 25894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 25895  013AA2  AE4B               	btfss	(_width+1)^0,7,c
 25896  013AA4  D066               	goto	u15720
 25897                           
 25898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 25899  013AA6  804E               	bsf	_flags^0,0,c
 25900                           
 25901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 25902  013AA8  6C4A               	negf	_width^0,c
 25903  013AAA  1E4B               	comf	(_width+1)^0,f,c
 25904  013AAC  B0D8               	btfsc	status,0,c
 25905  013AAE  2A4B               	incf	(_width+1)^0,f,c
 25906  013AB0  D060               	goto	u15720
 25907  013AB2                     l16196:
 25908                           
 25909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 25910                           ;stkvar	_fmt @ sp[(-32)+-4]
 25911  013AB2  0EDC               	movlw	-36
 25912  013AB4  006F FF8F FFD9     	movff	plusw1,fsr2l
 25913  013ABA  0EDD               	movlw	-35
 25914  013ABC  006F FF8F FFDA     	movff	plusw1,fsr2h
 25915  013AC2  006F FF78  F034    	movff	postinc2,btemp+10
 25916  013AC8  006F FF74  F035    	movff	postdec2,btemp+11
 25917  013ACE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25918  013AD4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25919  013ADA  EC49  F0E2         	call	_atoi	;wreg free
 25920  013ADE  0060  F0A8  F04A   	movff	btemp,_width
 25921  013AE4  0060  F0AC  F04B   	movff	btemp+1,_width+1
 25922                           
 25923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 25924  013AEA  D00B               	goto	l16200
 25925  013AEC                     l16198:
 25926                           
 25927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 25928                           ;stkvar	_fmt @ sp[(-32)+-4]
 25929  013AEC  0EDC               	movlw	-36
 25930  013AEE  006F FF8F FFD9     	movff	plusw1,fsr2l
 25931  013AF4  0EDD               	movlw	-35
 25932  013AF6  006F FF8F FFDA     	movff	plusw1,fsr2h
 25933  013AFC  2ADE               	incf	postinc2,f,c
 25934  013AFE  0E00               	movlw	0
 25935  013B00  22DD               	addwfc	postdec2,f,c
 25936  013B02                     l16200:
 25937  013B02  0ED0               	movlw	208
 25938  013B04  6E34               	movwf	(btemp+10)^0,c
 25939  013B06  0EFF               	movlw	255
 25940  013B08  6E35               	movwf	(btemp+11)^0,c
 25941                           
 25942                           ;stkvar	_fmt @ sp[(-32)+-4]
 25943  013B0A  0EDC               	movlw	-36
 25944  013B0C  006F FF8F FFD9     	movff	plusw1,fsr2l
 25945  013B12  0EDD               	movlw	-35
 25946  013B14  006F FF8F FFDA     	movff	plusw1,fsr2h
 25947  013B1A  006F FF7B FFF6     	movff	postinc2,tblptrl
 25948  013B20  006F FF77 FFF7     	movff	postdec2,tblptrh
 25949  013B26                     	if	0	;tblptru may be non-zero
 25950  013B26                     	endif
 25951  013B26                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25952  013B26  0E00               	movlw	low (__mediumconst shr (0+16))
 25953  013B28  6EF8               	movwf	tblptru,c
 25954  013B2A                     	endif
 25955  013B2A  0008               	tblrd		*
 25956  013B2C  50F5               	movf	tablat,w,c
 25957  013B2E  6E32               	movwf	(btemp+8)^0,c
 25958  013B30  6A33               	clrf	(btemp+9)^0,c
 25959  013B32  5034               	movf	(btemp+10)^0,w,c
 25960  013B34  2632               	addwf	(btemp+8)^0,f,c
 25961  013B36  5035               	movf	(btemp+11)^0,w,c
 25962  013B38  2233               	addwfc	(btemp+9)^0,f,c
 25963  013B3A  5033               	movf	(btemp+9)^0,w,c
 25964  013B3C  E106               	bnz	u15700
 25965  013B3E  0E0A               	movlw	10
 25966  013B40  5C32               	subwf	(btemp+8)^0,w,c
 25967  013B42  B0D8               	btfsc	status,0,c
 25968  013B44  D002               	goto	u15700
 25969  013B46  0E01               	movlw	1
 25970  013B48  D001               	goto	u15710
 25971  013B4A                     u15700:
 25972  013B4A  0E00               	movlw	0
 25973  013B4C                     u15710:
 25974  013B4C  6E34               	movwf	(btemp+10)^0,c
 25975  013B4E  6A35               	clrf	(btemp+11)^0,c
 25976                           
 25977                           ;stkvar	_vfpfcnvrt$6666 @ sp[(-32)+4]
 25978  013B50  0EE4               	movlw	-28
 25979  013B52  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25980  013B58  0EE5               	movlw	-27
 25981  013B5A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25982                           
 25983                           ;stkvar	_vfpfcnvrt$6666 @ sp[(-32)+4]
 25984  013B60  0EE4               	movlw	-28
 25985  013B62  006F FF8C  F02A    	movff	plusw1,btemp
 25986  013B68  0EE5               	movlw	-27
 25987  013B6A  50E3               	movf	plusw1,w,c
 25988  013B6C  102A               	iorwf	btemp^0,w,c
 25989  013B6E  A4D8               	btfss	status,2,c
 25990  013B70  D7BD               	goto	l16198
 25991  013B72                     u15720:
 25992                           
 25993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 25994                           ;stkvar	_fmt @ sp[(-32)+-4]
 25995  013B72  0EDC               	movlw	-36
 25996  013B74  006F FF8F FFD9     	movff	plusw1,fsr2l
 25997  013B7A  0EDD               	movlw	-35
 25998  013B7C  006F FF8F FFDA     	movff	plusw1,fsr2h
 25999  013B82  006F FF7B FFF6     	movff	postinc2,tblptrl
 26000  013B88  006F FF77 FFF7     	movff	postdec2,tblptrh
 26001  013B8E                     	if	0	;tblptru may be non-zero
 26002  013B8E                     	endif
 26003  013B8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26004  013B8E  0E00               	movlw	low (__mediumconst shr (0+16))
 26005  013B90  6EF8               	movwf	tblptru,c
 26006  013B92                     	endif
 26007  013B92  0008               	tblrd		*
 26008  013B94  50F5               	movf	tablat,w,c
 26009  013B96  0A2E               	xorlw	46
 26010  013B98  A4D8               	btfss	status,2,c
 26011  013B9A  D0AC               	goto	u15770
 26012                           
 26013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 26014  013B9C  6A4C               	clrf	_prec^0,c
 26015  013B9E  6A4D               	clrf	(_prec+1)^0,c
 26016                           
 26017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 26018                           ;stkvar	_fmt @ sp[(-32)+-4]
 26019  013BA0  0EDC               	movlw	-36
 26020  013BA2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26021  013BA8  0EDD               	movlw	-35
 26022  013BAA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26023  013BB0  2ADE               	incf	postinc2,f,c
 26024  013BB2  0E00               	movlw	0
 26025  013BB4  22DD               	addwfc	postdec2,f,c
 26026                           
 26027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 26028                           ;stkvar	_fmt @ sp[(-32)+-4]
 26029  013BB6  0EDC               	movlw	-36
 26030  013BB8  006F FF8F FFD9     	movff	plusw1,fsr2l
 26031  013BBE  0EDD               	movlw	-35
 26032  013BC0  006F FF8F FFDA     	movff	plusw1,fsr2h
 26033  013BC6  006F FF7B FFF6     	movff	postinc2,tblptrl
 26034  013BCC  006F FF77 FFF7     	movff	postdec2,tblptrh
 26035  013BD2                     	if	0	;tblptru may be non-zero
 26036  013BD2                     	endif
 26037  013BD2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26038  013BD2  0E00               	movlw	low (__mediumconst shr (0+16))
 26039  013BD4  6EF8               	movwf	tblptru,c
 26040  013BD6                     	endif
 26041  013BD6  0008               	tblrd		*
 26042  013BD8  50F5               	movf	tablat,w,c
 26043  013BDA  0A2A               	xorlw	42
 26044  013BDC  A4D8               	btfss	status,2,c
 26045  013BDE  D02A               	goto	l16218
 26046                           
 26047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 26048                           ;stkvar	_fmt @ sp[(-32)+-4]
 26049  013BE0  0EDC               	movlw	-36
 26050  013BE2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26051  013BE8  0EDD               	movlw	-35
 26052  013BEA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26053  013BF0  2ADE               	incf	postinc2,f,c
 26054  013BF2  0E00               	movlw	0
 26055  013BF4  22DD               	addwfc	postdec2,f,c
 26056                           
 26057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 26058                           ;stkvar	_ap @ sp[(-32)+-6]
 26059  013BF6  0EDA               	movlw	-38
 26060  013BF8  006F FF8F FFD9     	movff	plusw1,fsr2l
 26061  013BFE  0EDB               	movlw	-37
 26062  013C00  006F FF8F FFDA     	movff	plusw1,fsr2h
 26063  013C06  0E02               	movlw	2
 26064  013C08  5EDE               	subwf	postinc2,f,c
 26065  013C0A  0E00               	movlw	0
 26066  013C0C  5ADD               	subwfb	postdec2,f,c
 26067  013C0E  006F FF78  F034    	movff	postinc2,btemp+10
 26068  013C14  006F FF74  F035    	movff	postdec2,btemp+11
 26069  013C1A  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26070  013C20  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26071  013C26  006F FF78  F04C    	movff	postinc2,_prec
 26072  013C2C  006F FF74  F04D    	movff	postdec2,_prec+1
 26073                           
 26074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 26075  013C32  D060               	goto	u15770
 26076  013C34                     l16218:
 26077                           
 26078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 26079                           ;stkvar	_fmt @ sp[(-32)+-4]
 26080  013C34  0EDC               	movlw	-36
 26081  013C36  006F FF8F FFD9     	movff	plusw1,fsr2l
 26082  013C3C  0EDD               	movlw	-35
 26083  013C3E  006F FF8F FFDA     	movff	plusw1,fsr2h
 26084  013C44  006F FF78  F034    	movff	postinc2,btemp+10
 26085  013C4A  006F FF74  F035    	movff	postdec2,btemp+11
 26086  013C50  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26087  013C56  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26088  013C5C  EC49  F0E2         	call	_atoi	;wreg free
 26089  013C60  0060  F0A8  F04C   	movff	btemp,_prec
 26090  013C66  0060  F0AC  F04D   	movff	btemp+1,_prec+1
 26091                           
 26092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 26093  013C6C  D00B               	goto	l16222
 26094  013C6E                     l16220:
 26095                           
 26096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 26097                           ;stkvar	_fmt @ sp[(-32)+-4]
 26098  013C6E  0EDC               	movlw	-36
 26099  013C70  006F FF8F FFD9     	movff	plusw1,fsr2l
 26100  013C76  0EDD               	movlw	-35
 26101  013C78  006F FF8F FFDA     	movff	plusw1,fsr2h
 26102  013C7E  2ADE               	incf	postinc2,f,c
 26103  013C80  0E00               	movlw	0
 26104  013C82  22DD               	addwfc	postdec2,f,c
 26105  013C84                     l16222:
 26106  013C84  0ED0               	movlw	208
 26107  013C86  6E34               	movwf	(btemp+10)^0,c
 26108  013C88  0EFF               	movlw	255
 26109  013C8A  6E35               	movwf	(btemp+11)^0,c
 26110                           
 26111                           ;stkvar	_fmt @ sp[(-32)+-4]
 26112  013C8C  0EDC               	movlw	-36
 26113  013C8E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26114  013C94  0EDD               	movlw	-35
 26115  013C96  006F FF8F FFDA     	movff	plusw1,fsr2h
 26116  013C9C  006F FF7B FFF6     	movff	postinc2,tblptrl
 26117  013CA2  006F FF77 FFF7     	movff	postdec2,tblptrh
 26118  013CA8                     	if	0	;tblptru may be non-zero
 26119  013CA8                     	endif
 26120  013CA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26121  013CA8  0E00               	movlw	low (__mediumconst shr (0+16))
 26122  013CAA  6EF8               	movwf	tblptru,c
 26123  013CAC                     	endif
 26124  013CAC  0008               	tblrd		*
 26125  013CAE  50F5               	movf	tablat,w,c
 26126  013CB0  6E32               	movwf	(btemp+8)^0,c
 26127  013CB2  6A33               	clrf	(btemp+9)^0,c
 26128  013CB4  5034               	movf	(btemp+10)^0,w,c
 26129  013CB6  2632               	addwf	(btemp+8)^0,f,c
 26130  013CB8  5035               	movf	(btemp+11)^0,w,c
 26131  013CBA  2233               	addwfc	(btemp+9)^0,f,c
 26132  013CBC  5033               	movf	(btemp+9)^0,w,c
 26133  013CBE  E106               	bnz	u15750
 26134  013CC0  0E0A               	movlw	10
 26135  013CC2  5C32               	subwf	(btemp+8)^0,w,c
 26136  013CC4  B0D8               	btfsc	status,0,c
 26137  013CC6  D002               	goto	u15750
 26138  013CC8  0E01               	movlw	1
 26139  013CCA  D001               	goto	u15760
 26140  013CCC                     u15750:
 26141  013CCC  0E00               	movlw	0
 26142  013CCE                     u15760:
 26143  013CCE  6E34               	movwf	(btemp+10)^0,c
 26144  013CD0  6A35               	clrf	(btemp+11)^0,c
 26145                           
 26146                           ;stkvar	_vfpfcnvrt$6667 @ sp[(-32)+0]
 26147  013CD2  0EE0               	movlw	-32
 26148  013CD4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26149  013CDA  0EE1               	movlw	-31
 26150  013CDC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26151                           
 26152                           ;stkvar	_vfpfcnvrt$6667 @ sp[(-32)+0]
 26153  013CE2  0EE0               	movlw	-32
 26154  013CE4  006F FF8C  F02A    	movff	plusw1,btemp
 26155  013CEA  0EE1               	movlw	-31
 26156  013CEC  50E3               	movf	plusw1,w,c
 26157  013CEE  102A               	iorwf	btemp^0,w,c
 26158  013CF0  A4D8               	btfss	status,2,c
 26159  013CF2  D7BD               	goto	l16220
 26160  013CF4                     u15770:
 26161                           
 26162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 26163                           ;stkvar	_fmt @ sp[(-32)+-4]
 26164  013CF4  0EDC               	movlw	-36
 26165  013CF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 26166  013CFC  0EDD               	movlw	-35
 26167  013CFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 26168  013D04  006F FF7B FFF6     	movff	postinc2,tblptrl
 26169  013D0A  006F FF77 FFF7     	movff	postdec2,tblptrh
 26170  013D10                     	if	0	;tblptru may be non-zero
 26171  013D10                     	endif
 26172  013D10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26173  013D10  0E00               	movlw	low (__mediumconst shr (0+16))
 26174  013D12  6EF8               	movwf	tblptru,c
 26175  013D14                     	endif
 26176  013D14  0008               	tblrd		*
 26177  013D16  50F5               	movf	tablat,w,c
 26178  013D18  6EE6               	movwf	postinc1,c
 26179  013D1A  0E00               	movlw	0
 26180  013D1C  6EE6               	movwf	postinc1,c
 26181  013D1E  ECDA  F008         	call	_tolower	;wreg free
 26182                           
 26183                           ;stkvar	_ct @ sp[(-32)+26]
 26184  013D22  0EFA               	movlw	-6
 26185  013D24  0060  F0AB  FFE3   	movff	btemp,plusw1
 26186                           
 26187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 26188                           ;stkvar	_ct @ sp[(-32)+26]
 26189  013D2A  0EFA               	movlw	-6
 26190  013D2C  50E3               	movf	plusw1,w,c
 26191  013D2E  B4D8               	btfsc	status,2,c
 26192  013D30  D05B               	goto	l16238
 26193                           
 26194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 26195                           ;stkvar	_ct @ sp[(-32)+26]
 26196  013D32  0EFB               	movlw	251
 26197  013D34  24E1               	addwf	fsr1l,w,c
 26198  013D36  6ED9               	movwf	fsr2l,c
 26199  013D38  0EFF               	movlw	255
 26200  013D3A  20E2               	addwfc	fsr1h,w,c
 26201  013D3C  6EDA               	movwf	fsr2h,c
 26202                           
 26203                           ;stkvar	_fmt @ sp[(-32)+-4]
 26204  013D3E  0EDC               	movlw	-36
 26205  013D40  006F FF8F FFE9     	movff	plusw1,fsr0l
 26206  013D46  0EDD               	movlw	-35
 26207  013D48  006F FF8F FFEA     	movff	plusw1,fsr0h
 26208  013D4E  006F FFB8  F034    	movff	postinc0,btemp+10
 26209  013D54  006F FFB4  F035    	movff	postdec0,btemp+11
 26210  013D5A  0E01               	movlw	1
 26211  013D5C  2634               	addwf	(btemp+10)^0,f,c
 26212  013D5E  0E00               	movlw	0
 26213  013D60  2235               	addwfc	(btemp+11)^0,f,c
 26214  013D62  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 26215  013D68  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 26216  013D6E                     	if	0	;tblptru may be non-zero
 26217  013D6E                     	endif
 26218  013D6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26219  013D6E  0E00               	movlw	low (__mediumconst shr (0+16))
 26220  013D70  6EF8               	movwf	tblptru,c
 26221  013D72                     	endif
 26222  013D72  0008               	tblrd		*
 26223  013D74  50F5               	movf	tablat,w,c
 26224  013D76  6EE6               	movwf	postinc1,c
 26225  013D78  0E00               	movlw	0
 26226  013D7A  6EE6               	movwf	postinc1,c
 26227  013D7C  ECDA  F008         	call	_tolower	;wreg free
 26228  013D80  502A               	movf	btemp^0,w,c
 26229  013D82  6EDF               	movwf	indf2,c
 26230                           
 26231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 26232                           ;stkvar	_ct @ sp[(-32)+26]
 26233  013D84  0EFB               	movlw	251
 26234  013D86  24E1               	addwf	fsr1l,w,c
 26235  013D88  6ED9               	movwf	fsr2l,c
 26236  013D8A  0EFF               	movlw	255
 26237  013D8C  20E2               	addwfc	fsr1h,w,c
 26238  013D8E  6EDA               	movwf	fsr2h,c
 26239  013D90  50DF               	movf	indf2,w,c
 26240  013D92  B4D8               	btfsc	status,2,c
 26241  013D94  D029               	goto	l16238
 26242                           
 26243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 26244                           ;stkvar	_ct @ sp[(-32)+26]
 26245  013D96  0EFC               	movlw	252
 26246  013D98  24E1               	addwf	fsr1l,w,c
 26247  013D9A  6ED9               	movwf	fsr2l,c
 26248  013D9C  0EFF               	movlw	255
 26249  013D9E  20E2               	addwfc	fsr1h,w,c
 26250  013DA0  6EDA               	movwf	fsr2h,c
 26251                           
 26252                           ;stkvar	_fmt @ sp[(-32)+-4]
 26253  013DA2  0EDC               	movlw	-36
 26254  013DA4  006F FF8F FFE9     	movff	plusw1,fsr0l
 26255  013DAA  0EDD               	movlw	-35
 26256  013DAC  006F FF8F FFEA     	movff	plusw1,fsr0h
 26257  013DB2  006F FFB8  F034    	movff	postinc0,btemp+10
 26258  013DB8  006F FFB4  F035    	movff	postdec0,btemp+11
 26259  013DBE  0E02               	movlw	2
 26260  013DC0  2634               	addwf	(btemp+10)^0,f,c
 26261  013DC2  0E00               	movlw	0
 26262  013DC4  2235               	addwfc	(btemp+11)^0,f,c
 26263  013DC6  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 26264  013DCC  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 26265  013DD2                     	if	0	;tblptru may be non-zero
 26266  013DD2                     	endif
 26267  013DD2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26268  013DD2  0E00               	movlw	low (__mediumconst shr (0+16))
 26269  013DD4  6EF8               	movwf	tblptru,c
 26270  013DD6                     	endif
 26271  013DD6  0008               	tblrd		*
 26272  013DD8  50F5               	movf	tablat,w,c
 26273  013DDA  6EE6               	movwf	postinc1,c
 26274  013DDC  0E00               	movlw	0
 26275  013DDE  6EE6               	movwf	postinc1,c
 26276  013DE0  ECDA  F008         	call	_tolower	;wreg free
 26277  013DE4  502A               	movf	btemp^0,w,c
 26278  013DE6  6EDF               	movwf	indf2,c
 26279  013DE8                     l16238:
 26280                           
 26281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 26282                           ;stkvar	_fmt @ sp[(-32)+-4]
 26283  013DE8  0EDC               	movlw	-36
 26284  013DEA  006F FF8F FFD9     	movff	plusw1,fsr2l
 26285  013DF0  0EDD               	movlw	-35
 26286  013DF2  006F FF8F FFDA     	movff	plusw1,fsr2h
 26287  013DF8  006F FF7B FFF6     	movff	postinc2,tblptrl
 26288  013DFE  006F FF77 FFF7     	movff	postdec2,tblptrh
 26289  013E04                     	if	0	;tblptru may be non-zero
 26290  013E04                     	endif
 26291  013E04                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26292  013E04  0E00               	movlw	low (__mediumconst shr (0+16))
 26293  013E06  6EF8               	movwf	tblptru,c
 26294  013E08                     	endif
 26295  013E08  0008               	tblrd		*
 26296  013E0A  50F5               	movf	tablat,w,c
 26297  013E0C  0A63               	xorlw	99
 26298  013E0E  A4D8               	btfss	status,2,c
 26299  013E10  D037               	goto	l16248
 26300                           
 26301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 26302                           ;stkvar	_fmt @ sp[(-32)+-4]
 26303  013E12  0EDC               	movlw	-36
 26304  013E14  006F FF8F FFD9     	movff	plusw1,fsr2l
 26305  013E1A  0EDD               	movlw	-35
 26306  013E1C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26307  013E22  2ADE               	incf	postinc2,f,c
 26308  013E24  0E00               	movlw	0
 26309  013E26  22DD               	addwfc	postdec2,f,c
 26310                           
 26311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 26312                           ;stkvar	_ap @ sp[(-32)+-6]
 26313  013E28  0EDA               	movlw	-38
 26314  013E2A  006F FF8F FFD9     	movff	plusw1,fsr2l
 26315  013E30  0EDB               	movlw	-37
 26316  013E32  006F FF8F FFDA     	movff	plusw1,fsr2h
 26317  013E38  0E02               	movlw	2
 26318  013E3A  5EDE               	subwf	postinc2,f,c
 26319  013E3C  0E00               	movlw	0
 26320  013E3E  5ADD               	subwfb	postdec2,f,c
 26321  013E40  006F FF78  F034    	movff	postinc2,btemp+10
 26322  013E46  006F FF74  F035    	movff	postdec2,btemp+11
 26323  013E4C  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26324  013E52  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26325  013E58  50DF               	movf	indf2,w,c
 26326  013E5A  6E35               	movwf	(btemp+11)^0,c
 26327                           
 26328                           ;stkvar	_c @ sp[(-32)+31]
 26329  013E5C  0EFF               	movlw	-1
 26330  013E5E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26331                           
 26332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 26333                           ;stkvar	_c @ sp[(-32)+31]
 26334  013E64  0EFF               	movlw	-1
 26335  013E66  50E3               	movf	plusw1,w,c
 26336  013E68  6EE6               	movwf	postinc1,c
 26337                           
 26338                           ;stkvar	_fp @ sp[(-33)+-2]
 26339  013E6A  0EDD               	movlw	-35
 26340  013E6C  006F FF8F FFE6     	movff	plusw1,postinc1
 26341  013E72  006F FF8F FFE6     	movff	plusw1,postinc1
 26342  013E78  EC54  F008         	call	_ctoa	;wreg free
 26343  013E7C  EFB9  F0A4         	goto	l2691
 26344  013E80                     l16248:
 26345                           
 26346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 26347                           ;stkvar	_fmt @ sp[(-32)+-4]
 26348  013E80  0EDC               	movlw	-36
 26349  013E82  006F FF8F FFD9     	movff	plusw1,fsr2l
 26350  013E88  0EDD               	movlw	-35
 26351  013E8A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26352  013E90  006F FF7B FFF6     	movff	postinc2,tblptrl
 26353  013E96  006F FF77 FFF7     	movff	postdec2,tblptrh
 26354  013E9C                     	if	0	;tblptru may be non-zero
 26355  013E9C                     	endif
 26356  013E9C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26357  013E9C  0E00               	movlw	low (__mediumconst shr (0+16))
 26358  013E9E  6EF8               	movwf	tblptru,c
 26359  013EA0                     	endif
 26360  013EA0  0008               	tblrd		*
 26361  013EA2  50F5               	movf	tablat,w,c
 26362  013EA4  0A64               	xorlw	100
 26363  013EA6  B4D8               	btfsc	status,2,c
 26364  013EA8  D015               	goto	u15820
 26365                           
 26366                           ;stkvar	_fmt @ sp[(-32)+-4]
 26367  013EAA  0EDC               	movlw	-36
 26368  013EAC  006F FF8F FFD9     	movff	plusw1,fsr2l
 26369  013EB2  0EDD               	movlw	-35
 26370  013EB4  006F FF8F FFDA     	movff	plusw1,fsr2h
 26371  013EBA  006F FF7B FFF6     	movff	postinc2,tblptrl
 26372  013EC0  006F FF77 FFF7     	movff	postdec2,tblptrh
 26373  013EC6                     	if	0	;tblptru may be non-zero
 26374  013EC6                     	endif
 26375  013EC6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26376  013EC6  0E00               	movlw	low (__mediumconst shr (0+16))
 26377  013EC8  6EF8               	movwf	tblptru,c
 26378  013ECA                     	endif
 26379  013ECA  0008               	tblrd		*
 26380  013ECC  50F5               	movf	tablat,w,c
 26381  013ECE  0A69               	xorlw	105
 26382  013ED0  A4D8               	btfss	status,2,c
 26383  013ED2  D076               	goto	l16260
 26384  013ED4                     u15820:
 26385                           
 26386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 26387                           ;stkvar	_fmt @ sp[(-32)+-4]
 26388  013ED4  0EDC               	movlw	-36
 26389  013ED6  006F FF8F FFD9     	movff	plusw1,fsr2l
 26390  013EDC  0EDD               	movlw	-35
 26391  013EDE  006F FF8F FFDA     	movff	plusw1,fsr2h
 26392  013EE4  2ADE               	incf	postinc2,f,c
 26393  013EE6  0E00               	movlw	0
 26394  013EE8  22DD               	addwfc	postdec2,f,c
 26395                           
 26396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 26397                           ;stkvar	_ap @ sp[(-32)+-6]
 26398  013EEA  0EDA               	movlw	-38
 26399  013EEC  006F FF8F FFD9     	movff	plusw1,fsr2l
 26400  013EF2  0EDB               	movlw	-37
 26401  013EF4  006F FF8F FFDA     	movff	plusw1,fsr2h
 26402  013EFA  0E02               	movlw	2
 26403  013EFC  5EDE               	subwf	postinc2,f,c
 26404  013EFE  0E00               	movlw	0
 26405  013F00  5ADD               	subwfb	postdec2,f,c
 26406  013F02  006F FF78  F034    	movff	postinc2,btemp+10
 26407  013F08  006F FF74  F035    	movff	postdec2,btemp+11
 26408  013F0E  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26409  013F14  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26410  013F1A  006F FF78  F034    	movff	postinc2,btemp+10
 26411  013F20  006F FF74  F035    	movff	postdec2,btemp+11
 26412                           
 26413                           ;stkvar	_ll @ sp[(-32)+14]
 26414  013F26  0EEE               	movlw	-18
 26415  013F28  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26416  013F2E  0EEF               	movlw	-17
 26417  013F30  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26418  013F36  6A2A               	clrf	btemp^0,c
 26419  013F38  BEE3               	btfsc	plusw1,7,c
 26420  013F3A  682A               	setf	btemp^0,c
 26421  013F3C  0EF0               	movlw	-16
 26422  013F3E  0060  F0AB  FFE3   	movff	btemp,plusw1
 26423  013F44  0EF1               	movlw	-15
 26424  013F46  0060  F0AB  FFE3   	movff	btemp,plusw1
 26425  013F4C  0EF2               	movlw	-14
 26426  013F4E  0060  F0AB  FFE3   	movff	btemp,plusw1
 26427  013F54  0EF3               	movlw	-13
 26428  013F56  0060  F0AB  FFE3   	movff	btemp,plusw1
 26429  013F5C  0EF4               	movlw	-12
 26430  013F5E  0060  F0AB  FFE3   	movff	btemp,plusw1
 26431  013F64  0EF5               	movlw	-11
 26432  013F66  0060  F0AB  FFE3   	movff	btemp,plusw1
 26433  013F6C                     l16256:
 26434                           
 26435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 26436                           ;stkvar	_ll @ sp[(-32)+14]
 26437  013F6C  50E1               	movf	fsr1l,w,c
 26438  013F6E  0FEE               	addlw	-18
 26439  013F70  6ED9               	movwf	fsr2l,c
 26440  013F72  50E2               	movf	fsr1h,w,c
 26441  013F74  6EDA               	movwf	fsr2h,c
 26442  013F76  0EFF               	movlw	255
 26443  013F78  22DA               	addwfc	fsr2h,f,c
 26444  013F7A  006F FF7B FFE6     	movff	postinc2,postinc1
 26445  013F80  006F FF7B FFE6     	movff	postinc2,postinc1
 26446  013F86  006F FF7B FFE6     	movff	postinc2,postinc1
 26447  013F8C  006F FF7B FFE6     	movff	postinc2,postinc1
 26448  013F92  006F FF7B FFE6     	movff	postinc2,postinc1
 26449  013F98  006F FF7B FFE6     	movff	postinc2,postinc1
 26450  013F9E  006F FF7B FFE6     	movff	postinc2,postinc1
 26451  013FA4  006F FF7B FFE6     	movff	postinc2,postinc1
 26452                           
 26453                           ;stkvar	_fp @ sp[(-40)+-2]
 26454  013FAA  0ED6               	movlw	-42
 26455  013FAC  006F FF8F FFE6     	movff	plusw1,postinc1
 26456  013FB2  006F FF8F FFE6     	movff	plusw1,postinc1
 26457  013FB8  ECF6  F0C5         	call	_dtoa	;wreg free
 26458  013FBC  EFB9  F0A4         	goto	l2691
 26459  013FC0                     l16260:
 26460                           
 26461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 26462  013FC0  0E02               	movlw	2
 26463  013FC2  6EE6               	movwf	postinc1,c
 26464  013FC4  0E00               	movlw	0
 26465  013FC6  6EE6               	movwf	postinc1,c
 26466  013FC8  0EED               	movlw	low STR_104
 26467  013FCA  6EE6               	movwf	postinc1,c
 26468  013FCC  0EFF               	movlw	high STR_104
 26469  013FCE  6EE6               	movwf	postinc1,c
 26470                           
 26471                           ;stkvar	_fmt @ sp[(-36)+-4]
 26472  013FD0  0ED8               	movlw	-40
 26473  013FD2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26474  013FD8  0ED9               	movlw	-39
 26475  013FDA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26476  013FE0  006F FF78  F034    	movff	postinc2,btemp+10
 26477  013FE6  006F FF74  F035    	movff	postdec2,btemp+11
 26478  013FEC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26479  013FF2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26480  013FF8  EC00  F0E8         	call	_strncmp	;wreg free
 26481  013FFC  502A               	movf	btemp^0,w,c
 26482  013FFE  102B               	iorwf	(btemp+1)^0,w,c
 26483  014000  B4D8               	btfsc	status,2,c
 26484  014002  D022               	goto	u15840
 26485  014004  0E02               	movlw	2
 26486  014006  6EE6               	movwf	postinc1,c
 26487  014008  0E00               	movlw	0
 26488  01400A  6EE6               	movwf	postinc1,c
 26489  01400C  0EF3               	movlw	low STR_108
 26490  01400E  6EE6               	movwf	postinc1,c
 26491  014010  0EFF               	movlw	high STR_108
 26492  014012  6EE6               	movwf	postinc1,c
 26493                           
 26494                           ;stkvar	_fmt @ sp[(-36)+-4]
 26495  014014  0ED8               	movlw	-40
 26496  014016  006F FF8F FFD9     	movff	plusw1,fsr2l
 26497  01401C  0ED9               	movlw	-39
 26498  01401E  006F FF8F FFDA     	movff	plusw1,fsr2h
 26499  014024  006F FF78  F034    	movff	postinc2,btemp+10
 26500  01402A  006F FF74  F035    	movff	postdec2,btemp+11
 26501  014030  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26502  014036  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26503  01403C  EC00  F0E8         	call	_strncmp	;wreg free
 26504  014040  502A               	movf	btemp^0,w,c
 26505  014042  102B               	iorwf	(btemp+1)^0,w,c
 26506  014044  A4D8               	btfss	status,2,c
 26507  014046  D069               	goto	l16272
 26508  014048                     u15840:
 26509                           
 26510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 26511                           ;stkvar	_fmt @ sp[(-32)+-4]
 26512  014048  0EDC               	movlw	-36
 26513  01404A  006F FF8F FFD9     	movff	plusw1,fsr2l
 26514  014050  0EDD               	movlw	-35
 26515  014052  006F FF8F FFDA     	movff	plusw1,fsr2h
 26516  014058  0E02               	movlw	2
 26517  01405A  26DE               	addwf	postinc2,f,c
 26518  01405C  0E00               	movlw	0
 26519  01405E  22DD               	addwfc	postdec2,f,c
 26520                           
 26521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 26522                           ;stkvar	_ap @ sp[(-32)+-6]
 26523  014060  0EDA               	movlw	-38
 26524  014062  006F FF8F FFD9     	movff	plusw1,fsr2l
 26525  014068  0EDB               	movlw	-37
 26526  01406A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26527  014070  0E04               	movlw	4
 26528  014072  5EDE               	subwf	postinc2,f,c
 26529  014074  0E00               	movlw	0
 26530  014076  5ADD               	subwfb	postdec2,f,c
 26531  014078  006F FF78  F034    	movff	postinc2,btemp+10
 26532  01407E  006F FF74  F035    	movff	postdec2,btemp+11
 26533  014084  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26534  01408A  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26535  014090  006F FF78  F032    	movff	postinc2,btemp+8
 26536  014096  006F FF78  F033    	movff	postinc2,btemp+9
 26537  01409C  006F FF78  F034    	movff	postinc2,btemp+10
 26538  0140A2  006F FF78  F035    	movff	postinc2,btemp+11
 26539  0140A8  0060  F0C8  F03A   	movff	btemp+8,btemp+16
 26540  0140AE  0060  F0CC  F03B   	movff	btemp+9,btemp+17
 26541  0140B4  0060  F0D0  F03C   	movff	btemp+10,btemp+18
 26542  0140BA  0060  F0D4  F03D   	movff	btemp+11,btemp+19
 26543  0140C0  6A3E               	clrf	(btemp+20)^0,c
 26544  0140C2  BE3D               	btfsc	(btemp+19)^0,7,c
 26545  0140C4  683E               	setf	(btemp+20)^0,c
 26546  0140C6  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 26547  0140CC  0060  F0F8  F040   	movff	btemp+20,btemp+22
 26548  0140D2  0060  F0F8  F041   	movff	btemp+20,btemp+23
 26549                           
 26550                           ;stkvar	_ll @ sp[(-32)+14]
 26551  0140D8  0EEE               	movlw	-18
 26552  0140DA  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 26553  0140E0  0EEF               	movlw	-17
 26554  0140E2  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 26555  0140E8  0EF0               	movlw	-16
 26556  0140EA  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 26557  0140F0  0EF1               	movlw	-15
 26558  0140F2  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 26559  0140F8  0EF2               	movlw	-14
 26560  0140FA  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 26561  014100  0EF3               	movlw	-13
 26562  014102  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 26563  014108  0EF4               	movlw	-12
 26564  01410A  0060  F103  FFE3   	movff	btemp+22,plusw1
 26565  014110  0EF5               	movlw	-11
 26566  014112  0060  F107  FFE3   	movff	btemp+23,plusw1
 26567  014118  D729               	goto	l16256
 26568  01411A                     l16272:
 26569                           
 26570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 26571                           ;stkvar	_ct @ sp[(-32)+26]
 26572  01411A  0EFA               	movlw	-6
 26573  01411C  006F FF8C  F02A    	movff	plusw1,btemp
 26574  014122  0E66               	movlw	102
 26575  014124  182A               	xorwf	btemp^0,w,c
 26576  014126  A4D8               	btfss	status,2,c
 26577  014128  D06E               	goto	l16284
 26578                           
 26579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 26580                           ;stkvar	_fmt @ sp[(-32)+-4]
 26581  01412A  0EDC               	movlw	-36
 26582  01412C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26583  014132  0EDD               	movlw	-35
 26584  014134  006F FF8F FFDA     	movff	plusw1,fsr2h
 26585  01413A  006F FF7B FFF6     	movff	postinc2,tblptrl
 26586  014140  006F FF77 FFF7     	movff	postdec2,tblptrh
 26587  014146                     	if	0	;tblptru may be non-zero
 26588  014146                     	endif
 26589  014146                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26590  014146  0E00               	movlw	low (__mediumconst shr (0+16))
 26591  014148  6EF8               	movwf	tblptru,c
 26592  01414A                     	endif
 26593                           
 26594                           ;stkvar	_c @ sp[(-32)+31]
 26595  01414A  0008               	tblrd		*
 26596  01414C  0EFF               	movlw	-1
 26597  01414E  006F FFD7 FFE3     	movff	tablat,plusw1
 26598                           
 26599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 26600                           ;stkvar	_fmt @ sp[(-32)+-4]
 26601  014154  0EDC               	movlw	-36
 26602  014156  006F FF8F FFD9     	movff	plusw1,fsr2l
 26603  01415C  0EDD               	movlw	-35
 26604  01415E  006F FF8F FFDA     	movff	plusw1,fsr2h
 26605  014164  2ADE               	incf	postinc2,f,c
 26606  014166  0E00               	movlw	0
 26607  014168  22DD               	addwfc	postdec2,f,c
 26608                           
 26609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 26610                           ;stkvar	_ap @ sp[(-32)+-6]
 26611  01416A  0EDA               	movlw	-38
 26612  01416C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26613  014172  0EDB               	movlw	-37
 26614  014174  006F FF8F FFDA     	movff	plusw1,fsr2h
 26615  01417A  0E04               	movlw	4
 26616  01417C  5EDE               	subwf	postinc2,f,c
 26617  01417E  0E00               	movlw	0
 26618  014180  5ADD               	subwfb	postdec2,f,c
 26619  014182  006F FF78  F034    	movff	postinc2,btemp+10
 26620  014188  006F FF74  F035    	movff	postdec2,btemp+11
 26621  01418E  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26622  014194  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26623  01419A  006F FF78  F032    	movff	postinc2,btemp+8
 26624  0141A0  006F FF78  F033    	movff	postinc2,btemp+9
 26625  0141A6  006F FF78  F034    	movff	postinc2,btemp+10
 26626  0141AC  006F FF78  F035    	movff	postinc2,btemp+11
 26627                           
 26628                           ;stkvar	_f @ sp[(-32)+22]
 26629  0141B2  0EF6               	movlw	-10
 26630  0141B4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 26631  0141BA  0EF7               	movlw	-9
 26632  0141BC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 26633  0141C2  0EF8               	movlw	-8
 26634  0141C4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26635  0141CA  0EF9               	movlw	-7
 26636  0141CC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26637  0141D2                     l16280:
 26638                           
 26639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 26640                           ;stkvar	_c @ sp[(-32)+31]
 26641  0141D2  0EFF               	movlw	-1
 26642  0141D4  50E3               	movf	plusw1,w,c
 26643  0141D6  6EE6               	movwf	postinc1,c
 26644                           
 26645                           ;stkvar	_f @ sp[(-33)+22]
 26646  0141D8  0EF5               	movlw	-11
 26647  0141DA  006F FF8F FFE6     	movff	plusw1,postinc1
 26648  0141E0  006F FF8F FFE6     	movff	plusw1,postinc1
 26649  0141E6  006F FF8F FFE6     	movff	plusw1,postinc1
 26650  0141EC  006F FF8F FFE6     	movff	plusw1,postinc1
 26651                           
 26652                           ;stkvar	_fp @ sp[(-37)+-2]
 26653  0141F2  0ED9               	movlw	-39
 26654  0141F4  006F FF8F FFE6     	movff	plusw1,postinc1
 26655  0141FA  006F FF8F FFE6     	movff	plusw1,postinc1
 26656  014200  EC5D  F08B         	call	_efgtoa	;wreg free
 26657  014204  D3B6               	goto	l2691
 26658  014206                     l16284:
 26659                           
 26660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 26661  014206  0E02               	movlw	2
 26662  014208  6EE6               	movwf	postinc1,c
 26663  01420A  0E00               	movlw	0
 26664  01420C  6EE6               	movwf	postinc1,c
 26665  01420E  0EF0               	movlw	low STR_113
 26666  014210  6EE6               	movwf	postinc1,c
 26667  014212  0EFF               	movlw	high STR_113
 26668  014214  6EE6               	movwf	postinc1,c
 26669                           
 26670                           ;stkvar	_ct @ sp[(-36)+26]
 26671  014216  0EF6               	movlw	246
 26672  014218  24E1               	addwf	fsr1l,w,c
 26673  01421A  6E2A               	movwf	btemp^0,c
 26674  01421C  0EFF               	movlw	255
 26675  01421E  20E2               	addwfc	fsr1h,w,c
 26676  014220  6E2B               	movwf	(btemp+1)^0,c
 26677  014222  0060  F0AB  FFE6   	movff	btemp,postinc1
 26678  014228  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 26679  01422E  EC00  F0E8         	call	_strncmp	;wreg free
 26680  014232  502A               	movf	btemp^0,w,c
 26681  014234  102B               	iorwf	(btemp+1)^0,w,c
 26682  014236  A4D8               	btfss	status,2,c
 26683  014238  D096               	goto	l16304
 26684                           
 26685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 26686                           ;stkvar	_fmt @ sp[(-32)+-4]
 26687  01423A  0EDC               	movlw	-36
 26688  01423C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26689  014242  0EDD               	movlw	-35
 26690  014244  006F FF8F FFDA     	movff	plusw1,fsr2h
 26691  01424A  006F FF78  F034    	movff	postinc2,btemp+10
 26692  014250  006F FF74  F035    	movff	postdec2,btemp+11
 26693  014256  0E01               	movlw	1
 26694  014258  2634               	addwf	(btemp+10)^0,f,c
 26695  01425A  0E00               	movlw	0
 26696  01425C  2235               	addwfc	(btemp+11)^0,f,c
 26697  01425E  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 26698  014264  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 26699  01426A                     	if	0	;tblptru may be non-zero
 26700  01426A                     	endif
 26701  01426A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26702  01426A  0E00               	movlw	low (__mediumconst shr (0+16))
 26703  01426C  6EF8               	movwf	tblptru,c
 26704  01426E                     	endif
 26705                           
 26706                           ;stkvar	_c @ sp[(-32)+31]
 26707  01426E  0008               	tblrd		*
 26708  014270  0EFF               	movlw	-1
 26709  014272  006F FFD7 FFE3     	movff	tablat,plusw1
 26710  014278  0EBF               	movlw	191
 26711  01427A  6E34               	movwf	(btemp+10)^0,c
 26712  01427C  0EFF               	movlw	255
 26713  01427E  6E35               	movwf	(btemp+11)^0,c
 26714                           
 26715                           ;stkvar	_fmt @ sp[(-32)+-4]
 26716  014280  0EDC               	movlw	-36
 26717  014282  006F FF8F FFD9     	movff	plusw1,fsr2l
 26718  014288  0EDD               	movlw	-35
 26719  01428A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26720  014290  006F FF7B FFF6     	movff	postinc2,tblptrl
 26721  014296  006F FF77 FFF7     	movff	postdec2,tblptrh
 26722  01429C                     	if	0	;tblptru may be non-zero
 26723  01429C                     	endif
 26724  01429C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26725  01429C  0E00               	movlw	low (__mediumconst shr (0+16))
 26726  01429E  6EF8               	movwf	tblptru,c
 26727  0142A0                     	endif
 26728  0142A0  0008               	tblrd		*
 26729  0142A2  50F5               	movf	tablat,w,c
 26730  0142A4  6E32               	movwf	(btemp+8)^0,c
 26731  0142A6  6A33               	clrf	(btemp+9)^0,c
 26732  0142A8  5034               	movf	(btemp+10)^0,w,c
 26733  0142AA  2632               	addwf	(btemp+8)^0,f,c
 26734  0142AC  5035               	movf	(btemp+11)^0,w,c
 26735  0142AE  2233               	addwfc	(btemp+9)^0,f,c
 26736  0142B0  5033               	movf	(btemp+9)^0,w,c
 26737  0142B2  E106               	bnz	u15870
 26738  0142B4  0E1A               	movlw	26
 26739  0142B6  5C32               	subwf	(btemp+8)^0,w,c
 26740  0142B8  B0D8               	btfsc	status,0,c
 26741  0142BA  D002               	goto	u15870
 26742  0142BC  0E01               	movlw	1
 26743  0142BE  D001               	goto	u15880
 26744  0142C0                     u15870:
 26745  0142C0  0E00               	movlw	0
 26746  0142C2                     u15880:
 26747  0142C2  6E34               	movwf	(btemp+10)^0,c
 26748  0142C4  6A35               	clrf	(btemp+11)^0,c
 26749                           
 26750                           ;stkvar	_vfpfcnvrt$6678 @ sp[(-32)+2]
 26751  0142C6  0EE2               	movlw	-30
 26752  0142C8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26753  0142CE  0EE3               	movlw	-29
 26754  0142D0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26755                           
 26756                           ;stkvar	_vfpfcnvrt$6678 @ sp[(-32)+2]
 26757  0142D6  0EE2               	movlw	-30
 26758  0142D8  006F FF8C  F02A    	movff	plusw1,btemp
 26759  0142DE  0EE3               	movlw	-29
 26760  0142E0  50E3               	movf	plusw1,w,c
 26761  0142E2  102A               	iorwf	btemp^0,w,c
 26762                           
 26763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 26764                           ;stkvar	_ap @ sp[(-32)+-6]
 26765                           
 26766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 26767                           
 26768                           ;stkvar	_f @ sp[(-32)+22]
 26769                           
 26770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 26771                           ;stkvar	_ap @ sp[(-32)+-6]
 26772  0142E4  0EDA               	movlw	-38
 26773  0142E6  006F FF8F FFD9     	movff	plusw1,fsr2l
 26774  0142EC  0EDB               	movlw	-37
 26775  0142EE  006F FF8F FFDA     	movff	plusw1,fsr2h
 26776  0142F4  0E04               	movlw	4
 26777  0142F6  5EDE               	subwf	postinc2,f,c
 26778  0142F8  0E00               	movlw	0
 26779  0142FA  5ADD               	subwfb	postdec2,f,c
 26780  0142FC  006F FF78  F034    	movff	postinc2,btemp+10
 26781  014302  006F FF74  F035    	movff	postdec2,btemp+11
 26782  014308  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26783  01430E  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26784  014314  006F FF78  F032    	movff	postinc2,btemp+8
 26785  01431A  006F FF78  F033    	movff	postinc2,btemp+9
 26786  014320  006F FF78  F034    	movff	postinc2,btemp+10
 26787  014326  006F FF78  F035    	movff	postinc2,btemp+11
 26788                           
 26789                           ;stkvar	_f @ sp[(-32)+22]
 26790  01432C  0EF6               	movlw	-10
 26791  01432E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 26792  014334  0EF7               	movlw	-9
 26793  014336  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 26794  01433C  0EF8               	movlw	-8
 26795  01433E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26796  014344  0EF9               	movlw	-7
 26797  014346  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26798                           
 26799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 26800                           ;stkvar	_fmt @ sp[(-32)+-4]
 26801  01434C  0EDC               	movlw	-36
 26802  01434E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26803  014354  0EDD               	movlw	-35
 26804  014356  006F FF8F FFDA     	movff	plusw1,fsr2h
 26805  01435C  0E02               	movlw	2
 26806  01435E  26DE               	addwf	postinc2,f,c
 26807  014360  0E00               	movlw	0
 26808  014362  22DD               	addwfc	postdec2,f,c
 26809  014364  D736               	goto	l16280
 26810  014366                     l16304:
 26811                           
 26812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 26813                           ;stkvar	_fmt @ sp[(-32)+-4]
 26814  014366  0EDC               	movlw	-36
 26815  014368  006F FF8F FFD9     	movff	plusw1,fsr2l
 26816  01436E  0EDD               	movlw	-35
 26817  014370  006F FF8F FFDA     	movff	plusw1,fsr2h
 26818  014376  006F FF7B FFF6     	movff	postinc2,tblptrl
 26819  01437C  006F FF77 FFF7     	movff	postdec2,tblptrh
 26820  014382                     	if	0	;tblptru may be non-zero
 26821  014382                     	endif
 26822  014382                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26823  014382  0E00               	movlw	low (__mediumconst shr (0+16))
 26824  014384  6EF8               	movwf	tblptru,c
 26825  014386                     	endif
 26826  014386  0008               	tblrd		*
 26827  014388  50F5               	movf	tablat,w,c
 26828  01438A  0A73               	xorlw	115
 26829  01438C  A4D8               	btfss	status,2,c
 26830  01438E  D042               	goto	l16314
 26831                           
 26832                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 26833                           ;stkvar	_fmt @ sp[(-32)+-4]
 26834  014390  0EDC               	movlw	-36
 26835  014392  006F FF8F FFD9     	movff	plusw1,fsr2l
 26836  014398  0EDD               	movlw	-35
 26837  01439A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26838  0143A0  2ADE               	incf	postinc2,f,c
 26839  0143A2  0E00               	movlw	0
 26840  0143A4  22DD               	addwfc	postdec2,f,c
 26841                           
 26842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 26843                           ;stkvar	_ap @ sp[(-32)+-6]
 26844  0143A6  0EDA               	movlw	-38
 26845  0143A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 26846  0143AE  0EDB               	movlw	-37
 26847  0143B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 26848  0143B6  0E02               	movlw	2
 26849  0143B8  5EDE               	subwf	postinc2,f,c
 26850  0143BA  0E00               	movlw	0
 26851  0143BC  5ADD               	subwfb	postdec2,f,c
 26852  0143BE  006F FF78  F034    	movff	postinc2,btemp+10
 26853  0143C4  006F FF74  F035    	movff	postdec2,btemp+11
 26854  0143CA  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26855  0143D0  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26856  0143D6  006F FF78  F034    	movff	postinc2,btemp+10
 26857  0143DC  006F FF74  F035    	movff	postdec2,btemp+11
 26858                           
 26859                           ;stkvar	_cp @ sp[(-32)+29]
 26860  0143E2  0EFE               	movlw	-2
 26861  0143E4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26862  0143EA  0EFD               	movlw	-3
 26863  0143EC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26864                           
 26865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 26866                           ;stkvar	_cp @ sp[(-32)+29]
 26867  0143F2  0EFD               	movlw	-3
 26868  0143F4  006F FF8F FFE6     	movff	plusw1,postinc1
 26869  0143FA  006F FF8F FFE6     	movff	plusw1,postinc1
 26870                           
 26871                           ;stkvar	_fp @ sp[(-34)+-2]
 26872  014400  0EDC               	movlw	-36
 26873  014402  006F FF8F FFE6     	movff	plusw1,postinc1
 26874  014408  006F FF8F FFE6     	movff	plusw1,postinc1
 26875  01440E  EC2A  F0DD         	call	_stoa	;wreg free
 26876  014412  D2AF               	goto	l2691
 26877  014414                     l16314:
 26878                           
 26879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 26880                           ;stkvar	_fmt @ sp[(-32)+-4]
 26881  014414  0EDC               	movlw	-36
 26882  014416  006F FF8F FFD9     	movff	plusw1,fsr2l
 26883  01441C  0EDD               	movlw	-35
 26884  01441E  006F FF8F FFDA     	movff	plusw1,fsr2h
 26885  014424  006F FF7B FFF6     	movff	postinc2,tblptrl
 26886  01442A  006F FF77 FFF7     	movff	postdec2,tblptrh
 26887  014430                     	if	0	;tblptru may be non-zero
 26888  014430                     	endif
 26889  014430                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26890  014430  0E00               	movlw	low (__mediumconst shr (0+16))
 26891  014432  6EF8               	movwf	tblptru,c
 26892  014434                     	endif
 26893  014434  0008               	tblrd		*
 26894  014436  50F5               	movf	tablat,w,c
 26895  014438  0A75               	xorlw	117
 26896  01443A  A4D8               	btfss	status,2,c
 26897  01443C  D07C               	goto	l16324
 26898                           
 26899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 26900                           ;stkvar	_fmt @ sp[(-32)+-4]
 26901  01443E  0EDC               	movlw	-36
 26902  014440  006F FF8F FFD9     	movff	plusw1,fsr2l
 26903  014446  0EDD               	movlw	-35
 26904  014448  006F FF8F FFDA     	movff	plusw1,fsr2h
 26905  01444E  2ADE               	incf	postinc2,f,c
 26906  014450  0E00               	movlw	0
 26907  014452  22DD               	addwfc	postdec2,f,c
 26908                           
 26909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 26910                           ;stkvar	_ap @ sp[(-32)+-6]
 26911  014454  0EDA               	movlw	-38
 26912  014456  006F FF8F FFD9     	movff	plusw1,fsr2l
 26913  01445C  0EDB               	movlw	-37
 26914  01445E  006F FF8F FFDA     	movff	plusw1,fsr2h
 26915  014464  0E02               	movlw	2
 26916  014466  5EDE               	subwf	postinc2,f,c
 26917  014468  0E00               	movlw	0
 26918  01446A  5ADD               	subwfb	postdec2,f,c
 26919  01446C  006F FF78  F034    	movff	postinc2,btemp+10
 26920  014472  006F FF74  F035    	movff	postdec2,btemp+11
 26921  014478  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26922  01447E  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26923  014484  006F FF78  F034    	movff	postinc2,btemp+10
 26924  01448A  006F FF74  F035    	movff	postdec2,btemp+11
 26925  014490  5034               	movf	(btemp+10)^0,w,c
 26926  014492  6E3A               	movwf	(btemp+16)^0,c
 26927  014494  5035               	movf	(btemp+11)^0,w,c
 26928  014496  6E3B               	movwf	(btemp+17)^0,c
 26929  014498  6A3C               	clrf	(btemp+18)^0,c
 26930  01449A  6A3D               	clrf	(btemp+19)^0,c
 26931  01449C  6A3E               	clrf	(btemp+20)^0,c
 26932  01449E  6A3F               	clrf	(btemp+21)^0,c
 26933  0144A0  6A40               	clrf	(btemp+22)^0,c
 26934  0144A2  6A41               	clrf	(btemp+23)^0,c
 26935                           
 26936                           ;stkvar	_llu @ sp[(-32)+6]
 26937  0144A4  0EE6               	movlw	-26
 26938  0144A6  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 26939  0144AC  0EE7               	movlw	-25
 26940  0144AE  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 26941  0144B4  0EE8               	movlw	-24
 26942  0144B6  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 26943  0144BC  0EE9               	movlw	-23
 26944  0144BE  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 26945  0144C4  0EEA               	movlw	-22
 26946  0144C6  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 26947  0144CC  0EEB               	movlw	-21
 26948  0144CE  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 26949  0144D4  0EEC               	movlw	-20
 26950  0144D6  0060  F103  FFE3   	movff	btemp+22,plusw1
 26951  0144DC  0EED               	movlw	-19
 26952  0144DE  0060  F107  FFE3   	movff	btemp+23,plusw1
 26953                           
 26954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 26955                           ;stkvar	_llu @ sp[(-32)+6]
 26956  0144E4  50E1               	movf	fsr1l,w,c
 26957  0144E6  0FE6               	addlw	-26
 26958  0144E8  6ED9               	movwf	fsr2l,c
 26959  0144EA  50E2               	movf	fsr1h,w,c
 26960  0144EC  6EDA               	movwf	fsr2h,c
 26961  0144EE  0EFF               	movlw	255
 26962  0144F0  22DA               	addwfc	fsr2h,f,c
 26963  0144F2  006F FF7B FFE6     	movff	postinc2,postinc1
 26964  0144F8  006F FF7B FFE6     	movff	postinc2,postinc1
 26965  0144FE  006F FF7B FFE6     	movff	postinc2,postinc1
 26966  014504  006F FF7B FFE6     	movff	postinc2,postinc1
 26967  01450A  006F FF7B FFE6     	movff	postinc2,postinc1
 26968  014510  006F FF7B FFE6     	movff	postinc2,postinc1
 26969  014516  006F FF7B FFE6     	movff	postinc2,postinc1
 26970  01451C  006F FF7B FFE6     	movff	postinc2,postinc1
 26971                           
 26972                           ;stkvar	_fp @ sp[(-40)+-2]
 26973  014522  0ED6               	movlw	-42
 26974  014524  006F FF8F FFE6     	movff	plusw1,postinc1
 26975  01452A  006F FF8F FFE6     	movff	plusw1,postinc1
 26976  014530  ECBD  F0D5         	call	_utoa	;wreg free
 26977  014534  D21E               	goto	l2691
 26978  014536                     l16324:
 26979                           
 26980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 26981  014536  0E02               	movlw	2
 26982  014538  6EE6               	movwf	postinc1,c
 26983  01453A  0E00               	movlw	0
 26984  01453C  6EE6               	movwf	postinc1,c
 26985  01453E  0EF6               	movlw	low STR_118
 26986  014540  6EE6               	movwf	postinc1,c
 26987  014542  0EFF               	movlw	high STR_118
 26988  014544  6EE6               	movwf	postinc1,c
 26989                           
 26990                           ;stkvar	_fmt @ sp[(-36)+-4]
 26991  014546  0ED8               	movlw	-40
 26992  014548  006F FF8F FFD9     	movff	plusw1,fsr2l
 26993  01454E  0ED9               	movlw	-39
 26994  014550  006F FF8F FFDA     	movff	plusw1,fsr2h
 26995  014556  006F FF78  F034    	movff	postinc2,btemp+10
 26996  01455C  006F FF74  F035    	movff	postdec2,btemp+11
 26997  014562  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26998  014568  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26999  01456E  EC00  F0E8         	call	_strncmp	;wreg free
 27000  014572  502A               	movf	btemp^0,w,c
 27001  014574  102B               	iorwf	(btemp+1)^0,w,c
 27002  014576  A4D8               	btfss	status,2,c
 27003  014578  D039               	goto	l16334
 27004                           
 27005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 27006                           ;stkvar	_fmt @ sp[(-32)+-4]
 27007  01457A  0EDC               	movlw	-36
 27008  01457C  006F FF8F FFD9     	movff	plusw1,fsr2l
 27009  014582  0EDD               	movlw	-35
 27010  014584  006F FF8F FFDA     	movff	plusw1,fsr2h
 27011  01458A  0E02               	movlw	2
 27012  01458C  26DE               	addwf	postinc2,f,c
 27013  01458E  0E00               	movlw	0
 27014  014590  22DD               	addwfc	postdec2,f,c
 27015                           
 27016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 27017                           ;stkvar	_ap @ sp[(-32)+-6]
 27018  014592  0EDA               	movlw	-38
 27019  014594  006F FF8F FFD9     	movff	plusw1,fsr2l
 27020  01459A  0EDB               	movlw	-37
 27021  01459C  006F FF8F FFDA     	movff	plusw1,fsr2h
 27022  0145A2  0E04               	movlw	4
 27023  0145A4  5EDE               	subwf	postinc2,f,c
 27024  0145A6  0E00               	movlw	0
 27025  0145A8  5ADD               	subwfb	postdec2,f,c
 27026  0145AA  006F FF78  F034    	movff	postinc2,btemp+10
 27027  0145B0  006F FF74  F035    	movff	postdec2,btemp+11
 27028  0145B6  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27029  0145BC  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27030  0145C2  006F FF78  F032    	movff	postinc2,btemp+8
 27031  0145C8  006F FF78  F033    	movff	postinc2,btemp+9
 27032  0145CE  006F FF78  F034    	movff	postinc2,btemp+10
 27033  0145D4  006F FF78  F035    	movff	postinc2,btemp+11
 27034  0145DA  5032               	movf	(btemp+8)^0,w,c
 27035  0145DC  6E3A               	movwf	(btemp+16)^0,c
 27036  0145DE  5033               	movf	(btemp+9)^0,w,c
 27037  0145E0  6E3B               	movwf	(btemp+17)^0,c
 27038  0145E2  5034               	movf	(btemp+10)^0,w,c
 27039  0145E4  6E3C               	movwf	(btemp+18)^0,c
 27040  0145E6  5035               	movf	(btemp+11)^0,w,c
 27041  0145E8  6E3D               	movwf	(btemp+19)^0,c
 27042  0145EA  D758               	goto	L25
 27043  0145EC                     l16334:
 27044                           
 27045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 27046                           ;stkvar	_fmt @ sp[(-32)+-4]
 27047  0145EC  0EDC               	movlw	-36
 27048  0145EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 27049  0145F4  0EDD               	movlw	-35
 27050  0145F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 27051  0145FC  006F FF7B FFF6     	movff	postinc2,tblptrl
 27052  014602  006F FF77 FFF7     	movff	postdec2,tblptrh
 27053  014608                     	if	0	;tblptru may be non-zero
 27054  014608                     	endif
 27055  014608                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27056  014608  0E00               	movlw	low (__mediumconst shr (0+16))
 27057  01460A  6EF8               	movwf	tblptru,c
 27058  01460C                     	endif
 27059  01460C  0008               	tblrd		*
 27060  01460E  50F5               	movf	tablat,w,c
 27061  014610  0A78               	xorlw	120
 27062  014612  B4D8               	btfsc	status,2,c
 27063  014614  D015               	goto	u15940
 27064                           
 27065                           ;stkvar	_fmt @ sp[(-32)+-4]
 27066  014616  0EDC               	movlw	-36
 27067  014618  006F FF8F FFD9     	movff	plusw1,fsr2l
 27068  01461E  0EDD               	movlw	-35
 27069  014620  006F FF8F FFDA     	movff	plusw1,fsr2h
 27070  014626  006F FF7B FFF6     	movff	postinc2,tblptrl
 27071  01462C  006F FF77 FFF7     	movff	postdec2,tblptrh
 27072  014632                     	if	0	;tblptru may be non-zero
 27073  014632                     	endif
 27074  014632                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27075  014632  0E00               	movlw	low (__mediumconst shr (0+16))
 27076  014634  6EF8               	movwf	tblptru,c
 27077  014636                     	endif
 27078  014636  0008               	tblrd		*
 27079  014638  50F5               	movf	tablat,w,c
 27080  01463A  0A58               	xorlw	88
 27081  01463C  A4D8               	btfss	status,2,c
 27082  01463E  D094               	goto	l16348
 27083  014640                     u15940:
 27084                           
 27085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 27086                           ;stkvar	_fmt @ sp[(-32)+-4]
 27087  014640  0EDC               	movlw	-36
 27088  014642  006F FF8F FFD9     	movff	plusw1,fsr2l
 27089  014648  0EDD               	movlw	-35
 27090  01464A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27091  014650  006F FF7B FFF6     	movff	postinc2,tblptrl
 27092  014656  006F FF77 FFF7     	movff	postdec2,tblptrh
 27093  01465C                     	if	0	;tblptru may be non-zero
 27094  01465C                     	endif
 27095  01465C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27096  01465C  0E00               	movlw	low (__mediumconst shr (0+16))
 27097  01465E  6EF8               	movwf	tblptru,c
 27098  014660                     	endif
 27099                           
 27100                           ;stkvar	_c @ sp[(-32)+31]
 27101  014660  0008               	tblrd		*
 27102  014662  0EFF               	movlw	-1
 27103  014664  006F FFD7 FFE3     	movff	tablat,plusw1
 27104                           
 27105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 27106                           ;stkvar	_fmt @ sp[(-32)+-4]
 27107  01466A  0EDC               	movlw	-36
 27108  01466C  006F FF8F FFD9     	movff	plusw1,fsr2l
 27109  014672  0EDD               	movlw	-35
 27110  014674  006F FF8F FFDA     	movff	plusw1,fsr2h
 27111  01467A  2ADE               	incf	postinc2,f,c
 27112  01467C  0E00               	movlw	0
 27113  01467E  22DD               	addwfc	postdec2,f,c
 27114                           
 27115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 27116                           ;stkvar	_ap @ sp[(-32)+-6]
 27117  014680  0EDA               	movlw	-38
 27118  014682  006F FF8F FFD9     	movff	plusw1,fsr2l
 27119  014688  0EDB               	movlw	-37
 27120  01468A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27121  014690  0E02               	movlw	2
 27122  014692  5EDE               	subwf	postinc2,f,c
 27123  014694  0E00               	movlw	0
 27124  014696  5ADD               	subwfb	postdec2,f,c
 27125  014698  006F FF78  F034    	movff	postinc2,btemp+10
 27126  01469E  006F FF74  F035    	movff	postdec2,btemp+11
 27127  0146A4  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27128  0146AA  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27129  0146B0  006F FF78  F034    	movff	postinc2,btemp+10
 27130  0146B6  006F FF74  F035    	movff	postdec2,btemp+11
 27131  0146BC  5034               	movf	(btemp+10)^0,w,c
 27132  0146BE  6E3A               	movwf	(btemp+16)^0,c
 27133  0146C0  5035               	movf	(btemp+11)^0,w,c
 27134  0146C2  6E3B               	movwf	(btemp+17)^0,c
 27135  0146C4  6A3C               	clrf	(btemp+18)^0,c
 27136  0146C6  6A3D               	clrf	(btemp+19)^0,c
 27137  0146C8  6A3E               	clrf	(btemp+20)^0,c
 27138  0146CA  6A3F               	clrf	(btemp+21)^0,c
 27139  0146CC  6A40               	clrf	(btemp+22)^0,c
 27140  0146CE  6A41               	clrf	(btemp+23)^0,c
 27141                           
 27142                           ;stkvar	_llu @ sp[(-32)+6]
 27143  0146D0  0EE6               	movlw	-26
 27144  0146D2  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 27145  0146D8  0EE7               	movlw	-25
 27146  0146DA  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 27147  0146E0  0EE8               	movlw	-24
 27148  0146E2  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 27149  0146E8  0EE9               	movlw	-23
 27150  0146EA  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 27151  0146F0  0EEA               	movlw	-22
 27152  0146F2  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 27153  0146F8  0EEB               	movlw	-21
 27154  0146FA  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 27155  014700  0EEC               	movlw	-20
 27156  014702  0060  F103  FFE3   	movff	btemp+22,plusw1
 27157  014708  0EED               	movlw	-19
 27158  01470A  0060  F107  FFE3   	movff	btemp+23,plusw1
 27159                           
 27160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 27161                           ;stkvar	_c @ sp[(-32)+31]
 27162  014710  0EFF               	movlw	-1
 27163  014712  50E3               	movf	plusw1,w,c
 27164  014714  6EE6               	movwf	postinc1,c
 27165                           
 27166                           ;stkvar	_llu @ sp[(-33)+6]
 27167  014716  50E1               	movf	fsr1l,w,c
 27168  014718  0FE5               	addlw	-27
 27169  01471A  6ED9               	movwf	fsr2l,c
 27170  01471C  50E2               	movf	fsr1h,w,c
 27171  01471E  6EDA               	movwf	fsr2h,c
 27172  014720  0EFF               	movlw	255
 27173  014722  22DA               	addwfc	fsr2h,f,c
 27174  014724  006F FF7B FFE6     	movff	postinc2,postinc1
 27175  01472A  006F FF7B FFE6     	movff	postinc2,postinc1
 27176  014730  006F FF7B FFE6     	movff	postinc2,postinc1
 27177  014736  006F FF7B FFE6     	movff	postinc2,postinc1
 27178  01473C  006F FF7B FFE6     	movff	postinc2,postinc1
 27179  014742  006F FF7B FFE6     	movff	postinc2,postinc1
 27180  014748  006F FF7B FFE6     	movff	postinc2,postinc1
 27181  01474E  006F FF7B FFE6     	movff	postinc2,postinc1
 27182                           
 27183                           ;stkvar	_fp @ sp[(-41)+-2]
 27184  014754  0ED5               	movlw	-43
 27185  014756  006F FF8F FFE6     	movff	plusw1,postinc1
 27186  01475C  006F FF8F FFE6     	movff	plusw1,postinc1
 27187  014762  ECD0  F0CE         	call	_xtoa	;wreg free
 27188  014766  D105               	goto	l2691
 27189  014768                     l16348:
 27190                           
 27191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 27192  014768  0E02               	movlw	2
 27193  01476A  6EE6               	movwf	postinc1,c
 27194  01476C  0E00               	movlw	0
 27195  01476E  6EE6               	movwf	postinc1,c
 27196  014770  0EF9               	movlw	low STR_123
 27197  014772  6EE6               	movwf	postinc1,c
 27198  014774  0EFF               	movlw	high STR_123
 27199  014776  6EE6               	movwf	postinc1,c
 27200                           
 27201                           ;stkvar	_fmt @ sp[(-36)+-4]
 27202  014778  0ED8               	movlw	-40
 27203  01477A  006F FF8F FFD9     	movff	plusw1,fsr2l
 27204  014780  0ED9               	movlw	-39
 27205  014782  006F FF8F FFDA     	movff	plusw1,fsr2h
 27206  014788  006F FF78  F034    	movff	postinc2,btemp+10
 27207  01478E  006F FF74  F035    	movff	postdec2,btemp+11
 27208  014794  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27209  01479A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27210  0147A0  EC00  F0E8         	call	_strncmp	;wreg free
 27211  0147A4  502A               	movf	btemp^0,w,c
 27212  0147A6  102B               	iorwf	(btemp+1)^0,w,c
 27213  0147A8  B4D8               	btfsc	status,2,c
 27214  0147AA  D022               	goto	u15960
 27215  0147AC  0E02               	movlw	2
 27216  0147AE  6EE6               	movwf	postinc1,c
 27217  0147B0  0E00               	movlw	0
 27218  0147B2  6EE6               	movwf	postinc1,c
 27219  0147B4  0EEA               	movlw	low STR_127
 27220  0147B6  6EE6               	movwf	postinc1,c
 27221  0147B8  0EFF               	movlw	high STR_127
 27222  0147BA  6EE6               	movwf	postinc1,c
 27223                           
 27224                           ;stkvar	_fmt @ sp[(-36)+-4]
 27225  0147BC  0ED8               	movlw	-40
 27226  0147BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 27227  0147C4  0ED9               	movlw	-39
 27228  0147C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 27229  0147CC  006F FF78  F034    	movff	postinc2,btemp+10
 27230  0147D2  006F FF74  F035    	movff	postdec2,btemp+11
 27231  0147D8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27232  0147DE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27233  0147E4  EC00  F0E8         	call	_strncmp	;wreg free
 27234  0147E8  502A               	movf	btemp^0,w,c
 27235  0147EA  102B               	iorwf	(btemp+1)^0,w,c
 27236  0147EC  A4D8               	btfss	status,2,c
 27237  0147EE  D058               	goto	l16362
 27238  0147F0                     u15960:
 27239                           
 27240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 27241                           ;stkvar	_fmt @ sp[(-32)+-4]
 27242  0147F0  0EDC               	movlw	-36
 27243  0147F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 27244  0147F8  0EDD               	movlw	-35
 27245  0147FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 27246  014800  006F FF78  F034    	movff	postinc2,btemp+10
 27247  014806  006F FF74  F035    	movff	postdec2,btemp+11
 27248  01480C  0E01               	movlw	1
 27249  01480E  2634               	addwf	(btemp+10)^0,f,c
 27250  014810  0E00               	movlw	0
 27251  014812  2235               	addwfc	(btemp+11)^0,f,c
 27252  014814  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 27253  01481A  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 27254  014820                     	if	0	;tblptru may be non-zero
 27255  014820                     	endif
 27256  014820                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27257  014820  0E00               	movlw	low (__mediumconst shr (0+16))
 27258  014822  6EF8               	movwf	tblptru,c
 27259  014824                     	endif
 27260                           
 27261                           ;stkvar	_c @ sp[(-32)+31]
 27262  014824  0008               	tblrd		*
 27263  014826  0EFF               	movlw	-1
 27264  014828  006F FFD7 FFE3     	movff	tablat,plusw1
 27265                           
 27266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 27267                           ;stkvar	_fmt @ sp[(-32)+-4]
 27268  01482E  0EDC               	movlw	-36
 27269  014830  006F FF8F FFD9     	movff	plusw1,fsr2l
 27270  014836  0EDD               	movlw	-35
 27271  014838  006F FF8F FFDA     	movff	plusw1,fsr2h
 27272  01483E  0E02               	movlw	2
 27273  014840  26DE               	addwf	postinc2,f,c
 27274  014842  0E00               	movlw	0
 27275  014844  22DD               	addwfc	postdec2,f,c
 27276                           
 27277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 27278                           ;stkvar	_ap @ sp[(-32)+-6]
 27279  014846  0EDA               	movlw	-38
 27280  014848  006F FF8F FFD9     	movff	plusw1,fsr2l
 27281  01484E  0EDB               	movlw	-37
 27282  014850  006F FF8F FFDA     	movff	plusw1,fsr2h
 27283  014856  0E04               	movlw	4
 27284  014858  5EDE               	subwf	postinc2,f,c
 27285  01485A  0E00               	movlw	0
 27286  01485C  5ADD               	subwfb	postdec2,f,c
 27287  01485E  006F FF78  F034    	movff	postinc2,btemp+10
 27288  014864  006F FF74  F035    	movff	postdec2,btemp+11
 27289  01486A  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27290  014870  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27291  014876  006F FF78  F032    	movff	postinc2,btemp+8
 27292  01487C  006F FF78  F033    	movff	postinc2,btemp+9
 27293  014882  006F FF78  F034    	movff	postinc2,btemp+10
 27294  014888  006F FF78  F035    	movff	postinc2,btemp+11
 27295  01488E  5032               	movf	(btemp+8)^0,w,c
 27296  014890  6E3A               	movwf	(btemp+16)^0,c
 27297  014892  5033               	movf	(btemp+9)^0,w,c
 27298  014894  6E3B               	movwf	(btemp+17)^0,c
 27299  014896  5034               	movf	(btemp+10)^0,w,c
 27300  014898  6E3C               	movwf	(btemp+18)^0,c
 27301  01489A  5035               	movf	(btemp+11)^0,w,c
 27302  01489C  6E3D               	movwf	(btemp+19)^0,c
 27303  01489E  D714               	goto	L26
 27304  0148A0                     l16362:
 27305                           
 27306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 27307                           ;stkvar	_fmt @ sp[(-32)+-4]
 27308  0148A0  0EDC               	movlw	-36
 27309  0148A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 27310  0148A8  0EDD               	movlw	-35
 27311  0148AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 27312  0148B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 27313  0148B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 27314  0148BC                     	if	0	;tblptru may be non-zero
 27315  0148BC                     	endif
 27316  0148BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27317  0148BC  0E00               	movlw	low (__mediumconst shr (0+16))
 27318  0148BE  6EF8               	movwf	tblptru,c
 27319  0148C0                     	endif
 27320  0148C0  0008               	tblrd		*
 27321  0148C2  50F5               	movf	tablat,w,c
 27322  0148C4  0A25               	xorlw	37
 27323  0148C6  A4D8               	btfss	status,2,c
 27324  0148C8  D01A               	goto	l16372
 27325                           
 27326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 27327                           ;stkvar	_fmt @ sp[(-32)+-4]
 27328  0148CA  0EDC               	movlw	-36
 27329  0148CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 27330  0148D2  0EDD               	movlw	-35
 27331  0148D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 27332  0148DA  2ADE               	incf	postinc2,f,c
 27333  0148DC  0E00               	movlw	0
 27334  0148DE  22DD               	addwfc	postdec2,f,c
 27335                           
 27336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 27337                           ;stkvar	_fp @ sp[(-32)+-2]
 27338  0148E0  0EDE               	movlw	-34
 27339  0148E2  006F FF8F FFE6     	movff	plusw1,postinc1
 27340  0148E8  006F FF8F FFE6     	movff	plusw1,postinc1
 27341  0148EE  0E25               	movlw	37
 27342  0148F0  6EE6               	movwf	postinc1,c
 27343  0148F2  0E00               	movlw	0
 27344  0148F4  6EE6               	movwf	postinc1,c
 27345  0148F6  ECB0  F0FA         	call	_fputc	;wreg free
 27346  0148FA                     l16368:
 27347                           
 27348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 27349  0148FA  0E01               	movlw	1
 27350  0148FC  D00C               	goto	L27
 27351  0148FE                     l16372:
 27352                           
 27353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 27354                           ;stkvar	_fmt @ sp[(-32)+-4]
 27355  0148FE  0EDC               	movlw	-36
 27356  014900  006F FF8F FFD9     	movff	plusw1,fsr2l
 27357  014906  0EDD               	movlw	-35
 27358  014908  006F FF8F FFDA     	movff	plusw1,fsr2h
 27359  01490E  2ADE               	incf	postinc2,f,c
 27360  014910  0E00               	movlw	0
 27361  014912  22DD               	addwfc	postdec2,f,c
 27362                           
 27363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 27364  014914  0E00               	movlw	0
 27365  014916                     L27:
 27366  014916  6E2A               	movwf	btemp^0,c
 27367  014918  0E00               	movlw	0
 27368  01491A  6E2B               	movwf	(btemp+1)^0,c
 27369  01491C  D02A               	goto	l2691
 27370  01491E                     l16378:
 27371                           
 27372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 27373                           ;stkvar	_fp @ sp[(-32)+-2]
 27374  01491E  0EDE               	movlw	-34
 27375  014920  006F FF8F FFE6     	movff	plusw1,postinc1
 27376  014926  006F FF8F FFE6     	movff	plusw1,postinc1
 27377                           
 27378                           ;stkvar	_fmt @ sp[(-34)+-4]
 27379  01492C  0EDA               	movlw	-38
 27380  01492E  006F FF8F FFD9     	movff	plusw1,fsr2l
 27381  014934  0EDB               	movlw	-37
 27382  014936  006F FF8F FFDA     	movff	plusw1,fsr2h
 27383  01493C  006F FF7B FFF6     	movff	postinc2,tblptrl
 27384  014942  006F FF77 FFF7     	movff	postdec2,tblptrh
 27385  014948                     	if	0	;tblptru may be non-zero
 27386  014948                     	endif
 27387  014948                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27388  014948  0E00               	movlw	low (__mediumconst shr (0+16))
 27389  01494A  6EF8               	movwf	tblptru,c
 27390  01494C                     	endif
 27391  01494C  0008               	tblrd		*
 27392  01494E  50F5               	movf	tablat,w,c
 27393  014950  6EE6               	movwf	postinc1,c
 27394  014952  0E00               	movlw	0
 27395  014954  6EE6               	movwf	postinc1,c
 27396  014956  ECB0  F0FA         	call	_fputc	;wreg free
 27397                           
 27398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 27399                           ;stkvar	_fmt @ sp[(-32)+-4]
 27400  01495A  0EDC               	movlw	-36
 27401  01495C  006F FF8F FFD9     	movff	plusw1,fsr2l
 27402  014962  0EDD               	movlw	-35
 27403  014964  006F FF8F FFDA     	movff	plusw1,fsr2h
 27404  01496A  2ADE               	incf	postinc2,f,c
 27405  01496C  0E00               	movlw	0
 27406  01496E  22DD               	addwfc	postdec2,f,c
 27407  014970  D7C4               	goto	l16368
 27408  014972                     l2691:
 27409                           
 27410                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 27411  014972  0EDA               	movlw	218
 27412  014974  26E1               	addwf	fsr1l,f,c
 27413  014976  0EFF               	movlw	255
 27414  014978  22E2               	addwfc	fsr1h,f,c
 27415  01497A  0012               	return		;funcret
 27416  01497C                     __end_of_vfpfcnvrt:
 27417                           	opt callstack 0
 27418                           
 27419 ;; *************** function _xtoa *****************
 27420 ;; Defined at:
 27421 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 27422 ;; Parameters:    Size  Location     Type
 27423 ;;  fp              2  [STACK] PTR struct _IO_FILE
 27424 ;;		 -> f(6), NULL(0), 
 27425 ;;  d               8  [STACK] unsigned long long 
 27426 ;;  x               1  [STACK] unsigned char 
 27427 ;; Auto vars:     Size  Location     Type
 27428 ;;  n               8  [STACK] unsigned long long 
 27429 ;;  c               2  [STACK] int 
 27430 ;;  i               2  [STACK] int 
 27431 ;;  w               2  [STACK] int 
 27432 ;;  p               2  [STACK] int 
 27433 ;; Return value:  Size  Location     Type
 27434 ;;                  2  [STACK] int 
 27435 ;; Registers used:
 27436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 27437 ;; Tracked objects:
 27438 ;;		On entry : 0/0
 27439 ;;		On exit  : 0/0
 27440 ;;		Unchanged: 0/0
 27441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27446 ;;Total ram usage:        0 bytes
 27447 ;; Hardware stack levels used:    1
 27448 ;; Hardware stack levels required when called:   20
 27449 ;; This function calls:
 27450 ;;		_isalpha
 27451 ;;		_isupper
 27452 ;;		_pad
 27453 ;;		_toupper
 27454 ;; This function is called by:
 27455 ;;		_vfpfcnvrt
 27456 ;; This function uses a reentrant model
 27457 ;;
 27458                           
 27459                           	psect	text94
 27460  019DA0                     __ptext94:
 27461                           	opt callstack 0
 27462  019DA0                     _xtoa:
 27463                           	opt callstack 0
 27464                           
 27465                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 27466  019DA0  0E14               	movlw	20
 27467  019DA2  26E1               	addwf	fsr1l,f,c
 27468  019DA4  0E00               	movlw	0
 27469  019DA6  22E2               	addwfc	fsr1h,f,c
 27470                           
 27471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 27472                           
 27473                           ;incstack = 0
 27474 ;; hardware stack exceeded
 27475  019DA8  AE4D               	btfss	(_prec+1)^0,7,c
 27476                           
 27477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 27478  019DAA  924E               	bcf	_flags^0,1,c
 27479                           
 27480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 27481  019DAC  BE4D               	btfsc	(_prec+1)^0,7,c
 27482  019DAE  D005               	goto	u15420
 27483  019DB0  504D               	movf	(_prec+1)^0,w,c
 27484  019DB2  E110               	bnz	l16032
 27485  019DB4  044C               	decf	_prec^0,w,c
 27486  019DB6  B0D8               	btfsc	status,0,c
 27487  019DB8  D00D               	goto	l16032
 27488  019DBA                     u15420:
 27489  019DBA  0E01               	movlw	1
 27490  019DBC  6E34               	movwf	(btemp+10)^0,c
 27491  019DBE  0E00               	movlw	0
 27492  019DC0  6E35               	movwf	(btemp+11)^0,c
 27493                           
 27494                           ;stkvar	_p @ sp[(-20)+18]
 27495  019DC2  0EFE               	movlw	-2
 27496  019DC4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27497  019DCA  0EFF               	movlw	-1
 27498  019DCC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27499  019DD2  D008               	goto	l2641
 27500  019DD4                     l16032:
 27501                           
 27502                           ;stkvar	_p @ sp[(-20)+18]
 27503  019DD4  0EFE               	movlw	-2
 27504  019DD6  0060  F133  FFE3   	movff	_prec,plusw1
 27505  019DDC  0EFF               	movlw	-1
 27506  019DDE  0060  F137  FFE3   	movff	_prec+1,plusw1
 27507  019DE4                     l2641:
 27508                           
 27509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 27510                           ;stkvar	_w @ sp[(-20)+16]
 27511  019DE4  0EFC               	movlw	-4
 27512  019DE6  0060  F12B  FFE3   	movff	_width,plusw1
 27513  019DEC  0EFD               	movlw	-3
 27514  019DEE  0060  F12F  FFE3   	movff	_width+1,plusw1
 27515                           
 27516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 27517  019DF4  A84E               	btfss	_flags^0,4,c
 27518  019DF6  D00B               	goto	l16038
 27519                           
 27520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 27521                           ;stkvar	_w @ sp[(-20)+16]
 27522  019DF8  50E1               	movf	fsr1l,w,c
 27523  019DFA  0FFC               	addlw	-4
 27524  019DFC  6ED9               	movwf	fsr2l,c
 27525  019DFE  50E2               	movf	fsr1h,w,c
 27526  019E00  6EDA               	movwf	fsr2h,c
 27527  019E02  0EFF               	movlw	255
 27528  019E04  22DA               	addwfc	fsr2h,f,c
 27529  019E06  0EFE               	movlw	254
 27530  019E08  26DE               	addwf	postinc2,f,c
 27531  019E0A  0EFF               	movlw	255
 27532  019E0C  22DD               	addwfc	postdec2,f,c
 27533  019E0E                     l16038:
 27534                           
 27535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 27536                           ;stkvar	_d @ sp[(-20)+-10]
 27537  019E0E  0EE2               	movlw	226
 27538  019E10  24E1               	addwf	fsr1l,w,c
 27539  019E12  6ED9               	movwf	fsr2l,c
 27540  019E14  0EFF               	movlw	255
 27541  019E16  20E2               	addwfc	fsr1h,w,c
 27542  019E18  6EDA               	movwf	fsr2h,c
 27543                           
 27544                           ;stkvar	_n @ sp[(-20)+4]
 27545  019E1A  0E08               	movlw	8
 27546  019E1C  6E2A               	movwf	btemp^0,c
 27547  019E1E  0EF0               	movlw	-16
 27548  019E20                     us1544999:
 27549  019E20  006F FF7B FFE3     	movff	postinc2,plusw1
 27550  019E26  28E8               	incf	wreg,w,c
 27551  019E28  2E2A               	decfsz	btemp^0,f,c
 27552  019E2A  D7FA               	bra	us1544999
 27553                           
 27554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 27555  019E2C  0E4F               	movlw	79
 27556  019E2E  6E34               	movwf	(btemp+10)^0,c
 27557  019E30  0E00               	movlw	0
 27558  019E32  6E35               	movwf	(btemp+11)^0,c
 27559                           
 27560                           ;stkvar	_i @ sp[(-20)+14]
 27561  019E34  0EFA               	movlw	-6
 27562  019E36  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27563  019E3C  0EFB               	movlw	-5
 27564  019E3E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27565                           
 27566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 27567  019E44  0103               	movlb	3	; () banked
 27568  019E46  6BA3               	clrf	(_dbuf+79)& (0+255),b
 27569                           
 27570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 27571  019E48  D0EE               	goto	l16076
 27572  019E4A                     l16044:
 27573                           
 27574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 27575                           ;stkvar	_i @ sp[(-20)+14]
 27576  019E4A  50E1               	movf	fsr1l,w,c
 27577  019E4C  0FFA               	addlw	-6
 27578  019E4E  6ED9               	movwf	fsr2l,c
 27579  019E50  50E2               	movf	fsr1h,w,c
 27580  019E52  6EDA               	movwf	fsr2h,c
 27581  019E54  0EFF               	movlw	255
 27582  019E56  22DA               	addwfc	fsr2h,f,c
 27583  019E58  06DE               	decf	postinc2,f,c
 27584  019E5A  0E00               	movlw	0
 27585  019E5C  5ADD               	subwfb	postdec2,f,c
 27586                           
 27587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 27588                           ;stkvar	_n @ sp[(-20)+4]
 27589  019E5E  0EF0               	movlw	-16
 27590  019E60  006F FF8C  F034    	movff	plusw1,btemp+10
 27591  019E66  0EF1               	movlw	-15
 27592  019E68  006F FF8C  F035    	movff	plusw1,btemp+11
 27593  019E6E  0E0F               	movlw	15
 27594  019E70  1634               	andwf	(btemp+10)^0,f,c
 27595  019E72  0E00               	movlw	0
 27596  019E74  1635               	andwf	(btemp+11)^0,f,c
 27597                           
 27598                           ;stkvar	_c @ sp[(-20)+12]
 27599  019E76  0EF8               	movlw	-8
 27600  019E78  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27601  019E7E  0EF9               	movlw	-7
 27602  019E80  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27603                           
 27604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 27605                           ;stkvar	_c @ sp[(-20)+12]
 27606  019E86  0EF9               	movlw	-7
 27607  019E88  BEE3               	btfsc	plusw1,7,c
 27608  019E8A  D00F               	goto	l16052
 27609  019E8C  0EF9               	movlw	-7
 27610  019E8E  50E3               	movf	plusw1,w,c
 27611  019E90  E108               	bnz	u15450
 27612  019E92  0EF8               	movlw	-8
 27613  019E94  006F FF8C  F02A    	movff	plusw1,btemp
 27614  019E9A  0E0A               	movlw	10
 27615  019E9C  5E2A               	subwf	btemp^0,f,c
 27616  019E9E  A0D8               	btfss	status,0,c
 27617  019EA0  D004               	goto	l16052
 27618  019EA2                     u15450:
 27619                           
 27620                           ;stkvar	_c @ sp[(-20)+12]
 27621  019EA2  0EF8               	movlw	-8
 27622  019EA4  50E3               	movf	plusw1,w,c
 27623  019EA6  0F57               	addlw	87
 27624  019EA8  D003               	goto	L28
 27625  019EAA                     l16052:
 27626                           
 27627                           ;stkvar	_c @ sp[(-20)+12]
 27628  019EAA  0EF8               	movlw	-8
 27629  019EAC  50E3               	movf	plusw1,w,c
 27630  019EAE  0F30               	addlw	48
 27631  019EB0                     L28:
 27632  019EB0  6E34               	movwf	(btemp+10)^0,c
 27633  019EB2  0EF9               	movlw	-7
 27634  019EB4  006F FF8C  F035    	movff	plusw1,btemp+11
 27635  019EBA  0E00               	movlw	0
 27636  019EBC  2235               	addwfc	(btemp+11)^0,f,c
 27637                           
 27638                           ;stkvar	_c @ sp[(-20)+12]
 27639  019EBE  0EF8               	movlw	-8
 27640  019EC0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27641  019EC6  0EF9               	movlw	-7
 27642  019EC8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27643  019ECE  0EBF               	movlw	191
 27644  019ED0  6E34               	movwf	(btemp+10)^0,c
 27645  019ED2  0EFF               	movlw	255
 27646  019ED4  6E35               	movwf	(btemp+11)^0,c
 27647                           
 27648                           ;stkvar	_x @ sp[(-20)+-11]
 27649  019ED6  0EE1               	movlw	-31
 27650  019ED8  50E3               	movf	plusw1,w,c
 27651  019EDA  6E32               	movwf	(btemp+8)^0,c
 27652  019EDC  6A33               	clrf	(btemp+9)^0,c
 27653  019EDE  5034               	movf	(btemp+10)^0,w,c
 27654  019EE0  2632               	addwf	(btemp+8)^0,f,c
 27655  019EE2  5035               	movf	(btemp+11)^0,w,c
 27656  019EE4  2233               	addwfc	(btemp+9)^0,f,c
 27657  019EE6  5033               	movf	(btemp+9)^0,w,c
 27658  019EE8  E106               	bnz	u15460
 27659  019EEA  0E1A               	movlw	26
 27660  019EEC  5C32               	subwf	(btemp+8)^0,w,c
 27661  019EEE  B0D8               	btfsc	status,0,c
 27662  019EF0  D002               	goto	u15460
 27663  019EF2  0E01               	movlw	1
 27664  019EF4  D001               	goto	u15470
 27665  019EF6                     u15460:
 27666  019EF6  0E00               	movlw	0
 27667  019EF8                     u15470:
 27668  019EF8  6E34               	movwf	(btemp+10)^0,c
 27669  019EFA  6A35               	clrf	(btemp+11)^0,c
 27670                           
 27671                           ;stkvar	_xtoa$6651 @ sp[(-20)+2]
 27672  019EFC  0EEE               	movlw	-18
 27673  019EFE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27674  019F04  0EEF               	movlw	-17
 27675  019F06  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27676                           
 27677                           ;stkvar	_xtoa$6651 @ sp[(-20)+2]
 27678  019F0C  0EEE               	movlw	-18
 27679  019F0E  006F FF8C  F02A    	movff	plusw1,btemp
 27680  019F14  0EEF               	movlw	-17
 27681  019F16  50E3               	movf	plusw1,w,c
 27682  019F18  102A               	iorwf	btemp^0,w,c
 27683  019F1A  B4D8               	btfsc	status,2,c
 27684  019F1C  D041               	goto	l16068
 27685  019F1E  0E9F               	movlw	159
 27686  019F20  6E34               	movwf	(btemp+10)^0,c
 27687  019F22  0EFF               	movlw	255
 27688  019F24  6E35               	movwf	(btemp+11)^0,c
 27689                           
 27690                           ;stkvar	_c @ sp[(-20)+12]
 27691  019F26  0EF8               	movlw	-8
 27692  019F28  006F FF8C  F032    	movff	plusw1,btemp+8
 27693  019F2E  0EF9               	movlw	-7
 27694  019F30  006F FF8C  F033    	movff	plusw1,btemp+9
 27695  019F36  0E20               	movlw	32
 27696  019F38  1232               	iorwf	(btemp+8)^0,f,c
 27697  019F3A  0E00               	movlw	0
 27698  019F3C  1233               	iorwf	(btemp+9)^0,f,c
 27699  019F3E  5034               	movf	(btemp+10)^0,w,c
 27700  019F40  2632               	addwf	(btemp+8)^0,f,c
 27701  019F42  5035               	movf	(btemp+11)^0,w,c
 27702  019F44  2233               	addwfc	(btemp+9)^0,f,c
 27703  019F46  5033               	movf	(btemp+9)^0,w,c
 27704  019F48  E106               	bnz	u15490
 27705  019F4A  0E1A               	movlw	26
 27706  019F4C  5C32               	subwf	(btemp+8)^0,w,c
 27707  019F4E  B0D8               	btfsc	status,0,c
 27708  019F50  D002               	goto	u15490
 27709  019F52  0E01               	movlw	1
 27710  019F54  D001               	goto	u15500
 27711  019F56                     u15490:
 27712  019F56  0E00               	movlw	0
 27713  019F58                     u15500:
 27714  019F58  6E34               	movwf	(btemp+10)^0,c
 27715  019F5A  6A35               	clrf	(btemp+11)^0,c
 27716                           
 27717                           ;stkvar	_xtoa$6652 @ sp[(-20)+0]
 27718  019F5C  0EEC               	movlw	-20
 27719  019F5E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27720  019F64  0EED               	movlw	-19
 27721  019F66  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27722                           
 27723                           ;stkvar	_xtoa$6652 @ sp[(-20)+0]
 27724  019F6C  0EEC               	movlw	-20
 27725  019F6E  006F FF8C  F02A    	movff	plusw1,btemp
 27726  019F74  0EED               	movlw	-19
 27727  019F76  50E3               	movf	plusw1,w,c
 27728  019F78  102A               	iorwf	btemp^0,w,c
 27729  019F7A  B4D8               	btfsc	status,2,c
 27730  019F7C  D011               	goto	l16068
 27731                           
 27732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 27733                           ;stkvar	_c @ sp[(-20)+12]
 27734  019F7E  0EF8               	movlw	-8
 27735  019F80  006F FF8F FFE6     	movff	plusw1,postinc1
 27736  019F86  006F FF8F FFE6     	movff	plusw1,postinc1
 27737  019F8C  EC98  F008         	call	_toupper	;wreg free
 27738                           
 27739                           ;stkvar	_c @ sp[(-20)+12]
 27740  019F90  0EF8               	movlw	-8
 27741  019F92  0060  F0AB  FFE3   	movff	btemp,plusw1
 27742  019F98  0EF9               	movlw	-7
 27743  019F9A  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 27744  019FA0                     l16068:
 27745                           
 27746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 27747                           ;stkvar	_c @ sp[(-20)+12]
 27748                           ;stkvar	_i @ sp[(-20)+14]
 27749  019FA0  0EFA               	movlw	-6
 27750  019FA2  006F FF8C  F034    	movff	plusw1,btemp+10
 27751  019FA8  0EFB               	movlw	-5
 27752  019FAA  006F FF8C  F035    	movff	plusw1,btemp+11
 27753  019FB0  0E54               	movlw	low _dbuf
 27754  019FB2  2434               	addwf	(btemp+10)^0,w,c
 27755  019FB4  6ED9               	movwf	fsr2l,c
 27756  019FB6  0E03               	movlw	high _dbuf
 27757  019FB8  2035               	addwfc	(btemp+11)^0,w,c
 27758  019FBA  6EDA               	movwf	fsr2h,c
 27759  019FBC  0EF8               	movlw	-8
 27760  019FBE  006F FF8F FFDF     	movff	plusw1,indf2
 27761                           
 27762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 27763                           ;stkvar	_p @ sp[(-20)+18]
 27764  019FC4  50E1               	movf	fsr1l,w,c
 27765  019FC6  0FFE               	addlw	-2
 27766  019FC8  6ED9               	movwf	fsr2l,c
 27767  019FCA  50E2               	movf	fsr1h,w,c
 27768  019FCC  6EDA               	movwf	fsr2h,c
 27769  019FCE  0EFF               	movlw	255
 27770  019FD0  22DA               	addwfc	fsr2h,f,c
 27771  019FD2  06DE               	decf	postinc2,f,c
 27772  019FD4  0E00               	movlw	0
 27773  019FD6  5ADD               	subwfb	postdec2,f,c
 27774                           
 27775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 27776                           ;stkvar	_w @ sp[(-20)+16]
 27777  019FD8  50E1               	movf	fsr1l,w,c
 27778  019FDA  0FFC               	addlw	-4
 27779  019FDC  6ED9               	movwf	fsr2l,c
 27780  019FDE  50E2               	movf	fsr1h,w,c
 27781  019FE0  6EDA               	movwf	fsr2h,c
 27782  019FE2  0EFF               	movlw	255
 27783  019FE4  22DA               	addwfc	fsr2h,f,c
 27784  019FE6  06DE               	decf	postinc2,f,c
 27785  019FE8  0E00               	movlw	0
 27786  019FEA  5ADD               	subwfb	postdec2,f,c
 27787                           
 27788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 27789  019FEC  0E04               	movlw	4
 27790  019FEE  6E35               	movwf	(btemp+11)^0,c
 27791                           
 27792                           ;stkvar	_n @ sp[(-20)+4]
 27793  019FF0  50E1               	movf	fsr1l,w,c
 27794  019FF2  0FF0               	addlw	-16
 27795  019FF4  6ED9               	movwf	fsr2l,c
 27796  019FF6  50E2               	movf	fsr1h,w,c
 27797  019FF8  6EDA               	movwf	fsr2h,c
 27798  019FFA  0EFF               	movlw	255
 27799  019FFC  22DA               	addwfc	fsr2h,f,c
 27800  019FFE  2835               	incf	(btemp+11)^0,w,c
 27801  01A000  52DE               	movf	postinc2,f,c
 27802  01A002  D00F               	goto	u15520
 27803  01A004                     u15525:
 27804  01A004  52DE               	movf	postinc2,f,c
 27805  01A006  52DE               	movf	postinc2,f,c
 27806  01A008  52DE               	movf	postinc2,f,c
 27807  01A00A  52DE               	movf	postinc2,f,c
 27808  01A00C  52DE               	movf	postinc2,f,c
 27809  01A00E  52DE               	movf	postinc2,f,c
 27810  01A010  90D8               	bcf	status,0,c
 27811  01A012  32DD               	rrcf	postdec2,f,c
 27812  01A014  32DD               	rrcf	postdec2,f,c
 27813  01A016  32DD               	rrcf	postdec2,f,c
 27814  01A018  32DD               	rrcf	postdec2,f,c
 27815  01A01A  32DD               	rrcf	postdec2,f,c
 27816  01A01C  32DD               	rrcf	postdec2,f,c
 27817  01A01E  32DD               	rrcf	postdec2,f,c
 27818  01A020  32DE               	rrcf	postinc2,f,c
 27819  01A022                     u15520:
 27820  01A022  2EE8               	decfsz	wreg,f,c
 27821  01A024  D7EF               	goto	u15525
 27822  01A026                     l16076:
 27823                           
 27824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 27825                           ;stkvar	_i @ sp[(-20)+14]
 27826  01A026  0EFB               	movlw	-5
 27827  01A028  BEE3               	btfsc	plusw1,7,c
 27828  01A02A  D03A               	goto	u15570
 27829  01A02C  0EFB               	movlw	-5
 27830  01A02E  50E3               	movf	plusw1,w,c
 27831  01A030  E108               	bnz	u15530
 27832  01A032  0EFA               	movlw	-6
 27833  01A034  006F FF8C  F02A    	movff	plusw1,btemp
 27834  01A03A  0E02               	movlw	2
 27835  01A03C  5E2A               	subwf	btemp^0,f,c
 27836  01A03E  A0D8               	btfss	status,0,c
 27837  01A040  D02F               	goto	u15570
 27838  01A042                     u15530:
 27839                           
 27840                           ;stkvar	_n @ sp[(-20)+4]
 27841  01A042  0EF0               	movlw	-16
 27842  01A044  50E3               	movf	plusw1,w,c
 27843  01A046  E115               	bnz	u15541
 27844  01A048  0EF1               	movlw	-15
 27845  01A04A  50E3               	movf	plusw1,w,c
 27846  01A04C  E112               	bnz	u15541
 27847  01A04E  0EF2               	movlw	-14
 27848  01A050  50E3               	movf	plusw1,w,c
 27849  01A052  E10F               	bnz	u15541
 27850  01A054  0EF3               	movlw	-13
 27851  01A056  50E3               	movf	plusw1,w,c
 27852  01A058  E10C               	bnz	u15541
 27853  01A05A  0EF4               	movlw	-12
 27854  01A05C  50E3               	movf	plusw1,w,c
 27855  01A05E  E109               	bnz	u15541
 27856  01A060  0EF5               	movlw	-11
 27857  01A062  50E3               	movf	plusw1,w,c
 27858  01A064  E106               	bnz	u15541
 27859  01A066  0EF6               	movlw	-10
 27860  01A068  50E3               	movf	plusw1,w,c
 27861  01A06A  E103               	bnz	u15541
 27862  01A06C  0EF7               	movlw	-9
 27863  01A06E  50E3               	movf	plusw1,w,c
 27864  01A070  A4D8               	btfss	status,2,c
 27865  01A072                     u15541:
 27866  01A072  D6EB               	goto	l16044
 27867                           
 27868                           ;stkvar	_p @ sp[(-20)+18]
 27869  01A074  0EFF               	movlw	-1
 27870  01A076  BEE3               	btfsc	plusw1,7,c
 27871  01A078  D007               	goto	u15550
 27872  01A07A  0EFF               	movlw	-1
 27873  01A07C  50E3               	movf	plusw1,w,c
 27874  01A07E  E103               	bnz	u15551
 27875  01A080  0EFE               	movlw	-2
 27876  01A082  04E3               	decf	plusw1,w,c
 27877  01A084  B0D8               	btfsc	status,0,c
 27878  01A086                     u15551:
 27879  01A086  D6E1               	goto	l16044
 27880  01A088                     u15550:
 27881                           
 27882                           ;stkvar	_w @ sp[(-20)+16]
 27883  01A088  0EFD               	movlw	-3
 27884  01A08A  BEE3               	btfsc	plusw1,7,c
 27885  01A08C  D009               	goto	u15570
 27886  01A08E  0EFD               	movlw	-3
 27887  01A090  50E3               	movf	plusw1,w,c
 27888  01A092  E104               	bnz	u15560
 27889  01A094  0EFC               	movlw	-4
 27890  01A096  04E3               	decf	plusw1,w,c
 27891  01A098  A0D8               	btfss	status,0,c
 27892  01A09A  D002               	goto	u15570
 27893  01A09C                     u15560:
 27894  01A09C  B24E               	btfsc	_flags^0,1,c
 27895  01A09E  D6D5               	goto	l16044
 27896  01A0A0                     u15570:
 27897                           
 27898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 27899  01A0A0  A84E               	btfss	_flags^0,4,c
 27900  01A0A2  D036               	goto	l16092
 27901                           
 27902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 27903                           ;stkvar	_i @ sp[(-20)+14]
 27904  01A0A4  50E1               	movf	fsr1l,w,c
 27905  01A0A6  0FFA               	addlw	-6
 27906  01A0A8  6ED9               	movwf	fsr2l,c
 27907  01A0AA  50E2               	movf	fsr1h,w,c
 27908  01A0AC  6EDA               	movwf	fsr2h,c
 27909  01A0AE  0EFF               	movlw	255
 27910  01A0B0  22DA               	addwfc	fsr2h,f,c
 27911  01A0B2  06DE               	decf	postinc2,f,c
 27912  01A0B4  0E00               	movlw	0
 27913  01A0B6  5ADD               	subwfb	postdec2,f,c
 27914                           
 27915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 27916                           ;stkvar	_x @ sp[(-20)+-11]
 27917                           ;stkvar	_i @ sp[(-20)+14]
 27918  01A0B8  0EFA               	movlw	-6
 27919  01A0BA  006F FF8C  F034    	movff	plusw1,btemp+10
 27920  01A0C0  0EFB               	movlw	-5
 27921  01A0C2  006F FF8C  F035    	movff	plusw1,btemp+11
 27922  01A0C8  0E54               	movlw	low _dbuf
 27923  01A0CA  2434               	addwf	(btemp+10)^0,w,c
 27924  01A0CC  6ED9               	movwf	fsr2l,c
 27925  01A0CE  0E03               	movlw	high _dbuf
 27926  01A0D0  2035               	addwfc	(btemp+11)^0,w,c
 27927  01A0D2  6EDA               	movwf	fsr2h,c
 27928  01A0D4  0EE1               	movlw	-31
 27929  01A0D6  006F FF8F FFDF     	movff	plusw1,indf2
 27930                           
 27931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 27932                           ;stkvar	_i @ sp[(-20)+14]
 27933  01A0DC  50E1               	movf	fsr1l,w,c
 27934  01A0DE  0FFA               	addlw	-6
 27935  01A0E0  6ED9               	movwf	fsr2l,c
 27936  01A0E2  50E2               	movf	fsr1h,w,c
 27937  01A0E4  6EDA               	movwf	fsr2h,c
 27938  01A0E6  0EFF               	movlw	255
 27939  01A0E8  22DA               	addwfc	fsr2h,f,c
 27940  01A0EA  06DE               	decf	postinc2,f,c
 27941  01A0EC  0E00               	movlw	0
 27942  01A0EE  5ADD               	subwfb	postdec2,f,c
 27943                           
 27944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 27945                           ;stkvar	_i @ sp[(-20)+14]
 27946  01A0F0  0EFA               	movlw	-6
 27947  01A0F2  006F FF8C  F034    	movff	plusw1,btemp+10
 27948  01A0F8  0EFB               	movlw	-5
 27949  01A0FA  006F FF8C  F035    	movff	plusw1,btemp+11
 27950  01A100  0E54               	movlw	low _dbuf
 27951  01A102  2434               	addwf	(btemp+10)^0,w,c
 27952  01A104  6ED9               	movwf	fsr2l,c
 27953  01A106  0E03               	movlw	high _dbuf
 27954  01A108  2035               	addwfc	(btemp+11)^0,w,c
 27955  01A10A  6EDA               	movwf	fsr2h,c
 27956  01A10C  0E30               	movlw	48
 27957  01A10E  6EDF               	movwf	indf2,c
 27958  01A110                     l16092:
 27959                           
 27960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 27961                           ;stkvar	_w @ sp[(-20)+16]
 27962  01A110  0EFC               	movlw	-4
 27963  01A112  006F FF8F FFE6     	movff	plusw1,postinc1
 27964  01A118  006F FF8F FFE6     	movff	plusw1,postinc1
 27965                           
 27966                           ;stkvar	_i @ sp[(-22)+14]
 27967  01A11E  0E54               	movlw	low _dbuf
 27968  01A120  6E34               	movwf	(btemp+10)^0,c
 27969  01A122  0E03               	movlw	high _dbuf
 27970  01A124  6E35               	movwf	(btemp+11)^0,c
 27971  01A126  0EF8               	movlw	-8
 27972  01A128  50E3               	movf	plusw1,w,c
 27973  01A12A  2634               	addwf	(btemp+10)^0,f,c
 27974  01A12C  0EF9               	movlw	-7
 27975  01A12E  50E3               	movf	plusw1,w,c
 27976  01A130  2235               	addwfc	(btemp+11)^0,f,c
 27977  01A132  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27978  01A138  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27979                           
 27980                           ;stkvar	_fp @ sp[(-24)+-2]
 27981  01A13E  0EE6               	movlw	-26
 27982  01A140  006F FF8F FFE6     	movff	plusw1,postinc1
 27983  01A146  006F FF8F FFE6     	movff	plusw1,postinc1
 27984  01A14C  ECE7  F0FC         	call	_pad	;wreg free
 27985                           
 27986                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 27987  01A150  0EE1               	movlw	225
 27988  01A152  26E1               	addwf	fsr1l,f,c
 27989  01A154  0EFF               	movlw	255
 27990  01A156  22E2               	addwfc	fsr1h,f,c
 27991  01A158  0012               	return		;funcret
 27992  01A15A                     __end_of_xtoa:
 27993                           	opt callstack 0
 27994                           
 27995 ;; *************** function _toupper *****************
 27996 ;; Defined at:
 27997 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 27998 ;; Parameters:    Size  Location     Type
 27999 ;;  c               2  [STACK] int 
 28000 ;; Auto vars:     Size  Location     Type
 28001 ;;		None
 28002 ;; Return value:  Size  Location     Type
 28003 ;;                  2  [STACK] int 
 28004 ;; Registers used:
 28005 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 28006 ;; Tracked objects:
 28007 ;;		On entry : 0/3
 28008 ;;		On exit  : 0/0
 28009 ;;		Unchanged: 0/0
 28010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28015 ;;Total ram usage:        0 bytes
 28016 ;; Hardware stack levels used:    1
 28017 ;; Hardware stack levels required when called:   16
 28018 ;; This function calls:
 28019 ;;		_islower
 28020 ;; This function is called by:
 28021 ;;		_xtoa
 28022 ;; This function uses a reentrant model
 28023 ;;
 28024                           
 28025                           	psect	text95
 28026  001130                     __ptext95:
 28027                           	opt callstack 0
 28028  001130                     _toupper:
 28029                           	opt callstack 0
 28030                           
 28031                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28032  001130  52E6               	movf	postinc1,f,c
 28033  001132  52E6               	movf	postinc1,f,c
 28034                           
 28035                           ;stkvar	_c @ sp[(-2)+-2]
 28036                           
 28037                           ;incstack = 0
 28038 ;; hardware stack exceeded
 28039  001134  0EFC               	movlw	-4
 28040  001136  50E3               	movf	plusw1,w,c
 28041  001138  0F9F               	addlw	159
 28042  00113A  6E34               	movwf	(btemp+10)^0,c
 28043  00113C  0EFD               	movlw	-3
 28044  00113E  006F FF8C  F035    	movff	plusw1,btemp+11
 28045  001144  0EFF               	movlw	255
 28046  001146  2235               	addwfc	(btemp+11)^0,f,c
 28047  001148  5035               	movf	(btemp+11)^0,w,c
 28048  00114A  E106               	bnz	u7990
 28049  00114C  0E1A               	movlw	26
 28050  00114E  5C34               	subwf	(btemp+10)^0,w,c
 28051  001150  B0D8               	btfsc	status,0,c
 28052  001152  D002               	goto	u7990
 28053  001154  0E01               	movlw	1
 28054  001156  D001               	goto	u8000
 28055  001158                     u7990:
 28056  001158  0E00               	movlw	0
 28057  00115A                     u8000:
 28058  00115A  6E34               	movwf	(btemp+10)^0,c
 28059  00115C  6A35               	clrf	(btemp+11)^0,c
 28060                           
 28061                           ;stkvar	_toupper$7593 @ sp[(-2)+0]
 28062  00115E  0EFE               	movlw	-2
 28063  001160  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28064  001166  0EFF               	movlw	-1
 28065  001168  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28066                           
 28067                           ;stkvar	_toupper$7593 @ sp[(-2)+0]
 28068  00116E  0EFE               	movlw	-2
 28069  001170  006F FF8C  F02A    	movff	plusw1,btemp
 28070  001176  0EFF               	movlw	-1
 28071  001178  50E3               	movf	plusw1,w,c
 28072  00117A  102A               	iorwf	btemp^0,w,c
 28073  00117C  B4D8               	btfsc	status,2,c
 28074  00117E  D00D               	goto	l10190
 28075                           
 28076                           ;stkvar	_c @ sp[(-2)+-2]
 28077  001180  0EFC               	movlw	-4
 28078  001182  006F FF8C  F02A    	movff	plusw1,btemp
 28079  001188  0EFD               	movlw	-3
 28080  00118A  006F FF8C  F02B    	movff	plusw1,btemp+1
 28081  001190  0E5F               	movlw	95
 28082  001192  162A               	andwf	btemp^0,f,c
 28083  001194  0E00               	movlw	0
 28084  001196  162B               	andwf	(btemp+1)^0,f,c
 28085  001198  D008               	goto	l3838
 28086  00119A                     l10190:
 28087                           
 28088                           ;stkvar	_c @ sp[(-2)+-2]
 28089  00119A  0EFC               	movlw	-4
 28090  00119C  006F FF8C  F02A    	movff	plusw1,btemp
 28091  0011A2  0EFD               	movlw	-3
 28092  0011A4  006F FF8C  F02B    	movff	plusw1,btemp+1
 28093  0011AA                     l3838:
 28094                           
 28095                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 28096  0011AA  52E5               	movf	postdec1,f,c
 28097  0011AC  52E5               	movf	postdec1,f,c
 28098  0011AE  52E5               	movf	postdec1,f,c
 28099  0011B0  52E5               	movf	postdec1,f,c
 28100  0011B2  0012               	return		;funcret
 28101  0011B4                     __end_of_toupper:
 28102                           	opt callstack 0
 28103                           
 28104 ;; *************** function _islower *****************
 28105 ;; Defined at:
 28106 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 28107 ;; Parameters:    Size  Location     Type
 28108 ;;  c               2  [STACK] int 
 28109 ;; Auto vars:     Size  Location     Type
 28110 ;;		None
 28111 ;; Return value:  Size  Location     Type
 28112 ;;                  2  [STACK] int 
 28113 ;; Registers used:
 28114 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 28115 ;; Tracked objects:
 28116 ;;		On entry : 0/0
 28117 ;;		On exit  : 0/0
 28118 ;;		Unchanged: 0/0
 28119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28124 ;;Total ram usage:        0 bytes
 28125 ;; Hardware stack levels used:    1
 28126 ;; Hardware stack levels required when called:   15
 28127 ;; This function calls:
 28128 ;;		Nothing
 28129 ;; This function is called by:
 28130 ;;		_toupper
 28131 ;; This function uses a reentrant model
 28132 ;;
 28133                           
 28134                           	psect	text96
 28135  0022BA                     __ptext96:
 28136                           	opt callstack 0
 28137  0022BA                     _islower:
 28138                           	opt callstack 0
 28139                           
 28140                           ;stkvar	_c @ sp[(0)+-2]
 28141                           
 28142                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28143                           ;incstack = 0
 28144 ;; hardware stack exceeded
 28145  0022BA  0EFE               	movlw	-2
 28146  0022BC  50E3               	movf	plusw1,w,c
 28147  0022BE  0F9F               	addlw	159
 28148  0022C0  6E34               	movwf	(btemp+10)^0,c
 28149  0022C2  0EFF               	movlw	-1
 28150  0022C4  006F FF8C  F035    	movff	plusw1,btemp+11
 28151  0022CA  0EFF               	movlw	255
 28152  0022CC  2235               	addwfc	(btemp+11)^0,f,c
 28153  0022CE  5035               	movf	(btemp+11)^0,w,c
 28154  0022D0  E106               	bnz	u7620
 28155  0022D2  0E1A               	movlw	26
 28156  0022D4  5C34               	subwf	(btemp+10)^0,w,c
 28157  0022D6  B0D8               	btfsc	status,0,c
 28158  0022D8  D002               	goto	u7620
 28159  0022DA  0E01               	movlw	1
 28160  0022DC  D001               	goto	u7630
 28161  0022DE                     u7620:
 28162  0022DE  0E00               	movlw	0
 28163  0022E0                     u7630:
 28164  0022E0  6E2A               	movwf	btemp^0,c
 28165  0022E2  6A2B               	clrf	(btemp+1)^0,c
 28166                           
 28167                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 28168  0022E4  52E5               	movf	postdec1,f,c
 28169  0022E6  52E5               	movf	postdec1,f,c
 28170  0022E8  0012               	return		;funcret
 28171  0022EA                     __end_of_islower:
 28172                           	opt callstack 0
 28173                           
 28174 ;; *************** function _isalpha *****************
 28175 ;; Defined at:
 28176 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 28177 ;; Parameters:    Size  Location     Type
 28178 ;;  c               2  [STACK] int 
 28179 ;; Auto vars:     Size  Location     Type
 28180 ;;		None
 28181 ;; Return value:  Size  Location     Type
 28182 ;;                  2  [STACK] int 
 28183 ;; Registers used:
 28184 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 28185 ;; Tracked objects:
 28186 ;;		On entry : 0/0
 28187 ;;		On exit  : 0/0
 28188 ;;		Unchanged: 0/0
 28189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28194 ;;Total ram usage:        0 bytes
 28195 ;; Hardware stack levels used:    1
 28196 ;; Hardware stack levels required when called:   15
 28197 ;; This function calls:
 28198 ;;		Nothing
 28199 ;; This function is called by:
 28200 ;;		_xtoa
 28201 ;; This function uses a reentrant model
 28202 ;;
 28203                           
 28204                           	psect	text97
 28205  001E6E                     __ptext97:
 28206                           	opt callstack 0
 28207  001E6E                     _isalpha:
 28208                           	opt callstack 0
 28209                           
 28210                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28211                           ;incstack = 0
 28212 ;; hardware stack exceeded
 28213  001E6E  0E9F               	movlw	159
 28214  001E70  6E34               	movwf	(btemp+10)^0,c
 28215  001E72  0EFF               	movlw	255
 28216  001E74  6E35               	movwf	(btemp+11)^0,c
 28217                           
 28218                           ;stkvar	_c @ sp[(0)+-2]
 28219  001E76  0EFE               	movlw	-2
 28220  001E78  006F FF8C  F032    	movff	plusw1,btemp+8
 28221  001E7E  0EFF               	movlw	-1
 28222  001E80  006F FF8C  F033    	movff	plusw1,btemp+9
 28223  001E86  0E20               	movlw	32
 28224  001E88  1232               	iorwf	(btemp+8)^0,f,c
 28225  001E8A  0E00               	movlw	0
 28226  001E8C  1233               	iorwf	(btemp+9)^0,f,c
 28227  001E8E  5034               	movf	(btemp+10)^0,w,c
 28228  001E90  2632               	addwf	(btemp+8)^0,f,c
 28229  001E92  5035               	movf	(btemp+11)^0,w,c
 28230  001E94  2233               	addwfc	(btemp+9)^0,f,c
 28231  001E96  5033               	movf	(btemp+9)^0,w,c
 28232  001E98  E106               	bnz	u7970
 28233  001E9A  0E1A               	movlw	26
 28234  001E9C  5C32               	subwf	(btemp+8)^0,w,c
 28235  001E9E  B0D8               	btfsc	status,0,c
 28236  001EA0  D002               	goto	u7970
 28237  001EA2  0E01               	movlw	1
 28238  001EA4  D001               	goto	u7980
 28239  001EA6                     u7970:
 28240  001EA6  0E00               	movlw	0
 28241  001EA8                     u7980:
 28242  001EA8  6E2A               	movwf	btemp^0,c
 28243  001EAA  6A2B               	clrf	(btemp+1)^0,c
 28244                           
 28245                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 28246  001EAC  52E5               	movf	postdec1,f,c
 28247  001EAE  52E5               	movf	postdec1,f,c
 28248  001EB0  0012               	return		;funcret
 28249  001EB2                     __end_of_isalpha:
 28250                           	opt callstack 0
 28251                           
 28252 ;; *************** function _utoa *****************
 28253 ;; Defined at:
 28254 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 28255 ;; Parameters:    Size  Location     Type
 28256 ;;  fp              2  [STACK] PTR struct _IO_FILE
 28257 ;;		 -> f(6), NULL(0), 
 28258 ;;  d               8  [STACK] unsigned long long 
 28259 ;; Auto vars:     Size  Location     Type
 28260 ;;  n               8  [STACK] unsigned long long 
 28261 ;;  i               2  [STACK] int 
 28262 ;;  w               2  [STACK] int 
 28263 ;;  p               2  [STACK] int 
 28264 ;; Return value:  Size  Location     Type
 28265 ;;                  2  [STACK] int 
 28266 ;; Registers used:
 28267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 28268 ;; Tracked objects:
 28269 ;;		On entry : 0/0
 28270 ;;		On exit  : 0/0
 28271 ;;		Unchanged: 0/0
 28272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28277 ;;Total ram usage:        0 bytes
 28278 ;; Hardware stack levels used:    1
 28279 ;; Hardware stack levels required when called:   20
 28280 ;; This function calls:
 28281 ;;		___lodiv
 28282 ;;		___lomod
 28283 ;;		_pad
 28284 ;; This function is called by:
 28285 ;;		_vfpfcnvrt
 28286 ;; This function uses a reentrant model
 28287 ;;
 28288                           
 28289                           	psect	text98
 28290  01AB7A                     __ptext98:
 28291                           	opt callstack 0
 28292  01AB7A                     _utoa:
 28293                           	opt callstack 0
 28294                           
 28295                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 28296  01AB7A  0E0E               	movlw	14
 28297  01AB7C  26E1               	addwf	fsr1l,f,c
 28298  01AB7E  0E00               	movlw	0
 28299  01AB80  22E2               	addwfc	fsr1h,f,c
 28300                           
 28301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 28302                           
 28303                           ;incstack = 0
 28304 ;; hardware stack exceeded
 28305  01AB82  AE4D               	btfss	(_prec+1)^0,7,c
 28306                           
 28307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 28308  01AB84  924E               	bcf	_flags^0,1,c
 28309                           
 28310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 28311  01AB86  BE4D               	btfsc	(_prec+1)^0,7,c
 28312  01AB88  D005               	goto	u15340
 28313  01AB8A  504D               	movf	(_prec+1)^0,w,c
 28314  01AB8C  E110               	bnz	l15992
 28315  01AB8E  044C               	decf	_prec^0,w,c
 28316  01AB90  B0D8               	btfsc	status,0,c
 28317  01AB92  D00D               	goto	l15992
 28318  01AB94                     u15340:
 28319  01AB94  0E01               	movlw	1
 28320  01AB96  6E34               	movwf	(btemp+10)^0,c
 28321  01AB98  0E00               	movlw	0
 28322  01AB9A  6E35               	movwf	(btemp+11)^0,c
 28323                           
 28324                           ;stkvar	_p @ sp[(-14)+12]
 28325  01AB9C  0EFE               	movlw	-2
 28326  01AB9E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28327  01ABA4  0EFF               	movlw	-1
 28328  01ABA6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28329  01ABAC  D008               	goto	l2626
 28330  01ABAE                     l15992:
 28331                           
 28332                           ;stkvar	_p @ sp[(-14)+12]
 28333  01ABAE  0EFE               	movlw	-2
 28334  01ABB0  0060  F133  FFE3   	movff	_prec,plusw1
 28335  01ABB6  0EFF               	movlw	-1
 28336  01ABB8  0060  F137  FFE3   	movff	_prec+1,plusw1
 28337  01ABBE                     l2626:
 28338                           
 28339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 28340                           ;stkvar	_w @ sp[(-14)+10]
 28341  01ABBE  0EFC               	movlw	-4
 28342  01ABC0  0060  F12B  FFE3   	movff	_width,plusw1
 28343  01ABC6  0EFD               	movlw	-3
 28344  01ABC8  0060  F12F  FFE3   	movff	_width+1,plusw1
 28345                           
 28346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 28347                           ;stkvar	_d @ sp[(-14)+-10]
 28348  01ABCE  0EE8               	movlw	232
 28349  01ABD0  24E1               	addwf	fsr1l,w,c
 28350  01ABD2  6ED9               	movwf	fsr2l,c
 28351  01ABD4  0EFF               	movlw	255
 28352  01ABD6  20E2               	addwfc	fsr1h,w,c
 28353  01ABD8  6EDA               	movwf	fsr2h,c
 28354                           
 28355                           ;stkvar	_n @ sp[(-14)+0]
 28356  01ABDA  0E08               	movlw	8
 28357  01ABDC  6E2A               	movwf	btemp^0,c
 28358  01ABDE  0EF2               	movlw	-14
 28359  01ABE0                     us1535999:
 28360  01ABE0  006F FF7B FFE3     	movff	postinc2,plusw1
 28361  01ABE6  28E8               	incf	wreg,w,c
 28362  01ABE8  2E2A               	decfsz	btemp^0,f,c
 28363  01ABEA  D7FA               	bra	us1535999
 28364                           
 28365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 28366  01ABEC  0E4F               	movlw	79
 28367  01ABEE  6E34               	movwf	(btemp+10)^0,c
 28368  01ABF0  0E00               	movlw	0
 28369  01ABF2  6E35               	movwf	(btemp+11)^0,c
 28370                           
 28371                           ;stkvar	_i @ sp[(-14)+8]
 28372  01ABF4  0EFA               	movlw	-6
 28373  01ABF6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28374  01ABFC  0EFB               	movlw	-5
 28375  01ABFE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28376                           
 28377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 28378  01AC04  0103               	movlb	3	; () banked
 28379  01AC06  6BA3               	clrf	(_dbuf+79)& (0+255),b
 28380                           
 28381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 28382  01AC08  D0FB               	goto	l16010
 28383  01AC0A                     l16000:
 28384                           
 28385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 28386                           ;stkvar	_i @ sp[(-14)+8]
 28387  01AC0A  50E1               	movf	fsr1l,w,c
 28388  01AC0C  0FFA               	addlw	-6
 28389  01AC0E  6ED9               	movwf	fsr2l,c
 28390  01AC10  50E2               	movf	fsr1h,w,c
 28391  01AC12  6EDA               	movwf	fsr2h,c
 28392  01AC14  0EFF               	movlw	255
 28393  01AC16  22DA               	addwfc	fsr2h,f,c
 28394  01AC18  06DE               	decf	postinc2,f,c
 28395  01AC1A  0E00               	movlw	0
 28396  01AC1C  5ADD               	subwfb	postdec2,f,c
 28397                           
 28398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 28399  01AC1E  0E0A               	movlw	10
 28400  01AC20  6EE6               	movwf	postinc1,c
 28401  01AC22  0E00               	movlw	0
 28402  01AC24  6EE6               	movwf	postinc1,c
 28403  01AC26  0E00               	movlw	0
 28404  01AC28  6EE6               	movwf	postinc1,c
 28405  01AC2A  0E00               	movlw	0
 28406  01AC2C  6EE6               	movwf	postinc1,c
 28407  01AC2E  0E00               	movlw	0
 28408  01AC30  6EE6               	movwf	postinc1,c
 28409  01AC32  0E00               	movlw	0
 28410  01AC34  6EE6               	movwf	postinc1,c
 28411  01AC36  0E00               	movlw	0
 28412  01AC38  6EE6               	movwf	postinc1,c
 28413  01AC3A  0E00               	movlw	0
 28414  01AC3C  6EE6               	movwf	postinc1,c
 28415                           
 28416                           ;stkvar	_n @ sp[(-22)+0]
 28417  01AC3E  50E1               	movf	fsr1l,w,c
 28418  01AC40  0FEA               	addlw	-22
 28419  01AC42  6ED9               	movwf	fsr2l,c
 28420  01AC44  50E2               	movf	fsr1h,w,c
 28421  01AC46  6EDA               	movwf	fsr2h,c
 28422  01AC48  0EFF               	movlw	255
 28423  01AC4A  22DA               	addwfc	fsr2h,f,c
 28424  01AC4C  006F FF7B FFE6     	movff	postinc2,postinc1
 28425  01AC52  006F FF7B FFE6     	movff	postinc2,postinc1
 28426  01AC58  006F FF7B FFE6     	movff	postinc2,postinc1
 28427  01AC5E  006F FF7B FFE6     	movff	postinc2,postinc1
 28428  01AC64  006F FF7B FFE6     	movff	postinc2,postinc1
 28429  01AC6A  006F FF7B FFE6     	movff	postinc2,postinc1
 28430  01AC70  006F FF7B FFE6     	movff	postinc2,postinc1
 28431  01AC76  006F FF7B FFE6     	movff	postinc2,postinc1
 28432  01AC7C  EC74  F0F9         	call	___lomod	;wreg free
 28433  01AC80  52E5               	movf	postdec1,f,c
 28434  01AC82  006F FF9C  F041    	movff	indf1,btemp+23
 28435  01AC88  52E5               	movf	postdec1,f,c
 28436  01AC8A  006F FF9C  F040    	movff	indf1,btemp+22
 28437  01AC90  52E5               	movf	postdec1,f,c
 28438  01AC92  006F FF9C  F03F    	movff	indf1,btemp+21
 28439  01AC98  52E5               	movf	postdec1,f,c
 28440  01AC9A  006F FF9C  F03E    	movff	indf1,btemp+20
 28441  01ACA0  52E5               	movf	postdec1,f,c
 28442  01ACA2  006F FF9C  F03D    	movff	indf1,btemp+19
 28443  01ACA8  52E5               	movf	postdec1,f,c
 28444  01ACAA  006F FF9C  F03C    	movff	indf1,btemp+18
 28445  01ACB0  52E5               	movf	postdec1,f,c
 28446  01ACB2  006F FF9C  F03B    	movff	indf1,btemp+17
 28447  01ACB8  52E5               	movf	postdec1,f,c
 28448  01ACBA  006F FF9C  F03A    	movff	indf1,btemp+16
 28449  01ACC0  0EF8               	movlw	248
 28450  01ACC2  26E1               	addwf	fsr1l,f,c
 28451  01ACC4  0EFF               	movlw	255
 28452  01ACC6  22E2               	addwfc	fsr1h,f,c
 28453  01ACC8  0E30               	movlw	48
 28454  01ACCA  263A               	addwf	(btemp+16)^0,f,c
 28455                           
 28456                           ;stkvar	_i @ sp[(-14)+8]
 28457  01ACCC  0EFA               	movlw	-6
 28458  01ACCE  006F FF8C  F034    	movff	plusw1,btemp+10
 28459  01ACD4  0EFB               	movlw	-5
 28460  01ACD6  006F FF8C  F035    	movff	plusw1,btemp+11
 28461  01ACDC  0E54               	movlw	low _dbuf
 28462  01ACDE  2434               	addwf	(btemp+10)^0,w,c
 28463  01ACE0  6ED9               	movwf	fsr2l,c
 28464  01ACE2  0E03               	movlw	high _dbuf
 28465  01ACE4  2035               	addwfc	(btemp+11)^0,w,c
 28466  01ACE6  6EDA               	movwf	fsr2h,c
 28467  01ACE8  0060  F0EB  FFDF   	movff	btemp+16,indf2
 28468                           
 28469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 28470                           ;stkvar	_p @ sp[(-14)+12]
 28471  01ACEE  50E1               	movf	fsr1l,w,c
 28472  01ACF0  0FFE               	addlw	-2
 28473  01ACF2  6ED9               	movwf	fsr2l,c
 28474  01ACF4  50E2               	movf	fsr1h,w,c
 28475  01ACF6  6EDA               	movwf	fsr2h,c
 28476  01ACF8  0EFF               	movlw	255
 28477  01ACFA  22DA               	addwfc	fsr2h,f,c
 28478  01ACFC  06DE               	decf	postinc2,f,c
 28479  01ACFE  0E00               	movlw	0
 28480  01AD00  5ADD               	subwfb	postdec2,f,c
 28481                           
 28482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 28483                           ;stkvar	_w @ sp[(-14)+10]
 28484  01AD02  50E1               	movf	fsr1l,w,c
 28485  01AD04  0FFC               	addlw	-4
 28486  01AD06  6ED9               	movwf	fsr2l,c
 28487  01AD08  50E2               	movf	fsr1h,w,c
 28488  01AD0A  6EDA               	movwf	fsr2h,c
 28489  01AD0C  0EFF               	movlw	255
 28490  01AD0E  22DA               	addwfc	fsr2h,f,c
 28491  01AD10  06DE               	decf	postinc2,f,c
 28492  01AD12  0E00               	movlw	0
 28493  01AD14  5ADD               	subwfb	postdec2,f,c
 28494                           
 28495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 28496  01AD16  0E0A               	movlw	10
 28497  01AD18  6EE6               	movwf	postinc1,c
 28498  01AD1A  0E00               	movlw	0
 28499  01AD1C  6EE6               	movwf	postinc1,c
 28500  01AD1E  0E00               	movlw	0
 28501  01AD20  6EE6               	movwf	postinc1,c
 28502  01AD22  0E00               	movlw	0
 28503  01AD24  6EE6               	movwf	postinc1,c
 28504  01AD26  0E00               	movlw	0
 28505  01AD28  6EE6               	movwf	postinc1,c
 28506  01AD2A  0E00               	movlw	0
 28507  01AD2C  6EE6               	movwf	postinc1,c
 28508  01AD2E  0E00               	movlw	0
 28509  01AD30  6EE6               	movwf	postinc1,c
 28510  01AD32  0E00               	movlw	0
 28511  01AD34  6EE6               	movwf	postinc1,c
 28512                           
 28513                           ;stkvar	_n @ sp[(-22)+0]
 28514  01AD36  50E1               	movf	fsr1l,w,c
 28515  01AD38  0FEA               	addlw	-22
 28516  01AD3A  6ED9               	movwf	fsr2l,c
 28517  01AD3C  50E2               	movf	fsr1h,w,c
 28518  01AD3E  6EDA               	movwf	fsr2h,c
 28519  01AD40  0EFF               	movlw	255
 28520  01AD42  22DA               	addwfc	fsr2h,f,c
 28521  01AD44  006F FF7B FFE6     	movff	postinc2,postinc1
 28522  01AD4A  006F FF7B FFE6     	movff	postinc2,postinc1
 28523  01AD50  006F FF7B FFE6     	movff	postinc2,postinc1
 28524  01AD56  006F FF7B FFE6     	movff	postinc2,postinc1
 28525  01AD5C  006F FF7B FFE6     	movff	postinc2,postinc1
 28526  01AD62  006F FF7B FFE6     	movff	postinc2,postinc1
 28527  01AD68  006F FF7B FFE6     	movff	postinc2,postinc1
 28528  01AD6E  006F FF7B FFE6     	movff	postinc2,postinc1
 28529  01AD74  ECDC  F0F1         	call	___lodiv	;wreg free
 28530  01AD78  52E5               	movf	postdec1,f,c
 28531  01AD7A  006F FF9C  F041    	movff	indf1,btemp+23
 28532  01AD80  52E5               	movf	postdec1,f,c
 28533  01AD82  006F FF9C  F040    	movff	indf1,btemp+22
 28534  01AD88  52E5               	movf	postdec1,f,c
 28535  01AD8A  006F FF9C  F03F    	movff	indf1,btemp+21
 28536  01AD90  52E5               	movf	postdec1,f,c
 28537  01AD92  006F FF9C  F03E    	movff	indf1,btemp+20
 28538  01AD98  52E5               	movf	postdec1,f,c
 28539  01AD9A  006F FF9C  F03D    	movff	indf1,btemp+19
 28540  01ADA0  52E5               	movf	postdec1,f,c
 28541  01ADA2  006F FF9C  F03C    	movff	indf1,btemp+18
 28542  01ADA8  52E5               	movf	postdec1,f,c
 28543  01ADAA  006F FF9C  F03B    	movff	indf1,btemp+17
 28544  01ADB0  52E5               	movf	postdec1,f,c
 28545  01ADB2  006F FF9C  F03A    	movff	indf1,btemp+16
 28546  01ADB8  0EF8               	movlw	248
 28547  01ADBA  26E1               	addwf	fsr1l,f,c
 28548  01ADBC  0EFF               	movlw	255
 28549  01ADBE  22E2               	addwfc	fsr1h,f,c
 28550                           
 28551                           ;stkvar	_n @ sp[(-14)+0]
 28552  01ADC0  0EF2               	movlw	-14
 28553  01ADC2  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 28554  01ADC8  0EF3               	movlw	-13
 28555  01ADCA  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 28556  01ADD0  0EF4               	movlw	-12
 28557  01ADD2  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 28558  01ADD8  0EF5               	movlw	-11
 28559  01ADDA  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 28560  01ADE0  0EF6               	movlw	-10
 28561  01ADE2  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 28562  01ADE8  0EF7               	movlw	-9
 28563  01ADEA  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 28564  01ADF0  0EF8               	movlw	-8
 28565  01ADF2  0060  F103  FFE3   	movff	btemp+22,plusw1
 28566  01ADF8  0EF9               	movlw	-7
 28567  01ADFA  0060  F107  FFE3   	movff	btemp+23,plusw1
 28568  01AE00                     l16010:
 28569                           
 28570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 28571                           ;stkvar	_i @ sp[(-14)+8]
 28572  01AE00  0EFA               	movlw	-6
 28573  01AE02  006F FF8C  F02A    	movff	plusw1,btemp
 28574  01AE08  0EFB               	movlw	-5
 28575  01AE0A  50E3               	movf	plusw1,w,c
 28576  01AE0C  102A               	iorwf	btemp^0,w,c
 28577  01AE0E  B4D8               	btfsc	status,2,c
 28578  01AE10  D02F               	goto	u15400
 28579                           
 28580                           ;stkvar	_n @ sp[(-14)+0]
 28581  01AE12  0EF2               	movlw	-14
 28582  01AE14  50E3               	movf	plusw1,w,c
 28583  01AE16  E115               	bnz	u15371
 28584  01AE18  0EF3               	movlw	-13
 28585  01AE1A  50E3               	movf	plusw1,w,c
 28586  01AE1C  E112               	bnz	u15371
 28587  01AE1E  0EF4               	movlw	-12
 28588  01AE20  50E3               	movf	plusw1,w,c
 28589  01AE22  E10F               	bnz	u15371
 28590  01AE24  0EF5               	movlw	-11
 28591  01AE26  50E3               	movf	plusw1,w,c
 28592  01AE28  E10C               	bnz	u15371
 28593  01AE2A  0EF6               	movlw	-10
 28594  01AE2C  50E3               	movf	plusw1,w,c
 28595  01AE2E  E109               	bnz	u15371
 28596  01AE30  0EF7               	movlw	-9
 28597  01AE32  50E3               	movf	plusw1,w,c
 28598  01AE34  E106               	bnz	u15371
 28599  01AE36  0EF8               	movlw	-8
 28600  01AE38  50E3               	movf	plusw1,w,c
 28601  01AE3A  E103               	bnz	u15371
 28602  01AE3C  0EF9               	movlw	-7
 28603  01AE3E  50E3               	movf	plusw1,w,c
 28604  01AE40  A4D8               	btfss	status,2,c
 28605  01AE42                     u15371:
 28606  01AE42  D6E3               	goto	l16000
 28607                           
 28608                           ;stkvar	_p @ sp[(-14)+12]
 28609  01AE44  0EFF               	movlw	-1
 28610  01AE46  BEE3               	btfsc	plusw1,7,c
 28611  01AE48  D007               	goto	u15380
 28612  01AE4A  0EFF               	movlw	-1
 28613  01AE4C  50E3               	movf	plusw1,w,c
 28614  01AE4E  E103               	bnz	u15381
 28615  01AE50  0EFE               	movlw	-2
 28616  01AE52  04E3               	decf	plusw1,w,c
 28617  01AE54  B0D8               	btfsc	status,0,c
 28618  01AE56                     u15381:
 28619  01AE56  D6D9               	goto	l16000
 28620  01AE58                     u15380:
 28621                           
 28622                           ;stkvar	_w @ sp[(-14)+10]
 28623  01AE58  0EFD               	movlw	-3
 28624  01AE5A  BEE3               	btfsc	plusw1,7,c
 28625  01AE5C  D009               	goto	u15400
 28626  01AE5E  0EFD               	movlw	-3
 28627  01AE60  50E3               	movf	plusw1,w,c
 28628  01AE62  E104               	bnz	u15390
 28629  01AE64  0EFC               	movlw	-4
 28630  01AE66  04E3               	decf	plusw1,w,c
 28631  01AE68  A0D8               	btfss	status,0,c
 28632  01AE6A  D002               	goto	u15400
 28633  01AE6C                     u15390:
 28634  01AE6C  B24E               	btfsc	_flags^0,1,c
 28635  01AE6E  D6CD               	goto	l16000
 28636  01AE70                     u15400:
 28637                           
 28638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 28639                           ;stkvar	_w @ sp[(-14)+10]
 28640  01AE70  0EFC               	movlw	-4
 28641  01AE72  006F FF8F FFE6     	movff	plusw1,postinc1
 28642  01AE78  006F FF8F FFE6     	movff	plusw1,postinc1
 28643                           
 28644                           ;stkvar	_i @ sp[(-16)+8]
 28645  01AE7E  0E54               	movlw	low _dbuf
 28646  01AE80  6E34               	movwf	(btemp+10)^0,c
 28647  01AE82  0E03               	movlw	high _dbuf
 28648  01AE84  6E35               	movwf	(btemp+11)^0,c
 28649  01AE86  0EF8               	movlw	-8
 28650  01AE88  50E3               	movf	plusw1,w,c
 28651  01AE8A  2634               	addwf	(btemp+10)^0,f,c
 28652  01AE8C  0EF9               	movlw	-7
 28653  01AE8E  50E3               	movf	plusw1,w,c
 28654  01AE90  2235               	addwfc	(btemp+11)^0,f,c
 28655  01AE92  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 28656  01AE98  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 28657                           
 28658                           ;stkvar	_fp @ sp[(-18)+-2]
 28659  01AE9E  0EEC               	movlw	-20
 28660  01AEA0  006F FF8F FFE6     	movff	plusw1,postinc1
 28661  01AEA6  006F FF8F FFE6     	movff	plusw1,postinc1
 28662  01AEAC  ECE7  F0FC         	call	_pad	;wreg free
 28663                           
 28664                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 28665  01AEB0  0EE8               	movlw	232
 28666  01AEB2  26E1               	addwf	fsr1l,f,c
 28667  01AEB4  0EFF               	movlw	255
 28668  01AEB6  22E2               	addwfc	fsr1h,f,c
 28669  01AEB8  0012               	return		;funcret
 28670  01AEBA                     __end_of_utoa:
 28671                           	opt callstack 0
 28672                           
 28673 ;; *************** function ___lomod *****************
 28674 ;; Defined at:
 28675 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 28676 ;; Parameters:    Size  Location     Type
 28677 ;;  dividend        8  [STACK] unsigned long long 
 28678 ;;  divisor         8  [STACK] unsigned long long 
 28679 ;; Auto vars:     Size  Location     Type
 28680 ;;  counter         1  [STACK] unsigned char 
 28681 ;; Return value:  Size  Location     Type
 28682 ;;                  8  [STACK] unsigned long long 
 28683 ;; Registers used:
 28684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 28685 ;; Tracked objects:
 28686 ;;		On entry : 0/3
 28687 ;;		On exit  : 0/0
 28688 ;;		Unchanged: 0/0
 28689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28694 ;;Total ram usage:        0 bytes
 28695 ;; Hardware stack levels used:    1
 28696 ;; Hardware stack levels required when called:   15
 28697 ;; This function calls:
 28698 ;;		Nothing
 28699 ;; This function is called by:
 28700 ;;		_utoa
 28701 ;; This function uses a reentrant model
 28702 ;;
 28703                           
 28704                           	psect	text99
 28705  01F2E8                     __ptext99:
 28706                           	opt callstack 0
 28707  01F2E8                     ___lomod:
 28708                           	opt callstack 0
 28709                           
 28710                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 28711  01F2E8  52E6               	movf	postinc1,f,c
 28712                           
 28713                           ;stkvar	_divisor @ sp[(-1)+-16]
 28714                           
 28715                           ;incstack = 0
 28716 ;; hardware stack exceeded
 28717  01F2EA  0EEF               	movlw	-17
 28718  01F2EC  50E3               	movf	plusw1,w,c
 28719  01F2EE  E116               	bnz	u9180
 28720  01F2F0  0EF0               	movlw	-16
 28721  01F2F2  50E3               	movf	plusw1,w,c
 28722  01F2F4  E113               	bnz	u9180
 28723  01F2F6  0EF1               	movlw	-15
 28724  01F2F8  50E3               	movf	plusw1,w,c
 28725  01F2FA  E110               	bnz	u9180
 28726  01F2FC  0EF2               	movlw	-14
 28727  01F2FE  50E3               	movf	plusw1,w,c
 28728  01F300  E10D               	bnz	u9180
 28729  01F302  0EF3               	movlw	-13
 28730  01F304  50E3               	movf	plusw1,w,c
 28731  01F306  E10A               	bnz	u9180
 28732  01F308  0EF4               	movlw	-12
 28733  01F30A  50E3               	movf	plusw1,w,c
 28734  01F30C  E107               	bnz	u9180
 28735  01F30E  0EF5               	movlw	-11
 28736  01F310  50E3               	movf	plusw1,w,c
 28737  01F312  E104               	bnz	u9180
 28738  01F314  0EF6               	movlw	-10
 28739  01F316  50E3               	movf	plusw1,w,c
 28740  01F318  B4D8               	btfsc	status,2,c
 28741  01F31A  D075               	goto	u9210
 28742  01F31C                     u9180:
 28743                           
 28744                           ;stkvar	_counter @ sp[(-1)+0]
 28745  01F31C  0EFF               	movlw	-1
 28746  01F31E  6AE3               	clrf	plusw1,c
 28747  01F320  D012               	goto	L29
 28748  01F322                     l10826:
 28749                           
 28750                           ;stkvar	_divisor @ sp[(-1)+-16]
 28751  01F322  90D8               	bcf	status,0,c
 28752  01F324  0EEF               	movlw	-17
 28753  01F326  36E3               	rlcf	plusw1,f,c
 28754  01F328  0EF0               	movlw	-16
 28755  01F32A  36E3               	rlcf	plusw1,f,c
 28756  01F32C  0EF1               	movlw	-15
 28757  01F32E  36E3               	rlcf	plusw1,f,c
 28758  01F330  0EF2               	movlw	-14
 28759  01F332  36E3               	rlcf	plusw1,f,c
 28760  01F334  0EF3               	movlw	-13
 28761  01F336  36E3               	rlcf	plusw1,f,c
 28762  01F338  0EF4               	movlw	-12
 28763  01F33A  36E3               	rlcf	plusw1,f,c
 28764  01F33C  0EF5               	movlw	-11
 28765  01F33E  36E3               	rlcf	plusw1,f,c
 28766  01F340  0EF6               	movlw	-10
 28767  01F342  36E3               	rlcf	plusw1,f,c
 28768                           
 28769                           ;stkvar	_counter @ sp[(-1)+0]
 28770  01F344  0EFF               	movlw	-1
 28771  01F346                     L29:
 28772  01F346  2AE3               	incf	plusw1,f,c
 28773                           
 28774                           ;stkvar	_divisor @ sp[(-1)+-16]
 28775  01F348  0EF6               	movlw	-10
 28776  01F34A  AEE3               	btfss	plusw1,7,c
 28777  01F34C  D7EA               	goto	l10826
 28778  01F34E                     u9190:
 28779                           
 28780                           ;stkvar	_divisor @ sp[(-1)+-16]
 28781                           ;stkvar	_dividend @ sp[(-1)+-8]
 28782  01F34E  50E1               	movf	fsr1l,w,c
 28783  01F350  0FF7               	addlw	-9
 28784  01F352  6ED9               	movwf	fsr2l,c
 28785  01F354  50E2               	movf	fsr1h,w,c
 28786  01F356  6EDA               	movwf	fsr2h,c
 28787  01F358  0EFF               	movlw	255
 28788  01F35A  22DA               	addwfc	fsr2h,f,c
 28789  01F35C  0EEF               	movlw	-17
 28790  01F35E  50E3               	movf	plusw1,w,c
 28791  01F360  5CDE               	subwf	postinc2,w,c
 28792  01F362  0EF0               	movlw	-16
 28793  01F364  50E3               	movf	plusw1,w,c
 28794  01F366  58DE               	subwfb	postinc2,w,c
 28795  01F368  0EF1               	movlw	-15
 28796  01F36A  50E3               	movf	plusw1,w,c
 28797  01F36C  58DE               	subwfb	postinc2,w,c
 28798  01F36E  0EF2               	movlw	-14
 28799  01F370  50E3               	movf	plusw1,w,c
 28800  01F372  58DE               	subwfb	postinc2,w,c
 28801  01F374  0EF3               	movlw	-13
 28802  01F376  50E3               	movf	plusw1,w,c
 28803  01F378  58DE               	subwfb	postinc2,w,c
 28804  01F37A  0EF4               	movlw	-12
 28805  01F37C  50E3               	movf	plusw1,w,c
 28806  01F37E  58DE               	subwfb	postinc2,w,c
 28807  01F380  0EF5               	movlw	-11
 28808  01F382  50E3               	movf	plusw1,w,c
 28809  01F384  58DE               	subwfb	postinc2,w,c
 28810  01F386  0EF6               	movlw	-10
 28811  01F388  50E3               	movf	plusw1,w,c
 28812  01F38A  58DE               	subwfb	postinc2,w,c
 28813  01F38C  A0D8               	btfss	status,0,c
 28814  01F38E  D01F               	goto	l10834
 28815                           
 28816                           ;stkvar	_divisor @ sp[(-1)+-16]
 28817                           ;stkvar	_dividend @ sp[(-1)+-8]
 28818  01F390  50E1               	movf	fsr1l,w,c
 28819  01F392  0FF7               	addlw	-9
 28820  01F394  6ED9               	movwf	fsr2l,c
 28821  01F396  50E2               	movf	fsr1h,w,c
 28822  01F398  6EDA               	movwf	fsr2h,c
 28823  01F39A  0EFF               	movlw	255
 28824  01F39C  22DA               	addwfc	fsr2h,f,c
 28825  01F39E  0EEF               	movlw	-17
 28826  01F3A0  50E3               	movf	plusw1,w,c
 28827  01F3A2  5EDE               	subwf	postinc2,f,c
 28828  01F3A4  0EF0               	movlw	-16
 28829  01F3A6  50E3               	movf	plusw1,w,c
 28830  01F3A8  5ADE               	subwfb	postinc2,f,c
 28831  01F3AA  0EF1               	movlw	-15
 28832  01F3AC  50E3               	movf	plusw1,w,c
 28833  01F3AE  5ADE               	subwfb	postinc2,f,c
 28834  01F3B0  0EF2               	movlw	-14
 28835  01F3B2  50E3               	movf	plusw1,w,c
 28836  01F3B4  5ADE               	subwfb	postinc2,f,c
 28837  01F3B6  0EF3               	movlw	-13
 28838  01F3B8  50E3               	movf	plusw1,w,c
 28839  01F3BA  5ADE               	subwfb	postinc2,f,c
 28840  01F3BC  0EF4               	movlw	-12
 28841  01F3BE  50E3               	movf	plusw1,w,c
 28842  01F3C0  5ADE               	subwfb	postinc2,f,c
 28843  01F3C2  0EF5               	movlw	-11
 28844  01F3C4  50E3               	movf	plusw1,w,c
 28845  01F3C6  5ADE               	subwfb	postinc2,f,c
 28846  01F3C8  0EF6               	movlw	-10
 28847  01F3CA  50E3               	movf	plusw1,w,c
 28848  01F3CC  5ADE               	subwfb	postinc2,f,c
 28849  01F3CE                     l10834:
 28850                           
 28851                           ;stkvar	_divisor @ sp[(-1)+-16]
 28852  01F3CE  90D8               	bcf	status,0,c
 28853  01F3D0  0EF6               	movlw	-10
 28854  01F3D2  32E3               	rrcf	plusw1,f,c
 28855  01F3D4  0EF5               	movlw	-11
 28856  01F3D6  32E3               	rrcf	plusw1,f,c
 28857  01F3D8  0EF4               	movlw	-12
 28858  01F3DA  32E3               	rrcf	plusw1,f,c
 28859  01F3DC  0EF3               	movlw	-13
 28860  01F3DE  32E3               	rrcf	plusw1,f,c
 28861  01F3E0  0EF2               	movlw	-14
 28862  01F3E2  32E3               	rrcf	plusw1,f,c
 28863  01F3E4  0EF1               	movlw	-15
 28864  01F3E6  32E3               	rrcf	plusw1,f,c
 28865  01F3E8  0EF0               	movlw	-16
 28866  01F3EA  32E3               	rrcf	plusw1,f,c
 28867  01F3EC  0EEF               	movlw	-17
 28868  01F3EE  32E3               	rrcf	plusw1,f,c
 28869                           
 28870                           ;stkvar	_counter @ sp[(-1)+0]
 28871  01F3F0  0EFF               	movlw	-1
 28872  01F3F2  50E3               	movf	plusw1,w,c
 28873  01F3F4  6E2A               	movwf	btemp^0,c
 28874  01F3F6  0E01               	movlw	1
 28875  01F3F8  5E2A               	subwf	btemp^0,f,c
 28876  01F3FA  0EFF               	movlw	-1
 28877  01F3FC  0060  F0AB  FFE3   	movff	btemp,plusw1
 28878  01F402  A4D8               	btfss	status,2,c
 28879  01F404  D7A4               	goto	u9190
 28880  01F406                     u9210:
 28881                           
 28882                           ;stkvar	_dividend @ sp[(-1)+-8]
 28883  01F406  0EF7               	movlw	247
 28884  01F408  24E1               	addwf	fsr1l,w,c
 28885  01F40A  6ED9               	movwf	fsr2l,c
 28886  01F40C  0EFF               	movlw	255
 28887  01F40E  20E2               	addwfc	fsr1h,w,c
 28888  01F410  6EDA               	movwf	fsr2h,c
 28889                           
 28890                           ;stkvar	?___lomod @ sp[(-1)+-8]
 28891  01F412  0E08               	movlw	8
 28892  01F414  6E2A               	movwf	btemp^0,c
 28893  01F416  0EF7               	movlw	-9
 28894  01F418                     us922999:
 28895  01F418  006F FF7B FFE3     	movff	postinc2,plusw1
 28896  01F41E  28E8               	incf	wreg,w,c
 28897  01F420  2E2A               	decfsz	btemp^0,f,c
 28898  01F422  D7FA               	bra	us922999
 28899                           
 28900                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 28901  01F424  52E5               	movf	postdec1,f,c
 28902  01F426  0012               	return		;funcret
 28903  01F428                     __end_of___lomod:
 28904                           	opt callstack 0
 28905                           
 28906 ;; *************** function ___lodiv *****************
 28907 ;; Defined at:
 28908 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 28909 ;; Parameters:    Size  Location     Type
 28910 ;;  dividend        8  [STACK] unsigned long long 
 28911 ;;  divisor         8  [STACK] unsigned long long 
 28912 ;; Auto vars:     Size  Location     Type
 28913 ;;  quotient        8  [STACK] unsigned long long 
 28914 ;;  counter         1  [STACK] unsigned char 
 28915 ;; Return value:  Size  Location     Type
 28916 ;;                  8  [STACK] unsigned long long 
 28917 ;; Registers used:
 28918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 28919 ;; Tracked objects:
 28920 ;;		On entry : 0/3
 28921 ;;		On exit  : 0/0
 28922 ;;		Unchanged: 0/0
 28923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28928 ;;Total ram usage:        0 bytes
 28929 ;; Hardware stack levels used:    1
 28930 ;; Hardware stack levels required when called:   15
 28931 ;; This function calls:
 28932 ;;		Nothing
 28933 ;; This function is called by:
 28934 ;;		_utoa
 28935 ;; This function uses a reentrant model
 28936 ;;
 28937                           
 28938                           	psect	text100
 28939  01E3B8                     __ptext100:
 28940                           	opt callstack 0
 28941  01E3B8                     ___lodiv:
 28942                           	opt callstack 0
 28943                           
 28944                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 28945  01E3B8  0E09               	movlw	9
 28946  01E3BA  26E1               	addwf	fsr1l,f,c
 28947  01E3BC  0E00               	movlw	0
 28948  01E3BE  22E2               	addwfc	fsr1h,f,c
 28949                           
 28950                           ;stkvar	_quotient @ sp[(-9)+0]
 28951                           
 28952                           ;incstack = 0
 28953 ;; hardware stack exceeded
 28954  01E3C0  0E07               	movlw	7
 28955  01E3C2  6E2A               	movwf	btemp^0,c
 28956  01E3C4  0EF7               	movlw	-9
 28957  01E3C6                     u9121:
 28958  01E3C6  6AE3               	clrf	plusw1,c
 28959  01E3C8  2AE8               	incf	wreg,f,c
 28960  01E3CA  062A               	decf	btemp^0,f,c
 28961  01E3CC  E2FC               	bc	u9121
 28962                           
 28963                           ;stkvar	_divisor @ sp[(-9)+-16]
 28964  01E3CE  0EE7               	movlw	-25
 28965  01E3D0  50E3               	movf	plusw1,w,c
 28966  01E3D2  E116               	bnz	u9130
 28967  01E3D4  0EE8               	movlw	-24
 28968  01E3D6  50E3               	movf	plusw1,w,c
 28969  01E3D8  E113               	bnz	u9130
 28970  01E3DA  0EE9               	movlw	-23
 28971  01E3DC  50E3               	movf	plusw1,w,c
 28972  01E3DE  E110               	bnz	u9130
 28973  01E3E0  0EEA               	movlw	-22
 28974  01E3E2  50E3               	movf	plusw1,w,c
 28975  01E3E4  E10D               	bnz	u9130
 28976  01E3E6  0EEB               	movlw	-21
 28977  01E3E8  50E3               	movf	plusw1,w,c
 28978  01E3EA  E10A               	bnz	u9130
 28979  01E3EC  0EEC               	movlw	-20
 28980  01E3EE  50E3               	movf	plusw1,w,c
 28981  01E3F0  E107               	bnz	u9130
 28982  01E3F2  0EED               	movlw	-19
 28983  01E3F4  50E3               	movf	plusw1,w,c
 28984  01E3F6  E104               	bnz	u9130
 28985  01E3F8  0EEE               	movlw	-18
 28986  01E3FA  50E3               	movf	plusw1,w,c
 28987  01E3FC  B4D8               	btfsc	status,2,c
 28988  01E3FE  D088               	goto	u9160
 28989  01E400                     u9130:
 28990                           
 28991                           ;stkvar	_counter @ sp[(-9)+8]
 28992  01E400  0EFF               	movlw	-1
 28993  01E402  6AE3               	clrf	plusw1,c
 28994  01E404  D012               	goto	L30
 28995  01E406                     l10802:
 28996                           
 28997                           ;stkvar	_divisor @ sp[(-9)+-16]
 28998  01E406  90D8               	bcf	status,0,c
 28999  01E408  0EE7               	movlw	-25
 29000  01E40A  36E3               	rlcf	plusw1,f,c
 29001  01E40C  0EE8               	movlw	-24
 29002  01E40E  36E3               	rlcf	plusw1,f,c
 29003  01E410  0EE9               	movlw	-23
 29004  01E412  36E3               	rlcf	plusw1,f,c
 29005  01E414  0EEA               	movlw	-22
 29006  01E416  36E3               	rlcf	plusw1,f,c
 29007  01E418  0EEB               	movlw	-21
 29008  01E41A  36E3               	rlcf	plusw1,f,c
 29009  01E41C  0EEC               	movlw	-20
 29010  01E41E  36E3               	rlcf	plusw1,f,c
 29011  01E420  0EED               	movlw	-19
 29012  01E422  36E3               	rlcf	plusw1,f,c
 29013  01E424  0EEE               	movlw	-18
 29014  01E426  36E3               	rlcf	plusw1,f,c
 29015                           
 29016                           ;stkvar	_counter @ sp[(-9)+8]
 29017  01E428  0EFF               	movlw	-1
 29018  01E42A                     L30:
 29019  01E42A  2AE3               	incf	plusw1,f,c
 29020                           
 29021                           ;stkvar	_divisor @ sp[(-9)+-16]
 29022  01E42C  0EEE               	movlw	-18
 29023  01E42E  AEE3               	btfss	plusw1,7,c
 29024  01E430  D7EA               	goto	l10802
 29025  01E432                     u9140:
 29026                           
 29027                           ;stkvar	_quotient @ sp[(-9)+0]
 29028  01E432  90D8               	bcf	status,0,c
 29029  01E434  0EF7               	movlw	-9
 29030  01E436  36E3               	rlcf	plusw1,f,c
 29031  01E438  0EF8               	movlw	-8
 29032  01E43A  36E3               	rlcf	plusw1,f,c
 29033  01E43C  0EF9               	movlw	-7
 29034  01E43E  36E3               	rlcf	plusw1,f,c
 29035  01E440  0EFA               	movlw	-6
 29036  01E442  36E3               	rlcf	plusw1,f,c
 29037  01E444  0EFB               	movlw	-5
 29038  01E446  36E3               	rlcf	plusw1,f,c
 29039  01E448  0EFC               	movlw	-4
 29040  01E44A  36E3               	rlcf	plusw1,f,c
 29041  01E44C  0EFD               	movlw	-3
 29042  01E44E  36E3               	rlcf	plusw1,f,c
 29043  01E450  0EFE               	movlw	-2
 29044  01E452  36E3               	rlcf	plusw1,f,c
 29045                           
 29046                           ;stkvar	_divisor @ sp[(-9)+-16]
 29047                           ;stkvar	_dividend @ sp[(-9)+-8]
 29048  01E454  50E1               	movf	fsr1l,w,c
 29049  01E456  0FEF               	addlw	-17
 29050  01E458  6ED9               	movwf	fsr2l,c
 29051  01E45A  50E2               	movf	fsr1h,w,c
 29052  01E45C  6EDA               	movwf	fsr2h,c
 29053  01E45E  0EFF               	movlw	255
 29054  01E460  22DA               	addwfc	fsr2h,f,c
 29055  01E462  0EE7               	movlw	-25
 29056  01E464  50E3               	movf	plusw1,w,c
 29057  01E466  5CDE               	subwf	postinc2,w,c
 29058  01E468  0EE8               	movlw	-24
 29059  01E46A  50E3               	movf	plusw1,w,c
 29060  01E46C  58DE               	subwfb	postinc2,w,c
 29061  01E46E  0EE9               	movlw	-23
 29062  01E470  50E3               	movf	plusw1,w,c
 29063  01E472  58DE               	subwfb	postinc2,w,c
 29064  01E474  0EEA               	movlw	-22
 29065  01E476  50E3               	movf	plusw1,w,c
 29066  01E478  58DE               	subwfb	postinc2,w,c
 29067  01E47A  0EEB               	movlw	-21
 29068  01E47C  50E3               	movf	plusw1,w,c
 29069  01E47E  58DE               	subwfb	postinc2,w,c
 29070  01E480  0EEC               	movlw	-20
 29071  01E482  50E3               	movf	plusw1,w,c
 29072  01E484  58DE               	subwfb	postinc2,w,c
 29073  01E486  0EED               	movlw	-19
 29074  01E488  50E3               	movf	plusw1,w,c
 29075  01E48A  58DE               	subwfb	postinc2,w,c
 29076  01E48C  0EEE               	movlw	-18
 29077  01E48E  50E3               	movf	plusw1,w,c
 29078  01E490  58DE               	subwfb	postinc2,w,c
 29079  01E492  A0D8               	btfss	status,0,c
 29080  01E494  D021               	goto	l10814
 29081                           
 29082                           ;stkvar	_divisor @ sp[(-9)+-16]
 29083                           ;stkvar	_dividend @ sp[(-9)+-8]
 29084  01E496  50E1               	movf	fsr1l,w,c
 29085  01E498  0FEF               	addlw	-17
 29086  01E49A  6ED9               	movwf	fsr2l,c
 29087  01E49C  50E2               	movf	fsr1h,w,c
 29088  01E49E  6EDA               	movwf	fsr2h,c
 29089  01E4A0  0EFF               	movlw	255
 29090  01E4A2  22DA               	addwfc	fsr2h,f,c
 29091  01E4A4  0EE7               	movlw	-25
 29092  01E4A6  50E3               	movf	plusw1,w,c
 29093  01E4A8  5EDE               	subwf	postinc2,f,c
 29094  01E4AA  0EE8               	movlw	-24
 29095  01E4AC  50E3               	movf	plusw1,w,c
 29096  01E4AE  5ADE               	subwfb	postinc2,f,c
 29097  01E4B0  0EE9               	movlw	-23
 29098  01E4B2  50E3               	movf	plusw1,w,c
 29099  01E4B4  5ADE               	subwfb	postinc2,f,c
 29100  01E4B6  0EEA               	movlw	-22
 29101  01E4B8  50E3               	movf	plusw1,w,c
 29102  01E4BA  5ADE               	subwfb	postinc2,f,c
 29103  01E4BC  0EEB               	movlw	-21
 29104  01E4BE  50E3               	movf	plusw1,w,c
 29105  01E4C0  5ADE               	subwfb	postinc2,f,c
 29106  01E4C2  0EEC               	movlw	-20
 29107  01E4C4  50E3               	movf	plusw1,w,c
 29108  01E4C6  5ADE               	subwfb	postinc2,f,c
 29109  01E4C8  0EED               	movlw	-19
 29110  01E4CA  50E3               	movf	plusw1,w,c
 29111  01E4CC  5ADE               	subwfb	postinc2,f,c
 29112  01E4CE  0EEE               	movlw	-18
 29113  01E4D0  50E3               	movf	plusw1,w,c
 29114  01E4D2  5ADE               	subwfb	postinc2,f,c
 29115                           
 29116                           ;stkvar	_quotient @ sp[(-9)+0]
 29117  01E4D4  0EF7               	movlw	-9
 29118  01E4D6  80E3               	bsf	plusw1,0,c
 29119  01E4D8                     l10814:
 29120                           
 29121                           ;stkvar	_divisor @ sp[(-9)+-16]
 29122  01E4D8  90D8               	bcf	status,0,c
 29123  01E4DA  0EEE               	movlw	-18
 29124  01E4DC  32E3               	rrcf	plusw1,f,c
 29125  01E4DE  0EED               	movlw	-19
 29126  01E4E0  32E3               	rrcf	plusw1,f,c
 29127  01E4E2  0EEC               	movlw	-20
 29128  01E4E4  32E3               	rrcf	plusw1,f,c
 29129  01E4E6  0EEB               	movlw	-21
 29130  01E4E8  32E3               	rrcf	plusw1,f,c
 29131  01E4EA  0EEA               	movlw	-22
 29132  01E4EC  32E3               	rrcf	plusw1,f,c
 29133  01E4EE  0EE9               	movlw	-23
 29134  01E4F0  32E3               	rrcf	plusw1,f,c
 29135  01E4F2  0EE8               	movlw	-24
 29136  01E4F4  32E3               	rrcf	plusw1,f,c
 29137  01E4F6  0EE7               	movlw	-25
 29138  01E4F8  32E3               	rrcf	plusw1,f,c
 29139                           
 29140                           ;stkvar	_counter @ sp[(-9)+8]
 29141  01E4FA  0EFF               	movlw	-1
 29142  01E4FC  50E3               	movf	plusw1,w,c
 29143  01E4FE  6E2A               	movwf	btemp^0,c
 29144  01E500  0E01               	movlw	1
 29145  01E502  5E2A               	subwf	btemp^0,f,c
 29146  01E504  0EFF               	movlw	-1
 29147  01E506  0060  F0AB  FFE3   	movff	btemp,plusw1
 29148  01E50C  A4D8               	btfss	status,2,c
 29149  01E50E  D791               	goto	u9140
 29150  01E510                     u9160:
 29151                           
 29152                           ;stkvar	_quotient @ sp[(-9)+0]
 29153  01E510  0EF7               	movlw	247
 29154  01E512  24E1               	addwf	fsr1l,w,c
 29155  01E514  6ED9               	movwf	fsr2l,c
 29156  01E516  0EFF               	movlw	255
 29157  01E518  20E2               	addwfc	fsr1h,w,c
 29158  01E51A  6EDA               	movwf	fsr2h,c
 29159                           
 29160                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 29161  01E51C  0E08               	movlw	8
 29162  01E51E  6E2A               	movwf	btemp^0,c
 29163  01E520  0EEF               	movlw	-17
 29164  01E522                     us917999:
 29165  01E522  006F FF7B FFE3     	movff	postinc2,plusw1
 29166  01E528  28E8               	incf	wreg,w,c
 29167  01E52A  2E2A               	decfsz	btemp^0,f,c
 29168  01E52C  D7FA               	bra	us917999
 29169                           
 29170                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 29171  01E52E  0EF7               	movlw	247
 29172  01E530  26E1               	addwf	fsr1l,f,c
 29173  01E532  0EFF               	movlw	255
 29174  01E534  22E2               	addwfc	fsr1h,f,c
 29175  01E536  0012               	return		;funcret
 29176  01E538                     __end_of___lodiv:
 29177                           	opt callstack 0
 29178                           
 29179 ;; *************** function _strncmp *****************
 29180 ;; Defined at:
 29181 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 29182 ;; Parameters:    Size  Location     Type
 29183 ;;  _l              2  [STACK] PTR const unsigned char 
 29184 ;;		 -> ct(3), STR_95(127), STR_93(3), STR_92(3), 
 29185 ;;		 -> STR_91(21), STR_90(21), STR_89(21), STR_88(21), 
 29186 ;;		 -> STR_87(21), STR_86(21), STR_85(26), STR_84(15), 
 29187 ;;		 -> STR_83(15), STR_82(15), STR_81(15), STR_80(10), 
 29188 ;;		 -> STR_79(10), STR_78(19), STR_77(19), STR_74(3), 
 29189 ;;		 -> STR_73(14), STR_72(28), STR_71(28), STR_70(28), 
 29190 ;;		 -> STR_69(22), STR_68(22), STR_67(22), STR_66(22), 
 29191 ;;		 -> STR_65(22), STR_64(22), STR_63(22), STR_62(22), 
 29192 ;;		 -> STR_61(22), STR_60(21), STR_59(22), STR_58(22), 
 29193 ;;		 -> STR_57(22), STR_56(22), STR_55(22), STR_54(22), 
 29194 ;;		 -> STR_53(24), STR_52(24), STR_51(24), STR_50(30), 
 29195 ;;		 -> STR_49(24), STR_48(24), STR_47(23), STR_46(23), 
 29196 ;;		 -> STR_45(23), STR_44(23), STR_43(23), STR_42(23), 
 29197 ;;		 -> STR_41(23), STR_40(23), STR_39(23), STR_38(23), 
 29198 ;;		 -> STR_37(23), STR_36(23), STR_35(18), STR_34(17), 
 29199 ;;		 -> STR_33(17), STR_32(22), STR_31(22), STR_30(22), 
 29200 ;;		 -> STR_29(14), STR_28(14), STR_27(27), STR_26(27), 
 29201 ;;		 -> STR_25(23), STR_24(22), STR_23(22), STR_22(22), 
 29202 ;;		 -> STR_21(22), STR_20(23), STR_19(23), STR_18(23), 
 29203 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 29204 ;;		 -> STR_13(21), STR_12(21), STR_11(21), STR_10(21), 
 29205 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 29206 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 29207 ;;  _r              2  [STACK] PTR const unsigned char 
 29208 ;;		 -> STR_129(3), STR_125(3), STR_120(3), STR_115(3), 
 29209 ;;		 -> STR_110(3), STR_106(3), 
 29210 ;;  n               2  [STACK] unsigned int 
 29211 ;; Auto vars:     Size  Location     Type
 29212 ;;  r               2  [STACK] PTR const unsigned char 
 29213 ;;		 -> STR_129(3), STR_125(3), STR_120(3), STR_115(3), 
 29214 ;;		 -> STR_110(3), STR_106(3), 
 29215 ;;  l               2  [STACK] PTR const unsigned char 
 29216 ;;		 -> ct(3), STR_95(127), STR_93(3), STR_92(3), 
 29217 ;;		 -> STR_91(21), STR_90(21), STR_89(21), STR_88(21), 
 29218 ;;		 -> STR_87(21), STR_86(21), STR_85(26), STR_84(15), 
 29219 ;;		 -> STR_83(15), STR_82(15), STR_81(15), STR_80(10), 
 29220 ;;		 -> STR_79(10), STR_78(19), STR_77(19), STR_74(3), 
 29221 ;;		 -> STR_73(14), STR_72(28), STR_71(28), STR_70(28), 
 29222 ;;		 -> STR_69(22), STR_68(22), STR_67(22), STR_66(22), 
 29223 ;;		 -> STR_65(22), STR_64(22), STR_63(22), STR_62(22), 
 29224 ;;		 -> STR_61(22), STR_60(21), STR_59(22), STR_58(22), 
 29225 ;;		 -> STR_57(22), STR_56(22), STR_55(22), STR_54(22), 
 29226 ;;		 -> STR_53(24), STR_52(24), STR_51(24), STR_50(30), 
 29227 ;;		 -> STR_49(24), STR_48(24), STR_47(23), STR_46(23), 
 29228 ;;		 -> STR_45(23), STR_44(23), STR_43(23), STR_42(23), 
 29229 ;;		 -> STR_41(23), STR_40(23), STR_39(23), STR_38(23), 
 29230 ;;		 -> STR_37(23), STR_36(23), STR_35(18), STR_34(17), 
 29231 ;;		 -> STR_33(17), STR_32(22), STR_31(22), STR_30(22), 
 29232 ;;		 -> STR_29(14), STR_28(14), STR_27(27), STR_26(27), 
 29233 ;;		 -> STR_25(23), STR_24(22), STR_23(22), STR_22(22), 
 29234 ;;		 -> STR_21(22), STR_20(23), STR_19(23), STR_18(23), 
 29235 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 29236 ;;		 -> STR_13(21), STR_12(21), STR_11(21), STR_10(21), 
 29237 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 29238 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 29239 ;; Return value:  Size  Location     Type
 29240 ;;                  2  [STACK] int 
 29241 ;; Registers used:
 29242 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 29243 ;; Tracked objects:
 29244 ;;		On entry : 0/0
 29245 ;;		On exit  : 0/0
 29246 ;;		Unchanged: 0/0
 29247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29252 ;;Total ram usage:        0 bytes
 29253 ;; Hardware stack levels used:    1
 29254 ;; Hardware stack levels required when called:   15
 29255 ;; This function calls:
 29256 ;;		Nothing
 29257 ;; This function is called by:
 29258 ;;		_vfpfcnvrt
 29259 ;; This function uses a reentrant model
 29260 ;;
 29261                           
 29262                           	psect	text101
 29263  01D000                     __ptext101:
 29264                           	opt callstack 0
 29265  01D000                     _strncmp:
 29266                           	opt callstack 0
 29267                           
 29268                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29269  01D000  52E6               	movf	postinc1,f,c
 29270  01D002  52E6               	movf	postinc1,f,c
 29271  01D004  52E6               	movf	postinc1,f,c
 29272  01D006  52E6               	movf	postinc1,f,c
 29273                           
 29274                           ;stkvar	__l @ sp[(-4)+-2]
 29275                           
 29276                           ;incstack = 0
 29277 ;; hardware stack exceeded
 29278  01D008  0EFA               	movlw	-6
 29279  01D00A  006F FF8C  F034    	movff	plusw1,btemp+10
 29280  01D010  0EFB               	movlw	-5
 29281  01D012  006F FF8C  F035    	movff	plusw1,btemp+11
 29282                           
 29283                           ;stkvar	_l @ sp[(-4)+2]
 29284  01D018  0EFF               	movlw	-1
 29285  01D01A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29286  01D020  0EFE               	movlw	-2
 29287  01D022  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29288                           
 29289                           ;stkvar	__r @ sp[(-4)+-4]
 29290  01D028  0EF8               	movlw	-8
 29291  01D02A  006F FF8C  F034    	movff	plusw1,btemp+10
 29292  01D030  0EF9               	movlw	-7
 29293  01D032  006F FF8C  F035    	movff	plusw1,btemp+11
 29294                           
 29295                           ;stkvar	_r @ sp[(-4)+0]
 29296  01D038  0EFD               	movlw	-3
 29297  01D03A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29298  01D040  0EFC               	movlw	-4
 29299  01D042  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29300                           
 29301                           ;stkvar	_n @ sp[(-4)+-6]
 29302  01D048  0EF6               	movlw	-10
 29303  01D04A  006F FF8C  F02A    	movff	plusw1,btemp
 29304  01D050  0E01               	movlw	1
 29305  01D052  5E2A               	subwf	btemp^0,f,c
 29306  01D054  0EF6               	movlw	-10
 29307  01D056  0060  F0AB  FFE3   	movff	btemp,plusw1
 29308  01D05C  0EF7               	movlw	-9
 29309  01D05E  006F FF8C  F02A    	movff	plusw1,btemp
 29310  01D064  0E00               	movlw	0
 29311  01D066  5A2A               	subwfb	btemp^0,f,c
 29312  01D068  0EF7               	movlw	-9
 29313  01D06A  0060  F0AB  FFE3   	movff	btemp,plusw1
 29314  01D070  0EF6               	movlw	-10
 29315  01D072  28E3               	incf	plusw1,w,c
 29316  01D074  E13F               	bnz	l11502
 29317  01D076  0EF7               	movlw	-9
 29318  01D078  28E3               	incf	plusw1,w,c
 29319  01D07A  A4D8               	btfss	status,2,c
 29320  01D07C  D03B               	goto	l11502
 29321  01D07E  0E00               	movlw	0
 29322  01D080  6E2A               	movwf	btemp^0,c
 29323  01D082  0E00               	movlw	0
 29324  01D084  6E2B               	movwf	(btemp+1)^0,c
 29325  01D086  D0C7               	goto	l3810
 29326  01D088                     l11500:
 29327                           
 29328                           ;stkvar	_l @ sp[(-4)+2]
 29329  01D088  0EFE               	movlw	-2
 29330  01D08A  50E3               	movf	plusw1,w,c
 29331  01D08C  0F01               	addlw	1
 29332  01D08E  6E2A               	movwf	btemp^0,c
 29333  01D090  0EFE               	movlw	-2
 29334  01D092  0060  F0AB  FFE3   	movff	btemp,plusw1
 29335  01D098  6A2A               	clrf	btemp^0,c
 29336  01D09A  0EFF               	movlw	-1
 29337  01D09C  50E3               	movf	plusw1,w,c
 29338  01D09E  202A               	addwfc	btemp^0,w,c
 29339  01D0A0  6E2A               	movwf	btemp^0,c
 29340  01D0A2  0EFF               	movlw	-1
 29341  01D0A4  0060  F0AB  FFE3   	movff	btemp,plusw1
 29342                           
 29343                           ;stkvar	_r @ sp[(-4)+0]
 29344  01D0AA  0EFC               	movlw	-4
 29345  01D0AC  50E3               	movf	plusw1,w,c
 29346  01D0AE  0F01               	addlw	1
 29347  01D0B0  6E2A               	movwf	btemp^0,c
 29348  01D0B2  0EFC               	movlw	-4
 29349  01D0B4  0060  F0AB  FFE3   	movff	btemp,plusw1
 29350  01D0BA  6A2A               	clrf	btemp^0,c
 29351  01D0BC  0EFD               	movlw	-3
 29352  01D0BE  50E3               	movf	plusw1,w,c
 29353  01D0C0  202A               	addwfc	btemp^0,w,c
 29354  01D0C2  6E2A               	movwf	btemp^0,c
 29355  01D0C4  0EFD               	movlw	-3
 29356  01D0C6  0060  F0AB  FFE3   	movff	btemp,plusw1
 29357                           
 29358                           ;stkvar	_n @ sp[(-4)+-6]
 29359  01D0CC  0EF6               	movlw	-10
 29360  01D0CE  006F FF8C  F02A    	movff	plusw1,btemp
 29361  01D0D4  0E01               	movlw	1
 29362  01D0D6  5E2A               	subwf	btemp^0,f,c
 29363  01D0D8  0EF6               	movlw	-10
 29364  01D0DA  0060  F0AB  FFE3   	movff	btemp,plusw1
 29365  01D0E0  0EF7               	movlw	-9
 29366  01D0E2  006F FF8C  F02A    	movff	plusw1,btemp
 29367  01D0E8  0E00               	movlw	0
 29368  01D0EA  5A2A               	subwfb	btemp^0,f,c
 29369  01D0EC  0EF7               	movlw	-9
 29370  01D0EE  0060  F0AB  FFE3   	movff	btemp,plusw1
 29371  01D0F4                     l11502:
 29372                           
 29373                           ;stkvar	_l @ sp[(-4)+2]
 29374  01D0F4  0EFE               	movlw	-2
 29375  01D0F6  006F FF8F FFF6     	movff	plusw1,tblptrl
 29376  01D0FC  0EFF               	movlw	-1
 29377  01D0FE  006F FF8F FFF7     	movff	plusw1,tblptrh
 29378  01D104  0E00               	movlw	low (__mediumconst shr (0+16))
 29379  01D106  6EF8               	movwf	tblptru,c
 29380  01D108  0E1F               	movlw	(high __ramtop+-1)
 29381  01D10A  64F7               	cpfsgt	tblptrh,c
 29382  01D10C  D003               	bra	u10457
 29383  01D10E  0008               	tblrd		*
 29384  01D110  50F5               	movf	tablat,w,c
 29385  01D112  D007               	bra	u10450
 29386  01D114                     u10457:
 29387  01D114  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29388  01D11A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29389  01D120  50EF               	movf	indf0,w,c
 29390  01D122                     u10450:
 29391  01D122  0900               	iorlw	0
 29392  01D124  B4D8               	btfsc	status,2,c
 29393  01D126  D04A               	goto	u10490
 29394                           
 29395                           ;stkvar	_r @ sp[(-4)+0]
 29396  01D128  50E1               	movf	fsr1l,w,c
 29397  01D12A  0FFC               	addlw	-4
 29398  01D12C  6ED9               	movwf	fsr2l,c
 29399  01D12E  50E2               	movf	fsr1h,w,c
 29400  01D130  6EDA               	movwf	fsr2h,c
 29401  01D132  0EFF               	movlw	255
 29402  01D134  22DA               	addwfc	fsr2h,f,c
 29403  01D136  006F FF7B FFF6     	movff	postinc2,tblptrl
 29404  01D13C  006F FF77 FFF7     	movff	postdec2,tblptrh
 29405  01D142                     	if	0	;tblptru may be non-zero
 29406  01D142                     	endif
 29407  01D142                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29408  01D142  0E00               	movlw	low (__mediumconst shr (0+16))
 29409  01D144  6EF8               	movwf	tblptru,c
 29410  01D146                     	endif
 29411  01D146  0008               	tblrd		*
 29412  01D148  50F5               	movf	tablat,w,c
 29413  01D14A  0900               	iorlw	0
 29414  01D14C  B4D8               	btfsc	status,2,c
 29415  01D14E  D036               	goto	u10490
 29416                           
 29417                           ;stkvar	_n @ sp[(-4)+-6]
 29418  01D150  0EF6               	movlw	-10
 29419  01D152  006F FF8C  F02A    	movff	plusw1,btemp
 29420  01D158  0EF7               	movlw	-9
 29421  01D15A  50E3               	movf	plusw1,w,c
 29422  01D15C  102A               	iorwf	btemp^0,w,c
 29423  01D15E  B4D8               	btfsc	status,2,c
 29424  01D160  D02D               	goto	u10490
 29425                           
 29426                           ;stkvar	_r @ sp[(-4)+0]
 29427  01D162  50E1               	movf	fsr1l,w,c
 29428  01D164  0FFC               	addlw	-4
 29429  01D166  6ED9               	movwf	fsr2l,c
 29430  01D168  50E2               	movf	fsr1h,w,c
 29431  01D16A  6EDA               	movwf	fsr2h,c
 29432  01D16C  0EFF               	movlw	255
 29433  01D16E  22DA               	addwfc	fsr2h,f,c
 29434  01D170  006F FF7B FFF6     	movff	postinc2,tblptrl
 29435  01D176  006F FF77 FFF7     	movff	postdec2,tblptrh
 29436  01D17C                     	if	0	;tblptru may be non-zero
 29437  01D17C                     	endif
 29438  01D17C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29439  01D17C  0E00               	movlw	low (__mediumconst shr (0+16))
 29440  01D17E  6EF8               	movwf	tblptru,c
 29441  01D180                     	endif
 29442  01D180  0008               	tblrd		*
 29443  01D182  006F FFD4  F035    	movff	tablat,btemp+11
 29444                           
 29445                           ;stkvar	_l @ sp[(-4)+2]
 29446  01D188  0EFE               	movlw	-2
 29447  01D18A  006F FF8F FFF6     	movff	plusw1,tblptrl
 29448  01D190  0EFF               	movlw	-1
 29449  01D192  006F FF8F FFF7     	movff	plusw1,tblptrh
 29450  01D198  0E00               	movlw	low (__mediumconst shr (0+16))
 29451  01D19A  6EF8               	movwf	tblptru,c
 29452  01D19C  0E1F               	movlw	(high __ramtop+-1)
 29453  01D19E  64F7               	cpfsgt	tblptrh,c
 29454  01D1A0  D003               	bra	u10497
 29455  01D1A2  0008               	tblrd		*
 29456  01D1A4  50F5               	movf	tablat,w,c
 29457  01D1A6  D007               	bra	u10495
 29458  01D1A8                     u10497:
 29459  01D1A8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29460  01D1AE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29461  01D1B4  50EF               	movf	indf0,w,c
 29462  01D1B6                     u10495:
 29463  01D1B6  1835               	xorwf	(btemp+11)^0,w,c
 29464  01D1B8  B4D8               	btfsc	status,2,c
 29465  01D1BA  D766               	goto	l11500
 29466  01D1BC                     u10490:
 29467                           
 29468                           ;stkvar	_l @ sp[(-4)+2]
 29469  01D1BC  0EFE               	movlw	-2
 29470  01D1BE  006F FF8F FFF6     	movff	plusw1,tblptrl
 29471  01D1C4  0EFF               	movlw	-1
 29472  01D1C6  006F FF8F FFF7     	movff	plusw1,tblptrh
 29473  01D1CC  0E00               	movlw	low (__mediumconst shr (0+16))
 29474  01D1CE  6EF8               	movwf	tblptru,c
 29475  01D1D0  0E1F               	movlw	(high __ramtop+-1)
 29476  01D1D2  64F7               	cpfsgt	tblptrh,c
 29477  01D1D4  D003               	bra	u10507
 29478  01D1D6  0008               	tblrd		*
 29479  01D1D8  50F5               	movf	tablat,w,c
 29480  01D1DA  D007               	bra	u10500
 29481  01D1DC                     u10507:
 29482  01D1DC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29483  01D1E2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29484  01D1E8  50EF               	movf	indf0,w,c
 29485  01D1EA                     u10500:
 29486  01D1EA  6E2A               	movwf	btemp^0,c
 29487  01D1EC  6A2B               	clrf	(btemp+1)^0,c
 29488                           
 29489                           ;stkvar	_r @ sp[(-4)+0]
 29490  01D1EE  50E1               	movf	fsr1l,w,c
 29491  01D1F0  0FFC               	addlw	-4
 29492  01D1F2  6ED9               	movwf	fsr2l,c
 29493  01D1F4  50E2               	movf	fsr1h,w,c
 29494  01D1F6  6EDA               	movwf	fsr2h,c
 29495  01D1F8  0EFF               	movlw	255
 29496  01D1FA  22DA               	addwfc	fsr2h,f,c
 29497  01D1FC  006F FF7B FFF6     	movff	postinc2,tblptrl
 29498  01D202  006F FF77 FFF7     	movff	postdec2,tblptrh
 29499  01D208                     	if	0	;tblptru may be non-zero
 29500  01D208                     	endif
 29501  01D208                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29502  01D208  0E00               	movlw	low (__mediumconst shr (0+16))
 29503  01D20A  6EF8               	movwf	tblptru,c
 29504  01D20C                     	endif
 29505  01D20C  0008               	tblrd		*
 29506  01D20E  50F5               	movf	tablat,w,c
 29507  01D210  5E2A               	subwf	btemp^0,f,c
 29508  01D212  0E00               	movlw	0
 29509  01D214  5A2B               	subwfb	(btemp+1)^0,f,c
 29510  01D216                     l3810:
 29511                           
 29512                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 29513  01D216  0EF6               	movlw	246
 29514  01D218  26E1               	addwf	fsr1l,f,c
 29515  01D21A  0EFF               	movlw	255
 29516  01D21C  22E2               	addwfc	fsr1h,f,c
 29517  01D21E  0012               	return		;funcret
 29518  01D220                     __end_of_strncmp:
 29519                           	opt callstack 0
 29520                           
 29521 ;; *************** function _stoa *****************
 29522 ;; Defined at:
 29523 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 29524 ;; Parameters:    Size  Location     Type
 29525 ;;  fp              2  [STACK] PTR struct _IO_FILE
 29526 ;;		 -> f(6), NULL(0), 
 29527 ;;  s               2  [STACK] PTR unsigned char 
 29528 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_76(9), 
 29529 ;;		 -> STR_75(12), D.lcd(640), D(642), T(176), 
 29530 ;;		 -> STR_3(5), V(181), 
 29531 ;; Auto vars:     Size  Location     Type
 29532 ;;  nuls            7  [STACK] unsigned char [7]
 29533 ;;  l               2  [STACK] int 
 29534 ;;  p               2  [STACK] int 
 29535 ;;  cp              2  [STACK] PTR unsigned char 
 29536 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 29537 ;;		 -> STR_76(9), STR_75(12), D.lcd(640), D(642), 
 29538 ;;		 -> T(176), STR_3(5), V(181), 
 29539 ;;  w               2  [STACK] int 
 29540 ;;  i               2  [STACK] int 
 29541 ;; Return value:  Size  Location     Type
 29542 ;;                  2  [STACK] int 
 29543 ;; Registers used:
 29544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 29545 ;; Tracked objects:
 29546 ;;		On entry : 0/0
 29547 ;;		On exit  : 0/0
 29548 ;;		Unchanged: 0/0
 29549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29554 ;;Total ram usage:        0 bytes
 29555 ;; Hardware stack levels used:    1
 29556 ;; Hardware stack levels required when called:   18
 29557 ;; This function calls:
 29558 ;;		_fputc
 29559 ;;		_strlen
 29560 ;; This function is called by:
 29561 ;;		_vfpfcnvrt
 29562 ;; This function uses a reentrant model
 29563 ;;
 29564                           
 29565                           	psect	text102
 29566  01BA54                     __ptext102:
 29567                           	opt callstack 0
 29568  01BA54                     _stoa:
 29569                           	opt callstack 0
 29570                           
 29571                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 29572  01BA54  0E11               	movlw	17
 29573  01BA56  26E1               	addwf	fsr1l,f,c
 29574  01BA58  0E00               	movlw	0
 29575  01BA5A  22E2               	addwfc	fsr1h,f,c
 29576                           
 29577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 29578                           
 29579                           ;incstack = 0
 29580 ;; hardware stack exceeded
 29581  01BA5C  EE20  F200         	lfsr	2,stoa@F1166
 29582                           
 29583                           ;stkvar	_nuls @ sp[(-17)+0]
 29584  01BA60  0E07               	movlw	7
 29585  01BA62  6E2A               	movwf	btemp^0,c
 29586  01BA64  0EEF               	movlw	-17
 29587  01BA66                     us1523999:
 29588  01BA66  006F FF7B FFE3     	movff	postinc2,plusw1
 29589  01BA6C  28E8               	incf	wreg,w,c
 29590  01BA6E  2E2A               	decfsz	btemp^0,f,c
 29591  01BA70  D7FA               	bra	us1523999
 29592                           
 29593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 29594                           ;stkvar	_s @ sp[(-17)+-4]
 29595  01BA72  0EEB               	movlw	-21
 29596  01BA74  006F FF8C  F034    	movff	plusw1,btemp+10
 29597  01BA7A  0EEC               	movlw	-20
 29598  01BA7C  006F FF8C  F035    	movff	plusw1,btemp+11
 29599                           
 29600                           ;stkvar	_cp @ sp[(-17)+11]
 29601  01BA82  0EFB               	movlw	-5
 29602  01BA84  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29603  01BA8A  0EFA               	movlw	-6
 29604  01BA8C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29605                           
 29606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 29607                           ;stkvar	_cp @ sp[(-17)+11]
 29608  01BA92  0EFA               	movlw	-6
 29609  01BA94  006F FF8C  F02A    	movff	plusw1,btemp
 29610  01BA9A  0EFB               	movlw	-5
 29611  01BA9C  50E3               	movf	plusw1,w,c
 29612  01BA9E  102A               	iorwf	btemp^0,w,c
 29613  01BAA0  A4D8               	btfss	status,2,c
 29614  01BAA2  D00E               	goto	l15940
 29615                           
 29616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 29617                           ;stkvar	_nuls @ sp[(-17)+0]
 29618  01BAA4  0EEF               	movlw	239
 29619  01BAA6  24E1               	addwf	fsr1l,w,c
 29620  01BAA8  6E34               	movwf	(btemp+10)^0,c
 29621  01BAAA  0EFF               	movlw	255
 29622  01BAAC  20E2               	addwfc	fsr1h,w,c
 29623  01BAAE  6E35               	movwf	(btemp+11)^0,c
 29624                           
 29625                           ;stkvar	_cp @ sp[(-17)+11]
 29626  01BAB0  0EFB               	movlw	-5
 29627  01BAB2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29628  01BAB8  0EFA               	movlw	-6
 29629  01BABA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29630  01BAC0                     l15940:
 29631                           
 29632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 29633                           ;stkvar	_cp @ sp[(-17)+11]
 29634  01BAC0  0EFA               	movlw	-6
 29635  01BAC2  006F FF8F FFE6     	movff	plusw1,postinc1
 29636  01BAC8  006F FF8F FFE6     	movff	plusw1,postinc1
 29637  01BACE  ECFD  F005         	call	_strlen	;wreg free
 29638                           
 29639                           ;stkvar	_l @ sp[(-17)+7]
 29640  01BAD2  0EF6               	movlw	-10
 29641  01BAD4  0060  F0AB  FFE3   	movff	btemp,plusw1
 29642  01BADA  0EF7               	movlw	-9
 29643  01BADC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 29644                           
 29645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 29646                           ;stkvar	_p @ sp[(-17)+9]
 29647  01BAE2  0EF8               	movlw	-8
 29648  01BAE4  0060  F133  FFE3   	movff	_prec,plusw1
 29649  01BAEA  0EF9               	movlw	-7
 29650  01BAEC  0060  F137  FFE3   	movff	_prec+1,plusw1
 29651                           
 29652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 29653                           ;stkvar	_p @ sp[(-17)+9]
 29654  01BAF2  0EF9               	movlw	-7
 29655  01BAF4  BEE3               	btfsc	plusw1,7,c
 29656  01BAF6  D023               	goto	l2605
 29657                           
 29658                           ;stkvar	_l @ sp[(-17)+7]
 29659                           ;stkvar	_p @ sp[(-17)+9]
 29660  01BAF8  50E1               	movf	fsr1l,w,c
 29661  01BAFA  0FF8               	addlw	-8
 29662  01BAFC  6ED9               	movwf	fsr2l,c
 29663  01BAFE  50E2               	movf	fsr1h,w,c
 29664  01BB00  6EDA               	movwf	fsr2h,c
 29665  01BB02  0EFF               	movlw	255
 29666  01BB04  22DA               	addwfc	fsr2h,f,c
 29667  01BB06  0EF6               	movlw	-10
 29668  01BB08  50E3               	movf	plusw1,w,c
 29669  01BB0A  5CDE               	subwf	postinc2,w,c
 29670  01BB0C  50DE               	movf	postinc2,w,c
 29671  01BB0E  0A80               	xorlw	128
 29672  01BB10  6E2A               	movwf	btemp^0,c
 29673  01BB12  0EF7               	movlw	-9
 29674  01BB14  50E3               	movf	plusw1,w,c
 29675  01BB16  0A80               	xorlw	128
 29676  01BB18  582A               	subwfb	btemp^0,w,c
 29677  01BB1A  B0D8               	btfsc	status,0,c
 29678  01BB1C  D010               	goto	l2605
 29679                           
 29680                           ;stkvar	_p @ sp[(-17)+9]
 29681                           ;stkvar	_l @ sp[(-17)+7]
 29682  01BB1E  0EF8               	movlw	-8
 29683  01BB20  006F FF8C  F02A    	movff	plusw1,btemp
 29684  01BB26  0EF6               	movlw	-10
 29685  01BB28  0060  F0AB  FFE3   	movff	btemp,plusw1
 29686  01BB2E  0EF9               	movlw	-7
 29687  01BB30  006F FF8C  F02A    	movff	plusw1,btemp
 29688  01BB36  0EF7               	movlw	-9
 29689  01BB38  0060  F0AB  FFE3   	movff	btemp,plusw1
 29690  01BB3E                     l2605:
 29691                           
 29692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 29693                           ;stkvar	_l @ sp[(-17)+7]
 29694                           ;stkvar	_p @ sp[(-17)+9]
 29695  01BB3E  0EF6               	movlw	-10
 29696  01BB40  006F FF8C  F02A    	movff	plusw1,btemp
 29697  01BB46  0EF8               	movlw	-8
 29698  01BB48  0060  F0AB  FFE3   	movff	btemp,plusw1
 29699  01BB4E  0EF7               	movlw	-9
 29700  01BB50  006F FF8C  F02A    	movff	plusw1,btemp
 29701  01BB56  0EF9               	movlw	-7
 29702  01BB58  0060  F0AB  FFE3   	movff	btemp,plusw1
 29703                           
 29704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 29705                           ;stkvar	_w @ sp[(-17)+13]
 29706  01BB5E  0EFC               	movlw	-4
 29707  01BB60  0060  F12B  FFE3   	movff	_width,plusw1
 29708  01BB66  0EFD               	movlw	-3
 29709  01BB68  0060  F12F  FFE3   	movff	_width+1,plusw1
 29710                           
 29711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 29712  01BB6E  A04E               	btfss	_flags^0,0,c
 29713  01BB70  D01F               	goto	l15960
 29714  01BB72  D031               	goto	u15280
 29715  01BB74                     l15956:
 29716                           
 29717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 29718                           ;stkvar	_fp @ sp[(-17)+-2]
 29719  01BB74  0EED               	movlw	-19
 29720  01BB76  006F FF8F FFE6     	movff	plusw1,postinc1
 29721  01BB7C  006F FF8F FFE6     	movff	plusw1,postinc1
 29722  01BB82  0E20               	movlw	32
 29723  01BB84  6EE6               	movwf	postinc1,c
 29724  01BB86  0E00               	movlw	0
 29725  01BB88  6EE6               	movwf	postinc1,c
 29726  01BB8A  ECB0  F0FA         	call	_fputc	;wreg free
 29727                           
 29728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 29729                           ;stkvar	_l @ sp[(-17)+7]
 29730  01BB8E  0EF6               	movlw	-10
 29731  01BB90  50E3               	movf	plusw1,w,c
 29732  01BB92  0F01               	addlw	1
 29733  01BB94  6E2A               	movwf	btemp^0,c
 29734  01BB96  0EF6               	movlw	-10
 29735  01BB98  0060  F0AB  FFE3   	movff	btemp,plusw1
 29736  01BB9E  6A2A               	clrf	btemp^0,c
 29737  01BBA0  0EF7               	movlw	-9
 29738  01BBA2  50E3               	movf	plusw1,w,c
 29739  01BBA4  202A               	addwfc	btemp^0,w,c
 29740  01BBA6  6E2A               	movwf	btemp^0,c
 29741  01BBA8  0EF7               	movlw	-9
 29742  01BBAA  0060  F0AB  FFE3   	movff	btemp,plusw1
 29743  01BBB0                     l15960:
 29744                           
 29745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 29746                           ;stkvar	_w @ sp[(-17)+13]
 29747                           ;stkvar	_l @ sp[(-17)+7]
 29748  01BBB0  50E1               	movf	fsr1l,w,c
 29749  01BBB2  0FF6               	addlw	-10
 29750  01BBB4  6ED9               	movwf	fsr2l,c
 29751  01BBB6  50E2               	movf	fsr1h,w,c
 29752  01BBB8  6EDA               	movwf	fsr2h,c
 29753  01BBBA  0EFF               	movlw	255
 29754  01BBBC  22DA               	addwfc	fsr2h,f,c
 29755  01BBBE  0EFC               	movlw	-4
 29756  01BBC0  50E3               	movf	plusw1,w,c
 29757  01BBC2  5CDE               	subwf	postinc2,w,c
 29758  01BBC4  50DE               	movf	postinc2,w,c
 29759  01BBC6  0A80               	xorlw	128
 29760  01BBC8  6E2A               	movwf	btemp^0,c
 29761  01BBCA  0EFD               	movlw	-3
 29762  01BBCC  50E3               	movf	plusw1,w,c
 29763  01BBCE  0A80               	xorlw	128
 29764  01BBD0  582A               	subwfb	btemp^0,w,c
 29765  01BBD2  A0D8               	btfss	status,0,c
 29766  01BBD4  D7CF               	goto	l15956
 29767  01BBD6                     u15280:
 29768                           
 29769                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 29770                           ;stkvar	_i @ sp[(-17)+15]
 29771  01BBD6  0EFE               	movlw	-2
 29772  01BBD8  6AE3               	clrf	plusw1,c
 29773  01BBDA  0EFF               	movlw	-1
 29774  01BBDC  6AE3               	clrf	plusw1,c
 29775                           
 29776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 29777  01BBDE  D045               	goto	l15970
 29778  01BBE0                     l15964:
 29779                           
 29780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 29781                           ;stkvar	_fp @ sp[(-17)+-2]
 29782  01BBE0  0EED               	movlw	-19
 29783  01BBE2  006F FF8F FFE6     	movff	plusw1,postinc1
 29784  01BBE8  006F FF8F FFE6     	movff	plusw1,postinc1
 29785                           
 29786                           ;stkvar	_cp @ sp[(-19)+11]
 29787  01BBEE  0EF8               	movlw	-8
 29788  01BBF0  006F FF8F FFF6     	movff	plusw1,tblptrl
 29789  01BBF6  0EF9               	movlw	-7
 29790  01BBF8  006F FF8F FFF7     	movff	plusw1,tblptrh
 29791  01BBFE  0E00               	movlw	low (__mediumconst shr (0+16))
 29792  01BC00  6EF8               	movwf	tblptru,c
 29793  01BC02  0E1F               	movlw	(high __ramtop+-1)
 29794  01BC04  64F7               	cpfsgt	tblptrh,c
 29795  01BC06  D003               	bra	u15297
 29796  01BC08  0008               	tblrd		*
 29797  01BC0A  50F5               	movf	tablat,w,c
 29798  01BC0C  D007               	bra	u15290
 29799  01BC0E                     u15297:
 29800  01BC0E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29801  01BC14  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29802  01BC1A  50EF               	movf	indf0,w,c
 29803  01BC1C                     u15290:
 29804  01BC1C  6EE6               	movwf	postinc1,c
 29805  01BC1E  0E00               	movlw	0
 29806  01BC20  6EE6               	movwf	postinc1,c
 29807  01BC22  ECB0  F0FA         	call	_fputc	;wreg free
 29808                           
 29809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 29810                           ;stkvar	_cp @ sp[(-17)+11]
 29811  01BC26  0EFA               	movlw	-6
 29812  01BC28  50E3               	movf	plusw1,w,c
 29813  01BC2A  0F01               	addlw	1
 29814  01BC2C  6E2A               	movwf	btemp^0,c
 29815  01BC2E  0EFA               	movlw	-6
 29816  01BC30  0060  F0AB  FFE3   	movff	btemp,plusw1
 29817  01BC36  6A2A               	clrf	btemp^0,c
 29818  01BC38  0EFB               	movlw	-5
 29819  01BC3A  50E3               	movf	plusw1,w,c
 29820  01BC3C  202A               	addwfc	btemp^0,w,c
 29821  01BC3E  6E2A               	movwf	btemp^0,c
 29822  01BC40  0EFB               	movlw	-5
 29823  01BC42  0060  F0AB  FFE3   	movff	btemp,plusw1
 29824                           
 29825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 29826                           ;stkvar	_i @ sp[(-17)+15]
 29827  01BC48  0EFE               	movlw	-2
 29828  01BC4A  50E3               	movf	plusw1,w,c
 29829  01BC4C  0F01               	addlw	1
 29830  01BC4E  6E2A               	movwf	btemp^0,c
 29831  01BC50  0EFE               	movlw	-2
 29832  01BC52  0060  F0AB  FFE3   	movff	btemp,plusw1
 29833  01BC58  6A2A               	clrf	btemp^0,c
 29834  01BC5A  0EFF               	movlw	-1
 29835  01BC5C  50E3               	movf	plusw1,w,c
 29836  01BC5E  202A               	addwfc	btemp^0,w,c
 29837  01BC60  6E2A               	movwf	btemp^0,c
 29838  01BC62  0EFF               	movlw	-1
 29839  01BC64  0060  F0AB  FFE3   	movff	btemp,plusw1
 29840  01BC6A                     l15970:
 29841                           
 29842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 29843                           ;stkvar	_p @ sp[(-17)+9]
 29844                           ;stkvar	_i @ sp[(-17)+15]
 29845  01BC6A  50E1               	movf	fsr1l,w,c
 29846  01BC6C  0FFE               	addlw	-2
 29847  01BC6E  6ED9               	movwf	fsr2l,c
 29848  01BC70  50E2               	movf	fsr1h,w,c
 29849  01BC72  6EDA               	movwf	fsr2h,c
 29850  01BC74  0EFF               	movlw	255
 29851  01BC76  22DA               	addwfc	fsr2h,f,c
 29852  01BC78  0EF8               	movlw	-8
 29853  01BC7A  50E3               	movf	plusw1,w,c
 29854  01BC7C  5CDE               	subwf	postinc2,w,c
 29855  01BC7E  50DE               	movf	postinc2,w,c
 29856  01BC80  0A80               	xorlw	128
 29857  01BC82  6E2A               	movwf	btemp^0,c
 29858  01BC84  0EF9               	movlw	-7
 29859  01BC86  50E3               	movf	plusw1,w,c
 29860  01BC88  0A80               	xorlw	128
 29861  01BC8A  582A               	subwfb	btemp^0,w,c
 29862  01BC8C  A0D8               	btfss	status,0,c
 29863  01BC8E  D7A8               	goto	l15964
 29864                           
 29865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 29866  01BC90  B04E               	btfsc	_flags^0,0,c
 29867  01BC92  D01F               	goto	l15978
 29868  01BC94  D031               	goto	u15320
 29869  01BC96                     l15974:
 29870                           
 29871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 29872                           ;stkvar	_fp @ sp[(-17)+-2]
 29873  01BC96  0EED               	movlw	-19
 29874  01BC98  006F FF8F FFE6     	movff	plusw1,postinc1
 29875  01BC9E  006F FF8F FFE6     	movff	plusw1,postinc1
 29876  01BCA4  0E20               	movlw	32
 29877  01BCA6  6EE6               	movwf	postinc1,c
 29878  01BCA8  0E00               	movlw	0
 29879  01BCAA  6EE6               	movwf	postinc1,c
 29880  01BCAC  ECB0  F0FA         	call	_fputc	;wreg free
 29881                           
 29882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 29883                           ;stkvar	_l @ sp[(-17)+7]
 29884  01BCB0  0EF6               	movlw	-10
 29885  01BCB2  50E3               	movf	plusw1,w,c
 29886  01BCB4  0F01               	addlw	1
 29887  01BCB6  6E2A               	movwf	btemp^0,c
 29888  01BCB8  0EF6               	movlw	-10
 29889  01BCBA  0060  F0AB  FFE3   	movff	btemp,plusw1
 29890  01BCC0  6A2A               	clrf	btemp^0,c
 29891  01BCC2  0EF7               	movlw	-9
 29892  01BCC4  50E3               	movf	plusw1,w,c
 29893  01BCC6  202A               	addwfc	btemp^0,w,c
 29894  01BCC8  6E2A               	movwf	btemp^0,c
 29895  01BCCA  0EF7               	movlw	-9
 29896  01BCCC  0060  F0AB  FFE3   	movff	btemp,plusw1
 29897  01BCD2                     l15978:
 29898                           
 29899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 29900                           ;stkvar	_w @ sp[(-17)+13]
 29901                           ;stkvar	_l @ sp[(-17)+7]
 29902  01BCD2  50E1               	movf	fsr1l,w,c
 29903  01BCD4  0FF6               	addlw	-10
 29904  01BCD6  6ED9               	movwf	fsr2l,c
 29905  01BCD8  50E2               	movf	fsr1h,w,c
 29906  01BCDA  6EDA               	movwf	fsr2h,c
 29907  01BCDC  0EFF               	movlw	255
 29908  01BCDE  22DA               	addwfc	fsr2h,f,c
 29909  01BCE0  0EFC               	movlw	-4
 29910  01BCE2  50E3               	movf	plusw1,w,c
 29911  01BCE4  5CDE               	subwf	postinc2,w,c
 29912  01BCE6  50DE               	movf	postinc2,w,c
 29913  01BCE8  0A80               	xorlw	128
 29914  01BCEA  6E2A               	movwf	btemp^0,c
 29915  01BCEC  0EFD               	movlw	-3
 29916  01BCEE  50E3               	movf	plusw1,w,c
 29917  01BCF0  0A80               	xorlw	128
 29918  01BCF2  582A               	subwfb	btemp^0,w,c
 29919  01BCF4  A0D8               	btfss	status,0,c
 29920  01BCF6  D7CF               	goto	l15974
 29921  01BCF8                     u15320:
 29922                           
 29923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 29924                           ;stkvar	_l @ sp[(-17)+7]
 29925  01BCF8  0EF6               	movlw	-10
 29926  01BCFA  006F FF8C  F02A    	movff	plusw1,btemp
 29927  01BD00  0EF7               	movlw	-9
 29928  01BD02  006F FF8C  F02B    	movff	plusw1,btemp+1
 29929                           
 29930                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 29931  01BD08  0EEB               	movlw	235
 29932  01BD0A  26E1               	addwf	fsr1l,f,c
 29933  01BD0C  0EFF               	movlw	255
 29934  01BD0E  22E2               	addwfc	fsr1h,f,c
 29935  01BD10  0012               	return		;funcret
 29936  01BD12                     __end_of_stoa:
 29937                           	opt callstack 0
 29938                           
 29939 ;; *************** function _efgtoa *****************
 29940 ;; Defined at:
 29941 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 29942 ;; Parameters:    Size  Location     Type
 29943 ;;  fp              2  [STACK] PTR struct _IO_FILE
 29944 ;;		 -> f(6), NULL(0), 
 29945 ;;  f               4  [STACK] PTR struct _IO_FILE
 29946 ;;  c               1  [STACK] unsigned char 
 29947 ;; Auto vars:     Size  Location     Type
 29948 ;;  u               4  [STACK] unsigned char 
 29949 ;;  g               4  [STACK] unsigned char 
 29950 ;;  l               4  [STACK] unsigned char 
 29951 ;;  h               4  [STACK] unsigned char 
 29952 ;;  ou              4  [STACK] unsigned char 
 29953 ;;  n               2  [STACK] int 
 29954 ;;  e               2  [STACK] int 
 29955 ;;  i               2  [STACK] int 
 29956 ;;  w               2  [STACK] int 
 29957 ;;  p               2  [STACK] int 
 29958 ;;  sign            2  [STACK] int 
 29959 ;;  d               2  [STACK] int 
 29960 ;;  ne              2  [STACK] int 
 29961 ;;  m               2  [STACK] int 
 29962 ;;  pp              2  [STACK] int 
 29963 ;;  t               2  [STACK] int 
 29964 ;;  mode            1  [STACK] unsigned char 
 29965 ;;  nmode           1  [STACK] unsigned char 
 29966 ;; Return value:  Size  Location     Type
 29967 ;;                  2  [STACK] int 
 29968 ;; Registers used:
 29969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 29970 ;; Tracked objects:
 29971 ;;		On entry : 0/0
 29972 ;;		On exit  : 0/0
 29973 ;;		Unchanged: 0/0
 29974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29979 ;;Total ram usage:        0 bytes
 29980 ;; Hardware stack levels used:    1
 29981 ;; Hardware stack levels required when called:   20
 29982 ;; This function calls:
 29983 ;;		___awdiv
 29984 ;;		___awmod
 29985 ;;		___fladd
 29986 ;;		___fldiv
 29987 ;;		___fleq
 29988 ;;		___flge
 29989 ;;		___flmul
 29990 ;;		___flneg
 29991 ;;		___flsub
 29992 ;;		___fltol
 29993 ;;		___fpclassifyf
 29994 ;;		_floorf
 29995 ;;		_isupper
 29996 ;;		_pad
 29997 ;;		_strcpy
 29998 ;;		_tolower
 29999 ;; This function is called by:
 30000 ;;		_vfpfcnvrt
 30001 ;; This function uses a reentrant model
 30002 ;;
 30003                           
 30004                           	psect	text103
 30005  0116BA                     __ptext103:
 30006                           	opt callstack 0
 30007  0116BA                     _efgtoa:
 30008                           	opt callstack 0
 30009                           
 30010                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 30011  0116BA  0E38               	movlw	56
 30012  0116BC  26E1               	addwf	fsr1l,f,c
 30013  0116BE  0E00               	movlw	0
 30014  0116C0  22E2               	addwfc	fsr1h,f,c
 30015                           
 30016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 30017                           ;stkvar	_sign @ sp[(-56)+42]
 30018                           
 30019                           ;incstack = 0
 30020 ;; hardware stack exceeded
 30021  0116C2  0EF2               	movlw	-14
 30022  0116C4  6AE3               	clrf	plusw1,c
 30023  0116C6  0EF3               	movlw	-13
 30024  0116C8  6AE3               	clrf	plusw1,c
 30025                           
 30026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 30027                           ;stkvar	_f @ sp[(-56)+-6]
 30028  0116CA  0EC2               	movlw	-62
 30029  0116CC  006F FF8C  F032    	movff	plusw1,btemp+8
 30030  0116D2  0EC3               	movlw	-61
 30031  0116D4  006F FF8C  F033    	movff	plusw1,btemp+9
 30032  0116DA  0EC4               	movlw	-60
 30033  0116DC  006F FF8C  F034    	movff	plusw1,btemp+10
 30034  0116E2  0EC5               	movlw	-59
 30035  0116E4  006F FF8C  F035    	movff	plusw1,btemp+11
 30036                           
 30037                           ;stkvar	_g @ sp[(-56)+16]
 30038  0116EA  0ED8               	movlw	-40
 30039  0116EC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30040  0116F2  0ED9               	movlw	-39
 30041  0116F4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30042  0116FA  0EDA               	movlw	-38
 30043  0116FC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30044  011702  0EDB               	movlw	-37
 30045  011704  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30046                           
 30047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 30048                           ;stkvar	_g @ sp[(-56)+16]
 30049  01170A  0EDB               	movlw	-37
 30050  01170C  AEE3               	btfss	plusw1,7,c
 30051  01170E  D02B               	goto	l15638
 30052                           
 30053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 30054  011710  0E01               	movlw	1
 30055  011712  6E34               	movwf	(btemp+10)^0,c
 30056  011714  0E00               	movlw	0
 30057  011716  6E35               	movwf	(btemp+11)^0,c
 30058                           
 30059                           ;stkvar	_sign @ sp[(-56)+42]
 30060  011718  0EF2               	movlw	-14
 30061  01171A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30062  011720  0EF3               	movlw	-13
 30063  011722  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30064                           
 30065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 30066                           ;stkvar	_g @ sp[(-56)+16]
 30067  011728  0ED8               	movlw	-40
 30068  01172A  006F FF8F FFE6     	movff	plusw1,postinc1
 30069  011730  006F FF8F FFE6     	movff	plusw1,postinc1
 30070  011736  006F FF8F FFE6     	movff	plusw1,postinc1
 30071  01173C  006F FF8F FFE6     	movff	plusw1,postinc1
 30072  011742  EC3E  F00E         	call	___flneg	;wreg free
 30073                           
 30074                           ;stkvar	_g @ sp[(-56)+16]
 30075  011746  0ED8               	movlw	-40
 30076  011748  0060  F0AB  FFE3   	movff	btemp,plusw1
 30077  01174E  0ED9               	movlw	-39
 30078  011750  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30079  011756  0EDA               	movlw	-38
 30080  011758  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30081  01175E  0EDB               	movlw	-37
 30082  011760  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30083  011766                     l15638:
 30084                           
 30085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 30086                           ;stkvar	_n @ sp[(-56)+32]
 30087  011766  0EE8               	movlw	-24
 30088  011768  6AE3               	clrf	plusw1,c
 30089  01176A  0EE9               	movlw	-23
 30090  01176C  6AE3               	clrf	plusw1,c
 30091                           
 30092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 30093                           ;stkvar	_w @ sp[(-56)+38]
 30094  01176E  0EEE               	movlw	-18
 30095  011770  0060  F12B  FFE3   	movff	_width,plusw1
 30096  011776  0EEF               	movlw	-17
 30097  011778  0060  F12F  FFE3   	movff	_width+1,plusw1
 30098                           
 30099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 30100                           ;stkvar	_sign @ sp[(-56)+42]
 30101  01177E  0EF2               	movlw	-14
 30102  011780  006F FF8C  F02A    	movff	plusw1,btemp
 30103  011786  0EF3               	movlw	-13
 30104  011788  50E3               	movf	plusw1,w,c
 30105  01178A  102A               	iorwf	btemp^0,w,c
 30106  01178C  A4D8               	btfss	status,2,c
 30107  01178E  D002               	goto	u14730
 30108  011790  A44E               	btfss	_flags^0,2,c
 30109  011792  D036               	goto	l15658
 30110  011794                     u14730:
 30111                           
 30112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 30113                           ;stkvar	_sign @ sp[(-56)+42]
 30114  011794  0EF2               	movlw	-14
 30115  011796  006F FF8C  F02A    	movff	plusw1,btemp
 30116  01179C  0EF3               	movlw	-13
 30117  01179E  50E3               	movf	plusw1,w,c
 30118  0117A0  102A               	iorwf	btemp^0,w,c
 30119  0117A2  A4D8               	btfss	status,2,c
 30120  0117A4  D002               	goto	l15650
 30121  0117A6  0E2B               	movlw	43
 30122  0117A8  D001               	goto	L31
 30123  0117AA                     l15650:
 30124  0117AA  0E2D               	movlw	45
 30125  0117AC                     L31:
 30126  0117AC  6E34               	movwf	(btemp+10)^0,c
 30127  0117AE  0E00               	movlw	0
 30128  0117B0  6E35               	movwf	(btemp+11)^0,c
 30129                           
 30130                           ;stkvar	_efgtoa$6613 @ sp[(-56)+10]
 30131  0117B2  0ED2               	movlw	-46
 30132  0117B4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30133  0117BA  0ED3               	movlw	-45
 30134  0117BC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30135                           
 30136                           ;stkvar	_efgtoa$6613 @ sp[(-56)+10]
 30137  0117C2  0ED2               	movlw	-46
 30138  0117C4  006F FF8C  F354    	movff	plusw1,_dbuf
 30139                           
 30140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 30141                           ;stkvar	_n @ sp[(-56)+32]
 30142  0117CA  0EE8               	movlw	-24
 30143  0117CC  50E3               	movf	plusw1,w,c
 30144  0117CE  0F01               	addlw	1
 30145  0117D0  6E2A               	movwf	btemp^0,c
 30146  0117D2  0EE8               	movlw	-24
 30147  0117D4  0060  F0AB  FFE3   	movff	btemp,plusw1
 30148  0117DA  6A2A               	clrf	btemp^0,c
 30149  0117DC  0EE9               	movlw	-23
 30150  0117DE  50E3               	movf	plusw1,w,c
 30151  0117E0  202A               	addwfc	btemp^0,w,c
 30152  0117E2  6E2A               	movwf	btemp^0,c
 30153  0117E4  0EE9               	movlw	-23
 30154  0117E6  0060  F0AB  FFE3   	movff	btemp,plusw1
 30155                           
 30156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 30157                           ;stkvar	_w @ sp[(-56)+38]
 30158  0117EC  50E1               	movf	fsr1l,w,c
 30159  0117EE  0FEE               	addlw	-18
 30160  0117F0  6ED9               	movwf	fsr2l,c
 30161  0117F2  50E2               	movf	fsr1h,w,c
 30162  0117F4  6EDA               	movwf	fsr2h,c
 30163  0117F6  0EFF               	movlw	255
 30164  0117F8  22DA               	addwfc	fsr2h,f,c
 30165  0117FA  06DE               	decf	postinc2,f,c
 30166  0117FC  0E00               	movlw	0
 30167  0117FE  5ADD               	subwfb	postdec2,f,c
 30168  011800                     l15658:
 30169                           
 30170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 30171                           ;stkvar	_g @ sp[(-56)+16]
 30172  011800  0ED8               	movlw	-40
 30173  011802  006F FF8F FFE6     	movff	plusw1,postinc1
 30174  011808  006F FF8F FFE6     	movff	plusw1,postinc1
 30175  01180E  006F FF8F FFE6     	movff	plusw1,postinc1
 30176  011814  006F FF8F FFE6     	movff	plusw1,postinc1
 30177  01181A  ECBD  F0EE         	call	___fpclassifyf	;wreg free
 30178  01181E  042A               	decf	btemp^0,w,c
 30179  011820  102B               	iorwf	(btemp+1)^0,w,c
 30180  011822  A4D8               	btfss	status,2,c
 30181  011824  D076               	goto	l15676
 30182  011826  0EBF               	movlw	191
 30183  011828  6E34               	movwf	(btemp+10)^0,c
 30184  01182A  0EFF               	movlw	255
 30185  01182C  6E35               	movwf	(btemp+11)^0,c
 30186                           
 30187                           ;stkvar	_c @ sp[(-56)+-7]
 30188  01182E  0EC1               	movlw	-63
 30189  011830  50E3               	movf	plusw1,w,c
 30190  011832  6E32               	movwf	(btemp+8)^0,c
 30191  011834  6A33               	clrf	(btemp+9)^0,c
 30192  011836  5034               	movf	(btemp+10)^0,w,c
 30193  011838  2632               	addwf	(btemp+8)^0,f,c
 30194  01183A  5035               	movf	(btemp+11)^0,w,c
 30195  01183C  2233               	addwfc	(btemp+9)^0,f,c
 30196  01183E  5033               	movf	(btemp+9)^0,w,c
 30197  011840  E106               	bnz	u14760
 30198  011842  0E1A               	movlw	26
 30199  011844  5C32               	subwf	(btemp+8)^0,w,c
 30200  011846  B0D8               	btfsc	status,0,c
 30201  011848  D002               	goto	u14760
 30202  01184A  0E01               	movlw	1
 30203  01184C  D001               	goto	u14770
 30204  01184E                     u14760:
 30205  01184E  0E00               	movlw	0
 30206  011850                     u14770:
 30207  011850  6E34               	movwf	(btemp+10)^0,c
 30208  011852  6A35               	clrf	(btemp+11)^0,c
 30209                           
 30210                           ;stkvar	_efgtoa$6614 @ sp[(-56)+8]
 30211  011854  0ED0               	movlw	-48
 30212  011856  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30213  01185C  0ED1               	movlw	-47
 30214  01185E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30215                           
 30216                           ;stkvar	_efgtoa$6614 @ sp[(-56)+8]
 30217  011864  0ED0               	movlw	-48
 30218  011866  006F FF8C  F02A    	movff	plusw1,btemp
 30219  01186C  0ED1               	movlw	-47
 30220  01186E  50E3               	movf	plusw1,w,c
 30221  011870  102A               	iorwf	btemp^0,w,c
 30222  011872  B4D8               	btfsc	status,2,c
 30223  011874  D017               	goto	l15668
 30224                           
 30225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 30226  011876  0EDA               	movlw	low STR_96
 30227  011878  6EE6               	movwf	postinc1,c
 30228  01187A  0EFF               	movlw	high STR_96
 30229  01187C  6EE6               	movwf	postinc1,c
 30230                           
 30231                           ;stkvar	_n @ sp[(-58)+32]
 30232  01187E  0E54               	movlw	low _dbuf
 30233  011880  6E34               	movwf	(btemp+10)^0,c
 30234  011882  0E03               	movlw	high _dbuf
 30235  011884  6E35               	movwf	(btemp+11)^0,c
 30236  011886  0EE6               	movlw	-26
 30237  011888  50E3               	movf	plusw1,w,c
 30238  01188A  2634               	addwf	(btemp+10)^0,f,c
 30239  01188C  0EE7               	movlw	-25
 30240  01188E  50E3               	movf	plusw1,w,c
 30241  011890  2235               	addwfc	(btemp+11)^0,f,c
 30242  011892  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30243  011898  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30244  01189E  ECB1  F001         	call	_strcpy	;wreg free
 30245                           
 30246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 30247  0118A2  D016               	goto	l15670
 30248  0118A4                     l15668:
 30249                           
 30250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 30251  0118A4  0EE2               	movlw	low STR_97
 30252  0118A6  6EE6               	movwf	postinc1,c
 30253  0118A8  0EFF               	movlw	high STR_97
 30254  0118AA  6EE6               	movwf	postinc1,c
 30255                           
 30256                           ;stkvar	_n @ sp[(-58)+32]
 30257  0118AC  0E54               	movlw	low _dbuf
 30258  0118AE  6E34               	movwf	(btemp+10)^0,c
 30259  0118B0  0E03               	movlw	high _dbuf
 30260  0118B2  6E35               	movwf	(btemp+11)^0,c
 30261  0118B4  0EE6               	movlw	-26
 30262  0118B6  50E3               	movf	plusw1,w,c
 30263  0118B8  2634               	addwf	(btemp+10)^0,f,c
 30264  0118BA  0EE7               	movlw	-25
 30265  0118BC  50E3               	movf	plusw1,w,c
 30266  0118BE  2235               	addwfc	(btemp+11)^0,f,c
 30267  0118C0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30268  0118C6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30269  0118CC  ECB1  F001         	call	_strcpy	;wreg free
 30270  0118D0                     l15670:
 30271                           
 30272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 30273                           ;stkvar	_w @ sp[(-56)+38]
 30274  0118D0  50E1               	movf	fsr1l,w,c
 30275  0118D2  0FEE               	addlw	-18
 30276  0118D4  6ED9               	movwf	fsr2l,c
 30277  0118D6  50E2               	movf	fsr1h,w,c
 30278  0118D8  6EDA               	movwf	fsr2h,c
 30279  0118DA  0EFF               	movlw	255
 30280  0118DC  22DA               	addwfc	fsr2h,f,c
 30281  0118DE  0EFD               	movlw	253
 30282  0118E0  26DE               	addwf	postinc2,f,c
 30283  0118E2  0EFF               	movlw	255
 30284  0118E4  22DD               	addwfc	postdec2,f,c
 30285  0118E6                     l15672:
 30286                           
 30287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 30288                           ;stkvar	_w @ sp[(-56)+38]
 30289  0118E6  0EEE               	movlw	-18
 30290  0118E8  006F FF8F FFE6     	movff	plusw1,postinc1
 30291  0118EE  006F FF8F FFE6     	movff	plusw1,postinc1
 30292  0118F4  0E54               	movlw	low _dbuf
 30293  0118F6  6EE6               	movwf	postinc1,c
 30294  0118F8  0E03               	movlw	high _dbuf
 30295  0118FA  6EE6               	movwf	postinc1,c
 30296                           
 30297                           ;stkvar	_fp @ sp[(-60)+-2]
 30298  0118FC  0EC2               	movlw	-62
 30299  0118FE  006F FF8F FFE6     	movff	plusw1,postinc1
 30300  011904  006F FF8F FFE6     	movff	plusw1,postinc1
 30301  01190A  ECE7  F0FC         	call	_pad	;wreg free
 30302  01190E  EF7A  F094         	goto	l2523
 30303  011912                     l15676:
 30304                           
 30305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 30306                           ;stkvar	_g @ sp[(-56)+16]
 30307  011912  0ED8               	movlw	-40
 30308  011914  006F FF8F FFE6     	movff	plusw1,postinc1
 30309  01191A  006F FF8F FFE6     	movff	plusw1,postinc1
 30310  011920  006F FF8F FFE6     	movff	plusw1,postinc1
 30311  011926  006F FF8F FFE6     	movff	plusw1,postinc1
 30312  01192C  ECBD  F0EE         	call	___fpclassifyf	;wreg free
 30313  011930  502A               	movf	btemp^0,w,c
 30314  011932  102B               	iorwf	(btemp+1)^0,w,c
 30315  011934  A4D8               	btfss	status,2,c
 30316  011936  D056               	goto	l15694
 30317  011938  0EBF               	movlw	191
 30318  01193A  6E34               	movwf	(btemp+10)^0,c
 30319  01193C  0EFF               	movlw	255
 30320  01193E  6E35               	movwf	(btemp+11)^0,c
 30321                           
 30322                           ;stkvar	_c @ sp[(-56)+-7]
 30323  011940  0EC1               	movlw	-63
 30324  011942  50E3               	movf	plusw1,w,c
 30325  011944  6E32               	movwf	(btemp+8)^0,c
 30326  011946  6A33               	clrf	(btemp+9)^0,c
 30327  011948  5034               	movf	(btemp+10)^0,w,c
 30328  01194A  2632               	addwf	(btemp+8)^0,f,c
 30329  01194C  5035               	movf	(btemp+11)^0,w,c
 30330  01194E  2233               	addwfc	(btemp+9)^0,f,c
 30331  011950  5033               	movf	(btemp+9)^0,w,c
 30332  011952  E106               	bnz	u14800
 30333  011954  0E1A               	movlw	26
 30334  011956  5C32               	subwf	(btemp+8)^0,w,c
 30335  011958  B0D8               	btfsc	status,0,c
 30336  01195A  D002               	goto	u14800
 30337  01195C  0E01               	movlw	1
 30338  01195E  D001               	goto	u14810
 30339  011960                     u14800:
 30340  011960  0E00               	movlw	0
 30341  011962                     u14810:
 30342  011962  6E34               	movwf	(btemp+10)^0,c
 30343  011964  6A35               	clrf	(btemp+11)^0,c
 30344                           
 30345                           ;stkvar	_efgtoa$6618 @ sp[(-56)+6]
 30346  011966  0ECE               	movlw	-50
 30347  011968  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30348  01196E  0ECF               	movlw	-49
 30349  011970  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30350                           
 30351                           ;stkvar	_efgtoa$6618 @ sp[(-56)+6]
 30352  011976  0ECE               	movlw	-50
 30353  011978  006F FF8C  F02A    	movff	plusw1,btemp
 30354  01197E  0ECF               	movlw	-49
 30355  011980  50E3               	movf	plusw1,w,c
 30356  011982  102A               	iorwf	btemp^0,w,c
 30357  011984  B4D8               	btfsc	status,2,c
 30358  011986  D017               	goto	l15686
 30359                           
 30360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 30361  011988  0EDE               	movlw	low STR_100
 30362  01198A  6EE6               	movwf	postinc1,c
 30363  01198C  0EFF               	movlw	high STR_100
 30364  01198E  6EE6               	movwf	postinc1,c
 30365                           
 30366                           ;stkvar	_n @ sp[(-58)+32]
 30367  011990  0E54               	movlw	low _dbuf
 30368  011992  6E34               	movwf	(btemp+10)^0,c
 30369  011994  0E03               	movlw	high _dbuf
 30370  011996  6E35               	movwf	(btemp+11)^0,c
 30371  011998  0EE6               	movlw	-26
 30372  01199A  50E3               	movf	plusw1,w,c
 30373  01199C  2634               	addwf	(btemp+10)^0,f,c
 30374  01199E  0EE7               	movlw	-25
 30375  0119A0  50E3               	movf	plusw1,w,c
 30376  0119A2  2235               	addwfc	(btemp+11)^0,f,c
 30377  0119A4  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30378  0119AA  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30379  0119B0  ECB1  F001         	call	_strcpy	;wreg free
 30380                           
 30381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 30382  0119B4  D78D               	goto	l15670
 30383  0119B6                     l15686:
 30384                           
 30385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 30386  0119B6  0EE6               	movlw	low STR_101
 30387  0119B8  6EE6               	movwf	postinc1,c
 30388  0119BA  0EFF               	movlw	high STR_101
 30389  0119BC  6EE6               	movwf	postinc1,c
 30390                           
 30391                           ;stkvar	_n @ sp[(-58)+32]
 30392  0119BE  0E54               	movlw	low _dbuf
 30393  0119C0  6E34               	movwf	(btemp+10)^0,c
 30394  0119C2  0E03               	movlw	high _dbuf
 30395  0119C4  6E35               	movwf	(btemp+11)^0,c
 30396  0119C6  0EE6               	movlw	-26
 30397  0119C8  50E3               	movf	plusw1,w,c
 30398  0119CA  2634               	addwf	(btemp+10)^0,f,c
 30399  0119CC  0EE7               	movlw	-25
 30400  0119CE  50E3               	movf	plusw1,w,c
 30401  0119D0  2235               	addwfc	(btemp+11)^0,f,c
 30402  0119D2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30403  0119D8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30404  0119DE  ECB1  F001         	call	_strcpy	;wreg free
 30405  0119E2  D776               	goto	l15670
 30406  0119E4                     l15694:
 30407                           
 30408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 30409  0119E4  0E00               	movlw	0
 30410  0119E6  6E32               	movwf	(btemp+8)^0,c
 30411  0119E8  0E00               	movlw	0
 30412  0119EA  6E33               	movwf	(btemp+9)^0,c
 30413  0119EC  0E80               	movlw	128
 30414  0119EE  6E34               	movwf	(btemp+10)^0,c
 30415  0119F0  0E3F               	movlw	63
 30416  0119F2  6E35               	movwf	(btemp+11)^0,c
 30417                           
 30418                           ;stkvar	_u @ sp[(-56)+12]
 30419  0119F4  0ED4               	movlw	-44
 30420  0119F6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30421  0119FC  0ED5               	movlw	-43
 30422  0119FE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30423  011A04  0ED6               	movlw	-42
 30424  011A06  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30425  011A0C  0ED7               	movlw	-41
 30426  011A0E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30427                           
 30428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 30429                           ;stkvar	_e @ sp[(-56)+34]
 30430  011A14  0EEA               	movlw	-22
 30431  011A16  6AE3               	clrf	plusw1,c
 30432  011A18  0EEB               	movlw	-21
 30433  011A1A  6AE3               	clrf	plusw1,c
 30434                           
 30435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 30436  011A1C  0E00               	movlw	0
 30437  011A1E  6EE6               	movwf	postinc1,c
 30438  011A20  0E00               	movlw	0
 30439  011A22  6EE6               	movwf	postinc1,c
 30440  011A24  0E00               	movlw	0
 30441  011A26  6EE6               	movwf	postinc1,c
 30442  011A28  0E00               	movlw	0
 30443  011A2A  6EE6               	movwf	postinc1,c
 30444                           
 30445                           ;stkvar	_g @ sp[(-60)+16]
 30446  011A2C  0ED4               	movlw	-44
 30447  011A2E  006F FF8F FFE6     	movff	plusw1,postinc1
 30448  011A34  006F FF8F FFE6     	movff	plusw1,postinc1
 30449  011A3A  006F FF8F FFE6     	movff	plusw1,postinc1
 30450  011A40  006F FF8F FFE6     	movff	plusw1,postinc1
 30451  011A46  EC82  F002         	call	___fleq	;wreg free
 30452  011A4A  A02A               	btfss	btemp& (0+255),0,c
 30453  011A4C  D039               	goto	l15706
 30454  011A4E  D0BC               	goto	u14850
 30455  011A50                     l15702:
 30456                           
 30457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 30458  011A50  0E00               	movlw	0
 30459  011A52  6EE6               	movwf	postinc1,c
 30460  011A54  0E00               	movlw	0
 30461  011A56  6EE6               	movwf	postinc1,c
 30462  011A58  0E20               	movlw	32
 30463  011A5A  6EE6               	movwf	postinc1,c
 30464  011A5C  0E41               	movlw	65
 30465  011A5E  6EE6               	movwf	postinc1,c
 30466                           
 30467                           ;stkvar	_u @ sp[(-60)+12]
 30468  011A60  0ED0               	movlw	-48
 30469  011A62  006F FF8F FFE6     	movff	plusw1,postinc1
 30470  011A68  006F FF8F FFE6     	movff	plusw1,postinc1
 30471  011A6E  006F FF8F FFE6     	movff	plusw1,postinc1
 30472  011A74  006F FF8F FFE6     	movff	plusw1,postinc1
 30473  011A7A  ECFF  F0B2         	call	___flmul	;wreg free
 30474                           
 30475                           ;stkvar	_u @ sp[(-56)+12]
 30476  011A7E  0ED4               	movlw	-44
 30477  011A80  0060  F0AB  FFE3   	movff	btemp,plusw1
 30478  011A86  0ED5               	movlw	-43
 30479  011A88  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30480  011A8E  0ED6               	movlw	-42
 30481  011A90  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30482  011A96  0ED7               	movlw	-41
 30483  011A98  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30484                           
 30485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 30486                           ;stkvar	_e @ sp[(-56)+34]
 30487  011A9E  0EEA               	movlw	-22
 30488  011AA0  50E3               	movf	plusw1,w,c
 30489  011AA2  0F01               	addlw	1
 30490  011AA4  6E2A               	movwf	btemp^0,c
 30491  011AA6  0EEA               	movlw	-22
 30492  011AA8  0060  F0AB  FFE3   	movff	btemp,plusw1
 30493  011AAE  6A2A               	clrf	btemp^0,c
 30494  011AB0  0EEB               	movlw	-21
 30495  011AB2  50E3               	movf	plusw1,w,c
 30496  011AB4  202A               	addwfc	btemp^0,w,c
 30497  011AB6  6E2A               	movwf	btemp^0,c
 30498  011AB8  0EEB               	movlw	-21
 30499  011ABA  0060  F0AB  FFE3   	movff	btemp,plusw1
 30500  011AC0                     l15706:
 30501                           
 30502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 30503  011AC0  0E00               	movlw	0
 30504  011AC2  6EE6               	movwf	postinc1,c
 30505  011AC4  0E00               	movlw	0
 30506  011AC6  6EE6               	movwf	postinc1,c
 30507  011AC8  0E20               	movlw	32
 30508  011ACA  6EE6               	movwf	postinc1,c
 30509  011ACC  0E41               	movlw	65
 30510  011ACE  6EE6               	movwf	postinc1,c
 30511                           
 30512                           ;stkvar	_u @ sp[(-60)+12]
 30513  011AD0  0ED0               	movlw	-48
 30514  011AD2  006F FF8F FFE6     	movff	plusw1,postinc1
 30515  011AD8  006F FF8F FFE6     	movff	plusw1,postinc1
 30516  011ADE  006F FF8F FFE6     	movff	plusw1,postinc1
 30517  011AE4  006F FF8F FFE6     	movff	plusw1,postinc1
 30518  011AEA  ECFF  F0B2         	call	___flmul	;wreg free
 30519  011AEE  0060  F0AB  FFE6   	movff	btemp,postinc1
 30520  011AF4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 30521  011AFA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 30522  011B00  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 30523                           
 30524                           ;stkvar	_g @ sp[(-60)+16]
 30525  011B06  0ED4               	movlw	-44
 30526  011B08  006F FF8F FFE6     	movff	plusw1,postinc1
 30527  011B0E  006F FF8F FFE6     	movff	plusw1,postinc1
 30528  011B14  006F FF8F FFE6     	movff	plusw1,postinc1
 30529  011B1A  006F FF8F FFE6     	movff	plusw1,postinc1
 30530  011B20  ECC1  F0F4         	call	___flge	;wreg free
 30531  011B24  A02A               	btfss	btemp& (0+255),0,c
 30532  011B26  D032               	goto	l15712
 30533  011B28  D793               	goto	l15702
 30534  011B2A                     l15708:
 30535                           
 30536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 30537  011B2A  0E00               	movlw	0
 30538  011B2C  6EE6               	movwf	postinc1,c
 30539  011B2E  0E00               	movlw	0
 30540  011B30  6EE6               	movwf	postinc1,c
 30541  011B32  0E20               	movlw	32
 30542  011B34  6EE6               	movwf	postinc1,c
 30543  011B36  0E41               	movlw	65
 30544  011B38  6EE6               	movwf	postinc1,c
 30545                           
 30546                           ;stkvar	_u @ sp[(-60)+12]
 30547  011B3A  0ED0               	movlw	-48
 30548  011B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 30549  011B42  006F FF8F FFE6     	movff	plusw1,postinc1
 30550  011B48  006F FF8F FFE6     	movff	plusw1,postinc1
 30551  011B4E  006F FF8F FFE6     	movff	plusw1,postinc1
 30552  011B54  EC50  F0BE         	call	___fldiv	;wreg free
 30553                           
 30554                           ;stkvar	_u @ sp[(-56)+12]
 30555  011B58  0ED4               	movlw	-44
 30556  011B5A  0060  F0AB  FFE3   	movff	btemp,plusw1
 30557  011B60  0ED5               	movlw	-43
 30558  011B62  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30559  011B68  0ED6               	movlw	-42
 30560  011B6A  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30561  011B70  0ED7               	movlw	-41
 30562  011B72  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30563                           
 30564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 30565                           ;stkvar	_e @ sp[(-56)+34]
 30566  011B78  50E1               	movf	fsr1l,w,c
 30567  011B7A  0FEA               	addlw	-22
 30568  011B7C  6ED9               	movwf	fsr2l,c
 30569  011B7E  50E2               	movf	fsr1h,w,c
 30570  011B80  6EDA               	movwf	fsr2h,c
 30571  011B82  0EFF               	movlw	255
 30572  011B84  22DA               	addwfc	fsr2h,f,c
 30573  011B86  06DE               	decf	postinc2,f,c
 30574  011B88  0E00               	movlw	0
 30575  011B8A  5ADD               	subwfb	postdec2,f,c
 30576  011B8C                     l15712:
 30577                           
 30578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 30579                           ;stkvar	_u @ sp[(-56)+12]
 30580  011B8C  0ED4               	movlw	-44
 30581  011B8E  006F FF8F FFE6     	movff	plusw1,postinc1
 30582  011B94  006F FF8F FFE6     	movff	plusw1,postinc1
 30583  011B9A  006F FF8F FFE6     	movff	plusw1,postinc1
 30584  011BA0  006F FF8F FFE6     	movff	plusw1,postinc1
 30585                           
 30586                           ;stkvar	_g @ sp[(-60)+16]
 30587  011BA6  0ED4               	movlw	-44
 30588  011BA8  006F FF8F FFE6     	movff	plusw1,postinc1
 30589  011BAE  006F FF8F FFE6     	movff	plusw1,postinc1
 30590  011BB4  006F FF8F FFE6     	movff	plusw1,postinc1
 30591  011BBA  006F FF8F FFE6     	movff	plusw1,postinc1
 30592  011BC0  ECC1  F0F4         	call	___flge	;wreg free
 30593  011BC4  A02A               	btfss	btemp& (0+255),0,c
 30594  011BC6  D7B1               	goto	l15708
 30595  011BC8                     u14850:
 30596                           
 30597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 30598                           ;stkvar	_c @ sp[(-56)+-7]
 30599  011BC8  0EC1               	movlw	-63
 30600  011BCA  50E3               	movf	plusw1,w,c
 30601  011BCC  6EE6               	movwf	postinc1,c
 30602  011BCE  0E00               	movlw	0
 30603  011BD0  6EE6               	movwf	postinc1,c
 30604  011BD2  ECDA  F008         	call	_tolower	;wreg free
 30605                           
 30606                           ;stkvar	_mode @ sp[(-56)+54]
 30607  011BD6  0EFE               	movlw	-2
 30608  011BD8  0060  F0AB  FFE3   	movff	btemp,plusw1
 30609                           
 30610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 30611                           ;stkvar	_mode @ sp[(-56)+54]
 30612                           ;stkvar	_nmode @ sp[(-56)+55]
 30613  011BDE  0EFE               	movlw	-2
 30614  011BE0  006F FF8C  F02A    	movff	plusw1,btemp
 30615  011BE6  0EFF               	movlw	-1
 30616  011BE8  0060  F0AB  FFE3   	movff	btemp,plusw1
 30617                           
 30618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 30619                           ;stkvar	_mode @ sp[(-56)+54]
 30620  011BEE  0EFE               	movlw	-2
 30621  011BF0  006F FF8C  F02A    	movff	plusw1,btemp
 30622  011BF6  0E67               	movlw	103
 30623  011BF8  182A               	xorwf	btemp^0,w,c
 30624  011BFA  A4D8               	btfss	status,2,c
 30625  011BFC  D025               	goto	l15730
 30626                           
 30627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 30628  011BFE  504C               	movf	_prec^0,w,c
 30629  011C00  104D               	iorwf	(_prec+1)^0,w,c
 30630  011C02  A4D8               	btfss	status,2,c
 30631  011C04  D004               	goto	l15724
 30632                           
 30633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 30634  011C06  0E00               	movlw	0
 30635  011C08  6E4D               	movwf	(_prec+1)^0,c
 30636  011C0A  0E01               	movlw	1
 30637  011C0C  6E4C               	movwf	_prec^0,c
 30638  011C0E                     l15724:
 30639                           
 30640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 30641  011C0E  BE4D               	btfsc	(_prec+1)^0,7,c
 30642  011C10  D005               	goto	u14880
 30643  011C12  504D               	movf	(_prec+1)^0,w,c
 30644  011C14  E110               	bnz	l15728
 30645  011C16  044C               	decf	_prec^0,w,c
 30646  011C18  B0D8               	btfsc	status,0,c
 30647  011C1A  D00D               	goto	l15728
 30648  011C1C                     u14880:
 30649  011C1C  0E06               	movlw	6
 30650  011C1E  6E34               	movwf	(btemp+10)^0,c
 30651  011C20  0E00               	movlw	0
 30652  011C22  6E35               	movwf	(btemp+11)^0,c
 30653                           
 30654                           ;stkvar	_p @ sp[(-56)+40]
 30655  011C24  0EF0               	movlw	-16
 30656  011C26  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30657  011C2C  0EF1               	movlw	-15
 30658  011C2E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30659  011C34  D00C               	goto	l15736
 30660  011C36                     l15728:
 30661                           
 30662                           ;stkvar	_p @ sp[(-56)+40]
 30663  011C36  0EF0               	movlw	-16
 30664  011C38  0060  F133  FFE3   	movff	_prec,plusw1
 30665  011C3E  0EF1               	movlw	-15
 30666  011C40  0060  F137  FFE3   	movff	_prec+1,plusw1
 30667  011C46  D003               	goto	l15736
 30668  011C48                     l15730:
 30669                           
 30670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 30671  011C48  AE4D               	btfss	(_prec+1)^0,7,c
 30672  011C4A  D7F5               	goto	l15728
 30673  011C4C  D7E7               	goto	u14880
 30674  011C4E                     l15736:
 30675                           
 30676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 30677                           ;stkvar	_mode @ sp[(-56)+54]
 30678  011C4E  0EFE               	movlw	-2
 30679  011C50  006F FF8C  F02A    	movff	plusw1,btemp
 30680  011C56  0E67               	movlw	103
 30681  011C58  182A               	xorwf	btemp^0,w,c
 30682  011C5A  A4D8               	btfss	status,2,c
 30683  011C5C  D02F               	goto	l15746
 30684                           
 30685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 30686                           ;stkvar	_e @ sp[(-56)+34]
 30687  011C5E  0EEB               	movlw	-21
 30688  011C60  AEE3               	btfss	plusw1,7,c
 30689  011C62  D00E               	goto	u14910
 30690  011C64  0EEA               	movlw	-22
 30691  011C66  006F FF8C  F02A    	movff	plusw1,btemp
 30692  011C6C  0EFC               	movlw	252
 30693  011C6E  5E2A               	subwf	btemp^0,f,c
 30694  011C70  0EEB               	movlw	-21
 30695  011C72  006F FF8C  F02A    	movff	plusw1,btemp
 30696  011C78  0EFF               	movlw	255
 30697  011C7A  5A2A               	subwfb	btemp^0,f,c
 30698  011C7C  A0D8               	btfss	status,0,c
 30699  011C7E  D018               	goto	l15744
 30700  011C80                     u14910:
 30701                           
 30702                           ;stkvar	_e @ sp[(-56)+34]
 30703                           ;stkvar	_p @ sp[(-56)+40]
 30704  011C80  0EF0               	movlw	-16
 30705  011C82  50E3               	movf	plusw1,w,c
 30706  011C84  0FFF               	addlw	255
 30707  011C86  6E34               	movwf	(btemp+10)^0,c
 30708  011C88  0EF1               	movlw	-15
 30709  011C8A  006F FF8C  F035    	movff	plusw1,btemp+11
 30710  011C90  0EFF               	movlw	255
 30711  011C92  2235               	addwfc	(btemp+11)^0,f,c
 30712  011C94  0EEA               	movlw	-22
 30713  011C96  50E3               	movf	plusw1,w,c
 30714  011C98  5C34               	subwf	(btemp+10)^0,w,c
 30715  011C9A  5035               	movf	(btemp+11)^0,w,c
 30716  011C9C  0A80               	xorlw	128
 30717  011C9E  6E2A               	movwf	btemp^0,c
 30718  011CA0  0EEB               	movlw	-21
 30719  011CA2  50E3               	movf	plusw1,w,c
 30720  011CA4  0A80               	xorlw	128
 30721  011CA6  582A               	subwfb	btemp^0,w,c
 30722  011CA8  A0D8               	btfss	status,0,c
 30723  011CAA  D002               	goto	l15744
 30724                           
 30725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 30726  011CAC  0E66               	movlw	102
 30727  011CAE  D001               	goto	L32
 30728  011CB0                     l15744:
 30729                           
 30730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 30731  011CB0  0E65               	movlw	101
 30732  011CB2                     L32:
 30733  011CB2  6E35               	movwf	(btemp+11)^0,c
 30734                           
 30735                           ;stkvar	_nmode @ sp[(-56)+55]
 30736  011CB4  0EFF               	movlw	-1
 30737  011CB6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30738  011CBC                     l15746:
 30739                           
 30740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 30741                           ;stkvar	_p @ sp[(-56)+40]
 30742                           ;stkvar	_m @ sp[(-56)+48]
 30743  011CBC  0EF0               	movlw	-16
 30744  011CBE  006F FF8C  F02A    	movff	plusw1,btemp
 30745  011CC4  0EF8               	movlw	-8
 30746  011CC6  0060  F0AB  FFE3   	movff	btemp,plusw1
 30747  011CCC  0EF1               	movlw	-15
 30748  011CCE  006F FF8C  F02A    	movff	plusw1,btemp
 30749  011CD4  0EF9               	movlw	-7
 30750  011CD6  0060  F0AB  FFE3   	movff	btemp,plusw1
 30751                           
 30752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 30753                           ;stkvar	_mode @ sp[(-56)+54]
 30754  011CDC  0EFE               	movlw	-2
 30755  011CDE  006F FF8C  F02A    	movff	plusw1,btemp
 30756  011CE4  0E67               	movlw	103
 30757  011CE6  182A               	xorwf	btemp^0,w,c
 30758  011CE8  A4D8               	btfss	status,2,c
 30759  011CEA  D00B               	goto	u14950
 30760                           
 30761                           ;stkvar	_nmode @ sp[(-56)+55]
 30762  011CEC  0EFF               	movlw	-1
 30763  011CEE  006F FF8C  F02A    	movff	plusw1,btemp
 30764  011CF4  0E66               	movlw	102
 30765  011CF6  182A               	xorwf	btemp^0,w,c
 30766  011CF8  A4D8               	btfss	status,2,c
 30767  011CFA  D014               	goto	l2552
 30768                           
 30769                           ;stkvar	_e @ sp[(-56)+34]
 30770  011CFC  0EEB               	movlw	-21
 30771  011CFE  AEE3               	btfss	plusw1,7,c
 30772  011D00  D011               	goto	l2552
 30773  011D02                     u14950:
 30774                           
 30775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 30776                           ;stkvar	_m @ sp[(-56)+48]
 30777  011D02  0EF8               	movlw	-8
 30778  011D04  50E3               	movf	plusw1,w,c
 30779  011D06  0F01               	addlw	1
 30780  011D08  6E2A               	movwf	btemp^0,c
 30781  011D0A  0EF8               	movlw	-8
 30782  011D0C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30783  011D12  6A2A               	clrf	btemp^0,c
 30784  011D14  0EF9               	movlw	-7
 30785  011D16  50E3               	movf	plusw1,w,c
 30786  011D18  202A               	addwfc	btemp^0,w,c
 30787  011D1A  6E2A               	movwf	btemp^0,c
 30788  011D1C  0EF9               	movlw	-7
 30789  011D1E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30790  011D24                     l2552:
 30791                           
 30792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 30793                           ;stkvar	_nmode @ sp[(-56)+55]
 30794  011D24  0EFF               	movlw	-1
 30795  011D26  006F FF8C  F02A    	movff	plusw1,btemp
 30796  011D2C  0E66               	movlw	102
 30797  011D2E  182A               	xorwf	btemp^0,w,c
 30798  011D30  A4D8               	btfss	status,2,c
 30799  011D32  D03B               	goto	l15766
 30800                           
 30801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 30802                           ;stkvar	_e @ sp[(-56)+34]
 30803  011D34  0EEB               	movlw	-21
 30804  011D36  AEE3               	btfss	plusw1,7,c
 30805  011D38  D01C               	goto	l15762
 30806                           
 30807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 30808  011D3A  0E00               	movlw	0
 30809  011D3C  6E32               	movwf	(btemp+8)^0,c
 30810  011D3E  0E00               	movlw	0
 30811  011D40  6E33               	movwf	(btemp+9)^0,c
 30812  011D42  0E80               	movlw	128
 30813  011D44  6E34               	movwf	(btemp+10)^0,c
 30814  011D46  0E3F               	movlw	63
 30815  011D48  6E35               	movwf	(btemp+11)^0,c
 30816                           
 30817                           ;stkvar	_u @ sp[(-56)+12]
 30818  011D4A  0ED4               	movlw	-44
 30819  011D4C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30820  011D52  0ED5               	movlw	-43
 30821  011D54  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30822  011D5A  0ED6               	movlw	-42
 30823  011D5C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30824  011D62  0ED7               	movlw	-41
 30825  011D64  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30826                           
 30827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 30828                           ;stkvar	_e @ sp[(-56)+34]
 30829  011D6A  0EEA               	movlw	-22
 30830  011D6C  6AE3               	clrf	plusw1,c
 30831  011D6E  0EEB               	movlw	-21
 30832  011D70  6AE3               	clrf	plusw1,c
 30833  011D72                     l15762:
 30834                           
 30835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 30836                           ;stkvar	_mode @ sp[(-56)+54]
 30837  011D72  0EFE               	movlw	-2
 30838  011D74  006F FF8C  F02A    	movff	plusw1,btemp
 30839  011D7A  0E67               	movlw	103
 30840  011D7C  182A               	xorwf	btemp^0,w,c
 30841  011D7E  B4D8               	btfsc	status,2,c
 30842  011D80  D014               	goto	l15766
 30843                           
 30844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 30845                           ;stkvar	_e @ sp[(-56)+34]
 30846                           ;stkvar	_m @ sp[(-56)+48]
 30847  011D82  0EF8               	movlw	-8
 30848  011D84  50E3               	movf	plusw1,w,c
 30849  011D86  6E2A               	movwf	btemp^0,c
 30850  011D88  0EEA               	movlw	-22
 30851  011D8A  50E3               	movf	plusw1,w,c
 30852  011D8C  262A               	addwf	btemp^0,f,c
 30853  011D8E  0EF8               	movlw	-8
 30854  011D90  0060  F0AB  FFE3   	movff	btemp,plusw1
 30855  011D96  0EF9               	movlw	-7
 30856  011D98  50E3               	movf	plusw1,w,c
 30857  011D9A  6E2A               	movwf	btemp^0,c
 30858  011D9C  0EEB               	movlw	-21
 30859  011D9E  50E3               	movf	plusw1,w,c
 30860  011DA0  222A               	addwfc	btemp^0,f,c
 30861  011DA2  0EF9               	movlw	-7
 30862  011DA4  0060  F0AB  FFE3   	movff	btemp,plusw1
 30863  011DAA                     l15766:
 30864                           
 30865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 30866                           ;stkvar	_i @ sp[(-56)+36]
 30867  011DAA  0EEC               	movlw	-20
 30868  011DAC  6AE3               	clrf	plusw1,c
 30869  011DAE  0EED               	movlw	-19
 30870  011DB0  6AE3               	clrf	plusw1,c
 30871                           
 30872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 30873                           ;stkvar	_g @ sp[(-56)+16]
 30874  011DB2  0ED8               	movlw	-40
 30875  011DB4  006F FF8C  F032    	movff	plusw1,btemp+8
 30876  011DBA  0ED9               	movlw	-39
 30877  011DBC  006F FF8C  F033    	movff	plusw1,btemp+9
 30878  011DC2  0EDA               	movlw	-38
 30879  011DC4  006F FF8C  F034    	movff	plusw1,btemp+10
 30880  011DCA  0EDB               	movlw	-37
 30881  011DCC  006F FF8C  F035    	movff	plusw1,btemp+11
 30882                           
 30883                           ;stkvar	_h @ sp[(-56)+24]
 30884  011DD2  0EE0               	movlw	-32
 30885  011DD4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30886  011DDA  0EE1               	movlw	-31
 30887  011DDC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30888  011DE2  0EE2               	movlw	-30
 30889  011DE4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30890  011DEA  0EE3               	movlw	-29
 30891  011DEC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30892                           
 30893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 30894                           ;stkvar	_u @ sp[(-56)+12]
 30895  011DF2  0ED4               	movlw	-44
 30896  011DF4  006F FF8C  F032    	movff	plusw1,btemp+8
 30897  011DFA  0ED5               	movlw	-43
 30898  011DFC  006F FF8C  F033    	movff	plusw1,btemp+9
 30899  011E02  0ED6               	movlw	-42
 30900  011E04  006F FF8C  F034    	movff	plusw1,btemp+10
 30901  011E0A  0ED7               	movlw	-41
 30902  011E0C  006F FF8C  F035    	movff	plusw1,btemp+11
 30903                           
 30904                           ;stkvar	_ou @ sp[(-56)+28]
 30905  011E12  0EE4               	movlw	-28
 30906  011E14  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30907  011E1A  0EE5               	movlw	-27
 30908  011E1C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30909  011E22  0EE6               	movlw	-26
 30910  011E24  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30911  011E2A  0EE7               	movlw	-25
 30912  011E2C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30913                           
 30914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 30915  011E32  D0D6               	goto	l15782
 30916  011E34                     l15772:
 30917                           
 30918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 30919                           ;stkvar	_u @ sp[(-56)+12]
 30920  011E34  0ED4               	movlw	-44
 30921  011E36  006F FF8F FFE6     	movff	plusw1,postinc1
 30922  011E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 30923  011E42  006F FF8F FFE6     	movff	plusw1,postinc1
 30924  011E48  006F FF8F FFE6     	movff	plusw1,postinc1
 30925                           
 30926                           ;stkvar	_h @ sp[(-60)+24]
 30927  011E4E  0EDC               	movlw	-36
 30928  011E50  006F FF8F FFE6     	movff	plusw1,postinc1
 30929  011E56  006F FF8F FFE6     	movff	plusw1,postinc1
 30930  011E5C  006F FF8F FFE6     	movff	plusw1,postinc1
 30931  011E62  006F FF8F FFE6     	movff	plusw1,postinc1
 30932  011E68  EC50  F0BE         	call	___fldiv	;wreg free
 30933  011E6C  0060  F0AB  FFE6   	movff	btemp,postinc1
 30934  011E72  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 30935  011E78  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 30936  011E7E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 30937  011E84  EC67  F0D2         	call	_floorf	;wreg free
 30938                           
 30939                           ;stkvar	_l @ sp[(-56)+20]
 30940  011E88  0EDC               	movlw	-36
 30941  011E8A  0060  F0AB  FFE3   	movff	btemp,plusw1
 30942  011E90  0EDD               	movlw	-35
 30943  011E92  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30944  011E98  0EDE               	movlw	-34
 30945  011E9A  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30946  011EA0  0EDF               	movlw	-33
 30947  011EA2  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30948                           
 30949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 30950                           ;stkvar	_l @ sp[(-56)+20]
 30951  011EA8  0EDC               	movlw	-36
 30952  011EAA  006F FF8F FFE6     	movff	plusw1,postinc1
 30953  011EB0  006F FF8F FFE6     	movff	plusw1,postinc1
 30954  011EB6  006F FF8F FFE6     	movff	plusw1,postinc1
 30955  011EBC  006F FF8F FFE6     	movff	plusw1,postinc1
 30956  011EC2  EC55  F0F3         	call	___fltol	;wreg free
 30957  011EC6  0060  F0A8  F034   	movff	btemp,btemp+10
 30958  011ECC  0060  F0AC  F035   	movff	btemp+1,btemp+11
 30959                           
 30960                           ;stkvar	_d @ sp[(-56)+44]
 30961  011ED2  0EF4               	movlw	-12
 30962  011ED4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30963  011EDA  0EF5               	movlw	-11
 30964  011EDC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30965                           
 30966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 30967                           ;stkvar	_u @ sp[(-56)+12]
 30968  011EE2  0ED4               	movlw	-44
 30969  011EE4  006F FF8F FFE6     	movff	plusw1,postinc1
 30970  011EEA  006F FF8F FFE6     	movff	plusw1,postinc1
 30971  011EF0  006F FF8F FFE6     	movff	plusw1,postinc1
 30972  011EF6  006F FF8F FFE6     	movff	plusw1,postinc1
 30973                           
 30974                           ;stkvar	_l @ sp[(-60)+20]
 30975  011EFC  0ED8               	movlw	-40
 30976  011EFE  006F FF8F FFE6     	movff	plusw1,postinc1
 30977  011F04  006F FF8F FFE6     	movff	plusw1,postinc1
 30978  011F0A  006F FF8F FFE6     	movff	plusw1,postinc1
 30979  011F10  006F FF8F FFE6     	movff	plusw1,postinc1
 30980  011F16  ECFF  F0B2         	call	___flmul	;wreg free
 30981  011F1A  0060  F0AB  FFE6   	movff	btemp,postinc1
 30982  011F20  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 30983  011F26  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 30984  011F2C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 30985                           
 30986                           ;stkvar	_h @ sp[(-60)+24]
 30987  011F32  0EDC               	movlw	-36
 30988  011F34  006F FF8F FFE6     	movff	plusw1,postinc1
 30989  011F3A  006F FF8F FFE6     	movff	plusw1,postinc1
 30990  011F40  006F FF8F FFE6     	movff	plusw1,postinc1
 30991  011F46  006F FF8F FFE6     	movff	plusw1,postinc1
 30992  011F4C  EC14  F00F         	call	___flsub	;wreg free
 30993                           
 30994                           ;stkvar	_h @ sp[(-56)+24]
 30995  011F50  0EE0               	movlw	-32
 30996  011F52  0060  F0AB  FFE3   	movff	btemp,plusw1
 30997  011F58  0EE1               	movlw	-31
 30998  011F5A  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30999  011F60  0EE2               	movlw	-30
 31000  011F62  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31001  011F68  0EE3               	movlw	-29
 31002  011F6A  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31003                           
 31004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 31005  011F70  0E00               	movlw	0
 31006  011F72  6EE6               	movwf	postinc1,c
 31007  011F74  0E00               	movlw	0
 31008  011F76  6EE6               	movwf	postinc1,c
 31009  011F78  0E20               	movlw	32
 31010  011F7A  6EE6               	movwf	postinc1,c
 31011  011F7C  0E41               	movlw	65
 31012  011F7E  6EE6               	movwf	postinc1,c
 31013                           
 31014                           ;stkvar	_u @ sp[(-60)+12]
 31015  011F80  0ED0               	movlw	-48
 31016  011F82  006F FF8F FFE6     	movff	plusw1,postinc1
 31017  011F88  006F FF8F FFE6     	movff	plusw1,postinc1
 31018  011F8E  006F FF8F FFE6     	movff	plusw1,postinc1
 31019  011F94  006F FF8F FFE6     	movff	plusw1,postinc1
 31020  011F9A  EC50  F0BE         	call	___fldiv	;wreg free
 31021                           
 31022                           ;stkvar	_u @ sp[(-56)+12]
 31023  011F9E  0ED4               	movlw	-44
 31024  011FA0  0060  F0AB  FFE3   	movff	btemp,plusw1
 31025  011FA6  0ED5               	movlw	-43
 31026  011FA8  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31027  011FAE  0ED6               	movlw	-42
 31028  011FB0  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31029  011FB6  0ED7               	movlw	-41
 31030  011FB8  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31031                           
 31032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 31033                           ;stkvar	_i @ sp[(-56)+36]
 31034  011FBE  0EEC               	movlw	-20
 31035  011FC0  50E3               	movf	plusw1,w,c
 31036  011FC2  0F01               	addlw	1
 31037  011FC4  6E2A               	movwf	btemp^0,c
 31038  011FC6  0EEC               	movlw	-20
 31039  011FC8  0060  F0AB  FFE3   	movff	btemp,plusw1
 31040  011FCE  6A2A               	clrf	btemp^0,c
 31041  011FD0  0EED               	movlw	-19
 31042  011FD2  50E3               	movf	plusw1,w,c
 31043  011FD4  202A               	addwfc	btemp^0,w,c
 31044  011FD6  6E2A               	movwf	btemp^0,c
 31045  011FD8  0EED               	movlw	-19
 31046  011FDA  0060  F0AB  FFE3   	movff	btemp,plusw1
 31047  011FE0                     l15782:
 31048                           
 31049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 31050                           ;stkvar	_m @ sp[(-56)+48]
 31051                           ;stkvar	_i @ sp[(-56)+36]
 31052  011FE0  50E1               	movf	fsr1l,w,c
 31053  011FE2  0FEC               	addlw	-20
 31054  011FE4  6ED9               	movwf	fsr2l,c
 31055  011FE6  50E2               	movf	fsr1h,w,c
 31056  011FE8  6EDA               	movwf	fsr2h,c
 31057  011FEA  0EFF               	movlw	255
 31058  011FEC  22DA               	addwfc	fsr2h,f,c
 31059  011FEE  0EF8               	movlw	-8
 31060  011FF0  50E3               	movf	plusw1,w,c
 31061  011FF2  5CDE               	subwf	postinc2,w,c
 31062  011FF4  50DE               	movf	postinc2,w,c
 31063  011FF6  0A80               	xorlw	128
 31064  011FF8  6E2A               	movwf	btemp^0,c
 31065  011FFA  0EF9               	movlw	-7
 31066  011FFC  50E3               	movf	plusw1,w,c
 31067  011FFE  0A80               	xorlw	128
 31068  012000  582A               	subwfb	btemp^0,w,c
 31069  012002  A0D8               	btfss	status,0,c
 31070  012004  D717               	goto	l15772
 31071                           
 31072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 31073  012006  0E00               	movlw	0
 31074  012008  6EE6               	movwf	postinc1,c
 31075  01200A  0E00               	movlw	0
 31076  01200C  6EE6               	movwf	postinc1,c
 31077  01200E  0EA0               	movlw	160
 31078  012010  6EE6               	movwf	postinc1,c
 31079  012012  0E40               	movlw	64
 31080  012014  6EE6               	movwf	postinc1,c
 31081                           
 31082                           ;stkvar	_u @ sp[(-60)+12]
 31083  012016  0ED0               	movlw	-48
 31084  012018  006F FF8F FFE6     	movff	plusw1,postinc1
 31085  01201E  006F FF8F FFE6     	movff	plusw1,postinc1
 31086  012024  006F FF8F FFE6     	movff	plusw1,postinc1
 31087  01202A  006F FF8F FFE6     	movff	plusw1,postinc1
 31088  012030  ECFF  F0B2         	call	___flmul	;wreg free
 31089                           
 31090                           ;stkvar	_l @ sp[(-56)+20]
 31091  012034  0EDC               	movlw	-36
 31092  012036  0060  F0AB  FFE3   	movff	btemp,plusw1
 31093  01203C  0EDD               	movlw	-35
 31094  01203E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31095  012044  0EDE               	movlw	-34
 31096  012046  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31097  01204C  0EDF               	movlw	-33
 31098  01204E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31099                           
 31100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 31101                           ;stkvar	_l @ sp[(-56)+20]
 31102  012054  0EDC               	movlw	-36
 31103  012056  006F FF8F FFE6     	movff	plusw1,postinc1
 31104  01205C  006F FF8F FFE6     	movff	plusw1,postinc1
 31105  012062  006F FF8F FFE6     	movff	plusw1,postinc1
 31106  012068  006F FF8F FFE6     	movff	plusw1,postinc1
 31107                           
 31108                           ;stkvar	_h @ sp[(-60)+24]
 31109  01206E  0EDC               	movlw	-36
 31110  012070  006F FF8F FFE6     	movff	plusw1,postinc1
 31111  012076  006F FF8F FFE6     	movff	plusw1,postinc1
 31112  01207C  006F FF8F FFE6     	movff	plusw1,postinc1
 31113  012082  006F FF8F FFE6     	movff	plusw1,postinc1
 31114  012088  ECC1  F0F4         	call	___flge	;wreg free
 31115  01208C  A02A               	btfss	btemp& (0+255),0,c
 31116  01208E  D021               	goto	u15020
 31117                           
 31118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 31119                           ;stkvar	_l @ sp[(-56)+20]
 31120                           
 31121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 31122                           
 31123                           ;stkvar	_l @ sp[(-56)+20]
 31124                           
 31125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 31126  012090  0EDC               	movlw	-36
 31127  012092  006F FF8F FFE6     	movff	plusw1,postinc1
 31128  012098  006F FF8F FFE6     	movff	plusw1,postinc1
 31129  01209E  006F FF8F FFE6     	movff	plusw1,postinc1
 31130  0120A4  006F FF8F FFE6     	movff	plusw1,postinc1
 31131                           
 31132                           ;stkvar	_h @ sp[(-60)+24]
 31133  0120AA  0EDC               	movlw	-36
 31134  0120AC  006F FF8F FFE6     	movff	plusw1,postinc1
 31135  0120B2  006F FF8F FFE6     	movff	plusw1,postinc1
 31136  0120B8  006F FF8F FFE6     	movff	plusw1,postinc1
 31137  0120BE  006F FF8F FFE6     	movff	plusw1,postinc1
 31138  0120C4  EC82  F002         	call	___fleq	;wreg free
 31139  0120C8  A02A               	btfss	btemp& (0+255),0,c
 31140  0120CA  D01B               	goto	l15796
 31141                           
 31142                           ;stkvar	_d @ sp[(-56)+44]
 31143  0120CC  0EF4               	movlw	-12
 31144  0120CE  B0E3               	btfsc	plusw1,0,c
 31145  0120D0  D018               	goto	l15796
 31146  0120D2                     u15020:
 31147                           
 31148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 31149  0120D2  0E00               	movlw	0
 31150  0120D4  6E32               	movwf	(btemp+8)^0,c
 31151  0120D6  0E00               	movlw	0
 31152  0120D8  6E33               	movwf	(btemp+9)^0,c
 31153  0120DA  0E00               	movlw	0
 31154  0120DC  6E34               	movwf	(btemp+10)^0,c
 31155  0120DE  0E00               	movlw	0
 31156  0120E0  6E35               	movwf	(btemp+11)^0,c
 31157                           
 31158                           ;stkvar	_l @ sp[(-56)+20]
 31159  0120E2  0EDC               	movlw	-36
 31160  0120E4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31161  0120EA  0EDD               	movlw	-35
 31162  0120EC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31163  0120F2  0EDE               	movlw	-34
 31164  0120F4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31165  0120FA  0EDF               	movlw	-33
 31166  0120FC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31167  012102                     l15796:
 31168                           
 31169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 31170                           ;stkvar	_l @ sp[(-56)+20]
 31171  012102  0EDC               	movlw	-36
 31172  012104  006F FF8F FFE6     	movff	plusw1,postinc1
 31173  01210A  006F FF8F FFE6     	movff	plusw1,postinc1
 31174  012110  006F FF8F FFE6     	movff	plusw1,postinc1
 31175  012116  006F FF8F FFE6     	movff	plusw1,postinc1
 31176                           
 31177                           ;stkvar	_g @ sp[(-60)+16]
 31178  01211C  0ED4               	movlw	-44
 31179  01211E  006F FF8F FFE6     	movff	plusw1,postinc1
 31180  012124  006F FF8F FFE6     	movff	plusw1,postinc1
 31181  01212A  006F FF8F FFE6     	movff	plusw1,postinc1
 31182  012130  006F FF8F FFE6     	movff	plusw1,postinc1
 31183  012136  EC14  F0B7         	call	___fladd	;wreg free
 31184                           
 31185                           ;stkvar	_h @ sp[(-56)+24]
 31186  01213A  0EE0               	movlw	-32
 31187  01213C  0060  F0AB  FFE3   	movff	btemp,plusw1
 31188  012142  0EE1               	movlw	-31
 31189  012144  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31190  01214A  0EE2               	movlw	-30
 31191  01214C  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31192  012152  0EE3               	movlw	-29
 31193  012154  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31194                           
 31195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 31196                           ;stkvar	_ou @ sp[(-56)+28]
 31197  01215A  0EE4               	movlw	-28
 31198  01215C  006F FF8C  F032    	movff	plusw1,btemp+8
 31199  012162  0EE5               	movlw	-27
 31200  012164  006F FF8C  F033    	movff	plusw1,btemp+9
 31201  01216A  0EE6               	movlw	-26
 31202  01216C  006F FF8C  F034    	movff	plusw1,btemp+10
 31203  012172  0EE7               	movlw	-25
 31204  012174  006F FF8C  F035    	movff	plusw1,btemp+11
 31205                           
 31206                           ;stkvar	_u @ sp[(-56)+12]
 31207  01217A  0ED4               	movlw	-44
 31208  01217C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31209  012182  0ED5               	movlw	-43
 31210  012184  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31211  01218A  0ED6               	movlw	-42
 31212  01218C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31213  012192  0ED7               	movlw	-41
 31214  012194  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31215                           
 31216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 31217                           ;stkvar	_nmode @ sp[(-56)+55]
 31218  01219A  0EFF               	movlw	-1
 31219  01219C  006F FF8C  F02A    	movff	plusw1,btemp
 31220  0121A2  0E65               	movlw	101
 31221  0121A4  182A               	xorwf	btemp^0,w,c
 31222  0121A6  B4D8               	btfsc	status,2,c
 31223  0121A8  D011               	goto	l15804
 31224                           
 31225                           ;stkvar	_e @ sp[(-56)+34]
 31226                           ;stkvar	_ne @ sp[(-56)+46]
 31227  0121AA  0EEA               	movlw	-22
 31228  0121AC  006F FF8C  F02A    	movff	plusw1,btemp
 31229  0121B2  0EF6               	movlw	-10
 31230  0121B4  0060  F0AB  FFE3   	movff	btemp,plusw1
 31231  0121BA  0EEB               	movlw	-21
 31232  0121BC  006F FF8C  F02A    	movff	plusw1,btemp
 31233  0121C2  0EF7               	movlw	-9
 31234  0121C4  0060  F0AB  FFE3   	movff	btemp,plusw1
 31235  0121CA  D004               	goto	l2567
 31236  0121CC                     l15804:
 31237                           
 31238                           ;stkvar	_ne @ sp[(-56)+46]
 31239  0121CC  0EF6               	movlw	-10
 31240  0121CE  6AE3               	clrf	plusw1,c
 31241  0121D0  0EF7               	movlw	-9
 31242  0121D2  6AE3               	clrf	plusw1,c
 31243  0121D4                     l2567:
 31244                           
 31245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 31246                           ;stkvar	_pp @ sp[(-56)+50]
 31247  0121D4  0EFA               	movlw	-6
 31248  0121D6  6AE3               	clrf	plusw1,c
 31249  0121D8  0EFB               	movlw	-5
 31250  0121DA  6AE3               	clrf	plusw1,c
 31251                           
 31252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 31253                           ;stkvar	_t @ sp[(-56)+52]
 31254  0121DC  0EFC               	movlw	-4
 31255  0121DE  6AE3               	clrf	plusw1,c
 31256  0121E0  0EFD               	movlw	-3
 31257  0121E2  6AE3               	clrf	plusw1,c
 31258                           
 31259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 31260                           ;stkvar	_i @ sp[(-56)+36]
 31261  0121E4  0EEC               	movlw	-20
 31262  0121E6  6AE3               	clrf	plusw1,c
 31263  0121E8  0EED               	movlw	-19
 31264  0121EA  6AE3               	clrf	plusw1,c
 31265                           
 31266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 31267  0121EC  D1B7               	goto	l15856
 31268  0121EE                     l15806:
 31269                           
 31270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 31271                           ;stkvar	_u @ sp[(-56)+12]
 31272  0121EE  0ED4               	movlw	-44
 31273  0121F0  006F FF8F FFE6     	movff	plusw1,postinc1
 31274  0121F6  006F FF8F FFE6     	movff	plusw1,postinc1
 31275  0121FC  006F FF8F FFE6     	movff	plusw1,postinc1
 31276  012202  006F FF8F FFE6     	movff	plusw1,postinc1
 31277                           
 31278                           ;stkvar	_h @ sp[(-60)+24]
 31279  012208  0EDC               	movlw	-36
 31280  01220A  006F FF8F FFE6     	movff	plusw1,postinc1
 31281  012210  006F FF8F FFE6     	movff	plusw1,postinc1
 31282  012216  006F FF8F FFE6     	movff	plusw1,postinc1
 31283  01221C  006F FF8F FFE6     	movff	plusw1,postinc1
 31284  012222  EC50  F0BE         	call	___fldiv	;wreg free
 31285  012226  0060  F0AB  FFE6   	movff	btemp,postinc1
 31286  01222C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31287  012232  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31288  012238  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31289  01223E  EC67  F0D2         	call	_floorf	;wreg free
 31290                           
 31291                           ;stkvar	_l @ sp[(-56)+20]
 31292  012242  0EDC               	movlw	-36
 31293  012244  0060  F0AB  FFE3   	movff	btemp,plusw1
 31294  01224A  0EDD               	movlw	-35
 31295  01224C  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31296  012252  0EDE               	movlw	-34
 31297  012254  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31298  01225A  0EDF               	movlw	-33
 31299  01225C  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31300                           
 31301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 31302                           ;stkvar	_l @ sp[(-56)+20]
 31303  012262  0EDC               	movlw	-36
 31304  012264  006F FF8F FFE6     	movff	plusw1,postinc1
 31305  01226A  006F FF8F FFE6     	movff	plusw1,postinc1
 31306  012270  006F FF8F FFE6     	movff	plusw1,postinc1
 31307  012276  006F FF8F FFE6     	movff	plusw1,postinc1
 31308  01227C  EC55  F0F3         	call	___fltol	;wreg free
 31309  012280  0060  F0A8  F034   	movff	btemp,btemp+10
 31310  012286  0060  F0AC  F035   	movff	btemp+1,btemp+11
 31311                           
 31312                           ;stkvar	_d @ sp[(-56)+44]
 31313  01228C  0EF4               	movlw	-12
 31314  01228E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31315  012294  0EF5               	movlw	-11
 31316  012296  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31317                           
 31318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 31319  01229C  B84E               	btfsc	_flags^0,4,c
 31320  01229E  D026               	goto	l15820
 31321                           
 31322                           ;stkvar	_d @ sp[(-56)+44]
 31323  0122A0  0EF4               	movlw	-12
 31324  0122A2  006F FF8C  F02A    	movff	plusw1,btemp
 31325  0122A8  0EF5               	movlw	-11
 31326  0122AA  50E3               	movf	plusw1,w,c
 31327  0122AC  102A               	iorwf	btemp^0,w,c
 31328  0122AE  A4D8               	btfss	status,2,c
 31329  0122B0  D01D               	goto	l15820
 31330                           
 31331                           ;stkvar	_mode @ sp[(-56)+54]
 31332  0122B2  0EFE               	movlw	-2
 31333  0122B4  006F FF8C  F02A    	movff	plusw1,btemp
 31334  0122BA  0E67               	movlw	103
 31335  0122BC  182A               	xorwf	btemp^0,w,c
 31336  0122BE  A4D8               	btfss	status,2,c
 31337  0122C0  D015               	goto	l15820
 31338                           
 31339                           ;stkvar	_ne @ sp[(-56)+46]
 31340  0122C2  0EF7               	movlw	-9
 31341  0122C4  AEE3               	btfss	plusw1,7,c
 31342  0122C6  D012               	goto	l15820
 31343                           
 31344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 31345                           ;stkvar	_t @ sp[(-56)+52]
 31346  0122C8  0EFC               	movlw	-4
 31347  0122CA  50E3               	movf	plusw1,w,c
 31348  0122CC  0F01               	addlw	1
 31349  0122CE  6E2A               	movwf	btemp^0,c
 31350  0122D0  0EFC               	movlw	-4
 31351  0122D2  0060  F0AB  FFE3   	movff	btemp,plusw1
 31352  0122D8  6A2A               	clrf	btemp^0,c
 31353  0122DA  0EFD               	movlw	-3
 31354  0122DC  50E3               	movf	plusw1,w,c
 31355  0122DE  202A               	addwfc	btemp^0,w,c
 31356  0122E0  6E2A               	movwf	btemp^0,c
 31357  0122E2  0EFD               	movlw	-3
 31358  0122E4  0060  F0AB  FFE3   	movff	btemp,plusw1
 31359                           
 31360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 31361  0122EA  D0AF               	goto	l15848
 31362  0122EC                     l15820:
 31363                           
 31364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 31365                           ;stkvar	_pp @ sp[(-56)+50]
 31366  0122EC  0EFA               	movlw	-6
 31367  0122EE  006F FF8C  F02A    	movff	plusw1,btemp
 31368  0122F4  0EFB               	movlw	-5
 31369  0122F6  50E3               	movf	plusw1,w,c
 31370  0122F8  102A               	iorwf	btemp^0,w,c
 31371  0122FA  A4D8               	btfss	status,2,c
 31372  0122FC  D070               	goto	l15840
 31373                           
 31374                           ;stkvar	_ne @ sp[(-56)+46]
 31375  0122FE  0EF7               	movlw	-9
 31376  012300  AEE3               	btfss	plusw1,7,c
 31377  012302  D06D               	goto	l15840
 31378                           
 31379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 31380                           ;stkvar	_n @ sp[(-56)+32]
 31381  012304  0EE8               	movlw	-24
 31382  012306  006F FF8C  F034    	movff	plusw1,btemp+10
 31383  01230C  0EE9               	movlw	-23
 31384  01230E  006F FF8C  F035    	movff	plusw1,btemp+11
 31385  012314  0E54               	movlw	low _dbuf
 31386  012316  2434               	addwf	(btemp+10)^0,w,c
 31387  012318  6ED9               	movwf	fsr2l,c
 31388  01231A  0E03               	movlw	high _dbuf
 31389  01231C  2035               	addwfc	(btemp+11)^0,w,c
 31390  01231E  6EDA               	movwf	fsr2h,c
 31391  012320  0E2E               	movlw	46
 31392  012322  6EDF               	movwf	indf2,c
 31393                           
 31394                           ;stkvar	_n @ sp[(-56)+32]
 31395  012324  0EE8               	movlw	-24
 31396  012326  50E3               	movf	plusw1,w,c
 31397  012328  0F01               	addlw	1
 31398  01232A  6E2A               	movwf	btemp^0,c
 31399  01232C  0EE8               	movlw	-24
 31400  01232E  0060  F0AB  FFE3   	movff	btemp,plusw1
 31401  012334  6A2A               	clrf	btemp^0,c
 31402  012336  0EE9               	movlw	-23
 31403  012338  50E3               	movf	plusw1,w,c
 31404  01233A  202A               	addwfc	btemp^0,w,c
 31405  01233C  6E2A               	movwf	btemp^0,c
 31406  01233E  0EE9               	movlw	-23
 31407  012340  0060  F0AB  FFE3   	movff	btemp,plusw1
 31408                           
 31409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 31410                           ;stkvar	_w @ sp[(-56)+38]
 31411  012346  50E1               	movf	fsr1l,w,c
 31412  012348  0FEE               	addlw	-18
 31413  01234A  6ED9               	movwf	fsr2l,c
 31414  01234C  50E2               	movf	fsr1h,w,c
 31415  01234E  6EDA               	movwf	fsr2h,c
 31416  012350  0EFF               	movlw	255
 31417  012352  22DA               	addwfc	fsr2h,f,c
 31418  012354  06DE               	decf	postinc2,f,c
 31419  012356  0E00               	movlw	0
 31420  012358  5ADD               	subwfb	postdec2,f,c
 31421                           
 31422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 31423  01235A  0E01               	movlw	1
 31424  01235C  6E34               	movwf	(btemp+10)^0,c
 31425  01235E  0E00               	movlw	0
 31426  012360  6E35               	movwf	(btemp+11)^0,c
 31427                           
 31428                           ;stkvar	_pp @ sp[(-56)+50]
 31429  012362  0EFA               	movlw	-6
 31430  012364  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31431  01236A  0EFB               	movlw	-5
 31432  01236C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31433  012372  D035               	goto	l15840
 31434  012374                     l15832:
 31435                           
 31436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 31437                           ;stkvar	_n @ sp[(-56)+32]
 31438  012374  0EE8               	movlw	-24
 31439  012376  006F FF8C  F034    	movff	plusw1,btemp+10
 31440  01237C  0EE9               	movlw	-23
 31441  01237E  006F FF8C  F035    	movff	plusw1,btemp+11
 31442  012384  0E54               	movlw	low _dbuf
 31443  012386  2434               	addwf	(btemp+10)^0,w,c
 31444  012388  6ED9               	movwf	fsr2l,c
 31445  01238A  0E03               	movlw	high _dbuf
 31446  01238C  2035               	addwfc	(btemp+11)^0,w,c
 31447  01238E  6EDA               	movwf	fsr2h,c
 31448  012390  0E30               	movlw	48
 31449  012392  6EDF               	movwf	indf2,c
 31450                           
 31451                           ;stkvar	_n @ sp[(-56)+32]
 31452  012394  0EE8               	movlw	-24
 31453  012396  50E3               	movf	plusw1,w,c
 31454  012398  0F01               	addlw	1
 31455  01239A  6E2A               	movwf	btemp^0,c
 31456  01239C  0EE8               	movlw	-24
 31457  01239E  0060  F0AB  FFE3   	movff	btemp,plusw1
 31458  0123A4  6A2A               	clrf	btemp^0,c
 31459  0123A6  0EE9               	movlw	-23
 31460  0123A8  50E3               	movf	plusw1,w,c
 31461  0123AA  202A               	addwfc	btemp^0,w,c
 31462  0123AC  6E2A               	movwf	btemp^0,c
 31463  0123AE  0EE9               	movlw	-23
 31464  0123B0  0060  F0AB  FFE3   	movff	btemp,plusw1
 31465                           
 31466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 31467                           ;stkvar	_w @ sp[(-56)+38]
 31468  0123B6  50E1               	movf	fsr1l,w,c
 31469  0123B8  0FEE               	addlw	-18
 31470  0123BA  6ED9               	movwf	fsr2l,c
 31471  0123BC  50E2               	movf	fsr1h,w,c
 31472  0123BE  6EDA               	movwf	fsr2h,c
 31473  0123C0  0EFF               	movlw	255
 31474  0123C2  22DA               	addwfc	fsr2h,f,c
 31475  0123C4  06DE               	decf	postinc2,f,c
 31476  0123C6  0E00               	movlw	0
 31477  0123C8  5ADD               	subwfb	postdec2,f,c
 31478                           
 31479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 31480                           ;stkvar	_t @ sp[(-56)+52]
 31481  0123CA  50E1               	movf	fsr1l,w,c
 31482  0123CC  0FFC               	addlw	-4
 31483  0123CE  6ED9               	movwf	fsr2l,c
 31484  0123D0  50E2               	movf	fsr1h,w,c
 31485  0123D2  6EDA               	movwf	fsr2h,c
 31486  0123D4  0EFF               	movlw	255
 31487  0123D6  22DA               	addwfc	fsr2h,f,c
 31488  0123D8  06DE               	decf	postinc2,f,c
 31489  0123DA  0E00               	movlw	0
 31490  0123DC  5ADD               	subwfb	postdec2,f,c
 31491  0123DE                     l15840:
 31492                           
 31493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 31494                           ;stkvar	_t @ sp[(-56)+52]
 31495  0123DE  0EFC               	movlw	-4
 31496  0123E0  006F FF8C  F02A    	movff	plusw1,btemp
 31497  0123E6  0EFD               	movlw	-3
 31498  0123E8  50E3               	movf	plusw1,w,c
 31499  0123EA  102A               	iorwf	btemp^0,w,c
 31500  0123EC  A4D8               	btfss	status,2,c
 31501  0123EE  D7C2               	goto	l15832
 31502                           
 31503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 31504                           ;stkvar	_n @ sp[(-56)+32]
 31505  0123F0  0EE8               	movlw	-24
 31506  0123F2  006F FF8C  F034    	movff	plusw1,btemp+10
 31507  0123F8  0EE9               	movlw	-23
 31508  0123FA  006F FF8C  F035    	movff	plusw1,btemp+11
 31509  012400  0E54               	movlw	low _dbuf
 31510  012402  2434               	addwf	(btemp+10)^0,w,c
 31511  012404  6ED9               	movwf	fsr2l,c
 31512  012406  0E03               	movlw	high _dbuf
 31513  012408  2035               	addwfc	(btemp+11)^0,w,c
 31514  01240A  6EDA               	movwf	fsr2h,c
 31515                           
 31516                           ;stkvar	_d @ sp[(-56)+44]
 31517  01240C  0EF4               	movlw	-12
 31518  01240E  50E3               	movf	plusw1,w,c
 31519  012410  0F30               	addlw	48
 31520  012412  6EDF               	movwf	indf2,c
 31521                           
 31522                           ;stkvar	_n @ sp[(-56)+32]
 31523  012414  0EE8               	movlw	-24
 31524  012416  50E3               	movf	plusw1,w,c
 31525  012418  0F01               	addlw	1
 31526  01241A  6E2A               	movwf	btemp^0,c
 31527  01241C  0EE8               	movlw	-24
 31528  01241E  0060  F0AB  FFE3   	movff	btemp,plusw1
 31529  012424  6A2A               	clrf	btemp^0,c
 31530  012426  0EE9               	movlw	-23
 31531  012428  50E3               	movf	plusw1,w,c
 31532  01242A  202A               	addwfc	btemp^0,w,c
 31533  01242C  6E2A               	movwf	btemp^0,c
 31534  01242E  0EE9               	movlw	-23
 31535  012430  0060  F0AB  FFE3   	movff	btemp,plusw1
 31536                           
 31537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 31538                           ;stkvar	_w @ sp[(-56)+38]
 31539  012436  50E1               	movf	fsr1l,w,c
 31540  012438  0FEE               	addlw	-18
 31541  01243A  6ED9               	movwf	fsr2l,c
 31542  01243C  50E2               	movf	fsr1h,w,c
 31543  01243E  6EDA               	movwf	fsr2h,c
 31544  012440  0EFF               	movlw	255
 31545  012442  22DA               	addwfc	fsr2h,f,c
 31546  012444  06DE               	decf	postinc2,f,c
 31547  012446  0E00               	movlw	0
 31548  012448  5ADD               	subwfb	postdec2,f,c
 31549  01244A                     l15848:
 31550                           
 31551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 31552                           ;stkvar	_u @ sp[(-56)+12]
 31553  01244A  0ED4               	movlw	-44
 31554  01244C  006F FF8F FFE6     	movff	plusw1,postinc1
 31555  012452  006F FF8F FFE6     	movff	plusw1,postinc1
 31556  012458  006F FF8F FFE6     	movff	plusw1,postinc1
 31557  01245E  006F FF8F FFE6     	movff	plusw1,postinc1
 31558                           
 31559                           ;stkvar	_l @ sp[(-60)+20]
 31560  012464  0ED8               	movlw	-40
 31561  012466  006F FF8F FFE6     	movff	plusw1,postinc1
 31562  01246C  006F FF8F FFE6     	movff	plusw1,postinc1
 31563  012472  006F FF8F FFE6     	movff	plusw1,postinc1
 31564  012478  006F FF8F FFE6     	movff	plusw1,postinc1
 31565  01247E  ECFF  F0B2         	call	___flmul	;wreg free
 31566  012482  0060  F0AB  FFE6   	movff	btemp,postinc1
 31567  012488  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31568  01248E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31569  012494  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31570                           
 31571                           ;stkvar	_h @ sp[(-60)+24]
 31572  01249A  0EDC               	movlw	-36
 31573  01249C  006F FF8F FFE6     	movff	plusw1,postinc1
 31574  0124A2  006F FF8F FFE6     	movff	plusw1,postinc1
 31575  0124A8  006F FF8F FFE6     	movff	plusw1,postinc1
 31576  0124AE  006F FF8F FFE6     	movff	plusw1,postinc1
 31577  0124B4  EC14  F00F         	call	___flsub	;wreg free
 31578                           
 31579                           ;stkvar	_h @ sp[(-56)+24]
 31580  0124B8  0EE0               	movlw	-32
 31581  0124BA  0060  F0AB  FFE3   	movff	btemp,plusw1
 31582  0124C0  0EE1               	movlw	-31
 31583  0124C2  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31584  0124C8  0EE2               	movlw	-30
 31585  0124CA  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31586  0124D0  0EE3               	movlw	-29
 31587  0124D2  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31588                           
 31589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 31590  0124D8  0E00               	movlw	0
 31591  0124DA  6EE6               	movwf	postinc1,c
 31592  0124DC  0E00               	movlw	0
 31593  0124DE  6EE6               	movwf	postinc1,c
 31594  0124E0  0E20               	movlw	32
 31595  0124E2  6EE6               	movwf	postinc1,c
 31596  0124E4  0E41               	movlw	65
 31597  0124E6  6EE6               	movwf	postinc1,c
 31598                           
 31599                           ;stkvar	_u @ sp[(-60)+12]
 31600  0124E8  0ED0               	movlw	-48
 31601  0124EA  006F FF8F FFE6     	movff	plusw1,postinc1
 31602  0124F0  006F FF8F FFE6     	movff	plusw1,postinc1
 31603  0124F6  006F FF8F FFE6     	movff	plusw1,postinc1
 31604  0124FC  006F FF8F FFE6     	movff	plusw1,postinc1
 31605  012502  EC50  F0BE         	call	___fldiv	;wreg free
 31606                           
 31607                           ;stkvar	_u @ sp[(-56)+12]
 31608  012506  0ED4               	movlw	-44
 31609  012508  0060  F0AB  FFE3   	movff	btemp,plusw1
 31610  01250E  0ED5               	movlw	-43
 31611  012510  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31612  012516  0ED6               	movlw	-42
 31613  012518  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31614  01251E  0ED7               	movlw	-41
 31615  012520  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31616                           
 31617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 31618                           ;stkvar	_ne @ sp[(-56)+46]
 31619  012526  50E1               	movf	fsr1l,w,c
 31620  012528  0FF6               	addlw	-10
 31621  01252A  6ED9               	movwf	fsr2l,c
 31622  01252C  50E2               	movf	fsr1h,w,c
 31623  01252E  6EDA               	movwf	fsr2h,c
 31624  012530  0EFF               	movlw	255
 31625  012532  22DA               	addwfc	fsr2h,f,c
 31626  012534  06DE               	decf	postinc2,f,c
 31627  012536  0E00               	movlw	0
 31628  012538  5ADD               	subwfb	postdec2,f,c
 31629                           
 31630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 31631                           ;stkvar	_i @ sp[(-56)+36]
 31632  01253A  0EEC               	movlw	-20
 31633  01253C  50E3               	movf	plusw1,w,c
 31634  01253E  0F01               	addlw	1
 31635  012540  6E2A               	movwf	btemp^0,c
 31636  012542  0EEC               	movlw	-20
 31637  012544  0060  F0AB  FFE3   	movff	btemp,plusw1
 31638  01254A  6A2A               	clrf	btemp^0,c
 31639  01254C  0EED               	movlw	-19
 31640  01254E  50E3               	movf	plusw1,w,c
 31641  012550  202A               	addwfc	btemp^0,w,c
 31642  012552  6E2A               	movwf	btemp^0,c
 31643  012554  0EED               	movlw	-19
 31644  012556  0060  F0AB  FFE3   	movff	btemp,plusw1
 31645  01255C                     l15856:
 31646                           
 31647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 31648                           ;stkvar	_m @ sp[(-56)+48]
 31649                           ;stkvar	_i @ sp[(-56)+36]
 31650  01255C  50E1               	movf	fsr1l,w,c
 31651  01255E  0FEC               	addlw	-20
 31652  012560  6ED9               	movwf	fsr2l,c
 31653  012562  50E2               	movf	fsr1h,w,c
 31654  012564  6EDA               	movwf	fsr2h,c
 31655  012566  0EFF               	movlw	255
 31656  012568  22DA               	addwfc	fsr2h,f,c
 31657  01256A  0EF8               	movlw	-8
 31658  01256C  50E3               	movf	plusw1,w,c
 31659  01256E  5CDE               	subwf	postinc2,w,c
 31660  012570  50DE               	movf	postinc2,w,c
 31661  012572  0A80               	xorlw	128
 31662  012574  6E2A               	movwf	btemp^0,c
 31663  012576  0EF9               	movlw	-7
 31664  012578  50E3               	movf	plusw1,w,c
 31665  01257A  0A80               	xorlw	128
 31666  01257C  582A               	subwfb	btemp^0,w,c
 31667  01257E  B0D8               	btfsc	status,0,c
 31668  012580  D00E               	goto	u15120
 31669                           
 31670                           ;stkvar	_n @ sp[(-56)+32]
 31671  012582  0EE9               	movlw	-23
 31672  012584  BEE3               	btfsc	plusw1,7,c
 31673  012586  D633               	goto	l15806
 31674  012588  0EE9               	movlw	-23
 31675  01258A  50E3               	movf	plusw1,w,c
 31676  01258C  E108               	bnz	u15120
 31677  01258E  0EE8               	movlw	-24
 31678  012590  006F FF8C  F02A    	movff	plusw1,btemp
 31679  012596  0E4B               	movlw	75
 31680  012598  5E2A               	subwf	btemp^0,f,c
 31681  01259A  A0D8               	btfss	status,0,c
 31682  01259C  D628               	goto	l15806
 31683  01259E                     u15120:
 31684                           
 31685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 31686                           ;stkvar	_pp @ sp[(-56)+50]
 31687  01259E  0EFA               	movlw	-6
 31688  0125A0  006F FF8C  F02A    	movff	plusw1,btemp
 31689  0125A6  0EFB               	movlw	-5
 31690  0125A8  50E3               	movf	plusw1,w,c
 31691  0125AA  102A               	iorwf	btemp^0,w,c
 31692  0125AC  B4D8               	btfsc	status,2,c
 31693  0125AE  A84E               	btfss	_flags^0,4,c
 31694  0125B0  D021               	goto	l15868
 31695                           
 31696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 31697                           ;stkvar	_n @ sp[(-56)+32]
 31698  0125B2  0EE8               	movlw	-24
 31699  0125B4  006F FF8C  F034    	movff	plusw1,btemp+10
 31700  0125BA  0EE9               	movlw	-23
 31701  0125BC  006F FF8C  F035    	movff	plusw1,btemp+11
 31702  0125C2  0E54               	movlw	low _dbuf
 31703  0125C4  2434               	addwf	(btemp+10)^0,w,c
 31704  0125C6  6ED9               	movwf	fsr2l,c
 31705  0125C8  0E03               	movlw	high _dbuf
 31706  0125CA  2035               	addwfc	(btemp+11)^0,w,c
 31707  0125CC  6EDA               	movwf	fsr2h,c
 31708  0125CE  0E2E               	movlw	46
 31709  0125D0  6EDF               	movwf	indf2,c
 31710                           
 31711                           ;stkvar	_n @ sp[(-56)+32]
 31712  0125D2  0EE8               	movlw	-24
 31713  0125D4  50E3               	movf	plusw1,w,c
 31714  0125D6  0F01               	addlw	1
 31715  0125D8  6E2A               	movwf	btemp^0,c
 31716  0125DA  0EE8               	movlw	-24
 31717  0125DC  0060  F0AB  FFE3   	movff	btemp,plusw1
 31718  0125E2  6A2A               	clrf	btemp^0,c
 31719  0125E4  0EE9               	movlw	-23
 31720  0125E6  50E3               	movf	plusw1,w,c
 31721  0125E8  202A               	addwfc	btemp^0,w,c
 31722  0125EA  6E2A               	movwf	btemp^0,c
 31723  0125EC  0EE9               	movlw	-23
 31724  0125EE  0060  F0AB  FFE3   	movff	btemp,plusw1
 31725  0125F4                     l15868:
 31726                           
 31727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 31728                           ;stkvar	_n @ sp[(-56)+32]
 31729  0125F4  0EE8               	movlw	-24
 31730  0125F6  006F FF8C  F034    	movff	plusw1,btemp+10
 31731  0125FC  0EE9               	movlw	-23
 31732  0125FE  006F FF8C  F035    	movff	plusw1,btemp+11
 31733  012604  0E54               	movlw	low _dbuf
 31734  012606  2434               	addwf	(btemp+10)^0,w,c
 31735  012608  6ED9               	movwf	fsr2l,c
 31736  01260A  0E03               	movlw	high _dbuf
 31737  01260C  2035               	addwfc	(btemp+11)^0,w,c
 31738  01260E  6EDA               	movwf	fsr2h,c
 31739  012610  0E00               	movlw	0
 31740  012612  6EDF               	movwf	indf2,c
 31741                           
 31742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 31743                           ;stkvar	_nmode @ sp[(-56)+55]
 31744  012614  0EFF               	movlw	-1
 31745  012616  006F FF8C  F02A    	movff	plusw1,btemp
 31746  01261C  0E65               	movlw	101
 31747  01261E  182A               	xorwf	btemp^0,w,c
 31748  012620  A4D8               	btfss	status,2,c
 31749  012622  EF73  F08C         	goto	l15672
 31750                           
 31751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 31752  012626  0E4F               	movlw	79
 31753  012628  6E34               	movwf	(btemp+10)^0,c
 31754  01262A  0E00               	movlw	0
 31755  01262C  6E35               	movwf	(btemp+11)^0,c
 31756                           
 31757                           ;stkvar	_i @ sp[(-56)+36]
 31758  01262E  0EEC               	movlw	-20
 31759  012630  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31760  012636  0EED               	movlw	-19
 31761  012638  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31762                           
 31763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 31764                           ;stkvar	_i @ sp[(-56)+36]
 31765  01263E  0EEC               	movlw	-20
 31766  012640  006F FF8C  F034    	movff	plusw1,btemp+10
 31767  012646  0EED               	movlw	-19
 31768  012648  006F FF8C  F035    	movff	plusw1,btemp+11
 31769  01264E  0E54               	movlw	low _dbuf
 31770  012650  2434               	addwf	(btemp+10)^0,w,c
 31771  012652  6ED9               	movwf	fsr2l,c
 31772  012654  0E03               	movlw	high _dbuf
 31773  012656  2035               	addwfc	(btemp+11)^0,w,c
 31774  012658  6EDA               	movwf	fsr2h,c
 31775  01265A  0E00               	movlw	0
 31776  01265C  6EDF               	movwf	indf2,c
 31777                           
 31778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 31779                           ;stkvar	_sign @ sp[(-56)+42]
 31780  01265E  0EF2               	movlw	-14
 31781  012660  6AE3               	clrf	plusw1,c
 31782  012662  0EF3               	movlw	-13
 31783  012664  6AE3               	clrf	plusw1,c
 31784                           
 31785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 31786                           ;stkvar	_e @ sp[(-56)+34]
 31787  012666  0EEB               	movlw	-21
 31788  012668  AEE3               	btfss	plusw1,7,c
 31789  01266A  D012               	goto	l15882
 31790                           
 31791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 31792  01266C  0E01               	movlw	1
 31793  01266E  6E34               	movwf	(btemp+10)^0,c
 31794  012670  0E00               	movlw	0
 31795  012672  6E35               	movwf	(btemp+11)^0,c
 31796                           
 31797                           ;stkvar	_sign @ sp[(-56)+42]
 31798  012674  0EF2               	movlw	-14
 31799  012676  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31800  01267C  0EF3               	movlw	-13
 31801  01267E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31802                           
 31803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 31804                           ;stkvar	_e @ sp[(-56)+34]
 31805                           ;stkvar	_e @ sp[(-56)+34]
 31806  012684  0EEA               	movlw	-22
 31807  012686  6CE3               	negf	plusw1,c
 31808  012688  0EEB               	movlw	-21
 31809  01268A  1EE3               	comf	plusw1,f,c
 31810  01268C  B0D8               	btfsc	status,0,c
 31811  01268E  2AE3               	incf	plusw1,f,c
 31812  012690                     l15882:
 31813                           
 31814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 31815  012690  0E02               	movlw	2
 31816  012692  6E34               	movwf	(btemp+10)^0,c
 31817  012694  0E00               	movlw	0
 31818  012696  6E35               	movwf	(btemp+11)^0,c
 31819                           
 31820                           ;stkvar	_p @ sp[(-56)+40]
 31821  012698  0EF0               	movlw	-16
 31822  01269A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31823  0126A0  0EF1               	movlw	-15
 31824  0126A2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31825                           
 31826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 31827  0126A8  D051               	goto	l15894
 31828  0126AA                     l15884:
 31829                           
 31830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 31831                           ;stkvar	_i @ sp[(-56)+36]
 31832  0126AA  50E1               	movf	fsr1l,w,c
 31833  0126AC  0FEC               	addlw	-20
 31834  0126AE  6ED9               	movwf	fsr2l,c
 31835  0126B0  50E2               	movf	fsr1h,w,c
 31836  0126B2  6EDA               	movwf	fsr2h,c
 31837  0126B4  0EFF               	movlw	255
 31838  0126B6  22DA               	addwfc	fsr2h,f,c
 31839  0126B8  06DE               	decf	postinc2,f,c
 31840  0126BA  0E00               	movlw	0
 31841  0126BC  5ADD               	subwfb	postdec2,f,c
 31842                           
 31843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 31844                           ;stkvar	_i @ sp[(-56)+36]
 31845  0126BE  0EEC               	movlw	-20
 31846  0126C0  006F FF8C  F034    	movff	plusw1,btemp+10
 31847  0126C6  0EED               	movlw	-19
 31848  0126C8  006F FF8C  F035    	movff	plusw1,btemp+11
 31849  0126CE  0E54               	movlw	low _dbuf
 31850  0126D0  2434               	addwf	(btemp+10)^0,w,c
 31851  0126D2  6ED9               	movwf	fsr2l,c
 31852  0126D4  0E03               	movlw	high _dbuf
 31853  0126D6  2035               	addwfc	(btemp+11)^0,w,c
 31854  0126D8  6EDA               	movwf	fsr2h,c
 31855  0126DA  0E0A               	movlw	10
 31856  0126DC  6EE6               	movwf	postinc1,c
 31857  0126DE  0E00               	movlw	0
 31858  0126E0  6EE6               	movwf	postinc1,c
 31859                           
 31860                           ;stkvar	_e @ sp[(-58)+34]
 31861  0126E2  0EE8               	movlw	-24
 31862  0126E4  006F FF8F FFE6     	movff	plusw1,postinc1
 31863  0126EA  006F FF8F FFE6     	movff	plusw1,postinc1
 31864  0126F0  EC5B  F0FC         	call	___awmod	;wreg free
 31865  0126F4  502A               	movf	btemp^0,w,c
 31866  0126F6  0F30               	addlw	48
 31867  0126F8  6EDF               	movwf	indf2,c
 31868                           
 31869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 31870  0126FA  0E0A               	movlw	10
 31871  0126FC  6EE6               	movwf	postinc1,c
 31872  0126FE  0E00               	movlw	0
 31873  012700  6EE6               	movwf	postinc1,c
 31874                           
 31875                           ;stkvar	_e @ sp[(-58)+34]
 31876  012702  0EE8               	movlw	-24
 31877  012704  006F FF8F FFE6     	movff	plusw1,postinc1
 31878  01270A  006F FF8F FFE6     	movff	plusw1,postinc1
 31879  012710  EC2C  F0F8         	call	___awdiv	;wreg free
 31880                           
 31881                           ;stkvar	_e @ sp[(-56)+34]
 31882  012714  0EEA               	movlw	-22
 31883  012716  0060  F0AB  FFE3   	movff	btemp,plusw1
 31884  01271C  0EEB               	movlw	-21
 31885  01271E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31886                           
 31887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 31888                           ;stkvar	_p @ sp[(-56)+40]
 31889  012724  50E1               	movf	fsr1l,w,c
 31890  012726  0FF0               	addlw	-16
 31891  012728  6ED9               	movwf	fsr2l,c
 31892  01272A  50E2               	movf	fsr1h,w,c
 31893  01272C  6EDA               	movwf	fsr2h,c
 31894  01272E  0EFF               	movlw	255
 31895  012730  22DA               	addwfc	fsr2h,f,c
 31896  012732  06DE               	decf	postinc2,f,c
 31897  012734  0E00               	movlw	0
 31898  012736  5ADD               	subwfb	postdec2,f,c
 31899                           
 31900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 31901                           ;stkvar	_w @ sp[(-56)+38]
 31902  012738  50E1               	movf	fsr1l,w,c
 31903  01273A  0FEE               	addlw	-18
 31904  01273C  6ED9               	movwf	fsr2l,c
 31905  01273E  50E2               	movf	fsr1h,w,c
 31906  012740  6EDA               	movwf	fsr2h,c
 31907  012742  0EFF               	movlw	255
 31908  012744  22DA               	addwfc	fsr2h,f,c
 31909  012746  06DE               	decf	postinc2,f,c
 31910  012748  0E00               	movlw	0
 31911  01274A  5ADD               	subwfb	postdec2,f,c
 31912  01274C                     l15894:
 31913                           
 31914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 31915                           ;stkvar	_e @ sp[(-56)+34]
 31916  01274C  0EEA               	movlw	-22
 31917  01274E  006F FF8C  F02A    	movff	plusw1,btemp
 31918  012754  0EEB               	movlw	-21
 31919  012756  50E3               	movf	plusw1,w,c
 31920  012758  102A               	iorwf	btemp^0,w,c
 31921  01275A  A4D8               	btfss	status,2,c
 31922  01275C  D7A6               	goto	l15884
 31923                           
 31924                           ;stkvar	_p @ sp[(-56)+40]
 31925  01275E  0EF1               	movlw	-15
 31926  012760  BEE3               	btfsc	plusw1,7,c
 31927  012762  D007               	goto	u15180
 31928  012764  0EF1               	movlw	-15
 31929  012766  50E3               	movf	plusw1,w,c
 31930  012768  E1A0               	bnz	l15884
 31931  01276A  0EF0               	movlw	-16
 31932  01276C  04E3               	decf	plusw1,w,c
 31933  01276E  B0D8               	btfsc	status,0,c
 31934  012770  D79C               	goto	l15884
 31935  012772                     u15180:
 31936                           
 31937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 31938                           ;stkvar	_i @ sp[(-56)+36]
 31939  012772  50E1               	movf	fsr1l,w,c
 31940  012774  0FEC               	addlw	-20
 31941  012776  6ED9               	movwf	fsr2l,c
 31942  012778  50E2               	movf	fsr1h,w,c
 31943  01277A  6EDA               	movwf	fsr2h,c
 31944  01277C  0EFF               	movlw	255
 31945  01277E  22DA               	addwfc	fsr2h,f,c
 31946  012780  06DE               	decf	postinc2,f,c
 31947  012782  0E00               	movlw	0
 31948  012784  5ADD               	subwfb	postdec2,f,c
 31949                           
 31950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 31951                           ;stkvar	_sign @ sp[(-56)+42]
 31952  012786  0EF2               	movlw	-14
 31953  012788  006F FF8C  F02A    	movff	plusw1,btemp
 31954  01278E  0EF3               	movlw	-13
 31955  012790  50E3               	movf	plusw1,w,c
 31956  012792  102A               	iorwf	btemp^0,w,c
 31957  012794  A4D8               	btfss	status,2,c
 31958  012796  D002               	goto	l15904
 31959  012798  0E2B               	movlw	43
 31960  01279A  D001               	goto	L33
 31961  01279C                     l15904:
 31962  01279C  0E2D               	movlw	45
 31963  01279E                     L33:
 31964  01279E  6E34               	movwf	(btemp+10)^0,c
 31965  0127A0  0E00               	movlw	0
 31966  0127A2  6E35               	movwf	(btemp+11)^0,c
 31967                           
 31968                           ;stkvar	_efgtoa$6622 @ sp[(-56)+4]
 31969  0127A4  0ECC               	movlw	-52
 31970  0127A6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31971  0127AC  0ECD               	movlw	-51
 31972  0127AE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31973                           
 31974                           ;stkvar	_efgtoa$6622 @ sp[(-56)+4]
 31975                           ;stkvar	_i @ sp[(-56)+36]
 31976  0127B4  0EEC               	movlw	-20
 31977  0127B6  006F FF8C  F034    	movff	plusw1,btemp+10
 31978  0127BC  0EED               	movlw	-19
 31979  0127BE  006F FF8C  F035    	movff	plusw1,btemp+11
 31980  0127C4  0E54               	movlw	low _dbuf
 31981  0127C6  2434               	addwf	(btemp+10)^0,w,c
 31982  0127C8  6ED9               	movwf	fsr2l,c
 31983  0127CA  0E03               	movlw	high _dbuf
 31984  0127CC  2035               	addwfc	(btemp+11)^0,w,c
 31985  0127CE  6EDA               	movwf	fsr2h,c
 31986  0127D0  0ECC               	movlw	-52
 31987  0127D2  006F FF8F FFDF     	movff	plusw1,indf2
 31988                           
 31989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 31990                           ;stkvar	_w @ sp[(-56)+38]
 31991  0127D8  50E1               	movf	fsr1l,w,c
 31992  0127DA  0FEE               	addlw	-18
 31993  0127DC  6ED9               	movwf	fsr2l,c
 31994  0127DE  50E2               	movf	fsr1h,w,c
 31995  0127E0  6EDA               	movwf	fsr2h,c
 31996  0127E2  0EFF               	movlw	255
 31997  0127E4  22DA               	addwfc	fsr2h,f,c
 31998  0127E6  06DE               	decf	postinc2,f,c
 31999  0127E8  0E00               	movlw	0
 32000  0127EA  5ADD               	subwfb	postdec2,f,c
 32001                           
 32002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 32003                           ;stkvar	_i @ sp[(-56)+36]
 32004  0127EC  50E1               	movf	fsr1l,w,c
 32005  0127EE  0FEC               	addlw	-20
 32006  0127F0  6ED9               	movwf	fsr2l,c
 32007  0127F2  50E2               	movf	fsr1h,w,c
 32008  0127F4  6EDA               	movwf	fsr2h,c
 32009  0127F6  0EFF               	movlw	255
 32010  0127F8  22DA               	addwfc	fsr2h,f,c
 32011  0127FA  06DE               	decf	postinc2,f,c
 32012  0127FC  0E00               	movlw	0
 32013  0127FE  5ADD               	subwfb	postdec2,f,c
 32014  012800  0EBF               	movlw	191
 32015  012802  6E34               	movwf	(btemp+10)^0,c
 32016  012804  0EFF               	movlw	255
 32017  012806  6E35               	movwf	(btemp+11)^0,c
 32018                           
 32019                           ;stkvar	_c @ sp[(-56)+-7]
 32020  012808  0EC1               	movlw	-63
 32021  01280A  50E3               	movf	plusw1,w,c
 32022  01280C  6E32               	movwf	(btemp+8)^0,c
 32023  01280E  6A33               	clrf	(btemp+9)^0,c
 32024  012810  5034               	movf	(btemp+10)^0,w,c
 32025  012812  2632               	addwf	(btemp+8)^0,f,c
 32026  012814  5035               	movf	(btemp+11)^0,w,c
 32027  012816  2233               	addwfc	(btemp+9)^0,f,c
 32028  012818  5033               	movf	(btemp+9)^0,w,c
 32029  01281A  E106               	bnz	u15200
 32030  01281C  0E1A               	movlw	26
 32031  01281E  5C32               	subwf	(btemp+8)^0,w,c
 32032  012820  B0D8               	btfsc	status,0,c
 32033  012822  D002               	goto	u15200
 32034  012824  0E01               	movlw	1
 32035  012826  D001               	goto	u15210
 32036  012828                     u15200:
 32037  012828  0E00               	movlw	0
 32038  01282A                     u15210:
 32039  01282A  6E34               	movwf	(btemp+10)^0,c
 32040  01282C  6A35               	clrf	(btemp+11)^0,c
 32041                           
 32042                           ;stkvar	_efgtoa$6624 @ sp[(-56)+0]
 32043  01282E  0EC8               	movlw	-56
 32044  012830  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32045  012836  0EC9               	movlw	-55
 32046  012838  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32047                           
 32048                           ;stkvar	_efgtoa$6624 @ sp[(-56)+0]
 32049  01283E  0EC8               	movlw	-56
 32050  012840  006F FF8C  F02A    	movff	plusw1,btemp
 32051  012846  0EC9               	movlw	-55
 32052  012848  50E3               	movf	plusw1,w,c
 32053  01284A  102A               	iorwf	btemp^0,w,c
 32054  01284C  A4D8               	btfss	status,2,c
 32055  01284E  D002               	goto	l15920
 32056  012850  0E65               	movlw	101
 32057  012852  D001               	goto	L34
 32058  012854                     l15920:
 32059  012854  0E45               	movlw	69
 32060  012856                     L34:
 32061  012856  6E34               	movwf	(btemp+10)^0,c
 32062  012858  0E00               	movlw	0
 32063  01285A  6E35               	movwf	(btemp+11)^0,c
 32064                           
 32065                           ;stkvar	_efgtoa$6623 @ sp[(-56)+2]
 32066  01285C  0ECA               	movlw	-54
 32067  01285E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32068  012864  0ECB               	movlw	-53
 32069  012866  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32070                           
 32071                           ;stkvar	_efgtoa$6623 @ sp[(-56)+2]
 32072                           ;stkvar	_i @ sp[(-56)+36]
 32073  01286C  0EEC               	movlw	-20
 32074  01286E  006F FF8C  F034    	movff	plusw1,btemp+10
 32075  012874  0EED               	movlw	-19
 32076  012876  006F FF8C  F035    	movff	plusw1,btemp+11
 32077  01287C  0E54               	movlw	low _dbuf
 32078  01287E  2434               	addwf	(btemp+10)^0,w,c
 32079  012880  6ED9               	movwf	fsr2l,c
 32080  012882  0E03               	movlw	high _dbuf
 32081  012884  2035               	addwfc	(btemp+11)^0,w,c
 32082  012886  6EDA               	movwf	fsr2h,c
 32083  012888  0ECA               	movlw	-54
 32084  01288A  006F FF8F FFDF     	movff	plusw1,indf2
 32085                           
 32086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 32087                           ;stkvar	_w @ sp[(-56)+38]
 32088  012890  50E1               	movf	fsr1l,w,c
 32089  012892  0FEE               	addlw	-18
 32090  012894  6ED9               	movwf	fsr2l,c
 32091  012896  50E2               	movf	fsr1h,w,c
 32092  012898  6EDA               	movwf	fsr2h,c
 32093  01289A  0EFF               	movlw	255
 32094  01289C  22DA               	addwfc	fsr2h,f,c
 32095  01289E  06DE               	decf	postinc2,f,c
 32096  0128A0  0E00               	movlw	0
 32097  0128A2  5ADD               	subwfb	postdec2,f,c
 32098                           
 32099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 32100                           ;stkvar	_i @ sp[(-56)+36]
 32101  0128A4  0EEC               	movlw	-20
 32102  0128A6  006F FF8C  F034    	movff	plusw1,btemp+10
 32103  0128AC  0EED               	movlw	-19
 32104  0128AE  006F FF8C  F035    	movff	plusw1,btemp+11
 32105  0128B4  0E54               	movlw	low _dbuf
 32106  0128B6  2434               	addwf	(btemp+10)^0,w,c
 32107  0128B8  6E32               	movwf	(btemp+8)^0,c
 32108  0128BA  0E03               	movlw	high _dbuf
 32109  0128BC  2035               	addwfc	(btemp+11)^0,w,c
 32110  0128BE  6E33               	movwf	(btemp+9)^0,c
 32111  0128C0  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 32112  0128C6  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 32113                           
 32114                           ;stkvar	_n @ sp[(-58)+32]
 32115  0128CC  0E54               	movlw	low _dbuf
 32116  0128CE  6E34               	movwf	(btemp+10)^0,c
 32117  0128D0  0E03               	movlw	high _dbuf
 32118  0128D2  6E35               	movwf	(btemp+11)^0,c
 32119  0128D4  0EE6               	movlw	-26
 32120  0128D6  50E3               	movf	plusw1,w,c
 32121  0128D8  2634               	addwf	(btemp+10)^0,f,c
 32122  0128DA  0EE7               	movlw	-25
 32123  0128DC  50E3               	movf	plusw1,w,c
 32124  0128DE  2235               	addwfc	(btemp+11)^0,f,c
 32125  0128E0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 32126  0128E6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 32127  0128EC  ECB1  F001         	call	_strcpy	;wreg free
 32128  0128F0  EF73  F08C         	goto	l15672
 32129  0128F4                     l2523:
 32130                           
 32131                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 32132  0128F4  0EC1               	movlw	193
 32133  0128F6  26E1               	addwf	fsr1l,f,c
 32134  0128F8  0EFF               	movlw	255
 32135  0128FA  22E2               	addwfc	fsr1h,f,c
 32136  0128FC  0012               	return		;funcret
 32137  0128FE                     __end_of_efgtoa:
 32138                           	opt callstack 0
 32139                           
 32140 ;; *************** function _tolower *****************
 32141 ;; Defined at:
 32142 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 32143 ;; Parameters:    Size  Location     Type
 32144 ;;  c               2  [STACK] int 
 32145 ;; Auto vars:     Size  Location     Type
 32146 ;;		None
 32147 ;; Return value:  Size  Location     Type
 32148 ;;                  2  [STACK] int 
 32149 ;; Registers used:
 32150 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 32151 ;; Tracked objects:
 32152 ;;		On entry : 0/0
 32153 ;;		On exit  : 0/0
 32154 ;;		Unchanged: 0/0
 32155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32160 ;;Total ram usage:        0 bytes
 32161 ;; Hardware stack levels used:    1
 32162 ;; Hardware stack levels required when called:   16
 32163 ;; This function calls:
 32164 ;;		_isupper
 32165 ;; This function is called by:
 32166 ;;		_efgtoa
 32167 ;;		_vfpfcnvrt
 32168 ;; This function uses a reentrant model
 32169 ;;
 32170                           
 32171                           	psect	text104
 32172  0011B4                     __ptext104:
 32173                           	opt callstack 0
 32174  0011B4                     _tolower:
 32175                           	opt callstack 0
 32176                           
 32177                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32178  0011B4  52E6               	movf	postinc1,f,c
 32179  0011B6  52E6               	movf	postinc1,f,c
 32180                           
 32181                           ;stkvar	_c @ sp[(-2)+-2]
 32182                           
 32183                           ;incstack = 0
 32184 ;; hardware stack exceeded
 32185  0011B8  0EFC               	movlw	-4
 32186  0011BA  50E3               	movf	plusw1,w,c
 32187  0011BC  0FBF               	addlw	191
 32188  0011BE  6E34               	movwf	(btemp+10)^0,c
 32189  0011C0  0EFD               	movlw	-3
 32190  0011C2  006F FF8C  F035    	movff	plusw1,btemp+11
 32191  0011C8  0EFF               	movlw	255
 32192  0011CA  2235               	addwfc	(btemp+11)^0,f,c
 32193  0011CC  5035               	movf	(btemp+11)^0,w,c
 32194  0011CE  E106               	bnz	u7840
 32195  0011D0  0E1A               	movlw	26
 32196  0011D2  5C34               	subwf	(btemp+10)^0,w,c
 32197  0011D4  B0D8               	btfsc	status,0,c
 32198  0011D6  D002               	goto	u7840
 32199  0011D8  0E01               	movlw	1
 32200  0011DA  D001               	goto	u7850
 32201  0011DC                     u7840:
 32202  0011DC  0E00               	movlw	0
 32203  0011DE                     u7850:
 32204  0011DE  6E34               	movwf	(btemp+10)^0,c
 32205  0011E0  6A35               	clrf	(btemp+11)^0,c
 32206                           
 32207                           ;stkvar	_tolower$7578 @ sp[(-2)+0]
 32208  0011E2  0EFE               	movlw	-2
 32209  0011E4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32210  0011EA  0EFF               	movlw	-1
 32211  0011EC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32212                           
 32213                           ;stkvar	_tolower$7578 @ sp[(-2)+0]
 32214  0011F2  0EFE               	movlw	-2
 32215  0011F4  006F FF8C  F02A    	movff	plusw1,btemp
 32216  0011FA  0EFF               	movlw	-1
 32217  0011FC  50E3               	movf	plusw1,w,c
 32218  0011FE  102A               	iorwf	btemp^0,w,c
 32219  001200  B4D8               	btfsc	status,2,c
 32220  001202  D00D               	goto	l10134
 32221                           
 32222                           ;stkvar	_c @ sp[(-2)+-2]
 32223  001204  0EFC               	movlw	-4
 32224  001206  006F FF8C  F02A    	movff	plusw1,btemp
 32225  00120C  0EFD               	movlw	-3
 32226  00120E  006F FF8C  F02B    	movff	plusw1,btemp+1
 32227  001214  0E20               	movlw	32
 32228  001216  122A               	iorwf	btemp^0,f,c
 32229  001218  0E00               	movlw	0
 32230  00121A  122B               	iorwf	(btemp+1)^0,f,c
 32231  00121C  D008               	goto	l3825
 32232  00121E                     l10134:
 32233                           
 32234                           ;stkvar	_c @ sp[(-2)+-2]
 32235  00121E  0EFC               	movlw	-4
 32236  001220  006F FF8C  F02A    	movff	plusw1,btemp
 32237  001226  0EFD               	movlw	-3
 32238  001228  006F FF8C  F02B    	movff	plusw1,btemp+1
 32239  00122E                     l3825:
 32240                           
 32241                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 32242  00122E  52E5               	movf	postdec1,f,c
 32243  001230  52E5               	movf	postdec1,f,c
 32244  001232  52E5               	movf	postdec1,f,c
 32245  001234  52E5               	movf	postdec1,f,c
 32246  001236  0012               	return		;funcret
 32247  001238                     __end_of_tolower:
 32248                           	opt callstack 0
 32249                           
 32250 ;; *************** function _isupper *****************
 32251 ;; Defined at:
 32252 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 32253 ;; Parameters:    Size  Location     Type
 32254 ;;  c               2  [STACK] int 
 32255 ;; Auto vars:     Size  Location     Type
 32256 ;;		None
 32257 ;; Return value:  Size  Location     Type
 32258 ;;                  2  [STACK] int 
 32259 ;; Registers used:
 32260 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 32261 ;; Tracked objects:
 32262 ;;		On entry : 0/0
 32263 ;;		On exit  : 0/0
 32264 ;;		Unchanged: 0/0
 32265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32270 ;;Total ram usage:        0 bytes
 32271 ;; Hardware stack levels used:    1
 32272 ;; Hardware stack levels required when called:   15
 32273 ;; This function calls:
 32274 ;;		Nothing
 32275 ;; This function is called by:
 32276 ;;		_efgtoa
 32277 ;;		_xtoa
 32278 ;;		_vfpfcnvrt
 32279 ;;		_tolower
 32280 ;; This function uses a reentrant model
 32281 ;;
 32282                           
 32283                           	psect	text105
 32284  0022EA                     __ptext105:
 32285                           	opt callstack 0
 32286  0022EA                     _isupper:
 32287                           	opt callstack 0
 32288                           
 32289                           ;stkvar	_c @ sp[(0)+-2]
 32290                           
 32291                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32292                           ;incstack = 0
 32293 ;; hardware stack exceeded
 32294  0022EA  0EFE               	movlw	-2
 32295  0022EC  50E3               	movf	plusw1,w,c
 32296  0022EE  0FBF               	addlw	191
 32297  0022F0  6E34               	movwf	(btemp+10)^0,c
 32298  0022F2  0EFF               	movlw	-1
 32299  0022F4  006F FF8C  F035    	movff	plusw1,btemp+11
 32300  0022FA  0EFF               	movlw	255
 32301  0022FC  2235               	addwfc	(btemp+11)^0,f,c
 32302  0022FE  5035               	movf	(btemp+11)^0,w,c
 32303  002300  E106               	bnz	u7180
 32304  002302  0E1A               	movlw	26
 32305  002304  5C34               	subwf	(btemp+10)^0,w,c
 32306  002306  B0D8               	btfsc	status,0,c
 32307  002308  D002               	goto	u7180
 32308  00230A  0E01               	movlw	1
 32309  00230C  D001               	goto	u7190
 32310  00230E                     u7180:
 32311  00230E  0E00               	movlw	0
 32312  002310                     u7190:
 32313  002310  6E2A               	movwf	btemp^0,c
 32314  002312  6A2B               	clrf	(btemp+1)^0,c
 32315                           
 32316                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 32317  002314  52E5               	movf	postdec1,f,c
 32318  002316  52E5               	movf	postdec1,f,c
 32319  002318  0012               	return		;funcret
 32320  00231A                     __end_of_isupper:
 32321                           	opt callstack 0
 32322                           
 32323 ;; *************** function _strcpy *****************
 32324 ;; Defined at:
 32325 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 32326 ;; Parameters:    Size  Location     Type
 32327 ;;  dest            2  [STACK] PTR unsigned char 
 32328 ;;		 -> dbuf(80), 
 32329 ;;  src             2  [STACK] PTR const unsigned char 
 32330 ;;		 -> STR_101(4), STR_100(4), STR_97(4), STR_96(4), 
 32331 ;;		 -> dbuf(80), 
 32332 ;; Auto vars:     Size  Location     Type
 32333 ;;  d               2  [STACK] PTR unsigned char 
 32334 ;;		 -> dbuf(80), 
 32335 ;;  s               2  [STACK] PTR const unsigned char 
 32336 ;;		 -> STR_101(4), STR_100(4), STR_97(4), STR_96(4), 
 32337 ;;		 -> dbuf(80), 
 32338 ;; Return value:  Size  Location     Type
 32339 ;;                  2  [STACK] PTR unsigned char 
 32340 ;; Registers used:
 32341 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 32342 ;; Tracked objects:
 32343 ;;		On entry : 0/0
 32344 ;;		On exit  : 0/0
 32345 ;;		Unchanged: 0/0
 32346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32351 ;;Total ram usage:        0 bytes
 32352 ;; Hardware stack levels used:    1
 32353 ;; Hardware stack levels required when called:   15
 32354 ;; This function calls:
 32355 ;;		Nothing
 32356 ;; This function is called by:
 32357 ;;		_efgtoa
 32358 ;; This function uses a reentrant model
 32359 ;;
 32360                           
 32361                           	psect	text106
 32362  000362                     __ptext106:
 32363                           	opt callstack 0
 32364  000362                     _strcpy:
 32365                           	opt callstack 0
 32366                           
 32367                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32368  000362  52E6               	movf	postinc1,f,c
 32369  000364  52E6               	movf	postinc1,f,c
 32370  000366  52E6               	movf	postinc1,f,c
 32371  000368  52E6               	movf	postinc1,f,c
 32372                           
 32373                           ;stkvar	_src @ sp[(-4)+-4]
 32374                           
 32375                           ;incstack = 0
 32376 ;; hardware stack exceeded
 32377  00036A  0EF8               	movlw	-8
 32378  00036C  006F FF8C  F034    	movff	plusw1,btemp+10
 32379  000372  0EF9               	movlw	-7
 32380  000374  006F FF8C  F035    	movff	plusw1,btemp+11
 32381                           
 32382                           ;stkvar	_s @ sp[(-4)+2]
 32383  00037A  0EFF               	movlw	-1
 32384  00037C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32385  000382  0EFE               	movlw	-2
 32386  000384  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32387                           
 32388                           ;stkvar	_dest @ sp[(-4)+-2]
 32389  00038A  0EFA               	movlw	-6
 32390  00038C  006F FF8C  F034    	movff	plusw1,btemp+10
 32391  000392  0EFB               	movlw	-5
 32392  000394  006F FF8C  F035    	movff	plusw1,btemp+11
 32393                           
 32394                           ;stkvar	_d @ sp[(-4)+0]
 32395  00039A  0EFD               	movlw	-3
 32396  00039C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32397  0003A2  0EFC               	movlw	-4
 32398  0003A4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32399  0003AA                     l15456:
 32400                           
 32401                           ;stkvar	_s @ sp[(-4)+2]
 32402  0003AA  50E1               	movf	fsr1l,w,c
 32403  0003AC  0FFE               	addlw	-2
 32404  0003AE  6ED9               	movwf	fsr2l,c
 32405  0003B0  50E2               	movf	fsr1h,w,c
 32406  0003B2  6EDA               	movwf	fsr2h,c
 32407  0003B4  0EFF               	movlw	255
 32408  0003B6  22DA               	addwfc	fsr2h,f,c
 32409  0003B8  006F FF7C  F034    	movff	indf2,btemp+10
 32410  0003BE  0E01               	movlw	1
 32411  0003C0  26DE               	addwf	postinc2,f,c
 32412  0003C2  006F FF7C  F035    	movff	indf2,btemp+11
 32413  0003C8  0E00               	movlw	0
 32414  0003CA  22DD               	addwfc	postdec2,f,c
 32415  0003CC  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 32416  0003D2  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 32417  0003D8  0E00               	movlw	low (__mediumconst shr (0+16))
 32418  0003DA  6EF8               	movwf	tblptru,c
 32419                           
 32420                           ;stkvar	_d @ sp[(-4)+0]
 32421  0003DC  50E1               	movf	fsr1l,w,c
 32422  0003DE  0FFC               	addlw	-4
 32423  0003E0  6ED9               	movwf	fsr2l,c
 32424  0003E2  50E2               	movf	fsr1h,w,c
 32425  0003E4  6EDA               	movwf	fsr2h,c
 32426  0003E6  0EFF               	movlw	255
 32427  0003E8  22DA               	addwfc	fsr2h,f,c
 32428  0003EA  006F FF7C  F034    	movff	indf2,btemp+10
 32429  0003F0  0E01               	movlw	1
 32430  0003F2  26DE               	addwf	postinc2,f,c
 32431  0003F4  006F FF7C  F035    	movff	indf2,btemp+11
 32432  0003FA  0E00               	movlw	0
 32433  0003FC  22DD               	addwfc	postdec2,f,c
 32434  0003FE  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 32435  000404  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 32436  00040A  0E1F               	movlw	(high __ramtop+-1)
 32437  00040C  64F7               	cpfsgt	tblptrh,c
 32438  00040E  D003               	bra	u14367
 32439  000410  0008               	tblrd		*
 32440  000412  50F5               	movf	tablat,w,c
 32441  000414  D007               	bra	u14360
 32442  000416                     u14367:
 32443  000416  006F FFDB FFE9     	movff	tblptrl,fsr0l
 32444  00041C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 32445  000422  50EF               	movf	indf0,w,c
 32446  000424                     u14360:
 32447  000424  6EDF               	movwf	indf2,c
 32448  000426  50DF               	movf	indf2,w,c
 32449  000428  A4D8               	btfss	status,2,c
 32450  00042A  D7BF               	goto	l15456
 32451                           
 32452                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 32453  00042C  0EF8               	movlw	248
 32454  00042E  26E1               	addwf	fsr1l,f,c
 32455  000430  0EFF               	movlw	255
 32456  000432  22E2               	addwfc	fsr1h,f,c
 32457  000434  0012               	return		;funcret
 32458  000436                     __end_of_strcpy:
 32459                           	opt callstack 0
 32460                           
 32461 ;; *************** function _floorf *****************
 32462 ;; Defined at:
 32463 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 32464 ;; Parameters:    Size  Location     Type
 32465 ;;  x               4  [STACK] float 
 32466 ;; Auto vars:     Size  Location     Type
 32467 ;;  u               4  [STACK] struct .
 32468 ;;  m               4  [STACK] unsigned long 
 32469 ;;  e               2  [STACK] int 
 32470 ;; Return value:  Size  Location     Type
 32471 ;;                  4  [STACK] float 
 32472 ;; Registers used:
 32473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 32474 ;; Tracked objects:
 32475 ;;		On entry : 0/0
 32476 ;;		On exit  : 0/0
 32477 ;;		Unchanged: 0/0
 32478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32483 ;;Total ram usage:        0 bytes
 32484 ;; Hardware stack levels used:    1
 32485 ;; Hardware stack levels required when called:   15
 32486 ;; This function calls:
 32487 ;;		Nothing
 32488 ;; This function is called by:
 32489 ;;		_efgtoa
 32490 ;; This function uses a reentrant model
 32491 ;;
 32492                           
 32493                           	psect	text107
 32494  01A4CE                     __ptext107:
 32495                           	opt callstack 0
 32496  01A4CE                     _floorf:
 32497                           	opt callstack 0
 32498                           
 32499                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 32500  01A4CE  0E0A               	movlw	10
 32501  01A4D0  26E1               	addwf	fsr1l,f,c
 32502  01A4D2  0E00               	movlw	0
 32503  01A4D4  22E2               	addwfc	fsr1h,f,c
 32504                           
 32505                           ;incstack = 0
 32506 ;; hardware stack exceeded
 32507  01A4D6  0060  F1D0  F032   	movff	floorf@F524,btemp+8
 32508  01A4DC  0060  F1D4  F033   	movff	floorf@F524+1,btemp+9
 32509  01A4E2  0060  F1D8  F034   	movff	floorf@F524+2,btemp+10
 32510  01A4E8  0060  F1DC  F035   	movff	floorf@F524+3,btemp+11
 32511                           
 32512                           ;stkvar	_u @ sp[(-10)+0]
 32513  01A4EE  0EF6               	movlw	-10
 32514  01A4F0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32515  01A4F6  0EF7               	movlw	-9
 32516  01A4F8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32517  01A4FE  0EF8               	movlw	-8
 32518  01A500  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32519  01A506  0EF9               	movlw	-7
 32520  01A508  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32521                           
 32522                           ;stkvar	_x @ sp[(-10)+-4]
 32523  01A50E  0EF2               	movlw	-14
 32524  01A510  006F FF8C  F032    	movff	plusw1,btemp+8
 32525  01A516  0EF3               	movlw	-13
 32526  01A518  006F FF8C  F033    	movff	plusw1,btemp+9
 32527  01A51E  0EF4               	movlw	-12
 32528  01A520  006F FF8C  F034    	movff	plusw1,btemp+10
 32529  01A526  0EF5               	movlw	-11
 32530  01A528  006F FF8C  F035    	movff	plusw1,btemp+11
 32531                           
 32532                           ;stkvar	_u @ sp[(-10)+0]
 32533  01A52E  0EF6               	movlw	-10
 32534  01A530  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32535  01A536  0EF7               	movlw	-9
 32536  01A538  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32537  01A53E  0EF8               	movlw	-8
 32538  01A540  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32539  01A546  0EF9               	movlw	-7
 32540  01A548  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32541  01A54E  0E81               	movlw	129
 32542  01A550  6E34               	movwf	(btemp+10)^0,c
 32543  01A552  0EFF               	movlw	255
 32544  01A554  6E35               	movwf	(btemp+11)^0,c
 32545                           
 32546                           ;stkvar	_u @ sp[(-10)+0]
 32547  01A556  0EF6               	movlw	-10
 32548  01A558  006F FF8C  F02E    	movff	plusw1,btemp+4
 32549  01A55E  0EF7               	movlw	-9
 32550  01A560  006F FF8C  F02F    	movff	plusw1,btemp+5
 32551  01A566  0EF8               	movlw	-8
 32552  01A568  006F FF8C  F030    	movff	plusw1,btemp+6
 32553  01A56E  0EF9               	movlw	-7
 32554  01A570  006F FF8C  F031    	movff	plusw1,btemp+7
 32555  01A576  0E18               	movlw	24
 32556  01A578  D005               	goto	u7870
 32557  01A57A                     u7875:
 32558  01A57A  90D8               	bcf	status,0,c
 32559  01A57C  3231               	rrcf	(btemp+7)^0,f,c
 32560  01A57E  3230               	rrcf	(btemp+6)^0,f,c
 32561  01A580  322F               	rrcf	(btemp+5)^0,f,c
 32562  01A582  322E               	rrcf	(btemp+4)^0,f,c
 32563  01A584                     u7870:
 32564  01A584  2EE8               	decfsz	wreg,f,c
 32565  01A586  D7F9               	goto	u7875
 32566  01A588  0060  F0B8  F032   	movff	btemp+4,btemp+8
 32567  01A58E  0060  F0BC  F033   	movff	btemp+5,btemp+9
 32568  01A594  0EFF               	movlw	255
 32569  01A596  1632               	andwf	(btemp+8)^0,f,c
 32570  01A598  0E00               	movlw	0
 32571  01A59A  1633               	andwf	(btemp+9)^0,f,c
 32572  01A59C  5034               	movf	(btemp+10)^0,w,c
 32573  01A59E  2632               	addwf	(btemp+8)^0,f,c
 32574  01A5A0  5035               	movf	(btemp+11)^0,w,c
 32575  01A5A2  2233               	addwfc	(btemp+9)^0,f,c
 32576                           
 32577                           ;stkvar	_e @ sp[(-10)+8]
 32578  01A5A4  0EFE               	movlw	-2
 32579  01A5A6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32580  01A5AC  0EFF               	movlw	-1
 32581  01A5AE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32582                           
 32583                           ;stkvar	_e @ sp[(-10)+8]
 32584  01A5B4  0EFF               	movlw	-1
 32585  01A5B6  BEE3               	btfsc	plusw1,7,c
 32586  01A5B8  D019               	goto	l10148
 32587  01A5BA  0EFF               	movlw	-1
 32588  01A5BC  50E3               	movf	plusw1,w,c
 32589  01A5BE  E108               	bnz	u7880
 32590  01A5C0  0EFE               	movlw	-2
 32591  01A5C2  006F FF8C  F02A    	movff	plusw1,btemp
 32592  01A5C8  0E17               	movlw	23
 32593  01A5CA  5E2A               	subwf	btemp^0,f,c
 32594  01A5CC  A0D8               	btfss	status,0,c
 32595  01A5CE  D00E               	goto	l10148
 32596  01A5D0                     u7880:
 32597                           
 32598                           ;stkvar	_x @ sp[(-10)+-4]
 32599  01A5D0  0EF2               	movlw	-14
 32600  01A5D2  006F FF8C  F02A    	movff	plusw1,btemp
 32601  01A5D8  0EF3               	movlw	-13
 32602  01A5DA  006F FF8C  F02B    	movff	plusw1,btemp+1
 32603  01A5E0  0EF4               	movlw	-12
 32604  01A5E2  006F FF8C  F02C    	movff	plusw1,btemp+2
 32605  01A5E8  0EF5               	movlw	-11
 32606  01A5EA  D11F               	goto	L35
 32607  01A5EC                     l10148:
 32608                           
 32609                           ;stkvar	_e @ sp[(-10)+8]
 32610  01A5EC  0EFF               	movlw	-1
 32611  01A5EE  BEE3               	btfsc	plusw1,7,c
 32612  01A5F0  D0B4               	goto	l10164
 32613                           
 32614                           ;stkvar	_e @ sp[(-10)+8]
 32615  01A5F2  0EFE               	movlw	-2
 32616  01A5F4  006F FF8C  F035    	movff	plusw1,btemp+11
 32617  01A5FA  0EFF               	movlw	255
 32618  01A5FC  6E2E               	movwf	(btemp+4)^0,c
 32619  01A5FE  0EFF               	movlw	255
 32620  01A600  6E2F               	movwf	(btemp+5)^0,c
 32621  01A602  0E7F               	movlw	127
 32622  01A604  6E30               	movwf	(btemp+6)^0,c
 32623  01A606  0E00               	movlw	0
 32624  01A608  6E31               	movwf	(btemp+7)^0,c
 32625  01A60A                     u7905:
 32626  01A60A  6635               	tstfsz	(btemp+11)^0,c
 32627  01A60C  D001               	goto	u7906
 32628  01A60E  D007               	goto	u7907
 32629  01A610                     u7906:
 32630  01A610  3431               	rlcf	(btemp+7)^0,w,c
 32631  01A612  3231               	rrcf	(btemp+7)^0,f,c
 32632  01A614  3230               	rrcf	(btemp+6)^0,f,c
 32633  01A616  322F               	rrcf	(btemp+5)^0,f,c
 32634  01A618  322E               	rrcf	(btemp+4)^0,f,c
 32635  01A61A  2E35               	decfsz	(btemp+11)^0,f,c
 32636  01A61C  D7F6               	goto	u7905
 32637  01A61E                     u7907:
 32638                           
 32639                           ;stkvar	_m @ sp[(-10)+4]
 32640  01A61E  0EFA               	movlw	-6
 32641  01A620  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 32642  01A626  0EFB               	movlw	-5
 32643  01A628  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 32644  01A62E  0EFC               	movlw	-4
 32645  01A630  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 32646  01A636  0EFD               	movlw	-3
 32647  01A638  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 32648                           
 32649                           ;stkvar	_m @ sp[(-10)+4]
 32650                           ;stkvar	_u @ sp[(-10)+0]
 32651  01A63E  0EF6               	movlw	-10
 32652  01A640  006F FF8C  F032    	movff	plusw1,btemp+8
 32653  01A646  0EF7               	movlw	-9
 32654  01A648  006F FF8C  F033    	movff	plusw1,btemp+9
 32655  01A64E  0EF8               	movlw	-8
 32656  01A650  006F FF8C  F034    	movff	plusw1,btemp+10
 32657  01A656  0EF9               	movlw	-7
 32658  01A658  006F FF8C  F035    	movff	plusw1,btemp+11
 32659  01A65E  0EFA               	movlw	-6
 32660  01A660  50E3               	movf	plusw1,w,c
 32661  01A662  1632               	andwf	(btemp+8)^0,f,c
 32662  01A664  0EFB               	movlw	-5
 32663  01A666  50E3               	movf	plusw1,w,c
 32664  01A668  1633               	andwf	(btemp+9)^0,f,c
 32665  01A66A  0EFC               	movlw	-4
 32666  01A66C  50E3               	movf	plusw1,w,c
 32667  01A66E  1634               	andwf	(btemp+10)^0,f,c
 32668  01A670  0EFD               	movlw	-3
 32669  01A672  50E3               	movf	plusw1,w,c
 32670  01A674  1635               	andwf	(btemp+11)^0,f,c
 32671  01A676  5032               	movf	(btemp+8)^0,w,c
 32672  01A678  1033               	iorwf	(btemp+9)^0,w,c
 32673  01A67A  1034               	iorwf	(btemp+10)^0,w,c
 32674  01A67C  1035               	iorwf	(btemp+11)^0,w,c
 32675  01A67E  B4D8               	btfsc	status,2,c
 32676  01A680  D7A7               	goto	u7880
 32677                           
 32678                           ;stkvar	_u @ sp[(-10)+0]
 32679  01A682  0EF6               	movlw	-10
 32680  01A684  006F FF8C  F032    	movff	plusw1,btemp+8
 32681  01A68A  0EF7               	movlw	-9
 32682  01A68C  006F FF8C  F033    	movff	plusw1,btemp+9
 32683  01A692  0EF8               	movlw	-8
 32684  01A694  006F FF8C  F034    	movff	plusw1,btemp+10
 32685  01A69A  0EF9               	movlw	-7
 32686  01A69C  006F FF8C  F035    	movff	plusw1,btemp+11
 32687  01A6A2  0E20               	movlw	32
 32688  01A6A4  D005               	goto	u7920
 32689  01A6A6                     u7925:
 32690  01A6A6  90D8               	bcf	status,0,c
 32691  01A6A8  3235               	rrcf	(btemp+11)^0,f,c
 32692  01A6AA  3234               	rrcf	(btemp+10)^0,f,c
 32693  01A6AC  3233               	rrcf	(btemp+9)^0,f,c
 32694  01A6AE  3232               	rrcf	(btemp+8)^0,f,c
 32695  01A6B0                     u7920:
 32696  01A6B0  2EE8               	decfsz	wreg,f,c
 32697  01A6B2  D7F9               	goto	u7925
 32698  01A6B4  5032               	movf	(btemp+8)^0,w,c
 32699  01A6B6  B4D8               	btfsc	status,2,c
 32700  01A6B8  D028               	goto	l10162
 32701                           
 32702                           ;stkvar	_m @ sp[(-10)+4]
 32703                           ;stkvar	_u @ sp[(-10)+0]
 32704  01A6BA  0EF6               	movlw	-10
 32705  01A6BC  50E3               	movf	plusw1,w,c
 32706  01A6BE  6E2A               	movwf	btemp^0,c
 32707  01A6C0  0EFA               	movlw	-6
 32708  01A6C2  50E3               	movf	plusw1,w,c
 32709  01A6C4  262A               	addwf	btemp^0,f,c
 32710  01A6C6  0EF6               	movlw	-10
 32711  01A6C8  0060  F0AB  FFE3   	movff	btemp,plusw1
 32712  01A6CE  0EF7               	movlw	-9
 32713  01A6D0  50E3               	movf	plusw1,w,c
 32714  01A6D2  6E2A               	movwf	btemp^0,c
 32715  01A6D4  0EFB               	movlw	-5
 32716  01A6D6  50E3               	movf	plusw1,w,c
 32717  01A6D8  222A               	addwfc	btemp^0,f,c
 32718  01A6DA  0EF7               	movlw	-9
 32719  01A6DC  0060  F0AB  FFE3   	movff	btemp,plusw1
 32720  01A6E2  0EF8               	movlw	-8
 32721  01A6E4  50E3               	movf	plusw1,w,c
 32722  01A6E6  6E2A               	movwf	btemp^0,c
 32723  01A6E8  0EFC               	movlw	-4
 32724  01A6EA  50E3               	movf	plusw1,w,c
 32725  01A6EC  222A               	addwfc	btemp^0,f,c
 32726  01A6EE  0EF8               	movlw	-8
 32727  01A6F0  0060  F0AB  FFE3   	movff	btemp,plusw1
 32728  01A6F6  0EF9               	movlw	-7
 32729  01A6F8  50E3               	movf	plusw1,w,c
 32730  01A6FA  6E2A               	movwf	btemp^0,c
 32731  01A6FC  0EFD               	movlw	-3
 32732  01A6FE  50E3               	movf	plusw1,w,c
 32733  01A700  222A               	addwfc	btemp^0,f,c
 32734  01A702  0EF9               	movlw	-7
 32735  01A704  0060  F0AB  FFE3   	movff	btemp,plusw1
 32736  01A70A                     l10162:
 32737                           
 32738                           ;stkvar	_m @ sp[(-10)+4]
 32739  01A70A  0EFA               	movlw	-6
 32740  01A70C  006F FF8C  F032    	movff	plusw1,btemp+8
 32741  01A712  0EFB               	movlw	-5
 32742  01A714  006F FF8C  F033    	movff	plusw1,btemp+9
 32743  01A71A  0EFC               	movlw	-4
 32744  01A71C  006F FF8C  F034    	movff	plusw1,btemp+10
 32745  01A722  0EFD               	movlw	-3
 32746  01A724  006F FF8C  F035    	movff	plusw1,btemp+11
 32747  01A72A  1C32               	comf	(btemp+8)^0,w,c
 32748  01A72C  6E2E               	movwf	(btemp+4)^0,c
 32749  01A72E  1C33               	comf	(btemp+9)^0,w,c
 32750  01A730  6E2F               	movwf	(btemp+5)^0,c
 32751  01A732  1C34               	comf	(btemp+10)^0,w,c
 32752  01A734  6E30               	movwf	(btemp+6)^0,c
 32753  01A736  1C35               	comf	(btemp+11)^0,w,c
 32754  01A738  6E31               	movwf	(btemp+7)^0,c
 32755                           
 32756                           ;stkvar	_u @ sp[(-10)+0]
 32757  01A73A  50E1               	movf	fsr1l,w,c
 32758  01A73C  0FF6               	addlw	-10
 32759  01A73E  6ED9               	movwf	fsr2l,c
 32760  01A740  50E2               	movf	fsr1h,w,c
 32761  01A742  6EDA               	movwf	fsr2h,c
 32762  01A744  0EFF               	movlw	255
 32763  01A746  22DA               	addwfc	fsr2h,f,c
 32764  01A748  502E               	movf	(btemp+4)^0,w,c
 32765  01A74A  16DE               	andwf	postinc2,f,c
 32766  01A74C  502F               	movf	(btemp+5)^0,w,c
 32767  01A74E  16DE               	andwf	postinc2,f,c
 32768  01A750  5030               	movf	(btemp+6)^0,w,c
 32769  01A752  16DE               	andwf	postinc2,f,c
 32770  01A754  5031               	movf	(btemp+7)^0,w,c
 32771  01A756  16DE               	andwf	postinc2,f,c
 32772  01A758  D05B               	goto	l10172
 32773  01A75A                     l10164:
 32774                           
 32775                           ;stkvar	_u @ sp[(-10)+0]
 32776  01A75A  0EF6               	movlw	-10
 32777  01A75C  006F FF8C  F032    	movff	plusw1,btemp+8
 32778  01A762  0EF7               	movlw	-9
 32779  01A764  006F FF8C  F033    	movff	plusw1,btemp+9
 32780  01A76A  0EF8               	movlw	-8
 32781  01A76C  006F FF8C  F034    	movff	plusw1,btemp+10
 32782  01A772  0EF9               	movlw	-7
 32783  01A774  006F FF8C  F035    	movff	plusw1,btemp+11
 32784  01A77A  0E20               	movlw	32
 32785  01A77C  D005               	goto	u7940
 32786  01A77E                     u7945:
 32787  01A77E  90D8               	bcf	status,0,c
 32788  01A780  3235               	rrcf	(btemp+11)^0,f,c
 32789  01A782  3234               	rrcf	(btemp+10)^0,f,c
 32790  01A784  3233               	rrcf	(btemp+9)^0,f,c
 32791  01A786  3232               	rrcf	(btemp+8)^0,f,c
 32792  01A788                     u7940:
 32793  01A788  2EE8               	decfsz	wreg,f,c
 32794  01A78A  D7F9               	goto	u7945
 32795  01A78C  6632               	tstfsz	(btemp+8)^0,c
 32796  01A78E  D009               	goto	l10168
 32797                           
 32798                           ;stkvar	_u @ sp[(-10)+0]
 32799  01A790  0EF6               	movlw	-10
 32800  01A792  6AE3               	clrf	plusw1,c
 32801  01A794  0EF7               	movlw	-9
 32802  01A796  6AE3               	clrf	plusw1,c
 32803  01A798  0EF8               	movlw	-8
 32804  01A79A  6AE3               	clrf	plusw1,c
 32805  01A79C  0EF9               	movlw	-7
 32806  01A79E  6AE3               	clrf	plusw1,c
 32807  01A7A0  D037               	goto	l10172
 32808  01A7A2                     l10168:
 32809                           
 32810                           ;stkvar	_u @ sp[(-10)+0]
 32811  01A7A2  0EF6               	movlw	-10
 32812  01A7A4  006F FF8C  F032    	movff	plusw1,btemp+8
 32813  01A7AA  0EF7               	movlw	-9
 32814  01A7AC  006F FF8C  F033    	movff	plusw1,btemp+9
 32815  01A7B2  0EF8               	movlw	-8
 32816  01A7B4  006F FF8C  F034    	movff	plusw1,btemp+10
 32817  01A7BA  0EF9               	movlw	-7
 32818  01A7BC  006F FF8C  F035    	movff	plusw1,btemp+11
 32819  01A7C2  90D8               	bcf	status,0,c
 32820  01A7C4  3432               	rlcf	(btemp+8)^0,w,c
 32821  01A7C6  6E2E               	movwf	(btemp+4)^0,c
 32822  01A7C8  3433               	rlcf	(btemp+9)^0,w,c
 32823  01A7CA  6E2F               	movwf	(btemp+5)^0,c
 32824  01A7CC  3434               	rlcf	(btemp+10)^0,w,c
 32825  01A7CE  6E30               	movwf	(btemp+6)^0,c
 32826  01A7D0  3435               	rlcf	(btemp+11)^0,w,c
 32827  01A7D2  6E31               	movwf	(btemp+7)^0,c
 32828  01A7D4  502E               	movf	(btemp+4)^0,w,c
 32829  01A7D6  102F               	iorwf	(btemp+5)^0,w,c
 32830  01A7D8  1030               	iorwf	(btemp+6)^0,w,c
 32831  01A7DA  1031               	iorwf	(btemp+7)^0,w,c
 32832  01A7DC  B4D8               	btfsc	status,2,c
 32833  01A7DE  D018               	goto	l10172
 32834  01A7E0  0E00               	movlw	0
 32835  01A7E2  6E32               	movwf	(btemp+8)^0,c
 32836  01A7E4  0E00               	movlw	0
 32837  01A7E6  6E33               	movwf	(btemp+9)^0,c
 32838  01A7E8  0E80               	movlw	128
 32839  01A7EA  6E34               	movwf	(btemp+10)^0,c
 32840  01A7EC  0EBF               	movlw	191
 32841  01A7EE  6E35               	movwf	(btemp+11)^0,c
 32842                           
 32843                           ;stkvar	_u @ sp[(-10)+0]
 32844  01A7F0  0EF6               	movlw	-10
 32845  01A7F2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32846  01A7F8  0EF7               	movlw	-9
 32847  01A7FA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32848  01A800  0EF8               	movlw	-8
 32849  01A802  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32850  01A808  0EF9               	movlw	-7
 32851  01A80A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32852  01A810                     l10172:
 32853                           
 32854                           ;stkvar	_u @ sp[(-10)+0]
 32855  01A810  0EF6               	movlw	-10
 32856  01A812  006F FF8C  F02A    	movff	plusw1,btemp
 32857  01A818  0EF7               	movlw	-9
 32858  01A81A  006F FF8C  F02B    	movff	plusw1,btemp+1
 32859  01A820  0EF8               	movlw	-8
 32860  01A822  006F FF8C  F02C    	movff	plusw1,btemp+2
 32861  01A828  0EF9               	movlw	-7
 32862  01A82A                     L35:
 32863  01A82A  006F FF8C  F02D    	movff	plusw1,btemp+3
 32864                           
 32865                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 32866  01A830  0EF2               	movlw	242
 32867  01A832  26E1               	addwf	fsr1l,f,c
 32868  01A834  0EFF               	movlw	255
 32869  01A836  22E2               	addwfc	fsr1h,f,c
 32870  01A838  0012               	return		;funcret
 32871  01A83A                     __end_of_floorf:
 32872                           	opt callstack 0
 32873                           
 32874 ;; *************** function ___fpclassifyf *****************
 32875 ;; Defined at:
 32876 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 32877 ;; Parameters:    Size  Location     Type
 32878 ;;  x               4  [STACK] float 
 32879 ;; Auto vars:     Size  Location     Type
 32880 ;;  u               4  [STACK] struct .
 32881 ;;  e               2  [STACK] int 
 32882 ;; Return value:  Size  Location     Type
 32883 ;;                  2  [STACK] int 
 32884 ;; Registers used:
 32885 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 32886 ;; Tracked objects:
 32887 ;;		On entry : 0/0
 32888 ;;		On exit  : 0/0
 32889 ;;		Unchanged: 0/0
 32890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32895 ;;Total ram usage:        0 bytes
 32896 ;; Hardware stack levels used:    1
 32897 ;; Hardware stack levels required when called:   15
 32898 ;; This function calls:
 32899 ;;		Nothing
 32900 ;; This function is called by:
 32901 ;;		_efgtoa
 32902 ;; This function uses a reentrant model
 32903 ;;
 32904                           
 32905                           	psect	text108
 32906  01DD7A                     __ptext108:
 32907                           	opt callstack 0
 32908  01DD7A                     ___fpclassifyf:
 32909                           	opt callstack 0
 32910                           
 32911                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32912  01DD7A  0E06               	movlw	6
 32913  01DD7C  26E1               	addwf	fsr1l,f,c
 32914  01DD7E  0E00               	movlw	0
 32915  01DD80  22E2               	addwfc	fsr1h,f,c
 32916                           
 32917                           ;incstack = 0
 32918 ;; hardware stack exceeded
 32919  01DD82  0060  F1F0  F032   	movff	___fpclassifyf@F463,btemp+8
 32920  01DD88  0060  F1F4  F033   	movff	___fpclassifyf@F463+1,btemp+9
 32921  01DD8E  0060  F1F8  F034   	movff	___fpclassifyf@F463+2,btemp+10
 32922  01DD94  0060  F1FC  F035   	movff	___fpclassifyf@F463+3,btemp+11
 32923                           
 32924                           ;stkvar	_u @ sp[(-6)+0]
 32925  01DD9A  0EFA               	movlw	-6
 32926  01DD9C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32927  01DDA2  0EFB               	movlw	-5
 32928  01DDA4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32929  01DDAA  0EFC               	movlw	-4
 32930  01DDAC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32931  01DDB2  0EFD               	movlw	-3
 32932  01DDB4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32933                           
 32934                           ;stkvar	_x @ sp[(-6)+-4]
 32935  01DDBA  0EF6               	movlw	-10
 32936  01DDBC  006F FF8C  F032    	movff	plusw1,btemp+8
 32937  01DDC2  0EF7               	movlw	-9
 32938  01DDC4  006F FF8C  F033    	movff	plusw1,btemp+9
 32939  01DDCA  0EF8               	movlw	-8
 32940  01DDCC  006F FF8C  F034    	movff	plusw1,btemp+10
 32941  01DDD2  0EF9               	movlw	-7
 32942  01DDD4  006F FF8C  F035    	movff	plusw1,btemp+11
 32943                           
 32944                           ;stkvar	_u @ sp[(-6)+0]
 32945  01DDDA  0EFA               	movlw	-6
 32946  01DDDC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32947  01DDE2  0EFB               	movlw	-5
 32948  01DDE4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32949  01DDEA  0EFC               	movlw	-4
 32950  01DDEC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32951  01DDF2  0EFD               	movlw	-3
 32952  01DDF4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32953                           
 32954                           ;stkvar	_u @ sp[(-6)+0]
 32955  01DDFA  0EFA               	movlw	-6
 32956  01DDFC  006F FF8C  F032    	movff	plusw1,btemp+8
 32957  01DE02  0EFB               	movlw	-5
 32958  01DE04  006F FF8C  F033    	movff	plusw1,btemp+9
 32959  01DE0A  0EFC               	movlw	-4
 32960  01DE0C  006F FF8C  F034    	movff	plusw1,btemp+10
 32961  01DE12  0EFD               	movlw	-3
 32962  01DE14  006F FF8C  F035    	movff	plusw1,btemp+11
 32963  01DE1A  0E18               	movlw	24
 32964  01DE1C  D005               	goto	u7750
 32965  01DE1E                     u7755:
 32966  01DE1E  90D8               	bcf	status,0,c
 32967  01DE20  3235               	rrcf	(btemp+11)^0,f,c
 32968  01DE22  3234               	rrcf	(btemp+10)^0,f,c
 32969  01DE24  3233               	rrcf	(btemp+9)^0,f,c
 32970  01DE26  3232               	rrcf	(btemp+8)^0,f,c
 32971  01DE28                     u7750:
 32972  01DE28  2EE8               	decfsz	wreg,f,c
 32973  01DE2A  D7F9               	goto	u7755
 32974  01DE2C  0060  F0C8  F030   	movff	btemp+8,btemp+6
 32975  01DE32  0060  F0CC  F031   	movff	btemp+9,btemp+7
 32976  01DE38  0EFF               	movlw	255
 32977  01DE3A  1630               	andwf	(btemp+6)^0,f,c
 32978  01DE3C  0E00               	movlw	0
 32979  01DE3E  1631               	andwf	(btemp+7)^0,f,c
 32980                           
 32981                           ;stkvar	_e @ sp[(-6)+4]
 32982  01DE40  0EFE               	movlw	-2
 32983  01DE42  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 32984  01DE48  0EFF               	movlw	-1
 32985  01DE4A  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 32986                           
 32987                           ;stkvar	_e @ sp[(-6)+4]
 32988  01DE50  0EFE               	movlw	-2
 32989  01DE52  006F FF8C  F02A    	movff	plusw1,btemp
 32990  01DE58  0EFF               	movlw	-1
 32991  01DE5A  50E3               	movf	plusw1,w,c
 32992  01DE5C  102A               	iorwf	btemp^0,w,c
 32993  01DE5E  A4D8               	btfss	status,2,c
 32994  01DE60  D023               	goto	l10110
 32995                           
 32996                           ;stkvar	_u @ sp[(-6)+0]
 32997  01DE62  0EFA               	movlw	-6
 32998  01DE64  006F FF8C  F032    	movff	plusw1,btemp+8
 32999  01DE6A  0EFB               	movlw	-5
 33000  01DE6C  006F FF8C  F033    	movff	plusw1,btemp+9
 33001  01DE72  0EFC               	movlw	-4
 33002  01DE74  006F FF8C  F034    	movff	plusw1,btemp+10
 33003  01DE7A  0EFD               	movlw	-3
 33004  01DE7C  006F FF8C  F035    	movff	plusw1,btemp+11
 33005  01DE82  90D8               	bcf	status,0,c
 33006  01DE84  3432               	rlcf	(btemp+8)^0,w,c
 33007  01DE86  6E2E               	movwf	(btemp+4)^0,c
 33008  01DE88  3433               	rlcf	(btemp+9)^0,w,c
 33009  01DE8A  6E2F               	movwf	(btemp+5)^0,c
 33010  01DE8C  3434               	rlcf	(btemp+10)^0,w,c
 33011  01DE8E  6E30               	movwf	(btemp+6)^0,c
 33012  01DE90  3435               	rlcf	(btemp+11)^0,w,c
 33013  01DE92  6E31               	movwf	(btemp+7)^0,c
 33014  01DE94  502E               	movf	(btemp+4)^0,w,c
 33015  01DE96  102F               	iorwf	(btemp+5)^0,w,c
 33016  01DE98  1030               	iorwf	(btemp+6)^0,w,c
 33017  01DE9A  1031               	iorwf	(btemp+7)^0,w,c
 33018  01DE9C  A4D8               	btfss	status,2,c
 33019  01DE9E  D002               	goto	l10106
 33020  01DEA0  0E02               	movlw	2
 33021  01DEA2  D02E               	goto	L36
 33022  01DEA4                     l10106:
 33023  01DEA4  0E03               	movlw	3
 33024  01DEA6  D02C               	goto	L36
 33025  01DEA8                     l10110:
 33026                           
 33027                           ;stkvar	_e @ sp[(-6)+4]
 33028  01DEA8  0EFE               	movlw	-2
 33029  01DEAA  28E3               	incf	plusw1,w,c
 33030  01DEAC  E128               	bnz	l10116
 33031  01DEAE  0EFF               	movlw	-1
 33032  01DEB0  50E3               	movf	plusw1,w,c
 33033  01DEB2  A4D8               	btfss	status,2,c
 33034  01DEB4  D024               	goto	l10116
 33035                           
 33036                           ;stkvar	_u @ sp[(-6)+0]
 33037  01DEB6  0EFA               	movlw	-6
 33038  01DEB8  006F FF8C  F032    	movff	plusw1,btemp+8
 33039  01DEBE  0EFB               	movlw	-5
 33040  01DEC0  006F FF8C  F033    	movff	plusw1,btemp+9
 33041  01DEC6  0EFC               	movlw	-4
 33042  01DEC8  006F FF8C  F034    	movff	plusw1,btemp+10
 33043  01DECE  0EFD               	movlw	-3
 33044  01DED0  006F FF8C  F035    	movff	plusw1,btemp+11
 33045  01DED6  0E09               	movlw	9
 33046  01DED8                     u7795:
 33047  01DED8  90D8               	bcf	status,0,c
 33048  01DEDA  3632               	rlcf	(btemp+8)^0,f,c
 33049  01DEDC  3633               	rlcf	(btemp+9)^0,f,c
 33050  01DEDE  3634               	rlcf	(btemp+10)^0,f,c
 33051  01DEE0  3635               	rlcf	(btemp+11)^0,f,c
 33052  01DEE2  2EE8               	decfsz	wreg,f,c
 33053  01DEE4  D7F9               	goto	u7795
 33054  01DEE6  5032               	movf	(btemp+8)^0,w,c
 33055  01DEE8  1033               	iorwf	(btemp+9)^0,w,c
 33056  01DEEA  1034               	iorwf	(btemp+10)^0,w,c
 33057  01DEEC  1035               	iorwf	(btemp+11)^0,w,c
 33058  01DEEE  A4D8               	btfss	status,2,c
 33059  01DEF0  D002               	goto	u7800
 33060  01DEF2  0E01               	movlw	1
 33061  01DEF4  D001               	goto	u7810
 33062  01DEF6                     u7800:
 33063  01DEF6  0E00               	movlw	0
 33064  01DEF8                     u7810:
 33065  01DEF8  6E2A               	movwf	btemp^0,c
 33066  01DEFA  6A2B               	clrf	(btemp+1)^0,c
 33067  01DEFC  D004               	goto	l3405
 33068  01DEFE                     l10116:
 33069  01DEFE  0E04               	movlw	4
 33070  01DF00                     L36:
 33071  01DF00  6E2A               	movwf	btemp^0,c
 33072  01DF02  0E00               	movlw	0
 33073  01DF04  6E2B               	movwf	(btemp+1)^0,c
 33074  01DF06                     l3405:
 33075                           
 33076                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 33077  01DF06  0EF6               	movlw	246
 33078  01DF08  26E1               	addwf	fsr1l,f,c
 33079  01DF0A  0EFF               	movlw	255
 33080  01DF0C  22E2               	addwfc	fsr1h,f,c
 33081  01DF0E  0012               	return		;funcret
 33082  01DF10                     __end_of___fpclassifyf:
 33083                           	opt callstack 0
 33084                           
 33085 ;; *************** function ___fltol *****************
 33086 ;; Defined at:
 33087 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 33088 ;; Parameters:    Size  Location     Type
 33089 ;;  f1              4  [STACK] int 
 33090 ;; Auto vars:     Size  Location     Type
 33091 ;;  exp1            1  [STACK] unsigned char 
 33092 ;;  sign1           1  [STACK] unsigned char 
 33093 ;; Return value:  Size  Location     Type
 33094 ;;                  4  [STACK] long 
 33095 ;; Registers used:
 33096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 33097 ;; Tracked objects:
 33098 ;;		On entry : 0/0
 33099 ;;		On exit  : 0/0
 33100 ;;		Unchanged: 0/0
 33101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33106 ;;Total ram usage:        0 bytes
 33107 ;; Hardware stack levels used:    1
 33108 ;; Hardware stack levels required when called:   15
 33109 ;; This function calls:
 33110 ;;		Nothing
 33111 ;; This function is called by:
 33112 ;;		_main
 33113 ;;		_convert_dac_raw
 33114 ;;		_load_hist_data
 33115 ;;		_calc_bsoc
 33116 ;;		_init_bsoc
 33117 ;;		_efgtoa
 33118 ;; This function uses a reentrant model
 33119 ;;
 33120                           
 33121                           	psect	text109
 33122  01E6AA                     __ptext109:
 33123                           	opt callstack 0
 33124  01E6AA                     ___fltol:
 33125                           	opt callstack 0
 33126                           
 33127                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33128  01E6AA  52E6               	movf	postinc1,f,c
 33129  01E6AC  52E6               	movf	postinc1,f,c
 33130                           
 33131                           ;stkvar	_f1 @ sp[(-2)+-4]
 33132                           
 33133                           ;incstack = 0
 33134 ;; hardware stack exceeded
 33135  01E6AE  0EFA               	movlw	-6
 33136  01E6B0  006F FF8C  F032    	movff	plusw1,btemp+8
 33137  01E6B6  0EFB               	movlw	-5
 33138  01E6B8  006F FF8C  F033    	movff	plusw1,btemp+9
 33139  01E6BE  0EFC               	movlw	-4
 33140  01E6C0  006F FF8C  F034    	movff	plusw1,btemp+10
 33141  01E6C6  0EFD               	movlw	-3
 33142  01E6C8  006F FF8C  F035    	movff	plusw1,btemp+11
 33143  01E6CE  0E18               	movlw	24
 33144  01E6D0  D005               	goto	u9020
 33145  01E6D2                     u9025:
 33146  01E6D2  90D8               	bcf	status,0,c
 33147  01E6D4  3235               	rrcf	(btemp+11)^0,f,c
 33148  01E6D6  3234               	rrcf	(btemp+10)^0,f,c
 33149  01E6D8  3233               	rrcf	(btemp+9)^0,f,c
 33150  01E6DA  3232               	rrcf	(btemp+8)^0,f,c
 33151  01E6DC                     u9020:
 33152  01E6DC  2EE8               	decfsz	wreg,f,c
 33153  01E6DE  D7F9               	goto	u9025
 33154                           
 33155                           ;stkvar	_exp1 @ sp[(-2)+0]
 33156  01E6E0  0EFE               	movlw	-2
 33157  01E6E2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33158  01E6E8  0EFE               	movlw	-2
 33159  01E6EA  50E3               	movf	plusw1,w,c
 33160  01E6EC  A4D8               	btfss	status,2,c
 33161  01E6EE  D006               	goto	l10762
 33162  01E6F0                     u9030:
 33163  01E6F0  0E00               	movlw	0
 33164  01E6F2  6E2A               	movwf	btemp^0,c
 33165  01E6F4  6A2B               	clrf	(btemp+1)^0,c
 33166  01E6F6  6A2C               	clrf	(btemp+2)^0,c
 33167  01E6F8  6A2D               	clrf	(btemp+3)^0,c
 33168  01E6FA  D08B               	goto	l3021
 33169  01E6FC                     l10762:
 33170                           
 33171                           ;stkvar	_f1 @ sp[(-2)+-4]
 33172  01E6FC  0EFA               	movlw	-6
 33173  01E6FE  006F FF8C  F032    	movff	plusw1,btemp+8
 33174  01E704  0EFB               	movlw	-5
 33175  01E706  006F FF8C  F033    	movff	plusw1,btemp+9
 33176  01E70C  0EFC               	movlw	-4
 33177  01E70E  006F FF8C  F034    	movff	plusw1,btemp+10
 33178  01E714  0EFD               	movlw	-3
 33179  01E716  006F FF8C  F035    	movff	plusw1,btemp+11
 33180  01E71C  0E20               	movlw	32
 33181  01E71E  D005               	goto	u9040
 33182  01E720                     u9045:
 33183  01E720  90D8               	bcf	status,0,c
 33184  01E722  3235               	rrcf	(btemp+11)^0,f,c
 33185  01E724  3234               	rrcf	(btemp+10)^0,f,c
 33186  01E726  3233               	rrcf	(btemp+9)^0,f,c
 33187  01E728  3232               	rrcf	(btemp+8)^0,f,c
 33188  01E72A                     u9040:
 33189  01E72A  2EE8               	decfsz	wreg,f,c
 33190  01E72C  D7F9               	goto	u9045
 33191                           
 33192                           ;stkvar	_sign1 @ sp[(-2)+1]
 33193  01E72E  0EFF               	movlw	-1
 33194  01E730  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33195                           
 33196                           ;stkvar	_f1 @ sp[(-2)+-4]
 33197  01E736  0EFC               	movlw	-4
 33198  01E738  8EE3               	bsf	plusw1,7,c
 33199                           
 33200                           ;stkvar	_f1 @ sp[(-2)+-4]
 33201  01E73A  50E1               	movf	fsr1l,w,c
 33202  01E73C  0FFA               	addlw	-6
 33203  01E73E  6ED9               	movwf	fsr2l,c
 33204  01E740  50E2               	movf	fsr1h,w,c
 33205  01E742  6EDA               	movwf	fsr2h,c
 33206  01E744  0EFF               	movlw	255
 33207  01E746  22DA               	addwfc	fsr2h,f,c
 33208  01E748  0EFF               	movlw	255
 33209  01E74A  16DE               	andwf	postinc2,f,c
 33210  01E74C  0EFF               	movlw	255
 33211  01E74E  16DE               	andwf	postinc2,f,c
 33212  01E750  0EFF               	movlw	255
 33213  01E752  16DE               	andwf	postinc2,f,c
 33214  01E754  0E00               	movlw	0
 33215  01E756  16DE               	andwf	postinc2,f,c
 33216                           
 33217                           ;stkvar	_exp1 @ sp[(-2)+0]
 33218  01E758  0EFE               	movlw	-2
 33219  01E75A  006F FF8C  F02A    	movff	plusw1,btemp
 33220  01E760  0E96               	movlw	150
 33221  01E762  5E2A               	subwf	btemp^0,f,c
 33222  01E764  0EFE               	movlw	-2
 33223  01E766  0060  F0AB  FFE3   	movff	btemp,plusw1
 33224                           
 33225                           ;stkvar	_exp1 @ sp[(-2)+0]
 33226  01E76C  0EFE               	movlw	-2
 33227  01E76E  AEE3               	btfss	plusw1,7,c
 33228  01E770  D014               	goto	l10780
 33229                           
 33230                           ;stkvar	_exp1 @ sp[(-2)+0]
 33231  01E772  0EFE               	movlw	-2
 33232  01E774  50E3               	movf	plusw1,w,c
 33233  01E776  0A80               	xorlw	128
 33234  01E778  0F97               	addlw	151
 33235  01E77A  A0D8               	btfss	status,0,c
 33236  01E77C  D7B9               	goto	u9030
 33237  01E77E                     l10778:
 33238                           
 33239                           ;stkvar	_f1 @ sp[(-2)+-4]
 33240  01E77E  90D8               	bcf	status,0,c
 33241  01E780  0EFD               	movlw	-3
 33242  01E782  32E3               	rrcf	plusw1,f,c
 33243  01E784  0EFC               	movlw	-4
 33244  01E786  32E3               	rrcf	plusw1,f,c
 33245  01E788  0EFB               	movlw	-5
 33246  01E78A  32E3               	rrcf	plusw1,f,c
 33247  01E78C  0EFA               	movlw	-6
 33248  01E78E  32E3               	rrcf	plusw1,f,c
 33249                           
 33250                           ;stkvar	_exp1 @ sp[(-2)+0]
 33251  01E790  0EFE               	movlw	-2
 33252  01E792  2AE3               	incf	plusw1,f,c
 33253  01E794  B4D8               	btfsc	status,2,c
 33254  01E796  D018               	goto	u9090
 33255  01E798  D7F2               	goto	l10778
 33256  01E79A                     l10780:
 33257                           
 33258                           ;stkvar	_exp1 @ sp[(-2)+0]
 33259  01E79A  0EFE               	movlw	-2
 33260  01E79C  006F FF8C  F02A    	movff	plusw1,btemp
 33261  01E7A2  0E1F               	movlw	31
 33262  01E7A4  642A               	cpfsgt	btemp^0,c
 33263  01E7A6  D00C               	goto	l10788
 33264  01E7A8  D7A3               	goto	u9030
 33265  01E7AA                     l10786:
 33266                           
 33267                           ;stkvar	_f1 @ sp[(-2)+-4]
 33268  01E7AA  90D8               	bcf	status,0,c
 33269  01E7AC  0EFA               	movlw	-6
 33270  01E7AE  36E3               	rlcf	plusw1,f,c
 33271  01E7B0  0EFB               	movlw	-5
 33272  01E7B2  36E3               	rlcf	plusw1,f,c
 33273  01E7B4  0EFC               	movlw	-4
 33274  01E7B6  36E3               	rlcf	plusw1,f,c
 33275  01E7B8  0EFD               	movlw	-3
 33276  01E7BA  36E3               	rlcf	plusw1,f,c
 33277                           
 33278                           ;stkvar	_exp1 @ sp[(-2)+0]
 33279  01E7BC  0EFE               	movlw	-2
 33280  01E7BE  06E3               	decf	plusw1,f,c
 33281  01E7C0                     l10788:
 33282                           
 33283                           ;stkvar	_exp1 @ sp[(-2)+0]
 33284  01E7C0  0EFE               	movlw	-2
 33285  01E7C2  50E3               	movf	plusw1,w,c
 33286  01E7C4  A4D8               	btfss	status,2,c
 33287  01E7C6  D7F1               	goto	l10786
 33288  01E7C8                     u9090:
 33289                           
 33290                           ;stkvar	_sign1 @ sp[(-2)+1]
 33291  01E7C8  0EFF               	movlw	-1
 33292  01E7CA  50E3               	movf	plusw1,w,c
 33293  01E7CC  B4D8               	btfsc	status,2,c
 33294  01E7CE  D011               	goto	u9110
 33295                           
 33296                           ;stkvar	_f1 @ sp[(-2)+-4]
 33297                           ;stkvar	_f1 @ sp[(-2)+-4]
 33298  01E7D0  0EFA               	movlw	-6
 33299  01E7D2  6CE3               	negf	plusw1,c
 33300  01E7D4  0EFB               	movlw	-5
 33301  01E7D6  1EE3               	comf	plusw1,f,c
 33302  01E7D8  0EFC               	movlw	-4
 33303  01E7DA  1EE3               	comf	plusw1,f,c
 33304  01E7DC  0EFD               	movlw	-3
 33305  01E7DE  1EE3               	comf	plusw1,f,c
 33306  01E7E0  E308               	bnc	u9110
 33307  01E7E2  0EFB               	movlw	-5
 33308  01E7E4  2AE3               	incf	plusw1,f,c
 33309  01E7E6  E305               	bnc	u9110
 33310  01E7E8  0EFC               	movlw	-4
 33311  01E7EA  2AE3               	incf	plusw1,f,c
 33312  01E7EC  E302               	bnc	u9110
 33313  01E7EE  0EFD               	movlw	-3
 33314  01E7F0  2AE3               	incf	plusw1,f,c
 33315  01E7F2                     u9110:
 33316                           
 33317                           ;stkvar	_f1 @ sp[(-2)+-4]
 33318  01E7F2  0EFA               	movlw	-6
 33319  01E7F4  006F FF8C  F02A    	movff	plusw1,btemp
 33320  01E7FA  0EFB               	movlw	-5
 33321  01E7FC  006F FF8C  F02B    	movff	plusw1,btemp+1
 33322  01E802  0EFC               	movlw	-4
 33323  01E804  006F FF8C  F02C    	movff	plusw1,btemp+2
 33324  01E80A  0EFD               	movlw	-3
 33325  01E80C  006F FF8C  F02D    	movff	plusw1,btemp+3
 33326  01E812                     l3021:
 33327                           
 33328                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33329  01E812  0EFA               	movlw	250
 33330  01E814  26E1               	addwf	fsr1l,f,c
 33331  01E816  0EFF               	movlw	255
 33332  01E818  22E2               	addwfc	fsr1h,f,c
 33333  01E81A  0012               	return		;funcret
 33334  01E81C                     __end_of___fltol:
 33335                           	opt callstack 0
 33336                           
 33337 ;; *************** function ___flneg *****************
 33338 ;; Defined at:
 33339 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 33340 ;; Parameters:    Size  Location     Type
 33341 ;;  f1              4  [STACK] long 
 33342 ;; Auto vars:     Size  Location     Type
 33343 ;;		None
 33344 ;; Return value:  Size  Location     Type
 33345 ;;                  4  [STACK] long 
 33346 ;; Registers used:
 33347 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 33348 ;; Tracked objects:
 33349 ;;		On entry : 0/0
 33350 ;;		On exit  : 0/0
 33351 ;;		Unchanged: 0/0
 33352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33357 ;;Total ram usage:        0 bytes
 33358 ;; Hardware stack levels used:    1
 33359 ;; Hardware stack levels required when called:   15
 33360 ;; This function calls:
 33361 ;;		Nothing
 33362 ;; This function is called by:
 33363 ;;		_calc_bsoc
 33364 ;;		_efgtoa
 33365 ;; This function uses a reentrant model
 33366 ;;
 33367                           
 33368                           	psect	text110
 33369  001C7C                     __ptext110:
 33370                           	opt callstack 0
 33371  001C7C                     ___flneg:
 33372                           	opt callstack 0
 33373                           
 33374                           ;stkvar	_f1 @ sp[(0)+-4]
 33375                           
 33376                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33377                           ;incstack = 0
 33378 ;; hardware stack exceeded
 33379  001C7C  0EFC               	movlw	-4
 33380  001C7E  50E3               	movf	plusw1,w,c
 33381  001C80  E10A               	bnz	u9010
 33382  001C82  0EFD               	movlw	-3
 33383  001C84  50E3               	movf	plusw1,w,c
 33384  001C86  E107               	bnz	u9010
 33385  001C88  0EFE               	movlw	-2
 33386  001C8A  50E3               	movf	plusw1,w,c
 33387  001C8C  E104               	bnz	u9010
 33388  001C8E  0EFF               	movlw	-1
 33389  001C90  50E3               	movf	plusw1,w,c
 33390  001C92  B4D8               	btfsc	status,2,c
 33391  001C94  D002               	goto	l10752
 33392  001C96                     u9010:
 33393                           
 33394                           ;stkvar	_f1 @ sp[(0)+-4]
 33395  001C96  0EFF               	movlw	-1
 33396  001C98  7EE3               	btg	plusw1,7,c
 33397  001C9A                     l10752:
 33398                           
 33399                           ;stkvar	_f1 @ sp[(0)+-4]
 33400  001C9A  0EFC               	movlw	-4
 33401  001C9C  006F FF8C  F02A    	movff	plusw1,btemp
 33402  001CA2  0EFD               	movlw	-3
 33403  001CA4  006F FF8C  F02B    	movff	plusw1,btemp+1
 33404  001CAA  0EFE               	movlw	-2
 33405  001CAC  006F FF8C  F02C    	movff	plusw1,btemp+2
 33406  001CB2  0EFF               	movlw	-1
 33407  001CB4  006F FF8C  F02D    	movff	plusw1,btemp+3
 33408                           
 33409                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33410  001CBA  52E5               	movf	postdec1,f,c
 33411  001CBC  52E5               	movf	postdec1,f,c
 33412  001CBE  52E5               	movf	postdec1,f,c
 33413  001CC0  52E5               	movf	postdec1,f,c
 33414  001CC2  0012               	return		;funcret
 33415  001CC4                     __end_of___flneg:
 33416                           	opt callstack 0
 33417                           
 33418 ;; *************** function ___fleq *****************
 33419 ;; Defined at:
 33420 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 33421 ;; Parameters:    Size  Location     Type
 33422 ;;  ff1             4  [STACK] long 
 33423 ;;  ff2             4  [STACK] long 
 33424 ;; Auto vars:     Size  Location     Type
 33425 ;;		None
 33426 ;; Return value:  Size  Location     Type
 33427 ;;		None               void
 33428 ;; Registers used:
 33429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 33430 ;; Tracked objects:
 33431 ;;		On entry : 0/0
 33432 ;;		On exit  : 0/0
 33433 ;;		Unchanged: 0/0
 33434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33439 ;;Total ram usage:        0 bytes
 33440 ;; Hardware stack levels used:    1
 33441 ;; Hardware stack levels required when called:   15
 33442 ;; This function calls:
 33443 ;;		Nothing
 33444 ;; This function is called by:
 33445 ;;		_efgtoa
 33446 ;; This function uses a reentrant model
 33447 ;;
 33448                           
 33449                           	psect	text111
 33450  000504                     __ptext111:
 33451                           	opt callstack 0
 33452  000504                     ___fleq:
 33453                           	opt callstack 0
 33454                           
 33455                           ;stkvar	_ff1 @ sp[(0)+-4]
 33456                           
 33457                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33458                           ;incstack = 0
 33459 ;; hardware stack exceeded
 33460  000504  50E1               	movf	fsr1l,w,c
 33461  000506  0FFC               	addlw	-4
 33462  000508  6ED9               	movwf	fsr2l,c
 33463  00050A  50E2               	movf	fsr1h,w,c
 33464  00050C  6EDA               	movwf	fsr2h,c
 33465  00050E  0EFF               	movlw	255
 33466  000510  22DA               	addwfc	fsr2h,f,c
 33467  000512  0E00               	movlw	0
 33468  000514  14DE               	andwf	postinc2,w,c
 33469  000516  6E32               	movwf	(btemp+8)^0,c
 33470  000518  0E00               	movlw	0
 33471  00051A  14DE               	andwf	postinc2,w,c
 33472  00051C  6E33               	movwf	(btemp+9)^0,c
 33473  00051E  0E80               	movlw	128
 33474  000520  14DE               	andwf	postinc2,w,c
 33475  000522  6E34               	movwf	(btemp+10)^0,c
 33476  000524  0E7F               	movlw	127
 33477  000526  14DE               	andwf	postinc2,w,c
 33478  000528  6E35               	movwf	(btemp+11)^0,c
 33479  00052A  5032               	movf	(btemp+8)^0,w,c
 33480  00052C  1033               	iorwf	(btemp+9)^0,w,c
 33481  00052E  1034               	iorwf	(btemp+10)^0,w,c
 33482  000530  1035               	iorwf	(btemp+11)^0,w,c
 33483  000532  A4D8               	btfss	status,2,c
 33484  000534  D008               	goto	l10710
 33485                           
 33486                           ;stkvar	_ff1 @ sp[(0)+-4]
 33487  000536  0EFC               	movlw	-4
 33488  000538  6AE3               	clrf	plusw1,c
 33489  00053A  0EFD               	movlw	-3
 33490  00053C  6AE3               	clrf	plusw1,c
 33491  00053E  0EFE               	movlw	-2
 33492  000540  6AE3               	clrf	plusw1,c
 33493  000542  0EFF               	movlw	-1
 33494  000544  6AE3               	clrf	plusw1,c
 33495  000546                     l10710:
 33496                           
 33497                           ;stkvar	_ff2 @ sp[(0)+-8]
 33498  000546  50E1               	movf	fsr1l,w,c
 33499  000548  0FF8               	addlw	-8
 33500  00054A  6ED9               	movwf	fsr2l,c
 33501  00054C  50E2               	movf	fsr1h,w,c
 33502  00054E  6EDA               	movwf	fsr2h,c
 33503  000550  0EFF               	movlw	255
 33504  000552  22DA               	addwfc	fsr2h,f,c
 33505  000554  0E00               	movlw	0
 33506  000556  14DE               	andwf	postinc2,w,c
 33507  000558  6E32               	movwf	(btemp+8)^0,c
 33508  00055A  0E00               	movlw	0
 33509  00055C  14DE               	andwf	postinc2,w,c
 33510  00055E  6E33               	movwf	(btemp+9)^0,c
 33511  000560  0E80               	movlw	128
 33512  000562  14DE               	andwf	postinc2,w,c
 33513  000564  6E34               	movwf	(btemp+10)^0,c
 33514  000566  0E7F               	movlw	127
 33515  000568  14DE               	andwf	postinc2,w,c
 33516  00056A  6E35               	movwf	(btemp+11)^0,c
 33517  00056C  5032               	movf	(btemp+8)^0,w,c
 33518  00056E  1033               	iorwf	(btemp+9)^0,w,c
 33519  000570  1034               	iorwf	(btemp+10)^0,w,c
 33520  000572  1035               	iorwf	(btemp+11)^0,w,c
 33521  000574  A4D8               	btfss	status,2,c
 33522  000576  D008               	goto	l10714
 33523                           
 33524                           ;stkvar	_ff2 @ sp[(0)+-8]
 33525  000578  0EF8               	movlw	-8
 33526  00057A  6AE3               	clrf	plusw1,c
 33527  00057C  0EF9               	movlw	-7
 33528  00057E  6AE3               	clrf	plusw1,c
 33529  000580  0EFA               	movlw	-6
 33530  000582  6AE3               	clrf	plusw1,c
 33531  000584  0EFB               	movlw	-5
 33532  000586  6AE3               	clrf	plusw1,c
 33533  000588                     l10714:
 33534                           
 33535                           ;stkvar	_ff2 @ sp[(0)+-8]
 33536                           ;stkvar	_ff1 @ sp[(0)+-4]
 33537  000588  50E1               	movf	fsr1l,w,c
 33538  00058A  0FFC               	addlw	-4
 33539  00058C  6ED9               	movwf	fsr2l,c
 33540  00058E  50E2               	movf	fsr1h,w,c
 33541  000590  6EDA               	movwf	fsr2h,c
 33542  000592  0EFF               	movlw	255
 33543  000594  22DA               	addwfc	fsr2h,f,c
 33544  000596  0EF8               	movlw	-8
 33545  000598  50E3               	movf	plusw1,w,c
 33546  00059A  18DE               	xorwf	postinc2,w,c
 33547  00059C  E10D               	bnz	u8950
 33548  00059E  0EF9               	movlw	-7
 33549  0005A0  50E3               	movf	plusw1,w,c
 33550  0005A2  18DE               	xorwf	postinc2,w,c
 33551  0005A4  E109               	bnz	u8950
 33552  0005A6  0EFA               	movlw	-6
 33553  0005A8  50E3               	movf	plusw1,w,c
 33554  0005AA  18DE               	xorwf	postinc2,w,c
 33555  0005AC  E105               	bnz	u8950
 33556  0005AE  0EFB               	movlw	-5
 33557  0005B0  50E3               	movf	plusw1,w,c
 33558  0005B2  18DE               	xorwf	postinc2,w,c
 33559  0005B4  B4D8               	btfsc	status,2,c
 33560  0005B6  D002               	goto	l10718
 33561  0005B8                     u8950:
 33562  0005B8  902A               	bcf	btemp& (0+255),0,c
 33563  0005BA  D001               	goto	l2983
 33564  0005BC                     l10718:
 33565  0005BC  802A               	bsf	btemp& (0+255),0,c
 33566  0005BE                     l2983:
 33567                           
 33568                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 33569  0005BE  0EF8               	movlw	248
 33570  0005C0  26E1               	addwf	fsr1l,f,c
 33571  0005C2  0EFF               	movlw	255
 33572  0005C4  22E2               	addwfc	fsr1h,f,c
 33573  0005C6  0012               	return		;funcret
 33574  0005C8                     __end_of___fleq:
 33575                           	opt callstack 0
 33576                           
 33577 ;; *************** function ___awmod *****************
 33578 ;; Defined at:
 33579 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 33580 ;; Parameters:    Size  Location     Type
 33581 ;;  dividend        2  [STACK] int 
 33582 ;;  divisor         2  [STACK] int 
 33583 ;; Auto vars:     Size  Location     Type
 33584 ;;  sign            1  [STACK] unsigned char 
 33585 ;;  counter         1  [STACK] unsigned char 
 33586 ;; Return value:  Size  Location     Type
 33587 ;;                  2  [STACK] int 
 33588 ;; Registers used:
 33589 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 33590 ;; Tracked objects:
 33591 ;;		On entry : 0/3
 33592 ;;		On exit  : 0/0
 33593 ;;		Unchanged: 0/0
 33594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33599 ;;Total ram usage:        0 bytes
 33600 ;; Hardware stack levels used:    1
 33601 ;; Hardware stack levels required when called:   15
 33602 ;; This function calls:
 33603 ;;		Nothing
 33604 ;; This function is called by:
 33605 ;;		_efgtoa
 33606 ;;		_asctime
 33607 ;; This function uses a reentrant model
 33608 ;;
 33609                           
 33610                           	psect	text112
 33611  01F8B6                     __ptext112:
 33612                           	opt callstack 0
 33613  01F8B6                     ___awmod:
 33614                           	opt callstack 0
 33615                           
 33616                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33617  01F8B6  52E6               	movf	postinc1,f,c
 33618  01F8B8  52E6               	movf	postinc1,f,c
 33619                           
 33620                           ;stkvar	_sign @ sp[(-2)+0]
 33621                           
 33622                           ;incstack = 0
 33623 ;; hardware stack exceeded
 33624  01F8BA  0EFE               	movlw	-2
 33625  01F8BC  6AE3               	clrf	plusw1,c
 33626                           
 33627                           ;stkvar	_dividend @ sp[(-2)+-2]
 33628  01F8BE  0EFD               	movlw	-3
 33629  01F8C0  AEE3               	btfss	plusw1,7,c
 33630  01F8C2  D009               	goto	l15512
 33631                           
 33632                           ;stkvar	_dividend @ sp[(-2)+-2]
 33633                           ;stkvar	_dividend @ sp[(-2)+-2]
 33634  01F8C4  0EFC               	movlw	-4
 33635  01F8C6  6CE3               	negf	plusw1,c
 33636  01F8C8  0EFD               	movlw	-3
 33637  01F8CA  1EE3               	comf	plusw1,f,c
 33638  01F8CC  B0D8               	btfsc	status,0,c
 33639  01F8CE  2AE3               	incf	plusw1,f,c
 33640                           
 33641                           ;stkvar	_sign @ sp[(-2)+0]
 33642  01F8D0  0EFE               	movlw	-2
 33643  01F8D2  6AE3               	clrf	plusw1,c
 33644  01F8D4  2AE3               	incf	plusw1,f,c
 33645  01F8D6                     l15512:
 33646                           
 33647                           ;stkvar	_divisor @ sp[(-2)+-4]
 33648  01F8D6  0EFB               	movlw	-5
 33649  01F8D8  AEE3               	btfss	plusw1,7,c
 33650  01F8DA  D006               	goto	l15516
 33651                           
 33652                           ;stkvar	_divisor @ sp[(-2)+-4]
 33653                           ;stkvar	_divisor @ sp[(-2)+-4]
 33654  01F8DC  0EFA               	movlw	-6
 33655  01F8DE  6CE3               	negf	plusw1,c
 33656  01F8E0  0EFB               	movlw	-5
 33657  01F8E2  1EE3               	comf	plusw1,f,c
 33658  01F8E4  B0D8               	btfsc	status,0,c
 33659  01F8E6  2AE3               	incf	plusw1,f,c
 33660  01F8E8                     l15516:
 33661                           
 33662                           ;stkvar	_divisor @ sp[(-2)+-4]
 33663  01F8E8  0EFA               	movlw	-6
 33664  01F8EA  006F FF8C  F02A    	movff	plusw1,btemp
 33665  01F8F0  0EFB               	movlw	-5
 33666  01F8F2  50E3               	movf	plusw1,w,c
 33667  01F8F4  102A               	iorwf	btemp^0,w,c
 33668  01F8F6  B4D8               	btfsc	status,2,c
 33669  01F8F8  D053               	goto	u14500
 33670                           
 33671                           ;stkvar	_counter @ sp[(-2)+1]
 33672  01F8FA  0EFF               	movlw	-1
 33673  01F8FC  6AE3               	clrf	plusw1,c
 33674  01F8FE  D012               	goto	L37
 33675  01F900                     l15520:
 33676                           
 33677                           ;stkvar	_divisor @ sp[(-2)+-4]
 33678  01F900  0EFA               	movlw	-6
 33679  01F902  50E3               	movf	plusw1,w,c
 33680  01F904  90D8               	bcf	status,0,c
 33681  01F906  34E8               	rlcf	wreg,w,c
 33682  01F908  6E2A               	movwf	btemp^0,c
 33683  01F90A  0EFA               	movlw	-6
 33684  01F90C  0060  F0AB  FFE3   	movff	btemp,plusw1
 33685  01F912  0EFB               	movlw	-5
 33686  01F914  50E3               	movf	plusw1,w,c
 33687  01F916  34E8               	rlcf	wreg,w,c
 33688  01F918  6E2A               	movwf	btemp^0,c
 33689  01F91A  0EFB               	movlw	-5
 33690  01F91C  0060  F0AB  FFE3   	movff	btemp,plusw1
 33691                           
 33692                           ;stkvar	_counter @ sp[(-2)+1]
 33693  01F922  0EFF               	movlw	-1
 33694  01F924                     L37:
 33695  01F924  2AE3               	incf	plusw1,f,c
 33696                           
 33697                           ;stkvar	_divisor @ sp[(-2)+-4]
 33698  01F926  0EFB               	movlw	-5
 33699  01F928  AEE3               	btfss	plusw1,7,c
 33700  01F92A  D7EA               	goto	l15520
 33701  01F92C                     u14480:
 33702                           
 33703                           ;stkvar	_divisor @ sp[(-2)+-4]
 33704  01F92C  0EFA               	movlw	-6
 33705  01F92E  006F FF8C  F034    	movff	plusw1,btemp+10
 33706  01F934  0EFB               	movlw	-5
 33707  01F936  006F FF8C  F035    	movff	plusw1,btemp+11
 33708                           
 33709                           ;stkvar	_dividend @ sp[(-2)+-2]
 33710  01F93C  0EFC               	movlw	-4
 33711  01F93E  006F FF8C  F032    	movff	plusw1,btemp+8
 33712  01F944  0EFD               	movlw	-3
 33713  01F946  006F FF8C  F033    	movff	plusw1,btemp+9
 33714  01F94C  5034               	movf	(btemp+10)^0,w,c
 33715  01F94E  5C32               	subwf	(btemp+8)^0,w,c
 33716  01F950  5035               	movf	(btemp+11)^0,w,c
 33717  01F952  5833               	subwfb	(btemp+9)^0,w,c
 33718  01F954  A0D8               	btfss	status,0,c
 33719  01F956  D014               	goto	l15530
 33720                           
 33721                           ;stkvar	_divisor @ sp[(-2)+-4]
 33722                           ;stkvar	_dividend @ sp[(-2)+-2]
 33723  01F958  0EFC               	movlw	-4
 33724  01F95A  50E3               	movf	plusw1,w,c
 33725  01F95C  6E2A               	movwf	btemp^0,c
 33726  01F95E  0EFA               	movlw	-6
 33727  01F960  50E3               	movf	plusw1,w,c
 33728  01F962  5E2A               	subwf	btemp^0,f,c
 33729  01F964  0EFC               	movlw	-4
 33730  01F966  0060  F0AB  FFE3   	movff	btemp,plusw1
 33731  01F96C  0EFD               	movlw	-3
 33732  01F96E  50E3               	movf	plusw1,w,c
 33733  01F970  6E2A               	movwf	btemp^0,c
 33734  01F972  0EFB               	movlw	-5
 33735  01F974  50E3               	movf	plusw1,w,c
 33736  01F976  5A2A               	subwfb	btemp^0,f,c
 33737  01F978  0EFD               	movlw	-3
 33738  01F97A  0060  F0AB  FFE3   	movff	btemp,plusw1
 33739  01F980                     l15530:
 33740                           
 33741                           ;stkvar	_divisor @ sp[(-2)+-4]
 33742  01F980  90D8               	bcf	status,0,c
 33743  01F982  0EFB               	movlw	-5
 33744  01F984  32E3               	rrcf	plusw1,f,c
 33745  01F986  0EFA               	movlw	-6
 33746  01F988  32E3               	rrcf	plusw1,f,c
 33747                           
 33748                           ;stkvar	_counter @ sp[(-2)+1]
 33749  01F98A  0EFF               	movlw	-1
 33750  01F98C  50E3               	movf	plusw1,w,c
 33751  01F98E  6E2A               	movwf	btemp^0,c
 33752  01F990  0E01               	movlw	1
 33753  01F992  5E2A               	subwf	btemp^0,f,c
 33754  01F994  0EFF               	movlw	-1
 33755  01F996  0060  F0AB  FFE3   	movff	btemp,plusw1
 33756  01F99C  A4D8               	btfss	status,2,c
 33757  01F99E  D7C6               	goto	u14480
 33758  01F9A0                     u14500:
 33759                           
 33760                           ;stkvar	_sign @ sp[(-2)+0]
 33761  01F9A0  0EFE               	movlw	-2
 33762  01F9A2  50E3               	movf	plusw1,w,c
 33763  01F9A4  B4D8               	btfsc	status,2,c
 33764  01F9A6  D006               	goto	l15538
 33765                           
 33766                           ;stkvar	_dividend @ sp[(-2)+-2]
 33767                           ;stkvar	_dividend @ sp[(-2)+-2]
 33768  01F9A8  0EFC               	movlw	-4
 33769  01F9AA  6CE3               	negf	plusw1,c
 33770  01F9AC  0EFD               	movlw	-3
 33771  01F9AE  1EE3               	comf	plusw1,f,c
 33772  01F9B0  B0D8               	btfsc	status,0,c
 33773  01F9B2  2AE3               	incf	plusw1,f,c
 33774  01F9B4                     l15538:
 33775                           
 33776                           ;stkvar	_dividend @ sp[(-2)+-2]
 33777  01F9B4  0EFC               	movlw	-4
 33778  01F9B6  006F FF8C  F02A    	movff	plusw1,btemp
 33779  01F9BC  0EFD               	movlw	-3
 33780  01F9BE  006F FF8C  F02B    	movff	plusw1,btemp+1
 33781                           
 33782                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33783  01F9C4  0EFA               	movlw	250
 33784  01F9C6  26E1               	addwf	fsr1l,f,c
 33785  01F9C8  0EFF               	movlw	255
 33786  01F9CA  22E2               	addwfc	fsr1h,f,c
 33787  01F9CC  0012               	return		;funcret
 33788  01F9CE                     __end_of___awmod:
 33789                           	opt callstack 0
 33790                           
 33791 ;; *************** function ___awdiv *****************
 33792 ;; Defined at:
 33793 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 33794 ;; Parameters:    Size  Location     Type
 33795 ;;  dividend        2  [STACK] int 
 33796 ;;  divisor         2  [STACK] int 
 33797 ;; Auto vars:     Size  Location     Type
 33798 ;;  quotient        2  [STACK] int 
 33799 ;;  sign            1  [STACK] unsigned char 
 33800 ;;  counter         1  [STACK] unsigned char 
 33801 ;; Return value:  Size  Location     Type
 33802 ;;                  2  [STACK] int 
 33803 ;; Registers used:
 33804 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 33805 ;; Tracked objects:
 33806 ;;		On entry : 0/3
 33807 ;;		On exit  : 0/0
 33808 ;;		Unchanged: 0/0
 33809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33814 ;;Total ram usage:        0 bytes
 33815 ;; Hardware stack levels used:    1
 33816 ;; Hardware stack levels required when called:   15
 33817 ;; This function calls:
 33818 ;;		Nothing
 33819 ;; This function is called by:
 33820 ;;		_efgtoa
 33821 ;;		_put2d
 33822 ;;		_asctime
 33823 ;;		_scan_trans
 33824 ;; This function uses a reentrant model
 33825 ;;
 33826                           
 33827                           	psect	text113
 33828  01F058                     __ptext113:
 33829                           	opt callstack 0
 33830  01F058                     ___awdiv:
 33831                           	opt callstack 0
 33832                           
 33833                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33834  01F058  52E6               	movf	postinc1,f,c
 33835  01F05A  52E6               	movf	postinc1,f,c
 33836  01F05C  52E6               	movf	postinc1,f,c
 33837  01F05E  52E6               	movf	postinc1,f,c
 33838                           
 33839                           ;stkvar	_sign @ sp[(-4)+2]
 33840                           
 33841                           ;incstack = 0
 33842 ;; hardware stack exceeded
 33843  01F060  0EFE               	movlw	-2
 33844  01F062  6AE3               	clrf	plusw1,c
 33845                           
 33846                           ;stkvar	_divisor @ sp[(-4)+-4]
 33847  01F064  0EF9               	movlw	-7
 33848  01F066  AEE3               	btfss	plusw1,7,c
 33849  01F068  D009               	goto	l15466
 33850                           
 33851                           ;stkvar	_divisor @ sp[(-4)+-4]
 33852                           ;stkvar	_divisor @ sp[(-4)+-4]
 33853  01F06A  0EF8               	movlw	-8
 33854  01F06C  6CE3               	negf	plusw1,c
 33855  01F06E  0EF9               	movlw	-7
 33856  01F070  1EE3               	comf	plusw1,f,c
 33857  01F072  B0D8               	btfsc	status,0,c
 33858  01F074  2AE3               	incf	plusw1,f,c
 33859                           
 33860                           ;stkvar	_sign @ sp[(-4)+2]
 33861  01F076  0EFE               	movlw	-2
 33862  01F078  6AE3               	clrf	plusw1,c
 33863  01F07A  2AE3               	incf	plusw1,f,c
 33864  01F07C                     l15466:
 33865                           
 33866                           ;stkvar	_dividend @ sp[(-4)+-2]
 33867  01F07C  0EFB               	movlw	-5
 33868  01F07E  AEE3               	btfss	plusw1,7,c
 33869  01F080  D008               	goto	l15472
 33870                           
 33871                           ;stkvar	_dividend @ sp[(-4)+-2]
 33872                           ;stkvar	_dividend @ sp[(-4)+-2]
 33873  01F082  0EFA               	movlw	-6
 33874  01F084  6CE3               	negf	plusw1,c
 33875  01F086  0EFB               	movlw	-5
 33876  01F088  1EE3               	comf	plusw1,f,c
 33877  01F08A  B0D8               	btfsc	status,0,c
 33878  01F08C  2AE3               	incf	plusw1,f,c
 33879                           
 33880                           ;stkvar	_sign @ sp[(-4)+2]
 33881  01F08E  0EFE               	movlw	-2
 33882  01F090  70E3               	btg	plusw1,0,c
 33883  01F092                     l15472:
 33884                           
 33885                           ;stkvar	_quotient @ sp[(-4)+0]
 33886  01F092  0EFC               	movlw	-4
 33887  01F094  6AE3               	clrf	plusw1,c
 33888  01F096  0EFD               	movlw	-3
 33889  01F098  6AE3               	clrf	plusw1,c
 33890                           
 33891                           ;stkvar	_divisor @ sp[(-4)+-4]
 33892  01F09A  0EF8               	movlw	-8
 33893  01F09C  006F FF8C  F02A    	movff	plusw1,btemp
 33894  01F0A2  0EF9               	movlw	-7
 33895  01F0A4  50E3               	movf	plusw1,w,c
 33896  01F0A6  102A               	iorwf	btemp^0,w,c
 33897  01F0A8  B4D8               	btfsc	status,2,c
 33898  01F0AA  D066               	goto	u14430
 33899                           
 33900                           ;stkvar	_counter @ sp[(-4)+3]
 33901  01F0AC  0EFF               	movlw	-1
 33902  01F0AE  6AE3               	clrf	plusw1,c
 33903  01F0B0  D012               	goto	L38
 33904  01F0B2                     l15478:
 33905                           
 33906                           ;stkvar	_divisor @ sp[(-4)+-4]
 33907  01F0B2  0EF8               	movlw	-8
 33908  01F0B4  50E3               	movf	plusw1,w,c
 33909  01F0B6  90D8               	bcf	status,0,c
 33910  01F0B8  34E8               	rlcf	wreg,w,c
 33911  01F0BA  6E2A               	movwf	btemp^0,c
 33912  01F0BC  0EF8               	movlw	-8
 33913  01F0BE  0060  F0AB  FFE3   	movff	btemp,plusw1
 33914  01F0C4  0EF9               	movlw	-7
 33915  01F0C6  50E3               	movf	plusw1,w,c
 33916  01F0C8  34E8               	rlcf	wreg,w,c
 33917  01F0CA  6E2A               	movwf	btemp^0,c
 33918  01F0CC  0EF9               	movlw	-7
 33919  01F0CE  0060  F0AB  FFE3   	movff	btemp,plusw1
 33920                           
 33921                           ;stkvar	_counter @ sp[(-4)+3]
 33922  01F0D4  0EFF               	movlw	-1
 33923  01F0D6                     L38:
 33924  01F0D6  2AE3               	incf	plusw1,f,c
 33925                           
 33926                           ;stkvar	_divisor @ sp[(-4)+-4]
 33927  01F0D8  0EF9               	movlw	-7
 33928  01F0DA  AEE3               	btfss	plusw1,7,c
 33929  01F0DC  D7EA               	goto	l15478
 33930  01F0DE                     u14410:
 33931                           
 33932                           ;stkvar	_quotient @ sp[(-4)+0]
 33933  01F0DE  0EFC               	movlw	-4
 33934  01F0E0  50E3               	movf	plusw1,w,c
 33935  01F0E2  90D8               	bcf	status,0,c
 33936  01F0E4  34E8               	rlcf	wreg,w,c
 33937  01F0E6  6E2A               	movwf	btemp^0,c
 33938  01F0E8  0EFC               	movlw	-4
 33939  01F0EA  0060  F0AB  FFE3   	movff	btemp,plusw1
 33940  01F0F0  0EFD               	movlw	-3
 33941  01F0F2  50E3               	movf	plusw1,w,c
 33942  01F0F4  34E8               	rlcf	wreg,w,c
 33943  01F0F6  6E2A               	movwf	btemp^0,c
 33944  01F0F8  0EFD               	movlw	-3
 33945  01F0FA  0060  F0AB  FFE3   	movff	btemp,plusw1
 33946                           
 33947                           ;stkvar	_divisor @ sp[(-4)+-4]
 33948  01F100  0EF8               	movlw	-8
 33949  01F102  006F FF8C  F034    	movff	plusw1,btemp+10
 33950  01F108  0EF9               	movlw	-7
 33951  01F10A  006F FF8C  F035    	movff	plusw1,btemp+11
 33952                           
 33953                           ;stkvar	_dividend @ sp[(-4)+-2]
 33954  01F110  0EFA               	movlw	-6
 33955  01F112  006F FF8C  F032    	movff	plusw1,btemp+8
 33956  01F118  0EFB               	movlw	-5
 33957  01F11A  006F FF8C  F033    	movff	plusw1,btemp+9
 33958  01F120  5034               	movf	(btemp+10)^0,w,c
 33959  01F122  5C32               	subwf	(btemp+8)^0,w,c
 33960  01F124  5035               	movf	(btemp+11)^0,w,c
 33961  01F126  5833               	subwfb	(btemp+9)^0,w,c
 33962  01F128  A0D8               	btfss	status,0,c
 33963  01F12A  D016               	goto	l15492
 33964                           
 33965                           ;stkvar	_divisor @ sp[(-4)+-4]
 33966                           ;stkvar	_dividend @ sp[(-4)+-2]
 33967  01F12C  0EFA               	movlw	-6
 33968  01F12E  50E3               	movf	plusw1,w,c
 33969  01F130  6E2A               	movwf	btemp^0,c
 33970  01F132  0EF8               	movlw	-8
 33971  01F134  50E3               	movf	plusw1,w,c
 33972  01F136  5E2A               	subwf	btemp^0,f,c
 33973  01F138  0EFA               	movlw	-6
 33974  01F13A  0060  F0AB  FFE3   	movff	btemp,plusw1
 33975  01F140  0EFB               	movlw	-5
 33976  01F142  50E3               	movf	plusw1,w,c
 33977  01F144  6E2A               	movwf	btemp^0,c
 33978  01F146  0EF9               	movlw	-7
 33979  01F148  50E3               	movf	plusw1,w,c
 33980  01F14A  5A2A               	subwfb	btemp^0,f,c
 33981  01F14C  0EFB               	movlw	-5
 33982  01F14E  0060  F0AB  FFE3   	movff	btemp,plusw1
 33983                           
 33984                           ;stkvar	_quotient @ sp[(-4)+0]
 33985  01F154  0EFC               	movlw	-4
 33986  01F156  80E3               	bsf	plusw1,0,c
 33987  01F158                     l15492:
 33988                           
 33989                           ;stkvar	_divisor @ sp[(-4)+-4]
 33990  01F158  90D8               	bcf	status,0,c
 33991  01F15A  0EF9               	movlw	-7
 33992  01F15C  32E3               	rrcf	plusw1,f,c
 33993  01F15E  0EF8               	movlw	-8
 33994  01F160  32E3               	rrcf	plusw1,f,c
 33995                           
 33996                           ;stkvar	_counter @ sp[(-4)+3]
 33997  01F162  0EFF               	movlw	-1
 33998  01F164  50E3               	movf	plusw1,w,c
 33999  01F166  6E2A               	movwf	btemp^0,c
 34000  01F168  0E01               	movlw	1
 34001  01F16A  5E2A               	subwf	btemp^0,f,c
 34002  01F16C  0EFF               	movlw	-1
 34003  01F16E  0060  F0AB  FFE3   	movff	btemp,plusw1
 34004  01F174  A4D8               	btfss	status,2,c
 34005  01F176  D7B3               	goto	u14410
 34006  01F178                     u14430:
 34007                           
 34008                           ;stkvar	_sign @ sp[(-4)+2]
 34009  01F178  0EFE               	movlw	-2
 34010  01F17A  50E3               	movf	plusw1,w,c
 34011  01F17C  B4D8               	btfsc	status,2,c
 34012  01F17E  D006               	goto	l15500
 34013                           
 34014                           ;stkvar	_quotient @ sp[(-4)+0]
 34015                           ;stkvar	_quotient @ sp[(-4)+0]
 34016  01F180  0EFC               	movlw	-4
 34017  01F182  6CE3               	negf	plusw1,c
 34018  01F184  0EFD               	movlw	-3
 34019  01F186  1EE3               	comf	plusw1,f,c
 34020  01F188  B0D8               	btfsc	status,0,c
 34021  01F18A  2AE3               	incf	plusw1,f,c
 34022  01F18C                     l15500:
 34023                           
 34024                           ;stkvar	_quotient @ sp[(-4)+0]
 34025  01F18C  0EFC               	movlw	-4
 34026  01F18E  006F FF8C  F02A    	movff	plusw1,btemp
 34027  01F194  0EFD               	movlw	-3
 34028  01F196  006F FF8C  F02B    	movff	plusw1,btemp+1
 34029                           
 34030                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 34031  01F19C  0EF8               	movlw	248
 34032  01F19E  26E1               	addwf	fsr1l,f,c
 34033  01F1A0  0EFF               	movlw	255
 34034  01F1A2  22E2               	addwfc	fsr1h,f,c
 34035  01F1A4  0012               	return		;funcret
 34036  01F1A6                     __end_of___awdiv:
 34037                           	opt callstack 0
 34038                           
 34039 ;; *************** function _dtoa *****************
 34040 ;; Defined at:
 34041 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 34042 ;; Parameters:    Size  Location     Type
 34043 ;;  fp              2  [STACK] PTR struct _IO_FILE
 34044 ;;		 -> f(6), NULL(0), 
 34045 ;;  d               8  [STACK] long long 
 34046 ;; Auto vars:     Size  Location     Type
 34047 ;;  n               8  [STACK] long long 
 34048 ;;  i               2  [STACK] int 
 34049 ;;  s               2  [STACK] int 
 34050 ;;  w               2  [STACK] int 
 34051 ;;  p               2  [STACK] int 
 34052 ;; Return value:  Size  Location     Type
 34053 ;;                  2  [STACK] int 
 34054 ;; Registers used:
 34055 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 34056 ;; Tracked objects:
 34057 ;;		On entry : 0/0
 34058 ;;		On exit  : 0/0
 34059 ;;		Unchanged: 0/0
 34060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34065 ;;Total ram usage:        0 bytes
 34066 ;; Hardware stack levels used:    1
 34067 ;; Hardware stack levels required when called:   20
 34068 ;; This function calls:
 34069 ;;		___aodiv
 34070 ;;		___aomod
 34071 ;;		_abs
 34072 ;;		_pad
 34073 ;; This function is called by:
 34074 ;;		_vfpfcnvrt
 34075 ;; This function uses a reentrant model
 34076 ;;
 34077                           
 34078                           	psect	text114
 34079  018BEC                     __ptext114:
 34080                           	opt callstack 0
 34081  018BEC                     _dtoa:
 34082                           	opt callstack 0
 34083                           
 34084                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 34085  018BEC  0E12               	movlw	18
 34086  018BEE  26E1               	addwf	fsr1l,f,c
 34087  018BF0  0E00               	movlw	0
 34088  018BF2  22E2               	addwfc	fsr1h,f,c
 34089                           
 34090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 34091                           ;stkvar	_d @ sp[(-18)+-10]
 34092                           
 34093                           ;incstack = 0
 34094 ;; hardware stack exceeded
 34095  018BF4  0EE4               	movlw	228
 34096  018BF6  24E1               	addwf	fsr1l,w,c
 34097  018BF8  6ED9               	movwf	fsr2l,c
 34098  018BFA  0EFF               	movlw	255
 34099  018BFC  20E2               	addwfc	fsr1h,w,c
 34100  018BFE  6EDA               	movwf	fsr2h,c
 34101                           
 34102                           ;stkvar	_n @ sp[(-18)+2]
 34103  018C00  0E08               	movlw	8
 34104  018C02  6E2A               	movwf	btemp^0,c
 34105  018C04  0EF0               	movlw	-16
 34106  018C06                     us1454999:
 34107  018C06  006F FF7B FFE3     	movff	postinc2,plusw1
 34108  018C0C  28E8               	incf	wreg,w,c
 34109  018C0E  2E2A               	decfsz	btemp^0,f,c
 34110  018C10  D7FA               	bra	us1454999
 34111                           
 34112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 34113                           ;stkvar	_n @ sp[(-18)+2]
 34114  018C12  0EF7               	movlw	-9
 34115  018C14  AEE3               	btfss	plusw1,7,c
 34116  018C16  D002               	goto	u14550
 34117  018C18  0E01               	movlw	1
 34118  018C1A  D001               	goto	u14560
 34119  018C1C                     u14550:
 34120  018C1C  0E00               	movlw	0
 34121  018C1E                     u14560:
 34122  018C1E  6E34               	movwf	(btemp+10)^0,c
 34123  018C20  6A35               	clrf	(btemp+11)^0,c
 34124                           
 34125                           ;stkvar	_s @ sp[(-18)+12]
 34126  018C22  0EFA               	movlw	-6
 34127  018C24  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34128  018C2A  0EFB               	movlw	-5
 34129  018C2C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34130                           
 34131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 34132                           ;stkvar	_s @ sp[(-18)+12]
 34133  018C32  0EFA               	movlw	-6
 34134  018C34  006F FF8C  F02A    	movff	plusw1,btemp
 34135  018C3A  0EFB               	movlw	-5
 34136  018C3C  50E3               	movf	plusw1,w,c
 34137  018C3E  102A               	iorwf	btemp^0,w,c
 34138  018C40  B4D8               	btfsc	status,2,c
 34139  018C42  D025               	goto	u14580
 34140                           
 34141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 34142                           ;stkvar	_n @ sp[(-18)+2]
 34143                           ;stkvar	_n @ sp[(-18)+2]
 34144  018C44  0EF0               	movlw	-16
 34145  018C46  6CE3               	negf	plusw1,c
 34146  018C48  0EF1               	movlw	-15
 34147  018C4A  1EE3               	comf	plusw1,f,c
 34148  018C4C  0EF2               	movlw	-14
 34149  018C4E  1EE3               	comf	plusw1,f,c
 34150  018C50  0EF3               	movlw	-13
 34151  018C52  1EE3               	comf	plusw1,f,c
 34152  018C54  0EF4               	movlw	-12
 34153  018C56  1EE3               	comf	plusw1,f,c
 34154  018C58  0EF5               	movlw	-11
 34155  018C5A  1EE3               	comf	plusw1,f,c
 34156  018C5C  0EF6               	movlw	-10
 34157  018C5E  1EE3               	comf	plusw1,f,c
 34158  018C60  0EF7               	movlw	-9
 34159  018C62  1EE3               	comf	plusw1,f,c
 34160  018C64  E314               	bnc	u14580
 34161  018C66  0EF1               	movlw	-15
 34162  018C68  2AE3               	incf	plusw1,f,c
 34163  018C6A  E311               	bnc	u14580
 34164  018C6C  0EF2               	movlw	-14
 34165  018C6E  2AE3               	incf	plusw1,f,c
 34166  018C70  E30E               	bnc	u14580
 34167  018C72  0EF3               	movlw	-13
 34168  018C74  2AE3               	incf	plusw1,f,c
 34169  018C76  E30B               	bnc	u14580
 34170  018C78  0EF4               	movlw	-12
 34171  018C7A  2AE3               	incf	plusw1,f,c
 34172  018C7C  E308               	bnc	u14580
 34173  018C7E  0EF5               	movlw	-11
 34174  018C80  2AE3               	incf	plusw1,f,c
 34175  018C82  E305               	bnc	u14580
 34176  018C84  0EF6               	movlw	-10
 34177  018C86  2AE3               	incf	plusw1,f,c
 34178  018C88  E302               	bnc	u14580
 34179  018C8A  0EF7               	movlw	-9
 34180  018C8C  2AE3               	incf	plusw1,f,c
 34181  018C8E                     u14580:
 34182                           
 34183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 34184  018C8E  AE4D               	btfss	(_prec+1)^0,7,c
 34185                           
 34186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 34187  018C90  924E               	bcf	_flags^0,1,c
 34188                           
 34189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 34190  018C92  BE4D               	btfsc	(_prec+1)^0,7,c
 34191  018C94  D005               	goto	u14600
 34192  018C96  504D               	movf	(_prec+1)^0,w,c
 34193  018C98  E110               	bnz	l15578
 34194  018C9A  044C               	decf	_prec^0,w,c
 34195  018C9C  B0D8               	btfsc	status,0,c
 34196  018C9E  D00D               	goto	l15578
 34197  018CA0                     u14600:
 34198  018CA0  0E01               	movlw	1
 34199  018CA2  6E34               	movwf	(btemp+10)^0,c
 34200  018CA4  0E00               	movlw	0
 34201  018CA6  6E35               	movwf	(btemp+11)^0,c
 34202                           
 34203                           ;stkvar	_p @ sp[(-18)+16]
 34204  018CA8  0EFE               	movlw	-2
 34205  018CAA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34206  018CB0  0EFF               	movlw	-1
 34207  018CB2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34208  018CB8  D008               	goto	l2487
 34209  018CBA                     l15578:
 34210                           
 34211                           ;stkvar	_p @ sp[(-18)+16]
 34212  018CBA  0EFE               	movlw	-2
 34213  018CBC  0060  F133  FFE3   	movff	_prec,plusw1
 34214  018CC2  0EFF               	movlw	-1
 34215  018CC4  0060  F137  FFE3   	movff	_prec+1,plusw1
 34216  018CCA                     l2487:
 34217                           
 34218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 34219                           ;stkvar	_w @ sp[(-18)+14]
 34220  018CCA  0EFC               	movlw	-4
 34221  018CCC  0060  F12B  FFE3   	movff	_width,plusw1
 34222  018CD2  0EFD               	movlw	-3
 34223  018CD4  0060  F12F  FFE3   	movff	_width+1,plusw1
 34224                           
 34225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 34226                           ;stkvar	_s @ sp[(-18)+12]
 34227  018CDA  0EFA               	movlw	-6
 34228  018CDC  006F FF8C  F02A    	movff	plusw1,btemp
 34229  018CE2  0EFB               	movlw	-5
 34230  018CE4  50E3               	movf	plusw1,w,c
 34231  018CE6  102A               	iorwf	btemp^0,w,c
 34232  018CE8  A4D8               	btfss	status,2,c
 34233  018CEA  D002               	goto	u14620
 34234  018CEC  A44E               	btfss	_flags^0,2,c
 34235  018CEE  D00A               	goto	l15586
 34236  018CF0                     u14620:
 34237                           
 34238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 34239                           ;stkvar	_w @ sp[(-18)+14]
 34240  018CF0  50E1               	movf	fsr1l,w,c
 34241  018CF2  0FFC               	addlw	-4
 34242  018CF4  6ED9               	movwf	fsr2l,c
 34243  018CF6  50E2               	movf	fsr1h,w,c
 34244  018CF8  6EDA               	movwf	fsr2h,c
 34245  018CFA  0EFF               	movlw	255
 34246  018CFC  22DA               	addwfc	fsr2h,f,c
 34247  018CFE  06DE               	decf	postinc2,f,c
 34248  018D00  0E00               	movlw	0
 34249  018D02  5ADD               	subwfb	postdec2,f,c
 34250  018D04                     l15586:
 34251                           
 34252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 34253  018D04  0E4F               	movlw	79
 34254  018D06  6E34               	movwf	(btemp+10)^0,c
 34255  018D08  0E00               	movlw	0
 34256  018D0A  6E35               	movwf	(btemp+11)^0,c
 34257                           
 34258                           ;stkvar	_i @ sp[(-18)+10]
 34259  018D0C  0EF8               	movlw	-8
 34260  018D0E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34261  018D14  0EF9               	movlw	-7
 34262  018D16  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34263                           
 34264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 34265  018D1C  0103               	movlb	3	; () banked
 34266  018D1E  6BA3               	clrf	(_dbuf+79)& (0+255),b
 34267                           
 34268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 34269  018D20  D109               	goto	l15600
 34270  018D22                     l15590:
 34271                           
 34272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 34273                           ;stkvar	_i @ sp[(-18)+10]
 34274  018D22  50E1               	movf	fsr1l,w,c
 34275  018D24  0FF8               	addlw	-8
 34276  018D26  6ED9               	movwf	fsr2l,c
 34277  018D28  50E2               	movf	fsr1h,w,c
 34278  018D2A  6EDA               	movwf	fsr2h,c
 34279  018D2C  0EFF               	movlw	255
 34280  018D2E  22DA               	addwfc	fsr2h,f,c
 34281  018D30  06DE               	decf	postinc2,f,c
 34282  018D32  0E00               	movlw	0
 34283  018D34  5ADD               	subwfb	postdec2,f,c
 34284                           
 34285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 34286  018D36  0E0A               	movlw	10
 34287  018D38  6EE6               	movwf	postinc1,c
 34288  018D3A  0E00               	movlw	0
 34289  018D3C  6EE6               	movwf	postinc1,c
 34290  018D3E  0E00               	movlw	0
 34291  018D40  6EE6               	movwf	postinc1,c
 34292  018D42  0E00               	movlw	0
 34293  018D44  6EE6               	movwf	postinc1,c
 34294  018D46  0E00               	movlw	0
 34295  018D48  6EE6               	movwf	postinc1,c
 34296  018D4A  0E00               	movlw	0
 34297  018D4C  6EE6               	movwf	postinc1,c
 34298  018D4E  0E00               	movlw	0
 34299  018D50  6EE6               	movwf	postinc1,c
 34300  018D52  0E00               	movlw	0
 34301  018D54  6EE6               	movwf	postinc1,c
 34302                           
 34303                           ;stkvar	_n @ sp[(-26)+2]
 34304  018D56  50E1               	movf	fsr1l,w,c
 34305  018D58  0FE8               	addlw	-24
 34306  018D5A  6ED9               	movwf	fsr2l,c
 34307  018D5C  50E2               	movf	fsr1h,w,c
 34308  018D5E  6EDA               	movwf	fsr2h,c
 34309  018D60  0EFF               	movlw	255
 34310  018D62  22DA               	addwfc	fsr2h,f,c
 34311  018D64  006F FF7B FFE6     	movff	postinc2,postinc1
 34312  018D6A  006F FF7B FFE6     	movff	postinc2,postinc1
 34313  018D70  006F FF7B FFE6     	movff	postinc2,postinc1
 34314  018D76  006F FF7B FFE6     	movff	postinc2,postinc1
 34315  018D7C  006F FF7B FFE6     	movff	postinc2,postinc1
 34316  018D82  006F FF7B FFE6     	movff	postinc2,postinc1
 34317  018D88  006F FF7B FFE6     	movff	postinc2,postinc1
 34318  018D8E  006F FF7B FFE6     	movff	postinc2,postinc1
 34319  018D94  ECC8  F0E5         	call	___aomod	;wreg free
 34320  018D98  52E5               	movf	postdec1,f,c
 34321  018D9A  006F FF9C  F041    	movff	indf1,btemp+23
 34322  018DA0  52E5               	movf	postdec1,f,c
 34323  018DA2  006F FF9C  F040    	movff	indf1,btemp+22
 34324  018DA8  52E5               	movf	postdec1,f,c
 34325  018DAA  006F FF9C  F03F    	movff	indf1,btemp+21
 34326  018DB0  52E5               	movf	postdec1,f,c
 34327  018DB2  006F FF9C  F03E    	movff	indf1,btemp+20
 34328  018DB8  52E5               	movf	postdec1,f,c
 34329  018DBA  006F FF9C  F03D    	movff	indf1,btemp+19
 34330  018DC0  52E5               	movf	postdec1,f,c
 34331  018DC2  006F FF9C  F03C    	movff	indf1,btemp+18
 34332  018DC8  52E5               	movf	postdec1,f,c
 34333  018DCA  006F FF9C  F03B    	movff	indf1,btemp+17
 34334  018DD0  52E5               	movf	postdec1,f,c
 34335  018DD2  006F FF9C  F03A    	movff	indf1,btemp+16
 34336  018DD8  0EF8               	movlw	248
 34337  018DDA  26E1               	addwf	fsr1l,f,c
 34338  018DDC  0EFF               	movlw	255
 34339  018DDE  22E2               	addwfc	fsr1h,f,c
 34340  018DE0  0060  F0E8  F034   	movff	btemp+16,btemp+10
 34341  018DE6  0060  F0EC  F035   	movff	btemp+17,btemp+11
 34342  018DEC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 34343  018DF2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 34344  018DF8  ECF1  F00E         	call	_abs	;wreg free
 34345  018DFC  0E30               	movlw	48
 34346  018DFE  262A               	addwf	btemp^0,f,c
 34347                           
 34348                           ;stkvar	_i @ sp[(-18)+10]
 34349  018E00  0EF8               	movlw	-8
 34350  018E02  006F FF8C  F034    	movff	plusw1,btemp+10
 34351  018E08  0EF9               	movlw	-7
 34352  018E0A  006F FF8C  F035    	movff	plusw1,btemp+11
 34353  018E10  0E54               	movlw	low _dbuf
 34354  018E12  2434               	addwf	(btemp+10)^0,w,c
 34355  018E14  6ED9               	movwf	fsr2l,c
 34356  018E16  0E03               	movlw	high _dbuf
 34357  018E18  2035               	addwfc	(btemp+11)^0,w,c
 34358  018E1A  6EDA               	movwf	fsr2h,c
 34359  018E1C  0060  F0AB  FFDF   	movff	btemp,indf2
 34360                           
 34361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 34362                           ;stkvar	_p @ sp[(-18)+16]
 34363  018E22  50E1               	movf	fsr1l,w,c
 34364  018E24  0FFE               	addlw	-2
 34365  018E26  6ED9               	movwf	fsr2l,c
 34366  018E28  50E2               	movf	fsr1h,w,c
 34367  018E2A  6EDA               	movwf	fsr2h,c
 34368  018E2C  0EFF               	movlw	255
 34369  018E2E  22DA               	addwfc	fsr2h,f,c
 34370  018E30  06DE               	decf	postinc2,f,c
 34371  018E32  0E00               	movlw	0
 34372  018E34  5ADD               	subwfb	postdec2,f,c
 34373                           
 34374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 34375                           ;stkvar	_w @ sp[(-18)+14]
 34376  018E36  50E1               	movf	fsr1l,w,c
 34377  018E38  0FFC               	addlw	-4
 34378  018E3A  6ED9               	movwf	fsr2l,c
 34379  018E3C  50E2               	movf	fsr1h,w,c
 34380  018E3E  6EDA               	movwf	fsr2h,c
 34381  018E40  0EFF               	movlw	255
 34382  018E42  22DA               	addwfc	fsr2h,f,c
 34383  018E44  06DE               	decf	postinc2,f,c
 34384  018E46  0E00               	movlw	0
 34385  018E48  5ADD               	subwfb	postdec2,f,c
 34386                           
 34387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 34388  018E4A  0E0A               	movlw	10
 34389  018E4C  6EE6               	movwf	postinc1,c
 34390  018E4E  0E00               	movlw	0
 34391  018E50  6EE6               	movwf	postinc1,c
 34392  018E52  0E00               	movlw	0
 34393  018E54  6EE6               	movwf	postinc1,c
 34394  018E56  0E00               	movlw	0
 34395  018E58  6EE6               	movwf	postinc1,c
 34396  018E5A  0E00               	movlw	0
 34397  018E5C  6EE6               	movwf	postinc1,c
 34398  018E5E  0E00               	movlw	0
 34399  018E60  6EE6               	movwf	postinc1,c
 34400  018E62  0E00               	movlw	0
 34401  018E64  6EE6               	movwf	postinc1,c
 34402  018E66  0E00               	movlw	0
 34403  018E68  6EE6               	movwf	postinc1,c
 34404                           
 34405                           ;stkvar	_n @ sp[(-26)+2]
 34406  018E6A  50E1               	movf	fsr1l,w,c
 34407  018E6C  0FE8               	addlw	-24
 34408  018E6E  6ED9               	movwf	fsr2l,c
 34409  018E70  50E2               	movf	fsr1h,w,c
 34410  018E72  6EDA               	movwf	fsr2h,c
 34411  018E74  0EFF               	movlw	255
 34412  018E76  22DA               	addwfc	fsr2h,f,c
 34413  018E78  006F FF7B FFE6     	movff	postinc2,postinc1
 34414  018E7E  006F FF7B FFE6     	movff	postinc2,postinc1
 34415  018E84  006F FF7B FFE6     	movff	postinc2,postinc1
 34416  018E8A  006F FF7B FFE6     	movff	postinc2,postinc1
 34417  018E90  006F FF7B FFE6     	movff	postinc2,postinc1
 34418  018E96  006F FF7B FFE6     	movff	postinc2,postinc1
 34419  018E9C  006F FF7B FFE6     	movff	postinc2,postinc1
 34420  018EA2  006F FF7B FFE6     	movff	postinc2,postinc1
 34421  018EA8  EC09  F0E1         	call	___aodiv	;wreg free
 34422  018EAC  52E5               	movf	postdec1,f,c
 34423  018EAE  006F FF9C  F041    	movff	indf1,btemp+23
 34424  018EB4  52E5               	movf	postdec1,f,c
 34425  018EB6  006F FF9C  F040    	movff	indf1,btemp+22
 34426  018EBC  52E5               	movf	postdec1,f,c
 34427  018EBE  006F FF9C  F03F    	movff	indf1,btemp+21
 34428  018EC4  52E5               	movf	postdec1,f,c
 34429  018EC6  006F FF9C  F03E    	movff	indf1,btemp+20
 34430  018ECC  52E5               	movf	postdec1,f,c
 34431  018ECE  006F FF9C  F03D    	movff	indf1,btemp+19
 34432  018ED4  52E5               	movf	postdec1,f,c
 34433  018ED6  006F FF9C  F03C    	movff	indf1,btemp+18
 34434  018EDC  52E5               	movf	postdec1,f,c
 34435  018EDE  006F FF9C  F03B    	movff	indf1,btemp+17
 34436  018EE4  52E5               	movf	postdec1,f,c
 34437  018EE6  006F FF9C  F03A    	movff	indf1,btemp+16
 34438  018EEC  0EF8               	movlw	248
 34439  018EEE  26E1               	addwf	fsr1l,f,c
 34440  018EF0  0EFF               	movlw	255
 34441  018EF2  22E2               	addwfc	fsr1h,f,c
 34442                           
 34443                           ;stkvar	_n @ sp[(-18)+2]
 34444  018EF4  0EF0               	movlw	-16
 34445  018EF6  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 34446  018EFC  0EF1               	movlw	-15
 34447  018EFE  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 34448  018F04  0EF2               	movlw	-14
 34449  018F06  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 34450  018F0C  0EF3               	movlw	-13
 34451  018F0E  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 34452  018F14  0EF4               	movlw	-12
 34453  018F16  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 34454  018F1C  0EF5               	movlw	-11
 34455  018F1E  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 34456  018F24  0EF6               	movlw	-10
 34457  018F26  0060  F103  FFE3   	movff	btemp+22,plusw1
 34458  018F2C  0EF7               	movlw	-9
 34459  018F2E  0060  F107  FFE3   	movff	btemp+23,plusw1
 34460  018F34                     l15600:
 34461                           
 34462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 34463                           ;stkvar	_i @ sp[(-18)+10]
 34464  018F34  0EF9               	movlw	-7
 34465  018F36  BEE3               	btfsc	plusw1,7,c
 34466  018F38  D036               	goto	u14670
 34467  018F3A  0EF9               	movlw	-7
 34468  018F3C  50E3               	movf	plusw1,w,c
 34469  018F3E  E104               	bnz	u14630
 34470  018F40  0EF8               	movlw	-8
 34471  018F42  04E3               	decf	plusw1,w,c
 34472  018F44  A0D8               	btfss	status,0,c
 34473  018F46  D02F               	goto	u14670
 34474  018F48                     u14630:
 34475                           
 34476                           ;stkvar	_n @ sp[(-18)+2]
 34477  018F48  0EF0               	movlw	-16
 34478  018F4A  50E3               	movf	plusw1,w,c
 34479  018F4C  E115               	bnz	u14641
 34480  018F4E  0EF1               	movlw	-15
 34481  018F50  50E3               	movf	plusw1,w,c
 34482  018F52  E112               	bnz	u14641
 34483  018F54  0EF2               	movlw	-14
 34484  018F56  50E3               	movf	plusw1,w,c
 34485  018F58  E10F               	bnz	u14641
 34486  018F5A  0EF3               	movlw	-13
 34487  018F5C  50E3               	movf	plusw1,w,c
 34488  018F5E  E10C               	bnz	u14641
 34489  018F60  0EF4               	movlw	-12
 34490  018F62  50E3               	movf	plusw1,w,c
 34491  018F64  E109               	bnz	u14641
 34492  018F66  0EF5               	movlw	-11
 34493  018F68  50E3               	movf	plusw1,w,c
 34494  018F6A  E106               	bnz	u14641
 34495  018F6C  0EF6               	movlw	-10
 34496  018F6E  50E3               	movf	plusw1,w,c
 34497  018F70  E103               	bnz	u14641
 34498  018F72  0EF7               	movlw	-9
 34499  018F74  50E3               	movf	plusw1,w,c
 34500  018F76  A4D8               	btfss	status,2,c
 34501  018F78                     u14641:
 34502  018F78  D6D4               	goto	l15590
 34503                           
 34504                           ;stkvar	_p @ sp[(-18)+16]
 34505  018F7A  0EFF               	movlw	-1
 34506  018F7C  BEE3               	btfsc	plusw1,7,c
 34507  018F7E  D007               	goto	u14650
 34508  018F80  0EFF               	movlw	-1
 34509  018F82  50E3               	movf	plusw1,w,c
 34510  018F84  E103               	bnz	u14651
 34511  018F86  0EFE               	movlw	-2
 34512  018F88  04E3               	decf	plusw1,w,c
 34513  018F8A  B0D8               	btfsc	status,0,c
 34514  018F8C                     u14651:
 34515  018F8C  D6CA               	goto	l15590
 34516  018F8E                     u14650:
 34517                           
 34518                           ;stkvar	_w @ sp[(-18)+14]
 34519  018F8E  0EFD               	movlw	-3
 34520  018F90  BEE3               	btfsc	plusw1,7,c
 34521  018F92  D009               	goto	u14670
 34522  018F94  0EFD               	movlw	-3
 34523  018F96  50E3               	movf	plusw1,w,c
 34524  018F98  E104               	bnz	u14660
 34525  018F9A  0EFC               	movlw	-4
 34526  018F9C  04E3               	decf	plusw1,w,c
 34527  018F9E  A0D8               	btfss	status,0,c
 34528  018FA0  D002               	goto	u14670
 34529  018FA2                     u14660:
 34530  018FA2  B24E               	btfsc	_flags^0,1,c
 34531  018FA4  D6BE               	goto	l15590
 34532  018FA6                     u14670:
 34533                           
 34534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 34535                           ;stkvar	_s @ sp[(-18)+12]
 34536  018FA6  0EFA               	movlw	-6
 34537  018FA8  006F FF8C  F02A    	movff	plusw1,btemp
 34538  018FAE  0EFB               	movlw	-5
 34539  018FB0  50E3               	movf	plusw1,w,c
 34540  018FB2  102A               	iorwf	btemp^0,w,c
 34541  018FB4  A4D8               	btfss	status,2,c
 34542  018FB6  D002               	goto	u14690
 34543  018FB8  A44E               	btfss	_flags^0,2,c
 34544  018FBA  D033               	goto	l15624
 34545  018FBC                     u14690:
 34546                           
 34547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 34548                           ;stkvar	_i @ sp[(-18)+10]
 34549  018FBC  50E1               	movf	fsr1l,w,c
 34550  018FBE  0FF8               	addlw	-8
 34551  018FC0  6ED9               	movwf	fsr2l,c
 34552  018FC2  50E2               	movf	fsr1h,w,c
 34553  018FC4  6EDA               	movwf	fsr2h,c
 34554  018FC6  0EFF               	movlw	255
 34555  018FC8  22DA               	addwfc	fsr2h,f,c
 34556  018FCA  06DE               	decf	postinc2,f,c
 34557  018FCC  0E00               	movlw	0
 34558  018FCE  5ADD               	subwfb	postdec2,f,c
 34559                           
 34560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 34561                           ;stkvar	_s @ sp[(-18)+12]
 34562  018FD0  0EFA               	movlw	-6
 34563  018FD2  006F FF8C  F02A    	movff	plusw1,btemp
 34564  018FD8  0EFB               	movlw	-5
 34565  018FDA  50E3               	movf	plusw1,w,c
 34566  018FDC  102A               	iorwf	btemp^0,w,c
 34567  018FDE  A4D8               	btfss	status,2,c
 34568  018FE0  D002               	goto	l15620
 34569  018FE2  0E2B               	movlw	43
 34570  018FE4  D001               	goto	L39
 34571  018FE6                     l15620:
 34572  018FE6  0E2D               	movlw	45
 34573  018FE8                     L39:
 34574  018FE8  6E34               	movwf	(btemp+10)^0,c
 34575  018FEA  0E00               	movlw	0
 34576  018FEC  6E35               	movwf	(btemp+11)^0,c
 34577                           
 34578                           ;stkvar	_dtoa$6590 @ sp[(-18)+0]
 34579  018FEE  0EEE               	movlw	-18
 34580  018FF0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34581  018FF6  0EEF               	movlw	-17
 34582  018FF8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34583                           
 34584                           ;stkvar	_dtoa$6590 @ sp[(-18)+0]
 34585                           ;stkvar	_i @ sp[(-18)+10]
 34586  018FFE  0EF8               	movlw	-8
 34587  019000  006F FF8C  F034    	movff	plusw1,btemp+10
 34588  019006  0EF9               	movlw	-7
 34589  019008  006F FF8C  F035    	movff	plusw1,btemp+11
 34590  01900E  0E54               	movlw	low _dbuf
 34591  019010  2434               	addwf	(btemp+10)^0,w,c
 34592  019012  6ED9               	movwf	fsr2l,c
 34593  019014  0E03               	movlw	high _dbuf
 34594  019016  2035               	addwfc	(btemp+11)^0,w,c
 34595  019018  6EDA               	movwf	fsr2h,c
 34596  01901A  0EEE               	movlw	-18
 34597  01901C  006F FF8F FFDF     	movff	plusw1,indf2
 34598  019022                     l15624:
 34599                           
 34600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 34601                           ;stkvar	_w @ sp[(-18)+14]
 34602  019022  0EFC               	movlw	-4
 34603  019024  006F FF8F FFE6     	movff	plusw1,postinc1
 34604  01902A  006F FF8F FFE6     	movff	plusw1,postinc1
 34605                           
 34606                           ;stkvar	_i @ sp[(-20)+10]
 34607  019030  0E54               	movlw	low _dbuf
 34608  019032  6E34               	movwf	(btemp+10)^0,c
 34609  019034  0E03               	movlw	high _dbuf
 34610  019036  6E35               	movwf	(btemp+11)^0,c
 34611  019038  0EF6               	movlw	-10
 34612  01903A  50E3               	movf	plusw1,w,c
 34613  01903C  2634               	addwf	(btemp+10)^0,f,c
 34614  01903E  0EF7               	movlw	-9
 34615  019040  50E3               	movf	plusw1,w,c
 34616  019042  2235               	addwfc	(btemp+11)^0,f,c
 34617  019044  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 34618  01904A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 34619                           
 34620                           ;stkvar	_fp @ sp[(-22)+-2]
 34621  019050  0EE8               	movlw	-24
 34622  019052  006F FF8F FFE6     	movff	plusw1,postinc1
 34623  019058  006F FF8F FFE6     	movff	plusw1,postinc1
 34624  01905E  ECE7  F0FC         	call	_pad	;wreg free
 34625                           
 34626                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 34627  019062  0EE4               	movlw	228
 34628  019064  26E1               	addwf	fsr1l,f,c
 34629  019066  0EFF               	movlw	255
 34630  019068  22E2               	addwfc	fsr1h,f,c
 34631  01906A  0012               	return		;funcret
 34632  01906C                     __end_of_dtoa:
 34633                           	opt callstack 0
 34634                           
 34635 ;; *************** function _abs *****************
 34636 ;; Defined at:
 34637 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 34638 ;; Parameters:    Size  Location     Type
 34639 ;;  a               2  [STACK] int 
 34640 ;; Auto vars:     Size  Location     Type
 34641 ;;		None
 34642 ;; Return value:  Size  Location     Type
 34643 ;;                  2  [STACK] int 
 34644 ;; Registers used:
 34645 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 34646 ;; Tracked objects:
 34647 ;;		On entry : 0/3
 34648 ;;		On exit  : 0/0
 34649 ;;		Unchanged: 0/0
 34650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34655 ;;Total ram usage:        0 bytes
 34656 ;; Hardware stack levels used:    1
 34657 ;; Hardware stack levels required when called:   15
 34658 ;; This function calls:
 34659 ;;		Nothing
 34660 ;; This function is called by:
 34661 ;;		_dtoa
 34662 ;; This function uses a reentrant model
 34663 ;;
 34664                           
 34665                           	psect	text115
 34666  001DE2                     __ptext115:
 34667                           	opt callstack 0
 34668  001DE2                     _abs:
 34669                           	opt callstack 0
 34670                           
 34671                           ;stkvar	_a @ sp[(0)+-2]
 34672                           
 34673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34674                           ;incstack = 0
 34675 ;; hardware stack exceeded
 34676  001DE2  0EFF               	movlw	-1
 34677  001DE4  BEE3               	btfsc	plusw1,7,c
 34678  001DE6  D007               	goto	u7740
 34679  001DE8  0EFF               	movlw	-1
 34680  001DEA  50E3               	movf	plusw1,w,c
 34681  001DEC  E112               	bnz	l10092
 34682  001DEE  0EFE               	movlw	-2
 34683  001DF0  04E3               	decf	plusw1,w,c
 34684  001DF2  B0D8               	btfsc	status,0,c
 34685  001DF4  D00E               	goto	l10092
 34686  001DF6                     u7740:
 34687                           
 34688                           ;stkvar	_a @ sp[(0)+-2]
 34689  001DF6  0EFE               	movlw	-2
 34690  001DF8  006F FF8C  F02A    	movff	plusw1,btemp
 34691  001DFE  1E2A               	comf	btemp^0,f,c
 34692  001E00  0EFF               	movlw	-1
 34693  001E02  006F FF8C  F02B    	movff	plusw1,btemp+1
 34694  001E08  1E2B               	comf	(btemp+1)^0,f,c
 34695  001E0A  2A2A               	incf	btemp^0,f,c
 34696  001E0C  B4D8               	btfsc	status,2,c
 34697  001E0E  2A2B               	incf	(btemp+1)^0,f,c
 34698  001E10  D008               	goto	l3413
 34699  001E12                     l10092:
 34700                           
 34701                           ;stkvar	_a @ sp[(0)+-2]
 34702  001E12  0EFE               	movlw	-2
 34703  001E14  006F FF8C  F02A    	movff	plusw1,btemp
 34704  001E1A  0EFF               	movlw	-1
 34705  001E1C  006F FF8C  F02B    	movff	plusw1,btemp+1
 34706  001E22                     l3413:
 34707                           
 34708                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 34709  001E22  52E5               	movf	postdec1,f,c
 34710  001E24  52E5               	movf	postdec1,f,c
 34711  001E26  0012               	return		;funcret
 34712  001E28                     __end_of_abs:
 34713                           	opt callstack 0
 34714                           
 34715 ;; *************** function ___aomod *****************
 34716 ;; Defined at:
 34717 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 34718 ;; Parameters:    Size  Location     Type
 34719 ;;  dividend        8  [STACK] long long 
 34720 ;;  divisor         8  [STACK] long long 
 34721 ;; Auto vars:     Size  Location     Type
 34722 ;;  sign            1  [STACK] unsigned char 
 34723 ;;  counter         1  [STACK] unsigned char 
 34724 ;; Return value:  Size  Location     Type
 34725 ;;                  8  [STACK] long long 
 34726 ;; Registers used:
 34727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 34728 ;; Tracked objects:
 34729 ;;		On entry : 0/0
 34730 ;;		On exit  : 0/0
 34731 ;;		Unchanged: 0/0
 34732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34737 ;;Total ram usage:        0 bytes
 34738 ;; Hardware stack levels used:    1
 34739 ;; Hardware stack levels required when called:   15
 34740 ;; This function calls:
 34741 ;;		Nothing
 34742 ;; This function is called by:
 34743 ;;		_dtoa
 34744 ;;		___secs_to_tm
 34745 ;;		_rule_to_secs
 34746 ;;		___year_to_secs
 34747 ;; This function uses a reentrant model
 34748 ;;
 34749                           
 34750                           	psect	text116
 34751  01CB90                     __ptext116:
 34752                           	opt callstack 0
 34753  01CB90                     ___aomod:
 34754                           	opt callstack 0
 34755                           
 34756                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 34757  01CB90  52E6               	movf	postinc1,f,c
 34758  01CB92  52E6               	movf	postinc1,f,c
 34759                           
 34760                           ;stkvar	_sign @ sp[(-2)+0]
 34761                           
 34762                           ;incstack = 0
 34763 ;; hardware stack exceeded
 34764  01CB94  0EFE               	movlw	-2
 34765  01CB96  6AE3               	clrf	plusw1,c
 34766                           
 34767                           ;stkvar	_dividend @ sp[(-2)+-8]
 34768  01CB98  0EFD               	movlw	-3
 34769  01CB9A  AEE3               	btfss	plusw1,7,c
 34770  01CB9C  D028               	goto	l10276
 34771                           
 34772                           ;stkvar	_dividend @ sp[(-2)+-8]
 34773                           ;stkvar	_dividend @ sp[(-2)+-8]
 34774  01CB9E  0EF6               	movlw	-10
 34775  01CBA0  6CE3               	negf	plusw1,c
 34776  01CBA2  0EF7               	movlw	-9
 34777  01CBA4  1EE3               	comf	plusw1,f,c
 34778  01CBA6  0EF8               	movlw	-8
 34779  01CBA8  1EE3               	comf	plusw1,f,c
 34780  01CBAA  0EF9               	movlw	-7
 34781  01CBAC  1EE3               	comf	plusw1,f,c
 34782  01CBAE  0EFA               	movlw	-6
 34783  01CBB0  1EE3               	comf	plusw1,f,c
 34784  01CBB2  0EFB               	movlw	-5
 34785  01CBB4  1EE3               	comf	plusw1,f,c
 34786  01CBB6  0EFC               	movlw	-4
 34787  01CBB8  1EE3               	comf	plusw1,f,c
 34788  01CBBA  0EFD               	movlw	-3
 34789  01CBBC  1EE3               	comf	plusw1,f,c
 34790  01CBBE  E314               	bnc	u8230
 34791  01CBC0  0EF7               	movlw	-9
 34792  01CBC2  2AE3               	incf	plusw1,f,c
 34793  01CBC4  E311               	bnc	u8230
 34794  01CBC6  0EF8               	movlw	-8
 34795  01CBC8  2AE3               	incf	plusw1,f,c
 34796  01CBCA  E30E               	bnc	u8230
 34797  01CBCC  0EF9               	movlw	-7
 34798  01CBCE  2AE3               	incf	plusw1,f,c
 34799  01CBD0  E30B               	bnc	u8230
 34800  01CBD2  0EFA               	movlw	-6
 34801  01CBD4  2AE3               	incf	plusw1,f,c
 34802  01CBD6  E308               	bnc	u8230
 34803  01CBD8  0EFB               	movlw	-5
 34804  01CBDA  2AE3               	incf	plusw1,f,c
 34805  01CBDC  E305               	bnc	u8230
 34806  01CBDE  0EFC               	movlw	-4
 34807  01CBE0  2AE3               	incf	plusw1,f,c
 34808  01CBE2  E302               	bnc	u8230
 34809  01CBE4  0EFD               	movlw	-3
 34810  01CBE6  2AE3               	incf	plusw1,f,c
 34811  01CBE8                     u8230:
 34812                           
 34813                           ;stkvar	_sign @ sp[(-2)+0]
 34814  01CBE8  0EFE               	movlw	-2
 34815  01CBEA  6AE3               	clrf	plusw1,c
 34816  01CBEC  2AE3               	incf	plusw1,f,c
 34817  01CBEE                     l10276:
 34818                           
 34819                           ;stkvar	_divisor @ sp[(-2)+-16]
 34820  01CBEE  0EF5               	movlw	-11
 34821  01CBF0  AEE3               	btfss	plusw1,7,c
 34822  01CBF2  D025               	goto	u8250
 34823                           
 34824                           ;stkvar	_divisor @ sp[(-2)+-16]
 34825                           ;stkvar	_divisor @ sp[(-2)+-16]
 34826  01CBF4  0EEE               	movlw	-18
 34827  01CBF6  6CE3               	negf	plusw1,c
 34828  01CBF8  0EEF               	movlw	-17
 34829  01CBFA  1EE3               	comf	plusw1,f,c
 34830  01CBFC  0EF0               	movlw	-16
 34831  01CBFE  1EE3               	comf	plusw1,f,c
 34832  01CC00  0EF1               	movlw	-15
 34833  01CC02  1EE3               	comf	plusw1,f,c
 34834  01CC04  0EF2               	movlw	-14
 34835  01CC06  1EE3               	comf	plusw1,f,c
 34836  01CC08  0EF3               	movlw	-13
 34837  01CC0A  1EE3               	comf	plusw1,f,c
 34838  01CC0C  0EF4               	movlw	-12
 34839  01CC0E  1EE3               	comf	plusw1,f,c
 34840  01CC10  0EF5               	movlw	-11
 34841  01CC12  1EE3               	comf	plusw1,f,c
 34842  01CC14  E314               	bnc	u8250
 34843  01CC16  0EEF               	movlw	-17
 34844  01CC18  2AE3               	incf	plusw1,f,c
 34845  01CC1A  E311               	bnc	u8250
 34846  01CC1C  0EF0               	movlw	-16
 34847  01CC1E  2AE3               	incf	plusw1,f,c
 34848  01CC20  E30E               	bnc	u8250
 34849  01CC22  0EF1               	movlw	-15
 34850  01CC24  2AE3               	incf	plusw1,f,c
 34851  01CC26  E30B               	bnc	u8250
 34852  01CC28  0EF2               	movlw	-14
 34853  01CC2A  2AE3               	incf	plusw1,f,c
 34854  01CC2C  E308               	bnc	u8250
 34855  01CC2E  0EF3               	movlw	-13
 34856  01CC30  2AE3               	incf	plusw1,f,c
 34857  01CC32  E305               	bnc	u8250
 34858  01CC34  0EF4               	movlw	-12
 34859  01CC36  2AE3               	incf	plusw1,f,c
 34860  01CC38  E302               	bnc	u8250
 34861  01CC3A  0EF5               	movlw	-11
 34862  01CC3C  2AE3               	incf	plusw1,f,c
 34863  01CC3E                     u8250:
 34864                           
 34865                           ;stkvar	_divisor @ sp[(-2)+-16]
 34866  01CC3E  0EEE               	movlw	-18
 34867  01CC40  50E3               	movf	plusw1,w,c
 34868  01CC42  E116               	bnz	u8260
 34869  01CC44  0EEF               	movlw	-17
 34870  01CC46  50E3               	movf	plusw1,w,c
 34871  01CC48  E113               	bnz	u8260
 34872  01CC4A  0EF0               	movlw	-16
 34873  01CC4C  50E3               	movf	plusw1,w,c
 34874  01CC4E  E110               	bnz	u8260
 34875  01CC50  0EF1               	movlw	-15
 34876  01CC52  50E3               	movf	plusw1,w,c
 34877  01CC54  E10D               	bnz	u8260
 34878  01CC56  0EF2               	movlw	-14
 34879  01CC58  50E3               	movf	plusw1,w,c
 34880  01CC5A  E10A               	bnz	u8260
 34881  01CC5C  0EF3               	movlw	-13
 34882  01CC5E  50E3               	movf	plusw1,w,c
 34883  01CC60  E107               	bnz	u8260
 34884  01CC62  0EF4               	movlw	-12
 34885  01CC64  50E3               	movf	plusw1,w,c
 34886  01CC66  E104               	bnz	u8260
 34887  01CC68  0EF5               	movlw	-11
 34888  01CC6A  50E3               	movf	plusw1,w,c
 34889  01CC6C  B4D8               	btfsc	status,2,c
 34890  01CC6E  D075               	goto	u8290
 34891  01CC70                     u8260:
 34892                           
 34893                           ;stkvar	_counter @ sp[(-2)+1]
 34894  01CC70  0EFF               	movlw	-1
 34895  01CC72  6AE3               	clrf	plusw1,c
 34896  01CC74  D012               	goto	L40
 34897  01CC76                     l10284:
 34898                           
 34899                           ;stkvar	_divisor @ sp[(-2)+-16]
 34900  01CC76  90D8               	bcf	status,0,c
 34901  01CC78  0EEE               	movlw	-18
 34902  01CC7A  36E3               	rlcf	plusw1,f,c
 34903  01CC7C  0EEF               	movlw	-17
 34904  01CC7E  36E3               	rlcf	plusw1,f,c
 34905  01CC80  0EF0               	movlw	-16
 34906  01CC82  36E3               	rlcf	plusw1,f,c
 34907  01CC84  0EF1               	movlw	-15
 34908  01CC86  36E3               	rlcf	plusw1,f,c
 34909  01CC88  0EF2               	movlw	-14
 34910  01CC8A  36E3               	rlcf	plusw1,f,c
 34911  01CC8C  0EF3               	movlw	-13
 34912  01CC8E  36E3               	rlcf	plusw1,f,c
 34913  01CC90  0EF4               	movlw	-12
 34914  01CC92  36E3               	rlcf	plusw1,f,c
 34915  01CC94  0EF5               	movlw	-11
 34916  01CC96  36E3               	rlcf	plusw1,f,c
 34917                           
 34918                           ;stkvar	_counter @ sp[(-2)+1]
 34919  01CC98  0EFF               	movlw	-1
 34920  01CC9A                     L40:
 34921  01CC9A  2AE3               	incf	plusw1,f,c
 34922                           
 34923                           ;stkvar	_divisor @ sp[(-2)+-16]
 34924  01CC9C  0EF5               	movlw	-11
 34925  01CC9E  AEE3               	btfss	plusw1,7,c
 34926  01CCA0  D7EA               	goto	l10284
 34927  01CCA2                     u8270:
 34928                           
 34929                           ;stkvar	_divisor @ sp[(-2)+-16]
 34930                           ;stkvar	_dividend @ sp[(-2)+-8]
 34931  01CCA2  50E1               	movf	fsr1l,w,c
 34932  01CCA4  0FF6               	addlw	-10
 34933  01CCA6  6ED9               	movwf	fsr2l,c
 34934  01CCA8  50E2               	movf	fsr1h,w,c
 34935  01CCAA  6EDA               	movwf	fsr2h,c
 34936  01CCAC  0EFF               	movlw	255
 34937  01CCAE  22DA               	addwfc	fsr2h,f,c
 34938  01CCB0  0EEE               	movlw	-18
 34939  01CCB2  50E3               	movf	plusw1,w,c
 34940  01CCB4  5CDE               	subwf	postinc2,w,c
 34941  01CCB6  0EEF               	movlw	-17
 34942  01CCB8  50E3               	movf	plusw1,w,c
 34943  01CCBA  58DE               	subwfb	postinc2,w,c
 34944  01CCBC  0EF0               	movlw	-16
 34945  01CCBE  50E3               	movf	plusw1,w,c
 34946  01CCC0  58DE               	subwfb	postinc2,w,c
 34947  01CCC2  0EF1               	movlw	-15
 34948  01CCC4  50E3               	movf	plusw1,w,c
 34949  01CCC6  58DE               	subwfb	postinc2,w,c
 34950  01CCC8  0EF2               	movlw	-14
 34951  01CCCA  50E3               	movf	plusw1,w,c
 34952  01CCCC  58DE               	subwfb	postinc2,w,c
 34953  01CCCE  0EF3               	movlw	-13
 34954  01CCD0  50E3               	movf	plusw1,w,c
 34955  01CCD2  58DE               	subwfb	postinc2,w,c
 34956  01CCD4  0EF4               	movlw	-12
 34957  01CCD6  50E3               	movf	plusw1,w,c
 34958  01CCD8  58DE               	subwfb	postinc2,w,c
 34959  01CCDA  0EF5               	movlw	-11
 34960  01CCDC  50E3               	movf	plusw1,w,c
 34961  01CCDE  58DE               	subwfb	postinc2,w,c
 34962  01CCE0  A0D8               	btfss	status,0,c
 34963  01CCE2  D01F               	goto	l10292
 34964                           
 34965                           ;stkvar	_divisor @ sp[(-2)+-16]
 34966                           ;stkvar	_dividend @ sp[(-2)+-8]
 34967  01CCE4  50E1               	movf	fsr1l,w,c
 34968  01CCE6  0FF6               	addlw	-10
 34969  01CCE8  6ED9               	movwf	fsr2l,c
 34970  01CCEA  50E2               	movf	fsr1h,w,c
 34971  01CCEC  6EDA               	movwf	fsr2h,c
 34972  01CCEE  0EFF               	movlw	255
 34973  01CCF0  22DA               	addwfc	fsr2h,f,c
 34974  01CCF2  0EEE               	movlw	-18
 34975  01CCF4  50E3               	movf	plusw1,w,c
 34976  01CCF6  5EDE               	subwf	postinc2,f,c
 34977  01CCF8  0EEF               	movlw	-17
 34978  01CCFA  50E3               	movf	plusw1,w,c
 34979  01CCFC  5ADE               	subwfb	postinc2,f,c
 34980  01CCFE  0EF0               	movlw	-16
 34981  01CD00  50E3               	movf	plusw1,w,c
 34982  01CD02  5ADE               	subwfb	postinc2,f,c
 34983  01CD04  0EF1               	movlw	-15
 34984  01CD06  50E3               	movf	plusw1,w,c
 34985  01CD08  5ADE               	subwfb	postinc2,f,c
 34986  01CD0A  0EF2               	movlw	-14
 34987  01CD0C  50E3               	movf	plusw1,w,c
 34988  01CD0E  5ADE               	subwfb	postinc2,f,c
 34989  01CD10  0EF3               	movlw	-13
 34990  01CD12  50E3               	movf	plusw1,w,c
 34991  01CD14  5ADE               	subwfb	postinc2,f,c
 34992  01CD16  0EF4               	movlw	-12
 34993  01CD18  50E3               	movf	plusw1,w,c
 34994  01CD1A  5ADE               	subwfb	postinc2,f,c
 34995  01CD1C  0EF5               	movlw	-11
 34996  01CD1E  50E3               	movf	plusw1,w,c
 34997  01CD20  5ADE               	subwfb	postinc2,f,c
 34998  01CD22                     l10292:
 34999                           
 35000                           ;stkvar	_divisor @ sp[(-2)+-16]
 35001  01CD22  90D8               	bcf	status,0,c
 35002  01CD24  0EF5               	movlw	-11
 35003  01CD26  32E3               	rrcf	plusw1,f,c
 35004  01CD28  0EF4               	movlw	-12
 35005  01CD2A  32E3               	rrcf	plusw1,f,c
 35006  01CD2C  0EF3               	movlw	-13
 35007  01CD2E  32E3               	rrcf	plusw1,f,c
 35008  01CD30  0EF2               	movlw	-14
 35009  01CD32  32E3               	rrcf	plusw1,f,c
 35010  01CD34  0EF1               	movlw	-15
 35011  01CD36  32E3               	rrcf	plusw1,f,c
 35012  01CD38  0EF0               	movlw	-16
 35013  01CD3A  32E3               	rrcf	plusw1,f,c
 35014  01CD3C  0EEF               	movlw	-17
 35015  01CD3E  32E3               	rrcf	plusw1,f,c
 35016  01CD40  0EEE               	movlw	-18
 35017  01CD42  32E3               	rrcf	plusw1,f,c
 35018                           
 35019                           ;stkvar	_counter @ sp[(-2)+1]
 35020  01CD44  0EFF               	movlw	-1
 35021  01CD46  50E3               	movf	plusw1,w,c
 35022  01CD48  6E2A               	movwf	btemp^0,c
 35023  01CD4A  0E01               	movlw	1
 35024  01CD4C  5E2A               	subwf	btemp^0,f,c
 35025  01CD4E  0EFF               	movlw	-1
 35026  01CD50  0060  F0AB  FFE3   	movff	btemp,plusw1
 35027  01CD56  A4D8               	btfss	status,2,c
 35028  01CD58  D7A4               	goto	u8270
 35029  01CD5A                     u8290:
 35030                           
 35031                           ;stkvar	_sign @ sp[(-2)+0]
 35032  01CD5A  0EFE               	movlw	-2
 35033  01CD5C  50E3               	movf	plusw1,w,c
 35034  01CD5E  B4D8               	btfsc	status,2,c
 35035  01CD60  D025               	goto	u8310
 35036                           
 35037                           ;stkvar	_dividend @ sp[(-2)+-8]
 35038                           ;stkvar	_dividend @ sp[(-2)+-8]
 35039  01CD62  0EF6               	movlw	-10
 35040  01CD64  6CE3               	negf	plusw1,c
 35041  01CD66  0EF7               	movlw	-9
 35042  01CD68  1EE3               	comf	plusw1,f,c
 35043  01CD6A  0EF8               	movlw	-8
 35044  01CD6C  1EE3               	comf	plusw1,f,c
 35045  01CD6E  0EF9               	movlw	-7
 35046  01CD70  1EE3               	comf	plusw1,f,c
 35047  01CD72  0EFA               	movlw	-6
 35048  01CD74  1EE3               	comf	plusw1,f,c
 35049  01CD76  0EFB               	movlw	-5
 35050  01CD78  1EE3               	comf	plusw1,f,c
 35051  01CD7A  0EFC               	movlw	-4
 35052  01CD7C  1EE3               	comf	plusw1,f,c
 35053  01CD7E  0EFD               	movlw	-3
 35054  01CD80  1EE3               	comf	plusw1,f,c
 35055  01CD82  E314               	bnc	u8310
 35056  01CD84  0EF7               	movlw	-9
 35057  01CD86  2AE3               	incf	plusw1,f,c
 35058  01CD88  E311               	bnc	u8310
 35059  01CD8A  0EF8               	movlw	-8
 35060  01CD8C  2AE3               	incf	plusw1,f,c
 35061  01CD8E  E30E               	bnc	u8310
 35062  01CD90  0EF9               	movlw	-7
 35063  01CD92  2AE3               	incf	plusw1,f,c
 35064  01CD94  E30B               	bnc	u8310
 35065  01CD96  0EFA               	movlw	-6
 35066  01CD98  2AE3               	incf	plusw1,f,c
 35067  01CD9A  E308               	bnc	u8310
 35068  01CD9C  0EFB               	movlw	-5
 35069  01CD9E  2AE3               	incf	plusw1,f,c
 35070  01CDA0  E305               	bnc	u8310
 35071  01CDA2  0EFC               	movlw	-4
 35072  01CDA4  2AE3               	incf	plusw1,f,c
 35073  01CDA6  E302               	bnc	u8310
 35074  01CDA8  0EFD               	movlw	-3
 35075  01CDAA  2AE3               	incf	plusw1,f,c
 35076  01CDAC                     u8310:
 35077                           
 35078                           ;stkvar	_dividend @ sp[(-2)+-8]
 35079  01CDAC  0EF6               	movlw	246
 35080  01CDAE  24E1               	addwf	fsr1l,w,c
 35081  01CDB0  6ED9               	movwf	fsr2l,c
 35082  01CDB2  0EFF               	movlw	255
 35083  01CDB4  20E2               	addwfc	fsr1h,w,c
 35084  01CDB6  6EDA               	movwf	fsr2h,c
 35085                           
 35086                           ;stkvar	?___aomod @ sp[(-2)+-8]
 35087  01CDB8  0E08               	movlw	8
 35088  01CDBA  6E2A               	movwf	btemp^0,c
 35089  01CDBC  0EF6               	movlw	-10
 35090  01CDBE                     us832999:
 35091  01CDBE  006F FF7B FFE3     	movff	postinc2,plusw1
 35092  01CDC4  28E8               	incf	wreg,w,c
 35093  01CDC6  2E2A               	decfsz	btemp^0,f,c
 35094  01CDC8  D7FA               	bra	us832999
 35095                           
 35096                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 35097  01CDCA  52E5               	movf	postdec1,f,c
 35098  01CDCC  52E5               	movf	postdec1,f,c
 35099  01CDCE  0012               	return		;funcret
 35100  01CDD0                     __end_of___aomod:
 35101                           	opt callstack 0
 35102                           
 35103 ;; *************** function ___aodiv *****************
 35104 ;; Defined at:
 35105 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 35106 ;; Parameters:    Size  Location     Type
 35107 ;;  dividend        8  [STACK] long long 
 35108 ;;  divisor         8  [STACK] long long 
 35109 ;; Auto vars:     Size  Location     Type
 35110 ;;  quotient        8  [STACK] long long 
 35111 ;;  sign            1  [STACK] unsigned char 
 35112 ;;  counter         1  [STACK] unsigned char 
 35113 ;; Return value:  Size  Location     Type
 35114 ;;                  8  [STACK] long long 
 35115 ;; Registers used:
 35116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 35117 ;; Tracked objects:
 35118 ;;		On entry : 0/0
 35119 ;;		On exit  : 0/0
 35120 ;;		Unchanged: 0/0
 35121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35126 ;;Total ram usage:        0 bytes
 35127 ;; Hardware stack levels used:    1
 35128 ;; Hardware stack levels required when called:   15
 35129 ;; This function calls:
 35130 ;;		Nothing
 35131 ;; This function is called by:
 35132 ;;		_dtoa
 35133 ;;		___secs_to_tm
 35134 ;;		___secs_to_zone
 35135 ;;		___year_to_secs
 35136 ;; This function uses a reentrant model
 35137 ;;
 35138                           
 35139                           	psect	text117
 35140  01C212                     __ptext117:
 35141                           	opt callstack 0
 35142  01C212                     ___aodiv:
 35143                           	opt callstack 0
 35144                           
 35145                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 35146  01C212  0E0A               	movlw	10
 35147  01C214  26E1               	addwf	fsr1l,f,c
 35148  01C216  0E00               	movlw	0
 35149  01C218  22E2               	addwfc	fsr1h,f,c
 35150                           
 35151                           ;stkvar	_sign @ sp[(-10)+8]
 35152                           
 35153                           ;incstack = 0
 35154 ;; hardware stack exceeded
 35155  01C21A  0EFE               	movlw	-2
 35156  01C21C  6AE3               	clrf	plusw1,c
 35157                           
 35158                           ;stkvar	_divisor @ sp[(-10)+-16]
 35159  01C21E  0EED               	movlw	-19
 35160  01C220  AEE3               	btfss	plusw1,7,c
 35161  01C222  D028               	goto	l10232
 35162                           
 35163                           ;stkvar	_divisor @ sp[(-10)+-16]
 35164                           ;stkvar	_divisor @ sp[(-10)+-16]
 35165  01C224  0EE6               	movlw	-26
 35166  01C226  6CE3               	negf	plusw1,c
 35167  01C228  0EE7               	movlw	-25
 35168  01C22A  1EE3               	comf	plusw1,f,c
 35169  01C22C  0EE8               	movlw	-24
 35170  01C22E  1EE3               	comf	plusw1,f,c
 35171  01C230  0EE9               	movlw	-23
 35172  01C232  1EE3               	comf	plusw1,f,c
 35173  01C234  0EEA               	movlw	-22
 35174  01C236  1EE3               	comf	plusw1,f,c
 35175  01C238  0EEB               	movlw	-21
 35176  01C23A  1EE3               	comf	plusw1,f,c
 35177  01C23C  0EEC               	movlw	-20
 35178  01C23E  1EE3               	comf	plusw1,f,c
 35179  01C240  0EED               	movlw	-19
 35180  01C242  1EE3               	comf	plusw1,f,c
 35181  01C244  E314               	bnc	u8110
 35182  01C246  0EE7               	movlw	-25
 35183  01C248  2AE3               	incf	plusw1,f,c
 35184  01C24A  E311               	bnc	u8110
 35185  01C24C  0EE8               	movlw	-24
 35186  01C24E  2AE3               	incf	plusw1,f,c
 35187  01C250  E30E               	bnc	u8110
 35188  01C252  0EE9               	movlw	-23
 35189  01C254  2AE3               	incf	plusw1,f,c
 35190  01C256  E30B               	bnc	u8110
 35191  01C258  0EEA               	movlw	-22
 35192  01C25A  2AE3               	incf	plusw1,f,c
 35193  01C25C  E308               	bnc	u8110
 35194  01C25E  0EEB               	movlw	-21
 35195  01C260  2AE3               	incf	plusw1,f,c
 35196  01C262  E305               	bnc	u8110
 35197  01C264  0EEC               	movlw	-20
 35198  01C266  2AE3               	incf	plusw1,f,c
 35199  01C268  E302               	bnc	u8110
 35200  01C26A  0EED               	movlw	-19
 35201  01C26C  2AE3               	incf	plusw1,f,c
 35202  01C26E                     u8110:
 35203                           
 35204                           ;stkvar	_sign @ sp[(-10)+8]
 35205  01C26E  0EFE               	movlw	-2
 35206  01C270  6AE3               	clrf	plusw1,c
 35207  01C272  2AE3               	incf	plusw1,f,c
 35208  01C274                     l10232:
 35209                           
 35210                           ;stkvar	_dividend @ sp[(-10)+-8]
 35211  01C274  0EF5               	movlw	-11
 35212  01C276  AEE3               	btfss	plusw1,7,c
 35213  01C278  D027               	goto	l10238
 35214                           
 35215                           ;stkvar	_dividend @ sp[(-10)+-8]
 35216                           ;stkvar	_dividend @ sp[(-10)+-8]
 35217  01C27A  0EEE               	movlw	-18
 35218  01C27C  6CE3               	negf	plusw1,c
 35219  01C27E  0EEF               	movlw	-17
 35220  01C280  1EE3               	comf	plusw1,f,c
 35221  01C282  0EF0               	movlw	-16
 35222  01C284  1EE3               	comf	plusw1,f,c
 35223  01C286  0EF1               	movlw	-15
 35224  01C288  1EE3               	comf	plusw1,f,c
 35225  01C28A  0EF2               	movlw	-14
 35226  01C28C  1EE3               	comf	plusw1,f,c
 35227  01C28E  0EF3               	movlw	-13
 35228  01C290  1EE3               	comf	plusw1,f,c
 35229  01C292  0EF4               	movlw	-12
 35230  01C294  1EE3               	comf	plusw1,f,c
 35231  01C296  0EF5               	movlw	-11
 35232  01C298  1EE3               	comf	plusw1,f,c
 35233  01C29A  E314               	bnc	u8130
 35234  01C29C  0EEF               	movlw	-17
 35235  01C29E  2AE3               	incf	plusw1,f,c
 35236  01C2A0  E311               	bnc	u8130
 35237  01C2A2  0EF0               	movlw	-16
 35238  01C2A4  2AE3               	incf	plusw1,f,c
 35239  01C2A6  E30E               	bnc	u8130
 35240  01C2A8  0EF1               	movlw	-15
 35241  01C2AA  2AE3               	incf	plusw1,f,c
 35242  01C2AC  E30B               	bnc	u8130
 35243  01C2AE  0EF2               	movlw	-14
 35244  01C2B0  2AE3               	incf	plusw1,f,c
 35245  01C2B2  E308               	bnc	u8130
 35246  01C2B4  0EF3               	movlw	-13
 35247  01C2B6  2AE3               	incf	plusw1,f,c
 35248  01C2B8  E305               	bnc	u8130
 35249  01C2BA  0EF4               	movlw	-12
 35250  01C2BC  2AE3               	incf	plusw1,f,c
 35251  01C2BE  E302               	bnc	u8130
 35252  01C2C0  0EF5               	movlw	-11
 35253  01C2C2  2AE3               	incf	plusw1,f,c
 35254  01C2C4                     u8130:
 35255                           
 35256                           ;stkvar	_sign @ sp[(-10)+8]
 35257  01C2C4  0EFE               	movlw	-2
 35258  01C2C6  70E3               	btg	plusw1,0,c
 35259  01C2C8                     l10238:
 35260                           
 35261                           ;stkvar	_quotient @ sp[(-10)+0]
 35262  01C2C8  0E07               	movlw	7
 35263  01C2CA  6E2A               	movwf	btemp^0,c
 35264  01C2CC  0EF6               	movlw	-10
 35265  01C2CE                     u8141:
 35266  01C2CE  6AE3               	clrf	plusw1,c
 35267  01C2D0  2AE8               	incf	wreg,f,c
 35268  01C2D2  062A               	decf	btemp^0,f,c
 35269  01C2D4  E2FC               	bc	u8141
 35270                           
 35271                           ;stkvar	_divisor @ sp[(-10)+-16]
 35272  01C2D6  0EE6               	movlw	-26
 35273  01C2D8  50E3               	movf	plusw1,w,c
 35274  01C2DA  E116               	bnz	u8150
 35275  01C2DC  0EE7               	movlw	-25
 35276  01C2DE  50E3               	movf	plusw1,w,c
 35277  01C2E0  E113               	bnz	u8150
 35278  01C2E2  0EE8               	movlw	-24
 35279  01C2E4  50E3               	movf	plusw1,w,c
 35280  01C2E6  E110               	bnz	u8150
 35281  01C2E8  0EE9               	movlw	-23
 35282  01C2EA  50E3               	movf	plusw1,w,c
 35283  01C2EC  E10D               	bnz	u8150
 35284  01C2EE  0EEA               	movlw	-22
 35285  01C2F0  50E3               	movf	plusw1,w,c
 35286  01C2F2  E10A               	bnz	u8150
 35287  01C2F4  0EEB               	movlw	-21
 35288  01C2F6  50E3               	movf	plusw1,w,c
 35289  01C2F8  E107               	bnz	u8150
 35290  01C2FA  0EEC               	movlw	-20
 35291  01C2FC  50E3               	movf	plusw1,w,c
 35292  01C2FE  E104               	bnz	u8150
 35293  01C300  0EED               	movlw	-19
 35294  01C302  50E3               	movf	plusw1,w,c
 35295  01C304  B4D8               	btfsc	status,2,c
 35296  01C306  D088               	goto	u8180
 35297  01C308                     u8150:
 35298                           
 35299                           ;stkvar	_counter @ sp[(-10)+9]
 35300  01C308  0EFF               	movlw	-1
 35301  01C30A  6AE3               	clrf	plusw1,c
 35302  01C30C  D012               	goto	L41
 35303  01C30E                     l10244:
 35304                           
 35305                           ;stkvar	_divisor @ sp[(-10)+-16]
 35306  01C30E  90D8               	bcf	status,0,c
 35307  01C310  0EE6               	movlw	-26
 35308  01C312  36E3               	rlcf	plusw1,f,c
 35309  01C314  0EE7               	movlw	-25
 35310  01C316  36E3               	rlcf	plusw1,f,c
 35311  01C318  0EE8               	movlw	-24
 35312  01C31A  36E3               	rlcf	plusw1,f,c
 35313  01C31C  0EE9               	movlw	-23
 35314  01C31E  36E3               	rlcf	plusw1,f,c
 35315  01C320  0EEA               	movlw	-22
 35316  01C322  36E3               	rlcf	plusw1,f,c
 35317  01C324  0EEB               	movlw	-21
 35318  01C326  36E3               	rlcf	plusw1,f,c
 35319  01C328  0EEC               	movlw	-20
 35320  01C32A  36E3               	rlcf	plusw1,f,c
 35321  01C32C  0EED               	movlw	-19
 35322  01C32E  36E3               	rlcf	plusw1,f,c
 35323                           
 35324                           ;stkvar	_counter @ sp[(-10)+9]
 35325  01C330  0EFF               	movlw	-1
 35326  01C332                     L41:
 35327  01C332  2AE3               	incf	plusw1,f,c
 35328                           
 35329                           ;stkvar	_divisor @ sp[(-10)+-16]
 35330  01C334  0EED               	movlw	-19
 35331  01C336  AEE3               	btfss	plusw1,7,c
 35332  01C338  D7EA               	goto	l10244
 35333  01C33A                     u8160:
 35334                           
 35335                           ;stkvar	_quotient @ sp[(-10)+0]
 35336  01C33A  90D8               	bcf	status,0,c
 35337  01C33C  0EF6               	movlw	-10
 35338  01C33E  36E3               	rlcf	plusw1,f,c
 35339  01C340  0EF7               	movlw	-9
 35340  01C342  36E3               	rlcf	plusw1,f,c
 35341  01C344  0EF8               	movlw	-8
 35342  01C346  36E3               	rlcf	plusw1,f,c
 35343  01C348  0EF9               	movlw	-7
 35344  01C34A  36E3               	rlcf	plusw1,f,c
 35345  01C34C  0EFA               	movlw	-6
 35346  01C34E  36E3               	rlcf	plusw1,f,c
 35347  01C350  0EFB               	movlw	-5
 35348  01C352  36E3               	rlcf	plusw1,f,c
 35349  01C354  0EFC               	movlw	-4
 35350  01C356  36E3               	rlcf	plusw1,f,c
 35351  01C358  0EFD               	movlw	-3
 35352  01C35A  36E3               	rlcf	plusw1,f,c
 35353                           
 35354                           ;stkvar	_divisor @ sp[(-10)+-16]
 35355                           ;stkvar	_dividend @ sp[(-10)+-8]
 35356  01C35C  50E1               	movf	fsr1l,w,c
 35357  01C35E  0FEE               	addlw	-18
 35358  01C360  6ED9               	movwf	fsr2l,c
 35359  01C362  50E2               	movf	fsr1h,w,c
 35360  01C364  6EDA               	movwf	fsr2h,c
 35361  01C366  0EFF               	movlw	255
 35362  01C368  22DA               	addwfc	fsr2h,f,c
 35363  01C36A  0EE6               	movlw	-26
 35364  01C36C  50E3               	movf	plusw1,w,c
 35365  01C36E  5CDE               	subwf	postinc2,w,c
 35366  01C370  0EE7               	movlw	-25
 35367  01C372  50E3               	movf	plusw1,w,c
 35368  01C374  58DE               	subwfb	postinc2,w,c
 35369  01C376  0EE8               	movlw	-24
 35370  01C378  50E3               	movf	plusw1,w,c
 35371  01C37A  58DE               	subwfb	postinc2,w,c
 35372  01C37C  0EE9               	movlw	-23
 35373  01C37E  50E3               	movf	plusw1,w,c
 35374  01C380  58DE               	subwfb	postinc2,w,c
 35375  01C382  0EEA               	movlw	-22
 35376  01C384  50E3               	movf	plusw1,w,c
 35377  01C386  58DE               	subwfb	postinc2,w,c
 35378  01C388  0EEB               	movlw	-21
 35379  01C38A  50E3               	movf	plusw1,w,c
 35380  01C38C  58DE               	subwfb	postinc2,w,c
 35381  01C38E  0EEC               	movlw	-20
 35382  01C390  50E3               	movf	plusw1,w,c
 35383  01C392  58DE               	subwfb	postinc2,w,c
 35384  01C394  0EED               	movlw	-19
 35385  01C396  50E3               	movf	plusw1,w,c
 35386  01C398  58DE               	subwfb	postinc2,w,c
 35387  01C39A  A0D8               	btfss	status,0,c
 35388  01C39C  D021               	goto	l10256
 35389                           
 35390                           ;stkvar	_divisor @ sp[(-10)+-16]
 35391                           ;stkvar	_dividend @ sp[(-10)+-8]
 35392  01C39E  50E1               	movf	fsr1l,w,c
 35393  01C3A0  0FEE               	addlw	-18
 35394  01C3A2  6ED9               	movwf	fsr2l,c
 35395  01C3A4  50E2               	movf	fsr1h,w,c
 35396  01C3A6  6EDA               	movwf	fsr2h,c
 35397  01C3A8  0EFF               	movlw	255
 35398  01C3AA  22DA               	addwfc	fsr2h,f,c
 35399  01C3AC  0EE6               	movlw	-26
 35400  01C3AE  50E3               	movf	plusw1,w,c
 35401  01C3B0  5EDE               	subwf	postinc2,f,c
 35402  01C3B2  0EE7               	movlw	-25
 35403  01C3B4  50E3               	movf	plusw1,w,c
 35404  01C3B6  5ADE               	subwfb	postinc2,f,c
 35405  01C3B8  0EE8               	movlw	-24
 35406  01C3BA  50E3               	movf	plusw1,w,c
 35407  01C3BC  5ADE               	subwfb	postinc2,f,c
 35408  01C3BE  0EE9               	movlw	-23
 35409  01C3C0  50E3               	movf	plusw1,w,c
 35410  01C3C2  5ADE               	subwfb	postinc2,f,c
 35411  01C3C4  0EEA               	movlw	-22
 35412  01C3C6  50E3               	movf	plusw1,w,c
 35413  01C3C8  5ADE               	subwfb	postinc2,f,c
 35414  01C3CA  0EEB               	movlw	-21
 35415  01C3CC  50E3               	movf	plusw1,w,c
 35416  01C3CE  5ADE               	subwfb	postinc2,f,c
 35417  01C3D0  0EEC               	movlw	-20
 35418  01C3D2  50E3               	movf	plusw1,w,c
 35419  01C3D4  5ADE               	subwfb	postinc2,f,c
 35420  01C3D6  0EED               	movlw	-19
 35421  01C3D8  50E3               	movf	plusw1,w,c
 35422  01C3DA  5ADE               	subwfb	postinc2,f,c
 35423                           
 35424                           ;stkvar	_quotient @ sp[(-10)+0]
 35425  01C3DC  0EF6               	movlw	-10
 35426  01C3DE  80E3               	bsf	plusw1,0,c
 35427  01C3E0                     l10256:
 35428                           
 35429                           ;stkvar	_divisor @ sp[(-10)+-16]
 35430  01C3E0  90D8               	bcf	status,0,c
 35431  01C3E2  0EED               	movlw	-19
 35432  01C3E4  32E3               	rrcf	plusw1,f,c
 35433  01C3E6  0EEC               	movlw	-20
 35434  01C3E8  32E3               	rrcf	plusw1,f,c
 35435  01C3EA  0EEB               	movlw	-21
 35436  01C3EC  32E3               	rrcf	plusw1,f,c
 35437  01C3EE  0EEA               	movlw	-22
 35438  01C3F0  32E3               	rrcf	plusw1,f,c
 35439  01C3F2  0EE9               	movlw	-23
 35440  01C3F4  32E3               	rrcf	plusw1,f,c
 35441  01C3F6  0EE8               	movlw	-24
 35442  01C3F8  32E3               	rrcf	plusw1,f,c
 35443  01C3FA  0EE7               	movlw	-25
 35444  01C3FC  32E3               	rrcf	plusw1,f,c
 35445  01C3FE  0EE6               	movlw	-26
 35446  01C400  32E3               	rrcf	plusw1,f,c
 35447                           
 35448                           ;stkvar	_counter @ sp[(-10)+9]
 35449  01C402  0EFF               	movlw	-1
 35450  01C404  50E3               	movf	plusw1,w,c
 35451  01C406  6E2A               	movwf	btemp^0,c
 35452  01C408  0E01               	movlw	1
 35453  01C40A  5E2A               	subwf	btemp^0,f,c
 35454  01C40C  0EFF               	movlw	-1
 35455  01C40E  0060  F0AB  FFE3   	movff	btemp,plusw1
 35456  01C414  A4D8               	btfss	status,2,c
 35457  01C416  D791               	goto	u8160
 35458  01C418                     u8180:
 35459                           
 35460                           ;stkvar	_sign @ sp[(-10)+8]
 35461  01C418  0EFE               	movlw	-2
 35462  01C41A  50E3               	movf	plusw1,w,c
 35463  01C41C  B4D8               	btfsc	status,2,c
 35464  01C41E  D025               	goto	u8200
 35465                           
 35466                           ;stkvar	_quotient @ sp[(-10)+0]
 35467                           ;stkvar	_quotient @ sp[(-10)+0]
 35468  01C420  0EF6               	movlw	-10
 35469  01C422  6CE3               	negf	plusw1,c
 35470  01C424  0EF7               	movlw	-9
 35471  01C426  1EE3               	comf	plusw1,f,c
 35472  01C428  0EF8               	movlw	-8
 35473  01C42A  1EE3               	comf	plusw1,f,c
 35474  01C42C  0EF9               	movlw	-7
 35475  01C42E  1EE3               	comf	plusw1,f,c
 35476  01C430  0EFA               	movlw	-6
 35477  01C432  1EE3               	comf	plusw1,f,c
 35478  01C434  0EFB               	movlw	-5
 35479  01C436  1EE3               	comf	plusw1,f,c
 35480  01C438  0EFC               	movlw	-4
 35481  01C43A  1EE3               	comf	plusw1,f,c
 35482  01C43C  0EFD               	movlw	-3
 35483  01C43E  1EE3               	comf	plusw1,f,c
 35484  01C440  E314               	bnc	u8200
 35485  01C442  0EF7               	movlw	-9
 35486  01C444  2AE3               	incf	plusw1,f,c
 35487  01C446  E311               	bnc	u8200
 35488  01C448  0EF8               	movlw	-8
 35489  01C44A  2AE3               	incf	plusw1,f,c
 35490  01C44C  E30E               	bnc	u8200
 35491  01C44E  0EF9               	movlw	-7
 35492  01C450  2AE3               	incf	plusw1,f,c
 35493  01C452  E30B               	bnc	u8200
 35494  01C454  0EFA               	movlw	-6
 35495  01C456  2AE3               	incf	plusw1,f,c
 35496  01C458  E308               	bnc	u8200
 35497  01C45A  0EFB               	movlw	-5
 35498  01C45C  2AE3               	incf	plusw1,f,c
 35499  01C45E  E305               	bnc	u8200
 35500  01C460  0EFC               	movlw	-4
 35501  01C462  2AE3               	incf	plusw1,f,c
 35502  01C464  E302               	bnc	u8200
 35503  01C466  0EFD               	movlw	-3
 35504  01C468  2AE3               	incf	plusw1,f,c
 35505  01C46A                     u8200:
 35506                           
 35507                           ;stkvar	_quotient @ sp[(-10)+0]
 35508  01C46A  0EF6               	movlw	246
 35509  01C46C  24E1               	addwf	fsr1l,w,c
 35510  01C46E  6ED9               	movwf	fsr2l,c
 35511  01C470  0EFF               	movlw	255
 35512  01C472  20E2               	addwfc	fsr1h,w,c
 35513  01C474  6EDA               	movwf	fsr2h,c
 35514                           
 35515                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 35516  01C476  0E08               	movlw	8
 35517  01C478  6E2A               	movwf	btemp^0,c
 35518  01C47A  0EEE               	movlw	-18
 35519  01C47C                     us821999:
 35520  01C47C  006F FF7B FFE3     	movff	postinc2,plusw1
 35521  01C482  28E8               	incf	wreg,w,c
 35522  01C484  2E2A               	decfsz	btemp^0,f,c
 35523  01C486  D7FA               	bra	us821999
 35524                           
 35525                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 35526  01C488  0EF6               	movlw	246
 35527  01C48A  26E1               	addwf	fsr1l,f,c
 35528  01C48C  0EFF               	movlw	255
 35529  01C48E  22E2               	addwfc	fsr1h,f,c
 35530  01C490  0012               	return		;funcret
 35531  01C492                     __end_of___aodiv:
 35532                           	opt callstack 0
 35533                           
 35534 ;; *************** function _ctoa *****************
 35535 ;; Defined at:
 35536 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 35537 ;; Parameters:    Size  Location     Type
 35538 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35539 ;;		 -> f(6), NULL(0), 
 35540 ;;  c               1  [STACK] unsigned char 
 35541 ;; Auto vars:     Size  Location     Type
 35542 ;;  w               2  [STACK] int 
 35543 ;;  l               2    0        int 
 35544 ;; Return value:  Size  Location     Type
 35545 ;;                  2  [STACK] int 
 35546 ;; Registers used:
 35547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 35548 ;; Tracked objects:
 35549 ;;		On entry : 0/0
 35550 ;;		On exit  : 0/0
 35551 ;;		Unchanged: 0/0
 35552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35557 ;;Total ram usage:        0 bytes
 35558 ;; Hardware stack levels used:    1
 35559 ;; Hardware stack levels required when called:   20
 35560 ;; This function calls:
 35561 ;;		_pad
 35562 ;; This function is called by:
 35563 ;;		_vfpfcnvrt
 35564 ;; This function uses a reentrant model
 35565 ;;
 35566                           
 35567                           	psect	text118
 35568  0010A8                     __ptext118:
 35569                           	opt callstack 0
 35570  0010A8                     _ctoa:
 35571                           	opt callstack 0
 35572                           
 35573                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35574  0010A8  52E6               	movf	postinc1,f,c
 35575  0010AA  52E6               	movf	postinc1,f,c
 35576                           
 35577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 35578                           
 35579                           ;incstack = 0
 35580 ;; hardware stack exceeded
 35581  0010AC  504A               	movf	_width^0,w,c
 35582  0010AE  104B               	iorwf	(_width+1)^0,w,c
 35583  0010B0  A4D8               	btfss	status,2,c
 35584  0010B2  D009               	goto	l15552
 35585                           
 35586                           ;stkvar	_w @ sp[(-2)+0]
 35587  0010B4  0EFE               	movlw	-2
 35588  0010B6  0060  F12B  FFE3   	movff	_width,plusw1
 35589  0010BC  0EFF               	movlw	-1
 35590  0010BE  0060  F12F  FFE3   	movff	_width+1,plusw1
 35591  0010C4  D016               	goto	l15554
 35592  0010C6                     l15552:
 35593  0010C6  0EFF               	movlw	255
 35594  0010C8  6E34               	movwf	(btemp+10)^0,c
 35595  0010CA  0EFF               	movlw	255
 35596  0010CC  6E35               	movwf	(btemp+11)^0,c
 35597  0010CE  0060  F128  F032   	movff	_width,btemp+8
 35598  0010D4  0060  F12C  F033   	movff	_width+1,btemp+9
 35599  0010DA  5034               	movf	(btemp+10)^0,w,c
 35600  0010DC  2632               	addwf	(btemp+8)^0,f,c
 35601  0010DE  5035               	movf	(btemp+11)^0,w,c
 35602  0010E0  2233               	addwfc	(btemp+9)^0,f,c
 35603                           
 35604                           ;stkvar	_w @ sp[(-2)+0]
 35605  0010E2  0EFE               	movlw	-2
 35606  0010E4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 35607  0010EA  0EFF               	movlw	-1
 35608  0010EC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 35609  0010F2                     l15554:
 35610                           
 35611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 35612                           ;stkvar	_c @ sp[(-2)+-3]
 35613  0010F2  0EFB               	movlw	-5
 35614  0010F4  006F FF8C  F354    	movff	plusw1,_dbuf
 35615                           
 35616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 35617  0010FA  0103               	movlb	3	; () banked
 35618  0010FC  6B55               	clrf	(_dbuf+1)& (0+255),b
 35619                           
 35620                           ; BSR set to: 3
 35621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 35622                           ;stkvar	_w @ sp[(-2)+0]
 35623  0010FE  0EFE               	movlw	-2
 35624  001100  006F FF8F FFE6     	movff	plusw1,postinc1
 35625  001106  006F FF8F FFE6     	movff	plusw1,postinc1
 35626  00110C  0E54               	movlw	low _dbuf
 35627  00110E  6EE6               	movwf	postinc1,c
 35628  001110  0E03               	movlw	high _dbuf
 35629  001112  6EE6               	movwf	postinc1,c
 35630                           
 35631                           ;stkvar	_fp @ sp[(-6)+-2]
 35632  001114  0EF8               	movlw	-8
 35633  001116  006F FF8F FFE6     	movff	plusw1,postinc1
 35634  00111C  006F FF8F FFE6     	movff	plusw1,postinc1
 35635  001122  ECE7  F0FC         	call	_pad	;wreg free
 35636                           
 35637                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 35638  001126  0EFB               	movlw	251
 35639  001128  26E1               	addwf	fsr1l,f,c
 35640  00112A  0EFF               	movlw	255
 35641  00112C  22E2               	addwfc	fsr1h,f,c
 35642  00112E  0012               	return		;funcret
 35643  001130                     __end_of_ctoa:
 35644                           	opt callstack 0
 35645                           
 35646 ;; *************** function _pad *****************
 35647 ;; Defined at:
 35648 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 35649 ;; Parameters:    Size  Location     Type
 35650 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35651 ;;		 -> f(6), NULL(0), 
 35652 ;;  buf             2  [STACK] PTR unsigned char 
 35653 ;;		 -> dbuf(80), 
 35654 ;;  p               2  [STACK] int 
 35655 ;; Auto vars:     Size  Location     Type
 35656 ;;  w               2  [STACK] int 
 35657 ;;  i               2  [STACK] int 
 35658 ;; Return value:  Size  Location     Type
 35659 ;;                  2  [STACK] int 
 35660 ;; Registers used:
 35661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 35662 ;; Tracked objects:
 35663 ;;		On entry : 0/3
 35664 ;;		On exit  : 0/0
 35665 ;;		Unchanged: 0/0
 35666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35671 ;;Total ram usage:        0 bytes
 35672 ;; Hardware stack levels used:    1
 35673 ;; Hardware stack levels required when called:   19
 35674 ;; This function calls:
 35675 ;;		_fputc
 35676 ;;		_fputs
 35677 ;;		_strlen
 35678 ;; This function is called by:
 35679 ;;		_ctoa
 35680 ;;		_dtoa
 35681 ;;		_efgtoa
 35682 ;;		_utoa
 35683 ;;		_xtoa
 35684 ;; This function uses a reentrant model
 35685 ;;
 35686                           
 35687                           	psect	text119
 35688  01F9CE                     __ptext119:
 35689                           	opt callstack 0
 35690  01F9CE                     _pad:
 35691                           	opt callstack 0
 35692                           
 35693                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35694  01F9CE  52E6               	movf	postinc1,f,c
 35695  01F9D0  52E6               	movf	postinc1,f,c
 35696  01F9D2  52E6               	movf	postinc1,f,c
 35697  01F9D4  52E6               	movf	postinc1,f,c
 35698                           
 35699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 35700                           
 35701                           ;incstack = 0
 35702 ;; hardware stack exceeded
 35703  01F9D6  A04E               	btfss	_flags^0,0,c
 35704  01F9D8  D010               	goto	l15436
 35705                           
 35706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 35707                           ;stkvar	_fp @ sp[(-4)+-2]
 35708  01F9DA  0EFA               	movlw	-6
 35709  01F9DC  006F FF8F FFE6     	movff	plusw1,postinc1
 35710  01F9E2  006F FF8F FFE6     	movff	plusw1,postinc1
 35711                           
 35712                           ;stkvar	_buf @ sp[(-6)+-4]
 35713  01F9E8  0EF6               	movlw	-10
 35714  01F9EA  006F FF8F FFE6     	movff	plusw1,postinc1
 35715  01F9F0  006F FF8F FFE6     	movff	plusw1,postinc1
 35716  01F9F6  EC9B  F006         	call	_fputs	;wreg free
 35717  01F9FA                     l15436:
 35718                           
 35719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 35720                           ;stkvar	_p @ sp[(-4)+-6]
 35721  01F9FA  0EF7               	movlw	-9
 35722  01F9FC  BEE3               	btfsc	plusw1,7,c
 35723  01F9FE  D011               	goto	l15440
 35724                           
 35725                           ;stkvar	_p @ sp[(-4)+-6]
 35726                           ;stkvar	_w @ sp[(-4)+0]
 35727  01FA00  0EF6               	movlw	-10
 35728  01FA02  006F FF8C  F02A    	movff	plusw1,btemp
 35729  01FA08  0EFC               	movlw	-4
 35730  01FA0A  0060  F0AB  FFE3   	movff	btemp,plusw1
 35731  01FA10  0EF7               	movlw	-9
 35732  01FA12  006F FF8C  F02A    	movff	plusw1,btemp
 35733  01FA18  0EFD               	movlw	-3
 35734  01FA1A  0060  F0AB  FFE3   	movff	btemp,plusw1
 35735  01FA20  D004               	goto	l2467
 35736  01FA22                     l15440:
 35737                           
 35738                           ;stkvar	_w @ sp[(-4)+0]
 35739  01FA22  0EFC               	movlw	-4
 35740  01FA24  6AE3               	clrf	plusw1,c
 35741  01FA26  0EFD               	movlw	-3
 35742  01FA28  6AE3               	clrf	plusw1,c
 35743  01FA2A                     l2467:
 35744                           
 35745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 35746                           ;stkvar	_i @ sp[(-4)+2]
 35747  01FA2A  0EFE               	movlw	-2
 35748  01FA2C  6AE3               	clrf	plusw1,c
 35749  01FA2E  0EFF               	movlw	-1
 35750  01FA30  6AE3               	clrf	plusw1,c
 35751                           
 35752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 35753  01FA32  D01E               	goto	l15446
 35754  01FA34                     l15442:
 35755                           
 35756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 35757                           ;stkvar	_fp @ sp[(-4)+-2]
 35758  01FA34  0EFA               	movlw	-6
 35759  01FA36  006F FF8F FFE6     	movff	plusw1,postinc1
 35760  01FA3C  006F FF8F FFE6     	movff	plusw1,postinc1
 35761  01FA42  0E20               	movlw	32
 35762  01FA44  6EE6               	movwf	postinc1,c
 35763  01FA46  0E00               	movlw	0
 35764  01FA48  6EE6               	movwf	postinc1,c
 35765  01FA4A  ECB0  F0FA         	call	_fputc	;wreg free
 35766                           
 35767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 35768                           ;stkvar	_i @ sp[(-4)+2]
 35769  01FA4E  0EFE               	movlw	-2
 35770  01FA50  50E3               	movf	plusw1,w,c
 35771  01FA52  0F01               	addlw	1
 35772  01FA54  6E2A               	movwf	btemp^0,c
 35773  01FA56  0EFE               	movlw	-2
 35774  01FA58  0060  F0AB  FFE3   	movff	btemp,plusw1
 35775  01FA5E  6A2A               	clrf	btemp^0,c
 35776  01FA60  0EFF               	movlw	-1
 35777  01FA62  50E3               	movf	plusw1,w,c
 35778  01FA64  202A               	addwfc	btemp^0,w,c
 35779  01FA66  6E2A               	movwf	btemp^0,c
 35780  01FA68  0EFF               	movlw	-1
 35781  01FA6A  0060  F0AB  FFE3   	movff	btemp,plusw1
 35782  01FA70                     l15446:
 35783                           
 35784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 35785                           ;stkvar	_w @ sp[(-4)+0]
 35786                           ;stkvar	_i @ sp[(-4)+2]
 35787  01FA70  50E1               	movf	fsr1l,w,c
 35788  01FA72  0FFE               	addlw	-2
 35789  01FA74  6ED9               	movwf	fsr2l,c
 35790  01FA76  50E2               	movf	fsr1h,w,c
 35791  01FA78  6EDA               	movwf	fsr2h,c
 35792  01FA7A  0EFF               	movlw	255
 35793  01FA7C  22DA               	addwfc	fsr2h,f,c
 35794  01FA7E  0EFC               	movlw	-4
 35795  01FA80  50E3               	movf	plusw1,w,c
 35796  01FA82  5CDE               	subwf	postinc2,w,c
 35797  01FA84  50DE               	movf	postinc2,w,c
 35798  01FA86  0A80               	xorlw	128
 35799  01FA88  6E2A               	movwf	btemp^0,c
 35800  01FA8A  0EFD               	movlw	-3
 35801  01FA8C  50E3               	movf	plusw1,w,c
 35802  01FA8E  0A80               	xorlw	128
 35803  01FA90  582A               	subwfb	btemp^0,w,c
 35804  01FA92  A0D8               	btfss	status,0,c
 35805  01FA94  D7CF               	goto	l15442
 35806                           
 35807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 35808  01FA96  B04E               	btfsc	_flags^0,0,c
 35809  01FA98  D010               	goto	l15450
 35810                           
 35811                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 35812                           ;stkvar	_fp @ sp[(-4)+-2]
 35813  01FA9A  0EFA               	movlw	-6
 35814  01FA9C  006F FF8F FFE6     	movff	plusw1,postinc1
 35815  01FAA2  006F FF8F FFE6     	movff	plusw1,postinc1
 35816                           
 35817                           ;stkvar	_buf @ sp[(-6)+-4]
 35818  01FAA8  0EF6               	movlw	-10
 35819  01FAAA  006F FF8F FFE6     	movff	plusw1,postinc1
 35820  01FAB0  006F FF8F FFE6     	movff	plusw1,postinc1
 35821  01FAB6  EC9B  F006         	call	_fputs	;wreg free
 35822  01FABA                     l15450:
 35823                           
 35824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 35825                           ;stkvar	_w @ sp[(-4)+0]
 35826                           ;stkvar	_buf @ sp[(-4)+-4]
 35827  01FABA  0EF8               	movlw	-8
 35828  01FABC  006F FF8F FFE6     	movff	plusw1,postinc1
 35829  01FAC2  006F FF8F FFE6     	movff	plusw1,postinc1
 35830  01FAC8  ECFD  F005         	call	_strlen	;wreg free
 35831  01FACC  0EFC               	movlw	-4
 35832  01FACE  50E3               	movf	plusw1,w,c
 35833  01FAD0  262A               	addwf	btemp^0,f,c
 35834  01FAD2  0EFD               	movlw	-3
 35835  01FAD4  50E3               	movf	plusw1,w,c
 35836  01FAD6  222B               	addwfc	(btemp+1)^0,f,c
 35837                           
 35838                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 35839  01FAD8  0EF6               	movlw	246
 35840  01FADA  26E1               	addwf	fsr1l,f,c
 35841  01FADC  0EFF               	movlw	255
 35842  01FADE  22E2               	addwfc	fsr1h,f,c
 35843  01FAE0  0012               	return		;funcret
 35844  01FAE2                     __end_of_pad:
 35845                           	opt callstack 0
 35846                           
 35847 ;; *************** function _strlen *****************
 35848 ;; Defined at:
 35849 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 35850 ;; Parameters:    Size  Location     Type
 35851 ;;  s               2  [STACK] PTR const unsigned char 
 35852 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 35853 ;;		 -> dbuf(80), spin(120), STR_76(9), STR_75(12), 
 35854 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 35855 ;;		 -> STR_3(5), V(181), 
 35856 ;; Auto vars:     Size  Location     Type
 35857 ;;  a               2  [STACK] PTR const unsigned char 
 35858 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 35859 ;;		 -> dbuf(80), spin(120), STR_76(9), STR_75(12), 
 35860 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 35861 ;;		 -> STR_3(5), V(181), 
 35862 ;; Return value:  Size  Location     Type
 35863 ;;                  2  [STACK] unsigned int 
 35864 ;; Registers used:
 35865 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 35866 ;; Tracked objects:
 35867 ;;		On entry : 0/0
 35868 ;;		On exit  : 0/0
 35869 ;;		Unchanged: 0/0
 35870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35875 ;;Total ram usage:        0 bytes
 35876 ;; Hardware stack levels used:    1
 35877 ;; Hardware stack levels required when called:   15
 35878 ;; This function calls:
 35879 ;;		Nothing
 35880 ;; This function is called by:
 35881 ;;		_eaDogM_WriteString
 35882 ;;		_spinners
 35883 ;;		_calc_bsoc
 35884 ;;		_pad
 35885 ;;		_stoa
 35886 ;; This function uses a reentrant model
 35887 ;;
 35888                           
 35889                           	psect	text120
 35890  000BFA                     __ptext120:
 35891                           	opt callstack 0
 35892  000BFA                     _strlen:
 35893                           	opt callstack 0
 35894                           
 35895                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35896  000BFA  52E6               	movf	postinc1,f,c
 35897  000BFC  52E6               	movf	postinc1,f,c
 35898                           
 35899                           ;stkvar	_s @ sp[(-2)+-2]
 35900                           
 35901                           ;incstack = 0
 35902 ;; hardware stack exceeded
 35903  000BFE  0EFC               	movlw	-4
 35904  000C00  006F FF8C  F034    	movff	plusw1,btemp+10
 35905  000C06  0EFD               	movlw	-3
 35906  000C08  006F FF8C  F035    	movff	plusw1,btemp+11
 35907                           
 35908                           ;stkvar	_a @ sp[(-2)+0]
 35909  000C0E  0EFF               	movlw	-1
 35910  000C10  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35911  000C16  0EFE               	movlw	-2
 35912  000C18  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 35913  000C1E  D011               	goto	l15376
 35914  000C20                     l15374:
 35915                           
 35916                           ;stkvar	_s @ sp[(-2)+-2]
 35917  000C20  0EFC               	movlw	-4
 35918  000C22  50E3               	movf	plusw1,w,c
 35919  000C24  0F01               	addlw	1
 35920  000C26  6E2A               	movwf	btemp^0,c
 35921  000C28  0EFC               	movlw	-4
 35922  000C2A  0060  F0AB  FFE3   	movff	btemp,plusw1
 35923  000C30  6A2A               	clrf	btemp^0,c
 35924  000C32  0EFD               	movlw	-3
 35925  000C34  50E3               	movf	plusw1,w,c
 35926  000C36  202A               	addwfc	btemp^0,w,c
 35927  000C38  6E2A               	movwf	btemp^0,c
 35928  000C3A  0EFD               	movlw	-3
 35929  000C3C  0060  F0AB  FFE3   	movff	btemp,plusw1
 35930  000C42                     l15376:
 35931                           
 35932                           ;stkvar	_s @ sp[(-2)+-2]
 35933  000C42  0EFC               	movlw	-4
 35934  000C44  006F FF8F FFF6     	movff	plusw1,tblptrl
 35935  000C4A  0EFD               	movlw	-3
 35936  000C4C  006F FF8F FFF7     	movff	plusw1,tblptrh
 35937  000C52  0E00               	movlw	low (__mediumconst shr (0+16))
 35938  000C54  6EF8               	movwf	tblptru,c
 35939  000C56  0E1F               	movlw	(high __ramtop+-1)
 35940  000C58  64F7               	cpfsgt	tblptrh,c
 35941  000C5A  D003               	bra	u14247
 35942  000C5C  0008               	tblrd		*
 35943  000C5E  50F5               	movf	tablat,w,c
 35944  000C60  D007               	bra	u14240
 35945  000C62                     u14247:
 35946  000C62  006F FFDB FFE9     	movff	tblptrl,fsr0l
 35947  000C68  006F FFDF FFEA     	movff	tblptrh,fsr0h
 35948  000C6E  50EF               	movf	indf0,w,c
 35949  000C70                     u14240:
 35950  000C70  0900               	iorlw	0
 35951  000C72  A4D8               	btfss	status,2,c
 35952  000C74  D7D5               	goto	l15374
 35953                           
 35954                           ;stkvar	_a @ sp[(-2)+0]
 35955                           ;stkvar	_s @ sp[(-2)+-2]
 35956  000C76  0EFC               	movlw	-4
 35957  000C78  006F FF8C  F02A    	movff	plusw1,btemp
 35958  000C7E  0EFD               	movlw	-3
 35959  000C80  006F FF8C  F02B    	movff	plusw1,btemp+1
 35960  000C86  0EFE               	movlw	-2
 35961  000C88  50E3               	movf	plusw1,w,c
 35962  000C8A  5E2A               	subwf	btemp^0,f,c
 35963  000C8C  0EFF               	movlw	-1
 35964  000C8E  50E3               	movf	plusw1,w,c
 35965  000C90  5A2B               	subwfb	(btemp+1)^0,f,c
 35966                           
 35967                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 35968  000C92  52E5               	movf	postdec1,f,c
 35969  000C94  52E5               	movf	postdec1,f,c
 35970  000C96  52E5               	movf	postdec1,f,c
 35971  000C98  52E5               	movf	postdec1,f,c
 35972  000C9A  0012               	return		;funcret
 35973  000C9C                     __end_of_strlen:
 35974                           	opt callstack 0
 35975                           
 35976 ;; *************** function _fputs *****************
 35977 ;; Defined at:
 35978 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 35979 ;; Parameters:    Size  Location     Type
 35980 ;;  s               2  [STACK] PTR const unsigned char 
 35981 ;;		 -> dbuf(80), 
 35982 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35983 ;;		 -> f(6), NULL(0), 
 35984 ;; Auto vars:     Size  Location     Type
 35985 ;;  i               2  [STACK] int 
 35986 ;;  c               1  [STACK] unsigned char 
 35987 ;; Return value:  Size  Location     Type
 35988 ;;                  2  [STACK] int 
 35989 ;; Registers used:
 35990 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 35991 ;; Tracked objects:
 35992 ;;		On entry : 0/3
 35993 ;;		On exit  : 0/0
 35994 ;;		Unchanged: 0/0
 35995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36000 ;;Total ram usage:        0 bytes
 36001 ;; Hardware stack levels used:    1
 36002 ;; Hardware stack levels required when called:   18
 36003 ;; This function calls:
 36004 ;;		_fputc
 36005 ;; This function is called by:
 36006 ;;		_pad
 36007 ;; This function uses a reentrant model
 36008 ;;
 36009                           
 36010                           	psect	text121
 36011  000D36                     __ptext121:
 36012                           	opt callstack 0
 36013  000D36                     _fputs:
 36014                           	opt callstack 0
 36015                           
 36016                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36017  000D36  52E6               	movf	postinc1,f,c
 36018  000D38  52E6               	movf	postinc1,f,c
 36019  000D3A  52E6               	movf	postinc1,f,c
 36020                           
 36021                           ;stkvar	_i @ sp[(-3)+0]
 36022                           
 36023                           ;incstack = 0
 36024 ;; hardware stack exceeded
 36025  000D3C  0EFD               	movlw	-3
 36026  000D3E  6AE3               	clrf	plusw1,c
 36027  000D40  0EFE               	movlw	-2
 36028  000D42  6AE3               	clrf	plusw1,c
 36029  000D44  D01F               	goto	l15388
 36030  000D46                     l15384:
 36031                           
 36032                           ;stkvar	_fp @ sp[(-3)+-4]
 36033  000D46  0EF9               	movlw	-7
 36034  000D48  006F FF8F FFE6     	movff	plusw1,postinc1
 36035  000D4E  006F FF8F FFE6     	movff	plusw1,postinc1
 36036                           
 36037                           ;stkvar	_c @ sp[(-5)+2]
 36038  000D54  0EFD               	movlw	-3
 36039  000D56  50E3               	movf	plusw1,w,c
 36040  000D58  6EE6               	movwf	postinc1,c
 36041  000D5A  0E00               	movlw	0
 36042  000D5C  6EE6               	movwf	postinc1,c
 36043  000D5E  ECB0  F0FA         	call	_fputc	;wreg free
 36044                           
 36045                           ;stkvar	_i @ sp[(-3)+0]
 36046  000D62  0EFD               	movlw	-3
 36047  000D64  50E3               	movf	plusw1,w,c
 36048  000D66  0F01               	addlw	1
 36049  000D68  6E2A               	movwf	btemp^0,c
 36050  000D6A  0EFD               	movlw	-3
 36051  000D6C  0060  F0AB  FFE3   	movff	btemp,plusw1
 36052  000D72  6A2A               	clrf	btemp^0,c
 36053  000D74  0EFE               	movlw	-2
 36054  000D76  50E3               	movf	plusw1,w,c
 36055  000D78  202A               	addwfc	btemp^0,w,c
 36056  000D7A  6E2A               	movwf	btemp^0,c
 36057  000D7C  0EFE               	movlw	-2
 36058  000D7E  0060  F0AB  FFE3   	movff	btemp,plusw1
 36059  000D84                     l15388:
 36060                           
 36061                           ;stkvar	_i @ sp[(-3)+0]
 36062  000D84  0EFD               	movlw	-3
 36063  000D86  006F FF8C  F034    	movff	plusw1,btemp+10
 36064  000D8C  0EFE               	movlw	-2
 36065  000D8E  006F FF8C  F035    	movff	plusw1,btemp+11
 36066                           
 36067                           ;stkvar	_s @ sp[(-3)+-2]
 36068  000D94  0EFB               	movlw	-5
 36069  000D96  006F FF8C  F032    	movff	plusw1,btemp+8
 36070  000D9C  0EFC               	movlw	-4
 36071  000D9E  006F FF8C  F033    	movff	plusw1,btemp+9
 36072  000DA4  5034               	movf	(btemp+10)^0,w,c
 36073  000DA6  2432               	addwf	(btemp+8)^0,w,c
 36074  000DA8  6ED9               	movwf	fsr2l,c
 36075  000DAA  5035               	movf	(btemp+11)^0,w,c
 36076  000DAC  2033               	addwfc	(btemp+9)^0,w,c
 36077  000DAE  6EDA               	movwf	fsr2h,c
 36078  000DB0  50DF               	movf	indf2,w,c
 36079  000DB2  6E35               	movwf	(btemp+11)^0,c
 36080                           
 36081                           ;stkvar	_c @ sp[(-3)+2]
 36082  000DB4  0EFF               	movlw	-1
 36083  000DB6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36084  000DBC  0EFF               	movlw	-1
 36085  000DBE  50E3               	movf	plusw1,w,c
 36086  000DC0  A4D8               	btfss	status,2,c
 36087  000DC2  D7C1               	goto	l15384
 36088                           
 36089                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 36090  000DC4  0EF9               	movlw	249
 36091  000DC6  26E1               	addwf	fsr1l,f,c
 36092  000DC8  0EFF               	movlw	255
 36093  000DCA  22E2               	addwfc	fsr1h,f,c
 36094  000DCC  0012               	return		;funcret
 36095  000DCE                     __end_of_fputs:
 36096                           	opt callstack 0
 36097                           
 36098 ;; *************** function _fputc *****************
 36099 ;; Defined at:
 36100 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 36101 ;; Parameters:    Size  Location     Type
 36102 ;;  c               2  [STACK] int 
 36103 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36104 ;;		 -> f(6), NULL(0), 
 36105 ;; Auto vars:     Size  Location     Type
 36106 ;;		None
 36107 ;; Return value:  Size  Location     Type
 36108 ;;                  2  [STACK] int 
 36109 ;; Registers used:
 36110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 36111 ;; Tracked objects:
 36112 ;;		On entry : 0/0
 36113 ;;		On exit  : 0/0
 36114 ;;		Unchanged: 0/0
 36115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36120 ;;Total ram usage:        0 bytes
 36121 ;; Hardware stack levels used:    1
 36122 ;; Hardware stack levels required when called:   17
 36123 ;; This function calls:
 36124 ;;		_putch
 36125 ;; This function is called by:
 36126 ;;		_pad
 36127 ;;		_stoa
 36128 ;;		_vfpfcnvrt
 36129 ;;		_fputs
 36130 ;; This function uses a reentrant model
 36131 ;;
 36132                           
 36133                           	psect	text122
 36134  01F560                     __ptext122:
 36135                           	opt callstack 0
 36136  01F560                     _fputc:
 36137                           	opt callstack 0
 36138                           
 36139                           ;stkvar	_fp @ sp[(0)+-4]
 36140                           
 36141                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36142                           ;incstack = 0
 36143 ;; hardware stack exceeded
 36144  01F560  0EFC               	movlw	-4
 36145  01F562  006F FF8C  F02A    	movff	plusw1,btemp
 36146  01F568  0EFD               	movlw	-3
 36147  01F56A  50E3               	movf	plusw1,w,c
 36148  01F56C  102A               	iorwf	btemp^0,w,c
 36149  01F56E  B4D8               	btfsc	status,2,c
 36150  01F570  D009               	goto	u14210
 36151                           
 36152                           ;stkvar	_fp @ sp[(0)+-4]
 36153  01F572  0EFC               	movlw	-4
 36154  01F574  006F FF8C  F02A    	movff	plusw1,btemp
 36155  01F57A  0EFD               	movlw	-3
 36156  01F57C  50E3               	movf	plusw1,w,c
 36157  01F57E  102A               	iorwf	btemp^0,w,c
 36158  01F580  A4D8               	btfss	status,2,c
 36159  01F582  D006               	goto	l15362
 36160  01F584                     u14210:
 36161                           
 36162                           ;stkvar	_c @ sp[(0)+-2]
 36163  01F584  0EFE               	movlw	-2
 36164  01F586  50E3               	movf	plusw1,w,c
 36165  01F588  6EE6               	movwf	postinc1,c
 36166  01F58A  EC3B  F014         	call	_putch	;wreg free
 36167  01F58E  D075               	goto	l3543
 36168  01F590                     l15362:
 36169                           
 36170                           ;stkvar	_fp @ sp[(0)+-4]
 36171  01F590  0EFC               	movlw	-4
 36172  01F592  006F FF8C  F034    	movff	plusw1,btemp+10
 36173  01F598  0EFD               	movlw	-3
 36174  01F59A  006F FF8C  F035    	movff	plusw1,btemp+11
 36175  01F5A0  0E04               	movlw	4
 36176  01F5A2  2434               	addwf	(btemp+10)^0,w,c
 36177  01F5A4  6ED9               	movwf	fsr2l,c
 36178  01F5A6  0E00               	movlw	0
 36179  01F5A8  2035               	addwfc	(btemp+11)^0,w,c
 36180  01F5AA  6EDA               	movwf	fsr2h,c
 36181  01F5AC  50DE               	movf	postinc2,w,c
 36182  01F5AE  10DE               	iorwf	postinc2,w,c
 36183  01F5B0  B4D8               	btfsc	status,2,c
 36184  01F5B2  D026               	goto	u14230
 36185                           
 36186                           ;stkvar	_fp @ sp[(0)+-4]
 36187  01F5B4  0EFC               	movlw	-4
 36188  01F5B6  006F FF8C  F034    	movff	plusw1,btemp+10
 36189  01F5BC  0EFD               	movlw	-3
 36190  01F5BE  006F FF8C  F035    	movff	plusw1,btemp+11
 36191  01F5C4  0E04               	movlw	4
 36192  01F5C6  2434               	addwf	(btemp+10)^0,w,c
 36193  01F5C8  6ED9               	movwf	fsr2l,c
 36194  01F5CA  0E00               	movlw	0
 36195  01F5CC  2035               	addwfc	(btemp+11)^0,w,c
 36196  01F5CE  6EDA               	movwf	fsr2h,c
 36197                           
 36198                           ;stkvar	_fp @ sp[(0)+-4]
 36199  01F5D0  0EFC               	movlw	-4
 36200  01F5D2  006F FF8C  F034    	movff	plusw1,btemp+10
 36201  01F5D8  0EFD               	movlw	-3
 36202  01F5DA  006F FF8C  F035    	movff	plusw1,btemp+11
 36203  01F5E0  0E02               	movlw	2
 36204  01F5E2  2434               	addwf	(btemp+10)^0,w,c
 36205  01F5E4  6EE9               	movwf	fsr0l,c
 36206  01F5E6  0E00               	movlw	0
 36207  01F5E8  2035               	addwfc	(btemp+11)^0,w,c
 36208  01F5EA  6EEA               	movwf	fsr0h,c
 36209  01F5EC  50DE               	movf	postinc2,w,c
 36210  01F5EE  5CEE               	subwf	postinc0,w,c
 36211  01F5F0  50EE               	movf	postinc0,w,c
 36212  01F5F2  0A80               	xorlw	128
 36213  01F5F4  6E2A               	movwf	btemp^0,c
 36214  01F5F6  50DE               	movf	postinc2,w,c
 36215  01F5F8  0A80               	xorlw	128
 36216  01F5FA  582A               	subwfb	btemp^0,w,c
 36217  01F5FC  B0D8               	btfsc	status,0,c
 36218  01F5FE  D03D               	goto	l3543
 36219  01F600                     u14230:
 36220                           
 36221                           ;stkvar	_c @ sp[(0)+-2]
 36222                           ;stkvar	_fp @ sp[(0)+-4]
 36223  01F600  0EFC               	movlw	-4
 36224  01F602  006F FF8C  F034    	movff	plusw1,btemp+10
 36225  01F608  0EFD               	movlw	-3
 36226  01F60A  006F FF8C  F035    	movff	plusw1,btemp+11
 36227  01F610  0E02               	movlw	2
 36228  01F612  2434               	addwf	(btemp+10)^0,w,c
 36229  01F614  6ED9               	movwf	fsr2l,c
 36230  01F616  0E00               	movlw	0
 36231  01F618  2035               	addwfc	(btemp+11)^0,w,c
 36232  01F61A  6EDA               	movwf	fsr2h,c
 36233  01F61C  006F FF78  F034    	movff	postinc2,btemp+10
 36234  01F622  006F FF74  F035    	movff	postdec2,btemp+11
 36235                           
 36236                           ;stkvar	_fp @ sp[(0)+-4]
 36237  01F628  0EFC               	movlw	-4
 36238  01F62A  006F FF8F FFD9     	movff	plusw1,fsr2l
 36239  01F630  0EFD               	movlw	-3
 36240  01F632  006F FF8F FFDA     	movff	plusw1,fsr2h
 36241  01F638  006F FF78  F032    	movff	postinc2,btemp+8
 36242  01F63E  006F FF74  F033    	movff	postdec2,btemp+9
 36243  01F644  5034               	movf	(btemp+10)^0,w,c
 36244  01F646  2432               	addwf	(btemp+8)^0,w,c
 36245  01F648  6ED9               	movwf	fsr2l,c
 36246  01F64A  5035               	movf	(btemp+11)^0,w,c
 36247  01F64C  2033               	addwfc	(btemp+9)^0,w,c
 36248  01F64E  6EDA               	movwf	fsr2h,c
 36249  01F650  0EFE               	movlw	-2
 36250  01F652  006F FF8F FFDF     	movff	plusw1,indf2
 36251                           
 36252                           ;stkvar	_fp @ sp[(0)+-4]
 36253  01F658  0EFC               	movlw	-4
 36254  01F65A  006F FF8C  F034    	movff	plusw1,btemp+10
 36255  01F660  0EFD               	movlw	-3
 36256  01F662  006F FF8C  F035    	movff	plusw1,btemp+11
 36257  01F668  0E02               	movlw	2
 36258  01F66A  2434               	addwf	(btemp+10)^0,w,c
 36259  01F66C  6ED9               	movwf	fsr2l,c
 36260  01F66E  0E00               	movlw	0
 36261  01F670  2035               	addwfc	(btemp+11)^0,w,c
 36262  01F672  6EDA               	movwf	fsr2h,c
 36263  01F674  2ADE               	incf	postinc2,f,c
 36264  01F676  0E00               	movlw	0
 36265  01F678  22DD               	addwfc	postdec2,f,c
 36266  01F67A                     l3543:
 36267                           
 36268                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 36269  01F67A  52E5               	movf	postdec1,f,c
 36270  01F67C  52E5               	movf	postdec1,f,c
 36271  01F67E  52E5               	movf	postdec1,f,c
 36272  01F680  52E5               	movf	postdec1,f,c
 36273  01F682  0012               	return		;funcret
 36274  01F684                     __end_of_fputc:
 36275                           	opt callstack 0
 36276                           
 36277 ;; *************** function _putch *****************
 36278 ;; Defined at:
 36279 ;;		line 420 in file "eadog.c"
 36280 ;; Parameters:    Size  Location     Type
 36281 ;;  c               1  [STACK] unsigned char 
 36282 ;; Auto vars:     Size  Location     Type
 36283 ;;		None
 36284 ;; Return value:  Size  Location     Type
 36285 ;;                  1  [STACK] void 
 36286 ;; Registers used:
 36287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 36288 ;; Tracked objects:
 36289 ;;		On entry : 0/0
 36290 ;;		On exit  : 0/0
 36291 ;;		Unchanged: 0/0
 36292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36297 ;;Total ram usage:        0 bytes
 36298 ;; Hardware stack levels used:    1
 36299 ;; Hardware stack levels required when called:   16
 36300 ;; This function calls:
 36301 ;;		_ringBufS_put_dma
 36302 ;; This function is called by:
 36303 ;;		_fputc
 36304 ;; This function uses a reentrant model
 36305 ;;
 36306                           
 36307                           	psect	text123
 36308  002876                     __ptext123:
 36309                           	opt callstack 0
 36310  002876                     _putch:
 36311                           	opt callstack 0
 36312                           
 36313                           ;eadog.c: 420: void putch(char c);eadog.c: 421: {;eadog.c: 422:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 36314                           ;stkvar	_c @ sp[(0)+-1]
 36315                           
 36316                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36317                           ;incstack = 0
 36318 ;; hardware stack exceeded
 36319  002876  0EFF               	movlw	-1
 36320  002878  50E3               	movf	plusw1,w,c
 36321  00287A  6EE6               	movwf	postinc1,c
 36322  00287C  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 36323  002882  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 36324  002888  EC03  F005         	call	_ringBufS_put_dma	;wreg free
 36325                           
 36326                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 36327  00288C  52E5               	movf	postdec1,f,c
 36328  00288E  0012               	return		;funcret
 36329  002890                     __end_of_putch:
 36330                           	opt callstack 0
 36331                           
 36332 ;; *************** function _ringBufS_put_dma *****************
 36333 ;; Defined at:
 36334 ;;		line 67 in file "ringbufs.c"
 36335 ;; Parameters:    Size  Location     Type
 36336 ;;  _this           2  [STACK] PTR struct ringBufS_t
 36337 ;;		 -> ring_buf1(67), 
 36338 ;;  c               1  [STACK] const unsigned char 
 36339 ;; Auto vars:     Size  Location     Type
 36340 ;;		None
 36341 ;; Return value:  Size  Location     Type
 36342 ;;                  1  [STACK] void 
 36343 ;; Registers used:
 36344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 36345 ;; Tracked objects:
 36346 ;;		On entry : 0/3B
 36347 ;;		On exit  : 0/0
 36348 ;;		Unchanged: 0/0
 36349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36354 ;;Total ram usage:        0 bytes
 36355 ;; Hardware stack levels used:    1
 36356 ;; Hardware stack levels required when called:   15
 36357 ;; This function calls:
 36358 ;;		Nothing
 36359 ;; This function is called by:
 36360 ;;		_send_lcd_data_dma
 36361 ;;		_putch
 36362 ;; This function uses a reentrant model
 36363 ;;
 36364                           
 36365                           	psect	text124
 36366  000A06                     __ptext124:
 36367                           	opt callstack 0
 36368  000A06                     _ringBufS_put_dma:
 36369                           	opt callstack 0
 36370                           
 36371                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 36372                           ;stkvar	__this @ sp[(0)+-2]
 36373                           
 36374                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36375                           ;incstack = 0
 36376 ;; hardware stack exceeded
 36377  000A06  0EFE               	movlw	-2
 36378  000A08  006F FF8C  F034    	movff	plusw1,btemp+10
 36379  000A0E  0EFF               	movlw	-1
 36380  000A10  006F FF8C  F035    	movff	plusw1,btemp+11
 36381  000A16  0E42               	movlw	66
 36382  000A18  2434               	addwf	(btemp+10)^0,w,c
 36383  000A1A  6ED9               	movwf	fsr2l,c
 36384  000A1C  0E00               	movlw	0
 36385  000A1E  2035               	addwfc	(btemp+11)^0,w,c
 36386  000A20  6EDA               	movwf	fsr2h,c
 36387  000A22  0E40               	movlw	64
 36388  000A24  60DF               	cpfslt	indf2,c
 36389  000A26  D040               	goto	l1742
 36390                           
 36391                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 36392                           ;stkvar	_c @ sp[(0)+-3]
 36393                           ;stkvar	__this @ sp[(0)+-2]
 36394  000A28  0EFE               	movlw	-2
 36395  000A2A  006F FF8C  F034    	movff	plusw1,btemp+10
 36396  000A30  0EFF               	movlw	-1
 36397  000A32  006F FF8C  F035    	movff	plusw1,btemp+11
 36398  000A38  0E40               	movlw	64
 36399  000A3A  2434               	addwf	(btemp+10)^0,w,c
 36400  000A3C  6ED9               	movwf	fsr2l,c
 36401  000A3E  0E00               	movlw	0
 36402  000A40  2035               	addwfc	(btemp+11)^0,w,c
 36403  000A42  6EDA               	movwf	fsr2h,c
 36404  000A44  50DF               	movf	indf2,w,c
 36405  000A46  6E35               	movwf	(btemp+11)^0,c
 36406                           
 36407                           ;stkvar	__this @ sp[(0)+-2]
 36408  000A48  0EFE               	movlw	-2
 36409  000A4A  006F FF8C  F032    	movff	plusw1,btemp+8
 36410  000A50  0EFF               	movlw	-1
 36411  000A52  006F FF8C  F033    	movff	plusw1,btemp+9
 36412  000A58  5035               	movf	(btemp+11)^0,w,c
 36413  000A5A  2432               	addwf	(btemp+8)^0,w,c
 36414  000A5C  6ED9               	movwf	fsr2l,c
 36415  000A5E  0E00               	movlw	0
 36416  000A60  2033               	addwfc	(btemp+9)^0,w,c
 36417  000A62  6EDA               	movwf	fsr2h,c
 36418  000A64  0EFD               	movlw	-3
 36419  000A66  006F FF8F FFDF     	movff	plusw1,indf2
 36420                           
 36421                           ;ringbufs.c: 71:   ++_this->head;
 36422                           ;stkvar	__this @ sp[(0)+-2]
 36423  000A6C  0EFE               	movlw	-2
 36424  000A6E  006F FF8C  F034    	movff	plusw1,btemp+10
 36425  000A74  0EFF               	movlw	-1
 36426  000A76  006F FF8C  F035    	movff	plusw1,btemp+11
 36427  000A7C  0E40               	movlw	64
 36428  000A7E  2434               	addwf	(btemp+10)^0,w,c
 36429  000A80  6ED9               	movwf	fsr2l,c
 36430  000A82  0E00               	movlw	0
 36431  000A84  2035               	addwfc	(btemp+11)^0,w,c
 36432  000A86  6EDA               	movwf	fsr2h,c
 36433  000A88  2ADF               	incf	indf2,f,c
 36434                           
 36435                           ;ringbufs.c: 72:   ++_this->count;
 36436                           ;stkvar	__this @ sp[(0)+-2]
 36437  000A8A  0EFE               	movlw	-2
 36438  000A8C  006F FF8C  F034    	movff	plusw1,btemp+10
 36439  000A92  0EFF               	movlw	-1
 36440  000A94  006F FF8C  F035    	movff	plusw1,btemp+11
 36441  000A9A  0E42               	movlw	66
 36442  000A9C  2434               	addwf	(btemp+10)^0,w,c
 36443  000A9E  6ED9               	movwf	fsr2l,c
 36444  000AA0  0E00               	movlw	0
 36445  000AA2  2035               	addwfc	(btemp+11)^0,w,c
 36446  000AA4  6EDA               	movwf	fsr2h,c
 36447  000AA6  2ADF               	incf	indf2,f,c
 36448  000AA8                     l1742:
 36449                           
 36450                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 36451  000AA8  52E5               	movf	postdec1,f,c
 36452  000AAA  52E5               	movf	postdec1,f,c
 36453  000AAC  52E5               	movf	postdec1,f,c
 36454  000AAE  0012               	return		;funcret
 36455  000AB0                     __end_of_ringBufS_put_dma:
 36456                           	opt callstack 0
 36457                           
 36458 ;; *************** function _atoi *****************
 36459 ;; Defined at:
 36460 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 36461 ;; Parameters:    Size  Location     Type
 36462 ;;  s               2  [STACK] PTR const unsigned char 
 36463 ;;		 -> STR_95(127), STR_93(3), STR_92(3), STR_91(21), 
 36464 ;;		 -> STR_90(21), STR_89(21), STR_88(21), STR_87(21), 
 36465 ;;		 -> STR_86(21), STR_85(26), STR_84(15), STR_83(15), 
 36466 ;;		 -> STR_82(15), STR_81(15), STR_80(10), STR_79(10), 
 36467 ;;		 -> STR_78(19), STR_77(19), STR_74(3), STR_73(14), 
 36468 ;;		 -> STR_72(28), STR_71(28), STR_70(28), STR_69(22), 
 36469 ;;		 -> STR_68(22), STR_67(22), STR_66(22), STR_65(22), 
 36470 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 36471 ;;		 -> STR_60(21), STR_59(22), STR_58(22), STR_57(22), 
 36472 ;;		 -> STR_56(22), STR_55(22), STR_54(22), STR_53(24), 
 36473 ;;		 -> STR_52(24), STR_51(24), STR_50(30), STR_49(24), 
 36474 ;;		 -> STR_48(24), STR_47(23), STR_46(23), STR_45(23), 
 36475 ;;		 -> STR_44(23), STR_43(23), STR_42(23), STR_41(23), 
 36476 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 36477 ;;		 -> STR_36(23), STR_35(18), STR_34(17), STR_33(17), 
 36478 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(14), 
 36479 ;;		 -> STR_28(14), STR_27(27), STR_26(27), STR_25(23), 
 36480 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(22), 
 36481 ;;		 -> STR_20(23), STR_19(23), STR_18(23), STR_17(26), 
 36482 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 36483 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
 36484 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 36485 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 36486 ;; Auto vars:     Size  Location     Type
 36487 ;;  n               2  [STACK] int 
 36488 ;;  neg             2  [STACK] int 
 36489 ;; Return value:  Size  Location     Type
 36490 ;;                  2  [STACK] int 
 36491 ;; Registers used:
 36492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 36493 ;; Tracked objects:
 36494 ;;		On entry : 0/0
 36495 ;;		On exit  : 0/0
 36496 ;;		Unchanged: 0/0
 36497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36502 ;;Total ram usage:        0 bytes
 36503 ;; Hardware stack levels used:    1
 36504 ;; Hardware stack levels required when called:   16
 36505 ;; This function calls:
 36506 ;;		_isdigit
 36507 ;;		_isspace
 36508 ;; This function is called by:
 36509 ;;		_vfpfcnvrt
 36510 ;; This function uses a reentrant model
 36511 ;;
 36512                           
 36513                           	psect	text125
 36514  01C492                     __ptext125:
 36515                           	opt callstack 0
 36516  01C492                     _atoi:
 36517                           	opt callstack 0
 36518                           
 36519                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36520  01C492  0E09               	movlw	9
 36521  01C494  26E1               	addwf	fsr1l,f,c
 36522  01C496  0E00               	movlw	0
 36523  01C498  22E2               	addwfc	fsr1h,f,c
 36524                           
 36525                           ;stkvar	_n @ sp[(-9)+5]
 36526                           
 36527                           ;incstack = 0
 36528 ;; hardware stack exceeded
 36529  01C49A  0EFC               	movlw	-4
 36530  01C49C  6AE3               	clrf	plusw1,c
 36531  01C49E  0EFD               	movlw	-3
 36532  01C4A0  6AE3               	clrf	plusw1,c
 36533                           
 36534                           ;stkvar	_neg @ sp[(-9)+7]
 36535  01C4A2  0EFE               	movlw	-2
 36536  01C4A4  6AE3               	clrf	plusw1,c
 36537  01C4A6  0EFF               	movlw	-1
 36538  01C4A8  6AE3               	clrf	plusw1,c
 36539  01C4AA  D011               	goto	l11450
 36540  01C4AC                     l11448:
 36541                           
 36542                           ;stkvar	_s @ sp[(-9)+-2]
 36543  01C4AC  0EF5               	movlw	-11
 36544  01C4AE  50E3               	movf	plusw1,w,c
 36545  01C4B0  0F01               	addlw	1
 36546  01C4B2  6E2A               	movwf	btemp^0,c
 36547  01C4B4  0EF5               	movlw	-11
 36548  01C4B6  0060  F0AB  FFE3   	movff	btemp,plusw1
 36549  01C4BC  6A2A               	clrf	btemp^0,c
 36550  01C4BE  0EF6               	movlw	-10
 36551  01C4C0  50E3               	movf	plusw1,w,c
 36552  01C4C2  202A               	addwfc	btemp^0,w,c
 36553  01C4C4  6E2A               	movwf	btemp^0,c
 36554  01C4C6  0EF6               	movlw	-10
 36555  01C4C8  0060  F0AB  FFE3   	movff	btemp,plusw1
 36556  01C4CE                     l11450:
 36557                           
 36558                           ;stkvar	_atoi$7209 @ sp[(-9)+4]
 36559  01C4CE  0EFB               	movlw	-5
 36560  01C4D0  6AE3               	clrf	plusw1,c
 36561  01C4D2  2AE3               	incf	plusw1,f,c
 36562                           
 36563                           ;stkvar	_s @ sp[(-9)+-2]
 36564  01C4D4  50E1               	movf	fsr1l,w,c
 36565  01C4D6  0FF5               	addlw	-11
 36566  01C4D8  6ED9               	movwf	fsr2l,c
 36567  01C4DA  50E2               	movf	fsr1h,w,c
 36568  01C4DC  6EDA               	movwf	fsr2h,c
 36569  01C4DE  0EFF               	movlw	255
 36570  01C4E0  22DA               	addwfc	fsr2h,f,c
 36571  01C4E2  006F FF7B FFF6     	movff	postinc2,tblptrl
 36572  01C4E8  006F FF77 FFF7     	movff	postdec2,tblptrh
 36573  01C4EE                     	if	0	;tblptru may be non-zero
 36574  01C4EE                     	endif
 36575  01C4EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36576  01C4EE  0E00               	movlw	low (__mediumconst shr (0+16))
 36577  01C4F0  6EF8               	movwf	tblptru,c
 36578  01C4F2                     	endif
 36579  01C4F2  0008               	tblrd		*
 36580  01C4F4  50F5               	movf	tablat,w,c
 36581  01C4F6  0A20               	xorlw	32
 36582  01C4F8  B4D8               	btfsc	status,2,c
 36583  01C4FA  D023               	goto	l11458
 36584  01C4FC  0EF7               	movlw	247
 36585  01C4FE  6E34               	movwf	(btemp+10)^0,c
 36586  01C500  0EFF               	movlw	255
 36587  01C502  6E35               	movwf	(btemp+11)^0,c
 36588                           
 36589                           ;stkvar	_s @ sp[(-9)+-2]
 36590  01C504  50E1               	movf	fsr1l,w,c
 36591  01C506  0FF5               	addlw	-11
 36592  01C508  6ED9               	movwf	fsr2l,c
 36593  01C50A  50E2               	movf	fsr1h,w,c
 36594  01C50C  6EDA               	movwf	fsr2h,c
 36595  01C50E  0EFF               	movlw	255
 36596  01C510  22DA               	addwfc	fsr2h,f,c
 36597  01C512  006F FF7B FFF6     	movff	postinc2,tblptrl
 36598  01C518  006F FF77 FFF7     	movff	postdec2,tblptrh
 36599  01C51E                     	if	0	;tblptru may be non-zero
 36600  01C51E                     	endif
 36601  01C51E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36602  01C51E  0E00               	movlw	low (__mediumconst shr (0+16))
 36603  01C520  6EF8               	movwf	tblptru,c
 36604  01C522                     	endif
 36605  01C522  0008               	tblrd		*
 36606  01C524  50F5               	movf	tablat,w,c
 36607  01C526  6E32               	movwf	(btemp+8)^0,c
 36608  01C528  6A33               	clrf	(btemp+9)^0,c
 36609  01C52A  5034               	movf	(btemp+10)^0,w,c
 36610  01C52C  2632               	addwf	(btemp+8)^0,f,c
 36611  01C52E  5035               	movf	(btemp+11)^0,w,c
 36612  01C530  2233               	addwfc	(btemp+9)^0,f,c
 36613  01C532  5033               	movf	(btemp+9)^0,w,c
 36614  01C534  E104               	bnz	u10380
 36615  01C536  0E05               	movlw	5
 36616  01C538  5C32               	subwf	(btemp+8)^0,w,c
 36617  01C53A  A0D8               	btfss	status,0,c
 36618  01C53C  D002               	goto	l11458
 36619  01C53E                     u10380:
 36620                           
 36621                           ;stkvar	_atoi$7209 @ sp[(-9)+4]
 36622  01C53E  0EFB               	movlw	-5
 36623  01C540  6AE3               	clrf	plusw1,c
 36624  01C542                     l11458:
 36625                           
 36626                           ;stkvar	_atoi$7209 @ sp[(-9)+4]
 36627  01C542  0EFB               	movlw	-5
 36628  01C544  50E3               	movf	plusw1,w,c
 36629  01C546  6E34               	movwf	(btemp+10)^0,c
 36630  01C548  6A35               	clrf	(btemp+11)^0,c
 36631                           
 36632                           ;stkvar	_atoi$7208 @ sp[(-9)+2]
 36633  01C54A  0EF9               	movlw	-7
 36634  01C54C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36635  01C552  0EFA               	movlw	-6
 36636  01C554  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36637                           
 36638                           ;stkvar	_atoi$7208 @ sp[(-9)+2]
 36639  01C55A  0EF9               	movlw	-7
 36640  01C55C  006F FF8C  F02A    	movff	plusw1,btemp
 36641  01C562  0EFA               	movlw	-6
 36642  01C564  50E3               	movf	plusw1,w,c
 36643  01C566  102A               	iorwf	btemp^0,w,c
 36644  01C568  B4D8               	btfsc	status,2,c
 36645  01C56A  D01F               	goto	l11468
 36646  01C56C  D79F               	goto	l11448
 36647  01C56E                     l11464:
 36648  01C56E  0E01               	movlw	1
 36649  01C570  6E34               	movwf	(btemp+10)^0,c
 36650  01C572  0E00               	movlw	0
 36651  01C574  6E35               	movwf	(btemp+11)^0,c
 36652                           
 36653                           ;stkvar	_neg @ sp[(-9)+7]
 36654  01C576  0EFE               	movlw	-2
 36655  01C578  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36656  01C57E  0EFF               	movlw	-1
 36657  01C580  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36658  01C586                     l11466:
 36659                           
 36660                           ;stkvar	_s @ sp[(-9)+-2]
 36661  01C586  0EF5               	movlw	-11
 36662  01C588  50E3               	movf	plusw1,w,c
 36663  01C58A  0F01               	addlw	1
 36664  01C58C  6E2A               	movwf	btemp^0,c
 36665  01C58E  0EF5               	movlw	-11
 36666  01C590  0060  F0AB  FFE3   	movff	btemp,plusw1
 36667  01C596  6A2A               	clrf	btemp^0,c
 36668  01C598  0EF6               	movlw	-10
 36669  01C59A  50E3               	movf	plusw1,w,c
 36670  01C59C  202A               	addwfc	btemp^0,w,c
 36671  01C59E  6E2A               	movwf	btemp^0,c
 36672  01C5A0  0EF6               	movlw	-10
 36673  01C5A2  0060  F0AB  FFE3   	movff	btemp,plusw1
 36674  01C5A8  D053               	goto	l11474
 36675  01C5AA                     l11468:
 36676                           
 36677                           ;stkvar	_s @ sp[(-9)+-2]
 36678  01C5AA  50E1               	movf	fsr1l,w,c
 36679  01C5AC  0FF5               	addlw	-11
 36680  01C5AE  6ED9               	movwf	fsr2l,c
 36681  01C5B0  50E2               	movf	fsr1h,w,c
 36682  01C5B2  6EDA               	movwf	fsr2h,c
 36683  01C5B4  0EFF               	movlw	255
 36684  01C5B6  22DA               	addwfc	fsr2h,f,c
 36685  01C5B8  006F FF7B FFF6     	movff	postinc2,tblptrl
 36686  01C5BE  006F FF77 FFF7     	movff	postdec2,tblptrh
 36687  01C5C4                     	if	0	;tblptru may be non-zero
 36688  01C5C4                     	endif
 36689  01C5C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36690  01C5C4  0E00               	movlw	low (__mediumconst shr (0+16))
 36691  01C5C6  6EF8               	movwf	tblptru,c
 36692  01C5C8                     	endif
 36693  01C5C8  0008               	tblrd		*
 36694  01C5CA  50F5               	movf	tablat,w,c
 36695  01C5CC  6E34               	movwf	(btemp+10)^0,c
 36696  01C5CE  6A35               	clrf	(btemp+11)^0,c
 36697                           
 36698                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36699                           ; Switch size 1, requested type "simple"
 36700                           ; Number of cases is 1, Range of values is 0 to 0
 36701                           ; switch strategies available:
 36702                           ; Name         Instructions Cycles
 36703                           ; simple_byte            4     3 (average)
 36704                           ;	Chosen strategy is simple_byte
 36705  01C5D0  5035               	movf	(btemp+11)^0,w,c
 36706  01C5D2  0A00               	xorlw	0	; case 0
 36707  01C5D4  A4D8               	btfss	status,2,c
 36708  01C5D6  D03C               	goto	l11474
 36709                           
 36710                           ; Switch size 1, requested type "simple"
 36711                           ; Number of cases is 2, Range of values is 43 to 45
 36712                           ; switch strategies available:
 36713                           ; Name         Instructions Cycles
 36714                           ; simple_byte            7     4 (average)
 36715                           ;	Chosen strategy is simple_byte
 36716  01C5D8  5034               	movf	(btemp+10)^0,w,c
 36717  01C5DA  0A2B               	xorlw	43	; case 43
 36718  01C5DC  B4D8               	btfsc	status,2,c
 36719  01C5DE  D7D3               	goto	l11466
 36720  01C5E0  0A06               	xorlw	6	; case 45
 36721  01C5E2  B4D8               	btfsc	status,2,c
 36722  01C5E4  D7C4               	goto	l11464
 36723  01C5E6  D034               	goto	l11474
 36724  01C5E8                     l11470:
 36725                           
 36726                           ;stkvar	_n @ sp[(-9)+5]
 36727  01C5E8  0EFC               	movlw	-4
 36728  01C5EA  006F FF8C  F034    	movff	plusw1,btemp+10
 36729  01C5F0  0EFD               	movlw	-3
 36730  01C5F2  006F FF8C  F035    	movff	plusw1,btemp+11
 36731  01C5F8  0E0A               	movlw	10
 36732  01C5FA  0234               	mulwf	(btemp+10)^0,c
 36733  01C5FC  006F FFCC  F032    	movff	prodl,btemp+8
 36734  01C602  006F FFD0  F033    	movff	prodh,btemp+9
 36735  01C608  0235               	mulwf	(btemp+11)^0,c
 36736  01C60A  50F3               	movf	prodl,w,c
 36737  01C60C  2633               	addwf	(btemp+9)^0,f,c
 36738                           
 36739                           ;stkvar	_s @ sp[(-9)+-2]
 36740  01C60E  50E1               	movf	fsr1l,w,c
 36741  01C610  0FF5               	addlw	-11
 36742  01C612  6ED9               	movwf	fsr2l,c
 36743  01C614  50E2               	movf	fsr1h,w,c
 36744  01C616  6EDA               	movwf	fsr2h,c
 36745  01C618  0EFF               	movlw	255
 36746  01C61A  22DA               	addwfc	fsr2h,f,c
 36747  01C61C  006F FF7B FFF6     	movff	postinc2,tblptrl
 36748  01C622  006F FF77 FFF7     	movff	postdec2,tblptrh
 36749  01C628                     	if	0	;tblptru may be non-zero
 36750  01C628                     	endif
 36751  01C628                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36752  01C628  0E00               	movlw	low (__mediumconst shr (0+16))
 36753  01C62A  6EF8               	movwf	tblptru,c
 36754  01C62C                     	endif
 36755  01C62C  0008               	tblrd		*
 36756  01C62E  50F5               	movf	tablat,w,c
 36757  01C630  5E32               	subwf	(btemp+8)^0,f,c
 36758  01C632  0E00               	movlw	0
 36759  01C634  5A33               	subwfb	(btemp+9)^0,f,c
 36760  01C636  0E30               	movlw	48
 36761  01C638  2632               	addwf	(btemp+8)^0,f,c
 36762  01C63A  0E00               	movlw	0
 36763  01C63C  2233               	addwfc	(btemp+9)^0,f,c
 36764                           
 36765                           ;stkvar	_n @ sp[(-9)+5]
 36766  01C63E  0EFC               	movlw	-4
 36767  01C640  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 36768  01C646  0EFD               	movlw	-3
 36769  01C648  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 36770  01C64E  D79B               	goto	l11466
 36771  01C650                     l11474:
 36772  01C650  0ED0               	movlw	208
 36773  01C652  6E34               	movwf	(btemp+10)^0,c
 36774  01C654  0EFF               	movlw	255
 36775  01C656  6E35               	movwf	(btemp+11)^0,c
 36776                           
 36777                           ;stkvar	_s @ sp[(-9)+-2]
 36778  01C658  50E1               	movf	fsr1l,w,c
 36779  01C65A  0FF5               	addlw	-11
 36780  01C65C  6ED9               	movwf	fsr2l,c
 36781  01C65E  50E2               	movf	fsr1h,w,c
 36782  01C660  6EDA               	movwf	fsr2h,c
 36783  01C662  0EFF               	movlw	255
 36784  01C664  22DA               	addwfc	fsr2h,f,c
 36785  01C666  006F FF7B FFF6     	movff	postinc2,tblptrl
 36786  01C66C  006F FF77 FFF7     	movff	postdec2,tblptrh
 36787  01C672                     	if	0	;tblptru may be non-zero
 36788  01C672                     	endif
 36789  01C672                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36790  01C672  0E00               	movlw	low (__mediumconst shr (0+16))
 36791  01C674  6EF8               	movwf	tblptru,c
 36792  01C676                     	endif
 36793  01C676  0008               	tblrd		*
 36794  01C678  50F5               	movf	tablat,w,c
 36795  01C67A  6E32               	movwf	(btemp+8)^0,c
 36796  01C67C  6A33               	clrf	(btemp+9)^0,c
 36797  01C67E  5034               	movf	(btemp+10)^0,w,c
 36798  01C680  2632               	addwf	(btemp+8)^0,f,c
 36799  01C682  5035               	movf	(btemp+11)^0,w,c
 36800  01C684  2233               	addwfc	(btemp+9)^0,f,c
 36801  01C686  5033               	movf	(btemp+9)^0,w,c
 36802  01C688  E106               	bnz	u10400
 36803  01C68A  0E0A               	movlw	10
 36804  01C68C  5C32               	subwf	(btemp+8)^0,w,c
 36805  01C68E  B0D8               	btfsc	status,0,c
 36806  01C690  D002               	goto	u10400
 36807  01C692  0E01               	movlw	1
 36808  01C694  D001               	goto	u10410
 36809  01C696                     u10400:
 36810  01C696  0E00               	movlw	0
 36811  01C698                     u10410:
 36812  01C698  6E34               	movwf	(btemp+10)^0,c
 36813  01C69A  6A35               	clrf	(btemp+11)^0,c
 36814                           
 36815                           ;stkvar	_atoi$7210 @ sp[(-9)+0]
 36816  01C69C  0EF7               	movlw	-9
 36817  01C69E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36818  01C6A4  0EF8               	movlw	-8
 36819  01C6A6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36820                           
 36821                           ;stkvar	_atoi$7210 @ sp[(-9)+0]
 36822  01C6AC  0EF7               	movlw	-9
 36823  01C6AE  006F FF8C  F02A    	movff	plusw1,btemp
 36824  01C6B4  0EF8               	movlw	-8
 36825  01C6B6  50E3               	movf	plusw1,w,c
 36826  01C6B8  102A               	iorwf	btemp^0,w,c
 36827  01C6BA  A4D8               	btfss	status,2,c
 36828  01C6BC  D795               	goto	l11470
 36829                           
 36830                           ;stkvar	_neg @ sp[(-9)+7]
 36831  01C6BE  0EFE               	movlw	-2
 36832  01C6C0  006F FF8C  F02A    	movff	plusw1,btemp
 36833  01C6C6  0EFF               	movlw	-1
 36834  01C6C8  50E3               	movf	plusw1,w,c
 36835  01C6CA  102A               	iorwf	btemp^0,w,c
 36836  01C6CC  A4D8               	btfss	status,2,c
 36837  01C6CE  D00E               	goto	l11484
 36838                           
 36839                           ;stkvar	_n @ sp[(-9)+5]
 36840  01C6D0  0EFC               	movlw	-4
 36841  01C6D2  006F FF8C  F02A    	movff	plusw1,btemp
 36842  01C6D8  1E2A               	comf	btemp^0,f,c
 36843  01C6DA  0EFD               	movlw	-3
 36844  01C6DC  006F FF8C  F02B    	movff	plusw1,btemp+1
 36845  01C6E2  1E2B               	comf	(btemp+1)^0,f,c
 36846  01C6E4  2A2A               	incf	btemp^0,f,c
 36847  01C6E6  B4D8               	btfsc	status,2,c
 36848  01C6E8  2A2B               	incf	(btemp+1)^0,f,c
 36849  01C6EA  D008               	goto	l3454
 36850  01C6EC                     l11484:
 36851                           
 36852                           ;stkvar	_n @ sp[(-9)+5]
 36853  01C6EC  0EFC               	movlw	-4
 36854  01C6EE  006F FF8C  F02A    	movff	plusw1,btemp
 36855  01C6F4  0EFD               	movlw	-3
 36856  01C6F6  006F FF8C  F02B    	movff	plusw1,btemp+1
 36857  01C6FC                     l3454:
 36858                           
 36859                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 36860  01C6FC  0EF5               	movlw	245
 36861  01C6FE  26E1               	addwf	fsr1l,f,c
 36862  01C700  0EFF               	movlw	255
 36863  01C702  22E2               	addwfc	fsr1h,f,c
 36864  01C704  0012               	return		;funcret
 36865  01C706                     __end_of_atoi:
 36866                           	opt callstack 0
 36867                           
 36868 ;; *************** function _isspace *****************
 36869 ;; Defined at:
 36870 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 36871 ;; Parameters:    Size  Location     Type
 36872 ;;  c               2  [STACK] int 
 36873 ;; Auto vars:     Size  Location     Type
 36874 ;;		None
 36875 ;; Return value:  Size  Location     Type
 36876 ;;                  2  [STACK] int 
 36877 ;; Registers used:
 36878 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 36879 ;; Tracked objects:
 36880 ;;		On entry : 0/0
 36881 ;;		On exit  : 0/0
 36882 ;;		Unchanged: 0/0
 36883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36888 ;;Total ram usage:        0 bytes
 36889 ;; Hardware stack levels used:    1
 36890 ;; Hardware stack levels required when called:   15
 36891 ;; This function calls:
 36892 ;;		Nothing
 36893 ;; This function is called by:
 36894 ;;		_atoi
 36895 ;; This function uses a reentrant model
 36896 ;;
 36897                           
 36898                           	psect	text126
 36899  001B3C                     __ptext126:
 36900                           	opt callstack 0
 36901  001B3C                     _isspace:
 36902                           	opt callstack 0
 36903                           
 36904                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36905  001B3C  52E6               	movf	postinc1,f,c
 36906                           
 36907                           ;stkvar	_isspace$7259 @ sp[(-1)+0]
 36908                           
 36909                           ;incstack = 0
 36910 ;; hardware stack exceeded
 36911  001B3E  0EFF               	movlw	-1
 36912  001B40  6AE3               	clrf	plusw1,c
 36913  001B42  2AE3               	incf	plusw1,f,c
 36914                           
 36915                           ;stkvar	_c @ sp[(-1)+-2]
 36916  001B44  0EFD               	movlw	-3
 36917  001B46  006F FF8C  F02A    	movff	plusw1,btemp
 36918  001B4C  0E20               	movlw	32
 36919  001B4E  182A               	xorwf	btemp^0,w,c
 36920  001B50  E104               	bnz	u9230
 36921  001B52  0EFE               	movlw	-2
 36922  001B54  50E3               	movf	plusw1,w,c
 36923  001B56  B4D8               	btfsc	status,2,c
 36924  001B58  D012               	goto	l10850
 36925  001B5A                     u9230:
 36926                           
 36927                           ;stkvar	_c @ sp[(-1)+-2]
 36928  001B5A  0EFD               	movlw	-3
 36929  001B5C  50E3               	movf	plusw1,w,c
 36930  001B5E  0FF7               	addlw	247
 36931  001B60  6E34               	movwf	(btemp+10)^0,c
 36932  001B62  0EFE               	movlw	-2
 36933  001B64  006F FF8C  F035    	movff	plusw1,btemp+11
 36934  001B6A  0EFF               	movlw	255
 36935  001B6C  2235               	addwfc	(btemp+11)^0,f,c
 36936  001B6E  5035               	movf	(btemp+11)^0,w,c
 36937  001B70  E104               	bnz	u9240
 36938  001B72  0E05               	movlw	5
 36939  001B74  5C34               	subwf	(btemp+10)^0,w,c
 36940  001B76  A0D8               	btfss	status,0,c
 36941  001B78  D002               	goto	l10850
 36942  001B7A                     u9240:
 36943                           
 36944                           ;stkvar	_isspace$7259 @ sp[(-1)+0]
 36945  001B7A  0EFF               	movlw	-1
 36946  001B7C  6AE3               	clrf	plusw1,c
 36947  001B7E                     l10850:
 36948                           
 36949                           ;stkvar	_isspace$7259 @ sp[(-1)+0]
 36950  001B7E  0EFF               	movlw	-1
 36951  001B80  50E3               	movf	plusw1,w,c
 36952  001B82  6E2A               	movwf	btemp^0,c
 36953  001B84  6A2B               	clrf	(btemp+1)^0,c
 36954                           
 36955                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 36956  001B86  52E5               	movf	postdec1,f,c
 36957  001B88  52E5               	movf	postdec1,f,c
 36958  001B8A  52E5               	movf	postdec1,f,c
 36959  001B8C  0012               	return		;funcret
 36960  001B8E                     __end_of_isspace:
 36961                           	opt callstack 0
 36962                           
 36963 ;; *************** function _isdigit *****************
 36964 ;; Defined at:
 36965 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 36966 ;; Parameters:    Size  Location     Type
 36967 ;;  c               2  [STACK] int 
 36968 ;; Auto vars:     Size  Location     Type
 36969 ;;		None
 36970 ;; Return value:  Size  Location     Type
 36971 ;;                  2  [STACK] int 
 36972 ;; Registers used:
 36973 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 36974 ;; Tracked objects:
 36975 ;;		On entry : 0/0
 36976 ;;		On exit  : 0/0
 36977 ;;		Unchanged: 0/0
 36978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36983 ;;Total ram usage:        0 bytes
 36984 ;; Hardware stack levels used:    1
 36985 ;; Hardware stack levels required when called:   15
 36986 ;; This function calls:
 36987 ;;		Nothing
 36988 ;; This function is called by:
 36989 ;;		_vfpfcnvrt
 36990 ;;		_atoi
 36991 ;; This function uses a reentrant model
 36992 ;;
 36993                           
 36994                           	psect	text127
 36995  00231A                     __ptext127:
 36996                           	opt callstack 0
 36997  00231A                     _isdigit:
 36998                           	opt callstack 0
 36999                           
 37000                           ;stkvar	_c @ sp[(0)+-2]
 37001                           
 37002                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37003                           ;incstack = 0
 37004 ;; hardware stack exceeded
 37005  00231A  0EFE               	movlw	-2
 37006  00231C  50E3               	movf	plusw1,w,c
 37007  00231E  0FD0               	addlw	208
 37008  002320  6E34               	movwf	(btemp+10)^0,c
 37009  002322  0EFF               	movlw	-1
 37010  002324  006F FF8C  F035    	movff	plusw1,btemp+11
 37011  00232A  0EFF               	movlw	255
 37012  00232C  2235               	addwfc	(btemp+11)^0,f,c
 37013  00232E  5035               	movf	(btemp+11)^0,w,c
 37014  002330  E106               	bnz	u8020
 37015  002332  0E0A               	movlw	10
 37016  002334  5C34               	subwf	(btemp+10)^0,w,c
 37017  002336  B0D8               	btfsc	status,0,c
 37018  002338  D002               	goto	u8020
 37019  00233A  0E01               	movlw	1
 37020  00233C  D001               	goto	u8030
 37021  00233E                     u8020:
 37022  00233E  0E00               	movlw	0
 37023  002340                     u8030:
 37024  002340  6E2A               	movwf	btemp^0,c
 37025  002342  6A2B               	clrf	(btemp+1)^0,c
 37026                           
 37027                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 37028  002344  52E5               	movf	postdec1,f,c
 37029  002346  52E5               	movf	postdec1,f,c
 37030  002348  0012               	return		;funcret
 37031  00234A                     __end_of_isdigit:
 37032                           	opt callstack 0
 37033                           
 37034 ;; *************** function _set_vterm *****************
 37035 ;; Defined at:
 37036 ;;		line 110 in file "mconfig.c"
 37037 ;; Parameters:    Size  Location     Type
 37038 ;;  vterm           1  [STACK] const unsigned char 
 37039 ;; Auto vars:     Size  Location     Type
 37040 ;;		None
 37041 ;; Return value:  Size  Location     Type
 37042 ;;                  1  [STACK] unsigned char 
 37043 ;; Registers used:
 37044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 37045 ;; Tracked objects:
 37046 ;;		On entry : 0/2
 37047 ;;		On exit  : 0/0
 37048 ;;		Unchanged: 0/0
 37049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37054 ;;Total ram usage:        0 bytes
 37055 ;; Hardware stack levels used:    1
 37056 ;; Hardware stack levels required when called:   15
 37057 ;; This function calls:
 37058 ;;		Nothing
 37059 ;; This function is called by:
 37060 ;;		_main
 37061 ;;		_check_help
 37062 ;; This function uses a reentrant model
 37063 ;;
 37064                           
 37065                           	psect	text128
 37066  00283A                     __ptext128:
 37067                           	opt callstack 0
 37068  00283A                     _set_vterm:
 37069                           	opt callstack 15
 37070                           
 37071                           ;mconfig.c: 110: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 111: {;mconfig.c: 112
      +                          :  D.vterm = vterm & 0x03;
 37072                           ;stkvar	_vterm @ sp[(0)+-1]
 37073                           
 37074                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37075                           ;incstack = 0
 37076  00283A  0EFF               	movlw	-1
 37077  00283C  006F FF8C  F035    	movff	plusw1,btemp+11
 37078  002842  0E03               	movlw	3
 37079  002844  1635               	andwf	(btemp+11)^0,f,c
 37080  002846  EE23  F0BF         	lfsr	2,_D+640
 37081  00284A  50DF               	movf	223,w,c
 37082  00284C  1835               	xorwf	(btemp+11)^0,w,c
 37083  00284E  0BFE               	andlw	-2
 37084  002850  1835               	xorwf	(btemp+11)^0,w,c
 37085  002852  6EDF               	movwf	223,c
 37086                           
 37087                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 37088  002854  52E5               	movf	postdec1,f,c
 37089  002856  0012               	return		;funcret
 37090  002858                     __end_of_set_vterm:
 37091                           	opt callstack 0
 37092                           
 37093 ;; *************** function _set_temp_display_help *****************
 37094 ;; Defined at:
 37095 ;;		line 217 in file "mconfig.c"
 37096 ;; Parameters:    Size  Location     Type
 37097 ;;  new_response    1  [STACK] const enum E16677
 37098 ;; Auto vars:     Size  Location     Type
 37099 ;;		None
 37100 ;; Return value:  Size  Location     Type
 37101 ;;                  1  [STACK] enum E16677
 37102 ;; Registers used:
 37103 ;;		wreg, fsr1l, fsr1h
 37104 ;; Tracked objects:
 37105 ;;		On entry : 0/2
 37106 ;;		On exit  : 3F/2
 37107 ;;		Unchanged: 0/0
 37108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37113 ;;Total ram usage:        0 bytes
 37114 ;; Hardware stack levels used:    1
 37115 ;; Hardware stack levels required when called:   15
 37116 ;; This function calls:
 37117 ;;		Nothing
 37118 ;; This function is called by:
 37119 ;;		_check_help
 37120 ;; This function uses a reentrant model
 37121 ;;
 37122                           
 37123                           	psect	text129
 37124  00299A                     __ptext129:
 37125                           	opt callstack 0
 37126  00299A                     _set_temp_display_help:
 37127                           	opt callstack 14
 37128                           
 37129                           ;mconfig.c: 217: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 218: {;mconfig.c: 219:  static D_CODES old_info;;mconfig.c: 221:  old_info = V.respon
      +                          se.help_temp;
 37130                           
 37131                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37132                           ;incstack = 0
 37133  00299A  0102               	movlb	2	; () banked
 37134  00299C  51A9               	movf	(_V+162)& (0+255),w,b	;volatile
 37135                           
 37136                           ; BSR set to: 2
 37137                           ;mconfig.c: 222:  V.response.help_temp = new_response_info;
 37138                           ;stkvar	_new_response_info @ sp[(0)+-1]
 37139  00299E  0EFF               	movlw	-1
 37140  0029A0  006F FF8C  F2A9    	movff	plusw1,_V+162	;volatile
 37141                           
 37142                           ; BSR set to: 2
 37143                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 37144  0029A6  52E5               	movf	postdec1,f,c
 37145  0029A8  0012               	return		;funcret
 37146  0029AA                     __end_of_set_temp_display_help:
 37147                           	opt callstack 0
 37148                           
 37149 ;; *************** function _set_display_info *****************
 37150 ;; Defined at:
 37151 ;;		line 206 in file "mconfig.c"
 37152 ;; Parameters:    Size  Location     Type
 37153 ;;  new_response    1  [STACK] const enum E16677
 37154 ;; Auto vars:     Size  Location     Type
 37155 ;;		None
 37156 ;; Return value:  Size  Location     Type
 37157 ;;                  1  [STACK] enum E17160
 37158 ;; Registers used:
 37159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 37160 ;; Tracked objects:
 37161 ;;		On entry : 0/2
 37162 ;;		On exit  : 0/0
 37163 ;;		Unchanged: 0/0
 37164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37169 ;;Total ram usage:        0 bytes
 37170 ;; Hardware stack levels used:    1
 37171 ;; Hardware stack levels required when called:   16
 37172 ;; This function calls:
 37173 ;;		_TimerDone
 37174 ;; This function is called by:
 37175 ;;		_main
 37176 ;;		_check_help
 37177 ;; This function uses a reentrant model
 37178 ;;
 37179                           
 37180                           	psect	text130
 37181  002858                     __ptext130:
 37182                           	opt callstack 0
 37183  002858                     _set_display_info:
 37184                           	opt callstack 14
 37185                           
 37186                           ;mconfig.c: 206: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          7: {;mconfig.c: 208:  static D_CODES old_info = DIS_STR;;mconfig.c: 210:  if (TimerDone(
      +                          TMR_INFO)) {
 37187                           
 37188                           ; BSR set to: 2
 37189                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37190                           ;incstack = 0
 37191  002858  0E07               	movlw	7
 37192  00285A  6EE6               	movwf	postinc1,c
 37193  00285C  EC27  F012         	call	_TimerDone	;wreg free
 37194  002860  502A               	movf	btemp^0,w,c
 37195  002862  B4D8               	btfsc	status,2,c
 37196  002864  D006               	goto	l1877
 37197                           
 37198                           ;mconfig.c: 211:   old_info = V.response.info;
 37199  002866  0102               	movlb	2	; () banked
 37200  002868  51A8               	movf	(_V+161)& (0+255),w,b	;volatile
 37201                           
 37202                           ; BSR set to: 2
 37203                           ;mconfig.c: 212:   V.response.info = new_response_info;
 37204                           ;stkvar	_new_response_info @ sp[(0)+-1]
 37205  00286A  0EFF               	movlw	-1
 37206  00286C  006F FF8C  F2A8    	movff	plusw1,_V+161	;volatile
 37207  002872                     l1877:
 37208                           
 37209                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 37210  002872  52E5               	movf	postdec1,f,c
 37211  002874  0012               	return		;funcret
 37212  002876                     __end_of_set_display_info:
 37213                           	opt callstack 0
 37214                           
 37215 ;; *************** function _mode_lamp_dim *****************
 37216 ;; Defined at:
 37217 ;;		line 13 in file "mconfig.c"
 37218 ;; Parameters:    Size  Location     Type
 37219 ;;  level           2  [STACK] const unsigned short 
 37220 ;; Auto vars:     Size  Location     Type
 37221 ;;		None
 37222 ;; Return value:  Size  Location     Type
 37223 ;;                  1  [STACK] void 
 37224 ;; Registers used:
 37225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 37226 ;; Tracked objects:
 37227 ;;		On entry : 0/2
 37228 ;;		On exit  : 0/0
 37229 ;;		Unchanged: 0/0
 37230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37235 ;;Total ram usage:        0 bytes
 37236 ;; Hardware stack levels used:    1
 37237 ;; Hardware stack levels required when called:   16
 37238 ;; This function calls:
 37239 ;;		_PWM8_LoadDutyValue
 37240 ;; This function is called by:
 37241 ;;		_main
 37242 ;;		_check_help
 37243 ;; This function uses a reentrant model
 37244 ;;
 37245                           
 37246                           	psect	text131
 37247  0028AA                     __ptext131:
 37248                           	opt callstack 0
 37249  0028AA                     _mode_lamp_dim:
 37250                           	opt callstack 14
 37251                           
 37252                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 37253                           ;stkvar	_level @ sp[(0)+-2]
 37254                           
 37255                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37256                           ;incstack = 0
 37257  0028AA  0EFE               	movlw	-2
 37258  0028AC  006F FF8F FFE6     	movff	plusw1,postinc1
 37259  0028B2  006F FF8F FFE6     	movff	plusw1,postinc1
 37260  0028B8  EC59  F00F         	call	_PWM8_LoadDutyValue	;wreg free
 37261                           
 37262                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 37263  0028BC  52E5               	movf	postdec1,f,c
 37264  0028BE  52E5               	movf	postdec1,f,c
 37265  0028C0  0012               	return		;funcret
 37266  0028C2                     __end_of_mode_lamp_dim:
 37267                           	opt callstack 0
 37268                           
 37269 ;; *************** function _mode_lamp_bright *****************
 37270 ;; Defined at:
 37271 ;;		line 18 in file "mconfig.c"
 37272 ;; Parameters:    Size  Location     Type
 37273 ;;		None
 37274 ;; Auto vars:     Size  Location     Type
 37275 ;;		None
 37276 ;; Return value:  Size  Location     Type
 37277 ;;                  1  [STACK] void 
 37278 ;; Registers used:
 37279 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 37280 ;; Tracked objects:
 37281 ;;		On entry : 0/0
 37282 ;;		On exit  : 0/0
 37283 ;;		Unchanged: 0/0
 37284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37289 ;;Total ram usage:        0 bytes
 37290 ;; Hardware stack levels used:    1
 37291 ;; Hardware stack levels required when called:   16
 37292 ;; This function calls:
 37293 ;;		_PWM8_LoadDutyValue
 37294 ;; This function is called by:
 37295 ;;		_check_help
 37296 ;; This function uses a reentrant model
 37297 ;;
 37298                           
 37299                           	psect	text132
 37300  0029D6                     __ptext132:
 37301                           	opt callstack 0
 37302  0029D6                     _mode_lamp_bright:
 37303                           	opt callstack 13
 37304                           
 37305                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 37306                           
 37307                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37308                           ;incstack = 0
 37309  0029D6  0E2C               	movlw	44
 37310  0029D8  6EE6               	movwf	postinc1,c
 37311  0029DA  0E01               	movlw	1
 37312  0029DC  6EE6               	movwf	postinc1,c
 37313  0029DE  EC59  F00F         	call	_PWM8_LoadDutyValue	;wreg free
 37314                           
 37315                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 37316  0029E2  0012               	return		;funcret
 37317  0029E4                     __end_of_mode_lamp_bright:
 37318                           	opt callstack 0
 37319                           
 37320 ;; *************** function _PWM8_LoadDutyValue *****************
 37321 ;; Defined at:
 37322 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 37323 ;; Parameters:    Size  Location     Type
 37324 ;;  dutyValue       2  [STACK] unsigned short 
 37325 ;; Auto vars:     Size  Location     Type
 37326 ;;		None
 37327 ;; Return value:  Size  Location     Type
 37328 ;;                  1  [STACK] void 
 37329 ;; Registers used:
 37330 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 37331 ;; Tracked objects:
 37332 ;;		On entry : 0/2
 37333 ;;		On exit  : 0/0
 37334 ;;		Unchanged: 0/0
 37335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37340 ;;Total ram usage:        0 bytes
 37341 ;; Hardware stack levels used:    1
 37342 ;; Hardware stack levels required when called:   15
 37343 ;; This function calls:
 37344 ;;		Nothing
 37345 ;; This function is called by:
 37346 ;;		_mode_lamp_dim
 37347 ;;		_mode_lamp_bright
 37348 ;; This function uses a reentrant model
 37349 ;;
 37350                           
 37351                           	psect	text133
 37352  001EB2                     __ptext133:
 37353                           	opt callstack 0
 37354  001EB2                     _PWM8_LoadDutyValue:
 37355                           	opt callstack 14
 37356                           
 37357                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 37358                           ;stkvar	_dutyValue @ sp[(0)+-2]
 37359                           
 37360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37361                           ;incstack = 0
 37362  001EB2  0EFE               	movlw	-2
 37363  001EB4  006F FF8C  F034    	movff	plusw1,btemp+10
 37364  001EBA  0EFF               	movlw	-1
 37365  001EBC  006F FF8C  F035    	movff	plusw1,btemp+11
 37366  001EC2  90D8               	bcf	status,0,c
 37367  001EC4  3235               	rrcf	(btemp+11)^0,f,c
 37368  001EC6  3234               	rrcf	(btemp+10)^0,f,c
 37369  001EC8  90D8               	bcf	status,0,c
 37370  001ECA  3235               	rrcf	(btemp+11)^0,f,c
 37371  001ECC  3234               	rrcf	(btemp+10)^0,f,c
 37372  001ECE  5034               	movf	(btemp+10)^0,w,c
 37373  001ED0  6E61               	movwf	97,c	;volatile
 37374                           
 37375                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 37376                           ;stkvar	_dutyValue @ sp[(0)+-2]
 37377  001ED2  0EFE               	movlw	-2
 37378  001ED4  006F FF8C  F035    	movff	plusw1,btemp+11
 37379  001EDA  0E03               	movlw	3
 37380  001EDC  1635               	andwf	(btemp+11)^0,f,c
 37381  001EDE  0E06               	movlw	6
 37382  001EE0  6E2A               	movwf	btemp^0,c
 37383  001EE2                     u12225:
 37384  001EE2  90D8               	bcf	status,0,c
 37385  001EE4  3635               	rlcf	(btemp+11)^0,f,c
 37386  001EE6  2E2A               	decfsz	btemp^0,f,c
 37387  001EE8  D7FC               	goto	u12225
 37388  001EEA  5035               	movf	(btemp+11)^0,w,c
 37389  001EEC  6E60               	movwf	96,c	;volatile
 37390                           
 37391                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 37392  001EEE  52E5               	movf	postdec1,f,c
 37393  001EF0  52E5               	movf	postdec1,f,c
 37394  001EF2  0012               	return		;funcret
 37395  001EF4                     __end_of_PWM8_LoadDutyValue:
 37396                           	opt callstack 0
 37397                           
 37398 ;; *************** function _help_button *****************
 37399 ;; Defined at:
 37400 ;;		line 26 in file "mconfig.c"
 37401 ;; Parameters:    Size  Location     Type
 37402 ;;		None
 37403 ;; Auto vars:     Size  Location     Type
 37404 ;;		None
 37405 ;; Return value:  Size  Location     Type
 37406 ;;                  1  [STACK] _Bool 
 37407 ;; Registers used:
 37408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37409 ;; Tracked objects:
 37410 ;;		On entry : 0/2
 37411 ;;		On exit  : 0/0
 37412 ;;		Unchanged: 0/0
 37413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37418 ;;Total ram usage:        0 bytes
 37419 ;; Hardware stack levels used:    1
 37420 ;; Hardware stack levels required when called:   16
 37421 ;; This function calls:
 37422 ;;		_StartTimer
 37423 ;;		_TimerDone
 37424 ;; This function is called by:
 37425 ;;		_check_help
 37426 ;; This function uses a reentrant model
 37427 ;;
 37428                           
 37429                           	psect	text134
 37430  0020AC                     __ptext134:
 37431                           	opt callstack 0
 37432  0020AC                     _help_button:
 37433                           	opt callstack 13
 37434                           
 37435                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 37436                           
 37437                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37438                           ;incstack = 0
 37439  0020AC  B0CB               	btfsc	203,0,c	;volatile
 37440  0020AE  D00C               	goto	l1820
 37441                           
 37442                           ;mconfig.c: 29:   V.help = 1;
 37443  0020B0  0102               	movlb	2	; () banked
 37444  0020B2  859F               	bsf	(_V+152)& (0+255),2,b	;volatile
 37445                           
 37446                           ; BSR set to: 2
 37447                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 37448  0020B4  0E08               	movlw	8
 37449  0020B6  6EE6               	movwf	postinc1,c
 37450  0020B8  EC27  F012         	call	_TimerDone	;wreg free
 37451  0020BC  502A               	movf	btemp^0,w,c
 37452  0020BE  B4D8               	btfsc	status,2,c
 37453  0020C0  D003               	goto	l1820
 37454                           
 37455                           ;mconfig.c: 31:    return 1;
 37456  0020C2  0E01               	movlw	1
 37457  0020C4  6E2A               	movwf	btemp^0,c
 37458  0020C6  0012               	return	
 37459  0020C8                     l1820:
 37460                           
 37461                           ;mconfig.c: 34:  if (!V.help)
 37462  0020C8  0102               	movlb	2	; () banked
 37463  0020CA  B59F               	btfsc	(_V+152)& (0+255),2,b	;volatile
 37464  0020CC  D008               	goto	l13608
 37465                           
 37466                           ; BSR set to: 2
 37467                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 37468  0020CE  0E2C               	movlw	44
 37469  0020D0  6EE6               	movwf	postinc1,c
 37470  0020D2  0E01               	movlw	1
 37471  0020D4  6EE6               	movwf	postinc1,c
 37472  0020D6  0E08               	movlw	8
 37473  0020D8  6EE6               	movwf	postinc1,c
 37474  0020DA  ECBA  F00F         	call	_StartTimer	;wreg free
 37475  0020DE                     l13608:
 37476                           
 37477                           ;mconfig.c: 37:  return 0;
 37478  0020DE  0E00               	movlw	0
 37479  0020E0  6E2A               	movwf	btemp^0,c
 37480                           
 37481                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 37482  0020E2  0012               	return		;funcret
 37483  0020E4                     __end_of_help_button:
 37484                           	opt callstack 0
 37485                           
 37486 ;; *************** function _TimerDone *****************
 37487 ;; Defined at:
 37488 ;;		line 20 in file "timers.c"
 37489 ;; Parameters:    Size  Location     Type
 37490 ;;  timer           1  [STACK] const unsigned char 
 37491 ;; Auto vars:     Size  Location     Type
 37492 ;;		None
 37493 ;; Return value:  Size  Location     Type
 37494 ;;                  1  [STACK] _Bool 
 37495 ;; Registers used:
 37496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 37497 ;; Tracked objects:
 37498 ;;		On entry : 0/2
 37499 ;;		On exit  : 0/0
 37500 ;;		Unchanged: 0/0
 37501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37506 ;;Total ram usage:        0 bytes
 37507 ;; Hardware stack levels used:    1
 37508 ;; Hardware stack levels required when called:   15
 37509 ;; This function calls:
 37510 ;;		Nothing
 37511 ;; This function is called by:
 37512 ;;		_main
 37513 ;;		_WaitMs
 37514 ;;		_help_button
 37515 ;;		_check_help
 37516 ;;		_set_display_info
 37517 ;;		_update_adc_result
 37518 ;;		_esr_check
 37519 ;; This function uses a reentrant model
 37520 ;;
 37521                           
 37522                           	psect	text135
 37523  00244E                     __ptext135:
 37524                           	opt callstack 0
 37525  00244E                     _TimerDone:
 37526                           	opt callstack 14
 37527                           
 37528                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37529                           ;incstack = 0
 37530  00244E  0004               	clrwdt		;# 
 37531                           
 37532                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 37533                           ;stkvar	_timer @ sp[(0)+-1]
 37534  002450  0EFF               	movlw	-1
 37535  002452  50E3               	movf	plusw1,w,c
 37536  002454  0D02               	mullw	2
 37537  002456  0EBC               	movlw	low _tickCount
 37538  002458  24F3               	addwf	243,w,c
 37539  00245A  6ED9               	movwf	fsr2l,c
 37540  00245C  0E02               	movlw	high _tickCount
 37541  00245E  20F4               	addwfc	prodh,w,c
 37542  002460  6EDA               	movwf	fsr2h,c
 37543  002462  50DE               	movf	postinc2,w,c
 37544  002464  10DE               	iorwf	postinc2,w,c
 37545  002466  A4D8               	btfss	status,2,c
 37546  002468  D002               	goto	l12364
 37547                           
 37548                           ;timers.c: 24:   return 1;
 37549  00246A  0E01               	movlw	1
 37550  00246C  D001               	goto	L42
 37551  00246E                     l12364:
 37552                           
 37553                           ;timers.c: 26:  return 0;
 37554  00246E  0E00               	movlw	0
 37555  002470                     L42:
 37556  002470  6E2A               	movwf	btemp^0,c
 37557                           
 37558                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 37559  002472  52E5               	movf	postdec1,f,c
 37560  002474  0012               	return		;funcret
 37561  002476                     __end_of_TimerDone:
 37562                           	opt callstack 0
 37563                           
 37564 ;; *************** function _StartTimer *****************
 37565 ;; Defined at:
 37566 ;;		line 12 in file "timers.c"
 37567 ;; Parameters:    Size  Location     Type
 37568 ;;  timer           1  [STACK] const unsigned char 
 37569 ;;  count           2  [STACK] const unsigned short 
 37570 ;; Auto vars:     Size  Location     Type
 37571 ;;		None
 37572 ;; Return value:  Size  Location     Type
 37573 ;;                  1  [STACK] void 
 37574 ;; Registers used:
 37575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37576 ;; Tracked objects:
 37577 ;;		On entry : 0/0
 37578 ;;		On exit  : 0/0
 37579 ;;		Unchanged: 0/0
 37580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37585 ;;Total ram usage:        0 bytes
 37586 ;; Hardware stack levels used:    1
 37587 ;; Hardware stack levels required when called:   15
 37588 ;; This function calls:
 37589 ;;		Nothing
 37590 ;; This function is called by:
 37591 ;;		_main
 37592 ;;		_WaitMs
 37593 ;;		_help_button
 37594 ;;		_check_help
 37595 ;;		_update_adc_result
 37596 ;;		_calc_bsoc
 37597 ;;		_esr_check
 37598 ;; This function uses a reentrant model
 37599 ;;
 37600                           
 37601                           	psect	text136
 37602  001F74                     __ptext136:
 37603                           	opt callstack 0
 37604  001F74                     _StartTimer:
 37605                           	opt callstack 0
 37606                           
 37607                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 37608                           ;stkvar	_count @ sp[(0)+-3]
 37609                           
 37610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37611                           ;incstack = 0
 37612 ;; hardware stack exceeded
 37613  001F74  0EFD               	movlw	-3
 37614  001F76  006F FF8C  F034    	movff	plusw1,btemp+10
 37615  001F7C  0EFE               	movlw	-2
 37616  001F7E  006F FF8C  F035    	movff	plusw1,btemp+11
 37617  001F84  90D8               	bcf	status,0,c
 37618  001F86  3434               	rlcf	(btemp+10)^0,w,c
 37619  001F88  6E32               	movwf	(btemp+8)^0,c
 37620  001F8A  3435               	rlcf	(btemp+11)^0,w,c
 37621  001F8C  6E33               	movwf	(btemp+9)^0,c
 37622                           
 37623                           ;stkvar	_timer @ sp[(0)+-1]
 37624  001F8E  0EFF               	movlw	-1
 37625  001F90  50E3               	movf	plusw1,w,c
 37626  001F92  0D02               	mullw	2
 37627  001F94  0EBC               	movlw	low _tickCount
 37628  001F96  24F3               	addwf	243,w,c
 37629  001F98  6ED9               	movwf	fsr2l,c
 37630  001F9A  0E02               	movlw	high _tickCount
 37631  001F9C  20F4               	addwfc	prodh,w,c
 37632  001F9E  6EDA               	movwf	fsr2h,c
 37633  001FA0  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 37634  001FA6  0060  F0CF  FFDD   	movff	btemp+9,postdec2
 37635                           
 37636                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 37637  001FAC  52E5               	movf	postdec1,f,c
 37638  001FAE  52E5               	movf	postdec1,f,c
 37639  001FB0  52E5               	movf	postdec1,f,c
 37640  001FB2  0012               	return		;funcret
 37641  001FB4                     __end_of_StartTimer:
 37642                           	opt callstack 0
 37643                           
 37644 ;; *************** function _display_info *****************
 37645 ;; Defined at:
 37646 ;;		line 196 in file "mconfig.c"
 37647 ;; Parameters:    Size  Location     Type
 37648 ;;		None
 37649 ;; Auto vars:     Size  Location     Type
 37650 ;;		None
 37651 ;; Return value:  Size  Location     Type
 37652 ;;                  1  [STACK] enum E16677
 37653 ;; Registers used:
 37654 ;;		btemp
 37655 ;; Tracked objects:
 37656 ;;		On entry : 0/2
 37657 ;;		On exit  : 0/0
 37658 ;;		Unchanged: 0/0
 37659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37664 ;;Total ram usage:        0 bytes
 37665 ;; Hardware stack levels used:    1
 37666 ;; Hardware stack levels required when called:   15
 37667 ;; This function calls:
 37668 ;;		Nothing
 37669 ;; This function is called by:
 37670 ;;		_check_help
 37671 ;; This function uses a reentrant model
 37672 ;;
 37673                           
 37674                           	psect	text137
 37675  002A5A                     __ptext137:
 37676                           	opt callstack 0
 37677  002A5A                     _display_info:
 37678                           	opt callstack 14
 37679                           
 37680                           ;mconfig.c: 198:  return V.response.info;
 37681                           
 37682                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37683                           ;incstack = 0
 37684  002A5A  0060  FAA0  F02A   	movff	_V+161,btemp	;volatile
 37685                           
 37686                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 37687  002A60  0012               	return		;funcret
 37688  002A62                     __end_of_display_info:
 37689                           	opt callstack 0
 37690                           
 37691 ;; *************** function _display_help *****************
 37692 ;; Defined at:
 37693 ;;		line 201 in file "mconfig.c"
 37694 ;; Parameters:    Size  Location     Type
 37695 ;;		None
 37696 ;; Auto vars:     Size  Location     Type
 37697 ;;		None
 37698 ;; Return value:  Size  Location     Type
 37699 ;;                  1  [STACK] enum E16677
 37700 ;; Registers used:
 37701 ;;		btemp
 37702 ;; Tracked objects:
 37703 ;;		On entry : 3F/2
 37704 ;;		On exit  : 0/0
 37705 ;;		Unchanged: 0/0
 37706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37711 ;;Total ram usage:        0 bytes
 37712 ;; Hardware stack levels used:    1
 37713 ;; Hardware stack levels required when called:   15
 37714 ;; This function calls:
 37715 ;;		Nothing
 37716 ;; This function is called by:
 37717 ;;		_check_help
 37718 ;; This function uses a reentrant model
 37719 ;;
 37720                           
 37721                           	psect	text138
 37722  002A62                     __ptext138:
 37723                           	opt callstack 0
 37724  002A62                     _display_help:
 37725                           	opt callstack 14
 37726                           
 37727                           ;mconfig.c: 203:  return V.response.help_temp;
 37728                           
 37729                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37730                           ;incstack = 0
 37731  002A62  0060  FAA4  F02A   	movff	_V+162,btemp	;volatile
 37732                           
 37733                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 37734  002A68  0012               	return		;funcret
 37735  002A6A                     __end_of_display_help:
 37736                           	opt callstack 0
 37737                           
 37738 ;; *************** function _check_enter_button *****************
 37739 ;; Defined at:
 37740 ;;		line 49 in file "hid.c"
 37741 ;; Parameters:    Size  Location     Type
 37742 ;;  h               2  [STACK] PTR struct H_data
 37743 ;;		 -> H(9), 
 37744 ;; Auto vars:     Size  Location     Type
 37745 ;;		None
 37746 ;; Return value:  Size  Location     Type
 37747 ;;                  1  [STACK] _Bool 
 37748 ;; Registers used:
 37749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 37750 ;; Tracked objects:
 37751 ;;		On entry : 0/0
 37752 ;;		On exit  : 0/0
 37753 ;;		Unchanged: 0/0
 37754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37759 ;;Total ram usage:        0 bytes
 37760 ;; Hardware stack levels used:    1
 37761 ;; Hardware stack levels required when called:   15
 37762 ;; This function calls:
 37763 ;;		Nothing
 37764 ;; This function is called by:
 37765 ;;		_main
 37766 ;; This function uses a reentrant model
 37767 ;;
 37768                           
 37769                           	psect	text139
 37770  0014A8                     __ptext139:
 37771                           	opt callstack 0
 37772  0014A8                     _check_enter_button:
 37773                           	opt callstack 15
 37774                           
 37775                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 37776                           ;stkvar	_h @ sp[(0)+-2]
 37777                           
 37778                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37779                           ;incstack = 0
 37780  0014A8  0EFE               	movlw	-2
 37781  0014AA  006F FF8C  F034    	movff	plusw1,btemp+10
 37782  0014B0  0EFF               	movlw	-1
 37783  0014B2  006F FF8C  F035    	movff	plusw1,btemp+11
 37784  0014B8  0E04               	movlw	4
 37785  0014BA  2434               	addwf	(btemp+10)^0,w,c
 37786  0014BC  6ED9               	movwf	fsr2l,c
 37787  0014BE  0E00               	movlw	0
 37788  0014C0  2035               	addwfc	(btemp+11)^0,w,c
 37789  0014C2  6EDA               	movwf	fsr2h,c
 37790  0014C4  50DF               	movf	indf2,w,c
 37791  0014C6  A4D8               	btfss	status,2,c
 37792  0014C8  D023               	goto	l17310
 37793                           
 37794                           ;stkvar	_h @ sp[(0)+-2]
 37795  0014CA  0EFE               	movlw	-2
 37796  0014CC  006F FF8C  F034    	movff	plusw1,btemp+10
 37797  0014D2  0EFF               	movlw	-1
 37798  0014D4  006F FF8C  F035    	movff	plusw1,btemp+11
 37799  0014DA  0E05               	movlw	5
 37800  0014DC  2434               	addwf	(btemp+10)^0,w,c
 37801  0014DE  6ED9               	movwf	fsr2l,c
 37802  0014E0  0E00               	movlw	0
 37803  0014E2  2035               	addwfc	(btemp+11)^0,w,c
 37804  0014E4  6EDA               	movwf	fsr2h,c
 37805  0014E6  50DF               	movf	indf2,w,c
 37806  0014E8  A4D8               	btfss	status,2,c
 37807  0014EA  D012               	goto	l17310
 37808                           
 37809                           ;hid.c: 52:   h->wait_enter = 1;
 37810                           ;stkvar	_h @ sp[(0)+-2]
 37811  0014EC  0EFE               	movlw	-2
 37812  0014EE  006F FF8C  F034    	movff	plusw1,btemp+10
 37813  0014F4  0EFF               	movlw	-1
 37814  0014F6  006F FF8C  F035    	movff	plusw1,btemp+11
 37815  0014FC  0E04               	movlw	4
 37816  0014FE  2434               	addwf	(btemp+10)^0,w,c
 37817  001500  6ED9               	movwf	fsr2l,c
 37818  001502  0E00               	movlw	0
 37819  001504  2035               	addwfc	(btemp+11)^0,w,c
 37820  001506  6EDA               	movwf	fsr2h,c
 37821  001508  0E01               	movlw	1
 37822  00150A  6EDF               	movwf	indf2,c
 37823                           
 37824                           ;hid.c: 53:   return 1;
 37825  00150C  0E01               	movlw	1
 37826  00150E  D001               	goto	L43
 37827  001510                     l17310:
 37828                           
 37829                           ;hid.c: 55:  return 0;
 37830  001510  0E00               	movlw	0
 37831  001512                     L43:
 37832  001512  6E2A               	movwf	btemp^0,c
 37833                           
 37834                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 37835  001514  52E5               	movf	postdec1,f,c
 37836  001516  52E5               	movf	postdec1,f,c
 37837  001518  0012               	return		;funcret
 37838  00151A                     __end_of_check_enter_button:
 37839                           	opt callstack 0
 37840                           
 37841 ;; *************** function _calc_ror_data *****************
 37842 ;; Defined at:
 37843 ;;		line 103 in file "mbmc.c"
 37844 ;; Parameters:    Size  Location     Type
 37845 ;;		None
 37846 ;; Auto vars:     Size  Location     Type
 37847 ;;		None
 37848 ;; Return value:  Size  Location     Type
 37849 ;;                  1  [STACK] void 
 37850 ;; Registers used:
 37851 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37852 ;; Tracked objects:
 37853 ;;		On entry : 0/0
 37854 ;;		On exit  : 0/0
 37855 ;;		Unchanged: 0/0
 37856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37861 ;;Total ram usage:        0 bytes
 37862 ;; Hardware stack levels used:    1
 37863 ;; Hardware stack levels required when called:   18
 37864 ;; This function calls:
 37865 ;;		___flge
 37866 ;;		___flsub
 37867 ;;		_conv_raw_result
 37868 ;;		_fabsf
 37869 ;; This function is called by:
 37870 ;;		_main
 37871 ;; This function uses a reentrant model
 37872 ;;
 37873                           
 37874                           	psect	text140
 37875  01E232                     __ptext140:
 37876                           	opt callstack 0
 37877  01E232                     _calc_ror_data:
 37878                           	opt callstack 12
 37879                           
 37880                           ;mbmc.c: 105:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 107:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 37881                           
 37882                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37883                           ;incstack = 0
 37884  01E232  0060  F203  FFE6   	movff	calc_ror_data@bcror,postinc1
 37885  01E238  0060  F207  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 37886  01E23E  0060  F20B  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 37887  01E244  0060  F20F  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 37888  01E24A  0E00               	movlw	0
 37889  01E24C  6EE6               	movwf	postinc1,c
 37890  01E24E  0E00               	movlw	0
 37891  01E250  6EE6               	movwf	postinc1,c
 37892  01E252  EC98  F0C3         	call	_conv_raw_result	;wreg free
 37893  01E256  0060  F0AB  FFE6   	movff	btemp,postinc1
 37894  01E25C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37895  01E262  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37896  01E268  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37897  01E26E  EC14  F00F         	call	___flsub	;wreg free
 37898  01E272  0060  F0AB  FFE6   	movff	btemp,postinc1
 37899  01E278  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37900  01E27E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37901  01E284  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37902  01E28A  EC56  F004         	call	_fabsf	;wreg free
 37903  01E28E  0060  F0A8  F96F   	movff	btemp,_C+112	;volatile
 37904  01E294  0060  F0AC  F970   	movff	btemp+1,_C+113	;volatile
 37905  01E29A  0060  F0B0  F971   	movff	btemp+2,_C+114	;volatile
 37906  01E2A0  0060  F0B4  F972   	movff	btemp+3,_C+115	;volatile
 37907                           
 37908                           ;mbmc.c: 108:  bcror = conv_raw_result(C_BATT, CONV);
 37909  01E2A6  0E00               	movlw	0
 37910  01E2A8  6EE6               	movwf	postinc1,c
 37911  01E2AA  0E00               	movlw	0
 37912  01E2AC  6EE6               	movwf	postinc1,c
 37913  01E2AE  EC98  F0C3         	call	_conv_raw_result	;wreg free
 37914  01E2B2  0060  F0A8  F080   	movff	btemp,calc_ror_data@bcror
 37915  01E2B8  0060  F0AC  F081   	movff	btemp+1,calc_ror_data@bcror+1
 37916  01E2BE  0060  F0B0  F082   	movff	btemp+2,calc_ror_data@bcror+2
 37917  01E2C4  0060  F0B4  F083   	movff	btemp+3,calc_ror_data@bcror+3
 37918                           
 37919                           ;mbmc.c: 109:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 37920  01E2CA  0060  F213  FFE6   	movff	calc_ror_data@bvror,postinc1
 37921  01E2D0  0060  F217  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 37922  01E2D6  0060  F21B  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 37923  01E2DC  0060  F21F  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 37924  01E2E2  0E00               	movlw	0
 37925  01E2E4  6EE6               	movwf	postinc1,c
 37926  01E2E6  0E04               	movlw	4
 37927  01E2E8  6EE6               	movwf	postinc1,c
 37928  01E2EA  EC98  F0C3         	call	_conv_raw_result	;wreg free
 37929  01E2EE  0060  F0AB  FFE6   	movff	btemp,postinc1
 37930  01E2F4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37931  01E2FA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37932  01E300  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37933  01E306  EC14  F00F         	call	___flsub	;wreg free
 37934  01E30A  0060  F0AB  FFE6   	movff	btemp,postinc1
 37935  01E310  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37936  01E316  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37937  01E31C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37938  01E322  EC56  F004         	call	_fabsf	;wreg free
 37939  01E326  0060  F0A8  F96B   	movff	btemp,_C+108	;volatile
 37940  01E32C  0060  F0AC  F96C   	movff	btemp+1,_C+109	;volatile
 37941  01E332  0060  F0B0  F96D   	movff	btemp+2,_C+110	;volatile
 37942  01E338  0060  F0B4  F96E   	movff	btemp+3,_C+111	;volatile
 37943                           
 37944                           ;mbmc.c: 110:  if (C.bv_ror < 0.0051)
 37945  01E33E  0EE7               	movlw	231
 37946  01E340  6EE6               	movwf	postinc1,c
 37947  01E342  0E1D               	movlw	29
 37948  01E344  6EE6               	movwf	postinc1,c
 37949  01E346  0EA7               	movlw	167
 37950  01E348  6EE6               	movwf	postinc1,c
 37951  01E34A  0E3B               	movlw	59
 37952  01E34C  6EE6               	movwf	postinc1,c
 37953  01E34E  EE22  F16B         	lfsr	2,_C+108	;volatile
 37954  01E352  006F FF7B FFE6     	movff	postinc2,postinc1
 37955  01E358  006F FF7B FFE6     	movff	postinc2,postinc1
 37956  01E35E  006F FF7B FFE6     	movff	postinc2,postinc1
 37957  01E364  006F FF7B FFE6     	movff	postinc2,postinc1
 37958  01E36A  ECC1  F0F4         	call	___flge	;wreg free
 37959  01E36E  B02A               	btfsc	btemp& (0+255),0,c
 37960  01E370  D010               	goto	l14198
 37961                           
 37962                           ;mbmc.c: 111:   C.bv_ror = 0.0140 + 0.0001;
 37963  01E372  0EB0               	movlw	176
 37964  01E374  006F FFA0  F96B    	movff	wreg,_C+108	;volatile
 37965  01E37A  0E03               	movlw	3
 37966  01E37C  006F FFA0  F96C    	movff	wreg,_C+109	;volatile
 37967  01E382  0E67               	movlw	103
 37968  01E384  006F FFA0  F96D    	movff	wreg,_C+110	;volatile
 37969  01E38A  0E3C               	movlw	60
 37970  01E38C  006F FFA0  F96E    	movff	wreg,_C+111	;volatile
 37971  01E392                     l14198:
 37972                           
 37973                           ;mbmc.c: 112:  bvror = conv_raw_result(V_BAT, CONV);
 37974  01E392  0E00               	movlw	0
 37975  01E394  6EE6               	movwf	postinc1,c
 37976  01E396  0E04               	movlw	4
 37977  01E398  6EE6               	movwf	postinc1,c
 37978  01E39A  EC98  F0C3         	call	_conv_raw_result	;wreg free
 37979  01E39E  0060  F0A8  F084   	movff	btemp,calc_ror_data@bvror
 37980  01E3A4  0060  F0AC  F085   	movff	btemp+1,calc_ror_data@bvror+1
 37981  01E3AA  0060  F0B0  F086   	movff	btemp+2,calc_ror_data@bvror+2
 37982  01E3B0  0060  F0B4  F087   	movff	btemp+3,calc_ror_data@bvror+3
 37983                           
 37984                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 37985  01E3B6  0012               	return		;funcret
 37986  01E3B8                     __end_of_calc_ror_data:
 37987                           	opt callstack 0
 37988                           
 37989 ;; *************** function _fabsf *****************
 37990 ;; Defined at:
 37991 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 37992 ;; Parameters:    Size  Location     Type
 37993 ;;  x               4  [STACK] float 
 37994 ;; Auto vars:     Size  Location     Type
 37995 ;;  u               4  [STACK] struct .
 37996 ;; Return value:  Size  Location     Type
 37997 ;;                  4  [STACK] float 
 37998 ;; Registers used:
 37999 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 38000 ;; Tracked objects:
 38001 ;;		On entry : 0/0
 38002 ;;		On exit  : 0/0
 38003 ;;		Unchanged: 0/0
 38004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38009 ;;Total ram usage:        0 bytes
 38010 ;; Hardware stack levels used:    1
 38011 ;; Hardware stack levels required when called:   15
 38012 ;; This function calls:
 38013 ;;		Nothing
 38014 ;; This function is called by:
 38015 ;;		_main
 38016 ;;		_calc_ror_data
 38017 ;;		_calc_bsoc
 38018 ;;		_esr_check
 38019 ;; This function uses a reentrant model
 38020 ;;
 38021                           
 38022                           	psect	text141
 38023  0008AC                     __ptext141:
 38024                           	opt callstack 0
 38025  0008AC                     _fabsf:
 38026                           	opt callstack 0
 38027                           
 38028                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38029  0008AC  52E6               	movf	postinc1,f,c
 38030  0008AE  52E6               	movf	postinc1,f,c
 38031  0008B0  52E6               	movf	postinc1,f,c
 38032  0008B2  52E6               	movf	postinc1,f,c
 38033                           
 38034                           ;incstack = 0
 38035 ;; hardware stack exceeded
 38036  0008B4  0060  F1E0  F032   	movff	fabsf@F463,btemp+8
 38037  0008BA  0060  F1E4  F033   	movff	fabsf@F463+1,btemp+9
 38038  0008C0  0060  F1E8  F034   	movff	fabsf@F463+2,btemp+10
 38039  0008C6  0060  F1EC  F035   	movff	fabsf@F463+3,btemp+11
 38040                           
 38041                           ;stkvar	_u @ sp[(-4)+0]
 38042  0008CC  0EFC               	movlw	-4
 38043  0008CE  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38044  0008D4  0EFD               	movlw	-3
 38045  0008D6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38046  0008DC  0EFE               	movlw	-2
 38047  0008DE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38048  0008E4  0EFF               	movlw	-1
 38049  0008E6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38050                           
 38051                           ;stkvar	_x @ sp[(-4)+-4]
 38052  0008EC  0EF8               	movlw	-8
 38053  0008EE  006F FF8C  F032    	movff	plusw1,btemp+8
 38054  0008F4  0EF9               	movlw	-7
 38055  0008F6  006F FF8C  F033    	movff	plusw1,btemp+9
 38056  0008FC  0EFA               	movlw	-6
 38057  0008FE  006F FF8C  F034    	movff	plusw1,btemp+10
 38058  000904  0EFB               	movlw	-5
 38059  000906  006F FF8C  F035    	movff	plusw1,btemp+11
 38060                           
 38061                           ;stkvar	_u @ sp[(-4)+0]
 38062  00090C  0EFC               	movlw	-4
 38063  00090E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38064  000914  0EFD               	movlw	-3
 38065  000916  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38066  00091C  0EFE               	movlw	-2
 38067  00091E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38068  000924  0EFF               	movlw	-1
 38069  000926  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38070                           
 38071                           ;stkvar	_u @ sp[(-4)+0]
 38072  00092C  0EFF               	movlw	-1
 38073  00092E  9EE3               	bcf	plusw1,7,c
 38074                           
 38075                           ;stkvar	_u @ sp[(-4)+0]
 38076  000930  0EFC               	movlw	-4
 38077  000932  006F FF8C  F02A    	movff	plusw1,btemp
 38078  000938  0EFD               	movlw	-3
 38079  00093A  006F FF8C  F02B    	movff	plusw1,btemp+1
 38080  000940  0EFE               	movlw	-2
 38081  000942  006F FF8C  F02C    	movff	plusw1,btemp+2
 38082  000948  0EFF               	movlw	-1
 38083  00094A  006F FF8C  F02D    	movff	plusw1,btemp+3
 38084                           
 38085                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 38086  000950  0EF8               	movlw	248
 38087  000952  26E1               	addwf	fsr1l,f,c
 38088  000954  0EFF               	movlw	255
 38089  000956  22E2               	addwfc	fsr1h,f,c
 38090  000958  0012               	return		;funcret
 38091  00095A                     __end_of_fabsf:
 38092                           	opt callstack 0
 38093                           
 38094 ;; *************** function _conv_raw_result *****************
 38095 ;; Defined at:
 38096 ;;		line 135 in file "daq.c"
 38097 ;; Parameters:    Size  Location     Type
 38098 ;;  chan            1  [STACK] const enum E16605
 38099 ;;  to_what         1  [STACK] const enum E16996
 38100 ;; Auto vars:     Size  Location     Type
 38101 ;;		None
 38102 ;; Return value:  Size  Location     Type
 38103 ;;                  4  [STACK] float 
 38104 ;; Registers used:
 38105 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 38106 ;; Tracked objects:
 38107 ;;		On entry : 0/0
 38108 ;;		On exit  : 0/0
 38109 ;;		Unchanged: 0/0
 38110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38115 ;;Total ram usage:        0 bytes
 38116 ;; Hardware stack levels used:    1
 38117 ;; Hardware stack levels required when called:   17
 38118 ;; This function calls:
 38119 ;;		___fldiv
 38120 ;;		___flmul
 38121 ;;		___flsub
 38122 ;;		___xxtofl
 38123 ;;		_get_raw_result
 38124 ;;		_nanf
 38125 ;; This function is called by:
 38126 ;;		_main
 38127 ;;		_convert_adc_data
 38128 ;;		_calc_ror_data
 38129 ;;		_check_day_time
 38130 ;;		_init_bsoc
 38131 ;;		_esr_check
 38132 ;; This function uses a reentrant model
 38133 ;;
 38134                           
 38135                           	psect	text142
 38136  018730                     __ptext142:
 38137                           	opt callstack 0
 38138  018730                     _conv_raw_result:
 38139                           	opt callstack 0
 38140                           
 38141                           ;daq.c: 135: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 136: {;daq.c: 138:  switch (to_what) {
 38142                           
 38143                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38144                           ;incstack = 0
 38145 ;; hardware stack exceeded
 38146  018730  D24A               	goto	l12346
 38147  018732                     l12292:
 38148                           
 38149                           ;daq.c: 140:   if (!(0b0011110001110111 >> chan & 0x1))
 38150                           ;stkvar	_chan @ sp[(0)+-1]
 38151  018732  0EFF               	movlw	-1
 38152  018734  006F FF8C  F035    	movff	plusw1,btemp+11
 38153  01873A  0E77               	movlw	119
 38154  01873C  6E32               	movwf	(btemp+8)^0,c
 38155  01873E  0E3C               	movlw	60
 38156  018740  6E33               	movwf	(btemp+9)^0,c
 38157  018742  2A35               	incf	(btemp+11)^0,f,c
 38158  018744  D003               	goto	u11594
 38159  018746                     u11595:
 38160  018746  3433               	rlcf	(btemp+9)^0,w,c
 38161  018748  3233               	rrcf	(btemp+9)^0,f,c
 38162  01874A  3232               	rrcf	(btemp+8)^0,f,c
 38163  01874C                     u11594:
 38164  01874C  2E35               	decfsz	(btemp+11)^0,f,c
 38165  01874E  D7FB               	goto	u11595
 38166  018750  B032               	btfsc	(btemp+8)^0,0,c
 38167  018752  D007               	goto	l12298
 38168                           
 38169                           ;daq.c: 141:    return nanf("");
 38170  018754  0E75               	movlw	low (STR_95+126)
 38171  018756  6EE6               	movwf	postinc1,c
 38172  018758  0EFA               	movlw	high (STR_95+126)
 38173  01875A  6EE6               	movwf	postinc1,c
 38174  01875C  EC5C  F00C         	call	_nanf	;wreg free
 38175  018760  D242               	goto	l1977
 38176  018762                     l12298:
 38177                           
 38178                           ;daq.c: 143:   if (0b0000000000000011 >> chan & 0x1) {
 38179                           ;stkvar	_chan @ sp[(0)+-1]
 38180  018762  0EFF               	movlw	-1
 38181  018764  006F FF8C  F035    	movff	plusw1,btemp+11
 38182  01876A  0E03               	movlw	3
 38183  01876C  6E32               	movwf	(btemp+8)^0,c
 38184  01876E  0E00               	movlw	0
 38185  018770  6E33               	movwf	(btemp+9)^0,c
 38186  018772  2A35               	incf	(btemp+11)^0,f,c
 38187  018774  D003               	goto	u11614
 38188  018776                     u11615:
 38189  018776  3433               	rlcf	(btemp+9)^0,w,c
 38190  018778  3233               	rrcf	(btemp+9)^0,f,c
 38191  01877A  3232               	rrcf	(btemp+8)^0,f,c
 38192  01877C                     u11614:
 38193  01877C  2E35               	decfsz	(btemp+11)^0,f,c
 38194  01877E  D7FB               	goto	u11615
 38195  018780  A032               	btfss	(btemp+8)^0,0,c
 38196  018782  D0F3               	goto	l12312
 38197                           
 38198                           ;daq.c: 144:    if (0b0000000000000001 >> chan & 0x1) {
 38199                           ;stkvar	_chan @ sp[(0)+-1]
 38200  018784  0EFF               	movlw	-1
 38201  018786  006F FF8C  F035    	movff	plusw1,btemp+11
 38202  01878C  0E01               	movlw	1
 38203  01878E  6E32               	movwf	(btemp+8)^0,c
 38204  018790  0E00               	movlw	0
 38205  018792  6E33               	movwf	(btemp+9)^0,c
 38206  018794  2A35               	incf	(btemp+11)^0,f,c
 38207  018796  D003               	goto	u11634
 38208  018798                     u11635:
 38209  018798  3433               	rlcf	(btemp+9)^0,w,c
 38210  01879A  3233               	rrcf	(btemp+9)^0,f,c
 38211  01879C  3232               	rrcf	(btemp+8)^0,f,c
 38212  01879E                     u11634:
 38213  01879E  2E35               	decfsz	(btemp+11)^0,f,c
 38214  0187A0  D7FB               	goto	u11635
 38215  0187A2  A032               	btfss	(btemp+8)^0,0,c
 38216  0187A4  D071               	goto	l12308
 38217                           
 38218                           ;daq.c: 145:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 38219  0187A6  0060  F4AB  FFE6   	movff	_R+42,postinc1
 38220  0187AC  0060  F4AF  FFE6   	movff	_R+43,postinc1
 38221  0187B2  0060  F4B3  FFE6   	movff	_R+44,postinc1
 38222  0187B8  0060  F4B7  FFE6   	movff	_R+45,postinc1
 38223  0187BE  0060  F498  F032   	movff	_R+38,btemp+8	;volatile
 38224  0187C4  0060  F49C  F033   	movff	_R+39,btemp+9	;volatile
 38225  0187CA  0E00               	movlw	0
 38226  0187CC  BE33               	btfsc	(btemp+9)^0,7,c
 38227  0187CE  0EFF               	movlw	255
 38228  0187D0  6E34               	movwf	(btemp+10)^0,c
 38229  0187D2  6E35               	movwf	(btemp+11)^0,c
 38230  0187D4  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 38231  0187DA  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 38232  0187E0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 38233  0187E6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 38234  0187EC  0E01               	movlw	1
 38235  0187EE  6EE6               	movwf	postinc1,c
 38236  0187F0  EC27  F0EB         	call	___xxtofl	;wreg free
 38237  0187F4  0060  F0AB  FFE6   	movff	btemp,postinc1
 38238  0187FA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38239  018800  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38240  018806  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38241                           
 38242                           ;stkvar	_chan @ sp[(-8)+-1]
 38243  01880C  0EF7               	movlw	-9
 38244  01880E  50E3               	movf	plusw1,w,c
 38245  018810  6EE6               	movwf	postinc1,c
 38246  018812  ECAC  F013         	call	_get_raw_result	;wreg free
 38247  018816  0060  F0A8  F034   	movff	btemp,btemp+10
 38248  01881C  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38249  018822  5034               	movf	(btemp+10)^0,w,c
 38250  018824  6E2E               	movwf	(btemp+4)^0,c
 38251  018826  5035               	movf	(btemp+11)^0,w,c
 38252  018828  6E2F               	movwf	(btemp+5)^0,c
 38253  01882A  6A30               	clrf	(btemp+6)^0,c
 38254  01882C  6A31               	clrf	(btemp+7)^0,c
 38255  01882E  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38256  018834  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38257  01883A  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38258  018840  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38259  018846  0E00               	movlw	0
 38260  018848  6EE6               	movwf	postinc1,c
 38261  01884A  EC27  F0EB         	call	___xxtofl	;wreg free
 38262  01884E  0060  F0AB  FFE6   	movff	btemp,postinc1
 38263  018854  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38264  01885A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38265  018860  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38266  018866  EC14  F00F         	call	___flsub	;wreg free
 38267  01886A  0060  F0AB  FFE6   	movff	btemp,postinc1
 38268  018870  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38269  018876  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38270  01887C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38271  018882  ECFF  F0B2         	call	___flmul	;wreg free
 38272  018886  D1AF               	goto	l1977
 38273  018888                     l12308:
 38274                           
 38275                           ;daq.c: 147:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 38276  018888  0060  F4BB  FFE6   	movff	_R+46,postinc1
 38277  01888E  0060  F4BF  FFE6   	movff	_R+47,postinc1
 38278  018894  0060  F4C3  FFE6   	movff	_R+48,postinc1
 38279  01889A  0060  F4C7  FFE6   	movff	_R+49,postinc1
 38280  0188A0  0060  F4A0  F032   	movff	_R+40,btemp+8	;volatile
 38281  0188A6  0060  F4A4  F033   	movff	_R+41,btemp+9	;volatile
 38282  0188AC  0E00               	movlw	0
 38283  0188AE  BE33               	btfsc	(btemp+9)^0,7,c
 38284  0188B0  0EFF               	movlw	255
 38285  0188B2  6E34               	movwf	(btemp+10)^0,c
 38286  0188B4  6E35               	movwf	(btemp+11)^0,c
 38287  0188B6  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 38288  0188BC  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 38289  0188C2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 38290  0188C8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 38291  0188CE  0E01               	movlw	1
 38292  0188D0  6EE6               	movwf	postinc1,c
 38293  0188D2  EC27  F0EB         	call	___xxtofl	;wreg free
 38294  0188D6  0060  F0AB  FFE6   	movff	btemp,postinc1
 38295  0188DC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38296  0188E2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38297  0188E8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38298                           
 38299                           ;stkvar	_chan @ sp[(-8)+-1]
 38300  0188EE  0EF7               	movlw	-9
 38301  0188F0  50E3               	movf	plusw1,w,c
 38302  0188F2  6EE6               	movwf	postinc1,c
 38303  0188F4  ECAC  F013         	call	_get_raw_result	;wreg free
 38304  0188F8  0060  F0A8  F034   	movff	btemp,btemp+10
 38305  0188FE  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38306  018904  5034               	movf	(btemp+10)^0,w,c
 38307  018906  6E2E               	movwf	(btemp+4)^0,c
 38308  018908  5035               	movf	(btemp+11)^0,w,c
 38309  01890A  6E2F               	movwf	(btemp+5)^0,c
 38310  01890C  6A30               	clrf	(btemp+6)^0,c
 38311  01890E  6A31               	clrf	(btemp+7)^0,c
 38312  018910  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38313  018916  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38314  01891C  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38315  018922  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38316  018928  0E00               	movlw	0
 38317  01892A  6EE6               	movwf	postinc1,c
 38318  01892C  EC27  F0EB         	call	___xxtofl	;wreg free
 38319  018930  0060  F0AB  FFE6   	movff	btemp,postinc1
 38320  018936  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38321  01893C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38322  018942  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38323  018948  EC14  F00F         	call	___flsub	;wreg free
 38324  01894C  0060  F0AB  FFE6   	movff	btemp,postinc1
 38325  018952  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38326  018958  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38327  01895E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38328  018964  ECFF  F0B2         	call	___flmul	;wreg free
 38329  018968  D13E               	goto	l1977
 38330  01896A                     l12312:
 38331                           
 38332                           ;daq.c: 150:    if (0b0000100000000000 >> chan & 0x1) {
 38333                           ;stkvar	_chan @ sp[(0)+-1]
 38334  01896A  0EFF               	movlw	-1
 38335  01896C  006F FF8C  F035    	movff	plusw1,btemp+11
 38336  018972  0E00               	movlw	0
 38337  018974  6E32               	movwf	(btemp+8)^0,c
 38338  018976  0E08               	movlw	8
 38339  018978  6E33               	movwf	(btemp+9)^0,c
 38340  01897A  2A35               	incf	(btemp+11)^0,f,c
 38341  01897C  D003               	goto	u11654
 38342  01897E                     u11655:
 38343  01897E  3433               	rlcf	(btemp+9)^0,w,c
 38344  018980  3233               	rrcf	(btemp+9)^0,f,c
 38345  018982  3232               	rrcf	(btemp+8)^0,f,c
 38346  018984                     u11654:
 38347  018984  2E35               	decfsz	(btemp+11)^0,f,c
 38348  018986  D7FB               	goto	u11655
 38349  018988  A032               	btfss	(btemp+8)^0,0,c
 38350  01898A  D008               	goto	l12320
 38351                           
 38352                           ;daq.c: 151:     return 25.0;
 38353  01898C  0E00               	movlw	0
 38354  01898E  6E2A               	movwf	btemp^0,c
 38355  018990  0E00               	movlw	0
 38356  018992  6E2B               	movwf	(btemp+1)^0,c
 38357  018994  0EC8               	movlw	200
 38358  018996  6E2C               	movwf	(btemp+2)^0,c
 38359  018998  0E41               	movlw	65
 38360  01899A  D113               	goto	L44
 38361  01899C                     l12320:
 38362                           
 38363                           ;daq.c: 153:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 38364  01899C  0E00               	movlw	0
 38365  01899E  6EE6               	movwf	postinc1,c
 38366  0189A0  0E00               	movlw	0
 38367  0189A2  6EE6               	movwf	postinc1,c
 38368  0189A4  0E7A               	movlw	122
 38369  0189A6  6EE6               	movwf	postinc1,c
 38370  0189A8  0E44               	movlw	68
 38371  0189AA  6EE6               	movwf	postinc1,c
 38372  0189AC  0E61               	movlw	97
 38373  0189AE  6EE6               	movwf	postinc1,c
 38374  0189B0  0E03               	movlw	3
 38375  0189B2  6EE6               	movwf	postinc1,c
 38376  0189B4  0E84               	movlw	132
 38377  0189B6  6EE6               	movwf	postinc1,c
 38378  0189B8  0E40               	movlw	64
 38379  0189BA  6EE6               	movwf	postinc1,c
 38380                           
 38381                           ;stkvar	_chan @ sp[(-8)+-1]
 38382  0189BC  0EF7               	movlw	-9
 38383  0189BE  50E3               	movf	plusw1,w,c
 38384  0189C0  6EE6               	movwf	postinc1,c
 38385  0189C2  ECAC  F013         	call	_get_raw_result	;wreg free
 38386  0189C6  0060  F0A8  F034   	movff	btemp,btemp+10
 38387  0189CC  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38388  0189D2  5034               	movf	(btemp+10)^0,w,c
 38389  0189D4  6E2E               	movwf	(btemp+4)^0,c
 38390  0189D6  5035               	movf	(btemp+11)^0,w,c
 38391  0189D8  6E2F               	movwf	(btemp+5)^0,c
 38392  0189DA  6A30               	clrf	(btemp+6)^0,c
 38393  0189DC  6A31               	clrf	(btemp+7)^0,c
 38394  0189DE  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38395  0189E4  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38396  0189EA  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38397  0189F0  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38398  0189F6  0E00               	movlw	0
 38399  0189F8  6EE6               	movwf	postinc1,c
 38400  0189FA  EC27  F0EB         	call	___xxtofl	;wreg free
 38401  0189FE  0060  F0AB  FFE6   	movff	btemp,postinc1
 38402  018A04  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38403  018A0A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38404  018A10  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38405  018A16  ECFF  F0B2         	call	___flmul	;wreg free
 38406  018A1A  0060  F0AB  FFE6   	movff	btemp,postinc1
 38407  018A20  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38408  018A26  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38409  018A2C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38410  018A32  EC50  F0BE         	call	___fldiv	;wreg free
 38411  018A36  D0D7               	goto	l1977
 38412  018A38                     l12324:
 38413                           
 38414                           ;daq.c: 158:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 38415                           ;stkvar	_chan @ sp[(0)+-1]
 38416  018A38  0EFF               	movlw	-1
 38417  018A3A  006F FF8C  F035    	movff	plusw1,btemp+11
 38418  018A40  0E03               	movlw	3
 38419  018A42  6E32               	movwf	(btemp+8)^0,c
 38420  018A44  0E00               	movlw	0
 38421  018A46  6E33               	movwf	(btemp+9)^0,c
 38422  018A48  2A35               	incf	(btemp+11)^0,f,c
 38423  018A4A  D003               	goto	u11674
 38424  018A4C                     u11675:
 38425  018A4C  3433               	rlcf	(btemp+9)^0,w,c
 38426  018A4E  3233               	rrcf	(btemp+9)^0,f,c
 38427  018A50  3232               	rrcf	(btemp+8)^0,f,c
 38428  018A52                     u11674:
 38429  018A52  2E35               	decfsz	(btemp+11)^0,f,c
 38430  018A54  D7FB               	goto	u11675
 38431  018A56  B032               	btfsc	(btemp+8)^0,0,c
 38432  018A58  D011               	goto	u11700
 38433                           
 38434                           ;stkvar	_chan @ sp[(0)+-1]
 38435  018A5A  0EFF               	movlw	-1
 38436  018A5C  006F FF8C  F035    	movff	plusw1,btemp+11
 38437  018A62  0E00               	movlw	0
 38438  018A64  6E32               	movwf	(btemp+8)^0,c
 38439  018A66  0E08               	movlw	8
 38440  018A68  6E33               	movwf	(btemp+9)^0,c
 38441  018A6A  2A35               	incf	(btemp+11)^0,f,c
 38442  018A6C  D003               	goto	u11694
 38443  018A6E                     u11695:
 38444  018A6E  3433               	rlcf	(btemp+9)^0,w,c
 38445  018A70  3233               	rrcf	(btemp+9)^0,f,c
 38446  018A72  3232               	rrcf	(btemp+8)^0,f,c
 38447  018A74                     u11694:
 38448  018A74  2E35               	decfsz	(btemp+11)^0,f,c
 38449  018A76  D7FB               	goto	u11695
 38450  018A78  A032               	btfss	(btemp+8)^0,0,c
 38451  018A7A  D04E               	goto	l12332
 38452  018A7C                     u11700:
 38453                           
 38454                           ;daq.c: 159:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 38455  018A7C  0E00               	movlw	0
 38456  018A7E  6EE6               	movwf	postinc1,c
 38457  018A80  0E00               	movlw	0
 38458  018A82  6EE6               	movwf	postinc1,c
 38459  018A84  0E7A               	movlw	122
 38460  018A86  6EE6               	movwf	postinc1,c
 38461  018A88  0E44               	movlw	68
 38462  018A8A  6EE6               	movwf	postinc1,c
 38463  018A8C  0E00               	movlw	0
 38464  018A8E  6EE6               	movwf	postinc1,c
 38465  018A90  0E00               	movlw	0
 38466  018A92  6EE6               	movwf	postinc1,c
 38467  018A94  0E20               	movlw	32
 38468  018A96  6EE6               	movwf	postinc1,c
 38469  018A98  0E3F               	movlw	63
 38470  018A9A  6EE6               	movwf	postinc1,c
 38471                           
 38472                           ;stkvar	_chan @ sp[(-8)+-1]
 38473  018A9C  0EF7               	movlw	-9
 38474  018A9E  50E3               	movf	plusw1,w,c
 38475  018AA0  6EE6               	movwf	postinc1,c
 38476  018AA2  ECAC  F013         	call	_get_raw_result	;wreg free
 38477  018AA6  0060  F0A8  F034   	movff	btemp,btemp+10
 38478  018AAC  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38479  018AB2  5034               	movf	(btemp+10)^0,w,c
 38480  018AB4  6E2E               	movwf	(btemp+4)^0,c
 38481  018AB6  5035               	movf	(btemp+11)^0,w,c
 38482  018AB8  6E2F               	movwf	(btemp+5)^0,c
 38483  018ABA  6A30               	clrf	(btemp+6)^0,c
 38484  018ABC  6A31               	clrf	(btemp+7)^0,c
 38485  018ABE  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38486  018AC4  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38487  018ACA  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38488  018AD0  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38489  018AD6  0E00               	movlw	0
 38490  018AD8  6EE6               	movwf	postinc1,c
 38491  018ADA  EC27  F0EB         	call	___xxtofl	;wreg free
 38492  018ADE  0060  F0AB  FFE6   	movff	btemp,postinc1
 38493  018AE4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38494  018AEA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38495  018AF0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38496  018AF6  ECFF  F0B2         	call	___flmul	;wreg free
 38497  018AFA  0060  F0AB  FFE6   	movff	btemp,postinc1
 38498  018B00  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38499  018B06  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38500  018B0C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38501  018B12  EC50  F0BE         	call	___fldiv	;wreg free
 38502  018B16  D067               	goto	l1977
 38503  018B18                     l12332:
 38504                           
 38505                           ;daq.c: 161:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 38506  018B18  0E00               	movlw	0
 38507  018B1A  6EE6               	movwf	postinc1,c
 38508  018B1C  0E00               	movlw	0
 38509  018B1E  6EE6               	movwf	postinc1,c
 38510  018B20  0E7A               	movlw	122
 38511  018B22  6EE6               	movwf	postinc1,c
 38512  018B24  0E44               	movlw	68
 38513  018B26  6EE6               	movwf	postinc1,c
 38514  018B28  0E61               	movlw	97
 38515  018B2A  6EE6               	movwf	postinc1,c
 38516  018B2C  0E03               	movlw	3
 38517  018B2E  6EE6               	movwf	postinc1,c
 38518  018B30  0E84               	movlw	132
 38519  018B32  6EE6               	movwf	postinc1,c
 38520  018B34  0E40               	movlw	64
 38521  018B36  6EE6               	movwf	postinc1,c
 38522                           
 38523                           ;stkvar	_chan @ sp[(-8)+-1]
 38524  018B38  0EF7               	movlw	-9
 38525  018B3A  50E3               	movf	plusw1,w,c
 38526  018B3C  6EE6               	movwf	postinc1,c
 38527  018B3E  ECAC  F013         	call	_get_raw_result	;wreg free
 38528  018B42  0060  F0A8  F034   	movff	btemp,btemp+10
 38529  018B48  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38530  018B4E  5034               	movf	(btemp+10)^0,w,c
 38531  018B50  6E2E               	movwf	(btemp+4)^0,c
 38532  018B52  5035               	movf	(btemp+11)^0,w,c
 38533  018B54  6E2F               	movwf	(btemp+5)^0,c
 38534  018B56  6A30               	clrf	(btemp+6)^0,c
 38535  018B58  6A31               	clrf	(btemp+7)^0,c
 38536  018B5A  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38537  018B60  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38538  018B66  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38539  018B6C  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38540  018B72  0E00               	movlw	0
 38541  018B74  6EE6               	movwf	postinc1,c
 38542  018B76  EC27  F0EB         	call	___xxtofl	;wreg free
 38543  018B7A  0060  F0AB  FFE6   	movff	btemp,postinc1
 38544  018B80  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38545  018B86  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38546  018B8C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38547  018B92  ECFF  F0B2         	call	___flmul	;wreg free
 38548  018B96  0060  F0AB  FFE6   	movff	btemp,postinc1
 38549  018B9C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38550  018BA2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38551  018BA8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38552  018BAE  EC50  F0BE         	call	___fldiv	;wreg free
 38553  018BB2  D019               	goto	l1977
 38554  018BB4                     l12338:
 38555                           
 38556                           ;daq.c: 164:   return 0.0;
 38557  018BB4  0E00               	movlw	0
 38558  018BB6  6E2A               	movwf	btemp^0,c
 38559  018BB8  0E00               	movlw	0
 38560  018BBA  6E2B               	movwf	(btemp+1)^0,c
 38561  018BBC  0E00               	movlw	0
 38562  018BBE  6E2C               	movwf	(btemp+2)^0,c
 38563  018BC0  0E00               	movlw	0
 38564  018BC2                     L44:
 38565  018BC2  6E2D               	movwf	(btemp+3)^0,c
 38566  018BC4  D010               	goto	l1977
 38567  018BC6                     l12346:
 38568                           
 38569                           ;stkvar	_to_what @ sp[(0)+-2]
 38570  018BC6  0EFE               	movlw	-2
 38571  018BC8  50E3               	movf	plusw1,w,c
 38572  018BCA  6E34               	movwf	(btemp+10)^0,c
 38573  018BCC  6A35               	clrf	(btemp+11)^0,c
 38574                           
 38575                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 38576                           ; Switch size 1, requested type "simple"
 38577                           ; Number of cases is 1, Range of values is 0 to 0
 38578                           ; switch strategies available:
 38579                           ; Name         Instructions Cycles
 38580                           ; simple_byte            4     3 (average)
 38581                           ;	Chosen strategy is simple_byte
 38582  018BCE  5035               	movf	(btemp+11)^0,w,c
 38583  018BD0  0A00               	xorlw	0	; case 0
 38584  018BD2  A4D8               	btfss	status,2,c
 38585  018BD4  D7EF               	goto	l12338
 38586                           
 38587                           ; Switch size 1, requested type "simple"
 38588                           ; Number of cases is 2, Range of values is 0 to 1
 38589                           ; switch strategies available:
 38590                           ; Name         Instructions Cycles
 38591                           ; simple_byte            7     4 (average)
 38592                           ;	Chosen strategy is simple_byte
 38593  018BD6  5034               	movf	(btemp+10)^0,w,c
 38594  018BD8  0A00               	xorlw	0	; case 0
 38595  018BDA  B4D8               	btfsc	status,2,c
 38596  018BDC  D5AA               	goto	l12292
 38597  018BDE  0A01               	xorlw	1	; case 1
 38598  018BE0  B4D8               	btfsc	status,2,c
 38599  018BE2  D72A               	goto	l12324
 38600  018BE4  D7E7               	goto	l12338
 38601  018BE6                     l1977:
 38602                           
 38603                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 38604  018BE6  52E5               	movf	postdec1,f,c
 38605  018BE8  52E5               	movf	postdec1,f,c
 38606  018BEA  0012               	return		;funcret
 38607  018BEC                     __end_of_conv_raw_result:
 38608                           	opt callstack 0
 38609                           
 38610 ;; *************** function _nanf *****************
 38611 ;; Defined at:
 38612 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 38613 ;; Parameters:    Size  Location     Type
 38614 ;;  s               2  [STACK] PTR const unsigned char 
 38615 ;;		 -> STR_134(1), STR_94(1), 
 38616 ;; Auto vars:     Size  Location     Type
 38617 ;;  u               4  [STACK] struct .
 38618 ;; Return value:  Size  Location     Type
 38619 ;;                  4  [STACK] float 
 38620 ;; Registers used:
 38621 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 38622 ;; Tracked objects:
 38623 ;;		On entry : 0/0
 38624 ;;		On exit  : 0/0
 38625 ;;		Unchanged: 0/0
 38626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38631 ;;Total ram usage:        0 bytes
 38632 ;; Hardware stack levels used:    1
 38633 ;; Hardware stack levels required when called:   15
 38634 ;; This function calls:
 38635 ;;		Nothing
 38636 ;; This function is called by:
 38637 ;;		_conv_raw_result
 38638 ;; This function uses a reentrant model
 38639 ;;
 38640                           
 38641                           	psect	text143
 38642  0018B8                     __ptext143:
 38643                           	opt callstack 0
 38644  0018B8                     _nanf:
 38645                           	opt callstack 0
 38646                           
 38647                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38648  0018B8  52E6               	movf	postinc1,f,c
 38649  0018BA  52E6               	movf	postinc1,f,c
 38650  0018BC  52E6               	movf	postinc1,f,c
 38651  0018BE  52E6               	movf	postinc1,f,c
 38652                           
 38653                           ;incstack = 0
 38654 ;; hardware stack exceeded
 38655  0018C0  0EFF               	movlw	255
 38656  0018C2  6E32               	movwf	(btemp+8)^0,c
 38657  0018C4  0EFF               	movlw	255
 38658  0018C6  6E33               	movwf	(btemp+9)^0,c
 38659  0018C8  0EFF               	movlw	255
 38660  0018CA  6E34               	movwf	(btemp+10)^0,c
 38661  0018CC  0E7F               	movlw	127
 38662  0018CE  6E35               	movwf	(btemp+11)^0,c
 38663                           
 38664                           ;stkvar	_u @ sp[(-4)+0]
 38665  0018D0  0EFC               	movlw	-4
 38666  0018D2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38667  0018D8  0EFD               	movlw	-3
 38668  0018DA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38669  0018E0  0EFE               	movlw	-2
 38670  0018E2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38671  0018E8  0EFF               	movlw	-1
 38672  0018EA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38673                           
 38674                           ;stkvar	_u @ sp[(-4)+0]
 38675  0018F0  0EFC               	movlw	-4
 38676  0018F2  006F FF8C  F02A    	movff	plusw1,btemp
 38677  0018F8  0EFD               	movlw	-3
 38678  0018FA  006F FF8C  F02B    	movff	plusw1,btemp+1
 38679  001900  0EFE               	movlw	-2
 38680  001902  006F FF8C  F02C    	movff	plusw1,btemp+2
 38681  001908  0EFF               	movlw	-1
 38682  00190A  006F FF8C  F02D    	movff	plusw1,btemp+3
 38683                           
 38684                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 38685  001910  0EFA               	movlw	250
 38686  001912  26E1               	addwf	fsr1l,f,c
 38687  001914  0EFF               	movlw	255
 38688  001916  22E2               	addwfc	fsr1h,f,c
 38689  001918  0012               	return		;funcret
 38690  00191A                     __end_of_nanf:
 38691                           	opt callstack 0
 38692                           
 38693 ;; *************** function _get_raw_result *****************
 38694 ;; Defined at:
 38695 ;;		line 127 in file "daq.c"
 38696 ;; Parameters:    Size  Location     Type
 38697 ;;  index           1  [STACK] const enum E16605
 38698 ;; Auto vars:     Size  Location     Type
 38699 ;;		None
 38700 ;; Return value:  Size  Location     Type
 38701 ;;                  2  [STACK] unsigned short 
 38702 ;; Registers used:
 38703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 38704 ;; Tracked objects:
 38705 ;;		On entry : 0/2
 38706 ;;		On exit  : 0/0
 38707 ;;		Unchanged: 0/0
 38708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38713 ;;Total ram usage:        0 bytes
 38714 ;; Hardware stack levels used:    1
 38715 ;; Hardware stack levels required when called:   15
 38716 ;; This function calls:
 38717 ;;		Nothing
 38718 ;; This function is called by:
 38719 ;;		_main
 38720 ;;		_current_sensor_cal
 38721 ;;		_conv_raw_result
 38722 ;; This function uses a reentrant model
 38723 ;;
 38724                           
 38725                           	psect	text144
 38726  002758                     __ptext144:
 38727                           	opt callstack 0
 38728  002758                     _get_raw_result:
 38729                           	opt callstack 0
 38730                           
 38731                           ;daq.c: 127: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 128: {;daq.c
      +                          : 129:  return R.raw_adc[index];
 38732                           ;stkvar	_index @ sp[(0)+-1]
 38733                           
 38734                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38735                           ;incstack = 0
 38736 ;; hardware stack exceeded
 38737  002758  0EFF               	movlw	-1
 38738  00275A  50E3               	movf	plusw1,w,c
 38739  00275C  0D02               	mullw	2
 38740  00275E  0E00               	movlw	low _R
 38741  002760  24F3               	addwf	243,w,c
 38742  002762  6ED9               	movwf	fsr2l,c
 38743  002764  0E01               	movlw	high _R
 38744  002766  20F4               	addwfc	prodh,w,c
 38745  002768  6EDA               	movwf	fsr2h,c
 38746  00276A  006F FF78  F02A    	movff	postinc2,btemp
 38747  002770  006F FF74  F02B    	movff	postdec2,btemp+1
 38748                           
 38749                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 38750  002776  52E5               	movf	postdec1,f,c
 38751  002778  0012               	return		;funcret
 38752  00277A                     __end_of_get_raw_result:
 38753                           	opt callstack 0
 38754                           
 38755 ;; *************** function ___xxtofl *****************
 38756 ;; Defined at:
 38757 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 38758 ;; Parameters:    Size  Location     Type
 38759 ;;  sign            1  [STACK] unsigned char 
 38760 ;;  val             4  [STACK] long 
 38761 ;; Auto vars:     Size  Location     Type
 38762 ;;  arg             4  [STACK] unsigned long 
 38763 ;;  exp             1  [STACK] unsigned char 
 38764 ;; Return value:  Size  Location     Type
 38765 ;;                  4  [STACK] unsigned char 
 38766 ;; Registers used:
 38767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 38768 ;; Tracked objects:
 38769 ;;		On entry : 0/39
 38770 ;;		On exit  : 0/0
 38771 ;;		Unchanged: 0/0
 38772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38777 ;;Total ram usage:        0 bytes
 38778 ;; Hardware stack levels used:    1
 38779 ;; Hardware stack levels required when called:   15
 38780 ;; This function calls:
 38781 ;;		Nothing
 38782 ;; This function is called by:
 38783 ;;		_conv_raw_result
 38784 ;;		_load_hist_data
 38785 ;;		_init_bsoc
 38786 ;; This function uses a reentrant model
 38787 ;;
 38788                           
 38789                           	psect	text145
 38790  01D64E                     __ptext145:
 38791                           	opt callstack 0
 38792  01D64E                     ___xxtofl:
 38793                           	opt callstack 0
 38794                           
 38795                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38796  01D64E  0E05               	movlw	5
 38797  01D650  26E1               	addwf	fsr1l,f,c
 38798  01D652  0E00               	movlw	0
 38799  01D654  22E2               	addwfc	fsr1h,f,c
 38800                           
 38801                           ;stkvar	_sign @ sp[(-5)+-1]
 38802                           
 38803                           ;incstack = 0
 38804 ;; hardware stack exceeded
 38805  01D656  0EFA               	movlw	-6
 38806  01D658  50E3               	movf	plusw1,w,c
 38807  01D65A  B4D8               	btfsc	status,2,c
 38808  01D65C  D01D               	goto	l12014
 38809                           
 38810                           ;stkvar	_val @ sp[(-5)+-5]
 38811  01D65E  0EF9               	movlw	-7
 38812  01D660  AEE3               	btfss	plusw1,7,c
 38813  01D662  D01A               	goto	l12014
 38814                           
 38815                           ;stkvar	_val @ sp[(-5)+-5]
 38816  01D664  0EF6               	movlw	-10
 38817  01D666  006F FF8C  F032    	movff	plusw1,btemp+8
 38818  01D66C  0EF7               	movlw	-9
 38819  01D66E  006F FF8C  F033    	movff	plusw1,btemp+9
 38820  01D674  0EF8               	movlw	-8
 38821  01D676  006F FF8C  F034    	movff	plusw1,btemp+10
 38822  01D67C  0EF9               	movlw	-7
 38823  01D67E  006F FF8C  F035    	movff	plusw1,btemp+11
 38824  01D684  1E32               	comf	(btemp+8)^0,f,c
 38825  01D686  1E33               	comf	(btemp+9)^0,f,c
 38826  01D688  1E34               	comf	(btemp+10)^0,f,c
 38827  01D68A  1E35               	comf	(btemp+11)^0,f,c
 38828  01D68C  2A32               	incf	(btemp+8)^0,f,c
 38829  01D68E  0E00               	movlw	0
 38830  01D690  2233               	addwfc	(btemp+9)^0,f,c
 38831  01D692  2234               	addwfc	(btemp+10)^0,f,c
 38832  01D694  2235               	addwfc	(btemp+11)^0,f,c
 38833  01D696  D010               	goto	L45
 38834  01D698                     l12014:
 38835                           
 38836                           ;stkvar	_val @ sp[(-5)+-5]
 38837  01D698  0EF6               	movlw	-10
 38838  01D69A  006F FF8C  F032    	movff	plusw1,btemp+8
 38839  01D6A0  0EF7               	movlw	-9
 38840  01D6A2  006F FF8C  F033    	movff	plusw1,btemp+9
 38841  01D6A8  0EF8               	movlw	-8
 38842  01D6AA  006F FF8C  F034    	movff	plusw1,btemp+10
 38843  01D6B0  0EF9               	movlw	-7
 38844  01D6B2  006F FF8C  F035    	movff	plusw1,btemp+11
 38845  01D6B8                     L45:
 38846                           
 38847                           ;stkvar	_arg @ sp[(-5)+0]
 38848  01D6B8  0EFB               	movlw	-5
 38849  01D6BA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38850  01D6C0  0EFC               	movlw	-4
 38851  01D6C2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38852  01D6C8  0EFD               	movlw	-3
 38853  01D6CA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38854  01D6D0  0EFE               	movlw	-2
 38855  01D6D2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38856                           
 38857                           ;stkvar	_val @ sp[(-5)+-5]
 38858  01D6D8  0EF6               	movlw	-10
 38859  01D6DA  50E3               	movf	plusw1,w,c
 38860  01D6DC  E113               	bnz	l12022
 38861  01D6DE  0EF7               	movlw	-9
 38862  01D6E0  50E3               	movf	plusw1,w,c
 38863  01D6E2  E110               	bnz	l12022
 38864  01D6E4  0EF8               	movlw	-8
 38865  01D6E6  50E3               	movf	plusw1,w,c
 38866  01D6E8  E10D               	bnz	l12022
 38867  01D6EA  0EF9               	movlw	-7
 38868  01D6EC  50E3               	movf	plusw1,w,c
 38869  01D6EE  A4D8               	btfss	status,2,c
 38870  01D6F0  D009               	goto	l12022
 38871  01D6F2  0E00               	movlw	0
 38872  01D6F4  6E2A               	movwf	btemp^0,c
 38873  01D6F6  0E00               	movlw	0
 38874  01D6F8  6E2B               	movwf	(btemp+1)^0,c
 38875  01D6FA  0E00               	movlw	0
 38876  01D6FC  6E2C               	movwf	(btemp+2)^0,c
 38877  01D6FE  0E00               	movlw	0
 38878  01D700  6E2D               	movwf	(btemp+3)^0,c
 38879  01D702  D0A2               	goto	l3382
 38880  01D704                     l12022:
 38881  01D704  0E96               	movlw	150
 38882  01D706  6E35               	movwf	(btemp+11)^0,c
 38883                           
 38884                           ;stkvar	_exp @ sp[(-5)+4]
 38885  01D708  0EFF               	movlw	-1
 38886  01D70A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38887  01D710  D00B               	goto	l12026
 38888  01D712                     l12024:
 38889                           
 38890                           ;stkvar	_exp @ sp[(-5)+4]
 38891  01D712  0EFF               	movlw	-1
 38892  01D714  2AE3               	incf	plusw1,f,c
 38893                           
 38894                           ;stkvar	_arg @ sp[(-5)+0]
 38895  01D716  90D8               	bcf	status,0,c
 38896  01D718  0EFE               	movlw	-2
 38897  01D71A  32E3               	rrcf	plusw1,f,c
 38898  01D71C  0EFD               	movlw	-3
 38899  01D71E  32E3               	rrcf	plusw1,f,c
 38900  01D720  0EFC               	movlw	-4
 38901  01D722  32E3               	rrcf	plusw1,f,c
 38902  01D724  0EFB               	movlw	-5
 38903  01D726  32E3               	rrcf	plusw1,f,c
 38904  01D728                     l12026:
 38905                           
 38906                           ;stkvar	_arg @ sp[(-5)+0]
 38907  01D728  50E1               	movf	fsr1l,w,c
 38908  01D72A  0FFB               	addlw	-5
 38909  01D72C  6ED9               	movwf	fsr2l,c
 38910  01D72E  50E2               	movf	fsr1h,w,c
 38911  01D730  6EDA               	movwf	fsr2h,c
 38912  01D732  0EFF               	movlw	255
 38913  01D734  22DA               	addwfc	fsr2h,f,c
 38914  01D736  52DE               	movf	postinc2,f,c
 38915  01D738  52DE               	movf	postinc2,f,c
 38916  01D73A  52DE               	movf	postinc2,f,c
 38917  01D73C  0EFE               	movlw	254
 38918  01D73E  14DD               	andwf	postdec2,w,c
 38919  01D740  B4D8               	btfsc	status,2,c
 38920  01D742  D018               	goto	l12034
 38921  01D744  D7E6               	goto	l12024
 38922  01D746                     l12028:
 38923                           
 38924                           ;stkvar	_exp @ sp[(-5)+4]
 38925  01D746  0EFF               	movlw	-1
 38926  01D748  2AE3               	incf	plusw1,f,c
 38927                           
 38928                           ;stkvar	_arg @ sp[(-5)+0]
 38929  01D74A  50E1               	movf	fsr1l,w,c
 38930  01D74C  0FFB               	addlw	-5
 38931  01D74E  6ED9               	movwf	fsr2l,c
 38932  01D750  50E2               	movf	fsr1h,w,c
 38933  01D752  6EDA               	movwf	fsr2h,c
 38934  01D754  0EFF               	movlw	255
 38935  01D756  22DA               	addwfc	fsr2h,f,c
 38936  01D758  2ADE               	incf	postinc2,f,c
 38937  01D75A  0E00               	movlw	0
 38938  01D75C  22DE               	addwfc	postinc2,f,c
 38939  01D75E  22DE               	addwfc	postinc2,f,c
 38940  01D760  22DE               	addwfc	postinc2,f,c
 38941                           
 38942                           ;stkvar	_arg @ sp[(-5)+0]
 38943  01D762  90D8               	bcf	status,0,c
 38944  01D764  0EFE               	movlw	-2
 38945  01D766  32E3               	rrcf	plusw1,f,c
 38946  01D768  0EFD               	movlw	-3
 38947  01D76A  32E3               	rrcf	plusw1,f,c
 38948  01D76C  0EFC               	movlw	-4
 38949  01D76E  32E3               	rrcf	plusw1,f,c
 38950  01D770  0EFB               	movlw	-5
 38951  01D772  32E3               	rrcf	plusw1,f,c
 38952  01D774                     l12034:
 38953                           
 38954                           ;stkvar	_arg @ sp[(-5)+0]
 38955  01D774  50E1               	movf	fsr1l,w,c
 38956  01D776  0FFB               	addlw	-5
 38957  01D778  6ED9               	movwf	fsr2l,c
 38958  01D77A  50E2               	movf	fsr1h,w,c
 38959  01D77C  6EDA               	movwf	fsr2h,c
 38960  01D77E  0EFF               	movlw	255
 38961  01D780  22DA               	addwfc	fsr2h,f,c
 38962  01D782  52DE               	movf	postinc2,f,c
 38963  01D784  52DE               	movf	postinc2,f,c
 38964  01D786  52DE               	movf	postinc2,f,c
 38965  01D788  0EFF               	movlw	255
 38966  01D78A  14DD               	andwf	postdec2,w,c
 38967  01D78C  B4D8               	btfsc	status,2,c
 38968  01D78E  D00C               	goto	l12038
 38969  01D790  D7DA               	goto	l12028
 38970  01D792                     l12036:
 38971                           
 38972                           ;stkvar	_exp @ sp[(-5)+4]
 38973  01D792  0EFF               	movlw	-1
 38974  01D794  06E3               	decf	plusw1,f,c
 38975                           
 38976                           ;stkvar	_arg @ sp[(-5)+0]
 38977  01D796  90D8               	bcf	status,0,c
 38978  01D798  0EFB               	movlw	-5
 38979  01D79A  36E3               	rlcf	plusw1,f,c
 38980  01D79C  0EFC               	movlw	-4
 38981  01D79E  36E3               	rlcf	plusw1,f,c
 38982  01D7A0  0EFD               	movlw	-3
 38983  01D7A2  36E3               	rlcf	plusw1,f,c
 38984  01D7A4  0EFE               	movlw	-2
 38985  01D7A6  36E3               	rlcf	plusw1,f,c
 38986  01D7A8                     l12038:
 38987                           
 38988                           ;stkvar	_arg @ sp[(-5)+0]
 38989  01D7A8  0EFD               	movlw	-3
 38990  01D7AA  BEE3               	btfsc	plusw1,7,c
 38991  01D7AC  D007               	goto	u11350
 38992                           
 38993                           ;stkvar	_exp @ sp[(-5)+4]
 38994  01D7AE  0EFF               	movlw	-1
 38995  01D7B0  006F FF8C  F02A    	movff	plusw1,btemp
 38996  01D7B6  0E02               	movlw	2
 38997  01D7B8  602A               	cpfslt	btemp^0,c
 38998  01D7BA  D7EB               	goto	l12036
 38999  01D7BC                     u11350:
 39000                           
 39001                           ;stkvar	_exp @ sp[(-5)+4]
 39002  01D7BC  0EFF               	movlw	-1
 39003  01D7BE  B0E3               	btfsc	plusw1,0,c
 39004  01D7C0  D002               	goto	l12046
 39005                           
 39006                           ;stkvar	_arg @ sp[(-5)+0]
 39007  01D7C2  0EFD               	movlw	-3
 39008  01D7C4  9EE3               	bcf	plusw1,7,c
 39009  01D7C6                     l12046:
 39010                           
 39011                           ;stkvar	_exp @ sp[(-5)+4]
 39012  01D7C6  50E1               	movf	fsr1l,w,c
 39013  01D7C8  0FFF               	addlw	-1
 39014  01D7CA  6ED9               	movwf	fsr2l,c
 39015  01D7CC  50E2               	movf	fsr1h,w,c
 39016  01D7CE  6EDA               	movwf	fsr2h,c
 39017  01D7D0  0EFF               	movlw	255
 39018  01D7D2  22DA               	addwfc	fsr2h,f,c
 39019  01D7D4  90D8               	bcf	status,0,c
 39020  01D7D6  32DF               	rrcf	indf2,f,c
 39021                           
 39022                           ;stkvar	_exp @ sp[(-5)+4]
 39023  01D7D8  0EFF               	movlw	-1
 39024  01D7DA  006F FF8C  F035    	movff	plusw1,btemp+11
 39025  01D7E0  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 39026  01D7E6  6A2F               	clrf	(btemp+5)^0,c
 39027  01D7E8  6A30               	clrf	(btemp+6)^0,c
 39028  01D7EA  6A31               	clrf	(btemp+7)^0,c
 39029  01D7EC  0060  F0B8  F031   	movff	btemp+4,btemp+7
 39030  01D7F2  6A30               	clrf	(btemp+6)^0,c
 39031  01D7F4  6A2F               	clrf	(btemp+5)^0,c
 39032  01D7F6  6A2E               	clrf	(btemp+4)^0,c
 39033                           
 39034                           ;stkvar	_arg @ sp[(-5)+0]
 39035  01D7F8  50E1               	movf	fsr1l,w,c
 39036  01D7FA  0FFB               	addlw	-5
 39037  01D7FC  6ED9               	movwf	fsr2l,c
 39038  01D7FE  50E2               	movf	fsr1h,w,c
 39039  01D800  6EDA               	movwf	fsr2h,c
 39040  01D802  0EFF               	movlw	255
 39041  01D804  22DA               	addwfc	fsr2h,f,c
 39042  01D806  502E               	movf	(btemp+4)^0,w,c
 39043  01D808  12DE               	iorwf	postinc2,f,c
 39044  01D80A  502F               	movf	(btemp+5)^0,w,c
 39045  01D80C  12DE               	iorwf	postinc2,f,c
 39046  01D80E  5030               	movf	(btemp+6)^0,w,c
 39047  01D810  12DE               	iorwf	postinc2,f,c
 39048  01D812  5031               	movf	(btemp+7)^0,w,c
 39049  01D814  12DE               	iorwf	postinc2,f,c
 39050                           
 39051                           ;stkvar	_sign @ sp[(-5)+-1]
 39052  01D816  0EFA               	movlw	-6
 39053  01D818  50E3               	movf	plusw1,w,c
 39054  01D81A  B4D8               	btfsc	status,2,c
 39055  01D81C  D005               	goto	l12056
 39056                           
 39057                           ;stkvar	_val @ sp[(-5)+-5]
 39058  01D81E  0EF9               	movlw	-7
 39059  01D820  AEE3               	btfss	plusw1,7,c
 39060  01D822  D002               	goto	l12056
 39061                           
 39062                           ;stkvar	_arg @ sp[(-5)+0]
 39063  01D824  0EFE               	movlw	-2
 39064  01D826  8EE3               	bsf	plusw1,7,c
 39065  01D828                     l12056:
 39066                           
 39067                           ;stkvar	_arg @ sp[(-5)+0]
 39068  01D828  0EFB               	movlw	-5
 39069  01D82A  006F FF8C  F02A    	movff	plusw1,btemp
 39070  01D830  0EFC               	movlw	-4
 39071  01D832  006F FF8C  F02B    	movff	plusw1,btemp+1
 39072  01D838  0EFD               	movlw	-3
 39073  01D83A  006F FF8C  F02C    	movff	plusw1,btemp+2
 39074  01D840  0EFE               	movlw	-2
 39075  01D842  006F FF8C  F02D    	movff	plusw1,btemp+3
 39076  01D848                     l3382:
 39077                           
 39078                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 39079  01D848  0EF6               	movlw	246
 39080  01D84A  26E1               	addwf	fsr1l,f,c
 39081  01D84C  0EFF               	movlw	255
 39082  01D84E  22E2               	addwfc	fsr1h,f,c
 39083  01D850  0012               	return		;funcret
 39084  01D852                     __end_of___xxtofl:
 39085                           	opt callstack 0
 39086                           
 39087 ;; *************** function ___fldiv *****************
 39088 ;; Defined at:
 39089 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 39090 ;; Parameters:    Size  Location     Type
 39091 ;;  b               4  [STACK] unsigned char 
 39092 ;;  a               4  [STACK] unsigned char 
 39093 ;; Auto vars:     Size  Location     Type
 39094 ;;  grs             4  [STACK] unsigned long 
 39095 ;;  rem             4  [STACK] unsigned long 
 39096 ;;  new_exp         2  [STACK] short 
 39097 ;;  aexp            1  [STACK] unsigned char 
 39098 ;;  bexp            1  [STACK] unsigned char 
 39099 ;;  sign            1  [STACK] unsigned char 
 39100 ;; Return value:  Size  Location     Type
 39101 ;;                  4  [STACK] unsigned char 
 39102 ;; Registers used:
 39103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 39104 ;; Tracked objects:
 39105 ;;		On entry : 0/3D
 39106 ;;		On exit  : 0/0
 39107 ;;		Unchanged: 0/0
 39108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39113 ;;Total ram usage:        0 bytes
 39114 ;; Hardware stack levels used:    1
 39115 ;; Hardware stack levels required when called:   15
 39116 ;; This function calls:
 39117 ;;		Nothing
 39118 ;; This function is called by:
 39119 ;;		_conv_raw_result
 39120 ;;		_convert_dac_raw
 39121 ;;		_calc_bsoc
 39122 ;;		_init_bsoc
 39123 ;;		_esr_check
 39124 ;;		_efgtoa
 39125 ;; This function uses a reentrant model
 39126 ;;
 39127                           
 39128                           	psect	text146
 39129  017CA0                     __ptext146:
 39130                           	opt callstack 0
 39131  017CA0                     ___fldiv:
 39132                           	opt callstack 0
 39133                           
 39134                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 39135  017CA0  0E0D               	movlw	13
 39136  017CA2  26E1               	addwf	fsr1l,f,c
 39137  017CA4  0E00               	movlw	0
 39138  017CA6  22E2               	addwfc	fsr1h,f,c
 39139                           
 39140                           ;stkvar	_b @ sp[(-13)+-4]
 39141                           
 39142                           ;incstack = 0
 39143 ;; hardware stack exceeded
 39144  017CA8  0EF2               	movlw	242
 39145  017CAA  24E1               	addwf	fsr1l,w,c
 39146  017CAC  6ED9               	movwf	fsr2l,c
 39147  017CAE  0EFF               	movlw	255
 39148  017CB0  20E2               	addwfc	fsr1h,w,c
 39149  017CB2  6EDA               	movwf	fsr2h,c
 39150  017CB4  50DF               	movf	indf2,w,c
 39151  017CB6  6E35               	movwf	(btemp+11)^0,c
 39152  017CB8  0E80               	movlw	128
 39153  017CBA  1635               	andwf	(btemp+11)^0,f,c
 39154                           
 39155                           ;stkvar	_sign @ sp[(-13)+12]
 39156  017CBC  0EFF               	movlw	-1
 39157  017CBE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39158                           
 39159                           ;stkvar	_b @ sp[(-13)+-4]
 39160  017CC4  0EF2               	movlw	242
 39161  017CC6  24E1               	addwf	fsr1l,w,c
 39162  017CC8  6ED9               	movwf	fsr2l,c
 39163  017CCA  0EFF               	movlw	255
 39164  017CCC  20E2               	addwfc	fsr1h,w,c
 39165  017CCE  6EDA               	movwf	fsr2h,c
 39166  017CD0  50DF               	movf	indf2,w,c
 39167  017CD2  6E35               	movwf	(btemp+11)^0,c
 39168  017CD4  90D8               	bcf	status,0,c
 39169  017CD6  3435               	rlcf	(btemp+11)^0,w,c
 39170  017CD8  6E34               	movwf	(btemp+10)^0,c
 39171                           
 39172                           ;stkvar	_bexp @ sp[(-13)+11]
 39173  017CDA  0EFE               	movlw	-2
 39174  017CDC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39175                           
 39176                           ;stkvar	_b @ sp[(-13)+-4]
 39177  017CE2  0EF1               	movlw	241
 39178  017CE4  24E1               	addwf	fsr1l,w,c
 39179  017CE6  6ED9               	movwf	fsr2l,c
 39180  017CE8  0EFF               	movlw	255
 39181  017CEA  20E2               	addwfc	fsr1h,w,c
 39182  017CEC  6EDA               	movwf	fsr2h,c
 39183  017CEE  AEDF               	btfss	indf2,7,c
 39184  017CF0  D002               	goto	l10312
 39185                           
 39186                           ;stkvar	_bexp @ sp[(-13)+11]
 39187  017CF2  0EFE               	movlw	-2
 39188  017CF4  80E3               	bsf	plusw1,0,c
 39189  017CF6                     l10312:
 39190                           
 39191                           ;stkvar	_bexp @ sp[(-13)+11]
 39192  017CF6  0EFE               	movlw	-2
 39193  017CF8  50E3               	movf	plusw1,w,c
 39194  017CFA  B4D8               	btfsc	status,2,c
 39195  017CFC  D027               	goto	l10322
 39196                           
 39197                           ;stkvar	_bexp @ sp[(-13)+11]
 39198  017CFE  0EFE               	movlw	-2
 39199  017D00  28E3               	incf	plusw1,w,c
 39200  017D02  A4D8               	btfss	status,2,c
 39201  017D04  D018               	goto	l10318
 39202  017D06  0E00               	movlw	0
 39203  017D08  6E32               	movwf	(btemp+8)^0,c
 39204  017D0A  0E00               	movlw	0
 39205  017D0C  6E33               	movwf	(btemp+9)^0,c
 39206  017D0E  0E00               	movlw	0
 39207  017D10  6E34               	movwf	(btemp+10)^0,c
 39208  017D12  0E00               	movlw	0
 39209  017D14  6E35               	movwf	(btemp+11)^0,c
 39210                           
 39211                           ;stkvar	_b @ sp[(-13)+-4]
 39212  017D16  0EEF               	movlw	-17
 39213  017D18  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39214  017D1E  0EF0               	movlw	-16
 39215  017D20  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39216  017D26  0EF1               	movlw	-15
 39217  017D28  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39218  017D2E  0EF2               	movlw	-14
 39219  017D30  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39220  017D36                     l10318:
 39221                           
 39222                           ;stkvar	_b @ sp[(-13)+-4]
 39223  017D36  0EF1               	movlw	-15
 39224  017D38  8EE3               	bsf	plusw1,7,c
 39225                           
 39226                           ;stkvar	_b @ sp[(-13)+-4]
 39227  017D3A  0EF2               	movlw	242
 39228  017D3C  24E1               	addwf	fsr1l,w,c
 39229  017D3E  6ED9               	movwf	fsr2l,c
 39230  017D40  0EFF               	movlw	255
 39231  017D42  20E2               	addwfc	fsr1h,w,c
 39232  017D44  6EDA               	movwf	fsr2h,c
 39233  017D46  0E00               	movlw	0
 39234  017D48  6EDF               	movwf	indf2,c
 39235  017D4A  D018               	goto	l10324
 39236  017D4C                     l10322:
 39237  017D4C  0E00               	movlw	0
 39238  017D4E  6E32               	movwf	(btemp+8)^0,c
 39239  017D50  0E00               	movlw	0
 39240  017D52  6E33               	movwf	(btemp+9)^0,c
 39241  017D54  0E00               	movlw	0
 39242  017D56  6E34               	movwf	(btemp+10)^0,c
 39243  017D58  0E00               	movlw	0
 39244  017D5A  6E35               	movwf	(btemp+11)^0,c
 39245                           
 39246                           ;stkvar	_b @ sp[(-13)+-4]
 39247  017D5C  0EEF               	movlw	-17
 39248  017D5E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39249  017D64  0EF0               	movlw	-16
 39250  017D66  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39251  017D6C  0EF1               	movlw	-15
 39252  017D6E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39253  017D74  0EF2               	movlw	-14
 39254  017D76  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39255  017D7C                     l10324:
 39256                           
 39257                           ;stkvar	_a @ sp[(-13)+-8]
 39258  017D7C  0EEE               	movlw	238
 39259  017D7E  24E1               	addwf	fsr1l,w,c
 39260  017D80  6ED9               	movwf	fsr2l,c
 39261  017D82  0EFF               	movlw	255
 39262  017D84  20E2               	addwfc	fsr1h,w,c
 39263  017D86  6EDA               	movwf	fsr2h,c
 39264  017D88  50DF               	movf	indf2,w,c
 39265  017D8A  6E35               	movwf	(btemp+11)^0,c
 39266  017D8C  0E80               	movlw	128
 39267  017D8E  1635               	andwf	(btemp+11)^0,f,c
 39268                           
 39269                           ;stkvar	_sign @ sp[(-13)+12]
 39270  017D90  50E1               	movf	fsr1l,w,c
 39271  017D92  0FFF               	addlw	-1
 39272  017D94  6ED9               	movwf	fsr2l,c
 39273  017D96  50E2               	movf	fsr1h,w,c
 39274  017D98  6EDA               	movwf	fsr2h,c
 39275  017D9A  0EFF               	movlw	255
 39276  017D9C  22DA               	addwfc	fsr2h,f,c
 39277  017D9E  5035               	movf	(btemp+11)^0,w,c
 39278  017DA0  1ADF               	xorwf	indf2,f,c
 39279                           
 39280                           ;stkvar	_a @ sp[(-13)+-8]
 39281  017DA2  0EEE               	movlw	238
 39282  017DA4  24E1               	addwf	fsr1l,w,c
 39283  017DA6  6ED9               	movwf	fsr2l,c
 39284  017DA8  0EFF               	movlw	255
 39285  017DAA  20E2               	addwfc	fsr1h,w,c
 39286  017DAC  6EDA               	movwf	fsr2h,c
 39287  017DAE  50DF               	movf	indf2,w,c
 39288  017DB0  6E35               	movwf	(btemp+11)^0,c
 39289  017DB2  90D8               	bcf	status,0,c
 39290  017DB4  3435               	rlcf	(btemp+11)^0,w,c
 39291  017DB6  6E34               	movwf	(btemp+10)^0,c
 39292                           
 39293                           ;stkvar	_aexp @ sp[(-13)+10]
 39294  017DB8  0EFD               	movlw	-3
 39295  017DBA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39296                           
 39297                           ;stkvar	_a @ sp[(-13)+-8]
 39298  017DC0  0EED               	movlw	237
 39299  017DC2  24E1               	addwf	fsr1l,w,c
 39300  017DC4  6ED9               	movwf	fsr2l,c
 39301  017DC6  0EFF               	movlw	255
 39302  017DC8  20E2               	addwfc	fsr1h,w,c
 39303  017DCA  6EDA               	movwf	fsr2h,c
 39304  017DCC  AEDF               	btfss	indf2,7,c
 39305  017DCE  D002               	goto	l10332
 39306                           
 39307                           ;stkvar	_aexp @ sp[(-13)+10]
 39308  017DD0  0EFD               	movlw	-3
 39309  017DD2  80E3               	bsf	plusw1,0,c
 39310  017DD4                     l10332:
 39311                           
 39312                           ;stkvar	_aexp @ sp[(-13)+10]
 39313  017DD4  0EFD               	movlw	-3
 39314  017DD6  50E3               	movf	plusw1,w,c
 39315  017DD8  B4D8               	btfsc	status,2,c
 39316  017DDA  D027               	goto	l10342
 39317                           
 39318                           ;stkvar	_aexp @ sp[(-13)+10]
 39319  017DDC  0EFD               	movlw	-3
 39320  017DDE  28E3               	incf	plusw1,w,c
 39321  017DE0  A4D8               	btfss	status,2,c
 39322  017DE2  D018               	goto	l10338
 39323  017DE4  0E00               	movlw	0
 39324  017DE6  6E32               	movwf	(btemp+8)^0,c
 39325  017DE8  0E00               	movlw	0
 39326  017DEA  6E33               	movwf	(btemp+9)^0,c
 39327  017DEC  0E00               	movlw	0
 39328  017DEE  6E34               	movwf	(btemp+10)^0,c
 39329  017DF0  0E00               	movlw	0
 39330  017DF2  6E35               	movwf	(btemp+11)^0,c
 39331                           
 39332                           ;stkvar	_a @ sp[(-13)+-8]
 39333  017DF4  0EEB               	movlw	-21
 39334  017DF6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39335  017DFC  0EEC               	movlw	-20
 39336  017DFE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39337  017E04  0EED               	movlw	-19
 39338  017E06  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39339  017E0C  0EEE               	movlw	-18
 39340  017E0E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39341  017E14                     l10338:
 39342                           
 39343                           ;stkvar	_a @ sp[(-13)+-8]
 39344  017E14  0EED               	movlw	-19
 39345  017E16  8EE3               	bsf	plusw1,7,c
 39346                           
 39347                           ;stkvar	_a @ sp[(-13)+-8]
 39348  017E18  0EEE               	movlw	238
 39349  017E1A  24E1               	addwf	fsr1l,w,c
 39350  017E1C  6ED9               	movwf	fsr2l,c
 39351  017E1E  0EFF               	movlw	255
 39352  017E20  20E2               	addwfc	fsr1h,w,c
 39353  017E22  6EDA               	movwf	fsr2h,c
 39354  017E24  0E00               	movlw	0
 39355  017E26  6EDF               	movwf	indf2,c
 39356  017E28  D018               	goto	l10344
 39357  017E2A                     l10342:
 39358  017E2A  0E00               	movlw	0
 39359  017E2C  6E32               	movwf	(btemp+8)^0,c
 39360  017E2E  0E00               	movlw	0
 39361  017E30  6E33               	movwf	(btemp+9)^0,c
 39362  017E32  0E00               	movlw	0
 39363  017E34  6E34               	movwf	(btemp+10)^0,c
 39364  017E36  0E00               	movlw	0
 39365  017E38  6E35               	movwf	(btemp+11)^0,c
 39366                           
 39367                           ;stkvar	_a @ sp[(-13)+-8]
 39368  017E3A  0EEB               	movlw	-21
 39369  017E3C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39370  017E42  0EEC               	movlw	-20
 39371  017E44  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39372  017E4A  0EED               	movlw	-19
 39373  017E4C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39374  017E52  0EEE               	movlw	-18
 39375  017E54  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39376  017E5A                     l10344:
 39377                           
 39378                           ;stkvar	_a @ sp[(-13)+-8]
 39379  017E5A  0EEB               	movlw	-21
 39380  017E5C  50E3               	movf	plusw1,w,c
 39381  017E5E  E139               	bnz	l10356
 39382  017E60  0EEC               	movlw	-20
 39383  017E62  50E3               	movf	plusw1,w,c
 39384  017E64  E136               	bnz	l10356
 39385  017E66  0EED               	movlw	-19
 39386  017E68  50E3               	movf	plusw1,w,c
 39387  017E6A  E133               	bnz	l10356
 39388  017E6C  0EEE               	movlw	-18
 39389  017E6E  50E3               	movf	plusw1,w,c
 39390  017E70  A4D8               	btfss	status,2,c
 39391  017E72  D02F               	goto	l10356
 39392                           
 39393                           ;stkvar	_b @ sp[(-13)+-4]
 39394  017E74  0EEF               	movlw	-17
 39395  017E76  6AE3               	clrf	plusw1,c
 39396  017E78  0EF0               	movlw	-16
 39397  017E7A  6AE3               	clrf	plusw1,c
 39398  017E7C  0EF1               	movlw	-15
 39399  017E7E  6AE3               	clrf	plusw1,c
 39400  017E80  0EF2               	movlw	-14
 39401  017E82  6AE3               	clrf	plusw1,c
 39402                           
 39403                           ;stkvar	_b @ sp[(-13)+-4]
 39404  017E84  0EF1               	movlw	241
 39405  017E86  24E1               	addwf	fsr1l,w,c
 39406  017E88  6ED9               	movwf	fsr2l,c
 39407  017E8A  0EFF               	movlw	255
 39408  017E8C  20E2               	addwfc	fsr1h,w,c
 39409  017E8E  6EDA               	movwf	fsr2h,c
 39410  017E90  0E80               	movlw	128
 39411  017E92  12DE               	iorwf	postinc2,f,c
 39412  017E94  0E7F               	movlw	127
 39413  017E96  12DD               	iorwf	postdec2,f,c
 39414  017E98                     l10350:
 39415                           
 39416                           ;stkvar	_sign @ sp[(-13)+12]
 39417  017E98  0EFF               	movlw	-1
 39418  017E9A  006F FF8C  F035    	movff	plusw1,btemp+11
 39419                           
 39420                           ;stkvar	_b @ sp[(-13)+-4]
 39421  017EA0  0EF2               	movlw	242
 39422  017EA2  24E1               	addwf	fsr1l,w,c
 39423  017EA4  6ED9               	movwf	fsr2l,c
 39424  017EA6  0EFF               	movlw	255
 39425  017EA8  20E2               	addwfc	fsr1h,w,c
 39426  017EAA  6EDA               	movwf	fsr2h,c
 39427  017EAC  5035               	movf	(btemp+11)^0,w,c
 39428  017EAE  12DF               	iorwf	indf2,f,c
 39429                           
 39430                           ;stkvar	_b @ sp[(-13)+-4]
 39431  017EB0  0EEF               	movlw	-17
 39432  017EB2  006F FF8C  F02A    	movff	plusw1,btemp
 39433  017EB8  0EF0               	movlw	-16
 39434  017EBA  006F FF8C  F02B    	movff	plusw1,btemp+1
 39435  017EC0  0EF1               	movlw	-15
 39436  017EC2  006F FF8C  F02C    	movff	plusw1,btemp+2
 39437  017EC8  0EF2               	movlw	-14
 39438  017ECA  006F FF8C  F02D    	movff	plusw1,btemp+3
 39439  017ED0  D19F               	goto	l3306
 39440  017ED2                     l10356:
 39441                           
 39442                           ;stkvar	_bexp @ sp[(-13)+11]
 39443  017ED2  0EFE               	movlw	-2
 39444  017ED4  50E3               	movf	plusw1,w,c
 39445  017ED6  A4D8               	btfss	status,2,c
 39446  017ED8  D009               	goto	l10364
 39447  017EDA  0E00               	movlw	0
 39448  017EDC  6E2A               	movwf	btemp^0,c
 39449  017EDE  0E00               	movlw	0
 39450  017EE0  6E2B               	movwf	(btemp+1)^0,c
 39451  017EE2  0E00               	movlw	0
 39452  017EE4  6E2C               	movwf	(btemp+2)^0,c
 39453  017EE6  0E00               	movlw	0
 39454  017EE8  6E2D               	movwf	(btemp+3)^0,c
 39455  017EEA  D192               	goto	l3306
 39456  017EEC                     l10364:
 39457                           
 39458                           ;stkvar	_bexp @ sp[(-13)+11]
 39459  017EEC  0EFE               	movlw	-2
 39460  017EEE  50E3               	movf	plusw1,w,c
 39461  017EF0  6E34               	movwf	(btemp+10)^0,c
 39462  017EF2  6A35               	clrf	(btemp+11)^0,c
 39463                           
 39464                           ;stkvar	_aexp @ sp[(-13)+10]
 39465  017EF4  0EFD               	movlw	-3
 39466  017EF6  50E3               	movf	plusw1,w,c
 39467  017EF8  5E34               	subwf	(btemp+10)^0,f,c
 39468  017EFA  0E00               	movlw	0
 39469  017EFC  5A35               	subwfb	(btemp+11)^0,f,c
 39470  017EFE  0E7F               	movlw	127
 39471  017F00  2634               	addwf	(btemp+10)^0,f,c
 39472  017F02  0E00               	movlw	0
 39473  017F04  2235               	addwfc	(btemp+11)^0,f,c
 39474                           
 39475                           ;stkvar	_new_exp @ sp[(-13)+8]
 39476  017F06  0EFB               	movlw	-5
 39477  017F08  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39478  017F0E  0EFC               	movlw	-4
 39479  017F10  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39480                           
 39481                           ;stkvar	_b @ sp[(-13)+-4]
 39482  017F16  0EEF               	movlw	-17
 39483  017F18  006F FF8C  F032    	movff	plusw1,btemp+8
 39484  017F1E  0EF0               	movlw	-16
 39485  017F20  006F FF8C  F033    	movff	plusw1,btemp+9
 39486  017F26  0EF1               	movlw	-15
 39487  017F28  006F FF8C  F034    	movff	plusw1,btemp+10
 39488  017F2E  0EF2               	movlw	-14
 39489  017F30  006F FF8C  F035    	movff	plusw1,btemp+11
 39490                           
 39491                           ;stkvar	_rem @ sp[(-13)+4]
 39492  017F36  0EF7               	movlw	-9
 39493  017F38  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39494  017F3E  0EF8               	movlw	-8
 39495  017F40  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39496  017F46  0EF9               	movlw	-7
 39497  017F48  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39498  017F4E  0EFA               	movlw	-6
 39499  017F50  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39500                           
 39501                           ;stkvar	_b @ sp[(-13)+-4]
 39502  017F56  0EEF               	movlw	-17
 39503  017F58  6AE3               	clrf	plusw1,c
 39504  017F5A  0EF0               	movlw	-16
 39505  017F5C  6AE3               	clrf	plusw1,c
 39506  017F5E  0EF1               	movlw	-15
 39507  017F60  6AE3               	clrf	plusw1,c
 39508  017F62  0EF2               	movlw	-14
 39509  017F64  6AE3               	clrf	plusw1,c
 39510                           
 39511                           ;stkvar	_grs @ sp[(-13)+0]
 39512  017F66  0EF3               	movlw	-13
 39513  017F68  6AE3               	clrf	plusw1,c
 39514  017F6A  0EF4               	movlw	-12
 39515  017F6C  6AE3               	clrf	plusw1,c
 39516  017F6E  0EF5               	movlw	-11
 39517  017F70  6AE3               	clrf	plusw1,c
 39518  017F72  0EF6               	movlw	-10
 39519  017F74  6AE3               	clrf	plusw1,c
 39520                           
 39521                           ;stkvar	_aexp @ sp[(-13)+10]
 39522  017F76  0EFD               	movlw	-3
 39523  017F78  6AE3               	clrf	plusw1,c
 39524  017F7A  D050               	goto	l10392
 39525  017F7C                     l10374:
 39526                           
 39527                           ;stkvar	_aexp @ sp[(-13)+10]
 39528  017F7C  0EFD               	movlw	-3
 39529  017F7E  50E3               	movf	plusw1,w,c
 39530  017F80  B4D8               	btfsc	status,2,c
 39531  017F82  D020               	goto	l10384
 39532                           
 39533                           ;stkvar	_rem @ sp[(-13)+4]
 39534  017F84  90D8               	bcf	status,0,c
 39535  017F86  0EF7               	movlw	-9
 39536  017F88  36E3               	rlcf	plusw1,f,c
 39537  017F8A  0EF8               	movlw	-8
 39538  017F8C  36E3               	rlcf	plusw1,f,c
 39539  017F8E  0EF9               	movlw	-7
 39540  017F90  36E3               	rlcf	plusw1,f,c
 39541  017F92  0EFA               	movlw	-6
 39542  017F94  36E3               	rlcf	plusw1,f,c
 39543                           
 39544                           ;stkvar	_b @ sp[(-13)+-4]
 39545  017F96  90D8               	bcf	status,0,c
 39546  017F98  0EEF               	movlw	-17
 39547  017F9A  36E3               	rlcf	plusw1,f,c
 39548  017F9C  0EF0               	movlw	-16
 39549  017F9E  36E3               	rlcf	plusw1,f,c
 39550  017FA0  0EF1               	movlw	-15
 39551  017FA2  36E3               	rlcf	plusw1,f,c
 39552  017FA4  0EF2               	movlw	-14
 39553  017FA6  36E3               	rlcf	plusw1,f,c
 39554                           
 39555                           ;stkvar	_grs @ sp[(-13)+0]
 39556  017FA8  0EF6               	movlw	-10
 39557  017FAA  AEE3               	btfss	plusw1,7,c
 39558  017FAC  D002               	goto	l10382
 39559                           
 39560                           ;stkvar	_b @ sp[(-13)+-4]
 39561  017FAE  0EEF               	movlw	-17
 39562  017FB0  80E3               	bsf	plusw1,0,c
 39563  017FB2                     l10382:
 39564                           
 39565                           ;stkvar	_grs @ sp[(-13)+0]
 39566  017FB2  90D8               	bcf	status,0,c
 39567  017FB4  0EF3               	movlw	-13
 39568  017FB6  36E3               	rlcf	plusw1,f,c
 39569  017FB8  0EF4               	movlw	-12
 39570  017FBA  36E3               	rlcf	plusw1,f,c
 39571  017FBC  0EF5               	movlw	-11
 39572  017FBE  36E3               	rlcf	plusw1,f,c
 39573  017FC0  0EF6               	movlw	-10
 39574  017FC2  36E3               	rlcf	plusw1,f,c
 39575  017FC4                     l10384:
 39576                           
 39577                           ;stkvar	_a @ sp[(-13)+-8]
 39578                           ;stkvar	_rem @ sp[(-13)+4]
 39579  017FC4  50E1               	movf	fsr1l,w,c
 39580  017FC6  0FF7               	addlw	-9
 39581  017FC8  6ED9               	movwf	fsr2l,c
 39582  017FCA  50E2               	movf	fsr1h,w,c
 39583  017FCC  6EDA               	movwf	fsr2h,c
 39584  017FCE  0EFF               	movlw	255
 39585  017FD0  22DA               	addwfc	fsr2h,f,c
 39586  017FD2  0EEB               	movlw	-21
 39587  017FD4  50E3               	movf	plusw1,w,c
 39588  017FD6  5CDE               	subwf	postinc2,w,c
 39589  017FD8  0EEC               	movlw	-20
 39590  017FDA  50E3               	movf	plusw1,w,c
 39591  017FDC  58DE               	subwfb	postinc2,w,c
 39592  017FDE  0EED               	movlw	-19
 39593  017FE0  50E3               	movf	plusw1,w,c
 39594  017FE2  58DE               	subwfb	postinc2,w,c
 39595  017FE4  0EEE               	movlw	-18
 39596  017FE6  50E3               	movf	plusw1,w,c
 39597  017FE8  58DE               	subwfb	postinc2,w,c
 39598  017FEA  A0D8               	btfss	status,0,c
 39599  017FEC  D015               	goto	l10390
 39600                           
 39601                           ;stkvar	_grs @ sp[(-13)+0]
 39602  017FEE  0EF6               	movlw	-10
 39603  017FF0  8CE3               	bsf	plusw1,6,c
 39604                           
 39605                           ;stkvar	_a @ sp[(-13)+-8]
 39606                           ;stkvar	_rem @ sp[(-13)+4]
 39607  017FF2  50E1               	movf	fsr1l,w,c
 39608  017FF4  0FF7               	addlw	-9
 39609  017FF6  6ED9               	movwf	fsr2l,c
 39610  017FF8  50E2               	movf	fsr1h,w,c
 39611  017FFA  6EDA               	movwf	fsr2h,c
 39612  017FFC  0EFF               	movlw	255
 39613  017FFE  22DA               	addwfc	fsr2h,f,c
 39614  018000  0EEB               	movlw	-21
 39615  018002  50E3               	movf	plusw1,w,c
 39616  018004  5EDE               	subwf	postinc2,f,c
 39617  018006  0EEC               	movlw	-20
 39618  018008  50E3               	movf	plusw1,w,c
 39619  01800A  5ADE               	subwfb	postinc2,f,c
 39620  01800C  0EED               	movlw	-19
 39621  01800E  50E3               	movf	plusw1,w,c
 39622  018010  5ADE               	subwfb	postinc2,f,c
 39623  018012  0EEE               	movlw	-18
 39624  018014  50E3               	movf	plusw1,w,c
 39625  018016  5ADE               	subwfb	postinc2,f,c
 39626  018018                     l10390:
 39627                           
 39628                           ;stkvar	_aexp @ sp[(-13)+10]
 39629  018018  0EFD               	movlw	-3
 39630  01801A  2AE3               	incf	plusw1,f,c
 39631  01801C                     l10392:
 39632                           
 39633                           ;stkvar	_aexp @ sp[(-13)+10]
 39634  01801C  0EFD               	movlw	-3
 39635  01801E  006F FF8C  F02A    	movff	plusw1,btemp
 39636  018024  0E19               	movlw	25
 39637  018026  642A               	cpfsgt	btemp^0,c
 39638  018028  D7A9               	goto	l10374
 39639                           
 39640                           ;stkvar	_rem @ sp[(-13)+4]
 39641  01802A  0EF7               	movlw	-9
 39642  01802C  50E3               	movf	plusw1,w,c
 39643  01802E  E10A               	bnz	u8450
 39644  018030  0EF8               	movlw	-8
 39645  018032  50E3               	movf	plusw1,w,c
 39646  018034  E107               	bnz	u8450
 39647  018036  0EF9               	movlw	-7
 39648  018038  50E3               	movf	plusw1,w,c
 39649  01803A  E104               	bnz	u8450
 39650  01803C  0EFA               	movlw	-6
 39651  01803E  50E3               	movf	plusw1,w,c
 39652  018040  B4D8               	btfsc	status,2,c
 39653  018042  D024               	goto	l10408
 39654  018044                     u8450:
 39655                           
 39656                           ;stkvar	_grs @ sp[(-13)+0]
 39657  018044  0EF3               	movlw	-13
 39658  018046  80E3               	bsf	plusw1,0,c
 39659  018048  D021               	goto	l10408
 39660  01804A                     l10398:
 39661                           
 39662                           ;stkvar	_b @ sp[(-13)+-4]
 39663  01804A  90D8               	bcf	status,0,c
 39664  01804C  0EEF               	movlw	-17
 39665  01804E  36E3               	rlcf	plusw1,f,c
 39666  018050  0EF0               	movlw	-16
 39667  018052  36E3               	rlcf	plusw1,f,c
 39668  018054  0EF1               	movlw	-15
 39669  018056  36E3               	rlcf	plusw1,f,c
 39670  018058  0EF2               	movlw	-14
 39671  01805A  36E3               	rlcf	plusw1,f,c
 39672                           
 39673                           ;stkvar	_grs @ sp[(-13)+0]
 39674  01805C  0EF6               	movlw	-10
 39675  01805E  AEE3               	btfss	plusw1,7,c
 39676  018060  D002               	goto	l10404
 39677                           
 39678                           ;stkvar	_b @ sp[(-13)+-4]
 39679  018062  0EEF               	movlw	-17
 39680  018064  80E3               	bsf	plusw1,0,c
 39681  018066                     l10404:
 39682                           
 39683                           ;stkvar	_grs @ sp[(-13)+0]
 39684  018066  90D8               	bcf	status,0,c
 39685  018068  0EF3               	movlw	-13
 39686  01806A  36E3               	rlcf	plusw1,f,c
 39687  01806C  0EF4               	movlw	-12
 39688  01806E  36E3               	rlcf	plusw1,f,c
 39689  018070  0EF5               	movlw	-11
 39690  018072  36E3               	rlcf	plusw1,f,c
 39691  018074  0EF6               	movlw	-10
 39692  018076  36E3               	rlcf	plusw1,f,c
 39693                           
 39694                           ;stkvar	_new_exp @ sp[(-13)+8]
 39695  018078  50E1               	movf	fsr1l,w,c
 39696  01807A  0FFB               	addlw	-5
 39697  01807C  6ED9               	movwf	fsr2l,c
 39698  01807E  50E2               	movf	fsr1h,w,c
 39699  018080  6EDA               	movwf	fsr2h,c
 39700  018082  0EFF               	movlw	255
 39701  018084  22DA               	addwfc	fsr2h,f,c
 39702  018086  06DE               	decf	postinc2,f,c
 39703  018088  0E00               	movlw	0
 39704  01808A  5ADD               	subwfb	postdec2,f,c
 39705  01808C                     l10408:
 39706                           
 39707                           ;stkvar	_b @ sp[(-13)+-4]
 39708  01808C  0EF1               	movlw	-15
 39709  01808E  AEE3               	btfss	plusw1,7,c
 39710  018090  D7DC               	goto	l10398
 39711                           
 39712                           ;stkvar	_aexp @ sp[(-13)+10]
 39713  018092  0EFD               	movlw	-3
 39714  018094  6AE3               	clrf	plusw1,c
 39715                           
 39716                           ;stkvar	_grs @ sp[(-13)+0]
 39717  018096  0EF6               	movlw	-10
 39718  018098  AEE3               	btfss	plusw1,7,c
 39719  01809A  D020               	goto	l10422
 39720                           
 39721                           ;stkvar	_grs @ sp[(-13)+0]
 39722  01809C  50E1               	movf	fsr1l,w,c
 39723  01809E  0FF3               	addlw	-13
 39724  0180A0  6ED9               	movwf	fsr2l,c
 39725  0180A2  50E2               	movf	fsr1h,w,c
 39726  0180A4  6EDA               	movwf	fsr2h,c
 39727  0180A6  0EFF               	movlw	255
 39728  0180A8  22DA               	addwfc	fsr2h,f,c
 39729  0180AA  0EFF               	movlw	255
 39730  0180AC  14DE               	andwf	postinc2,w,c
 39731  0180AE  6E32               	movwf	(btemp+8)^0,c
 39732  0180B0  0EFF               	movlw	255
 39733  0180B2  14DE               	andwf	postinc2,w,c
 39734  0180B4  6E33               	movwf	(btemp+9)^0,c
 39735  0180B6  0EFF               	movlw	255
 39736  0180B8  14DE               	andwf	postinc2,w,c
 39737  0180BA  6E34               	movwf	(btemp+10)^0,c
 39738  0180BC  0E7F               	movlw	127
 39739  0180BE  14DE               	andwf	postinc2,w,c
 39740  0180C0  6E35               	movwf	(btemp+11)^0,c
 39741  0180C2  5032               	movf	(btemp+8)^0,w,c
 39742  0180C4  1033               	iorwf	(btemp+9)^0,w,c
 39743  0180C6  1034               	iorwf	(btemp+10)^0,w,c
 39744  0180C8  1035               	iorwf	(btemp+11)^0,w,c
 39745  0180CA  B4D8               	btfsc	status,2,c
 39746  0180CC  D004               	goto	l10418
 39747  0180CE                     u8490:
 39748                           
 39749                           ;stkvar	_aexp @ sp[(-13)+10]
 39750  0180CE  0EFD               	movlw	-3
 39751  0180D0  6AE3               	clrf	plusw1,c
 39752  0180D2  2AE3               	incf	plusw1,f,c
 39753  0180D4  D003               	goto	l10422
 39754  0180D6                     l10418:
 39755                           
 39756                           ;stkvar	_b @ sp[(-13)+-4]
 39757  0180D6  0EEF               	movlw	-17
 39758  0180D8  B0E3               	btfsc	plusw1,0,c
 39759  0180DA  D7F9               	goto	u8490
 39760  0180DC                     l10422:
 39761                           
 39762                           ;stkvar	_aexp @ sp[(-13)+10]
 39763  0180DC  0EFD               	movlw	-3
 39764  0180DE  50E3               	movf	plusw1,w,c
 39765  0180E0  B4D8               	btfsc	status,2,c
 39766  0180E2  D036               	goto	l10432
 39767                           
 39768                           ;stkvar	_b @ sp[(-13)+-4]
 39769  0180E4  50E1               	movf	fsr1l,w,c
 39770  0180E6  0FEF               	addlw	-17
 39771  0180E8  6ED9               	movwf	fsr2l,c
 39772  0180EA  50E2               	movf	fsr1h,w,c
 39773  0180EC  6EDA               	movwf	fsr2h,c
 39774  0180EE  0EFF               	movlw	255
 39775  0180F0  22DA               	addwfc	fsr2h,f,c
 39776  0180F2  2ADE               	incf	postinc2,f,c
 39777  0180F4  0E00               	movlw	0
 39778  0180F6  22DE               	addwfc	postinc2,f,c
 39779  0180F8  22DE               	addwfc	postinc2,f,c
 39780  0180FA  22DE               	addwfc	postinc2,f,c
 39781                           
 39782                           ;stkvar	_b @ sp[(-13)+-4]
 39783  0180FC  0EF2               	movlw	-14
 39784  0180FE  A0E3               	btfss	plusw1,0,c
 39785  018100  D027               	goto	l10432
 39786  018102  0E01               	movlw	1
 39787  018104  6E35               	movwf	(btemp+11)^0,c
 39788                           
 39789                           ;stkvar	_b @ sp[(-13)+-4]
 39790  018106  50E1               	movf	fsr1l,w,c
 39791  018108  0FEF               	addlw	-17
 39792  01810A  6ED9               	movwf	fsr2l,c
 39793  01810C  50E2               	movf	fsr1h,w,c
 39794  01810E  6EDA               	movwf	fsr2h,c
 39795  018110  0EFF               	movlw	255
 39796  018112  22DA               	addwfc	fsr2h,f,c
 39797  018114  2835               	incf	(btemp+11)^0,w,c
 39798  018116  52DE               	movf	postinc2,f,c
 39799  018118  D008               	goto	u8530
 39800  01811A                     u8535:
 39801  01811A  52DE               	movf	postinc2,f,c
 39802  01811C  90D8               	bcf	status,0,c
 39803  01811E  BEDC               	btfsc	preinc2,7,c
 39804  018120  80D8               	bsf	status,0,c
 39805  018122  32DD               	rrcf	postdec2,f,c
 39806  018124  32DD               	rrcf	postdec2,f,c
 39807  018126  32DD               	rrcf	postdec2,f,c
 39808  018128  32DE               	rrcf	postinc2,f,c
 39809  01812A                     u8530:
 39810  01812A  2EE8               	decfsz	wreg,f,c
 39811  01812C  D7F6               	goto	u8535
 39812                           
 39813                           ;stkvar	_new_exp @ sp[(-13)+8]
 39814  01812E  0EFB               	movlw	-5
 39815  018130  50E3               	movf	plusw1,w,c
 39816  018132  0F01               	addlw	1
 39817  018134  6E2A               	movwf	btemp^0,c
 39818  018136  0EFB               	movlw	-5
 39819  018138  0060  F0AB  FFE3   	movff	btemp,plusw1
 39820  01813E  6A2A               	clrf	btemp^0,c
 39821  018140  0EFC               	movlw	-4
 39822  018142  50E3               	movf	plusw1,w,c
 39823  018144  202A               	addwfc	btemp^0,w,c
 39824  018146  6E2A               	movwf	btemp^0,c
 39825  018148  0EFC               	movlw	-4
 39826  01814A  0060  F0AB  FFE3   	movff	btemp,plusw1
 39827  018150                     l10432:
 39828                           
 39829                           ;stkvar	_new_exp @ sp[(-13)+8]
 39830  018150  0EFC               	movlw	-4
 39831  018152  BEE3               	btfsc	plusw1,7,c
 39832  018154  D01B               	goto	l10438
 39833  018156  0EFC               	movlw	-4
 39834  018158  50E3               	movf	plusw1,w,c
 39835  01815A  E104               	bnz	u8540
 39836  01815C  0EFB               	movlw	-5
 39837  01815E  28E3               	incf	plusw1,w,c
 39838  018160  A0D8               	btfss	status,0,c
 39839  018162  D014               	goto	l10438
 39840  018164                     u8540:
 39841  018164  0EFF               	movlw	255
 39842  018166  6E34               	movwf	(btemp+10)^0,c
 39843  018168  0E00               	movlw	0
 39844  01816A  6E35               	movwf	(btemp+11)^0,c
 39845                           
 39846                           ;stkvar	_new_exp @ sp[(-13)+8]
 39847  01816C  0EFB               	movlw	-5
 39848  01816E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39849  018174  0EFC               	movlw	-4
 39850  018176  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39851                           
 39852                           ;stkvar	_b @ sp[(-13)+-4]
 39853  01817C  0EEF               	movlw	-17
 39854  01817E  6AE3               	clrf	plusw1,c
 39855  018180  0EF0               	movlw	-16
 39856  018182  6AE3               	clrf	plusw1,c
 39857  018184  0EF1               	movlw	-15
 39858  018186  6AE3               	clrf	plusw1,c
 39859  018188  0EF2               	movlw	-14
 39860  01818A  6AE3               	clrf	plusw1,c
 39861  01818C                     l10438:
 39862                           
 39863                           ;stkvar	_new_exp @ sp[(-13)+8]
 39864  01818C  0EFC               	movlw	-4
 39865  01818E  BEE3               	btfsc	plusw1,7,c
 39866  018190  D007               	goto	u8550
 39867  018192  0EFC               	movlw	-4
 39868  018194  50E3               	movf	plusw1,w,c
 39869  018196  E112               	bnz	l10444
 39870  018198  0EFB               	movlw	-5
 39871  01819A  04E3               	decf	plusw1,w,c
 39872  01819C  B0D8               	btfsc	status,0,c
 39873  01819E  D00E               	goto	l10444
 39874  0181A0                     u8550:
 39875                           
 39876                           ;stkvar	_new_exp @ sp[(-13)+8]
 39877  0181A0  0EFB               	movlw	-5
 39878  0181A2  6AE3               	clrf	plusw1,c
 39879  0181A4  0EFC               	movlw	-4
 39880  0181A6  6AE3               	clrf	plusw1,c
 39881                           
 39882                           ;stkvar	_b @ sp[(-13)+-4]
 39883  0181A8  0EEF               	movlw	-17
 39884  0181AA  6AE3               	clrf	plusw1,c
 39885  0181AC  0EF0               	movlw	-16
 39886  0181AE  6AE3               	clrf	plusw1,c
 39887  0181B0  0EF1               	movlw	-15
 39888  0181B2  6AE3               	clrf	plusw1,c
 39889  0181B4  0EF2               	movlw	-14
 39890  0181B6  6AE3               	clrf	plusw1,c
 39891                           
 39892                           ;stkvar	_sign @ sp[(-13)+12]
 39893  0181B8  0EFF               	movlw	-1
 39894  0181BA  6AE3               	clrf	plusw1,c
 39895  0181BC                     l10444:
 39896                           
 39897                           ;stkvar	_new_exp @ sp[(-13)+8]
 39898                           ;stkvar	_bexp @ sp[(-13)+11]
 39899  0181BC  0EFB               	movlw	-5
 39900  0181BE  006F FF8C  F02A    	movff	plusw1,btemp
 39901  0181C4  0EFE               	movlw	-2
 39902  0181C6  0060  F0AB  FFE3   	movff	btemp,plusw1
 39903                           
 39904                           ;stkvar	_bexp @ sp[(-13)+11]
 39905  0181CC  0EFE               	movlw	-2
 39906  0181CE  A0E3               	btfss	plusw1,0,c
 39907  0181D0  D009               	goto	l10450
 39908                           
 39909                           ;stkvar	_b @ sp[(-13)+-4]
 39910  0181D2  0EF1               	movlw	241
 39911  0181D4  24E1               	addwf	fsr1l,w,c
 39912  0181D6  6ED9               	movwf	fsr2l,c
 39913  0181D8  0EFF               	movlw	255
 39914  0181DA  20E2               	addwfc	fsr1h,w,c
 39915  0181DC  6EDA               	movwf	fsr2h,c
 39916  0181DE  0E00               	movlw	0
 39917  0181E0  8EDB               	bsf	plusw2,7,c
 39918  0181E2  D008               	goto	l10452
 39919  0181E4                     l10450:
 39920                           
 39921                           ;stkvar	_b @ sp[(-13)+-4]
 39922  0181E4  0EF1               	movlw	241
 39923  0181E6  24E1               	addwf	fsr1l,w,c
 39924  0181E8  6ED9               	movwf	fsr2l,c
 39925  0181EA  0EFF               	movlw	255
 39926  0181EC  20E2               	addwfc	fsr1h,w,c
 39927  0181EE  6EDA               	movwf	fsr2h,c
 39928  0181F0  0E7F               	movlw	127
 39929  0181F2  16DF               	andwf	indf2,f,c
 39930  0181F4                     l10452:
 39931                           
 39932                           ;stkvar	_b @ sp[(-13)+-4]
 39933  0181F4  0EF2               	movlw	242
 39934  0181F6  24E1               	addwf	fsr1l,w,c
 39935  0181F8  6ED9               	movwf	fsr2l,c
 39936  0181FA  0EFF               	movlw	255
 39937  0181FC  20E2               	addwfc	fsr1h,w,c
 39938  0181FE  6EDA               	movwf	fsr2h,c
 39939                           
 39940                           ;stkvar	_bexp @ sp[(-13)+11]
 39941  018200  0EFE               	movlw	-2
 39942  018202  006F FF8C  F035    	movff	plusw1,btemp+11
 39943  018208  90D8               	bcf	status,0,c
 39944  01820A  3035               	rrcf	(btemp+11)^0,w,c
 39945  01820C  6EDF               	movwf	indf2,c
 39946  01820E  D644               	goto	l10350
 39947  018210                     l3306:
 39948                           
 39949                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 39950  018210  0EEB               	movlw	235
 39951  018212  26E1               	addwf	fsr1l,f,c
 39952  018214  0EFF               	movlw	255
 39953  018216  22E2               	addwfc	fsr1h,f,c
 39954  018218  0012               	return		;funcret
 39955  01821A                     __end_of___fldiv:
 39956                           	opt callstack 0
 39957                           
 39958 ;; *************** function ___flge *****************
 39959 ;; Defined at:
 39960 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 39961 ;; Parameters:    Size  Location     Type
 39962 ;;  ff1             4  [STACK] unsigned char 
 39963 ;;  ff2             4  [STACK] unsigned char 
 39964 ;; Auto vars:     Size  Location     Type
 39965 ;;		None
 39966 ;; Return value:  Size  Location     Type
 39967 ;;		None               void
 39968 ;; Registers used:
 39969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 39970 ;; Tracked objects:
 39971 ;;		On entry : 0/1
 39972 ;;		On exit  : 0/0
 39973 ;;		Unchanged: 0/0
 39974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39979 ;;Total ram usage:        0 bytes
 39980 ;; Hardware stack levels used:    1
 39981 ;; Hardware stack levels required when called:   15
 39982 ;; This function calls:
 39983 ;;		Nothing
 39984 ;; This function is called by:
 39985 ;;		_main
 39986 ;;		_convert_dac_raw
 39987 ;;		_calc_ror_data
 39988 ;;		_check_day_time
 39989 ;;		_calc_bsoc
 39990 ;;		_efgtoa
 39991 ;; This function uses a reentrant model
 39992 ;;
 39993                           
 39994                           	psect	text147
 39995  01E982                     __ptext147:
 39996                           	opt callstack 0
 39997  01E982                     ___flge:
 39998                           	opt callstack 0
 39999                           
 40000                           ;stkvar	_ff1 @ sp[(0)+-4]
 40001                           
 40002                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40003                           ;incstack = 0
 40004 ;; hardware stack exceeded
 40005  01E982  50E1               	movf	fsr1l,w,c
 40006  01E984  0FFC               	addlw	-4
 40007  01E986  6ED9               	movwf	fsr2l,c
 40008  01E988  50E2               	movf	fsr1h,w,c
 40009  01E98A  6EDA               	movwf	fsr2h,c
 40010  01E98C  0EFF               	movlw	255
 40011  01E98E  22DA               	addwfc	fsr2h,f,c
 40012  01E990  0E00               	movlw	0
 40013  01E992  14DE               	andwf	postinc2,w,c
 40014  01E994  6E32               	movwf	(btemp+8)^0,c
 40015  01E996  0E00               	movlw	0
 40016  01E998  14DE               	andwf	postinc2,w,c
 40017  01E99A  6E33               	movwf	(btemp+9)^0,c
 40018  01E99C  0E80               	movlw	128
 40019  01E99E  14DE               	andwf	postinc2,w,c
 40020  01E9A0  6E34               	movwf	(btemp+10)^0,c
 40021  01E9A2  0E7F               	movlw	127
 40022  01E9A4  14DE               	andwf	postinc2,w,c
 40023  01E9A6  6E35               	movwf	(btemp+11)^0,c
 40024  01E9A8  5032               	movf	(btemp+8)^0,w,c
 40025  01E9AA  1033               	iorwf	(btemp+9)^0,w,c
 40026  01E9AC  1034               	iorwf	(btemp+10)^0,w,c
 40027  01E9AE  1035               	iorwf	(btemp+11)^0,w,c
 40028  01E9B0  A4D8               	btfss	status,2,c
 40029  01E9B2  D008               	goto	l10726
 40030                           
 40031                           ;stkvar	_ff1 @ sp[(0)+-4]
 40032  01E9B4  0EFC               	movlw	-4
 40033  01E9B6  6AE3               	clrf	plusw1,c
 40034  01E9B8  0EFD               	movlw	-3
 40035  01E9BA  6AE3               	clrf	plusw1,c
 40036  01E9BC  0EFE               	movlw	-2
 40037  01E9BE  6AE3               	clrf	plusw1,c
 40038  01E9C0  0EFF               	movlw	-1
 40039  01E9C2  6AE3               	clrf	plusw1,c
 40040  01E9C4                     l10726:
 40041                           
 40042                           ;stkvar	_ff2 @ sp[(0)+-8]
 40043  01E9C4  50E1               	movf	fsr1l,w,c
 40044  01E9C6  0FF8               	addlw	-8
 40045  01E9C8  6ED9               	movwf	fsr2l,c
 40046  01E9CA  50E2               	movf	fsr1h,w,c
 40047  01E9CC  6EDA               	movwf	fsr2h,c
 40048  01E9CE  0EFF               	movlw	255
 40049  01E9D0  22DA               	addwfc	fsr2h,f,c
 40050  01E9D2  0E00               	movlw	0
 40051  01E9D4  14DE               	andwf	postinc2,w,c
 40052  01E9D6  6E32               	movwf	(btemp+8)^0,c
 40053  01E9D8  0E00               	movlw	0
 40054  01E9DA  14DE               	andwf	postinc2,w,c
 40055  01E9DC  6E33               	movwf	(btemp+9)^0,c
 40056  01E9DE  0E80               	movlw	128
 40057  01E9E0  14DE               	andwf	postinc2,w,c
 40058  01E9E2  6E34               	movwf	(btemp+10)^0,c
 40059  01E9E4  0E7F               	movlw	127
 40060  01E9E6  14DE               	andwf	postinc2,w,c
 40061  01E9E8  6E35               	movwf	(btemp+11)^0,c
 40062  01E9EA  5032               	movf	(btemp+8)^0,w,c
 40063  01E9EC  1033               	iorwf	(btemp+9)^0,w,c
 40064  01E9EE  1034               	iorwf	(btemp+10)^0,w,c
 40065  01E9F0  1035               	iorwf	(btemp+11)^0,w,c
 40066  01E9F2  A4D8               	btfss	status,2,c
 40067  01E9F4  D008               	goto	l2987
 40068                           
 40069                           ;stkvar	_ff2 @ sp[(0)+-8]
 40070  01E9F6  0EF8               	movlw	-8
 40071  01E9F8  6AE3               	clrf	plusw1,c
 40072  01E9FA  0EF9               	movlw	-7
 40073  01E9FC  6AE3               	clrf	plusw1,c
 40074  01E9FE  0EFA               	movlw	-6
 40075  01EA00  6AE3               	clrf	plusw1,c
 40076  01EA02  0EFB               	movlw	-5
 40077  01EA04  6AE3               	clrf	plusw1,c
 40078  01EA06                     l2987:
 40079                           
 40080                           ;stkvar	_ff1 @ sp[(0)+-4]
 40081  01EA06  0EFF               	movlw	-1
 40082  01EA08  AEE3               	btfss	plusw1,7,c
 40083  01EA0A  D024               	goto	l10732
 40084                           
 40085                           ;stkvar	_ff1 @ sp[(0)+-4]
 40086  01EA0C  0E00               	movlw	0
 40087  01EA0E  6E32               	movwf	(btemp+8)^0,c
 40088  01EA10  0E00               	movlw	0
 40089  01EA12  6E33               	movwf	(btemp+9)^0,c
 40090  01EA14  0E00               	movlw	0
 40091  01EA16  6E34               	movwf	(btemp+10)^0,c
 40092  01EA18  0E80               	movlw	128
 40093  01EA1A  6E35               	movwf	(btemp+11)^0,c
 40094  01EA1C  0EFC               	movlw	-4
 40095  01EA1E  50E3               	movf	plusw1,w,c
 40096  01EA20  5E32               	subwf	(btemp+8)^0,f,c
 40097  01EA22  0EFD               	movlw	-3
 40098  01EA24  50E3               	movf	plusw1,w,c
 40099  01EA26  5A33               	subwfb	(btemp+9)^0,f,c
 40100  01EA28  0EFE               	movlw	-2
 40101  01EA2A  50E3               	movf	plusw1,w,c
 40102  01EA2C  5A34               	subwfb	(btemp+10)^0,f,c
 40103  01EA2E  0EFF               	movlw	-1
 40104  01EA30  50E3               	movf	plusw1,w,c
 40105  01EA32  5A35               	subwfb	(btemp+11)^0,f,c
 40106                           
 40107                           ;stkvar	_ff1 @ sp[(0)+-4]
 40108  01EA34  0EFC               	movlw	-4
 40109  01EA36  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40110  01EA3C  0EFD               	movlw	-3
 40111  01EA3E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40112  01EA44  0EFE               	movlw	-2
 40113  01EA46  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40114  01EA4C  0EFF               	movlw	-1
 40115  01EA4E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40116  01EA54                     l10732:
 40117                           
 40118                           ;stkvar	_ff2 @ sp[(0)+-8]
 40119  01EA54  0EFB               	movlw	-5
 40120  01EA56  AEE3               	btfss	plusw1,7,c
 40121  01EA58  D024               	goto	l10736
 40122                           
 40123                           ;stkvar	_ff2 @ sp[(0)+-8]
 40124  01EA5A  0E00               	movlw	0
 40125  01EA5C  6E32               	movwf	(btemp+8)^0,c
 40126  01EA5E  0E00               	movlw	0
 40127  01EA60  6E33               	movwf	(btemp+9)^0,c
 40128  01EA62  0E00               	movlw	0
 40129  01EA64  6E34               	movwf	(btemp+10)^0,c
 40130  01EA66  0E80               	movlw	128
 40131  01EA68  6E35               	movwf	(btemp+11)^0,c
 40132  01EA6A  0EF8               	movlw	-8
 40133  01EA6C  50E3               	movf	plusw1,w,c
 40134  01EA6E  5E32               	subwf	(btemp+8)^0,f,c
 40135  01EA70  0EF9               	movlw	-7
 40136  01EA72  50E3               	movf	plusw1,w,c
 40137  01EA74  5A33               	subwfb	(btemp+9)^0,f,c
 40138  01EA76  0EFA               	movlw	-6
 40139  01EA78  50E3               	movf	plusw1,w,c
 40140  01EA7A  5A34               	subwfb	(btemp+10)^0,f,c
 40141  01EA7C  0EFB               	movlw	-5
 40142  01EA7E  50E3               	movf	plusw1,w,c
 40143  01EA80  5A35               	subwfb	(btemp+11)^0,f,c
 40144                           
 40145                           ;stkvar	_ff2 @ sp[(0)+-8]
 40146  01EA82  0EF8               	movlw	-8
 40147  01EA84  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40148  01EA8A  0EF9               	movlw	-7
 40149  01EA8C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40150  01EA92  0EFA               	movlw	-6
 40151  01EA94  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40152  01EA9A  0EFB               	movlw	-5
 40153  01EA9C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40154  01EAA2                     l10736:
 40155                           
 40156                           ;stkvar	_ff1 @ sp[(0)+-4]
 40157  01EAA2  0EFF               	movlw	-1
 40158  01EAA4  7EE3               	btg	plusw1,7,c
 40159                           
 40160                           ;stkvar	_ff2 @ sp[(0)+-8]
 40161  01EAA6  0EFB               	movlw	-5
 40162  01EAA8  7EE3               	btg	plusw1,7,c
 40163                           
 40164                           ;stkvar	_ff2 @ sp[(0)+-8]
 40165                           ;stkvar	_ff1 @ sp[(0)+-4]
 40166  01EAAA  50E1               	movf	fsr1l,w,c
 40167  01EAAC  0FFC               	addlw	-4
 40168  01EAAE  6ED9               	movwf	fsr2l,c
 40169  01EAB0  50E2               	movf	fsr1h,w,c
 40170  01EAB2  6EDA               	movwf	fsr2h,c
 40171  01EAB4  0EFF               	movlw	255
 40172  01EAB6  22DA               	addwfc	fsr2h,f,c
 40173  01EAB8  0EF8               	movlw	-8
 40174  01EABA  50E3               	movf	plusw1,w,c
 40175  01EABC  5CDE               	subwf	postinc2,w,c
 40176  01EABE  0EF9               	movlw	-7
 40177  01EAC0  50E3               	movf	plusw1,w,c
 40178  01EAC2  58DE               	subwfb	postinc2,w,c
 40179  01EAC4  0EFA               	movlw	-6
 40180  01EAC6  50E3               	movf	plusw1,w,c
 40181  01EAC8  58DE               	subwfb	postinc2,w,c
 40182  01EACA  0EFB               	movlw	-5
 40183  01EACC  50E3               	movf	plusw1,w,c
 40184  01EACE  58DE               	subwfb	postinc2,w,c
 40185  01EAD0  B0D8               	btfsc	status,0,c
 40186  01EAD2  D002               	goto	l10744
 40187  01EAD4  902A               	bcf	btemp& (0+255),0,c
 40188  01EAD6  D001               	goto	l2994
 40189  01EAD8                     l10744:
 40190  01EAD8  802A               	bsf	btemp& (0+255),0,c
 40191  01EADA                     l2994:
 40192                           
 40193                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 40194  01EADA  0EF8               	movlw	248
 40195  01EADC  26E1               	addwf	fsr1l,f,c
 40196  01EADE  0EFF               	movlw	255
 40197  01EAE0  22E2               	addwfc	fsr1h,f,c
 40198  01EAE2  0012               	return		;funcret
 40199  01EAE4                     __end_of___flge:
 40200                           	opt callstack 0
 40201                           
 40202 ;; *************** function _calc_model_data *****************
 40203 ;; Defined at:
 40204 ;;		line 67 in file "mbmc.c"
 40205 ;; Parameters:    Size  Location     Type
 40206 ;;		None
 40207 ;; Auto vars:     Size  Location     Type
 40208 ;;		None
 40209 ;; Return value:  Size  Location     Type
 40210 ;;                  1  [STACK] void 
 40211 ;; Registers used:
 40212 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 40213 ;; Tracked objects:
 40214 ;;		On entry : 3F/0
 40215 ;;		On exit  : 3F/39
 40216 ;;		Unchanged: 0/0
 40217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40222 ;;Total ram usage:        0 bytes
 40223 ;; Hardware stack levels used:    1
 40224 ;; Hardware stack levels required when called:   18
 40225 ;; This function calls:
 40226 ;;		___fladd
 40227 ;;		___flmul
 40228 ;;		___flsub
 40229 ;;		_lp_filter
 40230 ;;		_start_bsoc
 40231 ;;		_stop_bsoc
 40232 ;; This function is called by:
 40233 ;;		_main
 40234 ;; This function uses a reentrant model
 40235 ;;
 40236                           
 40237                           	psect	text148
 40238  019946                     __ptext148:
 40239                           	opt callstack 0
 40240  019946                     _calc_model_data:
 40241                           	opt callstack 12
 40242                           
 40243                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 40244                           
 40245                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40246                           ;incstack = 0
 40247  019946  EC48  F015         	call	_stop_bsoc	;wreg free
 40248                           
 40249                           ; BSR set to: 57
 40250                           ;mbmc.c: 72:  if (!V.calib) {
 40251  01994A  0102               	movlb	2	; () banked
 40252  01994C  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
 40253  01994E  A4D8               	btfss	status,2,c
 40254  019950  D220               	goto	l14420
 40255                           
 40256                           ; BSR set to: 2
 40257                           ;mbmc.c: 73:   C.updates++;
 40258  019952  EE22  F23B         	lfsr	2,_C+316	;volatile
 40259  019956  2ADE               	incf	postinc2,f,c
 40260  019958  0E00               	movlw	0
 40261  01995A  22DE               	addwfc	postinc2,f,c
 40262  01995C  22DE               	addwfc	postinc2,f,c
 40263  01995E  22DE               	addwfc	postinc2,f,c
 40264                           
 40265                           ; BSR set to: 2
 40266                           ;mbmc.c: 74:   C.c_bat = C.calc[C_BATT];
 40267  019960  EE22  F0FF         	lfsr	2,_C
 40268  019964  006F FF78  F943    	movff	postinc2,_C+68	;volatile
 40269  01996A  006F FF78  F944    	movff	postinc2,_C+69	;volatile
 40270  019970  006F FF78  F945    	movff	postinc2,_C+70	;volatile
 40271  019976  006F FF74  F946    	movff	postdec2,_C+71	;volatile
 40272                           
 40273                           ; BSR set to: 2
 40274                           ;mbmc.c: 75:   C.bc_ror = C.c_bat - bcror;
 40275  01997C  0060  F223  FFE6   	movff	calc_model_data@bcror,postinc1
 40276  019982  0060  F227  FFE6   	movff	calc_model_data@bcror+1,postinc1
 40277  019988  0060  F22B  FFE6   	movff	calc_model_data@bcror+2,postinc1
 40278  01998E  0060  F22F  FFE6   	movff	calc_model_data@bcror+3,postinc1
 40279  019994  EE22  F143         	lfsr	2,_C+68	;volatile
 40280  019998  006F FF7B FFE6     	movff	postinc2,postinc1
 40281  01999E  006F FF7B FFE6     	movff	postinc2,postinc1
 40282  0199A4  006F FF7B FFE6     	movff	postinc2,postinc1
 40283  0199AA  006F FF7B FFE6     	movff	postinc2,postinc1
 40284  0199B0  EC14  F00F         	call	___flsub	;wreg free
 40285  0199B4  0060  F0A8  F96F   	movff	btemp,_C+112	;volatile
 40286  0199BA  0060  F0AC  F970   	movff	btemp+1,_C+113	;volatile
 40287  0199C0  0060  F0B0  F971   	movff	btemp+2,_C+114	;volatile
 40288  0199C6  0060  F0B4  F972   	movff	btemp+3,_C+115	;volatile
 40289                           
 40290                           ;mbmc.c: 76:   bcror = C.c_bat;
 40291  0199CC  C943  F088         	movff	_C+68,calc_model_data@bcror	;volatile
 40292  0199D0  C944  F089         	movff	_C+69,calc_model_data@bcror+1	;volatile
 40293  0199D4  C945  F08A         	movff	_C+70,calc_model_data@bcror+2	;volatile
 40294  0199D8  C946  F08B         	movff	_C+71,calc_model_data@bcror+3	;volatile
 40295                           
 40296                           ;mbmc.c: 77:   C.c_pv = C.calc[C_PV];
 40297  0199DC  EE22  F103         	lfsr	2,_C+4	;volatile
 40298  0199E0  006F FF78  F947    	movff	postinc2,_C+72	;volatile
 40299  0199E6  006F FF78  F948    	movff	postinc2,_C+73	;volatile
 40300  0199EC  006F FF78  F949    	movff	postinc2,_C+74	;volatile
 40301  0199F2  006F FF74  F94A    	movff	postdec2,_C+75	;volatile
 40302                           
 40303                           ;mbmc.c: 78:   C.v_bat = C.calc[V_BAT];
 40304  0199F8  EE22  F10F         	lfsr	2,_C+16	;volatile
 40305  0199FC  006F FF78  F953    	movff	postinc2,_C+84	;volatile
 40306  019A02  006F FF78  F954    	movff	postinc2,_C+85	;volatile
 40307  019A08  006F FF78  F955    	movff	postinc2,_C+86	;volatile
 40308  019A0E  006F FF74  F956    	movff	postdec2,_C+87	;volatile
 40309                           
 40310                           ;mbmc.c: 79:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 40311  019A14  EE22  F133         	lfsr	2,_C+52	;volatile
 40312  019A18  006F FF78  F967    	movff	postinc2,_C+104	;volatile
 40313  019A1E  006F FF78  F968    	movff	postinc2,_C+105	;volatile
 40314  019A24  006F FF78  F969    	movff	postinc2,_C+106	;volatile
 40315  019A2A  006F FF74  F96A    	movff	postdec2,_C+107	;volatile
 40316                           
 40317                           ;mbmc.c: 80:   C.bv_ror = C.v_bat - bvror;
 40318  019A30  0060  F233  FFE6   	movff	calc_model_data@bvror,postinc1
 40319  019A36  0060  F237  FFE6   	movff	calc_model_data@bvror+1,postinc1
 40320  019A3C  0060  F23B  FFE6   	movff	calc_model_data@bvror+2,postinc1
 40321  019A42  0060  F23F  FFE6   	movff	calc_model_data@bvror+3,postinc1
 40322  019A48  EE22  F153         	lfsr	2,_C+84	;volatile
 40323  019A4C  006F FF7B FFE6     	movff	postinc2,postinc1
 40324  019A52  006F FF7B FFE6     	movff	postinc2,postinc1
 40325  019A58  006F FF7B FFE6     	movff	postinc2,postinc1
 40326  019A5E  006F FF7B FFE6     	movff	postinc2,postinc1
 40327  019A64  EC14  F00F         	call	___flsub	;wreg free
 40328  019A68  0060  F0A8  F96B   	movff	btemp,_C+108	;volatile
 40329  019A6E  0060  F0AC  F96C   	movff	btemp+1,_C+109	;volatile
 40330  019A74  0060  F0B0  F96D   	movff	btemp+2,_C+110	;volatile
 40331  019A7A  0060  F0B4  F96E   	movff	btemp+3,_C+111	;volatile
 40332                           
 40333                           ;mbmc.c: 81:   bvror = C.v_bat;
 40334  019A80  C953  F08C         	movff	_C+84,calc_model_data@bvror	;volatile
 40335  019A84  C954  F08D         	movff	_C+85,calc_model_data@bvror+1	;volatile
 40336  019A88  C955  F08E         	movff	_C+86,calc_model_data@bvror+2	;volatile
 40337  019A8C  C956  F08F         	movff	_C+87,calc_model_data@bvror+3	;volatile
 40338                           
 40339                           ;mbmc.c: 82:   C.v_pv = C.calc[V_PV];
 40340  019A90  EE22  F113         	lfsr	2,_C+20	;volatile
 40341  019A94  006F FF78  F94F    	movff	postinc2,_C+80	;volatile
 40342  019A9A  006F FF78  F950    	movff	postinc2,_C+81	;volatile
 40343  019AA0  006F FF78  F951    	movff	postinc2,_C+82	;volatile
 40344  019AA6  006F FF74  F952    	movff	postdec2,_C+83	;volatile
 40345                           
 40346                           ;mbmc.c: 83:   C.v_cc = C.calc[V_CC];
 40347  019AAC  EE22  F107         	lfsr	2,_C+8	;volatile
 40348  019AB0  006F FF78  F94B    	movff	postinc2,_C+76	;volatile
 40349  019AB6  006F FF78  F94C    	movff	postinc2,_C+77	;volatile
 40350  019ABC  006F FF78  F94D    	movff	postinc2,_C+78	;volatile
 40351  019AC2  006F FF74  F94E    	movff	postdec2,_C+79	;volatile
 40352                           
 40353                           ;mbmc.c: 84:   C.v_inverter = C.calc[V_INVERTER];
 40354  019AC8  EE22  F12F         	lfsr	2,_C+48	;volatile
 40355  019ACC  006F FF78  F963    	movff	postinc2,_C+100	;volatile
 40356  019AD2  006F FF78  F964    	movff	postinc2,_C+101	;volatile
 40357  019AD8  006F FF78  F965    	movff	postinc2,_C+102	;volatile
 40358  019ADE  006F FF74  F966    	movff	postdec2,_C+103	;volatile
 40359                           
 40360                           ;mbmc.c: 85:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 40361  019AE4  0E01               	movlw	1
 40362  019AE6  6EE6               	movwf	postinc1,c
 40363  019AE8  0E10               	movlw	16
 40364  019AEA  6EE6               	movwf	postinc1,c
 40365  019AEC  EE22  F0FF         	lfsr	2,_C
 40366  019AF0  006F FF7B FFE6     	movff	postinc2,postinc1
 40367  019AF6  006F FF7B FFE6     	movff	postinc2,postinc1
 40368  019AFC  006F FF7B FFE6     	movff	postinc2,postinc1
 40369  019B02  006F FF7B FFE6     	movff	postinc2,postinc1
 40370  019B08  EE22  F103         	lfsr	2,_C+4	;volatile
 40371  019B0C  006F FF7B FFE6     	movff	postinc2,postinc1
 40372  019B12  006F FF7B FFE6     	movff	postinc2,postinc1
 40373  019B18  006F FF7B FFE6     	movff	postinc2,postinc1
 40374  019B1E  006F FF7B FFE6     	movff	postinc2,postinc1
 40375  019B24  EC14  F00F         	call	___flsub	;wreg free
 40376  019B28  0060  F0AB  FFE6   	movff	btemp,postinc1
 40377  019B2E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40378  019B34  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40379  019B3A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40380  019B40  EC0E  F0ED         	call	_lp_filter	;wreg free
 40381  019B44  0060  F0A8  F93F   	movff	btemp,_C+64	;volatile
 40382  019B4A  0060  F0AC  F940   	movff	btemp+1,_C+65	;volatile
 40383  019B50  0060  F0B0  F941   	movff	btemp+2,_C+66	;volatile
 40384  019B56  0060  F0B4  F942   	movff	btemp+3,_C+67	;volatile
 40385                           
 40386                           ;mbmc.c: 86:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 40387  019B5C  0E01               	movlw	1
 40388  019B5E  6EE6               	movwf	postinc1,c
 40389  019B60  0E11               	movlw	17
 40390  019B62  6EE6               	movwf	postinc1,c
 40391  019B64  EE22  F153         	lfsr	2,_C+84	;volatile
 40392  019B68  006F FF7B FFE6     	movff	postinc2,postinc1
 40393  019B6E  006F FF7B FFE6     	movff	postinc2,postinc1
 40394  019B74  006F FF7B FFE6     	movff	postinc2,postinc1
 40395  019B7A  006F FF7B FFE6     	movff	postinc2,postinc1
 40396  019B80  EE22  F13F         	lfsr	2,_C+64	;volatile
 40397  019B84  006F FF7B FFE6     	movff	postinc2,postinc1
 40398  019B8A  006F FF7B FFE6     	movff	postinc2,postinc1
 40399  019B90  006F FF7B FFE6     	movff	postinc2,postinc1
 40400  019B96  006F FF7B FFE6     	movff	postinc2,postinc1
 40401  019B9C  ECFF  F0B2         	call	___flmul	;wreg free
 40402  019BA0  0060  F0AB  FFE6   	movff	btemp,postinc1
 40403  019BA6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40404  019BAC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40405  019BB2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40406  019BB8  EC0E  F0ED         	call	_lp_filter	;wreg free
 40407  019BBC  0060  F0A8  F973   	movff	btemp,_C+116	;volatile
 40408  019BC2  0060  F0AC  F974   	movff	btemp+1,_C+117	;volatile
 40409  019BC8  0060  F0B0  F975   	movff	btemp+2,_C+118	;volatile
 40410  019BCE  0060  F0B4  F976   	movff	btemp+3,_C+119	;volatile
 40411                           
 40412                           ;mbmc.c: 87:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 40413  019BD4  0E01               	movlw	1
 40414  019BD6  6EE6               	movwf	postinc1,c
 40415  019BD8  0E12               	movlw	18
 40416  019BDA  6EE6               	movwf	postinc1,c
 40417  019BDC  EE22  F14F         	lfsr	2,_C+80	;volatile
 40418  019BE0  006F FF7B FFE6     	movff	postinc2,postinc1
 40419  019BE6  006F FF7B FFE6     	movff	postinc2,postinc1
 40420  019BEC  006F FF7B FFE6     	movff	postinc2,postinc1
 40421  019BF2  006F FF7B FFE6     	movff	postinc2,postinc1
 40422  019BF8  EE22  F147         	lfsr	2,_C+72	;volatile
 40423  019BFC  006F FF7B FFE6     	movff	postinc2,postinc1
 40424  019C02  006F FF7B FFE6     	movff	postinc2,postinc1
 40425  019C08  006F FF7B FFE6     	movff	postinc2,postinc1
 40426  019C0E  006F FF7B FFE6     	movff	postinc2,postinc1
 40427  019C14  ECFF  F0B2         	call	___flmul	;wreg free
 40428  019C18  0060  F0AB  FFE6   	movff	btemp,postinc1
 40429  019C1E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40430  019C24  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40431  019C2A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40432  019C30  EC0E  F0ED         	call	_lp_filter	;wreg free
 40433  019C34  0060  F0A8  F97B   	movff	btemp,_C+124	;volatile
 40434  019C3A  0060  F0AC  F97C   	movff	btemp+1,_C+125	;volatile
 40435  019C40  0060  F0B0  F97D   	movff	btemp+2,_C+126	;volatile
 40436  019C46  0060  F0B4  F97E   	movff	btemp+3,_C+127	;volatile
 40437                           
 40438                           ;mbmc.c: 88:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 40439  019C4C  0E01               	movlw	1
 40440  019C4E  6EE6               	movwf	postinc1,c
 40441  019C50  0E13               	movlw	19
 40442  019C52  6EE6               	movwf	postinc1,c
 40443  019C54  0E00               	movlw	0
 40444  019C56  6EE6               	movwf	postinc1,c
 40445  019C58  0E00               	movlw	0
 40446  019C5A  6EE6               	movwf	postinc1,c
 40447  019C5C  0E60               	movlw	96
 40448  019C5E  6EE6               	movwf	postinc1,c
 40449  019C60  0EC1               	movlw	193
 40450  019C62  6EE6               	movwf	postinc1,c
 40451  019C64  EE22  F163         	lfsr	2,_C+100	;volatile
 40452  019C68  006F FF7B FFE6     	movff	postinc2,postinc1
 40453  019C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 40454  019C74  006F FF7B FFE6     	movff	postinc2,postinc1
 40455  019C7A  006F FF7B FFE6     	movff	postinc2,postinc1
 40456  019C80  EE22  F13F         	lfsr	2,_C+64	;volatile
 40457  019C84  006F FF7B FFE6     	movff	postinc2,postinc1
 40458  019C8A  006F FF7B FFE6     	movff	postinc2,postinc1
 40459  019C90  006F FF7B FFE6     	movff	postinc2,postinc1
 40460  019C96  006F FF7B FFE6     	movff	postinc2,postinc1
 40461  019C9C  ECFF  F0B2         	call	___flmul	;wreg free
 40462  019CA0  0060  F0AB  FFE6   	movff	btemp,postinc1
 40463  019CA6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40464  019CAC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40465  019CB2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40466  019CB8  EC14  F0B7         	call	___fladd	;wreg free
 40467  019CBC  0060  F0AB  FFE6   	movff	btemp,postinc1
 40468  019CC2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40469  019CC8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40470  019CCE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40471  019CD4  EC0E  F0ED         	call	_lp_filter	;wreg free
 40472  019CD8  0060  F0A8  F977   	movff	btemp,_C+120	;volatile
 40473  019CDE  0060  F0AC  F978   	movff	btemp+1,_C+121	;volatile
 40474  019CE4  0060  F0B0  F979   	movff	btemp+2,_C+122	;volatile
 40475  019CEA  0060  F0B4  F97A   	movff	btemp+3,_C+123	;volatile
 40476                           
 40477                           ;mbmc.c: 89:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 40478  019CF0  0E01               	movlw	1
 40479  019CF2  6EE6               	movwf	postinc1,c
 40480  019CF4  0E14               	movlw	20
 40481  019CF6  6EE6               	movwf	postinc1,c
 40482  019CF8  EE22  F153         	lfsr	2,_C+84	;volatile
 40483  019CFC  006F FF7B FFE6     	movff	postinc2,postinc1
 40484  019D02  006F FF7B FFE6     	movff	postinc2,postinc1
 40485  019D08  006F FF7B FFE6     	movff	postinc2,postinc1
 40486  019D0E  006F FF7B FFE6     	movff	postinc2,postinc1
 40487  019D14  EE22  F143         	lfsr	2,_C+68	;volatile
 40488  019D18  006F FF7B FFE6     	movff	postinc2,postinc1
 40489  019D1E  006F FF7B FFE6     	movff	postinc2,postinc1
 40490  019D24  006F FF7B FFE6     	movff	postinc2,postinc1
 40491  019D2A  006F FF7B FFE6     	movff	postinc2,postinc1
 40492  019D30  ECFF  F0B2         	call	___flmul	;wreg free
 40493  019D34  0060  F0AB  FFE6   	movff	btemp,postinc1
 40494  019D3A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40495  019D40  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40496  019D46  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40497  019D4C  EC0E  F0ED         	call	_lp_filter	;wreg free
 40498  019D50  0060  F0A8  F97F   	movff	btemp,_C+128	;volatile
 40499  019D56  0060  F0AC  F980   	movff	btemp+1,_C+129	;volatile
 40500  019D5C  0060  F0B0  F981   	movff	btemp+2,_C+130	;volatile
 40501  019D62  0060  F0B4  F982   	movff	btemp+3,_C+131	;volatile
 40502                           
 40503                           ;mbmc.c: 93:   if (C.p_inverter < 0.0)
 40504  019D68  EE22  F177         	lfsr	2,_C+120	;volatile
 40505  019D6C  0E03               	movlw	3
 40506  019D6E  AEDB               	btfss	plusw2,7,c
 40507  019D70  D010               	goto	l14420
 40508                           
 40509                           ;mbmc.c: 94:    C.p_inverter = 0.0001;
 40510  019D72  0E17               	movlw	23
 40511  019D74  006F FFA0  F977    	movff	wreg,_C+120	;volatile
 40512  019D7A  0EB7               	movlw	183
 40513  019D7C  006F FFA0  F978    	movff	wreg,_C+121	;volatile
 40514  019D82  0ED1               	movlw	209
 40515  019D84  006F FFA0  F979    	movff	wreg,_C+122	;volatile
 40516  019D8A  0E38               	movlw	56
 40517  019D8C  006F FFA0  F97A    	movff	wreg,_C+123	;volatile
 40518  019D92                     l14420:
 40519                           
 40520                           ;mbmc.c: 96:  start_bsoc();
 40521  019D92  ECBD  F013         	call	_start_bsoc	;wreg free
 40522                           
 40523                           ; BSR set to: 57
 40524                           ;mbmc.c: 97:  C.update = 1;
 40525  019D96  0E01               	movlw	1
 40526  019D98  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 40527                           
 40528                           ; BSR set to: 57
 40529                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 40530  019D9E  0012               	return		;funcret
 40531  019DA0                     __end_of_calc_model_data:
 40532                           	opt callstack 0
 40533                           
 40534 ;; *************** function _stop_bsoc *****************
 40535 ;; Defined at:
 40536 ;;		line 130 in file "bsoc.c"
 40537 ;; Parameters:    Size  Location     Type
 40538 ;;		None
 40539 ;; Auto vars:     Size  Location     Type
 40540 ;;		None
 40541 ;; Return value:  Size  Location     Type
 40542 ;;                  1  [STACK] void 
 40543 ;; Registers used:
 40544 ;;		None
 40545 ;; Tracked objects:
 40546 ;;		On entry : 0/1
 40547 ;;		On exit  : 3F/39
 40548 ;;		Unchanged: 0/0
 40549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40554 ;;Total ram usage:        0 bytes
 40555 ;; Hardware stack levels used:    1
 40556 ;; Hardware stack levels required when called:   15
 40557 ;; This function calls:
 40558 ;;		Nothing
 40559 ;; This function is called by:
 40560 ;;		_calc_model_data
 40561 ;;		_load_hist_data
 40562 ;; This function uses a reentrant model
 40563 ;;
 40564                           
 40565                           	psect	text149
 40566  002A90                     __ptext149:
 40567                           	opt callstack 0
 40568  002A90                     _stop_bsoc:
 40569                           	opt callstack 14
 40570                           
 40571                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 40572                           
 40573                           ; BSR set to: 57
 40574                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40575                           ;incstack = 0
 40576  002A90  0139               	movlb	57	; () banked
 40577  002A92  9D96               	bcf	150,6,b	;volatile
 40578                           
 40579                           ; BSR set to: 57
 40580                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 40581  002A94  0012               	return		;funcret
 40582  002A96                     __end_of_stop_bsoc:
 40583                           	opt callstack 0
 40584                           
 40585 ;; *************** function _start_bsoc *****************
 40586 ;; Defined at:
 40587 ;;		line 121 in file "bsoc.c"
 40588 ;; Parameters:    Size  Location     Type
 40589 ;;		None
 40590 ;; Auto vars:     Size  Location     Type
 40591 ;;		None
 40592 ;; Return value:  Size  Location     Type
 40593 ;;                  1  [STACK] void 
 40594 ;; Registers used:
 40595 ;;		wreg, status,2, status,0, btemp+11
 40596 ;; Tracked objects:
 40597 ;;		On entry : 0/39
 40598 ;;		On exit  : 3F/39
 40599 ;;		Unchanged: 0/0
 40600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40605 ;;Total ram usage:        0 bytes
 40606 ;; Hardware stack levels used:    1
 40607 ;; Hardware stack levels required when called:   15
 40608 ;; This function calls:
 40609 ;;		Nothing
 40610 ;; This function is called by:
 40611 ;;		_calc_model_data
 40612 ;;		_load_hist_data
 40613 ;; This function uses a reentrant model
 40614 ;;
 40615                           
 40616                           	psect	text150
 40617  00277A                     __ptext150:
 40618                           	opt callstack 0
 40619  00277A                     _start_bsoc:
 40620                           	opt callstack 14
 40621                           
 40622                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 40623                           
 40624                           ; BSR set to: 57
 40625                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40626                           ;incstack = 0
 40627  00277A  0139               	movlb	57	; () banked
 40628  00277C  8D96               	bsf	150,6,b	;volatile
 40629                           
 40630                           ; BSR set to: 57
 40631  00277E  A4BE               	btfss	190,2,c	;volatile
 40632  002780  D002               	goto	u12760
 40633  002782  0E01               	movlw	1
 40634  002784  D001               	goto	u12766
 40635  002786                     u12760:
 40636  002786  0E00               	movlw	0
 40637  002788                     u12766:
 40638  002788  0AFF               	xorlw	255
 40639  00278A  6E35               	movwf	(btemp+11)^0,c
 40640  00278C  4635               	rlncf	(btemp+11)^0,f,c
 40641  00278E  4635               	rlncf	(btemp+11)^0,f,c
 40642  002790  50BE               	movf	190,w,c	;volatile
 40643  002792  1835               	xorwf	(btemp+11)^0,w,c
 40644  002794  0BFB               	andlw	-5
 40645  002796  1835               	xorwf	(btemp+11)^0,w,c
 40646  002798  6EBE               	movwf	190,c	;volatile
 40647                           
 40648                           ; BSR set to: 57
 40649                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 40650  00279A  0012               	return		;funcret
 40651  00279C                     __end_of_start_bsoc:
 40652                           	opt callstack 0
 40653                           
 40654 ;; *************** function _lp_filter *****************
 40655 ;; Defined at:
 40656 ;;		line 29 in file "mbmc.c"
 40657 ;; Parameters:    Size  Location     Type
 40658 ;;  new             4  [STACK] const float 
 40659 ;;  bn              1  [STACK] const unsigned char 
 40660 ;;  slow            1  [STACK] const char 
 40661 ;; Auto vars:     Size  Location     Type
 40662 ;;  lp_speed        4  [STACK] float 
 40663 ;; Return value:  Size  Location     Type
 40664 ;;                  4  [STACK] float 
 40665 ;; Registers used:
 40666 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 40667 ;; Tracked objects:
 40668 ;;		On entry : 0/2
 40669 ;;		On exit  : 0/0
 40670 ;;		Unchanged: 0/0
 40671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40676 ;;Total ram usage:        0 bytes
 40677 ;; Hardware stack levels used:    1
 40678 ;; Hardware stack levels required when called:   17
 40679 ;; This function calls:
 40680 ;;		___fladd
 40681 ;;		___flmul
 40682 ;;		___flsub
 40683 ;; This function is called by:
 40684 ;;		_main
 40685 ;;		_convert_adc_data
 40686 ;;		_calc_model_data
 40687 ;; This function uses a reentrant model
 40688 ;;
 40689                           
 40690                           	psect	text151
 40691  01DA1C                     __ptext151:
 40692                           	opt callstack 0
 40693  01DA1C                     _lp_filter:
 40694                           	opt callstack 0
 40695                           
 40696                           ; BSR set to: 57
 40697                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40698  01DA1C  52E6               	movf	postinc1,f,c
 40699  01DA1E  52E6               	movf	postinc1,f,c
 40700  01DA20  52E6               	movf	postinc1,f,c
 40701  01DA22  52E6               	movf	postinc1,f,c
 40702                           
 40703                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 40704                           ;stkvar	_bn @ sp[(-4)+-5]
 40705                           
 40706                           ;incstack = 0
 40707  01DA24  0EF7               	movlw	-9
 40708  01DA26  006F FF8C  F02A    	movff	plusw1,btemp
 40709  01DA2C  0E14               	movlw	20
 40710  01DA2E  642A               	cpfsgt	btemp^0,c
 40711  01DA30  D011               	goto	l13532
 40712  01DA32                     u12590:
 40713                           
 40714                           ;mbmc.c: 35:   return new;
 40715                           ;stkvar	_new @ sp[(-4)+-4]
 40716  01DA32  0EF8               	movlw	-8
 40717  01DA34  006F FF8C  F02A    	movff	plusw1,btemp
 40718  01DA3A  0EF9               	movlw	-7
 40719  01DA3C  006F FF8C  F02B    	movff	plusw1,btemp+1
 40720  01DA42  0EFA               	movlw	-6
 40721  01DA44  006F FF8C  F02C    	movff	plusw1,btemp+2
 40722  01DA4A  0EFB               	movlw	-5
 40723  01DA4C  006F FF8C  F02D    	movff	plusw1,btemp+3
 40724  01DA52  D0BD               	goto	l2137
 40725  01DA54                     l13532:
 40726                           
 40727                           ;mbmc.c: 37:  if (slow == (-1)) {
 40728                           ;stkvar	_slow @ sp[(-4)+-6]
 40729  01DA54  0EF6               	movlw	-10
 40730  01DA56  28E3               	incf	plusw1,w,c
 40731  01DA58  A4D8               	btfss	status,2,c
 40732  01DA5A  D012               	goto	l13540
 40733                           
 40734                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 40735                           ;stkvar	_bn @ sp[(-4)+-5]
 40736  01DA5C  0EF7               	movlw	-9
 40737  01DA5E  50E3               	movf	plusw1,w,c
 40738  01DA60  0D04               	mullw	4
 40739  01DA62  0E00               	movlw	low lp_filter@smooth
 40740  01DA64  24F3               	addwf	243,w,c
 40741  01DA66  6ED9               	movwf	fsr2l,c
 40742  01DA68  0E03               	movlw	high lp_filter@smooth
 40743  01DA6A  20F4               	addwfc	prodh,w,c
 40744  01DA6C  6EDA               	movwf	fsr2h,c
 40745  01DA6E  0E00               	movlw	0
 40746  01DA70  6EDE               	movwf	postinc2,c
 40747  01DA72  0E00               	movlw	0
 40748  01DA74  6EDE               	movwf	postinc2,c
 40749  01DA76  0E00               	movlw	0
 40750  01DA78  6EDE               	movwf	postinc2,c
 40751  01DA7A  0E00               	movlw	0
 40752  01DA7C  6EDD               	movwf	postdec2,c
 40753  01DA7E  D7D9               	goto	u12590
 40754  01DA80                     l13540:
 40755                           
 40756                           ;mbmc.c: 42:  if (slow) {
 40757                           ;stkvar	_slow @ sp[(-4)+-6]
 40758  01DA80  0EF6               	movlw	-10
 40759  01DA82  50E3               	movf	plusw1,w,c
 40760  01DA84  B4D8               	btfsc	status,2,c
 40761  01DA86  D006               	goto	l13544
 40762                           
 40763                           ;mbmc.c: 43:   lp_speed = 0.033;
 40764  01DA88  0E02               	movlw	2
 40765  01DA8A  6E32               	movwf	(btemp+8)^0,c
 40766  01DA8C  0E2B               	movlw	43
 40767  01DA8E  6E33               	movwf	(btemp+9)^0,c
 40768  01DA90  0E07               	movlw	7
 40769  01DA92  D005               	goto	L46
 40770  01DA94                     l13544:
 40771                           
 40772                           ;mbmc.c: 45:   lp_speed = 0.066;
 40773  01DA94  0E02               	movlw	2
 40774  01DA96  6E32               	movwf	(btemp+8)^0,c
 40775  01DA98  0E2B               	movlw	43
 40776  01DA9A  6E33               	movwf	(btemp+9)^0,c
 40777  01DA9C  0E87               	movlw	135
 40778  01DA9E                     L46:
 40779  01DA9E  6E34               	movwf	(btemp+10)^0,c
 40780  01DAA0  0E3D               	movlw	61
 40781  01DAA2  6E35               	movwf	(btemp+11)^0,c
 40782                           
 40783                           ;stkvar	_lp_speed @ sp[(-4)+0]
 40784  01DAA4  0EFC               	movlw	-4
 40785  01DAA6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40786  01DAAC  0EFD               	movlw	-3
 40787  01DAAE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40788  01DAB4  0EFE               	movlw	-2
 40789  01DAB6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40790  01DABC  0EFF               	movlw	-1
 40791  01DABE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40792                           
 40793                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 40794                           ;stkvar	_bn @ sp[(-4)+-5]
 40795  01DAC4  0EF7               	movlw	-9
 40796  01DAC6  50E3               	movf	plusw1,w,c
 40797  01DAC8  0D04               	mullw	4
 40798  01DACA  0E00               	movlw	low lp_filter@smooth
 40799  01DACC  24F3               	addwf	243,w,c
 40800  01DACE  6ED9               	movwf	fsr2l,c
 40801  01DAD0  0E03               	movlw	high lp_filter@smooth
 40802  01DAD2  20F4               	addwfc	prodh,w,c
 40803  01DAD4  6EDA               	movwf	fsr2h,c
 40804  01DAD6  006F FF7B FFE6     	movff	postinc2,postinc1
 40805  01DADC  006F FF7B FFE6     	movff	postinc2,postinc1
 40806  01DAE2  006F FF7B FFE6     	movff	postinc2,postinc1
 40807  01DAE8  006F FF7B FFE6     	movff	postinc2,postinc1
 40808                           
 40809                           ;stkvar	_lp_speed @ sp[(-8)+0]
 40810  01DAEE  0EF8               	movlw	-8
 40811  01DAF0  006F FF8F FFE6     	movff	plusw1,postinc1
 40812  01DAF6  006F FF8F FFE6     	movff	plusw1,postinc1
 40813  01DAFC  006F FF8F FFE6     	movff	plusw1,postinc1
 40814  01DB02  006F FF8F FFE6     	movff	plusw1,postinc1
 40815                           
 40816                           ;stkvar	_bn @ sp[(-12)+-5]
 40817  01DB08  0EEF               	movlw	-17
 40818  01DB0A  50E3               	movf	plusw1,w,c
 40819  01DB0C  0D04               	mullw	4
 40820  01DB0E  0E00               	movlw	low lp_filter@smooth
 40821  01DB10  24F3               	addwf	243,w,c
 40822  01DB12  6ED9               	movwf	fsr2l,c
 40823  01DB14  0E03               	movlw	high lp_filter@smooth
 40824  01DB16  20F4               	addwfc	prodh,w,c
 40825  01DB18  6EDA               	movwf	fsr2h,c
 40826  01DB1A  006F FF7B FFE6     	movff	postinc2,postinc1
 40827  01DB20  006F FF7B FFE6     	movff	postinc2,postinc1
 40828  01DB26  006F FF7B FFE6     	movff	postinc2,postinc1
 40829  01DB2C  006F FF7B FFE6     	movff	postinc2,postinc1
 40830                           
 40831                           ;stkvar	_new @ sp[(-16)+-4]
 40832  01DB32  0EEC               	movlw	-20
 40833  01DB34  006F FF8F FFE6     	movff	plusw1,postinc1
 40834  01DB3A  006F FF8F FFE6     	movff	plusw1,postinc1
 40835  01DB40  006F FF8F FFE6     	movff	plusw1,postinc1
 40836  01DB46  006F FF8F FFE6     	movff	plusw1,postinc1
 40837  01DB4C  EC14  F00F         	call	___flsub	;wreg free
 40838  01DB50  0060  F0AB  FFE6   	movff	btemp,postinc1
 40839  01DB56  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40840  01DB5C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40841  01DB62  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40842  01DB68  ECFF  F0B2         	call	___flmul	;wreg free
 40843  01DB6C  0060  F0AB  FFE6   	movff	btemp,postinc1
 40844  01DB72  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40845  01DB78  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40846  01DB7E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40847  01DB84  EC14  F0B7         	call	___fladd	;wreg free
 40848                           
 40849                           ;stkvar	_bn @ sp[(-4)+-5]
 40850  01DB88  0EF7               	movlw	-9
 40851  01DB8A  50E3               	movf	plusw1,w,c
 40852  01DB8C  0D04               	mullw	4
 40853  01DB8E  0E00               	movlw	low lp_filter@smooth
 40854  01DB90  24F3               	addwf	243,w,c
 40855  01DB92  6ED9               	movwf	fsr2l,c
 40856  01DB94  0E03               	movlw	high lp_filter@smooth
 40857  01DB96  20F4               	addwfc	prodh,w,c
 40858  01DB98  6EDA               	movwf	fsr2h,c
 40859  01DB9A  0060  F0AB  FFDE   	movff	btemp,postinc2
 40860  01DBA0  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 40861  01DBA6  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 40862  01DBAC  0060  F0B7  FFDD   	movff	btemp+3,postdec2
 40863  01DBB2  52DD               	movf	postdec2,f,c
 40864  01DBB4  52DD               	movf	postdec2,f,c
 40865  01DBB6  006F FF78  F02A    	movff	postinc2,btemp
 40866  01DBBC  006F FF78  F02B    	movff	postinc2,btemp+1
 40867  01DBC2  006F FF78  F02C    	movff	postinc2,btemp+2
 40868  01DBC8  006F FF78  F02D    	movff	postinc2,btemp+3
 40869  01DBCE                     l2137:
 40870                           
 40871                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 40872  01DBCE  0EF6               	movlw	246
 40873  01DBD0  26E1               	addwf	fsr1l,f,c
 40874  01DBD2  0EFF               	movlw	255
 40875  01DBD4  22E2               	addwfc	fsr1h,f,c
 40876  01DBD6  0012               	return		;funcret
 40877  01DBD8                     __end_of_lp_filter:
 40878                           	opt callstack 0
 40879                           
 40880 ;; *************** function ___flsub *****************
 40881 ;; Defined at:
 40882 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 40883 ;; Parameters:    Size  Location     Type
 40884 ;;  b               4  [STACK] float 
 40885 ;;  a               4  [STACK] float 
 40886 ;; Auto vars:     Size  Location     Type
 40887 ;;		None
 40888 ;; Return value:  Size  Location     Type
 40889 ;;                  4  [STACK] float 
 40890 ;; Registers used:
 40891 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 40892 ;; Tracked objects:
 40893 ;;		On entry : 0/0
 40894 ;;		On exit  : 0/0
 40895 ;;		Unchanged: 0/0
 40896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40901 ;;Total ram usage:        0 bytes
 40902 ;; Hardware stack levels used:    1
 40903 ;; Hardware stack levels required when called:   16
 40904 ;; This function calls:
 40905 ;;		___fladd
 40906 ;; This function is called by:
 40907 ;;		_conv_raw_result
 40908 ;;		_lp_filter
 40909 ;;		_calc_model_data
 40910 ;;		_calc_ror_data
 40911 ;;		_esr_check
 40912 ;;		_efgtoa
 40913 ;; This function uses a reentrant model
 40914 ;;
 40915                           
 40916                           	psect	text152
 40917  001E28                     __ptext152:
 40918                           	opt callstack 0
 40919  001E28                     ___flsub:
 40920                           	opt callstack 0
 40921                           
 40922                           ;stkvar	_a @ sp[(0)+-8]
 40923                           
 40924                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40925                           ;incstack = 0
 40926 ;; hardware stack exceeded
 40927  001E28  0EFB               	movlw	-5
 40928  001E2A  7EE3               	btg	plusw1,7,c
 40929                           
 40930                           ;stkvar	_a @ sp[(0)+-8]
 40931  001E2C  0EF8               	movlw	-8
 40932  001E2E  006F FF8F FFE6     	movff	plusw1,postinc1
 40933  001E34  006F FF8F FFE6     	movff	plusw1,postinc1
 40934  001E3A  006F FF8F FFE6     	movff	plusw1,postinc1
 40935  001E40  006F FF8F FFE6     	movff	plusw1,postinc1
 40936                           
 40937                           ;stkvar	_b @ sp[(-4)+-4]
 40938  001E46  0EF8               	movlw	-8
 40939  001E48  006F FF8F FFE6     	movff	plusw1,postinc1
 40940  001E4E  006F FF8F FFE6     	movff	plusw1,postinc1
 40941  001E54  006F FF8F FFE6     	movff	plusw1,postinc1
 40942  001E5A  006F FF8F FFE6     	movff	plusw1,postinc1
 40943  001E60  EC14  F0B7         	call	___fladd	;wreg free
 40944                           
 40945                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 40946  001E64  0EF8               	movlw	248
 40947  001E66  26E1               	addwf	fsr1l,f,c
 40948  001E68  0EFF               	movlw	255
 40949  001E6A  22E2               	addwfc	fsr1h,f,c
 40950  001E6C  0012               	return		;funcret
 40951  001E6E                     __end_of___flsub:
 40952                           	opt callstack 0
 40953                           
 40954 ;; *************** function ___fladd *****************
 40955 ;; Defined at:
 40956 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 40957 ;; Parameters:    Size  Location     Type
 40958 ;;  b               4  [STACK] float 
 40959 ;;  a               4  [STACK] float 
 40960 ;; Auto vars:     Size  Location     Type
 40961 ;;  grs             1  [STACK] unsigned char 
 40962 ;;  bexp            1  [STACK] unsigned char 
 40963 ;;  aexp            1  [STACK] unsigned char 
 40964 ;;  signs           1  [STACK] unsigned char 
 40965 ;; Return value:  Size  Location     Type
 40966 ;;                  4  [STACK] unsigned char 
 40967 ;; Registers used:
 40968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 40969 ;; Tracked objects:
 40970 ;;		On entry : 0/0
 40971 ;;		On exit  : 0/0
 40972 ;;		Unchanged: 0/0
 40973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40978 ;;Total ram usage:        0 bytes
 40979 ;; Hardware stack levels used:    1
 40980 ;; Hardware stack levels required when called:   15
 40981 ;; This function calls:
 40982 ;;		Nothing
 40983 ;; This function is called by:
 40984 ;;		_main
 40985 ;;		_lp_filter
 40986 ;;		_calc_model_data
 40987 ;;		_load_hist_data
 40988 ;;		_efgtoa
 40989 ;;		___asfladd
 40990 ;;		___flsub
 40991 ;; This function uses a reentrant model
 40992 ;;
 40993                           
 40994                           	psect	text153
 40995  016E28                     __ptext153:
 40996                           	opt callstack 0
 40997  016E28                     ___fladd:
 40998                           	opt callstack 0
 40999                           
 41000                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41001  016E28  52E6               	movf	postinc1,f,c
 41002  016E2A  52E6               	movf	postinc1,f,c
 41003  016E2C  52E6               	movf	postinc1,f,c
 41004  016E2E  52E6               	movf	postinc1,f,c
 41005                           
 41006                           ;stkvar	_b @ sp[(-4)+-4]
 41007                           
 41008                           ;incstack = 0
 41009 ;; hardware stack exceeded
 41010  016E30  0EFB               	movlw	251
 41011  016E32  24E1               	addwf	fsr1l,w,c
 41012  016E34  6ED9               	movwf	fsr2l,c
 41013  016E36  0EFF               	movlw	255
 41014  016E38  20E2               	addwfc	fsr1h,w,c
 41015  016E3A  6EDA               	movwf	fsr2h,c
 41016  016E3C  50DF               	movf	indf2,w,c
 41017  016E3E  6E35               	movwf	(btemp+11)^0,c
 41018  016E40  0E80               	movlw	128
 41019  016E42  1635               	andwf	(btemp+11)^0,f,c
 41020                           
 41021                           ;stkvar	_signs @ sp[(-4)+3]
 41022  016E44  0EFF               	movlw	-1
 41023  016E46  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41024                           
 41025                           ;stkvar	_b @ sp[(-4)+-4]
 41026  016E4C  0EFB               	movlw	251
 41027  016E4E  24E1               	addwf	fsr1l,w,c
 41028  016E50  6ED9               	movwf	fsr2l,c
 41029  016E52  0EFF               	movlw	255
 41030  016E54  20E2               	addwfc	fsr1h,w,c
 41031  016E56  6EDA               	movwf	fsr2h,c
 41032  016E58  50DF               	movf	indf2,w,c
 41033  016E5A  6E35               	movwf	(btemp+11)^0,c
 41034  016E5C  90D8               	bcf	status,0,c
 41035  016E5E  3435               	rlcf	(btemp+11)^0,w,c
 41036  016E60  6E34               	movwf	(btemp+10)^0,c
 41037                           
 41038                           ;stkvar	_bexp @ sp[(-4)+1]
 41039  016E62  0EFD               	movlw	-3
 41040  016E64  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41041                           
 41042                           ;stkvar	_b @ sp[(-4)+-4]
 41043  016E6A  0EFA               	movlw	250
 41044  016E6C  24E1               	addwf	fsr1l,w,c
 41045  016E6E  6ED9               	movwf	fsr2l,c
 41046  016E70  0EFF               	movlw	255
 41047  016E72  20E2               	addwfc	fsr1h,w,c
 41048  016E74  6EDA               	movwf	fsr2h,c
 41049  016E76  AEDF               	btfss	indf2,7,c
 41050  016E78  D002               	goto	l9796
 41051                           
 41052                           ;stkvar	_bexp @ sp[(-4)+1]
 41053  016E7A  0EFD               	movlw	-3
 41054  016E7C  80E3               	bsf	plusw1,0,c
 41055  016E7E                     l9796:
 41056                           
 41057                           ;stkvar	_bexp @ sp[(-4)+1]
 41058  016E7E  0EFD               	movlw	-3
 41059  016E80  50E3               	movf	plusw1,w,c
 41060  016E82  B4D8               	btfsc	status,2,c
 41061  016E84  D027               	goto	l9806
 41062                           
 41063                           ;stkvar	_bexp @ sp[(-4)+1]
 41064  016E86  0EFD               	movlw	-3
 41065  016E88  28E3               	incf	plusw1,w,c
 41066  016E8A  A4D8               	btfss	status,2,c
 41067  016E8C  D018               	goto	l9802
 41068  016E8E  0E00               	movlw	0
 41069  016E90  6E32               	movwf	(btemp+8)^0,c
 41070  016E92  0E00               	movlw	0
 41071  016E94  6E33               	movwf	(btemp+9)^0,c
 41072  016E96  0E00               	movlw	0
 41073  016E98  6E34               	movwf	(btemp+10)^0,c
 41074  016E9A  0E00               	movlw	0
 41075  016E9C  6E35               	movwf	(btemp+11)^0,c
 41076                           
 41077                           ;stkvar	_b @ sp[(-4)+-4]
 41078  016E9E  0EF8               	movlw	-8
 41079  016EA0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41080  016EA6  0EF9               	movlw	-7
 41081  016EA8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41082  016EAE  0EFA               	movlw	-6
 41083  016EB0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41084  016EB6  0EFB               	movlw	-5
 41085  016EB8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41086  016EBE                     l9802:
 41087                           
 41088                           ;stkvar	_b @ sp[(-4)+-4]
 41089  016EBE  0EFA               	movlw	-6
 41090  016EC0  8EE3               	bsf	plusw1,7,c
 41091                           
 41092                           ;stkvar	_b @ sp[(-4)+-4]
 41093  016EC2  0EFB               	movlw	251
 41094  016EC4  24E1               	addwf	fsr1l,w,c
 41095  016EC6  6ED9               	movwf	fsr2l,c
 41096  016EC8  0EFF               	movlw	255
 41097  016ECA  20E2               	addwfc	fsr1h,w,c
 41098  016ECC  6EDA               	movwf	fsr2h,c
 41099  016ECE  0E00               	movlw	0
 41100  016ED0  6EDF               	movwf	indf2,c
 41101  016ED2  D018               	goto	l9808
 41102  016ED4                     l9806:
 41103  016ED4  0E00               	movlw	0
 41104  016ED6  6E32               	movwf	(btemp+8)^0,c
 41105  016ED8  0E00               	movlw	0
 41106  016EDA  6E33               	movwf	(btemp+9)^0,c
 41107  016EDC  0E00               	movlw	0
 41108  016EDE  6E34               	movwf	(btemp+10)^0,c
 41109  016EE0  0E00               	movlw	0
 41110  016EE2  6E35               	movwf	(btemp+11)^0,c
 41111                           
 41112                           ;stkvar	_b @ sp[(-4)+-4]
 41113  016EE4  0EF8               	movlw	-8
 41114  016EE6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41115  016EEC  0EF9               	movlw	-7
 41116  016EEE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41117  016EF4  0EFA               	movlw	-6
 41118  016EF6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41119  016EFC  0EFB               	movlw	-5
 41120  016EFE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41121  016F04                     l9808:
 41122                           
 41123                           ;stkvar	_a @ sp[(-4)+-8]
 41124  016F04  0EF7               	movlw	247
 41125  016F06  24E1               	addwf	fsr1l,w,c
 41126  016F08  6ED9               	movwf	fsr2l,c
 41127  016F0A  0EFF               	movlw	255
 41128  016F0C  20E2               	addwfc	fsr1h,w,c
 41129  016F0E  6EDA               	movwf	fsr2h,c
 41130  016F10  50DF               	movf	indf2,w,c
 41131  016F12  6E35               	movwf	(btemp+11)^0,c
 41132  016F14  0E80               	movlw	128
 41133  016F16  1635               	andwf	(btemp+11)^0,f,c
 41134                           
 41135                           ;stkvar	_aexp @ sp[(-4)+2]
 41136  016F18  0EFE               	movlw	-2
 41137  016F1A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41138                           
 41139                           ;stkvar	_signs @ sp[(-4)+3]
 41140                           ;stkvar	_aexp @ sp[(-4)+2]
 41141  016F20  50E1               	movf	fsr1l,w,c
 41142  016F22  0FFE               	addlw	-2
 41143  016F24  6ED9               	movwf	fsr2l,c
 41144  016F26  50E2               	movf	fsr1h,w,c
 41145  016F28  6EDA               	movwf	fsr2h,c
 41146  016F2A  0EFF               	movlw	255
 41147  016F2C  22DA               	addwfc	fsr2h,f,c
 41148  016F2E  0EFF               	movlw	-1
 41149  016F30  50E3               	movf	plusw1,w,c
 41150  016F32  18DE               	xorwf	postinc2,w,c
 41151  016F34  B4D8               	btfsc	status,2,c
 41152  016F36  D002               	goto	l9814
 41153                           
 41154                           ;stkvar	_signs @ sp[(-4)+3]
 41155  016F38  0EFF               	movlw	-1
 41156  016F3A  8CE3               	bsf	plusw1,6,c
 41157  016F3C                     l9814:
 41158                           
 41159                           ;stkvar	_a @ sp[(-4)+-8]
 41160  016F3C  0EF7               	movlw	247
 41161  016F3E  24E1               	addwf	fsr1l,w,c
 41162  016F40  6ED9               	movwf	fsr2l,c
 41163  016F42  0EFF               	movlw	255
 41164  016F44  20E2               	addwfc	fsr1h,w,c
 41165  016F46  6EDA               	movwf	fsr2h,c
 41166  016F48  50DF               	movf	indf2,w,c
 41167  016F4A  6E35               	movwf	(btemp+11)^0,c
 41168  016F4C  90D8               	bcf	status,0,c
 41169  016F4E  3435               	rlcf	(btemp+11)^0,w,c
 41170  016F50  6E34               	movwf	(btemp+10)^0,c
 41171                           
 41172                           ;stkvar	_aexp @ sp[(-4)+2]
 41173  016F52  0EFE               	movlw	-2
 41174  016F54  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41175                           
 41176                           ;stkvar	_a @ sp[(-4)+-8]
 41177  016F5A  0EF6               	movlw	246
 41178  016F5C  24E1               	addwf	fsr1l,w,c
 41179  016F5E  6ED9               	movwf	fsr2l,c
 41180  016F60  0EFF               	movlw	255
 41181  016F62  20E2               	addwfc	fsr1h,w,c
 41182  016F64  6EDA               	movwf	fsr2h,c
 41183  016F66  AEDF               	btfss	indf2,7,c
 41184  016F68  D002               	goto	l9820
 41185                           
 41186                           ;stkvar	_aexp @ sp[(-4)+2]
 41187  016F6A  0EFE               	movlw	-2
 41188  016F6C  80E3               	bsf	plusw1,0,c
 41189  016F6E                     l9820:
 41190                           
 41191                           ;stkvar	_aexp @ sp[(-4)+2]
 41192  016F6E  0EFE               	movlw	-2
 41193  016F70  50E3               	movf	plusw1,w,c
 41194  016F72  B4D8               	btfsc	status,2,c
 41195  016F74  D027               	goto	l9830
 41196                           
 41197                           ;stkvar	_aexp @ sp[(-4)+2]
 41198  016F76  0EFE               	movlw	-2
 41199  016F78  28E3               	incf	plusw1,w,c
 41200  016F7A  A4D8               	btfss	status,2,c
 41201  016F7C  D018               	goto	l9826
 41202  016F7E  0E00               	movlw	0
 41203  016F80  6E32               	movwf	(btemp+8)^0,c
 41204  016F82  0E00               	movlw	0
 41205  016F84  6E33               	movwf	(btemp+9)^0,c
 41206  016F86  0E00               	movlw	0
 41207  016F88  6E34               	movwf	(btemp+10)^0,c
 41208  016F8A  0E00               	movlw	0
 41209  016F8C  6E35               	movwf	(btemp+11)^0,c
 41210                           
 41211                           ;stkvar	_a @ sp[(-4)+-8]
 41212  016F8E  0EF4               	movlw	-12
 41213  016F90  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41214  016F96  0EF5               	movlw	-11
 41215  016F98  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41216  016F9E  0EF6               	movlw	-10
 41217  016FA0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41218  016FA6  0EF7               	movlw	-9
 41219  016FA8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41220  016FAE                     l9826:
 41221                           
 41222                           ;stkvar	_a @ sp[(-4)+-8]
 41223  016FAE  0EF6               	movlw	-10
 41224  016FB0  8EE3               	bsf	plusw1,7,c
 41225                           
 41226                           ;stkvar	_a @ sp[(-4)+-8]
 41227  016FB2  0EF7               	movlw	247
 41228  016FB4  24E1               	addwf	fsr1l,w,c
 41229  016FB6  6ED9               	movwf	fsr2l,c
 41230  016FB8  0EFF               	movlw	255
 41231  016FBA  20E2               	addwfc	fsr1h,w,c
 41232  016FBC  6EDA               	movwf	fsr2h,c
 41233  016FBE  0E00               	movlw	0
 41234  016FC0  6EDF               	movwf	indf2,c
 41235  016FC2  D018               	goto	l9832
 41236  016FC4                     l9830:
 41237  016FC4  0E00               	movlw	0
 41238  016FC6  6E32               	movwf	(btemp+8)^0,c
 41239  016FC8  0E00               	movlw	0
 41240  016FCA  6E33               	movwf	(btemp+9)^0,c
 41241  016FCC  0E00               	movlw	0
 41242  016FCE  6E34               	movwf	(btemp+10)^0,c
 41243  016FD0  0E00               	movlw	0
 41244  016FD2  6E35               	movwf	(btemp+11)^0,c
 41245                           
 41246                           ;stkvar	_a @ sp[(-4)+-8]
 41247  016FD4  0EF4               	movlw	-12
 41248  016FD6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41249  016FDC  0EF5               	movlw	-11
 41250  016FDE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41251  016FE4  0EF6               	movlw	-10
 41252  016FE6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41253  016FEC  0EF7               	movlw	-9
 41254  016FEE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41255  016FF4                     l9832:
 41256                           
 41257                           ;stkvar	_bexp @ sp[(-4)+1]
 41258                           ;stkvar	_aexp @ sp[(-4)+2]
 41259  016FF4  50E1               	movf	fsr1l,w,c
 41260  016FF6  0FFE               	addlw	-2
 41261  016FF8  6ED9               	movwf	fsr2l,c
 41262  016FFA  50E2               	movf	fsr1h,w,c
 41263  016FFC  6EDA               	movwf	fsr2h,c
 41264  016FFE  0EFF               	movlw	255
 41265  017000  22DA               	addwfc	fsr2h,f,c
 41266  017002  0EFD               	movlw	-3
 41267  017004  50E3               	movf	plusw1,w,c
 41268  017006  5CDE               	subwf	postinc2,w,c
 41269  017008  B0D8               	btfsc	status,0,c
 41270  01700A  D0A4               	goto	l9868
 41271                           
 41272                           ;stkvar	_signs @ sp[(-4)+3]
 41273  01700C  0EFF               	movlw	-1
 41274  01700E  ACE3               	btfss	plusw1,6,c
 41275  017010  D002               	goto	l9838
 41276                           
 41277                           ;stkvar	_signs @ sp[(-4)+3]
 41278  017012  0EFF               	movlw	-1
 41279  017014  7EE3               	btg	plusw1,7,c
 41280  017016                     l9838:
 41281                           
 41282                           ;stkvar	_bexp @ sp[(-4)+1]
 41283                           ;stkvar	_grs @ sp[(-4)+0]
 41284  017016  0EFD               	movlw	-3
 41285  017018  006F FF8C  F02A    	movff	plusw1,btemp
 41286  01701E  0EFC               	movlw	-4
 41287  017020  0060  F0AB  FFE3   	movff	btemp,plusw1
 41288                           
 41289                           ;stkvar	_aexp @ sp[(-4)+2]
 41290                           ;stkvar	_bexp @ sp[(-4)+1]
 41291  017026  0EFE               	movlw	-2
 41292  017028  006F FF8C  F02A    	movff	plusw1,btemp
 41293  01702E  0EFD               	movlw	-3
 41294  017030  0060  F0AB  FFE3   	movff	btemp,plusw1
 41295                           
 41296                           ;stkvar	_grs @ sp[(-4)+0]
 41297                           ;stkvar	_aexp @ sp[(-4)+2]
 41298  017036  0EFC               	movlw	-4
 41299  017038  006F FF8C  F02A    	movff	plusw1,btemp
 41300  01703E  0EFE               	movlw	-2
 41301  017040  0060  F0AB  FFE3   	movff	btemp,plusw1
 41302                           
 41303                           ;stkvar	_b @ sp[(-4)+-4]
 41304                           ;stkvar	_grs @ sp[(-4)+0]
 41305  017046  0EF8               	movlw	-8
 41306  017048  006F FF8C  F02A    	movff	plusw1,btemp
 41307  01704E  0EFC               	movlw	-4
 41308  017050  0060  F0AB  FFE3   	movff	btemp,plusw1
 41309                           
 41310                           ;stkvar	_a @ sp[(-4)+-8]
 41311                           ;stkvar	_b @ sp[(-4)+-4]
 41312  017056  0EF4               	movlw	-12
 41313  017058  006F FF8C  F02A    	movff	plusw1,btemp
 41314  01705E  0EF8               	movlw	-8
 41315  017060  0060  F0AB  FFE3   	movff	btemp,plusw1
 41316                           
 41317                           ;stkvar	_grs @ sp[(-4)+0]
 41318                           ;stkvar	_a @ sp[(-4)+-8]
 41319  017066  0EFC               	movlw	-4
 41320  017068  006F FF8C  F02A    	movff	plusw1,btemp
 41321  01706E  0EF4               	movlw	-12
 41322  017070  0060  F0AB  FFE3   	movff	btemp,plusw1
 41323                           
 41324                           ;stkvar	_b @ sp[(-4)+-4]
 41325  017076  0EF9               	movlw	249
 41326  017078  24E1               	addwf	fsr1l,w,c
 41327  01707A  6ED9               	movwf	fsr2l,c
 41328  01707C  0EFF               	movlw	255
 41329  01707E  20E2               	addwfc	fsr1h,w,c
 41330  017080  6EDA               	movwf	fsr2h,c
 41331  017082  50DF               	movf	indf2,w,c
 41332  017084  6E35               	movwf	(btemp+11)^0,c
 41333                           
 41334                           ;stkvar	_grs @ sp[(-4)+0]
 41335  017086  0EFC               	movlw	-4
 41336  017088  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41337                           
 41338                           ;stkvar	_a @ sp[(-4)+-8]
 41339  01708E  0EF5               	movlw	245
 41340  017090  24E1               	addwf	fsr1l,w,c
 41341  017092  6ED9               	movwf	fsr2l,c
 41342  017094  0EFF               	movlw	255
 41343  017096  20E2               	addwfc	fsr1h,w,c
 41344  017098  6EDA               	movwf	fsr2h,c
 41345                           
 41346                           ;stkvar	_b @ sp[(-4)+-4]
 41347  01709A  0EF9               	movlw	249
 41348  01709C  24E1               	addwf	fsr1l,w,c
 41349  01709E  6EE9               	movwf	fsr0l,c
 41350  0170A0  0EFF               	movlw	255
 41351  0170A2  20E2               	addwfc	fsr1h,w,c
 41352  0170A4  6EEA               	movwf	fsr0h,c
 41353  0170A6  006F FF7F FFEF     	movff	indf2,indf0
 41354                           
 41355                           ;stkvar	_grs @ sp[(-4)+0]
 41356                           ;stkvar	_a @ sp[(-4)+-8]
 41357  0170AC  0EF5               	movlw	245
 41358  0170AE  24E1               	addwf	fsr1l,w,c
 41359  0170B0  6ED9               	movwf	fsr2l,c
 41360  0170B2  0EFF               	movlw	255
 41361  0170B4  20E2               	addwfc	fsr1h,w,c
 41362  0170B6  6EDA               	movwf	fsr2h,c
 41363  0170B8  0EFC               	movlw	-4
 41364  0170BA  006F FF8F FFDF     	movff	plusw1,indf2
 41365                           
 41366                           ;stkvar	_b @ sp[(-4)+-4]
 41367  0170C0  0EFA               	movlw	250
 41368  0170C2  24E1               	addwf	fsr1l,w,c
 41369  0170C4  6ED9               	movwf	fsr2l,c
 41370  0170C6  0EFF               	movlw	255
 41371  0170C8  20E2               	addwfc	fsr1h,w,c
 41372  0170CA  6EDA               	movwf	fsr2h,c
 41373  0170CC  50DF               	movf	indf2,w,c
 41374  0170CE  6E35               	movwf	(btemp+11)^0,c
 41375                           
 41376                           ;stkvar	_grs @ sp[(-4)+0]
 41377  0170D0  0EFC               	movlw	-4
 41378  0170D2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41379                           
 41380                           ;stkvar	_a @ sp[(-4)+-8]
 41381  0170D8  0EF6               	movlw	246
 41382  0170DA  24E1               	addwf	fsr1l,w,c
 41383  0170DC  6ED9               	movwf	fsr2l,c
 41384  0170DE  0EFF               	movlw	255
 41385  0170E0  20E2               	addwfc	fsr1h,w,c
 41386  0170E2  6EDA               	movwf	fsr2h,c
 41387                           
 41388                           ;stkvar	_b @ sp[(-4)+-4]
 41389  0170E4  0EFA               	movlw	250
 41390  0170E6  24E1               	addwf	fsr1l,w,c
 41391  0170E8  6EE9               	movwf	fsr0l,c
 41392  0170EA  0EFF               	movlw	255
 41393  0170EC  20E2               	addwfc	fsr1h,w,c
 41394  0170EE  6EEA               	movwf	fsr0h,c
 41395  0170F0  006F FF7F FFEF     	movff	indf2,indf0
 41396                           
 41397                           ;stkvar	_grs @ sp[(-4)+0]
 41398                           ;stkvar	_a @ sp[(-4)+-8]
 41399  0170F6  0EF6               	movlw	246
 41400  0170F8  24E1               	addwf	fsr1l,w,c
 41401  0170FA  6ED9               	movwf	fsr2l,c
 41402  0170FC  0EFF               	movlw	255
 41403  0170FE  20E2               	addwfc	fsr1h,w,c
 41404  017100  6EDA               	movwf	fsr2h,c
 41405  017102  0EFC               	movlw	-4
 41406  017104  006F FF8F FFDF     	movff	plusw1,indf2
 41407                           
 41408                           ;stkvar	_b @ sp[(-4)+-4]
 41409  01710A  0EFB               	movlw	251
 41410  01710C  24E1               	addwf	fsr1l,w,c
 41411  01710E  6ED9               	movwf	fsr2l,c
 41412  017110  0EFF               	movlw	255
 41413  017112  20E2               	addwfc	fsr1h,w,c
 41414  017114  6EDA               	movwf	fsr2h,c
 41415  017116  50DF               	movf	indf2,w,c
 41416  017118  6E35               	movwf	(btemp+11)^0,c
 41417                           
 41418                           ;stkvar	_grs @ sp[(-4)+0]
 41419  01711A  0EFC               	movlw	-4
 41420  01711C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41421                           
 41422                           ;stkvar	_a @ sp[(-4)+-8]
 41423  017122  0EF7               	movlw	247
 41424  017124  24E1               	addwf	fsr1l,w,c
 41425  017126  6ED9               	movwf	fsr2l,c
 41426  017128  0EFF               	movlw	255
 41427  01712A  20E2               	addwfc	fsr1h,w,c
 41428  01712C  6EDA               	movwf	fsr2h,c
 41429                           
 41430                           ;stkvar	_b @ sp[(-4)+-4]
 41431  01712E  0EFB               	movlw	251
 41432  017130  24E1               	addwf	fsr1l,w,c
 41433  017132  6EE9               	movwf	fsr0l,c
 41434  017134  0EFF               	movlw	255
 41435  017136  20E2               	addwfc	fsr1h,w,c
 41436  017138  6EEA               	movwf	fsr0h,c
 41437  01713A  006F FF7F FFEF     	movff	indf2,indf0
 41438                           
 41439                           ;stkvar	_grs @ sp[(-4)+0]
 41440                           ;stkvar	_a @ sp[(-4)+-8]
 41441  017140  0EF7               	movlw	247
 41442  017142  24E1               	addwf	fsr1l,w,c
 41443  017144  6ED9               	movwf	fsr2l,c
 41444  017146  0EFF               	movlw	255
 41445  017148  20E2               	addwfc	fsr1h,w,c
 41446  01714A  6EDA               	movwf	fsr2h,c
 41447  01714C  0EFC               	movlw	-4
 41448  01714E  006F FF8F FFDF     	movff	plusw1,indf2
 41449  017154                     l9868:
 41450                           
 41451                           ;stkvar	_grs @ sp[(-4)+0]
 41452  017154  0EFC               	movlw	-4
 41453  017156  6AE3               	clrf	plusw1,c
 41454                           
 41455                           ;stkvar	_aexp @ sp[(-4)+2]
 41456  017158  0EFE               	movlw	-2
 41457  01715A  50E3               	movf	plusw1,w,c
 41458  01715C  6E34               	movwf	(btemp+10)^0,c
 41459  01715E  6A35               	clrf	(btemp+11)^0,c
 41460                           
 41461                           ;stkvar	_bexp @ sp[(-4)+1]
 41462  017160  0EFD               	movlw	-3
 41463  017162  50E3               	movf	plusw1,w,c
 41464  017164  5E34               	subwf	(btemp+10)^0,f,c
 41465  017166  0E00               	movlw	0
 41466  017168  5A35               	subwfb	(btemp+11)^0,f,c
 41467  01716A  BE35               	btfsc	(btemp+11)^0,7,c
 41468  01716C  D062               	goto	l9892
 41469  01716E  5035               	movf	(btemp+11)^0,w,c
 41470  017170  E104               	bnz	u7290
 41471  017172  0E1A               	movlw	26
 41472  017174  5C34               	subwf	(btemp+10)^0,w,c
 41473  017176  A0D8               	btfss	status,0,c
 41474  017178  D05C               	goto	l9892
 41475  01717A                     u7290:
 41476                           
 41477                           ;stkvar	_b @ sp[(-4)+-4]
 41478  01717A  0EF8               	movlw	-8
 41479  01717C  50E3               	movf	plusw1,w,c
 41480  01717E  E10A               	bnz	u7301
 41481  017180  0EF9               	movlw	-7
 41482  017182  50E3               	movf	plusw1,w,c
 41483  017184  E107               	bnz	u7301
 41484  017186  0EFA               	movlw	-6
 41485  017188  50E3               	movf	plusw1,w,c
 41486  01718A  E104               	bnz	u7301
 41487  01718C  0EFB               	movlw	-5
 41488  01718E  50E3               	movf	plusw1,w,c
 41489  017190  B4D8               	btfsc	status,2,c
 41490  017192  D003               	goto	u7300
 41491  017194                     u7301:
 41492  017194  6A35               	clrf	(btemp+11)^0,c
 41493  017196  2A35               	incf	(btemp+11)^0,f,c
 41494  017198  D001               	goto	u7318
 41495  01719A                     u7300:
 41496  01719A  6A35               	clrf	(btemp+11)^0,c
 41497  01719C                     u7318:
 41498                           
 41499                           ;stkvar	_grs @ sp[(-4)+0]
 41500  01719C  0EFC               	movlw	-4
 41501  01719E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41502                           
 41503                           ;stkvar	_b @ sp[(-4)+-4]
 41504  0171A4  0EF8               	movlw	-8
 41505  0171A6  6AE3               	clrf	plusw1,c
 41506  0171A8  0EF9               	movlw	-7
 41507  0171AA  6AE3               	clrf	plusw1,c
 41508  0171AC  0EFA               	movlw	-6
 41509  0171AE  6AE3               	clrf	plusw1,c
 41510  0171B0  0EFB               	movlw	-5
 41511  0171B2  6AE3               	clrf	plusw1,c
 41512                           
 41513                           ;stkvar	_aexp @ sp[(-4)+2]
 41514                           ;stkvar	_bexp @ sp[(-4)+1]
 41515  0171B4  0EFE               	movlw	-2
 41516  0171B6  006F FF8C  F02A    	movff	plusw1,btemp
 41517  0171BC  0EFD               	movlw	-3
 41518  0171BE  0060  F0AB  FFE3   	movff	btemp,plusw1
 41519  0171C4  D042               	goto	u7350
 41520  0171C6                     l9878:
 41521                           
 41522                           ;stkvar	_grs @ sp[(-4)+0]
 41523  0171C6  0EFC               	movlw	-4
 41524  0171C8  A0E3               	btfss	plusw1,0,c
 41525  0171CA  D00D               	goto	l9882
 41526                           
 41527                           ;stkvar	_grs @ sp[(-4)+0]
 41528  0171CC  0EFC               	movlw	-4
 41529  0171CE  006F FF8C  F035    	movff	plusw1,btemp+11
 41530  0171D4  90D8               	bcf	status,0,c
 41531  0171D6  3235               	rrcf	(btemp+11)^0,f,c
 41532  0171D8  0E01               	movlw	1
 41533  0171DA  1235               	iorwf	(btemp+11)^0,f,c
 41534                           
 41535                           ;stkvar	_grs @ sp[(-4)+0]
 41536  0171DC  0EFC               	movlw	-4
 41537  0171DE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41538  0171E4  D009               	goto	l9884
 41539  0171E6                     l9882:
 41540                           
 41541                           ;stkvar	_grs @ sp[(-4)+0]
 41542  0171E6  50E1               	movf	fsr1l,w,c
 41543  0171E8  0FFC               	addlw	-4
 41544  0171EA  6ED9               	movwf	fsr2l,c
 41545  0171EC  50E2               	movf	fsr1h,w,c
 41546  0171EE  6EDA               	movwf	fsr2h,c
 41547  0171F0  0EFF               	movlw	255
 41548  0171F2  22DA               	addwfc	fsr2h,f,c
 41549  0171F4  90D8               	bcf	status,0,c
 41550  0171F6  32DF               	rrcf	indf2,f,c
 41551  0171F8                     l9884:
 41552                           
 41553                           ;stkvar	_b @ sp[(-4)+-4]
 41554  0171F8  0EF8               	movlw	-8
 41555  0171FA  A0E3               	btfss	plusw1,0,c
 41556  0171FC  D002               	goto	l9888
 41557                           
 41558                           ;stkvar	_grs @ sp[(-4)+0]
 41559  0171FE  0EFC               	movlw	-4
 41560  017200  8EE3               	bsf	plusw1,7,c
 41561  017202                     l9888:
 41562  017202  0E01               	movlw	1
 41563  017204  6E35               	movwf	(btemp+11)^0,c
 41564                           
 41565                           ;stkvar	_b @ sp[(-4)+-4]
 41566  017206  50E1               	movf	fsr1l,w,c
 41567  017208  0FF8               	addlw	-8
 41568  01720A  6ED9               	movwf	fsr2l,c
 41569  01720C  50E2               	movf	fsr1h,w,c
 41570  01720E  6EDA               	movwf	fsr2h,c
 41571  017210  0EFF               	movlw	255
 41572  017212  22DA               	addwfc	fsr2h,f,c
 41573  017214  2835               	incf	(btemp+11)^0,w,c
 41574  017216  52DE               	movf	postinc2,f,c
 41575  017218  D008               	goto	u7340
 41576  01721A                     u7345:
 41577  01721A  52DE               	movf	postinc2,f,c
 41578  01721C  90D8               	bcf	status,0,c
 41579  01721E  BEDC               	btfsc	preinc2,7,c
 41580  017220  80D8               	bsf	status,0,c
 41581  017222  32DD               	rrcf	postdec2,f,c
 41582  017224  32DD               	rrcf	postdec2,f,c
 41583  017226  32DD               	rrcf	postdec2,f,c
 41584  017228  32DE               	rrcf	postinc2,f,c
 41585  01722A                     u7340:
 41586  01722A  2EE8               	decfsz	wreg,f,c
 41587  01722C  D7F6               	goto	u7345
 41588                           
 41589                           ;stkvar	_bexp @ sp[(-4)+1]
 41590  01722E  0EFD               	movlw	-3
 41591  017230  2AE3               	incf	plusw1,f,c
 41592  017232                     l9892:
 41593                           
 41594                           ;stkvar	_aexp @ sp[(-4)+2]
 41595                           ;stkvar	_bexp @ sp[(-4)+1]
 41596  017232  50E1               	movf	fsr1l,w,c
 41597  017234  0FFD               	addlw	-3
 41598  017236  6ED9               	movwf	fsr2l,c
 41599  017238  50E2               	movf	fsr1h,w,c
 41600  01723A  6EDA               	movwf	fsr2h,c
 41601  01723C  0EFF               	movlw	255
 41602  01723E  22DA               	addwfc	fsr2h,f,c
 41603  017240  0EFE               	movlw	-2
 41604  017242  50E3               	movf	plusw1,w,c
 41605  017244  5CDE               	subwf	postinc2,w,c
 41606  017246  A0D8               	btfss	status,0,c
 41607  017248  D7BE               	goto	l9878
 41608  01724A                     u7350:
 41609                           
 41610                           ;stkvar	_signs @ sp[(-4)+3]
 41611  01724A  0EFF               	movlw	-1
 41612  01724C  BCE3               	btfsc	plusw1,6,c
 41613  01724E  D066               	goto	l9920
 41614                           
 41615                           ;stkvar	_bexp @ sp[(-4)+1]
 41616  017250  0EFD               	movlw	-3
 41617  017252  50E3               	movf	plusw1,w,c
 41618  017254  B4D8               	btfsc	status,2,c
 41619  017256  D0F2               	goto	u7450
 41620                           
 41621                           ;stkvar	_a @ sp[(-4)+-8]
 41622                           ;stkvar	_b @ sp[(-4)+-4]
 41623  017258  0EF8               	movlw	-8
 41624  01725A  50E3               	movf	plusw1,w,c
 41625  01725C  6E2A               	movwf	btemp^0,c
 41626  01725E  0EF4               	movlw	-12
 41627  017260  50E3               	movf	plusw1,w,c
 41628  017262  262A               	addwf	btemp^0,f,c
 41629  017264  0EF8               	movlw	-8
 41630  017266  0060  F0AB  FFE3   	movff	btemp,plusw1
 41631  01726C  0EF9               	movlw	-7
 41632  01726E  50E3               	movf	plusw1,w,c
 41633  017270  6E2A               	movwf	btemp^0,c
 41634  017272  0EF5               	movlw	-11
 41635  017274  50E3               	movf	plusw1,w,c
 41636  017276  222A               	addwfc	btemp^0,f,c
 41637  017278  0EF9               	movlw	-7
 41638  01727A  0060  F0AB  FFE3   	movff	btemp,plusw1
 41639  017280  0EFA               	movlw	-6
 41640  017282  50E3               	movf	plusw1,w,c
 41641  017284  6E2A               	movwf	btemp^0,c
 41642  017286  0EF6               	movlw	-10
 41643  017288  50E3               	movf	plusw1,w,c
 41644  01728A  222A               	addwfc	btemp^0,f,c
 41645  01728C  0EFA               	movlw	-6
 41646  01728E  0060  F0AB  FFE3   	movff	btemp,plusw1
 41647  017294  0EFB               	movlw	-5
 41648  017296  50E3               	movf	plusw1,w,c
 41649  017298  6E2A               	movwf	btemp^0,c
 41650  01729A  0EF7               	movlw	-9
 41651  01729C  50E3               	movf	plusw1,w,c
 41652  01729E  222A               	addwfc	btemp^0,f,c
 41653  0172A0  0EFB               	movlw	-5
 41654  0172A2  0060  F0AB  FFE3   	movff	btemp,plusw1
 41655                           
 41656                           ;stkvar	_b @ sp[(-4)+-4]
 41657  0172A8  0EFB               	movlw	-5
 41658  0172AA  A0E3               	btfss	plusw1,0,c
 41659  0172AC  D101               	goto	u7490
 41660                           
 41661                           ;stkvar	_grs @ sp[(-4)+0]
 41662  0172AE  0EFC               	movlw	-4
 41663  0172B0  A0E3               	btfss	plusw1,0,c
 41664  0172B2  D00D               	goto	l9910
 41665                           
 41666                           ;stkvar	_grs @ sp[(-4)+0]
 41667  0172B4  0EFC               	movlw	-4
 41668  0172B6  006F FF8C  F035    	movff	plusw1,btemp+11
 41669  0172BC  90D8               	bcf	status,0,c
 41670  0172BE  3235               	rrcf	(btemp+11)^0,f,c
 41671  0172C0  0E01               	movlw	1
 41672  0172C2  1235               	iorwf	(btemp+11)^0,f,c
 41673                           
 41674                           ;stkvar	_grs @ sp[(-4)+0]
 41675  0172C4  0EFC               	movlw	-4
 41676  0172C6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41677  0172CC  D009               	goto	l9912
 41678  0172CE                     l9910:
 41679                           
 41680                           ;stkvar	_grs @ sp[(-4)+0]
 41681  0172CE  50E1               	movf	fsr1l,w,c
 41682  0172D0  0FFC               	addlw	-4
 41683  0172D2  6ED9               	movwf	fsr2l,c
 41684  0172D4  50E2               	movf	fsr1h,w,c
 41685  0172D6  6EDA               	movwf	fsr2h,c
 41686  0172D8  0EFF               	movlw	255
 41687  0172DA  22DA               	addwfc	fsr2h,f,c
 41688  0172DC  90D8               	bcf	status,0,c
 41689  0172DE  32DF               	rrcf	indf2,f,c
 41690  0172E0                     l9912:
 41691                           
 41692                           ;stkvar	_b @ sp[(-4)+-4]
 41693  0172E0  0EF8               	movlw	-8
 41694  0172E2  A0E3               	btfss	plusw1,0,c
 41695  0172E4  D002               	goto	l9916
 41696                           
 41697                           ;stkvar	_grs @ sp[(-4)+0]
 41698  0172E6  0EFC               	movlw	-4
 41699  0172E8  8EE3               	bsf	plusw1,7,c
 41700  0172EA                     l9916:
 41701  0172EA  0E01               	movlw	1
 41702  0172EC  6E35               	movwf	(btemp+11)^0,c
 41703                           
 41704                           ;stkvar	_b @ sp[(-4)+-4]
 41705  0172EE  50E1               	movf	fsr1l,w,c
 41706  0172F0  0FF8               	addlw	-8
 41707  0172F2  6ED9               	movwf	fsr2l,c
 41708  0172F4  50E2               	movf	fsr1h,w,c
 41709  0172F6  6EDA               	movwf	fsr2h,c
 41710  0172F8  0EFF               	movlw	255
 41711  0172FA  22DA               	addwfc	fsr2h,f,c
 41712  0172FC  2835               	incf	(btemp+11)^0,w,c
 41713  0172FE  52DE               	movf	postinc2,f,c
 41714  017300  D008               	goto	u7410
 41715  017302                     u7415:
 41716  017302  52DE               	movf	postinc2,f,c
 41717  017304  90D8               	bcf	status,0,c
 41718  017306  BEDC               	btfsc	preinc2,7,c
 41719  017308  80D8               	bsf	status,0,c
 41720  01730A  32DD               	rrcf	postdec2,f,c
 41721  01730C  32DD               	rrcf	postdec2,f,c
 41722  01730E  32DD               	rrcf	postdec2,f,c
 41723  017310  32DE               	rrcf	postinc2,f,c
 41724  017312                     u7410:
 41725  017312  2EE8               	decfsz	wreg,f,c
 41726  017314  D7F6               	goto	u7415
 41727                           
 41728                           ;stkvar	_bexp @ sp[(-4)+1]
 41729  017316  0EFD               	movlw	-3
 41730  017318  2AE3               	incf	plusw1,f,c
 41731  01731A  D0CA               	goto	u7490
 41732  01731C                     l9920:
 41733                           
 41734                           ;stkvar	_a @ sp[(-4)+-8]
 41735                           ;stkvar	_b @ sp[(-4)+-4]
 41736  01731C  50E1               	movf	fsr1l,w,c
 41737  01731E  0FF8               	addlw	-8
 41738  017320  6ED9               	movwf	fsr2l,c
 41739  017322  50E2               	movf	fsr1h,w,c
 41740  017324  6EDA               	movwf	fsr2h,c
 41741  017326  0EFF               	movlw	255
 41742  017328  22DA               	addwfc	fsr2h,f,c
 41743  01732A  0EF4               	movlw	-12
 41744  01732C  50E3               	movf	plusw1,w,c
 41745  01732E  5CDE               	subwf	postinc2,w,c
 41746  017330  0EF5               	movlw	-11
 41747  017332  50E3               	movf	plusw1,w,c
 41748  017334  58DE               	subwfb	postinc2,w,c
 41749  017336  0EF6               	movlw	-10
 41750  017338  50E3               	movf	plusw1,w,c
 41751  01733A  58DE               	subwfb	postinc2,w,c
 41752  01733C  50DE               	movf	postinc2,w,c
 41753  01733E  0A80               	xorlw	128
 41754  017340  6E2A               	movwf	btemp^0,c
 41755  017342  0EF7               	movlw	-9
 41756  017344  50E3               	movf	plusw1,w,c
 41757  017346  0A80               	xorlw	128
 41758  017348  582A               	subwfb	btemp^0,w,c
 41759  01734A  B0D8               	btfsc	status,0,c
 41760  01734C  D053               	goto	l9932
 41761                           
 41762                           ;stkvar	_b @ sp[(-4)+-4]
 41763                           ;stkvar	_a @ sp[(-4)+-8]
 41764  01734E  0EF4               	movlw	-12
 41765  017350  006F FF8C  F032    	movff	plusw1,btemp+8
 41766  017356  0EF5               	movlw	-11
 41767  017358  006F FF8C  F033    	movff	plusw1,btemp+9
 41768  01735E  0EF6               	movlw	-10
 41769  017360  006F FF8C  F034    	movff	plusw1,btemp+10
 41770  017366  0EF7               	movlw	-9
 41771  017368  006F FF8C  F035    	movff	plusw1,btemp+11
 41772  01736E  0EF8               	movlw	-8
 41773  017370  50E3               	movf	plusw1,w,c
 41774  017372  5E32               	subwf	(btemp+8)^0,f,c
 41775  017374  0EF9               	movlw	-7
 41776  017376  50E3               	movf	plusw1,w,c
 41777  017378  5A33               	subwfb	(btemp+9)^0,f,c
 41778  01737A  0EFA               	movlw	-6
 41779  01737C  50E3               	movf	plusw1,w,c
 41780  01737E  5A34               	subwfb	(btemp+10)^0,f,c
 41781  017380  0EFB               	movlw	-5
 41782  017382  50E3               	movf	plusw1,w,c
 41783  017384  5A35               	subwfb	(btemp+11)^0,f,c
 41784  017386  0EFF               	movlw	255
 41785  017388  2432               	addwf	(btemp+8)^0,w,c
 41786  01738A  6E2E               	movwf	(btemp+4)^0,c
 41787  01738C  0EFF               	movlw	255
 41788  01738E  2033               	addwfc	(btemp+9)^0,w,c
 41789  017390  6E2F               	movwf	(btemp+5)^0,c
 41790  017392  0EFF               	movlw	255
 41791  017394  2034               	addwfc	(btemp+10)^0,w,c
 41792  017396  6E30               	movwf	(btemp+6)^0,c
 41793  017398  0EFF               	movlw	255
 41794  01739A  2035               	addwfc	(btemp+11)^0,w,c
 41795  01739C  6E31               	movwf	(btemp+7)^0,c
 41796                           
 41797                           ;stkvar	_b @ sp[(-4)+-4]
 41798  01739E  0EF8               	movlw	-8
 41799  0173A0  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 41800  0173A6  0EF9               	movlw	-7
 41801  0173A8  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 41802  0173AE  0EFA               	movlw	-6
 41803  0173B0  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 41804  0173B6  0EFB               	movlw	-5
 41805  0173B8  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 41806                           
 41807                           ;stkvar	_signs @ sp[(-4)+3]
 41808  0173BE  0EFF               	movlw	-1
 41809  0173C0  7EE3               	btg	plusw1,7,c
 41810                           
 41811                           ;stkvar	_grs @ sp[(-4)+0]
 41812  0173C2  0EFC               	movlw	-4
 41813  0173C4  50E3               	movf	plusw1,w,c
 41814  0173C6  0800               	sublw	0
 41815  0173C8  6E35               	movwf	(btemp+11)^0,c
 41816                           
 41817                           ;stkvar	_grs @ sp[(-4)+0]
 41818  0173CA  0EFC               	movlw	-4
 41819  0173CC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41820                           
 41821                           ;stkvar	_grs @ sp[(-4)+0]
 41822  0173D2  0EFC               	movlw	-4
 41823  0173D4  50E3               	movf	plusw1,w,c
 41824  0173D6  A4D8               	btfss	status,2,c
 41825  0173D8  D020               	goto	l9934
 41826                           
 41827                           ;stkvar	_b @ sp[(-4)+-4]
 41828  0173DA  50E1               	movf	fsr1l,w,c
 41829  0173DC  0FF8               	addlw	-8
 41830  0173DE  6ED9               	movwf	fsr2l,c
 41831  0173E0  50E2               	movf	fsr1h,w,c
 41832  0173E2  6EDA               	movwf	fsr2h,c
 41833  0173E4  0EFF               	movlw	255
 41834  0173E6  22DA               	addwfc	fsr2h,f,c
 41835  0173E8  2ADE               	incf	postinc2,f,c
 41836  0173EA  0E00               	movlw	0
 41837  0173EC  22DE               	addwfc	postinc2,f,c
 41838  0173EE  22DE               	addwfc	postinc2,f,c
 41839  0173F0  22DE               	addwfc	postinc2,f,c
 41840  0173F2  D013               	goto	l9934
 41841  0173F4                     l9932:
 41842                           
 41843                           ;stkvar	_a @ sp[(-4)+-8]
 41844                           ;stkvar	_b @ sp[(-4)+-4]
 41845  0173F4  50E1               	movf	fsr1l,w,c
 41846  0173F6  0FF8               	addlw	-8
 41847  0173F8  6ED9               	movwf	fsr2l,c
 41848  0173FA  50E2               	movf	fsr1h,w,c
 41849  0173FC  6EDA               	movwf	fsr2h,c
 41850  0173FE  0EFF               	movlw	255
 41851  017400  22DA               	addwfc	fsr2h,f,c
 41852  017402  0EF4               	movlw	-12
 41853  017404  50E3               	movf	plusw1,w,c
 41854  017406  5EDE               	subwf	postinc2,f,c
 41855  017408  0EF5               	movlw	-11
 41856  01740A  50E3               	movf	plusw1,w,c
 41857  01740C  5ADE               	subwfb	postinc2,f,c
 41858  01740E  0EF6               	movlw	-10
 41859  017410  50E3               	movf	plusw1,w,c
 41860  017412  5ADE               	subwfb	postinc2,f,c
 41861  017414  0EF7               	movlw	-9
 41862  017416  50E3               	movf	plusw1,w,c
 41863  017418  5ADE               	subwfb	postinc2,f,c
 41864  01741A                     l9934:
 41865                           
 41866                           ;stkvar	_b @ sp[(-4)+-4]
 41867  01741A  0EF8               	movlw	-8
 41868  01741C  50E3               	movf	plusw1,w,c
 41869  01741E  E145               	bnz	l9956
 41870  017420  0EF9               	movlw	-7
 41871  017422  50E3               	movf	plusw1,w,c
 41872  017424  E142               	bnz	l9956
 41873  017426  0EFA               	movlw	-6
 41874  017428  50E3               	movf	plusw1,w,c
 41875  01742A  E13F               	bnz	l9956
 41876  01742C  0EFB               	movlw	-5
 41877  01742E  50E3               	movf	plusw1,w,c
 41878  017430  A4D8               	btfss	status,2,c
 41879  017432  D03B               	goto	l9956
 41880                           
 41881                           ;stkvar	_grs @ sp[(-4)+0]
 41882  017434  0EFC               	movlw	-4
 41883  017436  50E3               	movf	plusw1,w,c
 41884  017438  A4D8               	btfss	status,2,c
 41885  01743A  D037               	goto	l9956
 41886  01743C                     u7450:
 41887  01743C  0E00               	movlw	0
 41888  01743E  6E2A               	movwf	btemp^0,c
 41889  017440  0E00               	movlw	0
 41890  017442  6E2B               	movwf	(btemp+1)^0,c
 41891  017444  0E00               	movlw	0
 41892  017446  6E2C               	movwf	(btemp+2)^0,c
 41893  017448  0E00               	movlw	0
 41894  01744A  6E2D               	movwf	(btemp+3)^0,c
 41895  01744C  D0C6               	goto	l3261
 41896  01744E                     l9942:
 41897                           
 41898                           ;stkvar	_b @ sp[(-4)+-4]
 41899  01744E  90D8               	bcf	status,0,c
 41900  017450  0EF8               	movlw	-8
 41901  017452  36E3               	rlcf	plusw1,f,c
 41902  017454  0EF9               	movlw	-7
 41903  017456  36E3               	rlcf	plusw1,f,c
 41904  017458  0EFA               	movlw	-6
 41905  01745A  36E3               	rlcf	plusw1,f,c
 41906  01745C  0EFB               	movlw	-5
 41907  01745E  36E3               	rlcf	plusw1,f,c
 41908                           
 41909                           ;stkvar	_grs @ sp[(-4)+0]
 41910  017460  0EFC               	movlw	-4
 41911  017462  AEE3               	btfss	plusw1,7,c
 41912  017464  D002               	goto	l3273
 41913                           
 41914                           ;stkvar	_b @ sp[(-4)+-4]
 41915  017466  0EF8               	movlw	-8
 41916  017468  80E3               	bsf	plusw1,0,c
 41917  01746A                     l3273:
 41918                           
 41919                           ;stkvar	_grs @ sp[(-4)+0]
 41920  01746A  0EFC               	movlw	-4
 41921  01746C  A0E3               	btfss	plusw1,0,c
 41922  01746E  D00E               	goto	l9950
 41923                           
 41924                           ;stkvar	_grs @ sp[(-4)+0]
 41925  017470  0EFC               	movlw	-4
 41926  017472  006F FF8C  F035    	movff	plusw1,btemp+11
 41927  017478  90D8               	bcf	status,0,c
 41928  01747A  3435               	rlcf	(btemp+11)^0,w,c
 41929  01747C  6E34               	movwf	(btemp+10)^0,c
 41930  01747E  0E01               	movlw	1
 41931  017480  1234               	iorwf	(btemp+10)^0,f,c
 41932                           
 41933                           ;stkvar	_grs @ sp[(-4)+0]
 41934  017482  0EFC               	movlw	-4
 41935  017484  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41936  01748A  D009               	goto	l9952
 41937  01748C                     l9950:
 41938                           
 41939                           ;stkvar	_grs @ sp[(-4)+0]
 41940  01748C  50E1               	movf	fsr1l,w,c
 41941  01748E  0FFC               	addlw	-4
 41942  017490  6ED9               	movwf	fsr2l,c
 41943  017492  50E2               	movf	fsr1h,w,c
 41944  017494  6EDA               	movwf	fsr2h,c
 41945  017496  0EFF               	movlw	255
 41946  017498  22DA               	addwfc	fsr2h,f,c
 41947  01749A  90D8               	bcf	status,0,c
 41948  01749C  36DF               	rlcf	indf2,f,c
 41949  01749E                     l9952:
 41950                           
 41951                           ;stkvar	_bexp @ sp[(-4)+1]
 41952  01749E  0EFD               	movlw	-3
 41953  0174A0  50E3               	movf	plusw1,w,c
 41954  0174A2  B4D8               	btfsc	status,2,c
 41955  0174A4  D002               	goto	l9956
 41956                           
 41957                           ;stkvar	_bexp @ sp[(-4)+1]
 41958  0174A6  0EFD               	movlw	-3
 41959  0174A8  06E3               	decf	plusw1,f,c
 41960  0174AA                     l9956:
 41961                           
 41962                           ;stkvar	_b @ sp[(-4)+-4]
 41963  0174AA  0EFA               	movlw	-6
 41964  0174AC  AEE3               	btfss	plusw1,7,c
 41965  0174AE  D7CF               	goto	l9942
 41966  0174B0                     u7490:
 41967                           
 41968                           ;stkvar	_aexp @ sp[(-4)+2]
 41969  0174B0  0EFE               	movlw	-2
 41970  0174B2  6AE3               	clrf	plusw1,c
 41971                           
 41972                           ;stkvar	_grs @ sp[(-4)+0]
 41973  0174B4  0EFC               	movlw	-4
 41974  0174B6  AEE3               	btfss	plusw1,7,c
 41975  0174B8  D00F               	goto	l9970
 41976                           
 41977                           ;stkvar	_grs @ sp[(-4)+0]
 41978  0174BA  0EFC               	movlw	-4
 41979  0174BC  006F FF8C  F035    	movff	plusw1,btemp+11
 41980  0174C2  0E7F               	movlw	127
 41981  0174C4  1635               	andwf	(btemp+11)^0,f,c
 41982  0174C6  B4D8               	btfsc	status,2,c
 41983  0174C8  D004               	goto	l9966
 41984  0174CA                     u7510:
 41985                           
 41986                           ;stkvar	_aexp @ sp[(-4)+2]
 41987  0174CA  0EFE               	movlw	-2
 41988  0174CC  6AE3               	clrf	plusw1,c
 41989  0174CE  2AE3               	incf	plusw1,f,c
 41990  0174D0  D003               	goto	l9970
 41991  0174D2                     l9966:
 41992                           
 41993                           ;stkvar	_b @ sp[(-4)+-4]
 41994  0174D2  0EF8               	movlw	-8
 41995  0174D4  B0E3               	btfsc	plusw1,0,c
 41996  0174D6  D7F9               	goto	u7510
 41997  0174D8                     l9970:
 41998                           
 41999                           ;stkvar	_aexp @ sp[(-4)+2]
 42000  0174D8  0EFE               	movlw	-2
 42001  0174DA  50E3               	movf	plusw1,w,c
 42002  0174DC  B4D8               	btfsc	status,2,c
 42003  0174DE  D02B               	goto	l9982
 42004                           
 42005                           ;stkvar	_b @ sp[(-4)+-4]
 42006  0174E0  50E1               	movf	fsr1l,w,c
 42007  0174E2  0FF8               	addlw	-8
 42008  0174E4  6ED9               	movwf	fsr2l,c
 42009  0174E6  50E2               	movf	fsr1h,w,c
 42010  0174E8  6EDA               	movwf	fsr2h,c
 42011  0174EA  0EFF               	movlw	255
 42012  0174EC  22DA               	addwfc	fsr2h,f,c
 42013  0174EE  2ADE               	incf	postinc2,f,c
 42014  0174F0  0E00               	movlw	0
 42015  0174F2  22DE               	addwfc	postinc2,f,c
 42016  0174F4  22DE               	addwfc	postinc2,f,c
 42017  0174F6  22DE               	addwfc	postinc2,f,c
 42018                           
 42019                           ;stkvar	_b @ sp[(-4)+-4]
 42020  0174F8  0EFB               	movlw	-5
 42021  0174FA  A0E3               	btfss	plusw1,0,c
 42022  0174FC  D01C               	goto	l9982
 42023  0174FE  0E01               	movlw	1
 42024  017500  6E35               	movwf	(btemp+11)^0,c
 42025                           
 42026                           ;stkvar	_b @ sp[(-4)+-4]
 42027  017502  50E1               	movf	fsr1l,w,c
 42028  017504  0FF8               	addlw	-8
 42029  017506  6ED9               	movwf	fsr2l,c
 42030  017508  50E2               	movf	fsr1h,w,c
 42031  01750A  6EDA               	movwf	fsr2h,c
 42032  01750C  0EFF               	movlw	255
 42033  01750E  22DA               	addwfc	fsr2h,f,c
 42034  017510  2835               	incf	(btemp+11)^0,w,c
 42035  017512  52DE               	movf	postinc2,f,c
 42036  017514  D008               	goto	u7550
 42037  017516                     u7555:
 42038  017516  52DE               	movf	postinc2,f,c
 42039  017518  90D8               	bcf	status,0,c
 42040  01751A  BEDC               	btfsc	preinc2,7,c
 42041  01751C  80D8               	bsf	status,0,c
 42042  01751E  32DD               	rrcf	postdec2,f,c
 42043  017520  32DD               	rrcf	postdec2,f,c
 42044  017522  32DD               	rrcf	postdec2,f,c
 42045  017524  32DE               	rrcf	postinc2,f,c
 42046  017526                     u7550:
 42047  017526  2EE8               	decfsz	wreg,f,c
 42048  017528  D7F6               	goto	u7555
 42049                           
 42050                           ;stkvar	_bexp @ sp[(-4)+1]
 42051  01752A  0EFD               	movlw	-3
 42052  01752C  28E3               	incf	plusw1,w,c
 42053  01752E  B4D8               	btfsc	status,2,c
 42054  017530  D002               	goto	l9982
 42055                           
 42056                           ;stkvar	_bexp @ sp[(-4)+1]
 42057  017532  0EFD               	movlw	-3
 42058  017534  2AE3               	incf	plusw1,f,c
 42059  017536                     l9982:
 42060                           
 42061                           ;stkvar	_bexp @ sp[(-4)+1]
 42062  017536  0EFD               	movlw	-3
 42063  017538  28E3               	incf	plusw1,w,c
 42064  01753A  B4D8               	btfsc	status,2,c
 42065  01753C  D004               	goto	u7580
 42066                           
 42067                           ;stkvar	_bexp @ sp[(-4)+1]
 42068  01753E  0EFD               	movlw	-3
 42069  017540  50E3               	movf	plusw1,w,c
 42070  017542  A4D8               	btfss	status,2,c
 42071  017544  D00E               	goto	l9992
 42072  017546                     u7580:
 42073                           
 42074                           ;stkvar	_b @ sp[(-4)+-4]
 42075  017546  0EF8               	movlw	-8
 42076  017548  6AE3               	clrf	plusw1,c
 42077  01754A  0EF9               	movlw	-7
 42078  01754C  6AE3               	clrf	plusw1,c
 42079  01754E  0EFA               	movlw	-6
 42080  017550  6AE3               	clrf	plusw1,c
 42081  017552  0EFB               	movlw	-5
 42082  017554  6AE3               	clrf	plusw1,c
 42083                           
 42084                           ;stkvar	_bexp @ sp[(-4)+1]
 42085  017556  0EFD               	movlw	-3
 42086  017558  50E3               	movf	plusw1,w,c
 42087  01755A  A4D8               	btfss	status,2,c
 42088  01755C  D002               	goto	l9992
 42089                           
 42090                           ;stkvar	_signs @ sp[(-4)+3]
 42091  01755E  0EFF               	movlw	-1
 42092  017560  6AE3               	clrf	plusw1,c
 42093  017562                     l9992:
 42094                           
 42095                           ;stkvar	_bexp @ sp[(-4)+1]
 42096  017562  0EFD               	movlw	-3
 42097  017564  A0E3               	btfss	plusw1,0,c
 42098  017566  D009               	goto	l9996
 42099                           
 42100                           ;stkvar	_b @ sp[(-4)+-4]
 42101  017568  0EFA               	movlw	250
 42102  01756A  24E1               	addwf	fsr1l,w,c
 42103  01756C  6ED9               	movwf	fsr2l,c
 42104  01756E  0EFF               	movlw	255
 42105  017570  20E2               	addwfc	fsr1h,w,c
 42106  017572  6EDA               	movwf	fsr2h,c
 42107  017574  0E00               	movlw	0
 42108  017576  8EDB               	bsf	plusw2,7,c
 42109  017578  D008               	goto	l9998
 42110  01757A                     l9996:
 42111                           
 42112                           ;stkvar	_b @ sp[(-4)+-4]
 42113  01757A  0EFA               	movlw	250
 42114  01757C  24E1               	addwf	fsr1l,w,c
 42115  01757E  6ED9               	movwf	fsr2l,c
 42116  017580  0EFF               	movlw	255
 42117  017582  20E2               	addwfc	fsr1h,w,c
 42118  017584  6EDA               	movwf	fsr2h,c
 42119  017586  0E7F               	movlw	127
 42120  017588  16DF               	andwf	indf2,f,c
 42121  01758A                     l9998:
 42122                           
 42123                           ;stkvar	_b @ sp[(-4)+-4]
 42124  01758A  0EFB               	movlw	251
 42125  01758C  24E1               	addwf	fsr1l,w,c
 42126  01758E  6ED9               	movwf	fsr2l,c
 42127  017590  0EFF               	movlw	255
 42128  017592  20E2               	addwfc	fsr1h,w,c
 42129  017594  6EDA               	movwf	fsr2h,c
 42130                           
 42131                           ;stkvar	_bexp @ sp[(-4)+1]
 42132  017596  0EFD               	movlw	-3
 42133  017598  006F FF8C  F035    	movff	plusw1,btemp+11
 42134  01759E  90D8               	bcf	status,0,c
 42135  0175A0  3035               	rrcf	(btemp+11)^0,w,c
 42136  0175A2  6EDF               	movwf	indf2,c
 42137                           
 42138                           ;stkvar	_signs @ sp[(-4)+3]
 42139  0175A4  0EFF               	movlw	-1
 42140  0175A6  AEE3               	btfss	plusw1,7,c
 42141  0175A8  D008               	goto	l10004
 42142                           
 42143                           ;stkvar	_b @ sp[(-4)+-4]
 42144  0175AA  0EFB               	movlw	251
 42145  0175AC  24E1               	addwf	fsr1l,w,c
 42146  0175AE  6ED9               	movwf	fsr2l,c
 42147  0175B0  0EFF               	movlw	255
 42148  0175B2  20E2               	addwfc	fsr1h,w,c
 42149  0175B4  6EDA               	movwf	fsr2h,c
 42150  0175B6  0E00               	movlw	0
 42151  0175B8  8EDB               	bsf	plusw2,7,c
 42152  0175BA                     l10004:
 42153                           
 42154                           ;stkvar	_b @ sp[(-4)+-4]
 42155  0175BA  0EF8               	movlw	-8
 42156  0175BC  006F FF8C  F02A    	movff	plusw1,btemp
 42157  0175C2  0EF9               	movlw	-7
 42158  0175C4  006F FF8C  F02B    	movff	plusw1,btemp+1
 42159  0175CA  0EFA               	movlw	-6
 42160  0175CC  006F FF8C  F02C    	movff	plusw1,btemp+2
 42161  0175D2  0EFB               	movlw	-5
 42162  0175D4  006F FF8C  F02D    	movff	plusw1,btemp+3
 42163  0175DA                     l3261:
 42164                           
 42165                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 42166  0175DA  0EF4               	movlw	244
 42167  0175DC  26E1               	addwf	fsr1l,f,c
 42168  0175DE  0EFF               	movlw	255
 42169  0175E0  22E2               	addwfc	fsr1h,f,c
 42170  0175E2  0012               	return		;funcret
 42171  0175E4                     __end_of___fladd:
 42172                           	opt callstack 0
 42173                           
 42174 ;; *************** function ___flmul *****************
 42175 ;; Defined at:
 42176 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 42177 ;; Parameters:    Size  Location     Type
 42178 ;;  b               4  [STACK] unsigned char 
 42179 ;;  a               4  [STACK] unsigned char 
 42180 ;; Auto vars:     Size  Location     Type
 42181 ;;  prod            4  [STACK] struct .
 42182 ;;  grs             4  [STACK] unsigned long 
 42183 ;;  temp            2  [STACK] struct .
 42184 ;;  bexp            1  [STACK] unsigned char 
 42185 ;;  aexp            1  [STACK] unsigned char 
 42186 ;;  sign            1  [STACK] unsigned char 
 42187 ;; Return value:  Size  Location     Type
 42188 ;;                  4  [STACK] unsigned char 
 42189 ;; Registers used:
 42190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 42191 ;; Tracked objects:
 42192 ;;		On entry : 0/39
 42193 ;;		On exit  : 0/0
 42194 ;;		Unchanged: 0/0
 42195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42200 ;;Total ram usage:        0 bytes
 42201 ;; Hardware stack levels used:    1
 42202 ;; Hardware stack levels required when called:   15
 42203 ;; This function calls:
 42204 ;;		Nothing
 42205 ;; This function is called by:
 42206 ;;		_conv_raw_result
 42207 ;;		_lp_filter
 42208 ;;		_calc_model_data
 42209 ;;		_load_hist_data
 42210 ;;		_calc_bsoc
 42211 ;;		_init_bsoc
 42212 ;;		_efgtoa
 42213 ;; This function uses a reentrant model
 42214 ;;
 42215                           
 42216                           	psect	text154
 42217  0165FE                     __ptext154:
 42218                           	opt callstack 0
 42219  0165FE                     ___flmul:
 42220                           	opt callstack 0
 42221                           
 42222                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 42223  0165FE  0E0D               	movlw	13
 42224  016600  26E1               	addwf	fsr1l,f,c
 42225  016602  0E00               	movlw	0
 42226  016604  22E2               	addwfc	fsr1h,f,c
 42227                           
 42228                           ;stkvar	_b @ sp[(-13)+-4]
 42229                           
 42230                           ;incstack = 0
 42231 ;; hardware stack exceeded
 42232  016606  0EF2               	movlw	242
 42233  016608  24E1               	addwf	fsr1l,w,c
 42234  01660A  6ED9               	movwf	fsr2l,c
 42235  01660C  0EFF               	movlw	255
 42236  01660E  20E2               	addwfc	fsr1h,w,c
 42237  016610  6EDA               	movwf	fsr2h,c
 42238  016612  50DF               	movf	indf2,w,c
 42239  016614  6E35               	movwf	(btemp+11)^0,c
 42240  016616  0E80               	movlw	128
 42241  016618  1635               	andwf	(btemp+11)^0,f,c
 42242                           
 42243                           ;stkvar	_sign @ sp[(-13)+12]
 42244  01661A  0EFF               	movlw	-1
 42245  01661C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42246                           
 42247                           ;stkvar	_b @ sp[(-13)+-4]
 42248  016622  0EF2               	movlw	242
 42249  016624  24E1               	addwf	fsr1l,w,c
 42250  016626  6ED9               	movwf	fsr2l,c
 42251  016628  0EFF               	movlw	255
 42252  01662A  20E2               	addwfc	fsr1h,w,c
 42253  01662C  6EDA               	movwf	fsr2h,c
 42254  01662E  50DF               	movf	indf2,w,c
 42255  016630  6E35               	movwf	(btemp+11)^0,c
 42256  016632  90D8               	bcf	status,0,c
 42257  016634  3435               	rlcf	(btemp+11)^0,w,c
 42258  016636  6E34               	movwf	(btemp+10)^0,c
 42259                           
 42260                           ;stkvar	_bexp @ sp[(-13)+10]
 42261  016638  0EFD               	movlw	-3
 42262  01663A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42263                           
 42264                           ;stkvar	_b @ sp[(-13)+-4]
 42265  016640  0EF1               	movlw	241
 42266  016642  24E1               	addwf	fsr1l,w,c
 42267  016644  6ED9               	movwf	fsr2l,c
 42268  016646  0EFF               	movlw	255
 42269  016648  20E2               	addwfc	fsr1h,w,c
 42270  01664A  6EDA               	movwf	fsr2h,c
 42271  01664C  AEDF               	btfss	indf2,7,c
 42272  01664E  D002               	goto	l10468
 42273                           
 42274                           ;stkvar	_bexp @ sp[(-13)+10]
 42275  016650  0EFD               	movlw	-3
 42276  016652  80E3               	bsf	plusw1,0,c
 42277  016654                     l10468:
 42278                           
 42279                           ;stkvar	_bexp @ sp[(-13)+10]
 42280  016654  0EFD               	movlw	-3
 42281  016656  50E3               	movf	plusw1,w,c
 42282  016658  B4D8               	btfsc	status,2,c
 42283  01665A  D01F               	goto	l10476
 42284                           
 42285                           ;stkvar	_bexp @ sp[(-13)+10]
 42286  01665C  0EFD               	movlw	-3
 42287  01665E  28E3               	incf	plusw1,w,c
 42288  016660  A4D8               	btfss	status,2,c
 42289  016662  D018               	goto	l10474
 42290  016664  0E00               	movlw	0
 42291  016666  6E32               	movwf	(btemp+8)^0,c
 42292  016668  0E00               	movlw	0
 42293  01666A  6E33               	movwf	(btemp+9)^0,c
 42294  01666C  0E00               	movlw	0
 42295  01666E  6E34               	movwf	(btemp+10)^0,c
 42296  016670  0E00               	movlw	0
 42297  016672  6E35               	movwf	(btemp+11)^0,c
 42298                           
 42299                           ;stkvar	_b @ sp[(-13)+-4]
 42300  016674  0EEF               	movlw	-17
 42301  016676  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42302  01667C  0EF0               	movlw	-16
 42303  01667E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42304  016684  0EF1               	movlw	-15
 42305  016686  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42306  01668C  0EF2               	movlw	-14
 42307  01668E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42308  016694                     l10474:
 42309                           
 42310                           ;stkvar	_b @ sp[(-13)+-4]
 42311  016694  0EF1               	movlw	-15
 42312  016696  8EE3               	bsf	plusw1,7,c
 42313  016698  D018               	goto	l10478
 42314  01669A                     l10476:
 42315  01669A  0E00               	movlw	0
 42316  01669C  6E32               	movwf	(btemp+8)^0,c
 42317  01669E  0E00               	movlw	0
 42318  0166A0  6E33               	movwf	(btemp+9)^0,c
 42319  0166A2  0E00               	movlw	0
 42320  0166A4  6E34               	movwf	(btemp+10)^0,c
 42321  0166A6  0E00               	movlw	0
 42322  0166A8  6E35               	movwf	(btemp+11)^0,c
 42323                           
 42324                           ;stkvar	_b @ sp[(-13)+-4]
 42325  0166AA  0EEF               	movlw	-17
 42326  0166AC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42327  0166B2  0EF0               	movlw	-16
 42328  0166B4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42329  0166BA  0EF1               	movlw	-15
 42330  0166BC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42331  0166C2  0EF2               	movlw	-14
 42332  0166C4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42333  0166CA                     l10478:
 42334                           
 42335                           ;stkvar	_a @ sp[(-13)+-8]
 42336  0166CA  0EEE               	movlw	238
 42337  0166CC  24E1               	addwf	fsr1l,w,c
 42338  0166CE  6ED9               	movwf	fsr2l,c
 42339  0166D0  0EFF               	movlw	255
 42340  0166D2  20E2               	addwfc	fsr1h,w,c
 42341  0166D4  6EDA               	movwf	fsr2h,c
 42342  0166D6  50DF               	movf	indf2,w,c
 42343  0166D8  6E35               	movwf	(btemp+11)^0,c
 42344  0166DA  0E80               	movlw	128
 42345  0166DC  1635               	andwf	(btemp+11)^0,f,c
 42346                           
 42347                           ;stkvar	_sign @ sp[(-13)+12]
 42348  0166DE  50E1               	movf	fsr1l,w,c
 42349  0166E0  0FFF               	addlw	-1
 42350  0166E2  6ED9               	movwf	fsr2l,c
 42351  0166E4  50E2               	movf	fsr1h,w,c
 42352  0166E6  6EDA               	movwf	fsr2h,c
 42353  0166E8  0EFF               	movlw	255
 42354  0166EA  22DA               	addwfc	fsr2h,f,c
 42355  0166EC  5035               	movf	(btemp+11)^0,w,c
 42356  0166EE  1ADF               	xorwf	indf2,f,c
 42357                           
 42358                           ;stkvar	_a @ sp[(-13)+-8]
 42359  0166F0  0EEE               	movlw	238
 42360  0166F2  24E1               	addwf	fsr1l,w,c
 42361  0166F4  6ED9               	movwf	fsr2l,c
 42362  0166F6  0EFF               	movlw	255
 42363  0166F8  20E2               	addwfc	fsr1h,w,c
 42364  0166FA  6EDA               	movwf	fsr2h,c
 42365  0166FC  50DF               	movf	indf2,w,c
 42366  0166FE  6E35               	movwf	(btemp+11)^0,c
 42367  016700  90D8               	bcf	status,0,c
 42368  016702  3435               	rlcf	(btemp+11)^0,w,c
 42369  016704  6E34               	movwf	(btemp+10)^0,c
 42370                           
 42371                           ;stkvar	_aexp @ sp[(-13)+11]
 42372  016706  0EFE               	movlw	-2
 42373  016708  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42374                           
 42375                           ;stkvar	_a @ sp[(-13)+-8]
 42376  01670E  0EED               	movlw	237
 42377  016710  24E1               	addwf	fsr1l,w,c
 42378  016712  6ED9               	movwf	fsr2l,c
 42379  016714  0EFF               	movlw	255
 42380  016716  20E2               	addwfc	fsr1h,w,c
 42381  016718  6EDA               	movwf	fsr2h,c
 42382  01671A  AEDF               	btfss	indf2,7,c
 42383  01671C  D002               	goto	l10486
 42384                           
 42385                           ;stkvar	_aexp @ sp[(-13)+11]
 42386  01671E  0EFE               	movlw	-2
 42387  016720  80E3               	bsf	plusw1,0,c
 42388  016722                     l10486:
 42389                           
 42390                           ;stkvar	_aexp @ sp[(-13)+11]
 42391  016722  0EFE               	movlw	-2
 42392  016724  50E3               	movf	plusw1,w,c
 42393  016726  B4D8               	btfsc	status,2,c
 42394  016728  D01F               	goto	l10494
 42395                           
 42396                           ;stkvar	_aexp @ sp[(-13)+11]
 42397  01672A  0EFE               	movlw	-2
 42398  01672C  28E3               	incf	plusw1,w,c
 42399  01672E  A4D8               	btfss	status,2,c
 42400  016730  D018               	goto	l10492
 42401  016732  0E00               	movlw	0
 42402  016734  6E32               	movwf	(btemp+8)^0,c
 42403  016736  0E00               	movlw	0
 42404  016738  6E33               	movwf	(btemp+9)^0,c
 42405  01673A  0E00               	movlw	0
 42406  01673C  6E34               	movwf	(btemp+10)^0,c
 42407  01673E  0E00               	movlw	0
 42408  016740  6E35               	movwf	(btemp+11)^0,c
 42409                           
 42410                           ;stkvar	_a @ sp[(-13)+-8]
 42411  016742  0EEB               	movlw	-21
 42412  016744  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42413  01674A  0EEC               	movlw	-20
 42414  01674C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42415  016752  0EED               	movlw	-19
 42416  016754  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42417  01675A  0EEE               	movlw	-18
 42418  01675C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42419  016762                     l10492:
 42420                           
 42421                           ;stkvar	_a @ sp[(-13)+-8]
 42422  016762  0EED               	movlw	-19
 42423  016764  8EE3               	bsf	plusw1,7,c
 42424  016766  D018               	goto	l10496
 42425  016768                     l10494:
 42426  016768  0E00               	movlw	0
 42427  01676A  6E32               	movwf	(btemp+8)^0,c
 42428  01676C  0E00               	movlw	0
 42429  01676E  6E33               	movwf	(btemp+9)^0,c
 42430  016770  0E00               	movlw	0
 42431  016772  6E34               	movwf	(btemp+10)^0,c
 42432  016774  0E00               	movlw	0
 42433  016776  6E35               	movwf	(btemp+11)^0,c
 42434                           
 42435                           ;stkvar	_a @ sp[(-13)+-8]
 42436  016778  0EEB               	movlw	-21
 42437  01677A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42438  016780  0EEC               	movlw	-20
 42439  016782  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42440  016788  0EED               	movlw	-19
 42441  01678A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42442  016790  0EEE               	movlw	-18
 42443  016792  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42444  016798                     l10496:
 42445                           
 42446                           ;stkvar	_aexp @ sp[(-13)+11]
 42447  016798  0EFE               	movlw	-2
 42448  01679A  50E3               	movf	plusw1,w,c
 42449  01679C  B4D8               	btfsc	status,2,c
 42450  01679E  D004               	goto	u8640
 42451                           
 42452                           ;stkvar	_bexp @ sp[(-13)+10]
 42453  0167A0  0EFD               	movlw	-3
 42454  0167A2  50E3               	movf	plusw1,w,c
 42455  0167A4  A4D8               	btfss	status,2,c
 42456  0167A6  D009               	goto	l10504
 42457  0167A8                     u8640:
 42458  0167A8  0E00               	movlw	0
 42459  0167AA  6E2A               	movwf	btemp^0,c
 42460  0167AC  0E00               	movlw	0
 42461  0167AE  6E2B               	movwf	(btemp+1)^0,c
 42462  0167B0  0E00               	movlw	0
 42463  0167B2  6E2C               	movwf	(btemp+2)^0,c
 42464  0167B4  0E00               	movlw	0
 42465  0167B6  6E2D               	movwf	(btemp+3)^0,c
 42466  0167B8  D332               	goto	l3342
 42467  0167BA                     l10504:
 42468                           
 42469                           ;stkvar	_b @ sp[(-13)+-4]
 42470  0167BA  0EEF               	movlw	-17
 42471  0167BC  006F FF8C  F035    	movff	plusw1,btemp+11
 42472                           
 42473                           ;stkvar	_a @ sp[(-13)+-8]
 42474  0167C2  0EED               	movlw	237
 42475  0167C4  24E1               	addwf	fsr1l,w,c
 42476  0167C6  6ED9               	movwf	fsr2l,c
 42477  0167C8  0EFF               	movlw	255
 42478  0167CA  20E2               	addwfc	fsr1h,w,c
 42479  0167CC  6EDA               	movwf	fsr2h,c
 42480  0167CE  50DF               	movf	indf2,w,c
 42481  0167D0  0235               	mulwf	(btemp+11)^0,c
 42482                           
 42483                           ;stkvar	_temp @ sp[(-13)+8]
 42484  0167D2  0EFB               	movlw	-5
 42485  0167D4  006F FFCF FFE3     	movff	prodl,plusw1
 42486  0167DA  0EFC               	movlw	-4
 42487  0167DC  006F FFD3 FFE3     	movff	prodh,plusw1
 42488                           
 42489                           ;stkvar	_temp @ sp[(-13)+8]
 42490  0167E2  0EFB               	movlw	-5
 42491  0167E4  006F FF8C  F035    	movff	plusw1,btemp+11
 42492  0167EA  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 42493  0167F0  6A2F               	clrf	(btemp+5)^0,c
 42494  0167F2  6A30               	clrf	(btemp+6)^0,c
 42495  0167F4  6A31               	clrf	(btemp+7)^0,c
 42496                           
 42497                           ;stkvar	_grs @ sp[(-13)+4]
 42498  0167F6  0EF7               	movlw	-9
 42499  0167F8  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 42500  0167FE  0EF8               	movlw	-8
 42501  016800  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 42502  016806  0EF9               	movlw	-7
 42503  016808  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 42504  01680E  0EFA               	movlw	-6
 42505  016810  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 42506                           
 42507                           ;stkvar	_temp @ sp[(-13)+8]
 42508  016816  0EFC               	movlw	252
 42509  016818  24E1               	addwf	fsr1l,w,c
 42510  01681A  6ED9               	movwf	fsr2l,c
 42511  01681C  0EFF               	movlw	255
 42512  01681E  20E2               	addwfc	fsr1h,w,c
 42513  016820  6EDA               	movwf	fsr2h,c
 42514  016822  50DF               	movf	indf2,w,c
 42515  016824  6E35               	movwf	(btemp+11)^0,c
 42516  016826  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 42517  01682C  6A2F               	clrf	(btemp+5)^0,c
 42518  01682E  6A30               	clrf	(btemp+6)^0,c
 42519  016830  6A31               	clrf	(btemp+7)^0,c
 42520                           
 42521                           ;stkvar	_prod @ sp[(-13)+0]
 42522  016832  0EF3               	movlw	-13
 42523  016834  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 42524  01683A  0EF4               	movlw	-12
 42525  01683C  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 42526  016842  0EF5               	movlw	-11
 42527  016844  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 42528  01684A  0EF6               	movlw	-10
 42529  01684C  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 42530                           
 42531                           ;stkvar	_b @ sp[(-13)+-4]
 42532  016852  0EF0               	movlw	240
 42533  016854  24E1               	addwf	fsr1l,w,c
 42534  016856  6ED9               	movwf	fsr2l,c
 42535  016858  0EFF               	movlw	255
 42536  01685A  20E2               	addwfc	fsr1h,w,c
 42537  01685C  6EDA               	movwf	fsr2h,c
 42538  01685E  50DF               	movf	indf2,w,c
 42539  016860  6E35               	movwf	(btemp+11)^0,c
 42540                           
 42541                           ;stkvar	_a @ sp[(-13)+-8]
 42542  016862  0EEC               	movlw	236
 42543  016864  24E1               	addwf	fsr1l,w,c
 42544  016866  6ED9               	movwf	fsr2l,c
 42545  016868  0EFF               	movlw	255
 42546  01686A  20E2               	addwfc	fsr1h,w,c
 42547  01686C  6EDA               	movwf	fsr2h,c
 42548  01686E  50DF               	movf	indf2,w,c
 42549  016870  0235               	mulwf	(btemp+11)^0,c
 42550                           
 42551                           ;stkvar	_temp @ sp[(-13)+8]
 42552  016872  0EFB               	movlw	-5
 42553  016874  006F FFCF FFE3     	movff	prodl,plusw1
 42554  01687A  0EFC               	movlw	-4
 42555  01687C  006F FFD3 FFE3     	movff	prodh,plusw1
 42556                           
 42557                           ;stkvar	_grs @ sp[(-13)+4]
 42558  016882  50E1               	movf	fsr1l,w,c
 42559  016884  0FF7               	addlw	-9
 42560  016886  6ED9               	movwf	fsr2l,c
 42561  016888  50E2               	movf	fsr1h,w,c
 42562  01688A  6EDA               	movwf	fsr2h,c
 42563  01688C  0EFF               	movlw	255
 42564  01688E  22DA               	addwfc	fsr2h,f,c
 42565                           
 42566                           ;stkvar	_temp @ sp[(-13)+8]
 42567  016890  0EFB               	movlw	-5
 42568  016892  50E3               	movf	plusw1,w,c
 42569  016894  26DE               	addwf	postinc2,f,c
 42570  016896  0E00               	movlw	0
 42571  016898  22DE               	addwfc	postinc2,f,c
 42572  01689A  22DE               	addwfc	postinc2,f,c
 42573  01689C  22DE               	addwfc	postinc2,f,c
 42574                           
 42575                           ;stkvar	_prod @ sp[(-13)+0]
 42576  01689E  50E1               	movf	fsr1l,w,c
 42577  0168A0  0FF3               	addlw	-13
 42578  0168A2  6ED9               	movwf	fsr2l,c
 42579  0168A4  50E2               	movf	fsr1h,w,c
 42580  0168A6  6EDA               	movwf	fsr2h,c
 42581  0168A8  0EFF               	movlw	255
 42582  0168AA  22DA               	addwfc	fsr2h,f,c
 42583                           
 42584                           ;stkvar	_temp @ sp[(-13)+8]
 42585  0168AC  0EFC               	movlw	252
 42586  0168AE  24E1               	addwf	fsr1l,w,c
 42587  0168B0  6EE9               	movwf	fsr0l,c
 42588  0168B2  0EFF               	movlw	255
 42589  0168B4  20E2               	addwfc	fsr1h,w,c
 42590  0168B6  6EEA               	movwf	fsr0h,c
 42591  0168B8  50EF               	movf	indf0,w,c
 42592  0168BA  26DE               	addwf	postinc2,f,c
 42593  0168BC  0E00               	movlw	0
 42594  0168BE  22DE               	addwfc	postinc2,f,c
 42595  0168C0  22DE               	addwfc	postinc2,f,c
 42596  0168C2  22DE               	addwfc	postinc2,f,c
 42597                           
 42598                           ;stkvar	_b @ sp[(-13)+-4]
 42599  0168C4  0EF1               	movlw	241
 42600  0168C6  24E1               	addwf	fsr1l,w,c
 42601  0168C8  6ED9               	movwf	fsr2l,c
 42602  0168CA  0EFF               	movlw	255
 42603  0168CC  20E2               	addwfc	fsr1h,w,c
 42604  0168CE  6EDA               	movwf	fsr2h,c
 42605  0168D0  50DF               	movf	indf2,w,c
 42606  0168D2  6E35               	movwf	(btemp+11)^0,c
 42607                           
 42608                           ;stkvar	_a @ sp[(-13)+-8]
 42609  0168D4  0EEB               	movlw	-21
 42610  0168D6  50E3               	movf	plusw1,w,c
 42611  0168D8  0235               	mulwf	(btemp+11)^0,c
 42612                           
 42613                           ;stkvar	_temp @ sp[(-13)+8]
 42614  0168DA  0EFB               	movlw	-5
 42615  0168DC  006F FFCF FFE3     	movff	prodl,plusw1
 42616  0168E2  0EFC               	movlw	-4
 42617  0168E4  006F FFD3 FFE3     	movff	prodh,plusw1
 42618                           
 42619                           ;stkvar	_grs @ sp[(-13)+4]
 42620  0168EA  50E1               	movf	fsr1l,w,c
 42621  0168EC  0FF7               	addlw	-9
 42622  0168EE  6ED9               	movwf	fsr2l,c
 42623  0168F0  50E2               	movf	fsr1h,w,c
 42624  0168F2  6EDA               	movwf	fsr2h,c
 42625  0168F4  0EFF               	movlw	255
 42626  0168F6  22DA               	addwfc	fsr2h,f,c
 42627                           
 42628                           ;stkvar	_temp @ sp[(-13)+8]
 42629  0168F8  0EFB               	movlw	-5
 42630  0168FA  50E3               	movf	plusw1,w,c
 42631  0168FC  26DE               	addwf	postinc2,f,c
 42632  0168FE  0E00               	movlw	0
 42633  016900  22DE               	addwfc	postinc2,f,c
 42634  016902  22DE               	addwfc	postinc2,f,c
 42635  016904  22DE               	addwfc	postinc2,f,c
 42636                           
 42637                           ;stkvar	_prod @ sp[(-13)+0]
 42638  016906  50E1               	movf	fsr1l,w,c
 42639  016908  0FF3               	addlw	-13
 42640  01690A  6ED9               	movwf	fsr2l,c
 42641  01690C  50E2               	movf	fsr1h,w,c
 42642  01690E  6EDA               	movwf	fsr2h,c
 42643  016910  0EFF               	movlw	255
 42644  016912  22DA               	addwfc	fsr2h,f,c
 42645                           
 42646                           ;stkvar	_temp @ sp[(-13)+8]
 42647  016914  0EFC               	movlw	252
 42648  016916  24E1               	addwf	fsr1l,w,c
 42649  016918  6EE9               	movwf	fsr0l,c
 42650  01691A  0EFF               	movlw	255
 42651  01691C  20E2               	addwfc	fsr1h,w,c
 42652  01691E  6EEA               	movwf	fsr0h,c
 42653  016920  50EF               	movf	indf0,w,c
 42654  016922  26DE               	addwf	postinc2,f,c
 42655  016924  0E00               	movlw	0
 42656  016926  22DE               	addwfc	postinc2,f,c
 42657  016928  22DE               	addwfc	postinc2,f,c
 42658  01692A  22DE               	addwfc	postinc2,f,c
 42659                           
 42660                           ;stkvar	_grs @ sp[(-13)+4]
 42661  01692C  50E1               	movf	fsr1l,w,c
 42662  01692E  0FF7               	addlw	-9
 42663  016930  6ED9               	movwf	fsr2l,c
 42664  016932  50E2               	movf	fsr1h,w,c
 42665  016934  6EDA               	movwf	fsr2h,c
 42666  016936  0EFF               	movlw	255
 42667  016938  22DA               	addwfc	fsr2h,f,c
 42668  01693A  0E08               	movlw	8
 42669  01693C                     u8655:
 42670  01693C  90D8               	bcf	status,0,c
 42671  01693E  36DE               	rlcf	postinc2,f,c
 42672  016940  36DE               	rlcf	postinc2,f,c
 42673  016942  36DE               	rlcf	postinc2,f,c
 42674  016944  36DD               	rlcf	postdec2,f,c
 42675  016946  52DD               	movf	postdec2,f,c
 42676  016948  52DD               	movf	postdec2,f,c
 42677  01694A  2EE8               	decfsz	wreg,f,c
 42678  01694C  D7F7               	goto	u8655
 42679                           
 42680                           ;stkvar	_b @ sp[(-13)+-4]
 42681  01694E  0EF0               	movlw	240
 42682  016950  24E1               	addwf	fsr1l,w,c
 42683  016952  6ED9               	movwf	fsr2l,c
 42684  016954  0EFF               	movlw	255
 42685  016956  20E2               	addwfc	fsr1h,w,c
 42686  016958  6EDA               	movwf	fsr2h,c
 42687  01695A  50DF               	movf	indf2,w,c
 42688  01695C  6E35               	movwf	(btemp+11)^0,c
 42689                           
 42690                           ;stkvar	_a @ sp[(-13)+-8]
 42691  01695E  0EEB               	movlw	-21
 42692  016960  50E3               	movf	plusw1,w,c
 42693  016962  0235               	mulwf	(btemp+11)^0,c
 42694                           
 42695                           ;stkvar	_temp @ sp[(-13)+8]
 42696  016964  0EFB               	movlw	-5
 42697  016966  006F FFCF FFE3     	movff	prodl,plusw1
 42698  01696C  0EFC               	movlw	-4
 42699  01696E  006F FFD3 FFE3     	movff	prodh,plusw1
 42700                           
 42701                           ;stkvar	_temp @ sp[(-13)+8]
 42702  016974  0EFB               	movlw	-5
 42703  016976  006F FF8C  F034    	movff	plusw1,btemp+10
 42704  01697C  0EFC               	movlw	-4
 42705  01697E  006F FF8C  F035    	movff	plusw1,btemp+11
 42706                           
 42707                           ;stkvar	_grs @ sp[(-13)+4]
 42708  016984  50E1               	movf	fsr1l,w,c
 42709  016986  0FF7               	addlw	-9
 42710  016988  6ED9               	movwf	fsr2l,c
 42711  01698A  50E2               	movf	fsr1h,w,c
 42712  01698C  6EDA               	movwf	fsr2h,c
 42713  01698E  0EFF               	movlw	255
 42714  016990  22DA               	addwfc	fsr2h,f,c
 42715  016992  5034               	movf	(btemp+10)^0,w,c
 42716  016994  26DE               	addwf	postinc2,f,c
 42717  016996  5035               	movf	(btemp+11)^0,w,c
 42718  016998  22DE               	addwfc	postinc2,f,c
 42719  01699A  0E00               	movlw	0
 42720  01699C  22DE               	addwfc	postinc2,f,c
 42721  01699E  22DE               	addwfc	postinc2,f,c
 42722                           
 42723                           ;stkvar	_b @ sp[(-13)+-4]
 42724  0169A0  0EEF               	movlw	-17
 42725  0169A2  006F FF8C  F035    	movff	plusw1,btemp+11
 42726                           
 42727                           ;stkvar	_a @ sp[(-13)+-8]
 42728  0169A8  0EEC               	movlw	236
 42729  0169AA  24E1               	addwf	fsr1l,w,c
 42730  0169AC  6ED9               	movwf	fsr2l,c
 42731  0169AE  0EFF               	movlw	255
 42732  0169B0  20E2               	addwfc	fsr1h,w,c
 42733  0169B2  6EDA               	movwf	fsr2h,c
 42734  0169B4  50DF               	movf	indf2,w,c
 42735  0169B6  0235               	mulwf	(btemp+11)^0,c
 42736                           
 42737                           ;stkvar	_temp @ sp[(-13)+8]
 42738  0169B8  0EFB               	movlw	-5
 42739  0169BA  006F FFCF FFE3     	movff	prodl,plusw1
 42740  0169C0  0EFC               	movlw	-4
 42741  0169C2  006F FFD3 FFE3     	movff	prodh,plusw1
 42742                           
 42743                           ;stkvar	_temp @ sp[(-13)+8]
 42744  0169C8  0EFB               	movlw	-5
 42745  0169CA  006F FF8C  F034    	movff	plusw1,btemp+10
 42746  0169D0  0EFC               	movlw	-4
 42747  0169D2  006F FF8C  F035    	movff	plusw1,btemp+11
 42748                           
 42749                           ;stkvar	_grs @ sp[(-13)+4]
 42750  0169D8  50E1               	movf	fsr1l,w,c
 42751  0169DA  0FF7               	addlw	-9
 42752  0169DC  6ED9               	movwf	fsr2l,c
 42753  0169DE  50E2               	movf	fsr1h,w,c
 42754  0169E0  6EDA               	movwf	fsr2h,c
 42755  0169E2  0EFF               	movlw	255
 42756  0169E4  22DA               	addwfc	fsr2h,f,c
 42757  0169E6  5034               	movf	(btemp+10)^0,w,c
 42758  0169E8  26DE               	addwf	postinc2,f,c
 42759  0169EA  5035               	movf	(btemp+11)^0,w,c
 42760  0169EC  22DE               	addwfc	postinc2,f,c
 42761  0169EE  0E00               	movlw	0
 42762  0169F0  22DE               	addwfc	postinc2,f,c
 42763  0169F2  22DE               	addwfc	postinc2,f,c
 42764                           
 42765                           ;stkvar	_grs @ sp[(-13)+4]
 42766  0169F4  50E1               	movf	fsr1l,w,c
 42767  0169F6  0FF7               	addlw	-9
 42768  0169F8  6ED9               	movwf	fsr2l,c
 42769  0169FA  50E2               	movf	fsr1h,w,c
 42770  0169FC  6EDA               	movwf	fsr2h,c
 42771  0169FE  0EFF               	movlw	255
 42772  016A00  22DA               	addwfc	fsr2h,f,c
 42773  016A02  0E08               	movlw	8
 42774  016A04                     u8665:
 42775  016A04  90D8               	bcf	status,0,c
 42776  016A06  36DE               	rlcf	postinc2,f,c
 42777  016A08  36DE               	rlcf	postinc2,f,c
 42778  016A0A  36DE               	rlcf	postinc2,f,c
 42779  016A0C  36DD               	rlcf	postdec2,f,c
 42780  016A0E  52DD               	movf	postdec2,f,c
 42781  016A10  52DD               	movf	postdec2,f,c
 42782  016A12  2EE8               	decfsz	wreg,f,c
 42783  016A14  D7F7               	goto	u8665
 42784                           
 42785                           ;stkvar	_b @ sp[(-13)+-4]
 42786  016A16  0EEF               	movlw	-17
 42787  016A18  006F FF8C  F035    	movff	plusw1,btemp+11
 42788                           
 42789                           ;stkvar	_a @ sp[(-13)+-8]
 42790  016A1E  0EEB               	movlw	-21
 42791  016A20  50E3               	movf	plusw1,w,c
 42792  016A22  0235               	mulwf	(btemp+11)^0,c
 42793                           
 42794                           ;stkvar	_temp @ sp[(-13)+8]
 42795  016A24  0EFB               	movlw	-5
 42796  016A26  006F FFCF FFE3     	movff	prodl,plusw1
 42797  016A2C  0EFC               	movlw	-4
 42798  016A2E  006F FFD3 FFE3     	movff	prodh,plusw1
 42799                           
 42800                           ;stkvar	_temp @ sp[(-13)+8]
 42801  016A34  0EFB               	movlw	-5
 42802  016A36  006F FF8C  F034    	movff	plusw1,btemp+10
 42803  016A3C  0EFC               	movlw	-4
 42804  016A3E  006F FF8C  F035    	movff	plusw1,btemp+11
 42805                           
 42806                           ;stkvar	_grs @ sp[(-13)+4]
 42807  016A44  50E1               	movf	fsr1l,w,c
 42808  016A46  0FF7               	addlw	-9
 42809  016A48  6ED9               	movwf	fsr2l,c
 42810  016A4A  50E2               	movf	fsr1h,w,c
 42811  016A4C  6EDA               	movwf	fsr2h,c
 42812  016A4E  0EFF               	movlw	255
 42813  016A50  22DA               	addwfc	fsr2h,f,c
 42814  016A52  5034               	movf	(btemp+10)^0,w,c
 42815  016A54  26DE               	addwf	postinc2,f,c
 42816  016A56  5035               	movf	(btemp+11)^0,w,c
 42817  016A58  22DE               	addwfc	postinc2,f,c
 42818  016A5A  0E00               	movlw	0
 42819  016A5C  22DE               	addwfc	postinc2,f,c
 42820  016A5E  22DE               	addwfc	postinc2,f,c
 42821                           
 42822                           ;stkvar	_b @ sp[(-13)+-4]
 42823  016A60  0EF0               	movlw	240
 42824  016A62  24E1               	addwf	fsr1l,w,c
 42825  016A64  6ED9               	movwf	fsr2l,c
 42826  016A66  0EFF               	movlw	255
 42827  016A68  20E2               	addwfc	fsr1h,w,c
 42828  016A6A  6EDA               	movwf	fsr2h,c
 42829  016A6C  50DF               	movf	indf2,w,c
 42830  016A6E  6E35               	movwf	(btemp+11)^0,c
 42831                           
 42832                           ;stkvar	_a @ sp[(-13)+-8]
 42833  016A70  0EED               	movlw	237
 42834  016A72  24E1               	addwf	fsr1l,w,c
 42835  016A74  6ED9               	movwf	fsr2l,c
 42836  016A76  0EFF               	movlw	255
 42837  016A78  20E2               	addwfc	fsr1h,w,c
 42838  016A7A  6EDA               	movwf	fsr2h,c
 42839  016A7C  50DF               	movf	indf2,w,c
 42840  016A7E  0235               	mulwf	(btemp+11)^0,c
 42841                           
 42842                           ;stkvar	_temp @ sp[(-13)+8]
 42843  016A80  0EFB               	movlw	-5
 42844  016A82  006F FFCF FFE3     	movff	prodl,plusw1
 42845  016A88  0EFC               	movlw	-4
 42846  016A8A  006F FFD3 FFE3     	movff	prodh,plusw1
 42847                           
 42848                           ;stkvar	_temp @ sp[(-13)+8]
 42849  016A90  0EFB               	movlw	-5
 42850  016A92  006F FF8C  F034    	movff	plusw1,btemp+10
 42851  016A98  0EFC               	movlw	-4
 42852  016A9A  006F FF8C  F035    	movff	plusw1,btemp+11
 42853                           
 42854                           ;stkvar	_prod @ sp[(-13)+0]
 42855  016AA0  50E1               	movf	fsr1l,w,c
 42856  016AA2  0FF3               	addlw	-13
 42857  016AA4  6ED9               	movwf	fsr2l,c
 42858  016AA6  50E2               	movf	fsr1h,w,c
 42859  016AA8  6EDA               	movwf	fsr2h,c
 42860  016AAA  0EFF               	movlw	255
 42861  016AAC  22DA               	addwfc	fsr2h,f,c
 42862  016AAE  5034               	movf	(btemp+10)^0,w,c
 42863  016AB0  26DE               	addwf	postinc2,f,c
 42864  016AB2  5035               	movf	(btemp+11)^0,w,c
 42865  016AB4  22DE               	addwfc	postinc2,f,c
 42866  016AB6  0E00               	movlw	0
 42867  016AB8  22DE               	addwfc	postinc2,f,c
 42868  016ABA  22DE               	addwfc	postinc2,f,c
 42869                           
 42870                           ;stkvar	_b @ sp[(-13)+-4]
 42871  016ABC  0EF1               	movlw	241
 42872  016ABE  24E1               	addwf	fsr1l,w,c
 42873  016AC0  6ED9               	movwf	fsr2l,c
 42874  016AC2  0EFF               	movlw	255
 42875  016AC4  20E2               	addwfc	fsr1h,w,c
 42876  016AC6  6EDA               	movwf	fsr2h,c
 42877  016AC8  50DF               	movf	indf2,w,c
 42878  016ACA  6E35               	movwf	(btemp+11)^0,c
 42879                           
 42880                           ;stkvar	_a @ sp[(-13)+-8]
 42881  016ACC  0EEC               	movlw	236
 42882  016ACE  24E1               	addwf	fsr1l,w,c
 42883  016AD0  6ED9               	movwf	fsr2l,c
 42884  016AD2  0EFF               	movlw	255
 42885  016AD4  20E2               	addwfc	fsr1h,w,c
 42886  016AD6  6EDA               	movwf	fsr2h,c
 42887  016AD8  50DF               	movf	indf2,w,c
 42888  016ADA  0235               	mulwf	(btemp+11)^0,c
 42889                           
 42890                           ;stkvar	_temp @ sp[(-13)+8]
 42891  016ADC  0EFB               	movlw	-5
 42892  016ADE  006F FFCF FFE3     	movff	prodl,plusw1
 42893  016AE4  0EFC               	movlw	-4
 42894  016AE6  006F FFD3 FFE3     	movff	prodh,plusw1
 42895                           
 42896                           ;stkvar	_temp @ sp[(-13)+8]
 42897  016AEC  0EFB               	movlw	-5
 42898  016AEE  006F FF8C  F034    	movff	plusw1,btemp+10
 42899  016AF4  0EFC               	movlw	-4
 42900  016AF6  006F FF8C  F035    	movff	plusw1,btemp+11
 42901                           
 42902                           ;stkvar	_prod @ sp[(-13)+0]
 42903  016AFC  50E1               	movf	fsr1l,w,c
 42904  016AFE  0FF3               	addlw	-13
 42905  016B00  6ED9               	movwf	fsr2l,c
 42906  016B02  50E2               	movf	fsr1h,w,c
 42907  016B04  6EDA               	movwf	fsr2h,c
 42908  016B06  0EFF               	movlw	255
 42909  016B08  22DA               	addwfc	fsr2h,f,c
 42910  016B0A  5034               	movf	(btemp+10)^0,w,c
 42911  016B0C  26DE               	addwf	postinc2,f,c
 42912  016B0E  5035               	movf	(btemp+11)^0,w,c
 42913  016B10  22DE               	addwfc	postinc2,f,c
 42914  016B12  0E00               	movlw	0
 42915  016B14  22DE               	addwfc	postinc2,f,c
 42916  016B16  22DE               	addwfc	postinc2,f,c
 42917                           
 42918                           ;stkvar	_b @ sp[(-13)+-4]
 42919  016B18  0EF1               	movlw	241
 42920  016B1A  24E1               	addwf	fsr1l,w,c
 42921  016B1C  6ED9               	movwf	fsr2l,c
 42922  016B1E  0EFF               	movlw	255
 42923  016B20  20E2               	addwfc	fsr1h,w,c
 42924  016B22  6EDA               	movwf	fsr2h,c
 42925  016B24  50DF               	movf	indf2,w,c
 42926  016B26  6E35               	movwf	(btemp+11)^0,c
 42927                           
 42928                           ;stkvar	_a @ sp[(-13)+-8]
 42929  016B28  0EED               	movlw	237
 42930  016B2A  24E1               	addwf	fsr1l,w,c
 42931  016B2C  6ED9               	movwf	fsr2l,c
 42932  016B2E  0EFF               	movlw	255
 42933  016B30  20E2               	addwfc	fsr1h,w,c
 42934  016B32  6EDA               	movwf	fsr2h,c
 42935  016B34  50DF               	movf	indf2,w,c
 42936  016B36  0235               	mulwf	(btemp+11)^0,c
 42937                           
 42938                           ;stkvar	_temp @ sp[(-13)+8]
 42939  016B38  0EFB               	movlw	-5
 42940  016B3A  006F FFCF FFE3     	movff	prodl,plusw1
 42941  016B40  0EFC               	movlw	-4
 42942  016B42  006F FFD3 FFE3     	movff	prodh,plusw1
 42943                           
 42944                           ;stkvar	_temp @ sp[(-13)+8]
 42945  016B48  0EFB               	movlw	-5
 42946  016B4A  006F FF8C  F034    	movff	plusw1,btemp+10
 42947  016B50  0EFC               	movlw	-4
 42948  016B52  006F FF8C  F035    	movff	plusw1,btemp+11
 42949  016B58  5034               	movf	(btemp+10)^0,w,c
 42950  016B5A  6E2E               	movwf	(btemp+4)^0,c
 42951  016B5C  5035               	movf	(btemp+11)^0,w,c
 42952  016B5E  6E2F               	movwf	(btemp+5)^0,c
 42953  016B60  6A30               	clrf	(btemp+6)^0,c
 42954  016B62  6A31               	clrf	(btemp+7)^0,c
 42955  016B64  0060  F0C0  F031   	movff	btemp+6,btemp+7
 42956  016B6A  0060  F0BC  F030   	movff	btemp+5,btemp+6
 42957  016B70  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 42958  016B76  6A2E               	clrf	(btemp+4)^0,c
 42959                           
 42960                           ;stkvar	_prod @ sp[(-13)+0]
 42961  016B78  50E1               	movf	fsr1l,w,c
 42962  016B7A  0FF3               	addlw	-13
 42963  016B7C  6ED9               	movwf	fsr2l,c
 42964  016B7E  50E2               	movf	fsr1h,w,c
 42965  016B80  6EDA               	movwf	fsr2h,c
 42966  016B82  0EFF               	movlw	255
 42967  016B84  22DA               	addwfc	fsr2h,f,c
 42968  016B86  502E               	movf	(btemp+4)^0,w,c
 42969  016B88  26DE               	addwf	postinc2,f,c
 42970  016B8A  502F               	movf	(btemp+5)^0,w,c
 42971  016B8C  22DE               	addwfc	postinc2,f,c
 42972  016B8E  5030               	movf	(btemp+6)^0,w,c
 42973  016B90  22DE               	addwfc	postinc2,f,c
 42974  016B92  5031               	movf	(btemp+7)^0,w,c
 42975  016B94  22DE               	addwfc	postinc2,f,c
 42976                           
 42977                           ;stkvar	_prod @ sp[(-13)+0]
 42978  016B96  50E1               	movf	fsr1l,w,c
 42979  016B98  0FF3               	addlw	-13
 42980  016B9A  6ED9               	movwf	fsr2l,c
 42981  016B9C  50E2               	movf	fsr1h,w,c
 42982  016B9E  6EDA               	movwf	fsr2h,c
 42983  016BA0  0EFF               	movlw	255
 42984  016BA2  22DA               	addwfc	fsr2h,f,c
 42985                           
 42986                           ;stkvar	_grs @ sp[(-13)+4]
 42987  016BA4  0EFA               	movlw	250
 42988  016BA6  24E1               	addwf	fsr1l,w,c
 42989  016BA8  6EE9               	movwf	fsr0l,c
 42990  016BAA  0EFF               	movlw	255
 42991  016BAC  20E2               	addwfc	fsr1h,w,c
 42992  016BAE  6EEA               	movwf	fsr0h,c
 42993  016BB0  50EF               	movf	indf0,w,c
 42994  016BB2  26DE               	addwf	postinc2,f,c
 42995  016BB4  0E00               	movlw	0
 42996  016BB6  22DE               	addwfc	postinc2,f,c
 42997  016BB8  22DE               	addwfc	postinc2,f,c
 42998  016BBA  22DE               	addwfc	postinc2,f,c
 42999                           
 43000                           ;stkvar	_grs @ sp[(-13)+4]
 43001  016BBC  50E1               	movf	fsr1l,w,c
 43002  016BBE  0FF7               	addlw	-9
 43003  016BC0  6ED9               	movwf	fsr2l,c
 43004  016BC2  50E2               	movf	fsr1h,w,c
 43005  016BC4  6EDA               	movwf	fsr2h,c
 43006  016BC6  0EFF               	movlw	255
 43007  016BC8  22DA               	addwfc	fsr2h,f,c
 43008  016BCA  0E08               	movlw	8
 43009  016BCC                     u8675:
 43010  016BCC  90D8               	bcf	status,0,c
 43011  016BCE  36DE               	rlcf	postinc2,f,c
 43012  016BD0  36DE               	rlcf	postinc2,f,c
 43013  016BD2  36DE               	rlcf	postinc2,f,c
 43014  016BD4  36DD               	rlcf	postdec2,f,c
 43015  016BD6  52DD               	movf	postdec2,f,c
 43016  016BD8  52DD               	movf	postdec2,f,c
 43017  016BDA  2EE8               	decfsz	wreg,f,c
 43018  016BDC  D7F7               	goto	u8675
 43019  016BDE  0E82               	movlw	130
 43020  016BE0  6E34               	movwf	(btemp+10)^0,c
 43021  016BE2  0EFF               	movlw	255
 43022  016BE4  6E35               	movwf	(btemp+11)^0,c
 43023                           
 43024                           ;stkvar	_bexp @ sp[(-13)+10]
 43025  016BE6  0EFD               	movlw	-3
 43026  016BE8  50E3               	movf	plusw1,w,c
 43027  016BEA  6E32               	movwf	(btemp+8)^0,c
 43028  016BEC  6A33               	clrf	(btemp+9)^0,c
 43029                           
 43030                           ;stkvar	_aexp @ sp[(-13)+11]
 43031  016BEE  0EFE               	movlw	-2
 43032  016BF0  50E3               	movf	plusw1,w,c
 43033  016BF2  2632               	addwf	(btemp+8)^0,f,c
 43034  016BF4  0E00               	movlw	0
 43035  016BF6  2233               	addwfc	(btemp+9)^0,f,c
 43036  016BF8  5034               	movf	(btemp+10)^0,w,c
 43037  016BFA  2632               	addwf	(btemp+8)^0,f,c
 43038  016BFC  5035               	movf	(btemp+11)^0,w,c
 43039  016BFE  2233               	addwfc	(btemp+9)^0,f,c
 43040                           
 43041                           ;stkvar	_temp @ sp[(-13)+8]
 43042  016C00  0EFB               	movlw	-5
 43043  016C02  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43044  016C08  0EFC               	movlw	-4
 43045  016C0A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43046  016C10  D021               	goto	l10566
 43047  016C12                     l10556:
 43048                           
 43049                           ;stkvar	_prod @ sp[(-13)+0]
 43050  016C12  90D8               	bcf	status,0,c
 43051  016C14  0EF3               	movlw	-13
 43052  016C16  36E3               	rlcf	plusw1,f,c
 43053  016C18  0EF4               	movlw	-12
 43054  016C1A  36E3               	rlcf	plusw1,f,c
 43055  016C1C  0EF5               	movlw	-11
 43056  016C1E  36E3               	rlcf	plusw1,f,c
 43057  016C20  0EF6               	movlw	-10
 43058  016C22  36E3               	rlcf	plusw1,f,c
 43059                           
 43060                           ;stkvar	_grs @ sp[(-13)+4]
 43061  016C24  0EFA               	movlw	-6
 43062  016C26  AEE3               	btfss	plusw1,7,c
 43063  016C28  D002               	goto	l10562
 43064                           
 43065                           ;stkvar	_prod @ sp[(-13)+0]
 43066  016C2A  0EF3               	movlw	-13
 43067  016C2C  80E3               	bsf	plusw1,0,c
 43068  016C2E                     l10562:
 43069                           
 43070                           ;stkvar	_grs @ sp[(-13)+4]
 43071  016C2E  90D8               	bcf	status,0,c
 43072  016C30  0EF7               	movlw	-9
 43073  016C32  36E3               	rlcf	plusw1,f,c
 43074  016C34  0EF8               	movlw	-8
 43075  016C36  36E3               	rlcf	plusw1,f,c
 43076  016C38  0EF9               	movlw	-7
 43077  016C3A  36E3               	rlcf	plusw1,f,c
 43078  016C3C  0EFA               	movlw	-6
 43079  016C3E  36E3               	rlcf	plusw1,f,c
 43080                           
 43081                           ;stkvar	_temp @ sp[(-13)+8]
 43082  016C40  50E1               	movf	fsr1l,w,c
 43083  016C42  0FFB               	addlw	-5
 43084  016C44  6ED9               	movwf	fsr2l,c
 43085  016C46  50E2               	movf	fsr1h,w,c
 43086  016C48  6EDA               	movwf	fsr2h,c
 43087  016C4A  0EFF               	movlw	255
 43088  016C4C  22DA               	addwfc	fsr2h,f,c
 43089  016C4E  06DE               	decf	postinc2,f,c
 43090  016C50  0E00               	movlw	0
 43091  016C52  5ADD               	subwfb	postdec2,f,c
 43092  016C54                     l10566:
 43093                           
 43094                           ;stkvar	_prod @ sp[(-13)+0]
 43095  016C54  0EF5               	movlw	-11
 43096  016C56  AEE3               	btfss	plusw1,7,c
 43097  016C58  D7DC               	goto	l10556
 43098                           
 43099                           ;stkvar	_aexp @ sp[(-13)+11]
 43100  016C5A  0EFE               	movlw	-2
 43101  016C5C  6AE3               	clrf	plusw1,c
 43102                           
 43103                           ;stkvar	_grs @ sp[(-13)+4]
 43104  016C5E  0EFA               	movlw	-6
 43105  016C60  AEE3               	btfss	plusw1,7,c
 43106  016C62  D020               	goto	l10580
 43107                           
 43108                           ;stkvar	_grs @ sp[(-13)+4]
 43109  016C64  50E1               	movf	fsr1l,w,c
 43110  016C66  0FF7               	addlw	-9
 43111  016C68  6ED9               	movwf	fsr2l,c
 43112  016C6A  50E2               	movf	fsr1h,w,c
 43113  016C6C  6EDA               	movwf	fsr2h,c
 43114  016C6E  0EFF               	movlw	255
 43115  016C70  22DA               	addwfc	fsr2h,f,c
 43116  016C72  0EFF               	movlw	255
 43117  016C74  14DE               	andwf	postinc2,w,c
 43118  016C76  6E32               	movwf	(btemp+8)^0,c
 43119  016C78  0EFF               	movlw	255
 43120  016C7A  14DE               	andwf	postinc2,w,c
 43121  016C7C  6E33               	movwf	(btemp+9)^0,c
 43122  016C7E  0EFF               	movlw	255
 43123  016C80  14DE               	andwf	postinc2,w,c
 43124  016C82  6E34               	movwf	(btemp+10)^0,c
 43125  016C84  0E7F               	movlw	127
 43126  016C86  14DE               	andwf	postinc2,w,c
 43127  016C88  6E35               	movwf	(btemp+11)^0,c
 43128  016C8A  5032               	movf	(btemp+8)^0,w,c
 43129  016C8C  1033               	iorwf	(btemp+9)^0,w,c
 43130  016C8E  1034               	iorwf	(btemp+10)^0,w,c
 43131  016C90  1035               	iorwf	(btemp+11)^0,w,c
 43132  016C92  B4D8               	btfsc	status,2,c
 43133  016C94  D004               	goto	l10576
 43134  016C96                     u8710:
 43135                           
 43136                           ;stkvar	_aexp @ sp[(-13)+11]
 43137  016C96  0EFE               	movlw	-2
 43138  016C98  6AE3               	clrf	plusw1,c
 43139  016C9A  2AE3               	incf	plusw1,f,c
 43140  016C9C  D003               	goto	l10580
 43141  016C9E                     l10576:
 43142                           
 43143                           ;stkvar	_prod @ sp[(-13)+0]
 43144  016C9E  0EF3               	movlw	-13
 43145  016CA0  B0E3               	btfsc	plusw1,0,c
 43146  016CA2  D7F9               	goto	u8710
 43147  016CA4                     l10580:
 43148                           
 43149                           ;stkvar	_aexp @ sp[(-13)+11]
 43150  016CA4  0EFE               	movlw	-2
 43151  016CA6  50E3               	movf	plusw1,w,c
 43152  016CA8  B4D8               	btfsc	status,2,c
 43153  016CAA  D036               	goto	l10590
 43154                           
 43155                           ;stkvar	_prod @ sp[(-13)+0]
 43156  016CAC  50E1               	movf	fsr1l,w,c
 43157  016CAE  0FF3               	addlw	-13
 43158  016CB0  6ED9               	movwf	fsr2l,c
 43159  016CB2  50E2               	movf	fsr1h,w,c
 43160  016CB4  6EDA               	movwf	fsr2h,c
 43161  016CB6  0EFF               	movlw	255
 43162  016CB8  22DA               	addwfc	fsr2h,f,c
 43163  016CBA  2ADE               	incf	postinc2,f,c
 43164  016CBC  0E00               	movlw	0
 43165  016CBE  22DE               	addwfc	postinc2,f,c
 43166  016CC0  22DE               	addwfc	postinc2,f,c
 43167  016CC2  22DE               	addwfc	postinc2,f,c
 43168                           
 43169                           ;stkvar	_prod @ sp[(-13)+0]
 43170  016CC4  0EF6               	movlw	-10
 43171  016CC6  A0E3               	btfss	plusw1,0,c
 43172  016CC8  D027               	goto	l10590
 43173  016CCA  0E01               	movlw	1
 43174  016CCC  6E35               	movwf	(btemp+11)^0,c
 43175                           
 43176                           ;stkvar	_prod @ sp[(-13)+0]
 43177  016CCE  50E1               	movf	fsr1l,w,c
 43178  016CD0  0FF3               	addlw	-13
 43179  016CD2  6ED9               	movwf	fsr2l,c
 43180  016CD4  50E2               	movf	fsr1h,w,c
 43181  016CD6  6EDA               	movwf	fsr2h,c
 43182  016CD8  0EFF               	movlw	255
 43183  016CDA  22DA               	addwfc	fsr2h,f,c
 43184  016CDC  2835               	incf	(btemp+11)^0,w,c
 43185  016CDE  52DE               	movf	postinc2,f,c
 43186  016CE0  D008               	goto	u8750
 43187  016CE2                     u8755:
 43188  016CE2  52DE               	movf	postinc2,f,c
 43189  016CE4  90D8               	bcf	status,0,c
 43190  016CE6  BEDC               	btfsc	preinc2,7,c
 43191  016CE8  80D8               	bsf	status,0,c
 43192  016CEA  32DD               	rrcf	postdec2,f,c
 43193  016CEC  32DD               	rrcf	postdec2,f,c
 43194  016CEE  32DD               	rrcf	postdec2,f,c
 43195  016CF0  32DE               	rrcf	postinc2,f,c
 43196  016CF2                     u8750:
 43197  016CF2  2EE8               	decfsz	wreg,f,c
 43198  016CF4  D7F6               	goto	u8755
 43199                           
 43200                           ;stkvar	_temp @ sp[(-13)+8]
 43201  016CF6  0EFB               	movlw	-5
 43202  016CF8  50E3               	movf	plusw1,w,c
 43203  016CFA  0F01               	addlw	1
 43204  016CFC  6E2A               	movwf	btemp^0,c
 43205  016CFE  0EFB               	movlw	-5
 43206  016D00  0060  F0AB  FFE3   	movff	btemp,plusw1
 43207  016D06  6A2A               	clrf	btemp^0,c
 43208  016D08  0EFC               	movlw	-4
 43209  016D0A  50E3               	movf	plusw1,w,c
 43210  016D0C  202A               	addwfc	btemp^0,w,c
 43211  016D0E  6E2A               	movwf	btemp^0,c
 43212  016D10  0EFC               	movlw	-4
 43213  016D12  0060  F0AB  FFE3   	movff	btemp,plusw1
 43214  016D18                     l10590:
 43215                           
 43216                           ;stkvar	_temp @ sp[(-13)+8]
 43217  016D18  0EFC               	movlw	-4
 43218  016D1A  BEE3               	btfsc	plusw1,7,c
 43219  016D1C  D020               	goto	l10594
 43220  016D1E  0EFC               	movlw	-4
 43221  016D20  50E3               	movf	plusw1,w,c
 43222  016D22  E104               	bnz	u8760
 43223  016D24  0EFB               	movlw	-5
 43224  016D26  28E3               	incf	plusw1,w,c
 43225  016D28  A0D8               	btfss	status,0,c
 43226  016D2A  D019               	goto	l10594
 43227  016D2C                     u8760:
 43228  016D2C  0E00               	movlw	0
 43229  016D2E  6E32               	movwf	(btemp+8)^0,c
 43230  016D30  0E00               	movlw	0
 43231  016D32  6E33               	movwf	(btemp+9)^0,c
 43232  016D34  0E80               	movlw	128
 43233  016D36  6E34               	movwf	(btemp+10)^0,c
 43234  016D38  0E7F               	movlw	127
 43235  016D3A  6E35               	movwf	(btemp+11)^0,c
 43236                           
 43237                           ;stkvar	_prod @ sp[(-13)+0]
 43238  016D3C  0EF3               	movlw	-13
 43239  016D3E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43240  016D44  0EF4               	movlw	-12
 43241  016D46  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43242  016D4C  0EF5               	movlw	-11
 43243  016D4E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43244  016D54  0EF6               	movlw	-10
 43245  016D56  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43246  016D5C  D044               	goto	l10610
 43247  016D5E                     l10594:
 43248                           
 43249                           ;stkvar	_temp @ sp[(-13)+8]
 43250  016D5E  0EFC               	movlw	-4
 43251  016D60  BEE3               	btfsc	plusw1,7,c
 43252  016D62  D007               	goto	u8770
 43253  016D64  0EFC               	movlw	-4
 43254  016D66  50E3               	movf	plusw1,w,c
 43255  016D68  E10F               	bnz	l10600
 43256  016D6A  0EFB               	movlw	-5
 43257  016D6C  04E3               	decf	plusw1,w,c
 43258  016D6E  B0D8               	btfsc	status,0,c
 43259  016D70  D00B               	goto	l10600
 43260  016D72                     u8770:
 43261                           
 43262                           ;stkvar	_prod @ sp[(-13)+0]
 43263  016D72  0EF3               	movlw	-13
 43264  016D74  6AE3               	clrf	plusw1,c
 43265  016D76  0EF4               	movlw	-12
 43266  016D78  6AE3               	clrf	plusw1,c
 43267  016D7A  0EF5               	movlw	-11
 43268  016D7C  6AE3               	clrf	plusw1,c
 43269  016D7E  0EF6               	movlw	-10
 43270  016D80  6AE3               	clrf	plusw1,c
 43271                           
 43272                           ;stkvar	_sign @ sp[(-13)+12]
 43273  016D82  0EFF               	movlw	-1
 43274  016D84  6AE3               	clrf	plusw1,c
 43275  016D86  D02F               	goto	l10610
 43276  016D88                     l10600:
 43277                           
 43278                           ;stkvar	_temp @ sp[(-13)+8]
 43279                           ;stkvar	_bexp @ sp[(-13)+10]
 43280  016D88  0EFB               	movlw	-5
 43281  016D8A  006F FF8C  F02A    	movff	plusw1,btemp
 43282  016D90  0EFD               	movlw	-3
 43283  016D92  0060  F0AB  FFE3   	movff	btemp,plusw1
 43284                           
 43285                           ;stkvar	_prod @ sp[(-13)+0]
 43286  016D98  50E1               	movf	fsr1l,w,c
 43287  016D9A  0FF3               	addlw	-13
 43288  016D9C  6ED9               	movwf	fsr2l,c
 43289  016D9E  50E2               	movf	fsr1h,w,c
 43290  016DA0  6EDA               	movwf	fsr2h,c
 43291  016DA2  0EFF               	movlw	255
 43292  016DA4  22DA               	addwfc	fsr2h,f,c
 43293  016DA6  0EFF               	movlw	255
 43294  016DA8  16DE               	andwf	postinc2,f,c
 43295  016DAA  0EFF               	movlw	255
 43296  016DAC  16DE               	andwf	postinc2,f,c
 43297  016DAE  0E7F               	movlw	127
 43298  016DB0  16DE               	andwf	postinc2,f,c
 43299  016DB2  0E00               	movlw	0
 43300  016DB4  16DE               	andwf	postinc2,f,c
 43301                           
 43302                           ;stkvar	_bexp @ sp[(-13)+10]
 43303  016DB6  0EFD               	movlw	-3
 43304  016DB8  A0E3               	btfss	plusw1,0,c
 43305  016DBA  D008               	goto	l10608
 43306                           
 43307                           ;stkvar	_prod @ sp[(-13)+0]
 43308  016DBC  0EF5               	movlw	245
 43309  016DBE  24E1               	addwf	fsr1l,w,c
 43310  016DC0  6ED9               	movwf	fsr2l,c
 43311  016DC2  0EFF               	movlw	255
 43312  016DC4  20E2               	addwfc	fsr1h,w,c
 43313  016DC6  6EDA               	movwf	fsr2h,c
 43314  016DC8  0E00               	movlw	0
 43315  016DCA  8EDB               	bsf	plusw2,7,c
 43316  016DCC                     l10608:
 43317                           
 43318                           ;stkvar	_prod @ sp[(-13)+0]
 43319  016DCC  0EF6               	movlw	246
 43320  016DCE  24E1               	addwf	fsr1l,w,c
 43321  016DD0  6ED9               	movwf	fsr2l,c
 43322  016DD2  0EFF               	movlw	255
 43323  016DD4  20E2               	addwfc	fsr1h,w,c
 43324  016DD6  6EDA               	movwf	fsr2h,c
 43325                           
 43326                           ;stkvar	_bexp @ sp[(-13)+10]
 43327  016DD8  0EFD               	movlw	-3
 43328  016DDA  006F FF8C  F035    	movff	plusw1,btemp+11
 43329  016DE0  90D8               	bcf	status,0,c
 43330  016DE2  3035               	rrcf	(btemp+11)^0,w,c
 43331  016DE4  6EDF               	movwf	indf2,c
 43332  016DE6                     l10610:
 43333                           
 43334                           ;stkvar	_sign @ sp[(-13)+12]
 43335  016DE6  0EFF               	movlw	-1
 43336  016DE8  006F FF8C  F035    	movff	plusw1,btemp+11
 43337                           
 43338                           ;stkvar	_prod @ sp[(-13)+0]
 43339  016DEE  0EF6               	movlw	246
 43340  016DF0  24E1               	addwf	fsr1l,w,c
 43341  016DF2  6ED9               	movwf	fsr2l,c
 43342  016DF4  0EFF               	movlw	255
 43343  016DF6  20E2               	addwfc	fsr1h,w,c
 43344  016DF8  6EDA               	movwf	fsr2h,c
 43345  016DFA  5035               	movf	(btemp+11)^0,w,c
 43346  016DFC  12DF               	iorwf	indf2,f,c
 43347                           
 43348                           ;stkvar	_prod @ sp[(-13)+0]
 43349  016DFE  0EF3               	movlw	-13
 43350  016E00  006F FF8C  F02A    	movff	plusw1,btemp
 43351  016E06  0EF4               	movlw	-12
 43352  016E08  006F FF8C  F02B    	movff	plusw1,btemp+1
 43353  016E0E  0EF5               	movlw	-11
 43354  016E10  006F FF8C  F02C    	movff	plusw1,btemp+2
 43355  016E16  0EF6               	movlw	-10
 43356  016E18  006F FF8C  F02D    	movff	plusw1,btemp+3
 43357  016E1E                     l3342:
 43358                           
 43359                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 43360  016E1E  0EEB               	movlw	235
 43361  016E20  26E1               	addwf	fsr1l,f,c
 43362  016E22  0EFF               	movlw	255
 43363  016E24  22E2               	addwfc	fsr1h,f,c
 43364  016E26  0012               	return		;funcret
 43365  016E28                     __end_of___flmul:
 43366                           	opt callstack 0
 43367                           
 43368 ;; *************** function _SYSTEM_Initialize *****************
 43369 ;; Defined at:
 43370 ;;		line 50 in file "mcc_generated_files/mcc.c"
 43371 ;; Parameters:    Size  Location     Type
 43372 ;;		None
 43373 ;; Auto vars:     Size  Location     Type
 43374 ;;		None
 43375 ;; Return value:  Size  Location     Type
 43376 ;;                  1  [STACK] void 
 43377 ;; Registers used:
 43378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 43379 ;; Tracked objects:
 43380 ;;		On entry : 0/0
 43381 ;;		On exit  : 3F/3C
 43382 ;;		Unchanged: 0/0
 43383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43388 ;;Total ram usage:        0 bytes
 43389 ;; Hardware stack levels used:    1
 43390 ;; Hardware stack levels required when called:   17
 43391 ;; This function calls:
 43392 ;;		_ADCC_Initialize
 43393 ;;		_CLKREF_Initialize
 43394 ;;		_CRC_Initialize
 43395 ;;		_DMA1_Initialize
 43396 ;;		_DMA2_Initialize
 43397 ;;		_EXT_INT_Initialize
 43398 ;;		_FVR_Initialize
 43399 ;;		_INTERRUPT_Initialize
 43400 ;;		_OSCILLATOR_Initialize
 43401 ;;		_PIN_MANAGER_Initialize
 43402 ;;		_PMD_Initialize
 43403 ;;		_PWM8_Initialize
 43404 ;;		_SPI1_Initialize
 43405 ;;		_TMR2_Initialize
 43406 ;;		_TMR3_Initialize
 43407 ;;		_TMR5_Initialize
 43408 ;;		_TMR6_Initialize
 43409 ;;		_UART1_Initialize
 43410 ;;		_UART2_Initialize
 43411 ;; This function is called by:
 43412 ;;		_main
 43413 ;; This function uses a reentrant model
 43414 ;;
 43415                           
 43416                           	psect	text155
 43417  001BE0                     __ptext155:
 43418                           	opt callstack 0
 43419  001BE0                     _SYSTEM_Initialize:
 43420                           	opt callstack 13
 43421                           
 43422                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 43423                           
 43424                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43425                           ;incstack = 0
 43426  001BE0  EC94  F00B         	call	_INTERRUPT_Initialize	;wreg free
 43427                           
 43428                           ; BSR set to: 57
 43429                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 43430  001BE4  EC99  F014         	call	_PMD_Initialize	;wreg free
 43431                           
 43432                           ; BSR set to: 57
 43433                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 43434  001BE8  ECC2  F007         	call	_PIN_MANAGER_Initialize	;wreg free
 43435                           
 43436                           ; BSR set to: 58
 43437                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 43438  001BEC  EC8E  F014         	call	_OSCILLATOR_Initialize	;wreg free
 43439                           
 43440                           ; BSR set to: 57
 43441                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 43442  001BF0  EC35  F015         	call	_FVR_Initialize	;wreg free
 43443                           
 43444                           ; BSR set to: 62
 43445                           ;mcc_generated_files/mcc.c: 57:     CRC_Initialize();
 43446  001BF4  EC0B  F008         	call	_CRC_Initialize	;wreg free
 43447                           
 43448                           ; BSR set to: 0
 43449                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 43450  001BF8  ECC2  F00A         	call	_ADCC_Initialize	;wreg free
 43451                           
 43452                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 43453  001BFC  EC61  F014         	call	_TMR2_Initialize	;wreg free
 43454                           
 43455                           ; BSR set to: 57
 43456                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 43457  001C00  EC83  F014         	call	_PWM8_Initialize	;wreg free
 43458                           
 43459                           ; BSR set to: 63
 43460                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
 43461  001C04  EC12  F011         	call	_EXT_INT_Initialize	;wreg free
 43462                           
 43463                           ; BSR set to: 57
 43464                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
 43465  001C08  ECFE  F011         	call	_TMR6_Initialize	;wreg free
 43466                           
 43467                           ;mcc_generated_files/mcc.c: 63:     TMR3_Initialize();
 43468  001C0C  ECAA  F00E         	call	_TMR3_Initialize	;wreg free
 43469                           
 43470                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
 43471  001C10  EC86  F00E         	call	_TMR5_Initialize	;wreg free
 43472                           
 43473                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 43474  001C14  EC62  F00E         	call	_UART1_Initialize	;wreg free
 43475                           
 43476                           ; BSR set to: 57
 43477                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 43478  001C18  EC8D  F00C         	call	_UART2_Initialize	;wreg free
 43479                           
 43480                           ; BSR set to: 57
 43481                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 43482  001C1C  EC78  F014         	call	_SPI1_Initialize	;wreg free
 43483                           
 43484                           ; BSR set to: 61
 43485                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 43486  001C20  EC46  F00D         	call	_DMA2_Initialize	;wreg free
 43487                           
 43488                           ; BSR set to: 59
 43489                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 43490  001C24  EC8D  F00A         	call	_DMA1_Initialize	;wreg free
 43491                           
 43492                           ; BSR set to: 59
 43493                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 43494  001C28  EC09  F015         	call	_CLKREF_Initialize	;wreg free
 43495                           
 43496                           ; BSR set to: 60
 43497                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 43498  001C2C  0012               	return		;funcret
 43499  001C2E                     __end_of_SYSTEM_Initialize:
 43500                           	opt callstack 0
 43501                           
 43502 ;; *************** function _UART2_Initialize *****************
 43503 ;; Defined at:
 43504 ;;		line 78 in file "mcc_generated_files/uart2.c"
 43505 ;; Parameters:    Size  Location     Type
 43506 ;;		None
 43507 ;; Auto vars:     Size  Location     Type
 43508 ;;		None
 43509 ;; Return value:  Size  Location     Type
 43510 ;;                  1  [STACK] void 
 43511 ;; Registers used:
 43512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 43513 ;; Tracked objects:
 43514 ;;		On entry : 3F/39
 43515 ;;		On exit  : 3F/39
 43516 ;;		Unchanged: 0/0
 43517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43522 ;;Total ram usage:        0 bytes
 43523 ;; Hardware stack levels used:    1
 43524 ;; Hardware stack levels required when called:   16
 43525 ;; This function calls:
 43526 ;;		_UART2_SetRxInterruptHandler
 43527 ;;		_UART2_SetTxInterruptHandler
 43528 ;; This function is called by:
 43529 ;;		_SYSTEM_Initialize
 43530 ;; This function uses a reentrant model
 43531 ;;
 43532                           
 43533                           	psect	text156
 43534  00191A                     __ptext156:
 43535                           	opt callstack 0
 43536  00191A                     _UART2_Initialize:
 43537                           	opt callstack 13
 43538                           
 43539                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 43540                           
 43541                           ; BSR set to: 60
 43542                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43543                           ;incstack = 0
 43544  00191A  0139               	movlb	57	; () banked
 43545  00191C  9596               	bcf	150,2,b	;volatile
 43546                           
 43547                           ; BSR set to: 57
 43548                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 43549  00191E  0EDE               	movlw	low _UART2_Receive_ISR
 43550  001920  6EE6               	movwf	postinc1,c
 43551  001922  0E27               	movlw	high _UART2_Receive_ISR
 43552  001924  6EE6               	movwf	postinc1,c
 43553  001926  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 43554  001928  6EE6               	movwf	postinc1,c
 43555  00192A  EC4F  F012         	call	_UART2_SetRxInterruptHandler	;wreg free
 43556                           
 43557                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 43558  00192E  0139               	movlb	57	; () banked
 43559  001930  9796               	bcf	150,3,b	;volatile
 43560                           
 43561                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 43562  001932  0ED0               	movlw	low _UART2_Transmit_ISR
 43563  001934  6EE6               	movwf	postinc1,c
 43564  001936  0E23               	movlw	high _UART2_Transmit_ISR
 43565  001938  6EE6               	movwf	postinc1,c
 43566  00193A  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 43567  00193C  6EE6               	movwf	postinc1,c
 43568  00193E  EC3B  F012         	call	_UART2_SetTxInterruptHandler	;wreg free
 43569                           
 43570                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 43571  001942  013D               	movlb	61	; () banked
 43572  001944  6BD4               	clrf	212,b	;volatile
 43573                           
 43574                           ; BSR set to: 61
 43575                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 43576  001946  6BD6               	clrf	214,b	;volatile
 43577                           
 43578                           ; BSR set to: 61
 43579                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 43580  001948  6BD8               	clrf	216,b	;volatile
 43581                           
 43582                           ; BSR set to: 61
 43583                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 43584  00194A  0EB0               	movlw	176
 43585  00194C  6FDA               	movwf	218,b	;volatile
 43586                           
 43587                           ; BSR set to: 61
 43588                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 43589  00194E  0E80               	movlw	128
 43590  001950  6FDB               	movwf	219,b	;volatile
 43591                           
 43592                           ; BSR set to: 61
 43593                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 43594  001952  6BDC               	clrf	220,b	;volatile
 43595                           
 43596                           ; BSR set to: 61
 43597                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 43598  001954  0E82               	movlw	130
 43599  001956  6FDD               	movwf	221,b	;volatile
 43600                           
 43601                           ; BSR set to: 61
 43602                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 43603  001958  0E06               	movlw	6
 43604  00195A  6FDE               	movwf	222,b	;volatile
 43605                           
 43606                           ; BSR set to: 61
 43607                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 43608  00195C  6BDF               	clrf	223,b	;volatile
 43609                           
 43610                           ; BSR set to: 61
 43611                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 43612  00195E  6BE0               	clrf	224,b	;volatile
 43613                           
 43614                           ; BSR set to: 61
 43615                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 43616  001960  6BE1               	clrf	225,b	;volatile
 43617                           
 43618                           ; BSR set to: 61
 43619                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 43620  001962  6BE2               	clrf	226,b	;volatile
 43621                           
 43622                           ; BSR set to: 61
 43623                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 43624  001964  0100               	movlb	0	; () banked
 43625  001966  6BCF               	clrf	_uart2TxHead& (0+255),b	;volatile
 43626                           
 43627                           ; BSR set to: 0
 43628                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 43629  001968  6A56               	clrf	_uart2TxTail^0,c	;volatile
 43630                           
 43631                           ; BSR set to: 0
 43632                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 43633  00196A  0E40               	movlw	64
 43634  00196C  6E55               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 43635                           
 43636                           ; BSR set to: 0
 43637                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 43638  00196E  6A54               	clrf	_uart2RxHead^0,c	;volatile
 43639                           
 43640                           ; BSR set to: 0
 43641                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 43642  001970  6BCE               	clrf	_uart2RxTail& (0+255),b	;volatile
 43643                           
 43644                           ; BSR set to: 0
 43645                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 43646  001972  6BCD               	clrf	_uart2RxCount& (0+255),b	;volatile
 43647                           
 43648                           ; BSR set to: 0
 43649                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 43650  001974  0139               	movlb	57	; () banked
 43651  001976  8596               	bsf	150,2,b	;volatile
 43652                           
 43653                           ; BSR set to: 57
 43654                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 43655  001978  0012               	return		;funcret
 43656  00197A                     __end_of_UART2_Initialize:
 43657                           	opt callstack 0
 43658                           
 43659 ;; *************** function _UART2_SetTxInterruptHandler *****************
 43660 ;; Defined at:
 43661 ;;		line 252 in file "mcc_generated_files/uart2.c"
 43662 ;; Parameters:    Size  Location     Type
 43663 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43664 ;;		 -> UART2_Transmit_ISR(1), 
 43665 ;; Auto vars:     Size  Location     Type
 43666 ;;		None
 43667 ;; Return value:  Size  Location     Type
 43668 ;;                  1  [STACK] void 
 43669 ;; Registers used:
 43670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43671 ;; Tracked objects:
 43672 ;;		On entry : 3F/39
 43673 ;;		On exit  : 0/0
 43674 ;;		Unchanged: 0/0
 43675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43680 ;;Total ram usage:        0 bytes
 43681 ;; Hardware stack levels used:    1
 43682 ;; Hardware stack levels required when called:   15
 43683 ;; This function calls:
 43684 ;;		Nothing
 43685 ;; This function is called by:
 43686 ;;		_UART2_Initialize
 43687 ;; This function uses a reentrant model
 43688 ;;
 43689                           
 43690                           	psect	text157
 43691  002476                     __ptext157:
 43692                           	opt callstack 0
 43693  002476                     _UART2_SetTxInterruptHandler:
 43694                           	opt callstack 13
 43695                           
 43696                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 43697                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43698                           
 43699                           ; BSR set to: 57
 43700                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43701                           ;incstack = 0
 43702  002476  50E1               	movf	fsr1l,w,c
 43703  002478  0FFD               	addlw	-3
 43704  00247A  6ED9               	movwf	fsr2l,c
 43705  00247C  50E2               	movf	fsr1h,w,c
 43706  00247E  6EDA               	movwf	fsr2h,c
 43707  002480  0EFF               	movlw	255
 43708  002482  22DA               	addwfc	fsr2h,f,c
 43709  002484  006F FF78  F0AA    	movff	postinc2,_UART2_TxInterruptHandler
 43710  00248A  006F FF78  F0AB    	movff	postinc2,_UART2_TxInterruptHandler+1
 43711  002490  006F FF74  F0AC    	movff	postdec2,_UART2_TxInterruptHandler+2
 43712                           
 43713                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 43714  002496  52E5               	movf	postdec1,f,c
 43715  002498  52E5               	movf	postdec1,f,c
 43716  00249A  52E5               	movf	postdec1,f,c
 43717  00249C  0012               	return		;funcret
 43718  00249E                     __end_of_UART2_SetTxInterruptHandler:
 43719                           	opt callstack 0
 43720                           
 43721 ;; *************** function _UART2_SetRxInterruptHandler *****************
 43722 ;; Defined at:
 43723 ;;		line 248 in file "mcc_generated_files/uart2.c"
 43724 ;; Parameters:    Size  Location     Type
 43725 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43726 ;;		 -> UART2_Receive_ISR(1), 
 43727 ;; Auto vars:     Size  Location     Type
 43728 ;;		None
 43729 ;; Return value:  Size  Location     Type
 43730 ;;                  1  [STACK] void 
 43731 ;; Registers used:
 43732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43733 ;; Tracked objects:
 43734 ;;		On entry : 3F/39
 43735 ;;		On exit  : 0/0
 43736 ;;		Unchanged: 0/0
 43737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43742 ;;Total ram usage:        0 bytes
 43743 ;; Hardware stack levels used:    1
 43744 ;; Hardware stack levels required when called:   15
 43745 ;; This function calls:
 43746 ;;		Nothing
 43747 ;; This function is called by:
 43748 ;;		_UART2_Initialize
 43749 ;; This function uses a reentrant model
 43750 ;;
 43751                           
 43752                           	psect	text158
 43753  00249E                     __ptext158:
 43754                           	opt callstack 0
 43755  00249E                     _UART2_SetRxInterruptHandler:
 43756                           	opt callstack 13
 43757                           
 43758                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 43759                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43760                           
 43761                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43762                           ;incstack = 0
 43763  00249E  50E1               	movf	fsr1l,w,c
 43764  0024A0  0FFD               	addlw	-3
 43765  0024A2  6ED9               	movwf	fsr2l,c
 43766  0024A4  50E2               	movf	fsr1h,w,c
 43767  0024A6  6EDA               	movwf	fsr2h,c
 43768  0024A8  0EFF               	movlw	255
 43769  0024AA  22DA               	addwfc	fsr2h,f,c
 43770  0024AC  006F FF78  F0AD    	movff	postinc2,_UART2_RxInterruptHandler
 43771  0024B2  006F FF78  F0AE    	movff	postinc2,_UART2_RxInterruptHandler+1
 43772  0024B8  006F FF74  F0AF    	movff	postdec2,_UART2_RxInterruptHandler+2
 43773                           
 43774                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 43775  0024BE  52E5               	movf	postdec1,f,c
 43776  0024C0  52E5               	movf	postdec1,f,c
 43777  0024C2  52E5               	movf	postdec1,f,c
 43778  0024C4  0012               	return		;funcret
 43779  0024C6                     __end_of_UART2_SetRxInterruptHandler:
 43780                           	opt callstack 0
 43781                           
 43782 ;; *************** function _UART1_Initialize *****************
 43783 ;; Defined at:
 43784 ;;		line 75 in file "mcc_generated_files/uart1.c"
 43785 ;; Parameters:    Size  Location     Type
 43786 ;;		None
 43787 ;; Auto vars:     Size  Location     Type
 43788 ;;		None
 43789 ;; Return value:  Size  Location     Type
 43790 ;;                  1  [STACK] void 
 43791 ;; Registers used:
 43792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 43793 ;; Tracked objects:
 43794 ;;		On entry : 0/39
 43795 ;;		On exit  : 3F/39
 43796 ;;		Unchanged: 0/0
 43797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43802 ;;Total ram usage:        0 bytes
 43803 ;; Hardware stack levels used:    1
 43804 ;; Hardware stack levels required when called:   16
 43805 ;; This function calls:
 43806 ;;		_UART1_SetRxInterruptHandler
 43807 ;; This function is called by:
 43808 ;;		_SYSTEM_Initialize
 43809 ;; This function uses a reentrant model
 43810 ;;
 43811                           
 43812                           	psect	text159
 43813  001CC4                     __ptext159:
 43814                           	opt callstack 0
 43815  001CC4                     _UART1_Initialize:
 43816                           	opt callstack 13
 43817                           
 43818                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 43819                           
 43820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43821                           ;incstack = 0
 43822  001CC4  0139               	movlb	57	; () banked
 43823  001CC6  9793               	bcf	147,3,b	;volatile
 43824                           
 43825                           ; BSR set to: 57
 43826                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 43827  001CC8  0E9C               	movlw	low _UART1_Receive_ISR
 43828  001CCA  6EE6               	movwf	postinc1,c
 43829  001CCC  0E27               	movlw	high _UART1_Receive_ISR
 43830  001CCE  6EE6               	movwf	postinc1,c
 43831  001CD0  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 43832  001CD2  6EE6               	movwf	postinc1,c
 43833  001CD4  EC63  F012         	call	_UART1_SetRxInterruptHandler	;wreg free
 43834                           
 43835                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 43836  001CD8  013D               	movlb	61	; () banked
 43837  001CDA  6BEC               	clrf	236,b	;volatile
 43838                           
 43839                           ; BSR set to: 61
 43840                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 43841  001CDC  6BED               	clrf	237,b	;volatile
 43842                           
 43843                           ; BSR set to: 61
 43844                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 43845  001CDE  6BEE               	clrf	238,b	;volatile
 43846                           
 43847                           ; BSR set to: 61
 43848                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 43849  001CE0  6BEF               	clrf	239,b	;volatile
 43850                           
 43851                           ; BSR set to: 61
 43852                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 43853  001CE2  6BF0               	clrf	240,b	;volatile
 43854                           
 43855                           ; BSR set to: 61
 43856                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 43857  001CE4  6BF1               	clrf	241,b	;volatile
 43858                           
 43859                           ; BSR set to: 61
 43860                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 43861  001CE6  0EB0               	movlw	176
 43862  001CE8  6FF2               	movwf	242,b	;volatile
 43863                           
 43864                           ; BSR set to: 61
 43865                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 43866  001CEA  0E80               	movlw	128
 43867  001CEC  6FF3               	movwf	243,b	;volatile
 43868                           
 43869                           ; BSR set to: 61
 43870                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 43871  001CEE  6BF4               	clrf	244,b	;volatile
 43872                           
 43873                           ; BSR set to: 61
 43874                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 43875  001CF0  0E8A               	movlw	138
 43876  001CF2  6FF5               	movwf	245,b	;volatile
 43877                           
 43878                           ; BSR set to: 61
 43879                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 43880  001CF4  6BF6               	clrf	246,b	;volatile
 43881                           
 43882                           ; BSR set to: 61
 43883                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 43884  001CF6  6BF7               	clrf	247,b	;volatile
 43885                           
 43886                           ; BSR set to: 61
 43887                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 43888  001CF8  6BF8               	clrf	248,b	;volatile
 43889                           
 43890                           ; BSR set to: 61
 43891                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 43892  001CFA  6BF9               	clrf	249,b	;volatile
 43893                           
 43894                           ; BSR set to: 61
 43895                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 43896  001CFC  6BFA               	clrf	250,b	;volatile
 43897                           
 43898                           ; BSR set to: 61
 43899                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 43900  001CFE  6A57               	clrf	_uart1RxHead^0,c	;volatile
 43901                           
 43902                           ; BSR set to: 61
 43903                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 43904  001D00  0100               	movlb	0	; () banked
 43905  001D02  6BD1               	clrf	_uart1RxTail& (0+255),b	;volatile
 43906                           
 43907                           ; BSR set to: 0
 43908                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 43909  001D04  6BD0               	clrf	_uart1RxCount& (0+255),b	;volatile
 43910                           
 43911                           ; BSR set to: 0
 43912                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 43913  001D06  0139               	movlb	57	; () banked
 43914  001D08  8793               	bsf	147,3,b	;volatile
 43915                           
 43916                           ; BSR set to: 57
 43917                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 43918  001D0A  0012               	return		;funcret
 43919  001D0C                     __end_of_UART1_Initialize:
 43920                           	opt callstack 0
 43921                           
 43922 ;; *************** function _UART1_SetRxInterruptHandler *****************
 43923 ;; Defined at:
 43924 ;;		line 207 in file "mcc_generated_files/uart1.c"
 43925 ;; Parameters:    Size  Location     Type
 43926 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43927 ;;		 -> UART1_Receive_ISR(1), 
 43928 ;; Auto vars:     Size  Location     Type
 43929 ;;		None
 43930 ;; Return value:  Size  Location     Type
 43931 ;;                  1  [STACK] void 
 43932 ;; Registers used:
 43933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43934 ;; Tracked objects:
 43935 ;;		On entry : 3F/39
 43936 ;;		On exit  : 0/0
 43937 ;;		Unchanged: 0/0
 43938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43943 ;;Total ram usage:        0 bytes
 43944 ;; Hardware stack levels used:    1
 43945 ;; Hardware stack levels required when called:   15
 43946 ;; This function calls:
 43947 ;;		Nothing
 43948 ;; This function is called by:
 43949 ;;		_UART1_Initialize
 43950 ;; This function uses a reentrant model
 43951 ;;
 43952                           
 43953                           	psect	text160
 43954  0024C6                     __ptext160:
 43955                           	opt callstack 0
 43956  0024C6                     _UART1_SetRxInterruptHandler:
 43957                           	opt callstack 13
 43958                           
 43959                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 43960                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43961                           
 43962                           ; BSR set to: 57
 43963                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43964                           ;incstack = 0
 43965  0024C6  50E1               	movf	fsr1l,w,c
 43966  0024C8  0FFD               	addlw	-3
 43967  0024CA  6ED9               	movwf	fsr2l,c
 43968  0024CC  50E2               	movf	fsr1h,w,c
 43969  0024CE  6EDA               	movwf	fsr2h,c
 43970  0024D0  0EFF               	movlw	255
 43971  0024D2  22DA               	addwfc	fsr2h,f,c
 43972  0024D4  006F FF78  F0A7    	movff	postinc2,_UART1_RxInterruptHandler
 43973  0024DA  006F FF78  F0A8    	movff	postinc2,_UART1_RxInterruptHandler+1
 43974  0024E0  006F FF74  F0A9    	movff	postdec2,_UART1_RxInterruptHandler+2
 43975                           
 43976                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 43977  0024E6  52E5               	movf	postdec1,f,c
 43978  0024E8  52E5               	movf	postdec1,f,c
 43979  0024EA  52E5               	movf	postdec1,f,c
 43980  0024EC  0012               	return		;funcret
 43981  0024EE                     __end_of_UART1_SetRxInterruptHandler:
 43982                           	opt callstack 0
 43983                           
 43984 ;; *************** function _TMR6_Initialize *****************
 43985 ;; Defined at:
 43986 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 43987 ;; Parameters:    Size  Location     Type
 43988 ;;		None
 43989 ;; Auto vars:     Size  Location     Type
 43990 ;;		None
 43991 ;; Return value:  Size  Location     Type
 43992 ;;                  1  [STACK] void 
 43993 ;; Registers used:
 43994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 43995 ;; Tracked objects:
 43996 ;;		On entry : 3F/39
 43997 ;;		On exit  : 0/0
 43998 ;;		Unchanged: 0/0
 43999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44004 ;;Total ram usage:        0 bytes
 44005 ;; Hardware stack levels used:    1
 44006 ;; Hardware stack levels required when called:   16
 44007 ;; This function calls:
 44008 ;;		_TMR6_SetInterruptHandler
 44009 ;; This function is called by:
 44010 ;;		_SYSTEM_Initialize
 44011 ;; This function uses a reentrant model
 44012 ;;
 44013                           
 44014                           	psect	text161
 44015  0023FC                     __ptext161:
 44016                           	opt callstack 0
 44017  0023FC                     _TMR6_Initialize:
 44018                           	opt callstack 13
 44019                           
 44020                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 44021                           
 44022                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44023                           ;incstack = 0
 44024  0023FC  0E01               	movlw	1
 44025  0023FE  6E96               	movwf	150,c	;volatile
 44026                           
 44027                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 44028  002400  6A95               	clrf	149,c	;volatile
 44029                           
 44030                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 44031  002402  6A97               	clrf	151,c	;volatile
 44032                           
 44033                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 44034  002404  0E7C               	movlw	124
 44035  002406  6E93               	movwf	147,c	;volatile
 44036                           
 44037                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 44038  002408  6A92               	clrf	146,c	;volatile
 44039                           
 44040                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 44041  00240A  0139               	movlb	57	; () banked
 44042  00240C  91A9               	bcf	169,0,b	;volatile
 44043                           
 44044                           ; BSR set to: 57
 44045                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 44046  00240E  8199               	bsf	153,0,b	;volatile
 44047                           
 44048                           ; BSR set to: 57
 44049                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 44050  002410  0E2E               	movlw	low _TMR6_DefaultInterruptHandler
 44051  002412  6EE6               	movwf	postinc1,c
 44052  002414  0E1C               	movlw	high _TMR6_DefaultInterruptHandler
 44053  002416  6EE6               	movwf	postinc1,c
 44054  002418  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 44055  00241A  6EE6               	movwf	postinc1,c
 44056  00241C  EC77  F012         	call	_TMR6_SetInterruptHandler	;wreg free
 44057                           
 44058                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 44059  002420  0EE0               	movlw	224
 44060  002422  6E94               	movwf	148,c	;volatile
 44061                           
 44062                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44063  002424  0012               	return		;funcret
 44064  002426                     __end_of_TMR6_Initialize:
 44065                           	opt callstack 0
 44066                           
 44067 ;; *************** function _TMR6_SetInterruptHandler *****************
 44068 ;; Defined at:
 44069 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 44070 ;; Parameters:    Size  Location     Type
 44071 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44072 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 44073 ;; Auto vars:     Size  Location     Type
 44074 ;;		None
 44075 ;; Return value:  Size  Location     Type
 44076 ;;                  1  [STACK] void 
 44077 ;; Registers used:
 44078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44079 ;; Tracked objects:
 44080 ;;		On entry : 3F/39
 44081 ;;		On exit  : 0/0
 44082 ;;		Unchanged: 0/0
 44083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44088 ;;Total ram usage:        0 bytes
 44089 ;; Hardware stack levels used:    1
 44090 ;; Hardware stack levels required when called:   15
 44091 ;; This function calls:
 44092 ;;		Nothing
 44093 ;; This function is called by:
 44094 ;;		_TMR6_Initialize
 44095 ;; This function uses a reentrant model
 44096 ;;
 44097                           
 44098                           	psect	text162
 44099  0024EE                     __ptext162:
 44100                           	opt callstack 0
 44101  0024EE                     _TMR6_SetInterruptHandler:
 44102                           	opt callstack 13
 44103                           
 44104                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 44105                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44106                           
 44107                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44108                           ;incstack = 0
 44109  0024EE  50E1               	movf	fsr1l,w,c
 44110  0024F0  0FFD               	addlw	-3
 44111  0024F2  6ED9               	movwf	fsr2l,c
 44112  0024F4  50E2               	movf	fsr1h,w,c
 44113  0024F6  6EDA               	movwf	fsr2h,c
 44114  0024F8  0EFF               	movlw	255
 44115  0024FA  22DA               	addwfc	fsr2h,f,c
 44116  0024FC  006F FF78  F09E    	movff	postinc2,_TMR6_InterruptHandler
 44117  002502  006F FF78  F09F    	movff	postinc2,_TMR6_InterruptHandler+1
 44118  002508  006F FF74  F0A0    	movff	postdec2,_TMR6_InterruptHandler+2
 44119                           
 44120                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44121  00250E  52E5               	movf	postdec1,f,c
 44122  002510  52E5               	movf	postdec1,f,c
 44123  002512  52E5               	movf	postdec1,f,c
 44124  002514  0012               	return		;funcret
 44125  002516                     __end_of_TMR6_SetInterruptHandler:
 44126                           	opt callstack 0
 44127                           
 44128 ;; *************** function _TMR5_Initialize *****************
 44129 ;; Defined at:
 44130 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 44131 ;; Parameters:    Size  Location     Type
 44132 ;;		None
 44133 ;; Auto vars:     Size  Location     Type
 44134 ;;		None
 44135 ;; Return value:  Size  Location     Type
 44136 ;;                  1  [STACK] void 
 44137 ;; Registers used:
 44138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 44139 ;; Tracked objects:
 44140 ;;		On entry : 0/39
 44141 ;;		On exit  : 0/0
 44142 ;;		Unchanged: 0/0
 44143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44148 ;;Total ram usage:        0 bytes
 44149 ;; Hardware stack levels used:    1
 44150 ;; Hardware stack levels required when called:   16
 44151 ;; This function calls:
 44152 ;;		_TMR5_SetInterruptHandler
 44153 ;; This function is called by:
 44154 ;;		_SYSTEM_Initialize
 44155 ;; This function uses a reentrant model
 44156 ;;
 44157                           
 44158                           	psect	text163
 44159  001D0C                     __ptext163:
 44160                           	opt callstack 0
 44161  001D0C                     _TMR5_Initialize:
 44162                           	opt callstack 13
 44163                           
 44164                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 44165                           
 44166                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44167                           ;incstack = 0
 44168  001D0C  6A9B               	clrf	155,c	;volatile
 44169                           
 44170                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 44171  001D0E  6A9C               	clrf	156,c	;volatile
 44172                           
 44173                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 44174  001D10  0E01               	movlw	1
 44175  001D12  6E9D               	movwf	157,c	;volatile
 44176                           
 44177                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 44178  001D14  0E63               	movlw	99
 44179  001D16  6E99               	movwf	153,c	;volatile
 44180                           
 44181                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 44182  001D18  0EC0               	movlw	192
 44183  001D1A  6E98               	movwf	152,c	;volatile
 44184                           
 44185                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 44186  001D1C  5098               	movf	152,w,c	;volatile
 44187  001D1E  006F FE64  F02A    	movff	16281,btemp	;volatile
 44188  001D24  6A2B               	clrf	(btemp+1)^0,c
 44189  001D26  0060  F0A8  F02B   	movff	btemp,btemp+1
 44190  001D2C  6A2A               	clrf	btemp^0,c
 44191  001D2E  102A               	iorwf	btemp^0,w,c
 44192  001D30  0100               	movlb	0	; () banked
 44193  001D32  6FC4               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 44194  001D34  502B               	movf	(btemp+1)^0,w,c
 44195  001D36  6FC5               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 44196                           
 44197                           ; BSR set to: 0
 44198                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 44199  001D38  0139               	movlb	57	; () banked
 44200  001D3A  9DA8               	bcf	168,6,b	;volatile
 44201                           
 44202                           ; BSR set to: 57
 44203                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 44204  001D3C  8D98               	bsf	152,6,b	;volatile
 44205                           
 44206                           ; BSR set to: 57
 44207                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 44208  001D3E  0EE4               	movlw	low _TMR5_DefaultInterruptHandler
 44209  001D40  6EE6               	movwf	postinc1,c
 44210  001D42  0E20               	movlw	high _TMR5_DefaultInterruptHandler
 44211  001D44  6EE6               	movwf	postinc1,c
 44212  001D46  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 44213  001D48  6EE6               	movwf	postinc1,c
 44214  001D4A  EC8B  F012         	call	_TMR5_SetInterruptHandler	;wreg free
 44215                           
 44216                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 44217  001D4E  0E31               	movlw	49
 44218  001D50  6E9A               	movwf	154,c	;volatile
 44219                           
 44220                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44221  001D52  0012               	return		;funcret
 44222  001D54                     __end_of_TMR5_Initialize:
 44223                           	opt callstack 0
 44224                           
 44225 ;; *************** function _TMR5_SetInterruptHandler *****************
 44226 ;; Defined at:
 44227 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 44228 ;; Parameters:    Size  Location     Type
 44229 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44230 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 44231 ;; Auto vars:     Size  Location     Type
 44232 ;;		None
 44233 ;; Return value:  Size  Location     Type
 44234 ;;                  1  [STACK] void 
 44235 ;; Registers used:
 44236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44237 ;; Tracked objects:
 44238 ;;		On entry : 3F/39
 44239 ;;		On exit  : 0/0
 44240 ;;		Unchanged: 0/0
 44241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44246 ;;Total ram usage:        0 bytes
 44247 ;; Hardware stack levels used:    1
 44248 ;; Hardware stack levels required when called:   15
 44249 ;; This function calls:
 44250 ;;		Nothing
 44251 ;; This function is called by:
 44252 ;;		_TMR5_Initialize
 44253 ;; This function uses a reentrant model
 44254 ;;
 44255                           
 44256                           	psect	text164
 44257  002516                     __ptext164:
 44258                           	opt callstack 0
 44259  002516                     _TMR5_SetInterruptHandler:
 44260                           	opt callstack 13
 44261                           
 44262                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 44263                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44264                           
 44265                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44266                           ;incstack = 0
 44267  002516  50E1               	movf	fsr1l,w,c
 44268  002518  0FFD               	addlw	-3
 44269  00251A  6ED9               	movwf	fsr2l,c
 44270  00251C  50E2               	movf	fsr1h,w,c
 44271  00251E  6EDA               	movwf	fsr2h,c
 44272  002520  0EFF               	movlw	255
 44273  002522  22DA               	addwfc	fsr2h,f,c
 44274  002524  006F FF78  F09B    	movff	postinc2,_TMR5_InterruptHandler
 44275  00252A  006F FF78  F09C    	movff	postinc2,_TMR5_InterruptHandler+1
 44276  002530  006F FF74  F09D    	movff	postdec2,_TMR5_InterruptHandler+2
 44277                           
 44278                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44279  002536  52E5               	movf	postdec1,f,c
 44280  002538  52E5               	movf	postdec1,f,c
 44281  00253A  52E5               	movf	postdec1,f,c
 44282  00253C  0012               	return		;funcret
 44283  00253E                     __end_of_TMR5_SetInterruptHandler:
 44284                           	opt callstack 0
 44285                           
 44286 ;; *************** function _TMR3_Initialize *****************
 44287 ;; Defined at:
 44288 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 44289 ;; Parameters:    Size  Location     Type
 44290 ;;		None
 44291 ;; Auto vars:     Size  Location     Type
 44292 ;;		None
 44293 ;; Return value:  Size  Location     Type
 44294 ;;                  1  [STACK] void 
 44295 ;; Registers used:
 44296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 44297 ;; Tracked objects:
 44298 ;;		On entry : 0/39
 44299 ;;		On exit  : 0/0
 44300 ;;		Unchanged: 0/0
 44301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44306 ;;Total ram usage:        0 bytes
 44307 ;; Hardware stack levels used:    1
 44308 ;; Hardware stack levels required when called:   16
 44309 ;; This function calls:
 44310 ;;		_TMR3_SetInterruptHandler
 44311 ;; This function is called by:
 44312 ;;		_SYSTEM_Initialize
 44313 ;; This function uses a reentrant model
 44314 ;;
 44315                           
 44316                           	psect	text165
 44317  001D54                     __ptext165:
 44318                           	opt callstack 0
 44319  001D54                     _TMR3_Initialize:
 44320                           	opt callstack 13
 44321                           
 44322                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 44323                           
 44324                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44325                           ;incstack = 0
 44326  001D54  6AA7               	clrf	167,c	;volatile
 44327                           
 44328                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 44329  001D56  6AA8               	clrf	168,c	;volatile
 44330                           
 44331                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 44332  001D58  0E01               	movlw	1
 44333  001D5A  6EA9               	movwf	169,c	;volatile
 44334                           
 44335                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 44336  001D5C  0E3C               	movlw	60
 44337  001D5E  6EA5               	movwf	165,c	;volatile
 44338                           
 44339                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 44340  001D60  0EB0               	movlw	176
 44341  001D62  6EA4               	movwf	164,c	;volatile
 44342                           
 44343                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 44344  001D64  50A4               	movf	164,w,c	;volatile
 44345  001D66  006F FE94  F02A    	movff	16293,btemp	;volatile
 44346  001D6C  6A2B               	clrf	(btemp+1)^0,c
 44347  001D6E  0060  F0A8  F02B   	movff	btemp,btemp+1
 44348  001D74  6A2A               	clrf	btemp^0,c
 44349  001D76  102A               	iorwf	btemp^0,w,c
 44350  001D78  0100               	movlb	0	; () banked
 44351  001D7A  6FC0               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 44352  001D7C  502B               	movf	(btemp+1)^0,w,c
 44353  001D7E  6FC1               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 44354                           
 44355                           ; BSR set to: 0
 44356                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 44357  001D80  0139               	movlb	57	; () banked
 44358  001D82  9DA6               	bcf	166,6,b	;volatile
 44359                           
 44360                           ; BSR set to: 57
 44361                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 44362  001D84  8D96               	bsf	150,6,b	;volatile
 44363                           
 44364                           ; BSR set to: 57
 44365                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 44366  001D86  0E9E               	movlw	low _TMR3_DefaultInterruptHandler
 44367  001D88  6EE6               	movwf	postinc1,c
 44368  001D8A  0E2A               	movlw	high _TMR3_DefaultInterruptHandler
 44369  001D8C  6EE6               	movwf	postinc1,c
 44370  001D8E  0E00               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 44371  001D90  6EE6               	movwf	postinc1,c
 44372  001D92  EC9F  F012         	call	_TMR3_SetInterruptHandler	;wreg free
 44373                           
 44374                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 44375  001D96  0E31               	movlw	49
 44376  001D98  6EA6               	movwf	166,c	;volatile
 44377                           
 44378                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44379  001D9A  0012               	return		;funcret
 44380  001D9C                     __end_of_TMR3_Initialize:
 44381                           	opt callstack 0
 44382                           
 44383 ;; *************** function _TMR3_SetInterruptHandler *****************
 44384 ;; Defined at:
 44385 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 44386 ;; Parameters:    Size  Location     Type
 44387 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44388 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 44389 ;; Auto vars:     Size  Location     Type
 44390 ;;		None
 44391 ;; Return value:  Size  Location     Type
 44392 ;;                  1  [STACK] void 
 44393 ;; Registers used:
 44394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44395 ;; Tracked objects:
 44396 ;;		On entry : 0/1
 44397 ;;		On exit  : 0/0
 44398 ;;		Unchanged: 0/0
 44399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44404 ;;Total ram usage:        0 bytes
 44405 ;; Hardware stack levels used:    1
 44406 ;; Hardware stack levels required when called:   15
 44407 ;; This function calls:
 44408 ;;		Nothing
 44409 ;; This function is called by:
 44410 ;;		_TMR3_Initialize
 44411 ;;		_init_bsoc
 44412 ;; This function uses a reentrant model
 44413 ;;
 44414                           
 44415                           	psect	text166
 44416  00253E                     __ptext166:
 44417                           	opt callstack 0
 44418  00253E                     _TMR3_SetInterruptHandler:
 44419                           	opt callstack 14
 44420                           
 44421                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 44422                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44423                           
 44424                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44425                           ;incstack = 0
 44426  00253E  50E1               	movf	fsr1l,w,c
 44427  002540  0FFD               	addlw	-3
 44428  002542  6ED9               	movwf	fsr2l,c
 44429  002544  50E2               	movf	fsr1h,w,c
 44430  002546  6EDA               	movwf	fsr2h,c
 44431  002548  0EFF               	movlw	255
 44432  00254A  22DA               	addwfc	fsr2h,f,c
 44433  00254C  006F FF78  F098    	movff	postinc2,_TMR3_InterruptHandler
 44434  002552  006F FF78  F099    	movff	postinc2,_TMR3_InterruptHandler+1
 44435  002558  006F FF74  F09A    	movff	postdec2,_TMR3_InterruptHandler+2
 44436                           
 44437                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44438  00255E  52E5               	movf	postdec1,f,c
 44439  002560  52E5               	movf	postdec1,f,c
 44440  002562  52E5               	movf	postdec1,f,c
 44441  002564  0012               	return		;funcret
 44442  002566                     __end_of_TMR3_SetInterruptHandler:
 44443                           	opt callstack 0
 44444                           
 44445 ;; *************** function _TMR2_Initialize *****************
 44446 ;; Defined at:
 44447 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 44448 ;; Parameters:    Size  Location     Type
 44449 ;;		None
 44450 ;; Auto vars:     Size  Location     Type
 44451 ;;		None
 44452 ;; Return value:  Size  Location     Type
 44453 ;;                  1  [STACK] void 
 44454 ;; Registers used:
 44455 ;;		wreg, status,2
 44456 ;; Tracked objects:
 44457 ;;		On entry : 0/0
 44458 ;;		On exit  : 3F/39
 44459 ;;		Unchanged: 0/0
 44460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44465 ;;Total ram usage:        0 bytes
 44466 ;; Hardware stack levels used:    1
 44467 ;; Hardware stack levels required when called:   15
 44468 ;; This function calls:
 44469 ;;		Nothing
 44470 ;; This function is called by:
 44471 ;;		_SYSTEM_Initialize
 44472 ;; This function uses a reentrant model
 44473 ;;
 44474                           
 44475                           	psect	text167
 44476  0028C2                     __ptext167:
 44477                           	opt callstack 0
 44478  0028C2                     _TMR2_Initialize:
 44479                           	opt callstack 14
 44480                           
 44481                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 44482                           
 44483                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44484                           ;incstack = 0
 44485  0028C2  0E01               	movlw	1
 44486  0028C4  6EAE               	movwf	174,c	;volatile
 44487                           
 44488                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 44489  0028C6  6AAD               	clrf	173,c	;volatile
 44490                           
 44491                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 44492  0028C8  6AAF               	clrf	175,c	;volatile
 44493                           
 44494                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 44495  0028CA  0E63               	movlw	99
 44496  0028CC  6EAB               	movwf	171,c	;volatile
 44497                           
 44498                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 44499  0028CE  6AAA               	clrf	170,c	;volatile
 44500                           
 44501                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 44502  0028D0  0139               	movlb	57	; () banked
 44503  0028D2  95A4               	bcf	164,2,b	;volatile
 44504                           
 44505                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 44506  0028D4  0EC0               	movlw	192
 44507  0028D6  6EAC               	movwf	172,c	;volatile
 44508                           
 44509                           ; BSR set to: 57
 44510                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44511  0028D8  0012               	return		;funcret
 44512  0028DA                     __end_of_TMR2_Initialize:
 44513                           	opt callstack 0
 44514                           
 44515 ;; *************** function _SPI1_Initialize *****************
 44516 ;; Defined at:
 44517 ;;		line 64 in file "mcc_generated_files/spi1.c"
 44518 ;; Parameters:    Size  Location     Type
 44519 ;;		None
 44520 ;; Auto vars:     Size  Location     Type
 44521 ;;		None
 44522 ;; Return value:  Size  Location     Type
 44523 ;;                  1  [STACK] void 
 44524 ;; Registers used:
 44525 ;;		wreg, status,2
 44526 ;; Tracked objects:
 44527 ;;		On entry : 3F/39
 44528 ;;		On exit  : 3F/3D
 44529 ;;		Unchanged: 0/0
 44530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44535 ;;Total ram usage:        0 bytes
 44536 ;; Hardware stack levels used:    1
 44537 ;; Hardware stack levels required when called:   15
 44538 ;; This function calls:
 44539 ;;		Nothing
 44540 ;; This function is called by:
 44541 ;;		_SYSTEM_Initialize
 44542 ;; This function uses a reentrant model
 44543 ;;
 44544                           
 44545                           	psect	text168
 44546  0028F0                     __ptext168:
 44547                           	opt callstack 0
 44548  0028F0                     _SPI1_Initialize:
 44549                           	opt callstack 14
 44550                           
 44551                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 44552                           
 44553                           ; BSR set to: 57
 44554                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44555                           ;incstack = 0
 44556  0028F0  0E40               	movlw	64
 44557  0028F2  013D               	movlb	61	; () banked
 44558  0028F4  6F15               	movwf	21,b	;volatile
 44559                           
 44560                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 44561  0028F6  0E03               	movlw	3
 44562  0028F8  6F16               	movwf	22,b	;volatile
 44563                           
 44564                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 44565  0028FA  0E4F               	movlw	79
 44566  0028FC  6F19               	movwf	25,b	;volatile
 44567                           
 44568                           ; BSR set to: 61
 44569                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 44570  0028FE  6B1C               	clrf	28,b	;volatile
 44571                           
 44572                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 44573  002900  0E83               	movlw	131
 44574  002902  6F14               	movwf	20,b	;volatile
 44575                           
 44576                           ; BSR set to: 61
 44577                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44578  002904  0012               	return		;funcret
 44579  002906                     __end_of_SPI1_Initialize:
 44580                           	opt callstack 0
 44581                           
 44582 ;; *************** function _PWM8_Initialize *****************
 44583 ;; Defined at:
 44584 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 44585 ;; Parameters:    Size  Location     Type
 44586 ;;		None
 44587 ;; Auto vars:     Size  Location     Type
 44588 ;;		None
 44589 ;; Return value:  Size  Location     Type
 44590 ;;                  1  [STACK] void 
 44591 ;; Registers used:
 44592 ;;		wreg, status,2
 44593 ;; Tracked objects:
 44594 ;;		On entry : 3F/39
 44595 ;;		On exit  : 3F/3F
 44596 ;;		Unchanged: 0/0
 44597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44602 ;;Total ram usage:        0 bytes
 44603 ;; Hardware stack levels used:    1
 44604 ;; Hardware stack levels required when called:   15
 44605 ;; This function calls:
 44606 ;;		Nothing
 44607 ;; This function is called by:
 44608 ;;		_SYSTEM_Initialize
 44609 ;; This function uses a reentrant model
 44610 ;;
 44611                           
 44612                           	psect	text169
 44613  002906                     __ptext169:
 44614                           	opt callstack 0
 44615  002906                     _PWM8_Initialize:
 44616                           	opt callstack 14
 44617                           
 44618                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 44619                           
 44620                           ; BSR set to: 61
 44621                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44622                           ;incstack = 0
 44623  002906  0E80               	movlw	128
 44624  002908  6E62               	movwf	98,c	;volatile
 44625                           
 44626                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 44627  00290A  6A61               	clrf	97,c	;volatile
 44628                           
 44629                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 44630  00290C  0E40               	movlw	64
 44631  00290E  6E60               	movwf	96,c	;volatile
 44632                           
 44633                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 44634  002910  013F               	movlb	63	; () banked
 44635  002912  515F               	movf	95,w,b	;volatile
 44636  002914  0B3F               	andlw	-193
 44637  002916  0940               	iorlw	64
 44638  002918  6F5F               	movwf	95,b	;volatile
 44639                           
 44640                           ; BSR set to: 63
 44641                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44642  00291A  0012               	return		;funcret
 44643  00291C                     __end_of_PWM8_Initialize:
 44644                           	opt callstack 0
 44645                           
 44646 ;; *************** function _PMD_Initialize *****************
 44647 ;; Defined at:
 44648 ;;		line 91 in file "mcc_generated_files/mcc.c"
 44649 ;; Parameters:    Size  Location     Type
 44650 ;;		None
 44651 ;; Auto vars:     Size  Location     Type
 44652 ;;		None
 44653 ;; Return value:  Size  Location     Type
 44654 ;;                  1  [STACK] void 
 44655 ;; Registers used:
 44656 ;;		None
 44657 ;; Tracked objects:
 44658 ;;		On entry : 3F/39
 44659 ;;		On exit  : 3F/39
 44660 ;;		Unchanged: 0/0
 44661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44666 ;;Total ram usage:        0 bytes
 44667 ;; Hardware stack levels used:    1
 44668 ;; Hardware stack levels required when called:   15
 44669 ;; This function calls:
 44670 ;;		Nothing
 44671 ;; This function is called by:
 44672 ;;		_SYSTEM_Initialize
 44673 ;; This function uses a reentrant model
 44674 ;;
 44675                           
 44676                           	psect	text170
 44677  002932                     __ptext170:
 44678                           	opt callstack 0
 44679  002932                     _PMD_Initialize:
 44680                           	opt callstack 14
 44681                           
 44682                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 44683                           
 44684                           ; BSR set to: 63
 44685                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44686                           ;incstack = 0
 44687  002932  0139               	movlb	57	; () banked
 44688  002934  6BC0               	clrf	192,b	;volatile
 44689                           
 44690                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 44691  002936  6BC1               	clrf	193,b	;volatile
 44692                           
 44693                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 44694  002938  6BC2               	clrf	194,b	;volatile
 44695                           
 44696                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 44697  00293A  6BC3               	clrf	195,b	;volatile
 44698                           
 44699                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 44700  00293C  6BC4               	clrf	196,b	;volatile
 44701                           
 44702                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 44703  00293E  6BC5               	clrf	197,b	;volatile
 44704                           
 44705                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 44706  002940  6BC6               	clrf	198,b	;volatile
 44707                           
 44708                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 44709  002942  6BC7               	clrf	199,b	;volatile
 44710                           
 44711                           ; BSR set to: 57
 44712                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 44713  002944  0012               	return		;funcret
 44714  002946                     __end_of_PMD_Initialize:
 44715                           	opt callstack 0
 44716                           
 44717 ;; *************** function _PIN_MANAGER_Initialize *****************
 44718 ;; Defined at:
 44719 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 44720 ;; Parameters:    Size  Location     Type
 44721 ;;		None
 44722 ;; Auto vars:     Size  Location     Type
 44723 ;;		None
 44724 ;; Return value:  Size  Location     Type
 44725 ;;                  1  [STACK] void 
 44726 ;; Registers used:
 44727 ;;		wreg, status,2
 44728 ;; Tracked objects:
 44729 ;;		On entry : 3F/39
 44730 ;;		On exit  : 3F/3A
 44731 ;;		Unchanged: 0/0
 44732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44737 ;;Total ram usage:        0 bytes
 44738 ;; Hardware stack levels used:    1
 44739 ;; Hardware stack levels required when called:   15
 44740 ;; This function calls:
 44741 ;;		Nothing
 44742 ;; This function is called by:
 44743 ;;		_SYSTEM_Initialize
 44744 ;; This function uses a reentrant model
 44745 ;;
 44746                           
 44747                           	psect	text171
 44748  000F84                     __ptext171:
 44749                           	opt callstack 0
 44750  000F84                     _PIN_MANAGER_Initialize:
 44751                           	opt callstack 14
 44752                           
 44753                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 44754                           
 44755                           ; BSR set to: 57
 44756                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44757                           ;incstack = 0
 44758  000F84  0E07               	movlw	7
 44759  000F86  6EBE               	movwf	190,c	;volatile
 44760                           
 44761                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 44762  000F88  6ABD               	clrf	189,c	;volatile
 44763                           
 44764                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 44765  000F8A  6ABA               	clrf	186,c	;volatile
 44766                           
 44767                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 44768  000F8C  0E23               	movlw	35
 44769  000F8E  6EBF               	movwf	191,c	;volatile
 44770                           
 44771                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 44772  000F90  6ABB               	clrf	187,c	;volatile
 44773                           
 44774                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 44775  000F92  0E07               	movlw	7
 44776  000F94  6EBC               	movwf	188,c	;volatile
 44777                           
 44778                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 44779  000F96  6AC6               	clrf	198,c	;volatile
 44780                           
 44781                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 44782  000F98  0E0C               	movlw	12
 44783  000F9A  6EC7               	movwf	199,c	;volatile
 44784                           
 44785                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 44786  000F9C  68C2               	setf	194,c	;volatile
 44787                           
 44788                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 44789  000F9E  0EBF               	movlw	191
 44790  000FA0  6EC3               	movwf	195,c	;volatile
 44791                           
 44792                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 44793  000FA2  0E90               	movlw	144
 44794  000FA4  6EC4               	movwf	196,c	;volatile
 44795                           
 44796                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 44797  000FA6  0E0C               	movlw	12
 44798  000FA8  6EC5               	movwf	197,c	;volatile
 44799                           
 44800                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 44801  000FAA  013A               	movlb	58	; () banked
 44802  000FAC  6B70               	clrf	112,b	;volatile
 44803                           
 44804                           ; BSR set to: 58
 44805                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 44806  000FAE  6B60               	clrf	96,b	;volatile
 44807                           
 44808                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 44809  000FB0  0E3C               	movlw	60
 44810  000FB2  6F50               	movwf	80,b	;volatile
 44811                           
 44812                           ; BSR set to: 58
 44813                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 44814  000FB4  6B80               	clrf	128,b	;volatile
 44815                           
 44816                           ; BSR set to: 58
 44817                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 44818  000FB6  6B90               	clrf	144,b	;volatile
 44819                           
 44820                           ; BSR set to: 58
 44821                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 44822  000FB8  6940               	setf	64,b	;volatile
 44823                           
 44824                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 44825  000FBA  0E0C               	movlw	12
 44826  000FBC  6F71               	movwf	113,b	;volatile
 44827                           
 44828                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 44829  000FBE  0E0C               	movlw	12
 44830  000FC0  6F91               	movwf	145,b	;volatile
 44831                           
 44832                           ; BSR set to: 58
 44833                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 44834  000FC2  6B81               	clrf	129,b	;volatile
 44835                           
 44836                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 44837  000FC4  0E83               	movlw	131
 44838  000FC6  6F51               	movwf	81,b	;volatile
 44839                           
 44840                           ; BSR set to: 58
 44841                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 44842  000FC8  6B41               	clrf	65,b	;volatile
 44843                           
 44844                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 44845  000FCA  0E97               	movlw	151
 44846  000FCC  6F61               	movwf	97,b	;volatile
 44847                           
 44848                           ; BSR set to: 58
 44849                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 44850  000FCE  6B82               	clrf	130,b	;volatile
 44851                           
 44852                           ; BSR set to: 58
 44853                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 44854  000FD0  6B92               	clrf	146,b	;volatile
 44855                           
 44856                           ; BSR set to: 58
 44857                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 44858  000FD2  6B42               	clrf	66,b	;volatile
 44859                           
 44860                           ; BSR set to: 58
 44861                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 44862  000FD4  6B52               	clrf	82,b	;volatile
 44863                           
 44864                           ; BSR set to: 58
 44865                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 44866  000FD6  6B62               	clrf	98,b	;volatile
 44867                           
 44868                           ; BSR set to: 58
 44869                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 44870  000FD8  6B72               	clrf	114,b	;volatile
 44871                           
 44872                           ; BSR set to: 58
 44873                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 44874  000FDA  6943               	setf	67,b	;volatile
 44875                           
 44876                           ; BSR set to: 58
 44877                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 44878  000FDC  6953               	setf	83,b	;volatile
 44879                           
 44880                           ; BSR set to: 58
 44881                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 44882  000FDE  6963               	setf	99,b	;volatile
 44883                           
 44884                           ; BSR set to: 58
 44885                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 44886  000FE0  6973               	setf	115,b	;volatile
 44887                           
 44888                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 44889  000FE2  0E07               	movlw	7
 44890  000FE4  6F83               	movwf	131,b	;volatile
 44891                           
 44892                           ; BSR set to: 58
 44893                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 44894  000FE6  6993               	setf	147,b	;volatile
 44895                           
 44896                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 44897  000FE8  0E0F               	movlw	15
 44898  000FEA  6FE8               	movwf	232,b	;volatile
 44899                           
 44900                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 44901  000FEC  0E13               	movlw	19
 44902  000FEE  6FDE               	movwf	222,b	;volatile
 44903                           
 44904                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 44905  000FF0  0E16               	movlw	22
 44906  000FF2  6F0E               	movwf	14,b	;volatile
 44907                           
 44908                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 44909  000FF4  0E1E               	movlw	30
 44910  000FF6  6F13               	movwf	19,b	;volatile
 44911                           
 44912                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 44913  000FF8  0E08               	movlw	8
 44914  000FFA  6FC0               	movwf	192,b	;volatile
 44915                           
 44916                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 44917  000FFC  0E10               	movlw	16
 44918  000FFE  6F19               	movwf	25,b	;volatile
 44919                           
 44920                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 44921  001000  0E09               	movlw	9
 44922  001002  6FC1               	movwf	193,b	;volatile
 44923                           
 44924                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 44925  001004  0E1F               	movlw	31
 44926  001006  6F15               	movwf	21,b	;volatile
 44927                           
 44928                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 44929  001008  0E13               	movlw	19
 44930  00100A  6F16               	movwf	22,b	;volatile
 44931                           
 44932                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 44933  00100C  0E17               	movlw	23
 44934  00100E  6FE5               	movwf	229,b	;volatile
 44935                           
 44936                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 44937  001010  0E14               	movlw	20
 44938  001012  6FDF               	movwf	223,b	;volatile
 44939                           
 44940                           ; BSR set to: 58
 44941                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 44942  001014  0012               	return		;funcret
 44943  001016                     __end_of_PIN_MANAGER_Initialize:
 44944                           	opt callstack 0
 44945                           
 44946 ;; *************** function _OSCILLATOR_Initialize *****************
 44947 ;; Defined at:
 44948 ;;		line 73 in file "mcc_generated_files/mcc.c"
 44949 ;; Parameters:    Size  Location     Type
 44950 ;;		None
 44951 ;; Auto vars:     Size  Location     Type
 44952 ;;		None
 44953 ;; Return value:  Size  Location     Type
 44954 ;;                  1  [STACK] void 
 44955 ;; Registers used:
 44956 ;;		wreg, status,2
 44957 ;; Tracked objects:
 44958 ;;		On entry : 3F/3A
 44959 ;;		On exit  : 3F/39
 44960 ;;		Unchanged: 0/0
 44961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44966 ;;Total ram usage:        0 bytes
 44967 ;; Hardware stack levels used:    1
 44968 ;; Hardware stack levels required when called:   15
 44969 ;; This function calls:
 44970 ;;		Nothing
 44971 ;; This function is called by:
 44972 ;;		_SYSTEM_Initialize
 44973 ;; This function uses a reentrant model
 44974 ;;
 44975                           
 44976                           	psect	text172
 44977  00291C                     __ptext172:
 44978                           	opt callstack 0
 44979  00291C                     _OSCILLATOR_Initialize:
 44980                           	opt callstack 14
 44981                           
 44982                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 44983                           
 44984                           ; BSR set to: 58
 44985                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44986                           ;incstack = 0
 44987  00291C  0E20               	movlw	32
 44988  00291E  0139               	movlb	57	; () banked
 44989  002920  6FD9               	movwf	217,b	;volatile
 44990                           
 44991                           ; BSR set to: 57
 44992                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 44993  002922  6BDB               	clrf	219,b	;volatile
 44994                           
 44995                           ; BSR set to: 57
 44996                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 44997  002924  6BDD               	clrf	221,b	;volatile
 44998                           
 44999                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 45000  002926  0E02               	movlw	2
 45001  002928  6FDF               	movwf	223,b	;volatile
 45002                           
 45003                           ; BSR set to: 57
 45004                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 45005  00292A  6BDE               	clrf	222,b	;volatile
 45006  00292C                     l171:
 45007                           
 45008                           ; BSR set to: 57
 45009                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 45010  00292C  B1DC               	btfsc	220,0,b	;volatile
 45011  00292E  0012               	return	
 45012  002930  D7FD               	goto	l171
 45013  002932                     __end_of_OSCILLATOR_Initialize:
 45014                           	opt callstack 0
 45015                           
 45016 ;; *************** function _INTERRUPT_Initialize *****************
 45017 ;; Defined at:
 45018 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 45019 ;; Parameters:    Size  Location     Type
 45020 ;;		None
 45021 ;; Auto vars:     Size  Location     Type
 45022 ;;  state           1  [STACK] _Bool 
 45023 ;; Return value:  Size  Location     Type
 45024 ;;                  1  [STACK] void 
 45025 ;; Registers used:
 45026 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 45027 ;; Tracked objects:
 45028 ;;		On entry : 0/0
 45029 ;;		On exit  : 3F/39
 45030 ;;		Unchanged: 0/0
 45031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45036 ;;Total ram usage:        0 bytes
 45037 ;; Hardware stack levels used:    1
 45038 ;; Hardware stack levels required when called:   15
 45039 ;; This function calls:
 45040 ;;		Nothing
 45041 ;; This function is called by:
 45042 ;;		_SYSTEM_Initialize
 45043 ;; This function uses a reentrant model
 45044 ;;
 45045                           
 45046                           	psect	text173
 45047  001728                     __ptext173:
 45048                           	opt callstack 0
 45049  001728                     _INTERRUPT_Initialize:
 45050                           	opt callstack 0
 45051                           
 45052                           ; BSR set to: 57
 45053                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45054  001728  52E6               	movf	postinc1,f,c
 45055                           
 45056                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 45057                           
 45058                           ;incstack = 0
 45059  00172A  8AD2               	bsf	210,5,c	;volatile
 45060                           
 45061                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 45062  00172C  AED2               	btfss	16338,7,c	;volatile
 45063  00172E  D003               	goto	u12420
 45064  001730  6A35               	clrf	(btemp+11)^0,c
 45065  001732  2A35               	incf	(btemp+11)^0,f,c
 45066  001734  D001               	goto	u12438
 45067  001736                     u12420:
 45068  001736  6A35               	clrf	(btemp+11)^0,c
 45069  001738                     u12438:
 45070                           
 45071                           ;stkvar	_state @ sp[(-1)+0]
 45072  001738  0EFF               	movlw	-1
 45073  00173A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 45074                           
 45075                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 45076  001740  9ED2               	bcf	16338,7,c	;volatile
 45077                           
 45078                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 45079  001742  0E55               	movlw	85
 45080  001744  6ED4               	movwf	212,c	;volatile
 45081                           
 45082                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 45083  001746  0EAA               	movlw	170
 45084  001748  6ED4               	movwf	212,c	;volatile
 45085                           
 45086                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 45087  00174A  90D4               	bcf	212,0,c	;volatile
 45088                           
 45089                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 45090  00174C  0138               	movlb	56	; () banked
 45091  00174E  6B9F               	clrf	159,b	;volatile
 45092                           
 45093                           ; BSR set to: 56
 45094                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 45095  001750  6B9E               	clrf	158,b	;volatile
 45096                           
 45097                           ; BSR set to: 56
 45098                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 45099  001752  0E08               	movlw	8
 45100  001754  6F9D               	movwf	157,b	;volatile
 45101                           
 45102                           ; BSR set to: 56
 45103                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 45104  001756  0E55               	movlw	85
 45105  001758  6ED4               	movwf	212,c	;volatile
 45106                           
 45107                           ; BSR set to: 56
 45108                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 45109  00175A  0EAA               	movlw	170
 45110  00175C  6ED4               	movwf	212,c	;volatile
 45111                           
 45112                           ; BSR set to: 56
 45113                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 45114  00175E  80D4               	bsf	212,0,c	;volatile
 45115                           
 45116                           ; BSR set to: 56
 45117                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 45118                           ;stkvar	_state @ sp[(-1)+0]
 45119  001760  0EFF               	movlw	-1
 45120  001762  B0E3               	btfsc	plusw1,0,c
 45121  001764  D002               	bra	u12445
 45122  001766  9ED2               	bcf	16338,7,c	;volatile
 45123  001768  D001               	bra	u12446
 45124  00176A                     u12445:
 45125  00176A  8ED2               	bsf	16338,7,c	;volatile
 45126  00176C                     u12446:
 45127                           
 45128                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 45129  00176C  0139               	movlb	57	; () banked
 45130  00176E  8782               	bsf	130,3,b	;volatile
 45131                           
 45132                           ; BSR set to: 57
 45133                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 45134  001770  8382               	bsf	130,1,b	;volatile
 45135                           
 45136                           ; BSR set to: 57
 45137                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 45138  001772  8182               	bsf	130,0,b	;volatile
 45139                           
 45140                           ; BSR set to: 57
 45141                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 45142  001774  8582               	bsf	130,2,b	;volatile
 45143                           
 45144                           ; BSR set to: 57
 45145                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 45146  001776  8786               	bsf	134,3,b	;volatile
 45147                           
 45148                           ; BSR set to: 57
 45149                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 45150  001778  8586               	bsf	134,2,b	;volatile
 45151                           
 45152                           ; BSR set to: 57
 45153                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 45154  00177A  8783               	bsf	131,3,b	;volatile
 45155                           
 45156                           ; BSR set to: 57
 45157                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 45158  00177C  8181               	bsf	129,0,b	;volatile
 45159                           
 45160                           ; BSR set to: 57
 45161                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 45162  00177E  9185               	bcf	133,0,b	;volatile
 45163                           
 45164                           ; BSR set to: 57
 45165                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 45166  001780  8189               	bsf	137,0,b	;volatile
 45167                           
 45168                           ; BSR set to: 57
 45169                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 45170  001782  9D88               	bcf	136,6,b	;volatile
 45171                           
 45172                           ; BSR set to: 57
 45173                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 45174  001784  8581               	bsf	129,2,b	;volatile
 45175                           
 45176                           ; BSR set to: 57
 45177                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 45178  001786  8781               	bsf	129,3,b	;volatile
 45179                           
 45180                           ; BSR set to: 57
 45181                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 45182  001788  9D86               	bcf	134,6,b	;volatile
 45183                           
 45184                           ; BSR set to: 57
 45185                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 45186  00178A  52E5               	movf	postdec1,f,c
 45187  00178C  0012               	return		;funcret
 45188  00178E                     __end_of_INTERRUPT_Initialize:
 45189                           	opt callstack 0
 45190                           
 45191 ;; *************** function _FVR_Initialize *****************
 45192 ;; Defined at:
 45193 ;;		line 58 in file "mcc_generated_files/fvr.c"
 45194 ;; Parameters:    Size  Location     Type
 45195 ;;		None
 45196 ;; Auto vars:     Size  Location     Type
 45197 ;;		None
 45198 ;; Return value:  Size  Location     Type
 45199 ;;                  1  [STACK] void 
 45200 ;; Registers used:
 45201 ;;		wreg, status,2
 45202 ;; Tracked objects:
 45203 ;;		On entry : 3F/39
 45204 ;;		On exit  : 3F/3E
 45205 ;;		Unchanged: 0/0
 45206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45211 ;;Total ram usage:        0 bytes
 45212 ;; Hardware stack levels used:    1
 45213 ;; Hardware stack levels required when called:   15
 45214 ;; This function calls:
 45215 ;;		Nothing
 45216 ;; This function is called by:
 45217 ;;		_SYSTEM_Initialize
 45218 ;; This function uses a reentrant model
 45219 ;;
 45220                           
 45221                           	psect	text174
 45222  002A6A                     __ptext174:
 45223                           	opt callstack 0
 45224  002A6A                     _FVR_Initialize:
 45225                           	opt callstack 14
 45226                           
 45227                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 45228                           
 45229                           ; BSR set to: 57
 45230                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45231                           ;incstack = 0
 45232  002A6A  0EAF               	movlw	175
 45233  002A6C  013E               	movlb	62	; () banked
 45234  002A6E  6FC1               	movwf	193,b	;volatile
 45235                           
 45236                           ; BSR set to: 62
 45237                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45238  002A70  0012               	return		;funcret
 45239  002A72                     __end_of_FVR_Initialize:
 45240                           	opt callstack 0
 45241                           
 45242 ;; *************** function _EXT_INT_Initialize *****************
 45243 ;; Defined at:
 45244 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 45245 ;; Parameters:    Size  Location     Type
 45246 ;;		None
 45247 ;; Auto vars:     Size  Location     Type
 45248 ;;		None
 45249 ;; Return value:  Size  Location     Type
 45250 ;;                  1  [STACK] void 
 45251 ;; Registers used:
 45252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45253 ;; Tracked objects:
 45254 ;;		On entry : 3F/3F
 45255 ;;		On exit  : 3F/39
 45256 ;;		Unchanged: 0/0
 45257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45262 ;;Total ram usage:        0 bytes
 45263 ;; Hardware stack levels used:    1
 45264 ;; Hardware stack levels required when called:   16
 45265 ;; This function calls:
 45266 ;;		_INT0_SetInterruptHandler
 45267 ;;		_INT1_SetInterruptHandler
 45268 ;; This function is called by:
 45269 ;;		_SYSTEM_Initialize
 45270 ;; This function uses a reentrant model
 45271 ;;
 45272                           
 45273                           	psect	text175
 45274  002224                     __ptext175:
 45275                           	opt callstack 0
 45276  002224                     _EXT_INT_Initialize:
 45277                           	opt callstack 13
 45278                           
 45279                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 45280                           
 45281                           ; BSR set to: 62
 45282                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45283                           ;incstack = 0
 45284  002224  0139               	movlb	57	; () banked
 45285  002226  91A1               	bcf	161,0,b	;volatile
 45286                           
 45287                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 45288  002228  90D2               	bcf	210,0,c	;volatile
 45289                           
 45290                           ; BSR set to: 57
 45291                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 45292  00222A  0EA0               	movlw	low _INT0_DefaultInterruptHandler
 45293  00222C  6EE6               	movwf	postinc1,c
 45294  00222E  0E2A               	movlw	high _INT0_DefaultInterruptHandler
 45295  002230  6EE6               	movwf	postinc1,c
 45296  002232  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 45297  002234  6EE6               	movwf	postinc1,c
 45298  002236  ECC7  F012         	call	_INT0_SetInterruptHandler	;wreg free
 45299                           
 45300                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 45301  00223A  0139               	movlb	57	; () banked
 45302  00223C  8191               	bsf	145,0,b	;volatile
 45303                           
 45304                           ; BSR set to: 57
 45305                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 45306  00223E  91A5               	bcf	165,0,b	;volatile
 45307                           
 45308                           ; BSR set to: 57
 45309                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 45310  002240  92D2               	bcf	210,1,c	;volatile
 45311                           
 45312                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 45313  002242  0EFE               	movlw	low _INT1_DefaultInterruptHandler
 45314  002244  6EE6               	movwf	postinc1,c
 45315  002246  0EFF               	movlw	high _INT1_DefaultInterruptHandler
 45316  002248  6EE6               	movwf	postinc1,c
 45317  00224A  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 45318  00224C  6EE6               	movwf	postinc1,c
 45319  00224E  ECB3  F012         	call	_INT1_SetInterruptHandler	;wreg free
 45320                           
 45321                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 45322  002252  0139               	movlb	57	; () banked
 45323  002254  8195               	bsf	149,0,b	;volatile
 45324                           
 45325                           ; BSR set to: 57
 45326                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 45327  002256  0012               	return		;funcret
 45328  002258                     __end_of_EXT_INT_Initialize:
 45329                           	opt callstack 0
 45330                           
 45331 ;; *************** function _INT1_SetInterruptHandler *****************
 45332 ;; Defined at:
 45333 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 45334 ;; Parameters:    Size  Location     Type
 45335 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45336 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 45337 ;; Auto vars:     Size  Location     Type
 45338 ;;		None
 45339 ;; Return value:  Size  Location     Type
 45340 ;;                  1  [STACK] void 
 45341 ;; Registers used:
 45342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45343 ;; Tracked objects:
 45344 ;;		On entry : 3F/39
 45345 ;;		On exit  : 0/0
 45346 ;;		Unchanged: 0/0
 45347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45352 ;;Total ram usage:        0 bytes
 45353 ;; Hardware stack levels used:    1
 45354 ;; Hardware stack levels required when called:   15
 45355 ;; This function calls:
 45356 ;;		Nothing
 45357 ;; This function is called by:
 45358 ;;		_EXT_INT_Initialize
 45359 ;;		_start_switch_handler
 45360 ;; This function uses a reentrant model
 45361 ;;
 45362                           
 45363                           	psect	text176
 45364  002566                     __ptext176:
 45365                           	opt callstack 0
 45366  002566                     _INT1_SetInterruptHandler:
 45367                           	opt callstack 14
 45368                           
 45369                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 45370                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45371                           
 45372                           ; BSR set to: 57
 45373                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45374                           ;incstack = 0
 45375  002566  50E1               	movf	fsr1l,w,c
 45376  002568  0FFD               	addlw	-3
 45377  00256A  6ED9               	movwf	fsr2l,c
 45378  00256C  50E2               	movf	fsr1h,w,c
 45379  00256E  6EDA               	movwf	fsr2h,c
 45380  002570  0EFF               	movlw	255
 45381  002572  22DA               	addwfc	fsr2h,f,c
 45382  002574  006F FF78  F0B0    	movff	postinc2,_INT1_InterruptHandler
 45383  00257A  006F FF78  F0B1    	movff	postinc2,_INT1_InterruptHandler+1
 45384  002580  006F FF74  F0B2    	movff	postdec2,_INT1_InterruptHandler+2
 45385                           
 45386                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 45387  002586  52E5               	movf	postdec1,f,c
 45388  002588  52E5               	movf	postdec1,f,c
 45389  00258A  52E5               	movf	postdec1,f,c
 45390  00258C  0012               	return		;funcret
 45391  00258E                     __end_of_INT1_SetInterruptHandler:
 45392                           	opt callstack 0
 45393                           
 45394 ;; *************** function _INT0_SetInterruptHandler *****************
 45395 ;; Defined at:
 45396 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 45397 ;; Parameters:    Size  Location     Type
 45398 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45399 ;;		 -> INT0_DefaultInterruptHandler(1), 
 45400 ;; Auto vars:     Size  Location     Type
 45401 ;;		None
 45402 ;; Return value:  Size  Location     Type
 45403 ;;                  1  [STACK] void 
 45404 ;; Registers used:
 45405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45406 ;; Tracked objects:
 45407 ;;		On entry : 3F/39
 45408 ;;		On exit  : 0/0
 45409 ;;		Unchanged: 0/0
 45410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45415 ;;Total ram usage:        0 bytes
 45416 ;; Hardware stack levels used:    1
 45417 ;; Hardware stack levels required when called:   15
 45418 ;; This function calls:
 45419 ;;		Nothing
 45420 ;; This function is called by:
 45421 ;;		_EXT_INT_Initialize
 45422 ;; This function uses a reentrant model
 45423 ;;
 45424                           
 45425                           	psect	text177
 45426  00258E                     __ptext177:
 45427                           	opt callstack 0
 45428  00258E                     _INT0_SetInterruptHandler:
 45429                           	opt callstack 13
 45430                           
 45431                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 45432                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45433                           
 45434                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45435                           ;incstack = 0
 45436  00258E  50E1               	movf	fsr1l,w,c
 45437  002590  0FFD               	addlw	-3
 45438  002592  6ED9               	movwf	fsr2l,c
 45439  002594  50E2               	movf	fsr1h,w,c
 45440  002596  6EDA               	movwf	fsr2h,c
 45441  002598  0EFF               	movlw	255
 45442  00259A  22DA               	addwfc	fsr2h,f,c
 45443  00259C  006F FF78  F0B3    	movff	postinc2,_INT0_InterruptHandler
 45444  0025A2  006F FF78  F0B4    	movff	postinc2,_INT0_InterruptHandler+1
 45445  0025A8  006F FF74  F0B5    	movff	postdec2,_INT0_InterruptHandler+2
 45446                           
 45447                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 45448  0025AE  52E5               	movf	postdec1,f,c
 45449  0025B0  52E5               	movf	postdec1,f,c
 45450  0025B2  52E5               	movf	postdec1,f,c
 45451  0025B4  0012               	return		;funcret
 45452  0025B6                     __end_of_INT0_SetInterruptHandler:
 45453                           	opt callstack 0
 45454                           
 45455 ;; *************** function _DMA2_Initialize *****************
 45456 ;; Defined at:
 45457 ;;		line 61 in file "mcc_generated_files/dma2.c"
 45458 ;; Parameters:    Size  Location     Type
 45459 ;;		None
 45460 ;; Auto vars:     Size  Location     Type
 45461 ;;		None
 45462 ;; Return value:  Size  Location     Type
 45463 ;;                  1  [STACK] void 
 45464 ;; Registers used:
 45465 ;;		wreg, status,2
 45466 ;; Tracked objects:
 45467 ;;		On entry : 3F/3D
 45468 ;;		On exit  : 3F/3B
 45469 ;;		Unchanged: 0/0
 45470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45475 ;;Total ram usage:        0 bytes
 45476 ;; Hardware stack levels used:    1
 45477 ;; Hardware stack levels required when called:   15
 45478 ;; This function calls:
 45479 ;;		Nothing
 45480 ;; This function is called by:
 45481 ;;		_SYSTEM_Initialize
 45482 ;; This function uses a reentrant model
 45483 ;;
 45484                           
 45485                           	psect	text178
 45486  001A8C                     __ptext178:
 45487                           	opt callstack 0
 45488  001A8C                     _DMA2_Initialize:
 45489                           	opt callstack 14
 45490                           
 45491                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 45492                           
 45493                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45494                           ;incstack = 0
 45495  001A8C  0E00               	movlw	0
 45496  001A8E  013B               	movlb	59	; () banked
 45497  001A90  6FD9               	movwf	217,b	;volatile
 45498  001A92  0E10               	movlw	16
 45499  001A94  6FDA               	movwf	218,b	;volatile
 45500  001A96  0E00               	movlw	0
 45501  001A98  6FDB               	movwf	219,b	;volatile
 45502                           
 45503                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 45504  001A9A  0E3F               	movlw	63
 45505  001A9C  6FD1               	movwf	209,b	;volatile
 45506  001A9E  0EBB               	movlw	187
 45507  001AA0  6FD0               	movwf	208,b	;volatile
 45508                           
 45509                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 45510  001AA2  0E03               	movlw	3
 45511  001AA4  6FDD               	movwf	221,b	;volatile
 45512                           
 45513                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 45514  001AA6  0E00               	movlw	0
 45515  001AA8  6FD8               	movwf	216,b	;volatile
 45516  001AAA  0E01               	movlw	1
 45517  001AAC  6FD7               	movwf	215,b	;volatile
 45518                           
 45519                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 45520  001AAE  0E00               	movlw	0
 45521  001AB0  6FCF               	movwf	207,b	;volatile
 45522  001AB2  0E01               	movlw	1
 45523  001AB4  6FCE               	movwf	206,b	;volatile
 45524                           
 45525                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 45526  001AB6  0E1C               	movlw	28
 45527  001AB8  6FDF               	movwf	223,b	;volatile
 45528                           
 45529                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 45530  001ABA  0E3D               	movlw	61
 45531  001ABC  6FDE               	movwf	222,b	;volatile
 45532                           
 45533                           ; BSR set to: 59
 45534                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 45535  001ABE  0139               	movlb	57	; () banked
 45536  001AC0  97A5               	bcf	165,3,b	;volatile
 45537                           
 45538                           ; BSR set to: 57
 45539                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 45540  001AC2  95A5               	bcf	165,2,b	;volatile
 45541                           
 45542                           ; BSR set to: 57
 45543                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 45544  001AC4  9BA5               	bcf	165,5,b	;volatile
 45545                           
 45546                           ; BSR set to: 57
 45547                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 45548  001AC6  99A5               	bcf	165,4,b	;volatile
 45549                           
 45550                           ; BSR set to: 57
 45551                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 45552  001AC8  9795               	bcf	149,3,b	;volatile
 45553                           
 45554                           ; BSR set to: 57
 45555                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 45556  001ACA  9595               	bcf	149,2,b	;volatile
 45557                           
 45558                           ; BSR set to: 57
 45559                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 45560  001ACC  9B95               	bcf	149,5,b	;volatile
 45561                           
 45562                           ; BSR set to: 57
 45563                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 45564  001ACE  9995               	bcf	149,4,b	;volatile
 45565  001AD0  9ED2               	bcf	16338,7,c	;# 
 45566  001AD2  0139               	banksel	14831	;# 
 45567  001AD4  0E55               	movlw	85	;# 
 45568  001AD6  6FEF               	movwf	14831,b	;# 
 45569  001AD8  0EAA               	movlw	170	;# 
 45570  001ADA  6FEF               	movwf	14831,b	;# 
 45571  001ADC  81EF               	bsf	14831,0,b	;# 
 45572  001ADE  8ED2               	bsf	16338,7,c	;# 
 45573                           
 45574                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 45575  001AE0  013B               	movlb	59	; () banked
 45576  001AE2  6BDC               	clrf	220,b	;volatile
 45577                           
 45578                           ; BSR set to: 59
 45579                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45580  001AE4  0012               	return		;funcret
 45581  001AE6                     __end_of_DMA2_Initialize:
 45582                           	opt callstack 0
 45583                           
 45584 ;; *************** function _DMA1_Initialize *****************
 45585 ;; Defined at:
 45586 ;;		line 86 in file "mcc_generated_files/dma1.c"
 45587 ;; Parameters:    Size  Location     Type
 45588 ;;		None
 45589 ;; Auto vars:     Size  Location     Type
 45590 ;;		None
 45591 ;; Return value:  Size  Location     Type
 45592 ;;                  1  [STACK] void 
 45593 ;; Registers used:
 45594 ;;		wreg, status,2
 45595 ;; Tracked objects:
 45596 ;;		On entry : 3F/3B
 45597 ;;		On exit  : 3F/3B
 45598 ;;		Unchanged: 0/0
 45599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45604 ;;Total ram usage:        0 bytes
 45605 ;; Hardware stack levels used:    1
 45606 ;; Hardware stack levels required when called:   15
 45607 ;; This function calls:
 45608 ;;		Nothing
 45609 ;; This function is called by:
 45610 ;;		_SYSTEM_Initialize
 45611 ;; This function uses a reentrant model
 45612 ;;
 45613                           
 45614                           	psect	text179
 45615  00151A                     __ptext179:
 45616                           	opt callstack 0
 45617  00151A                     _DMA1_Initialize:
 45618                           	opt callstack 14
 45619                           
 45620                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 45621                           
 45622                           ; BSR set to: 59
 45623                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45624                           ;incstack = 0
 45625  00151A  0E00               	movlw	0
 45626  00151C  013B               	movlb	59	; () banked
 45627  00151E  6FF9               	movwf	249,b	;volatile
 45628  001520  0E10               	movlw	16
 45629  001522  6FFA               	movwf	250,b	;volatile
 45630  001524  0E00               	movlw	0
 45631  001526  6FFB               	movwf	251,b	;volatile
 45632                           
 45633                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 45634  001528  0E3D               	movlw	61
 45635  00152A  6FF1               	movwf	241,b	;volatile
 45636  00152C  0E11               	movlw	17
 45637  00152E  6FF0               	movwf	240,b	;volatile
 45638                           
 45639                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 45640  001530  0E03               	movlw	3
 45641  001532  6FFD               	movwf	253,b	;volatile
 45642                           
 45643                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 45644  001534  0E00               	movlw	0
 45645  001536  6FF8               	movwf	248,b	;volatile
 45646  001538  0E01               	movlw	1
 45647  00153A  6FF7               	movwf	247,b	;volatile
 45648                           
 45649                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 45650  00153C  0E00               	movlw	0
 45651  00153E  6FEF               	movwf	239,b	;volatile
 45652  001540  0E01               	movlw	1
 45653  001542  6FEE               	movwf	238,b	;volatile
 45654                           
 45655                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 45656  001544  0E15               	movlw	21
 45657  001546  6FFF               	movwf	255,b	;volatile
 45658                           
 45659                           ; BSR set to: 59
 45660                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 45661  001548  6BFE               	clrf	254,b	;volatile
 45662                           
 45663                           ; BSR set to: 59
 45664                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 45665  00154A  0139               	movlb	57	; () banked
 45666  00154C  93A2               	bcf	162,1,b	;volatile
 45667                           
 45668                           ; BSR set to: 57
 45669                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 45670  00154E  91A2               	bcf	162,0,b	;volatile
 45671                           
 45672                           ; BSR set to: 57
 45673                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 45674  001550  97A2               	bcf	162,3,b	;volatile
 45675                           
 45676                           ; BSR set to: 57
 45677                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 45678  001552  95A2               	bcf	162,2,b	;volatile
 45679                           
 45680                           ; BSR set to: 57
 45681                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 45682  001554  8392               	bsf	146,1,b	;volatile
 45683                           
 45684                           ; BSR set to: 57
 45685                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 45686  001556  8192               	bsf	146,0,b	;volatile
 45687                           
 45688                           ; BSR set to: 57
 45689                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 45690  001558  8792               	bsf	146,3,b	;volatile
 45691                           
 45692                           ; BSR set to: 57
 45693                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 45694  00155A  8592               	bsf	146,2,b	;volatile
 45695                           
 45696                           ; BSR set to: 57
 45697                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 45698  00155C  6BF1               	clrf	241,b	;volatile
 45699                           
 45700                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 45701  00155E  0E01               	movlw	1
 45702  001560  6FF2               	movwf	242,b	;volatile
 45703                           
 45704                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 45705  001562  0E04               	movlw	4
 45706  001564  6FF3               	movwf	243,b	;volatile
 45707                           
 45708                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 45709  001566  0E02               	movlw	2
 45710  001568  6FF4               	movwf	244,b	;volatile
 45711                           
 45712                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 45713  00156A  0E03               	movlw	3
 45714  00156C  6FF7               	movwf	247,b	;volatile
 45715  00156E  9ED2               	bcf	16338,7,c	;# 
 45716  001570  0139               	banksel	14831	;# 
 45717  001572  0E55               	movlw	85	;# 
 45718  001574  6FEF               	movwf	14831,b	;# 
 45719  001576  0EAA               	movlw	170	;# 
 45720  001578  6FEF               	movwf	14831,b	;# 
 45721  00157A  81EF               	bsf	14831,0,b	;# 
 45722  00157C  8ED2               	bsf	16338,7,c	;# 
 45723                           
 45724                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 45725  00157E  013B               	movlb	59	; () banked
 45726  001580  6BFC               	clrf	252,b	;volatile
 45727                           
 45728                           ; BSR set to: 59
 45729                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45730  001582  0012               	return		;funcret
 45731  001584                     __end_of_DMA1_Initialize:
 45732                           	opt callstack 0
 45733                           
 45734 ;; *************** function _CRC_Initialize *****************
 45735 ;; Defined at:
 45736 ;;		line 76 in file "mcc_generated_files/crc.c"
 45737 ;; Parameters:    Size  Location     Type
 45738 ;;		None
 45739 ;; Auto vars:     Size  Location     Type
 45740 ;;  seed            2  [STACK] unsigned short 
 45741 ;;  poly            2  [STACK] unsigned short 
 45742 ;; Return value:  Size  Location     Type
 45743 ;;                  1  [STACK] void 
 45744 ;; Registers used:
 45745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 45746 ;; Tracked objects:
 45747 ;;		On entry : 0/39
 45748 ;;		On exit  : 3F/0
 45749 ;;		Unchanged: 0/0
 45750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45755 ;;Total ram usage:        0 bytes
 45756 ;; Hardware stack levels used:    1
 45757 ;; Hardware stack levels required when called:   15
 45758 ;; This function calls:
 45759 ;;		Nothing
 45760 ;; This function is called by:
 45761 ;;		_SYSTEM_Initialize
 45762 ;;		_read_cal_data
 45763 ;;		_write_cal_data
 45764 ;; This function uses a reentrant model
 45765 ;;
 45766                           
 45767                           	psect	text180
 45768  001016                     __ptext180:
 45769                           	opt callstack 0
 45770  001016                     _CRC_Initialize:
 45771                           	opt callstack 0
 45772                           
 45773                           ; BSR set to: 59
 45774                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45775  001016  52E6               	movf	postinc1,f,c
 45776  001018  52E6               	movf	postinc1,f,c
 45777  00101A  52E6               	movf	postinc1,f,c
 45778  00101C  52E6               	movf	postinc1,f,c
 45779                           
 45780                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 45781                           
 45782                           ;incstack = 0
 45783  00101E  0E80               	movlw	128
 45784  001020  0139               	movlb	57	; () banked
 45785  001022  6F68               	movwf	104,b	;volatile
 45786                           
 45787                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (0 << 4) | (7);
 45788  001024  0E07               	movlw	7
 45789  001026  6F69               	movwf	105,b	;volatile
 45790                           
 45791                           ; BSR set to: 57
 45792                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 45793  001028  6B62               	clrf	98,b	;volatile
 45794                           
 45795                           ; BSR set to: 57
 45796                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 45797  00102A  6B63               	clrf	99,b	;volatile
 45798                           
 45799                           ; BSR set to: 57
 45800                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 45801  00102C  6B7C               	clrf	124,b	;volatile
 45802                           
 45803                           ; BSR set to: 57
 45804                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 45805  00102E  6B78               	clrf	120,b	;volatile
 45806                           
 45807                           ; BSR set to: 57
 45808                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 45809  001030  6B77               	clrf	119,b	;volatile
 45810                           
 45811                           ; BSR set to: 57
 45812                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 45813  001032  6B76               	clrf	118,b	;volatile
 45814                           
 45815                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 45816  001034  0E3F               	movlw	63
 45817  001036  6F7B               	movwf	123,b	;volatile
 45818                           
 45819                           ; BSR set to: 57
 45820                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 45821  001038  697A               	setf	122,b	;volatile
 45822                           
 45823                           ; BSR set to: 57
 45824                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 45825  00103A  6979               	setf	121,b	;volatile
 45826                           
 45827                           ; BSR set to: 57
 45828                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 45829  00103C  6B7D               	clrf	125,b	;volatile
 45830                           
 45831                           ; BSR set to: 57
 45832                           ;mcc_generated_files/crc.c: 106:     poly = 213;
 45833  00103E  0ED5               	movlw	213
 45834  001040  6E34               	movwf	(btemp+10)^0,c
 45835  001042  0E00               	movlw	0
 45836  001044  6E35               	movwf	(btemp+11)^0,c
 45837                           
 45838                           ;stkvar	_poly @ sp[(-4)+2]
 45839  001046  0EFE               	movlw	-2
 45840  001048  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 45841  00104E  0EFF               	movlw	-1
 45842  001050  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 45843                           
 45844                           ; BSR set to: 57
 45845                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 45846                           ;stkvar	_poly @ sp[(-4)+2]
 45847  001056  0EFF               	movlw	255
 45848  001058  24E1               	addwf	fsr1l,w,c
 45849  00105A  6ED9               	movwf	fsr2l,c
 45850  00105C  0EFF               	movlw	255
 45851  00105E  20E2               	addwfc	fsr1h,w,c
 45852  001060  6EDA               	movwf	fsr2h,c
 45853  001062  50DF               	movf	indf2,w,c
 45854  001064  6F67               	movwf	103,b	;volatile
 45855                           
 45856                           ; BSR set to: 57
 45857                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 45858  001066  0ED5               	movlw	213
 45859  001068  6F66               	movwf	102,b	;volatile
 45860                           
 45861                           ; BSR set to: 57
 45862                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 45863                           ;stkvar	_seed @ sp[(-4)+0]
 45864  00106A  0EFC               	movlw	-4
 45865  00106C  6AE3               	clrf	plusw1,c
 45866  00106E  0EFD               	movlw	-3
 45867  001070  6AE3               	clrf	plusw1,c
 45868                           
 45869                           ; BSR set to: 57
 45870                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 45871                           ;stkvar	_seed @ sp[(-4)+0]
 45872  001072  0EFD               	movlw	253
 45873  001074  24E1               	addwf	fsr1l,w,c
 45874  001076  6ED9               	movwf	fsr2l,c
 45875  001078  0EFF               	movlw	255
 45876  00107A  20E2               	addwfc	fsr1h,w,c
 45877  00107C  6EDA               	movwf	fsr2h,c
 45878  00107E  50DF               	movf	indf2,w,c
 45879  001080  6F63               	movwf	99,b	;volatile
 45880                           
 45881                           ; BSR set to: 57
 45882                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 45883  001082  6B62               	clrf	98,b	;volatile
 45884                           
 45885                           ; BSR set to: 57
 45886                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 45887  001084  3969               	swapf	105,w,b	;volatile
 45888  001086  0B0F               	andlw	15
 45889  001088  6E35               	movwf	(btemp+11)^0,c
 45890  00108A  2835               	incf	(btemp+11)^0,w,c
 45891  00108C  0100               	movlb	0	; () banked
 45892  00108E  6FE2               	movwf	_crcObj& (0+255),b
 45893                           
 45894                           ; BSR set to: 0
 45895                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 45896  001090  0139               	movlb	57	; () banked
 45897  001092  5169               	movf	105,w,b	;volatile
 45898  001094  0B0F               	andlw	15
 45899  001096  6E35               	movwf	(btemp+11)^0,c
 45900  001098  2835               	incf	(btemp+11)^0,w,c
 45901  00109A  0100               	movlb	0	; () banked
 45902  00109C  6FE3               	movwf	(_crcObj+1)& (0+255),b
 45903                           
 45904                           ; BSR set to: 0
 45905                           ; _CRC_Initialize: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45906  00109E  52E5               	movf	postdec1,f,c
 45907  0010A0  52E5               	movf	postdec1,f,c
 45908  0010A2  52E5               	movf	postdec1,f,c
 45909  0010A4  52E5               	movf	postdec1,f,c
 45910  0010A6  0012               	return		;funcret
 45911  0010A8                     __end_of_CRC_Initialize:
 45912                           	opt callstack 0
 45913                           
 45914 ;; *************** function _CLKREF_Initialize *****************
 45915 ;; Defined at:
 45916 ;;		line 58 in file "mcc_generated_files/clkref.c"
 45917 ;; Parameters:    Size  Location     Type
 45918 ;;		None
 45919 ;; Auto vars:     Size  Location     Type
 45920 ;;		None
 45921 ;; Return value:  Size  Location     Type
 45922 ;;                  1  [STACK] void 
 45923 ;; Registers used:
 45924 ;;		wreg, status,2
 45925 ;; Tracked objects:
 45926 ;;		On entry : 3F/3B
 45927 ;;		On exit  : 3F/3C
 45928 ;;		Unchanged: 0/0
 45929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45934 ;;Total ram usage:        0 bytes
 45935 ;; Hardware stack levels used:    1
 45936 ;; Hardware stack levels required when called:   15
 45937 ;; This function calls:
 45938 ;;		Nothing
 45939 ;; This function is called by:
 45940 ;;		_SYSTEM_Initialize
 45941 ;; This function uses a reentrant model
 45942 ;;
 45943                           
 45944                           	psect	text181
 45945  002A12                     __ptext181:
 45946                           	opt callstack 0
 45947  002A12                     _CLKREF_Initialize:
 45948                           	opt callstack 14
 45949                           
 45950                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 45951                           
 45952                           ; BSR set to: 0
 45953                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45954                           ;incstack = 0
 45955  002A12  013C               	movlb	60	; () banked
 45956  002A14  6BE6               	clrf	230,b	;volatile
 45957                           
 45958                           ; BSR set to: 60
 45959                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 45960  002A16  0E94               	movlw	148
 45961  002A18  6FE5               	movwf	229,b	;volatile
 45962                           
 45963                           ; BSR set to: 60
 45964                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 45965  002A1A  0012               	return		;funcret
 45966  002A1C                     __end_of_CLKREF_Initialize:
 45967                           	opt callstack 0
 45968                           
 45969 ;; *************** function _ADCC_Initialize *****************
 45970 ;; Defined at:
 45971 ;;		line 65 in file "mcc_generated_files/adcc.c"
 45972 ;; Parameters:    Size  Location     Type
 45973 ;;		None
 45974 ;; Auto vars:     Size  Location     Type
 45975 ;;		None
 45976 ;; Return value:  Size  Location     Type
 45977 ;;                  1  [STACK] void 
 45978 ;; Registers used:
 45979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 45980 ;; Tracked objects:
 45981 ;;		On entry : 3F/0
 45982 ;;		On exit  : 0/0
 45983 ;;		Unchanged: 0/0
 45984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45989 ;;Total ram usage:        0 bytes
 45990 ;; Hardware stack levels used:    1
 45991 ;; Hardware stack levels required when called:   16
 45992 ;; This function calls:
 45993 ;;		_ADCC_SetADIInterruptHandler
 45994 ;;		_ADCC_SetADTIInterruptHandler
 45995 ;; This function is called by:
 45996 ;;		_SYSTEM_Initialize
 45997 ;; This function uses a reentrant model
 45998 ;;
 45999                           
 46000                           	psect	text182
 46001  001584                     __ptext182:
 46002                           	opt callstack 0
 46003  001584                     _ADCC_Initialize:
 46004                           	opt callstack 13
 46005                           
 46006                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 46007                           
 46008                           ; BSR set to: 60
 46009                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46010                           ;incstack = 0
 46011  001584  013E               	movlb	62	; () banked
 46012  001586  6BDE               	clrf	222,b	;volatile
 46013                           
 46014                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 46015  001588  6BDF               	clrf	223,b	;volatile
 46016                           
 46017                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 46018  00158A  6BE0               	clrf	224,b	;volatile
 46019                           
 46020                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 46021  00158C  6BE1               	clrf	225,b	;volatile
 46022                           
 46023                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 46024  00158E  6BE4               	clrf	228,b	;volatile
 46025                           
 46026                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 46027  001590  6BE5               	clrf	229,b	;volatile
 46028                           
 46029                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 46030  001592  6BEA               	clrf	234,b	;volatile
 46031                           
 46032                           ; BSR set to: 62
 46033                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 46034  001594  0E40               	movlw	64
 46035  001596  6FEC               	movwf	236,b	;volatile
 46036                           
 46037                           ; BSR set to: 62
 46038                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 46039  001598  6BF1               	clrf	241,b	;volatile
 46040                           
 46041                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 46042  00159A  0E20               	movlw	32
 46043  00159C  6FF3               	movwf	243,b	;volatile
 46044                           
 46045                           ; BSR set to: 62
 46046                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 46047  00159E  6BF4               	clrf	244,b	;volatile
 46048                           
 46049                           ; BSR set to: 62
 46050                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 46051  0015A0  6BF5               	clrf	245,b	;volatile
 46052                           
 46053                           ; BSR set to: 62
 46054                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 46055  0015A2  6BF6               	clrf	246,b	;volatile
 46056                           
 46057                           ; BSR set to: 62
 46058                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 46059  0015A4  6BF7               	clrf	247,b	;volatile
 46060                           
 46061                           ; BSR set to: 62
 46062                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 46063  0015A6  6BF9               	clrf	249,b	;volatile
 46064                           
 46065                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 46066  0015A8  0E5B               	movlw	91
 46067  0015AA  6FFA               	movwf	250,b	;volatile
 46068                           
 46069                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 46070  0015AC  0E27               	movlw	39
 46071  0015AE  6FFB               	movwf	251,b	;volatile
 46072                           
 46073                           ; BSR set to: 62
 46074                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 46075  0015B0  6BFC               	clrf	252,b	;volatile
 46076                           
 46077                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 46078  0015B2  0E02               	movlw	2
 46079  0015B4  6FFD               	movwf	253,b	;volatile
 46080                           
 46081                           ; BSR set to: 62
 46082                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 46083  0015B6  6BFE               	clrf	254,b	;volatile
 46084                           
 46085                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 46086  0015B8  0E07               	movlw	7
 46087  0015BA  6FFF               	movwf	255,b	;volatile
 46088                           
 46089                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 46090  0015BC  0E84               	movlw	132
 46091  0015BE  6FF8               	movwf	248,b	;volatile
 46092                           
 46093                           ; BSR set to: 62
 46094                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 46095  0015C0  0139               	movlb	57	; () banked
 46096  0015C2  95A1               	bcf	161,2,b	;volatile
 46097                           
 46098                           ; BSR set to: 57
 46099                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 46100  0015C4  8591               	bsf	145,2,b	;volatile
 46101                           
 46102                           ; BSR set to: 57
 46103                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 46104  0015C6  0EA2               	movlw	low _ADCC_DefaultInterruptHandler
 46105  0015C8  6EE6               	movwf	postinc1,c
 46106  0015CA  0E2A               	movlw	high _ADCC_DefaultInterruptHandler
 46107  0015CC  6EE6               	movwf	postinc1,c
 46108  0015CE  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 46109  0015D0  6EE6               	movwf	postinc1,c
 46110  0015D2  ECEF  F012         	call	_ADCC_SetADIInterruptHandler	;wreg free
 46111                           
 46112                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 46113  0015D6  0139               	movlb	57	; () banked
 46114  0015D8  97A1               	bcf	161,3,b	;volatile
 46115                           
 46116                           ; BSR set to: 57
 46117                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 46118  0015DA  8791               	bsf	145,3,b	;volatile
 46119                           
 46120                           ; BSR set to: 57
 46121                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 46122  0015DC  0EA2               	movlw	low _ADCC_DefaultInterruptHandler
 46123  0015DE  6EE6               	movwf	postinc1,c
 46124  0015E0  0E2A               	movlw	high _ADCC_DefaultInterruptHandler
 46125  0015E2  6EE6               	movwf	postinc1,c
 46126  0015E4  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 46127  0015E6  6EE6               	movwf	postinc1,c
 46128  0015E8  ECDB  F012         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 46129                           
 46130                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 46131  0015EC  0012               	return		;funcret
 46132  0015EE                     __end_of_ADCC_Initialize:
 46133                           	opt callstack 0
 46134                           
 46135 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 46136 ;; Defined at:
 46137 ;;		line 336 in file "mcc_generated_files/adcc.c"
 46138 ;; Parameters:    Size  Location     Type
 46139 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 46140 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 46141 ;; Auto vars:     Size  Location     Type
 46142 ;;		None
 46143 ;; Return value:  Size  Location     Type
 46144 ;;                  1  [STACK] void 
 46145 ;; Registers used:
 46146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46147 ;; Tracked objects:
 46148 ;;		On entry : 0/1
 46149 ;;		On exit  : 0/0
 46150 ;;		Unchanged: 0/0
 46151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46156 ;;Total ram usage:        0 bytes
 46157 ;; Hardware stack levels used:    1
 46158 ;; Hardware stack levels required when called:   15
 46159 ;; This function calls:
 46160 ;;		Nothing
 46161 ;; This function is called by:
 46162 ;;		_ADCC_Initialize
 46163 ;;		_start_adc_scan
 46164 ;; This function uses a reentrant model
 46165 ;;
 46166                           
 46167                           	psect	text183
 46168  0025B6                     __ptext183:
 46169                           	opt callstack 0
 46170  0025B6                     _ADCC_SetADTIInterruptHandler:
 46171                           	opt callstack 14
 46172                           
 46173                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 46174                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46175                           
 46176                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46177                           ;incstack = 0
 46178  0025B6  50E1               	movf	fsr1l,w,c
 46179  0025B8  0FFD               	addlw	-3
 46180  0025BA  6ED9               	movwf	fsr2l,c
 46181  0025BC  50E2               	movf	fsr1h,w,c
 46182  0025BE  6EDA               	movwf	fsr2h,c
 46183  0025C0  0EFF               	movlw	255
 46184  0025C2  22DA               	addwfc	fsr2h,f,c
 46185  0025C4  006F FF78  F0A1    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 46186  0025CA  006F FF78  F0A2    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 46187  0025D0  006F FF74  F0A3    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 46188                           
 46189                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 46190  0025D6  52E5               	movf	postdec1,f,c
 46191  0025D8  52E5               	movf	postdec1,f,c
 46192  0025DA  52E5               	movf	postdec1,f,c
 46193  0025DC  0012               	return		;funcret
 46194  0025DE                     __end_of_ADCC_SetADTIInterruptHandler:
 46195                           	opt callstack 0
 46196                           
 46197 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 46198 ;; Defined at:
 46199 ;;		line 323 in file "mcc_generated_files/adcc.c"
 46200 ;; Parameters:    Size  Location     Type
 46201 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 46202 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 46203 ;; Auto vars:     Size  Location     Type
 46204 ;;		None
 46205 ;; Return value:  Size  Location     Type
 46206 ;;                  1  [STACK] void 
 46207 ;; Registers used:
 46208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46209 ;; Tracked objects:
 46210 ;;		On entry : 7/1
 46211 ;;		On exit  : 0/0
 46212 ;;		Unchanged: 0/0
 46213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46218 ;;Total ram usage:        0 bytes
 46219 ;; Hardware stack levels used:    1
 46220 ;; Hardware stack levels required when called:   15
 46221 ;; This function calls:
 46222 ;;		Nothing
 46223 ;; This function is called by:
 46224 ;;		_ADCC_Initialize
 46225 ;;		_start_adc_scan
 46226 ;; This function uses a reentrant model
 46227 ;;
 46228                           
 46229                           	psect	text184
 46230  0025DE                     __ptext184:
 46231                           	opt callstack 0
 46232  0025DE                     _ADCC_SetADIInterruptHandler:
 46233                           	opt callstack 14
 46234                           
 46235                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 46236                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46237                           
 46238                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46239                           ;incstack = 0
 46240  0025DE  50E1               	movf	fsr1l,w,c
 46241  0025E0  0FFD               	addlw	-3
 46242  0025E2  6ED9               	movwf	fsr2l,c
 46243  0025E4  50E2               	movf	fsr1h,w,c
 46244  0025E6  6EDA               	movwf	fsr2h,c
 46245  0025E8  0EFF               	movlw	255
 46246  0025EA  22DA               	addwfc	fsr2h,f,c
 46247  0025EC  006F FF78  F0A4    	movff	postinc2,_ADCC_ADI_InterruptHandler
 46248  0025F2  006F FF78  F0A5    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 46249  0025F8  006F FF74  F0A6    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 46250                           
 46251                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 46252  0025FE  52E5               	movf	postdec1,f,c
 46253  002600  52E5               	movf	postdec1,f,c
 46254  002602  52E5               	movf	postdec1,f,c
 46255  002604  0012               	return		;funcret
 46256  002606                     __end_of_ADCC_SetADIInterruptHandler:
 46257                           	opt callstack 0
 46258                           
 46259 ;; *************** function _INT1_ISR *****************
 46260 ;; Defined at:
 46261 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 46262 ;; Parameters:    Size  Location     Type
 46263 ;;		None
 46264 ;; Auto vars:     Size  Location     Type
 46265 ;;		None
 46266 ;; Return value:  Size  Location     Type
 46267 ;;                  1    wreg      void 
 46268 ;; Registers used:
 46269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 46270 ;; Tracked objects:
 46271 ;;		On entry : 0/0
 46272 ;;		On exit  : 0/0
 46273 ;;		Unchanged: 0/0
 46274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46277 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46278 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46279 ;;Total ram usage:        4 bytes
 46280 ;; Hardware stack levels used:    1
 46281 ;; Hardware stack levels required when called:    5
 46282 ;; This function calls:
 46283 ;;		_INT1_CallBack
 46284 ;; This function is called by:
 46285 ;;		Interrupt level 1
 46286 ;; This function uses a non-reentrant model
 46287 ;;
 46288                           
 46289                           	psect	text185
 46290  002034                     __ptext185:
 46291                           	opt callstack 0
 46292  002034                     _INT1_ISR:
 46293                           	opt callstack 12
 46294                           
 46295                           ;incstack = 0
 46296  002034  006F FF60  F007    	movff	status,??_INT1_ISR
 46297  00203A  0060  F0A8  F008   	movff	btemp,??_INT1_ISR+1
 46298  002040  0060  F0D0  F009   	movff	btemp+10,??_INT1_ISR+2
 46299  002046  0060  F0D4  F00A   	movff	btemp+11,??_INT1_ISR+3
 46300  00204C  EE16  F196         	lfsr	1,___intlo_sp
 46301                           
 46302                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 46303  002050  0139               	movlb	57	; () banked
 46304  002052  91A5               	bcf	165,0,b	;volatile
 46305                           
 46306                           ; BSR set to: 57
 46307                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 46308  002054  EC52  F013         	call	_INT1_CallBack	;wreg free
 46309  002058  0060  F028  F035   	movff	??_INT1_ISR+3,btemp+11
 46310  00205E  0060  F024  F034   	movff	??_INT1_ISR+2,btemp+10
 46311  002064  0060  F020  F02A   	movff	??_INT1_ISR+1,btemp
 46312  00206A  0060  F01F  FFD8   	movff	??_INT1_ISR,status
 46313  002070  0011               	retfie		f
 46314  002072                     __end_of_INT1_ISR:
 46315                           	opt callstack 0
 46316                           
 46317 ;; *************** function _INT1_CallBack *****************
 46318 ;; Defined at:
 46319 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 46320 ;; Parameters:    Size  Location     Type
 46321 ;;		None
 46322 ;; Auto vars:     Size  Location     Type
 46323 ;;		None
 46324 ;; Return value:  Size  Location     Type
 46325 ;;                  1  [STACK] void 
 46326 ;; Registers used:
 46327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 46328 ;; Tracked objects:
 46329 ;;		On entry : 3F/39
 46330 ;;		On exit  : 0/0
 46331 ;;		Unchanged: 0/0
 46332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46337 ;;Total ram usage:        0 bytes
 46338 ;; Hardware stack levels used:    1
 46339 ;; Hardware stack levels required when called:    4
 46340 ;; This function calls:
 46341 ;;		Absolute function
 46342 ;;		_INT1_DefaultInterruptHandler
 46343 ;;		_switch_handler
 46344 ;; This function is called by:
 46345 ;;		_INT1_ISR
 46346 ;; This function uses a reentrant model
 46347 ;;
 46348                           
 46349                           	psect	text186
 46350  0026A4                     __ptext186:
 46351                           	opt callstack 0
 46352  0026A4                     _INT1_CallBack:
 46353                           	opt callstack 12
 46354                           
 46355                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 46356                           
 46357                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46358                           ;incstack = 0
 46359  0026A4  0100               	movlb	0	; () banked
 46360  0026A6  51B0               	movf	_INT1_InterruptHandler& (0+255),w,b
 46361  0026A8  11B1               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 46362  0026AA  11B2               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 46363  0026AC  B4D8               	btfsc	status,2,c
 46364  0026AE  0012               	return	
 46365                           
 46366                           ; BSR set to: 0
 46367                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 46368  0026B0  D801               	call	u1313_28
 46369  0026B2  0012               	return	
 46370  0026B4                     u1313_28:
 46371  0026B4  0005               	push	
 46372  0026B6  6EFA               	movwf	pclath,c
 46373  0026B8  51B0               	movf	_INT1_InterruptHandler& (0+255),w,b
 46374  0026BA  6EFD               	movwf	tosl,c
 46375  0026BC  51B1               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 46376  0026BE  6EFE               	movwf	tosh,c
 46377  0026C0  51B2               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 46378  0026C2  6EFF               	movwf	tosu,c
 46379  0026C4  50FA               	movf	pclath,w,c
 46380  0026C6  0012               	return		;indir
 46381  0026C8                     __end_of_INT1_CallBack:
 46382                           	opt callstack 0
 46383                           
 46384 ;; *************** function _INT1_DefaultInterruptHandler *****************
 46385 ;; Defined at:
 46386 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 46387 ;; Parameters:    Size  Location     Type
 46388 ;;		None
 46389 ;; Auto vars:     Size  Location     Type
 46390 ;;		None
 46391 ;; Return value:  Size  Location     Type
 46392 ;;                  1  [STACK] void 
 46393 ;; Registers used:
 46394 ;;		None
 46395 ;; Tracked objects:
 46396 ;;		On entry : 3F/0
 46397 ;;		On exit  : 0/0
 46398 ;;		Unchanged: 0/0
 46399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46404 ;;Total ram usage:        0 bytes
 46405 ;; Hardware stack levels used:    1
 46406 ;; Hardware stack levels required when called:    3
 46407 ;; This function calls:
 46408 ;;		Nothing
 46409 ;; This function is called by:
 46410 ;;		_EXT_INT_Initialize
 46411 ;;		_INT1_CallBack
 46412 ;; This function uses a reentrant model
 46413 ;;
 46414                           
 46415                           	psect	text187
 46416  01FFFE                     __ptext187:
 46417                           	opt callstack 0
 46418  01FFFE                     _INT1_DefaultInterruptHandler:
 46419                           	opt callstack 12
 46420                           
 46421                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 46422                           
 46423                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46424                           ;incstack = 0
 46425  01FFFE  0012               	return		;funcret
 46426  020000                     __end_of_INT1_DefaultInterruptHandler:
 46427                           	opt callstack 0
 46428                           
 46429 ;; *************** function _switch_handler *****************
 46430 ;; Defined at:
 46431 ;;		line 58 in file "dio.c"
 46432 ;; Parameters:    Size  Location     Type
 46433 ;;		None
 46434 ;; Auto vars:     Size  Location     Type
 46435 ;;  i               1  [STACK] unsigned char 
 46436 ;;  sw_value        1  [STACK] unsigned char 
 46437 ;; Return value:  Size  Location     Type
 46438 ;;                  1  [STACK] void 
 46439 ;; Registers used:
 46440 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 46441 ;; Tracked objects:
 46442 ;;		On entry : 3F/0
 46443 ;;		On exit  : 0/0
 46444 ;;		Unchanged: 0/0
 46445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46450 ;;Total ram usage:        0 bytes
 46451 ;; Hardware stack levels used:    1
 46452 ;; Hardware stack levels required when called:    3
 46453 ;; This function calls:
 46454 ;;		Nothing
 46455 ;; This function is called by:
 46456 ;;		_start_switch_handler
 46457 ;;		_INT1_CallBack
 46458 ;; This function uses a reentrant model
 46459 ;;
 46460                           
 46461                           	psect	text188
 46462  01F1A6                     __ptext188:
 46463                           	opt callstack 0
 46464  01F1A6                     _switch_handler:
 46465                           	opt callstack 0
 46466                           
 46467                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46468  01F1A6  52E6               	movf	postinc1,f,c
 46469  01F1A8  52E6               	movf	postinc1,f,c
 46470                           
 46471                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 46472                           ;stkvar	_i @ sp[(-2)+0]
 46473                           
 46474                           ;incstack = 0
 46475  01F1AA  0EFE               	movlw	-2
 46476  01F1AC  6AE3               	clrf	plusw1,c
 46477  01F1AE  9ABF               	bcf	191,5,c	;volatile
 46478                           
 46479                           ;dio.c: 72:  __nop();
 46480  01F1B0  F000               	nop	
 46481                           
 46482                           ;dio.c: 73:  __nop();
 46483  01F1B2  F000               	nop	
 46484                           
 46485                           ;dio.c: 74:  __nop();
 46486  01F1B4  F000               	nop	
 46487                           
 46488                           ;dio.c: 75:  __nop();
 46489  01F1B6  F000               	nop	
 46490                           
 46491                           ;dio.c: 76:  __nop();
 46492  01F1B8  F000               	nop	
 46493                           
 46494                           ;dio.c: 77:  __nop();
 46495  01F1BA  F000               	nop	
 46496  01F1BC  D016               	goto	l13734
 46497  01F1BE                     l13720:
 46498                           
 46499                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 46500  01F1BE  A6CF               	btfss	207,3,c	;volatile
 46501  01F1C0  D00E               	goto	u1279_20
 46502  01F1C2  D00A               	goto	u1279_21
 46503  01F1C4                     u1277_28:
 46504                           
 46505                           ;stkvar	_sw_value @ sp[(-2)+1]
 46506  01F1C4  0EFF               	movlw	-1
 46507  01F1C6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 46508                           
 46509                           ;dio.c: 83:    break;
 46510  01F1CC  D027               	goto	l13736
 46511  01F1CE                     l13722:
 46512                           
 46513                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 46514  01F1CE  A4CF               	btfss	207,2,c	;volatile
 46515  01F1D0  D006               	goto	u1279_20
 46516  01F1D2  D002               	goto	u1279_21
 46517  01F1D4                     l13724:
 46518                           
 46519                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 46520  01F1D4  A6CD               	btfss	205,3,c	;volatile
 46521  01F1D6  D003               	goto	u1279_20
 46522  01F1D8                     u1279_21:
 46523  01F1D8  6A35               	clrf	(btemp+11)^0,c
 46524  01F1DA  2A35               	incf	(btemp+11)^0,f,c
 46525  01F1DC  D7F3               	goto	u1277_28
 46526  01F1DE                     u1279_20:
 46527  01F1DE  6A35               	clrf	(btemp+11)^0,c
 46528  01F1E0  D7F1               	goto	u1277_28
 46529  01F1E2                     l13726:
 46530                           
 46531                           ;dio.c: 91:    sw_value = 1;
 46532                           ;stkvar	_sw_value @ sp[(-2)+1]
 46533  01F1E2  0EFF               	movlw	-1
 46534  01F1E4  6AE3               	clrf	plusw1,c
 46535  01F1E6  2AE3               	incf	plusw1,f,c
 46536                           
 46537                           ;dio.c: 92:    break;
 46538  01F1E8  D019               	goto	l13736
 46539  01F1EA                     l13734:
 46540                           
 46541                           ;stkvar	_i @ sp[(-2)+0]
 46542  01F1EA  0EFE               	movlw	-2
 46543  01F1EC  50E3               	movf	plusw1,w,c
 46544  01F1EE  6E34               	movwf	(btemp+10)^0,c
 46545  01F1F0  6A35               	clrf	(btemp+11)^0,c
 46546                           
 46547                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 46548                           ; Switch size 1, requested type "simple"
 46549                           ; Number of cases is 1, Range of values is 0 to 0
 46550                           ; switch strategies available:
 46551                           ; Name         Instructions Cycles
 46552                           ; simple_byte            4     3 (average)
 46553                           ;	Chosen strategy is simple_byte
 46554  01F1F2  5035               	movf	(btemp+11)^0,w,c
 46555  01F1F4  0A00               	xorlw	0	; case 0
 46556  01F1F6  A4D8               	btfss	status,2,c
 46557  01F1F8  D7F4               	goto	l13726
 46558                           
 46559                           ; Switch size 1, requested type "simple"
 46560                           ; Number of cases is 5, Range of values is 0 to 4
 46561                           ; switch strategies available:
 46562                           ; Name         Instructions Cycles
 46563                           ; simple_byte           16     9 (average)
 46564                           ;	Chosen strategy is simple_byte
 46565  01F1FA  5034               	movf	(btemp+10)^0,w,c
 46566  01F1FC  0A00               	xorlw	0	; case 0
 46567  01F1FE  B4D8               	btfsc	status,2,c
 46568  01F200  D7F0               	goto	l13726
 46569  01F202  0A01               	xorlw	1	; case 1
 46570  01F204  B4D8               	btfsc	status,2,c
 46571  01F206  D7ED               	goto	l13726
 46572  01F208  0A03               	xorlw	3	; case 2
 46573  01F20A  B4D8               	btfsc	status,2,c
 46574  01F20C  D7E0               	goto	l13722
 46575  01F20E  0A01               	xorlw	1	; case 3
 46576  01F210  B4D8               	btfsc	status,2,c
 46577  01F212  D7D5               	goto	l13720
 46578  01F214  0A07               	xorlw	7	; case 4
 46579  01F216  B4D8               	btfsc	status,2,c
 46580  01F218  D7DD               	goto	l13724
 46581  01F21A  D7E3               	goto	l13726
 46582  01F21C                     l13736:
 46583                           
 46584                           ;dio.c: 102:   if (sw_value) {
 46585                           ;stkvar	_sw_value @ sp[(-2)+1]
 46586  01F21C  0EFF               	movlw	-1
 46587  01F21E  50E3               	movf	plusw1,w,c
 46588  01F220  B4D8               	btfsc	status,2,c
 46589  01F222  D018               	goto	l13742
 46590                           
 46591                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 46592                           ;stkvar	_i @ sp[(-2)+0]
 46593  01F224  0EFE               	movlw	-2
 46594  01F226  50E3               	movf	plusw1,w,c
 46595  01F228  0D05               	mullw	5
 46596  01F22A  0EA4               	movlw	low _S
 46597  01F22C  24F3               	addwf	243,w,c
 46598  01F22E  6ED9               	movwf	fsr2l,c
 46599  01F230  0E01               	movlw	high _S
 46600  01F232  20F4               	addwfc	prodh,w,c
 46601  01F234  6EDA               	movwf	fsr2h,c
 46602  01F236  04DE               	decf	postinc2,w,c
 46603  01F238  A4D8               	btfss	status,2,c
 46604  01F23A  D049               	goto	l13750
 46605                           
 46606                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 46607                           ;stkvar	_i @ sp[(-2)+0]
 46608  01F23C  0EFE               	movlw	-2
 46609  01F23E  50E3               	movf	plusw1,w,c
 46610  01F240  0D05               	mullw	5
 46611  01F242  0EA4               	movlw	low _S
 46612  01F244  24F3               	addwf	243,w,c
 46613  01F246  6ED9               	movwf	fsr2l,c
 46614  01F248  0E01               	movlw	high _S
 46615  01F24A  20F4               	addwfc	prodh,w,c
 46616  01F24C  6EDA               	movwf	fsr2h,c
 46617  01F24E  0E00               	movlw	0
 46618  01F250  6EDF               	movwf	indf2,c
 46619  01F252  D03D               	goto	l13750
 46620  01F254                     l13742:
 46621                           
 46622                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 46623                           ;stkvar	_i @ sp[(-2)+0]
 46624  01F254  0EFE               	movlw	-2
 46625  01F256  50E3               	movf	plusw1,w,c
 46626  01F258  0D05               	mullw	5
 46627  01F25A  0EA4               	movlw	low _S
 46628  01F25C  24F3               	addwf	243,w,c
 46629  01F25E  6ED9               	movwf	fsr2l,c
 46630  01F260  0E01               	movlw	high _S
 46631  01F262  20F4               	addwfc	prodh,w,c
 46632  01F264  6EDA               	movwf	fsr2h,c
 46633  01F266  50DF               	movf	indf2,w,c
 46634  01F268  A4D8               	btfss	status,2,c
 46635  01F26A  D031               	goto	l13750
 46636                           
 46637                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 46638                           ;stkvar	_i @ sp[(-2)+0]
 46639  01F26C  0EFE               	movlw	-2
 46640  01F26E  50E3               	movf	plusw1,w,c
 46641  01F270  0D05               	mullw	5
 46642  01F272  0EA4               	movlw	low _S
 46643  01F274  24F3               	addwf	243,w,c
 46644  01F276  6ED9               	movwf	fsr2l,c
 46645  01F278  0E01               	movlw	high _S
 46646  01F27A  20F4               	addwfc	prodh,w,c
 46647  01F27C  6EDA               	movwf	fsr2h,c
 46648  01F27E  0E01               	movlw	1
 46649  01F280  6EDF               	movwf	indf2,c
 46650                           
 46651                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 46652  01F282  EE20  F2B8         	lfsr	2,_V+177	;volatile
 46653                           
 46654                           ;stkvar	_i @ sp[(-2)+0]
 46655  01F286  0EFE               	movlw	-2
 46656  01F288  50E3               	movf	plusw1,w,c
 46657  01F28A  0D05               	mullw	5
 46658  01F28C  0EA5               	movlw	low (_S+1)
 46659  01F28E  24F3               	addwf	243,w,c
 46660  01F290  6EE9               	movwf	fsr0l,c
 46661  01F292  0E01               	movlw	high (_S+1)
 46662  01F294  20F4               	addwfc	prodh,w,c
 46663  01F296  6EEA               	movwf	fsr0h,c
 46664  01F298  006F FF7B FFEE     	movff	postinc2,postinc0
 46665  01F29E  006F FF7B FFEE     	movff	postinc2,postinc0
 46666  01F2A4  006F FF7B FFEE     	movff	postinc2,postinc0
 46667  01F2AA  006F FF7B FFEE     	movff	postinc2,postinc0
 46668                           
 46669                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 46670                           ;stkvar	_i @ sp[(-2)+0]
 46671  01F2B0  0EFE               	movlw	-2
 46672  01F2B2  006F FF8C  F035    	movff	plusw1,btemp+11
 46673  01F2B8  0E01               	movlw	1
 46674  01F2BA  6E34               	movwf	(btemp+10)^0,c
 46675  01F2BC  2A35               	incf	(btemp+11)^0,f,c
 46676  01F2BE  D002               	goto	u1283_24
 46677  01F2C0                     u1283_25:
 46678  01F2C0  90D8               	bcf	status,0,c
 46679  01F2C2  3634               	rlcf	(btemp+10)^0,f,c
 46680  01F2C4                     u1283_24:
 46681  01F2C4  2E35               	decfsz	(btemp+11)^0,f,c
 46682  01F2C6  D7FC               	goto	u1283_25
 46683  01F2C8  5034               	movf	(btemp+10)^0,w,c
 46684  01F2CA  0101               	movlb	1	; () banked
 46685  01F2CC  13CC               	iorwf	(_S+40)& (0+255),f,b	;volatile
 46686  01F2CE                     l13750:
 46687                           
 46688                           ;dio.c: 113:  } while (++i < 6);
 46689                           ;stkvar	_i @ sp[(-2)+0]
 46690  01F2CE  0EFE               	movlw	-2
 46691  01F2D0  2AE3               	incf	plusw1,f,c
 46692  01F2D2  0EFE               	movlw	-2
 46693  01F2D4  006F FF8C  F02A    	movff	plusw1,btemp
 46694  01F2DA  0E05               	movlw	5
 46695  01F2DC  642A               	cpfsgt	btemp^0,c
 46696  01F2DE  D785               	goto	l13734
 46697                           
 46698                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 46699  01F2E0  8ABF               	bsf	191,5,c	;volatile
 46700                           
 46701                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 46702  01F2E2  52E5               	movf	postdec1,f,c
 46703  01F2E4  52E5               	movf	postdec1,f,c
 46704  01F2E6  0012               	return		;funcret
 46705  01F2E8                     __end_of_switch_handler:
 46706                           	opt callstack 0
 46707                           
 46708 ;; *************** function _TMR5_ISR *****************
 46709 ;; Defined at:
 46710 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 46711 ;; Parameters:    Size  Location     Type
 46712 ;;		None
 46713 ;; Auto vars:     Size  Location     Type
 46714 ;;		None
 46715 ;; Return value:  Size  Location     Type
 46716 ;;                  1    wreg      void 
 46717 ;; Registers used:
 46718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 46719 ;; Tracked objects:
 46720 ;;		On entry : 0/0
 46721 ;;		On exit  : 3F/0
 46722 ;;		Unchanged: 0/0
 46723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46726 ;;      Temps:         31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46727 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46728 ;;Total ram usage:       31 bytes
 46729 ;; Hardware stack levels used:    1
 46730 ;; Hardware stack levels required when called:    9
 46731 ;; This function calls:
 46732 ;;		_TMR5_CallBack
 46733 ;;		_TMR5_WriteTimer
 46734 ;; This function is called by:
 46735 ;;		Interrupt level 1
 46736 ;; This function uses a non-reentrant model
 46737 ;;
 46738                           
 46739                           	psect	text189
 46740  01DBD8                     __ptext189:
 46741                           	opt callstack 0
 46742  01DBD8                     _TMR5_ISR:
 46743                           	opt callstack 8
 46744                           
 46745                           ;incstack = 0
 46746  01DBD8  006F FF60  F00D    	movff	status,??_TMR5_ISR+2
 46747  01DBDE  0060  F0A8  F00E   	movff	btemp,??_TMR5_ISR+3
 46748  01DBE4  0060  F0AC  F00F   	movff	btemp+1,??_TMR5_ISR+4
 46749  01DBEA  0060  F0B0  F010   	movff	btemp+2,??_TMR5_ISR+5
 46750  01DBF0  0060  F0B4  F011   	movff	btemp+3,??_TMR5_ISR+6
 46751  01DBF6  0060  F0B8  F012   	movff	btemp+4,??_TMR5_ISR+7
 46752  01DBFC  0060  F0BC  F013   	movff	btemp+5,??_TMR5_ISR+8
 46753  01DC02  0060  F0C0  F014   	movff	btemp+6,??_TMR5_ISR+9
 46754  01DC08  0060  F0C4  F015   	movff	btemp+7,??_TMR5_ISR+10
 46755  01DC0E  0060  F0C8  F016   	movff	btemp+8,??_TMR5_ISR+11
 46756  01DC14  0060  F0CC  F017   	movff	btemp+9,??_TMR5_ISR+12
 46757  01DC1A  0060  F0D0  F018   	movff	btemp+10,??_TMR5_ISR+13
 46758  01DC20  0060  F0D4  F019   	movff	btemp+11,??_TMR5_ISR+14
 46759  01DC26  0060  F0E8  F01A   	movff	btemp+16,??_TMR5_ISR+15
 46760  01DC2C  0060  F0EC  F01B   	movff	btemp+17,??_TMR5_ISR+16
 46761  01DC32  0060  F0F0  F01C   	movff	btemp+18,??_TMR5_ISR+17
 46762  01DC38  0060  F0F4  F01D   	movff	btemp+19,??_TMR5_ISR+18
 46763  01DC3E  0060  F0F8  F01E   	movff	btemp+20,??_TMR5_ISR+19
 46764  01DC44  0060  F0FC  F01F   	movff	btemp+21,??_TMR5_ISR+20
 46765  01DC4A  0060  F100  F020   	movff	btemp+22,??_TMR5_ISR+21
 46766  01DC50  0060  F104  F021   	movff	btemp+23,??_TMR5_ISR+22
 46767  01DC56  0060  F108  F022   	movff	btemp+24,??_TMR5_ISR+23
 46768  01DC5C  0060  F10C  F023   	movff	btemp+25,??_TMR5_ISR+24
 46769  01DC62  0060  F110  F024   	movff	btemp+26,??_TMR5_ISR+25
 46770  01DC68  0060  F114  F025   	movff	btemp+27,??_TMR5_ISR+26
 46771  01DC6E  0060  F118  F026   	movff	btemp+28,??_TMR5_ISR+27
 46772  01DC74  0060  F11C  F027   	movff	btemp+29,??_TMR5_ISR+28
 46773  01DC7A  0060  F120  F028   	movff	btemp+30,??_TMR5_ISR+29
 46774  01DC80  0060  F124  F029   	movff	btemp+31,??_TMR5_ISR+30
 46775  01DC86  EE16  F196         	lfsr	1,___intlo_sp
 46776                           
 46777                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 46778  01DC8A  0139               	movlb	57	; () banked
 46779  01DC8C  9DA8               	bcf	168,6,b	;volatile
 46780                           
 46781                           ; BSR set to: 57
 46782                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 46783  01DC8E  0060  F313  FFE6   	movff	_timer5ReloadVal,postinc1
 46784  01DC94  0060  F317  FFE6   	movff	_timer5ReloadVal+1,postinc1
 46785  01DC9A  ECDA  F00F         	call	_TMR5_WriteTimer	;wreg free
 46786                           
 46787                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 46788  01DC9E  0102               	movlb	2	; () banked
 46789  01DCA0  51AE               	movf	(_V+167)& (0+255),w,b	;volatile
 46790  01DCA2  6E0B               	movwf	??_TMR5_ISR^0,c
 46791  01DCA4  6A0C               	clrf	(??_TMR5_ISR+1)^0,c
 46792  01DCA6  0E05               	movlw	5
 46793  01DCA8  260B               	addwf	??_TMR5_ISR^0,f,c
 46794  01DCAA  0E00               	movlw	0
 46795  01DCAC  220C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 46796  01DCAE  0100               	movlb	0	; () banked
 46797  01DCB0  4BC2               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 46798  01DCB2  2BC3               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 46799  01DCB4  500B               	movf	??_TMR5_ISR^0,w,c
 46800  01DCB6  5DC2               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 46801  01DCB8  500C               	movf	(??_TMR5_ISR+1)^0,w,c
 46802  01DCBA  59C3               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 46803  01DCBC  A0D8               	btfss	status,0,c
 46804  01DCBE  D005               	goto	i1l1021
 46805                           
 46806                           ; BSR set to: 0
 46807                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 46808  01DCC0  EC64  F013         	call	_TMR5_CallBack	;wreg free
 46809                           
 46810                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 46811  01DCC4  0100               	movlb	0	; () banked
 46812  01DCC6  6BC2               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 46813  01DCC8  6BC3               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 46814  01DCCA                     i1l1021:
 46815                           
 46816                           ; BSR set to: 0
 46817  01DCCA  0060  F0A4  F049   	movff	??_TMR5_ISR+30,btemp+31
 46818  01DCD0  0060  F0A0  F048   	movff	??_TMR5_ISR+29,btemp+30
 46819  01DCD6  0060  F09C  F047   	movff	??_TMR5_ISR+28,btemp+29
 46820  01DCDC  0060  F098  F046   	movff	??_TMR5_ISR+27,btemp+28
 46821  01DCE2  0060  F094  F045   	movff	??_TMR5_ISR+26,btemp+27
 46822  01DCE8  0060  F090  F044   	movff	??_TMR5_ISR+25,btemp+26
 46823  01DCEE  0060  F08C  F043   	movff	??_TMR5_ISR+24,btemp+25
 46824  01DCF4  0060  F088  F042   	movff	??_TMR5_ISR+23,btemp+24
 46825  01DCFA  0060  F084  F041   	movff	??_TMR5_ISR+22,btemp+23
 46826  01DD00  0060  F080  F040   	movff	??_TMR5_ISR+21,btemp+22
 46827  01DD06  0060  F07C  F03F   	movff	??_TMR5_ISR+20,btemp+21
 46828  01DD0C  0060  F078  F03E   	movff	??_TMR5_ISR+19,btemp+20
 46829  01DD12  0060  F074  F03D   	movff	??_TMR5_ISR+18,btemp+19
 46830  01DD18  0060  F070  F03C   	movff	??_TMR5_ISR+17,btemp+18
 46831  01DD1E  0060  F06C  F03B   	movff	??_TMR5_ISR+16,btemp+17
 46832  01DD24  0060  F068  F03A   	movff	??_TMR5_ISR+15,btemp+16
 46833  01DD2A  0060  F064  F035   	movff	??_TMR5_ISR+14,btemp+11
 46834  01DD30  0060  F060  F034   	movff	??_TMR5_ISR+13,btemp+10
 46835  01DD36  0060  F05C  F033   	movff	??_TMR5_ISR+12,btemp+9
 46836  01DD3C  0060  F058  F032   	movff	??_TMR5_ISR+11,btemp+8
 46837  01DD42  0060  F054  F031   	movff	??_TMR5_ISR+10,btemp+7
 46838  01DD48  0060  F050  F030   	movff	??_TMR5_ISR+9,btemp+6
 46839  01DD4E  0060  F04C  F02F   	movff	??_TMR5_ISR+8,btemp+5
 46840  01DD54  0060  F048  F02E   	movff	??_TMR5_ISR+7,btemp+4
 46841  01DD5A  0060  F044  F02D   	movff	??_TMR5_ISR+6,btemp+3
 46842  01DD60  0060  F040  F02C   	movff	??_TMR5_ISR+5,btemp+2
 46843  01DD66  0060  F03C  F02B   	movff	??_TMR5_ISR+4,btemp+1
 46844  01DD6C  0060  F038  F02A   	movff	??_TMR5_ISR+3,btemp
 46845  01DD72  0060  F037  FFD8   	movff	??_TMR5_ISR+2,status
 46846  01DD78  0011               	retfie		f
 46847  01DD7A                     __end_of_TMR5_ISR:
 46848                           	opt callstack 0
 46849                           
 46850 ;; *************** function _TMR5_WriteTimer *****************
 46851 ;; Defined at:
 46852 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 46853 ;; Parameters:    Size  Location     Type
 46854 ;;  timerVal        2  [STACK] unsigned short 
 46855 ;; Auto vars:     Size  Location     Type
 46856 ;;		None
 46857 ;; Return value:  Size  Location     Type
 46858 ;;                  1  [STACK] void 
 46859 ;; Registers used:
 46860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 46861 ;; Tracked objects:
 46862 ;;		On entry : 3F/39
 46863 ;;		On exit  : 0/0
 46864 ;;		Unchanged: 0/0
 46865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46870 ;;Total ram usage:        0 bytes
 46871 ;; Hardware stack levels used:    1
 46872 ;; Hardware stack levels required when called:    3
 46873 ;; This function calls:
 46874 ;;		Nothing
 46875 ;; This function is called by:
 46876 ;;		_TMR5_ISR
 46877 ;; This function uses a reentrant model
 46878 ;;
 46879                           
 46880                           	psect	text190
 46881  001FB4                     __ptext190:
 46882                           	opt callstack 0
 46883  001FB4                     _TMR5_WriteTimer:
 46884                           	opt callstack 13
 46885                           
 46886                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 46887                           
 46888                           ; BSR set to: 0
 46889                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46890                           ;incstack = 0
 46891  001FB4  A49A               	btfss	154,2,c	;volatile
 46892  001FB6  D00F               	goto	l13962
 46893                           
 46894                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 46895  001FB8  909A               	bcf	154,0,c	;volatile
 46896                           
 46897                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 46898                           ;stkvar	_timerVal @ sp[(0)+-2]
 46899  001FBA  0EFF               	movlw	255
 46900  001FBC  24E1               	addwf	fsr1l,w,c
 46901  001FBE  6ED9               	movwf	fsr2l,c
 46902  001FC0  0EFF               	movlw	255
 46903  001FC2  20E2               	addwfc	fsr1h,w,c
 46904  001FC4  6EDA               	movwf	fsr2h,c
 46905  001FC6  50DF               	movf	indf2,w,c
 46906  001FC8  6E99               	movwf	153,c	;volatile
 46907                           
 46908                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 46909                           ;stkvar	_timerVal @ sp[(0)+-2]
 46910  001FCA  0EFE               	movlw	-2
 46911  001FCC  006F FF8F FF98     	movff	plusw1,16280	;volatile
 46912                           
 46913                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 46914  001FD2  809A               	bsf	154,0,c	;volatile
 46915                           
 46916                           ;mcc_generated_files/tmr5.c: 144:  } else {
 46917  001FD4  D00C               	goto	l1004
 46918  001FD6                     l13962:
 46919                           
 46920                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 46921                           ;stkvar	_timerVal @ sp[(0)+-2]
 46922  001FD6  0EFF               	movlw	255
 46923  001FD8  24E1               	addwf	fsr1l,w,c
 46924  001FDA  6ED9               	movwf	fsr2l,c
 46925  001FDC  0EFF               	movlw	255
 46926  001FDE  20E2               	addwfc	fsr1h,w,c
 46927  001FE0  6EDA               	movwf	fsr2h,c
 46928  001FE2  50DF               	movf	indf2,w,c
 46929  001FE4  6E99               	movwf	153,c	;volatile
 46930                           
 46931                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 46932                           ;stkvar	_timerVal @ sp[(0)+-2]
 46933  001FE6  0EFE               	movlw	-2
 46934  001FE8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 46935  001FEE                     l1004:
 46936                           
 46937                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 46938  001FEE  52E5               	movf	postdec1,f,c
 46939  001FF0  52E5               	movf	postdec1,f,c
 46940  001FF2  0012               	return		;funcret
 46941  001FF4                     __end_of_TMR5_WriteTimer:
 46942                           	opt callstack 0
 46943                           
 46944 ;; *************** function _TMR5_CallBack *****************
 46945 ;; Defined at:
 46946 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 46947 ;; Parameters:    Size  Location     Type
 46948 ;;		None
 46949 ;; Auto vars:     Size  Location     Type
 46950 ;;		None
 46951 ;; Return value:  Size  Location     Type
 46952 ;;                  1  [STACK] void 
 46953 ;; Registers used:
 46954 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 46955 ;; Tracked objects:
 46956 ;;		On entry : 3F/0
 46957 ;;		On exit  : 0/0
 46958 ;;		Unchanged: 0/0
 46959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46964 ;;Total ram usage:        0 bytes
 46965 ;; Hardware stack levels used:    1
 46966 ;; Hardware stack levels required when called:    8
 46967 ;; This function calls:
 46968 ;;		Absolute function
 46969 ;;		_TMR5_DefaultInterruptHandler
 46970 ;; This function is called by:
 46971 ;;		_TMR5_ISR
 46972 ;; This function uses a reentrant model
 46973 ;;
 46974                           
 46975                           	psect	text191
 46976  0026C8                     __ptext191:
 46977                           	opt callstack 0
 46978  0026C8                     _TMR5_CallBack:
 46979                           	opt callstack 8
 46980                           
 46981                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 46982                           
 46983                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46984                           ;incstack = 0
 46985  0026C8  0100               	movlb	0	; () banked
 46986  0026CA  519B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 46987  0026CC  119C               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 46988  0026CE  119D               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 46989  0026D0  B4D8               	btfsc	status,2,c
 46990  0026D2  0012               	return	
 46991                           
 46992                           ; BSR set to: 0
 46993                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 46994  0026D4  D801               	call	u1322_28
 46995  0026D6  0012               	return	
 46996  0026D8                     u1322_28:
 46997  0026D8  0005               	push	
 46998  0026DA  6EFA               	movwf	pclath,c
 46999  0026DC  519B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 47000  0026DE  6EFD               	movwf	tosl,c
 47001  0026E0  519C               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 47002  0026E2  6EFE               	movwf	tosh,c
 47003  0026E4  519D               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 47004  0026E6  6EFF               	movwf	tosu,c
 47005  0026E8  50FA               	movf	pclath,w,c
 47006  0026EA  0012               	return		;indir
 47007  0026EC                     __end_of_TMR5_CallBack:
 47008                           	opt callstack 0
 47009                           
 47010 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 47011 ;; Defined at:
 47012 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 47013 ;; Parameters:    Size  Location     Type
 47014 ;;		None
 47015 ;; Auto vars:     Size  Location     Type
 47016 ;;		None
 47017 ;; Return value:  Size  Location     Type
 47018 ;;                  1  [STACK] void 
 47019 ;; Registers used:
 47020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 47021 ;; Tracked objects:
 47022 ;;		On entry : 3F/0
 47023 ;;		On exit  : 0/0
 47024 ;;		Unchanged: 0/0
 47025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47030 ;;Total ram usage:        0 bytes
 47031 ;; Hardware stack levels used:    1
 47032 ;; Hardware stack levels required when called:    7
 47033 ;; This function calls:
 47034 ;;		_check_day_time
 47035 ;; This function is called by:
 47036 ;;		_TMR5_Initialize
 47037 ;;		_TMR5_CallBack
 47038 ;; This function uses a reentrant model
 47039 ;;
 47040                           
 47041                           	psect	text192
 47042  0020E4                     __ptext192:
 47043                           	opt callstack 0
 47044  0020E4                     _TMR5_DefaultInterruptHandler:
 47045                           	opt callstack 8
 47046                           
 47047                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 47048                           
 47049                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47050                           ;incstack = 0
 47051  0020E4  A0BE               	btfss	190,0,c	;volatile
 47052  0020E6  D002               	goto	u1248_20
 47053  0020E8  0E01               	movlw	1
 47054  0020EA  D001               	goto	u1248_26
 47055  0020EC                     u1248_20:
 47056  0020EC  0E00               	movlw	0
 47057  0020EE                     u1248_26:
 47058  0020EE  0AFF               	xorlw	255
 47059  0020F0  6E35               	movwf	(btemp+11)^0,c
 47060  0020F2  50BE               	movf	190,w,c	;volatile
 47061  0020F4  1835               	xorwf	(btemp+11)^0,w,c
 47062  0020F6  0BFE               	andlw	-2
 47063  0020F8  1835               	xorwf	(btemp+11)^0,w,c
 47064  0020FA  6EBE               	movwf	190,c	;volatile
 47065                           
 47066                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 47067  0020FC  0E01               	movlw	1
 47068  0020FE  0102               	movlb	2	; () banked
 47069  002100  27B8               	addwf	(_V+177)& (0+255),f,b	;volatile
 47070  002102  0E00               	movlw	0
 47071  002104  23B9               	addwfc	(_V+178)& (0+255),f,b	;volatile
 47072  002106  23BA               	addwfc	(_V+179)& (0+255),f,b	;volatile
 47073  002108  23BB               	addwfc	(_V+180)& (0+255),f,b	;volatile
 47074                           
 47075                           ; BSR set to: 2
 47076                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 47077  00210A  0E01               	movlw	1
 47078  00210C  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 47079  00210E  0E00               	movlw	0
 47080  002110  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 47081  002112  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 47082  002114  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 47083                           
 47084                           ; BSR set to: 2
 47085                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 47086  002116  ECAD  F0D0         	call	_check_day_time	;wreg free
 47087                           
 47088                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47089  00211A  0012               	return		;funcret
 47090  00211C                     __end_of_TMR5_DefaultInterruptHandler:
 47091                           	opt callstack 0
 47092                           
 47093 ;; *************** function _check_day_time *****************
 47094 ;; Defined at:
 47095 ;;		line 167 in file "mbmc.c"
 47096 ;; Parameters:    Size  Location     Type
 47097 ;;		None
 47098 ;; Auto vars:     Size  Location     Type
 47099 ;;  light           4  [STACK] float 
 47100 ;; Return value:  Size  Location     Type
 47101 ;;                  1  [STACK] _Bool 
 47102 ;; Registers used:
 47103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 47104 ;; Tracked objects:
 47105 ;;		On entry : 3F/2
 47106 ;;		On exit  : 0/0
 47107 ;;		Unchanged: 0/0
 47108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47113 ;;Total ram usage:        0 bytes
 47114 ;; Hardware stack levels used:    1
 47115 ;; Hardware stack levels required when called:    6
 47116 ;; This function calls:
 47117 ;;		___flge
 47118 ;;		_conv_raw_result
 47119 ;;		_get_ac_charger_relay
 47120 ;;		_set_ac_charger_relay
 47121 ;;		_time
 47122 ;; This function is called by:
 47123 ;;		_TMR5_DefaultInterruptHandler
 47124 ;; This function uses a reentrant model
 47125 ;;
 47126                           
 47127                           	psect	text193
 47128  01A15A                     __ptext193:
 47129                           	opt callstack 0
 47130  01A15A                     _check_day_time:
 47131                           	opt callstack 0
 47132                           
 47133                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47134  01A15A  52E6               	movf	postinc1,f,c
 47135  01A15C  52E6               	movf	postinc1,f,c
 47136  01A15E  52E6               	movf	postinc1,f,c
 47137  01A160  52E6               	movf	postinc1,f,c
 47138                           
 47139                           ;mbmc.c: 169:  static uint8_t day_delay = 0;;mbmc.c: 170:  float light;;mbmc.c: 172:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 47140                           
 47141                           ;incstack = 0
 47142  01A162  0E00               	movlw	0
 47143  01A164  6EE6               	movwf	postinc1,c
 47144  01A166  0E0D               	movlw	13
 47145  01A168  6EE6               	movwf	postinc1,c
 47146  01A16A  EC98  F0C3         	call	_conv_raw_result	;wreg free
 47147                           
 47148                           ;stkvar	_light @ sp[(-4)+0]
 47149  01A16E  0EFC               	movlw	-4
 47150  01A170  0060  F0AB  FFE3   	movff	btemp,plusw1
 47151  01A176  0EFD               	movlw	-3
 47152  01A178  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 47153  01A17E  0EFE               	movlw	-2
 47154  01A180  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 47155  01A186  0EFF               	movlw	-1
 47156  01A188  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 47157                           
 47158                           ;mbmc.c: 176:  if (C.day_update) {
 47159  01A18E  EE22  F237         	lfsr	2,_C+312	;volatile
 47160  01A192  50DE               	movf	postinc2,w,c
 47161  01A194  10DE               	iorwf	postinc2,w,c
 47162  01A196  10DE               	iorwf	postinc2,w,c
 47163  01A198  10DE               	iorwf	postinc2,w,c
 47164  01A19A  B4D8               	btfsc	status,2,c
 47165  01A19C  D068               	goto	l12708
 47166                           
 47167                           ;mbmc.c: 177:   if (time(((void*)0)) >= C.day_update) {
 47168  01A19E  0062  F8DC  F032   	movff	_C+312,btemp+8	;volatile
 47169  01A1A4  0062  F8E0  F033   	movff	_C+313,btemp+9	;volatile
 47170  01A1AA  0062  F8E4  F034   	movff	_C+314,btemp+10	;volatile
 47171  01A1B0  0062  F8E8  F035   	movff	_C+315,btemp+11	;volatile
 47172  01A1B6  5032               	movf	(btemp+8)^0,w,c
 47173  01A1B8  6E3A               	movwf	(btemp+16)^0,c
 47174  01A1BA  5033               	movf	(btemp+9)^0,w,c
 47175  01A1BC  6E3B               	movwf	(btemp+17)^0,c
 47176  01A1BE  5034               	movf	(btemp+10)^0,w,c
 47177  01A1C0  6E3C               	movwf	(btemp+18)^0,c
 47178  01A1C2  5035               	movf	(btemp+11)^0,w,c
 47179  01A1C4  6E3D               	movwf	(btemp+19)^0,c
 47180  01A1C6  6A3E               	clrf	(btemp+20)^0,c
 47181  01A1C8  6A3F               	clrf	(btemp+21)^0,c
 47182  01A1CA  6A40               	clrf	(btemp+22)^0,c
 47183  01A1CC  6A41               	clrf	(btemp+23)^0,c
 47184  01A1CE  0E00               	movlw	0
 47185  01A1D0  6EE6               	movwf	postinc1,c
 47186  01A1D2  0E00               	movlw	0
 47187  01A1D4  6EE6               	movwf	postinc1,c
 47188  01A1D6  ECBD  F00C         	call	_time	;wreg free
 47189  01A1DA  52E5               	movf	postdec1,f,c
 47190  01A1DC  006F FF9C  F049    	movff	indf1,btemp+31
 47191  01A1E2  52E5               	movf	postdec1,f,c
 47192  01A1E4  006F FF9C  F048    	movff	indf1,btemp+30
 47193  01A1EA  52E5               	movf	postdec1,f,c
 47194  01A1EC  006F FF9C  F047    	movff	indf1,btemp+29
 47195  01A1F2  52E5               	movf	postdec1,f,c
 47196  01A1F4  006F FF9C  F046    	movff	indf1,btemp+28
 47197  01A1FA  52E5               	movf	postdec1,f,c
 47198  01A1FC  006F FF9C  F045    	movff	indf1,btemp+27
 47199  01A202  52E5               	movf	postdec1,f,c
 47200  01A204  006F FF9C  F044    	movff	indf1,btemp+26
 47201  01A20A  52E5               	movf	postdec1,f,c
 47202  01A20C  006F FF9C  F043    	movff	indf1,btemp+25
 47203  01A212  52E5               	movf	postdec1,f,c
 47204  01A214  006F FF9C  F042    	movff	indf1,btemp+24
 47205  01A21A  503A               	movf	(btemp+16)^0,w,c
 47206  01A21C  5C42               	subwf	(btemp+24)^0,w,c
 47207  01A21E  503B               	movf	(btemp+17)^0,w,c
 47208  01A220  5843               	subwfb	(btemp+25)^0,w,c
 47209  01A222  503C               	movf	(btemp+18)^0,w,c
 47210  01A224  5844               	subwfb	(btemp+26)^0,w,c
 47211  01A226  503D               	movf	(btemp+19)^0,w,c
 47212  01A228  5845               	subwfb	(btemp+27)^0,w,c
 47213  01A22A  503E               	movf	(btemp+20)^0,w,c
 47214  01A22C  5846               	subwfb	(btemp+28)^0,w,c
 47215  01A22E  503F               	movf	(btemp+21)^0,w,c
 47216  01A230  5847               	subwfb	(btemp+29)^0,w,c
 47217  01A232  5040               	movf	(btemp+22)^0,w,c
 47218  01A234  5848               	subwfb	(btemp+30)^0,w,c
 47219  01A236  5049               	movf	(btemp+31)^0,w,c
 47220  01A238  0A80               	xorlw	128
 47221  01A23A  6E2A               	movwf	btemp^0,c
 47222  01A23C  5041               	movf	(btemp+23)^0,w,c
 47223  01A23E  0A80               	xorlw	128
 47224  01A240  582A               	subwfb	btemp^0,w,c
 47225  01A242  A0D8               	btfss	status,0,c
 47226  01A244  D014               	goto	l12708
 47227                           
 47228                           ; BSR set to: 57
 47229                           ;mbmc.c: 178:    C.day_update = 0;
 47230  01A246  0E00               	movlw	0
 47231  01A248  006F FFA0  FA37    	movff	wreg,_C+312	;volatile
 47232  01A24E  0E00               	movlw	0
 47233  01A250  006F FFA0  FA38    	movff	wreg,_C+313	;volatile
 47234  01A256  0E00               	movlw	0
 47235  01A258  006F FFA0  FA39    	movff	wreg,_C+314	;volatile
 47236  01A25E  0E00               	movlw	0
 47237  01A260  006F FFA0  FA3A    	movff	wreg,_C+315	;volatile
 47238                           
 47239                           ;mbmc.c: 179:    C.dupdate = 1;
 47240  01A266  0E01               	movlw	1
 47241  01A268  006F FFA0  FA2E    	movff	wreg,_C+303	;volatile
 47242  01A26E                     l12708:
 47243                           
 47244                           ;mbmc.c: 183:  if (!day_delay++ && V.system_stable) {
 47245  01A26E  2A51               	incf	check_day_time@day_delay^0,f,c
 47246  01A270  0451               	decf	check_day_time@day_delay^0,w,c
 47247  01A272  A4D8               	btfss	status,2,c
 47248  01A274  D123               	goto	l2203
 47249  01A276  0102               	movlb	2	; () banked
 47250  01A278  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 47251  01A27A  B4D8               	btfsc	status,2,c
 47252  01A27C  D11F               	goto	l2203
 47253                           
 47254                           ; BSR set to: 2
 47255                           ;mbmc.c: 184:   if (C.soc > 3) {
 47256  01A27E  EE22  F1B5         	lfsr	2,_C+182	;volatile
 47257  01A282  0E01               	movlw	1
 47258  01A284  50DB               	movf	plusw2,w,c
 47259  01A286  E104               	bnz	u1213_20
 47260  01A288  0E04               	movlw	4
 47261  01A28A  5CDE               	subwf	postinc2,w,c
 47262  01A28C  A0D8               	btfss	status,0,c
 47263  01A28E  D0ED               	goto	l12742
 47264  01A290                     u1213_20:
 47265                           
 47266                           ; BSR set to: 2
 47267                           ;mbmc.c: 185:    if (!C.day) {
 47268  01A290  EE22  F22D         	lfsr	2,_C+302	;volatile
 47269  01A294  50DF               	movf	indf2,w,c
 47270  01A296  A4D8               	btfss	status,2,c
 47271  01A298  D065               	goto	l12728
 47272                           
 47273                           ; BSR set to: 2
 47274                           ;mbmc.c: 186:     if (light > 22.0) {
 47275                           ;stkvar	_light @ sp[(-4)+0]
 47276  01A29A  0EFC               	movlw	-4
 47277  01A29C  006F FF8F FFE6     	movff	plusw1,postinc1
 47278  01A2A2  006F FF8F FFE6     	movff	plusw1,postinc1
 47279  01A2A8  006F FF8F FFE6     	movff	plusw1,postinc1
 47280  01A2AE  006F FF8F FFE6     	movff	plusw1,postinc1
 47281  01A2B4  0E00               	movlw	0
 47282  01A2B6  6EE6               	movwf	postinc1,c
 47283  01A2B8  0E00               	movlw	0
 47284  01A2BA  6EE6               	movwf	postinc1,c
 47285  01A2BC  0EB0               	movlw	176
 47286  01A2BE  6EE6               	movwf	postinc1,c
 47287  01A2C0  0E41               	movlw	65
 47288  01A2C2  6EE6               	movwf	postinc1,c
 47289  01A2C4  ECC1  F0F4         	call	___flge	;wreg free
 47290  01A2C8  B02A               	btfsc	btemp& (0+255),0,c
 47291  01A2CA  D0F8               	goto	l2203
 47292                           
 47293                           ;mbmc.c: 187:      C.day = 1;
 47294  01A2CC  0E01               	movlw	1
 47295  01A2CE  006F FFA0  FA2D    	movff	wreg,_C+302	;volatile
 47296                           
 47297                           ;mbmc.c: 188:      C.day_start = time(((void*)0));
 47298  01A2D4  0E00               	movlw	0
 47299  01A2D6  6EE6               	movwf	postinc1,c
 47300  01A2D8  0E00               	movlw	0
 47301  01A2DA  6EE6               	movwf	postinc1,c
 47302  01A2DC  ECBD  F00C         	call	_time	;wreg free
 47303  01A2E0  52E5               	movf	postdec1,f,c
 47304  01A2E2  006F FF9C  F041    	movff	indf1,btemp+23
 47305  01A2E8  52E5               	movf	postdec1,f,c
 47306  01A2EA  006F FF9C  F040    	movff	indf1,btemp+22
 47307  01A2F0  52E5               	movf	postdec1,f,c
 47308  01A2F2  006F FF9C  F03F    	movff	indf1,btemp+21
 47309  01A2F8  52E5               	movf	postdec1,f,c
 47310  01A2FA  006F FF9C  F03E    	movff	indf1,btemp+20
 47311  01A300  52E5               	movf	postdec1,f,c
 47312  01A302  006F FF9C  F03D    	movff	indf1,btemp+19
 47313  01A308  52E5               	movf	postdec1,f,c
 47314  01A30A  006F FF9C  F03C    	movff	indf1,btemp+18
 47315  01A310  52E5               	movf	postdec1,f,c
 47316  01A312  006F FF9C  F03B    	movff	indf1,btemp+17
 47317  01A318  52E5               	movf	postdec1,f,c
 47318  01A31A  006F FF9C  F03A    	movff	indf1,btemp+16
 47319  01A320  0060  F0E8  F032   	movff	btemp+16,btemp+8
 47320  01A326  0060  F0EC  F033   	movff	btemp+17,btemp+9
 47321  01A32C  0060  F0F0  F034   	movff	btemp+18,btemp+10
 47322  01A332  0060  F0F4  F035   	movff	btemp+19,btemp+11
 47323  01A338  0060  F0C8  FA2F   	movff	btemp+8,_C+304	;volatile
 47324  01A33E  0060  F0CC  FA30   	movff	btemp+9,_C+305	;volatile
 47325  01A344  0060  F0D0  FA31   	movff	btemp+10,_C+306	;volatile
 47326  01A34A  0060  F0D4  FA32   	movff	btemp+11,_C+307	;volatile
 47327                           
 47328                           ; BSR set to: 57
 47329                           ;mbmc.c: 189:      if (get_ac_charger_relay()) {
 47330  01A350  ECF2  F014         	call	_get_ac_charger_relay	;wreg free
 47331  01A354  502A               	movf	btemp^0,w,c
 47332  01A356  B4D8               	btfsc	status,2,c
 47333  01A358  D0B5               	goto	l2199
 47334                           
 47335                           ;mbmc.c: 190:       set_ac_charger_relay(0);
 47336  01A35A  0E00               	movlw	0
 47337  01A35C  6EE6               	movwf	postinc1,c
 47338  01A35E  ECD5  F014         	call	_set_ac_charger_relay	;wreg free
 47339  01A362  D0B0               	goto	l2199
 47340  01A364                     l12728:
 47341                           
 47342                           ; BSR set to: 2
 47343                           ;mbmc.c: 195:     if (light < 12.0) {
 47344  01A364  0E00               	movlw	0
 47345  01A366  6EE6               	movwf	postinc1,c
 47346  01A368  0E00               	movlw	0
 47347  01A36A  6EE6               	movwf	postinc1,c
 47348  01A36C  0E40               	movlw	64
 47349  01A36E  6EE6               	movwf	postinc1,c
 47350  01A370  0E41               	movlw	65
 47351  01A372  6EE6               	movwf	postinc1,c
 47352                           
 47353                           ;stkvar	_light @ sp[(-8)+0]
 47354  01A374  0EF8               	movlw	-8
 47355  01A376  006F FF8F FFE6     	movff	plusw1,postinc1
 47356  01A37C  006F FF8F FFE6     	movff	plusw1,postinc1
 47357  01A382  006F FF8F FFE6     	movff	plusw1,postinc1
 47358  01A388  006F FF8F FFE6     	movff	plusw1,postinc1
 47359  01A38E  ECC1  F0F4         	call	___flge	;wreg free
 47360  01A392  B02A               	btfsc	btemp& (0+255),0,c
 47361  01A394  D093               	goto	l2203
 47362                           
 47363                           ;mbmc.c: 196:      C.day = 0;
 47364  01A396  0E00               	movlw	0
 47365  01A398  006F FFA0  FA2D    	movff	wreg,_C+302	;volatile
 47366                           
 47367                           ;mbmc.c: 197:      C.day_end = time(((void*)0));
 47368  01A39E  0E00               	movlw	0
 47369  01A3A0  6EE6               	movwf	postinc1,c
 47370  01A3A2  0E00               	movlw	0
 47371  01A3A4  6EE6               	movwf	postinc1,c
 47372  01A3A6  ECBD  F00C         	call	_time	;wreg free
 47373  01A3AA  52E5               	movf	postdec1,f,c
 47374  01A3AC  006F FF9C  F041    	movff	indf1,btemp+23
 47375  01A3B2  52E5               	movf	postdec1,f,c
 47376  01A3B4  006F FF9C  F040    	movff	indf1,btemp+22
 47377  01A3BA  52E5               	movf	postdec1,f,c
 47378  01A3BC  006F FF9C  F03F    	movff	indf1,btemp+21
 47379  01A3C2  52E5               	movf	postdec1,f,c
 47380  01A3C4  006F FF9C  F03E    	movff	indf1,btemp+20
 47381  01A3CA  52E5               	movf	postdec1,f,c
 47382  01A3CC  006F FF9C  F03D    	movff	indf1,btemp+19
 47383  01A3D2  52E5               	movf	postdec1,f,c
 47384  01A3D4  006F FF9C  F03C    	movff	indf1,btemp+18
 47385  01A3DA  52E5               	movf	postdec1,f,c
 47386  01A3DC  006F FF9C  F03B    	movff	indf1,btemp+17
 47387  01A3E2  52E5               	movf	postdec1,f,c
 47388  01A3E4  006F FF9C  F03A    	movff	indf1,btemp+16
 47389  01A3EA  0060  F0E8  F032   	movff	btemp+16,btemp+8
 47390  01A3F0  0060  F0EC  F033   	movff	btemp+17,btemp+9
 47391  01A3F6  0060  F0F0  F034   	movff	btemp+18,btemp+10
 47392  01A3FC  0060  F0F4  F035   	movff	btemp+19,btemp+11
 47393  01A402  0060  F0C8  FA33   	movff	btemp+8,_C+308	;volatile
 47394  01A408  0060  F0CC  FA34   	movff	btemp+9,_C+309	;volatile
 47395  01A40E  0060  F0D0  FA35   	movff	btemp+10,_C+310	;volatile
 47396  01A414  0060  F0D4  FA36   	movff	btemp+11,_C+311	;volatile
 47397                           
 47398                           ; BSR set to: 57
 47399                           ;mbmc.c: 198:      C.day_update = C.day_end + 600;
 47400  01A41A  EE22  F233         	lfsr	2,_C+308	;volatile
 47401  01A41E  0E58               	movlw	88
 47402  01A420  24DE               	addwf	postinc2,w,c
 47403  01A422  6E32               	movwf	(btemp+8)^0,c
 47404  01A424  0E02               	movlw	2
 47405  01A426  20DE               	addwfc	postinc2,w,c
 47406  01A428  6E33               	movwf	(btemp+9)^0,c
 47407  01A42A  0E00               	movlw	0
 47408  01A42C  20DE               	addwfc	postinc2,w,c
 47409  01A42E  6E34               	movwf	(btemp+10)^0,c
 47410  01A430  0E00               	movlw	0
 47411  01A432  20DE               	addwfc	postinc2,w,c
 47412  01A434  6E35               	movwf	(btemp+11)^0,c
 47413  01A436  0060  F0C8  FA37   	movff	btemp+8,_C+312	;volatile
 47414  01A43C  0060  F0CC  FA38   	movff	btemp+9,_C+313	;volatile
 47415  01A442  0060  F0D0  FA39   	movff	btemp+10,_C+314	;volatile
 47416  01A448  0060  F0D4  FA3A   	movff	btemp+11,_C+315	;volatile
 47417                           
 47418                           ; BSR set to: 57
 47419                           ;mbmc.c: 202:      if ((C.soc < 20)) {
 47420  01A44E  EE22  F1B5         	lfsr	2,_C+182	;volatile
 47421  01A452  0E01               	movlw	1
 47422  01A454  50DB               	movf	plusw2,w,c
 47423  01A456  E136               	bnz	l2199
 47424  01A458  0E14               	movlw	20
 47425  01A45A  5CDE               	subwf	postinc2,w,c
 47426  01A45C  B0D8               	btfsc	status,0,c
 47427  01A45E  D032               	goto	l2199
 47428                           
 47429                           ; BSR set to: 57
 47430                           ;mbmc.c: 203:       set_ac_charger_relay(1);
 47431  01A460  0E01               	movlw	1
 47432  01A462  6EE6               	movwf	postinc1,c
 47433  01A464  ECD5  F014         	call	_set_ac_charger_relay	;wreg free
 47434  01A468  D02D               	goto	l2199
 47435  01A46A                     l12742:
 47436                           
 47437                           ; BSR set to: 2
 47438                           ;mbmc.c: 209:    if (C.p_pv < C.p_inverter) {
 47439  01A46A  EE22  F177         	lfsr	2,_C+120	;volatile
 47440  01A46E  006F FF7B FFE6     	movff	postinc2,postinc1
 47441  01A474  006F FF7B FFE6     	movff	postinc2,postinc1
 47442  01A47A  006F FF7B FFE6     	movff	postinc2,postinc1
 47443  01A480  006F FF7B FFE6     	movff	postinc2,postinc1
 47444  01A486  EE22  F17B         	lfsr	2,_C+124	;volatile
 47445  01A48A  006F FF7B FFE6     	movff	postinc2,postinc1
 47446  01A490  006F FF7B FFE6     	movff	postinc2,postinc1
 47447  01A496  006F FF7B FFE6     	movff	postinc2,postinc1
 47448  01A49C  006F FF7B FFE6     	movff	postinc2,postinc1
 47449  01A4A2  ECC1  F0F4         	call	___flge	;wreg free
 47450  01A4A6  B02A               	btfsc	btemp& (0+255),0,c
 47451  01A4A8  D009               	goto	l2203
 47452                           
 47453                           ;mbmc.c: 210:     if (!get_ac_charger_relay()) {
 47454  01A4AA  ECF2  F014         	call	_get_ac_charger_relay	;wreg free
 47455  01A4AE  502A               	movf	btemp^0,w,c
 47456  01A4B0  A4D8               	btfss	status,2,c
 47457  01A4B2  D004               	goto	l2203
 47458                           
 47459                           ;mbmc.c: 211:      set_ac_charger_relay(1);
 47460  01A4B4  0E01               	movlw	1
 47461  01A4B6  6EE6               	movwf	postinc1,c
 47462  01A4B8  ECD5  F014         	call	_set_ac_charger_relay	;wreg free
 47463  01A4BC                     l2203:
 47464                           
 47465                           ;mbmc.c: 216:  if (day_delay >= 240)
 47466  01A4BC  0EEF               	movlw	239
 47467  01A4BE  6451               	cpfsgt	check_day_time@day_delay^0,c
 47468  01A4C0  D001               	goto	l2199
 47469                           
 47470                           ;mbmc.c: 217:   day_delay = 0;
 47471  01A4C2  6A51               	clrf	check_day_time@day_delay^0,c
 47472  01A4C4                     l2199:
 47473                           
 47474                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 47475  01A4C4  52E5               	movf	postdec1,f,c
 47476  01A4C6  52E5               	movf	postdec1,f,c
 47477  01A4C8  52E5               	movf	postdec1,f,c
 47478  01A4CA  52E5               	movf	postdec1,f,c
 47479  01A4CC  0012               	return		;funcret
 47480  01A4CE                     __end_of_check_day_time:
 47481                           	opt callstack 0
 47482                           
 47483 ;; *************** function _set_ac_charger_relay *****************
 47484 ;; Defined at:
 47485 ;;		line 136 in file "mbmc.c"
 47486 ;; Parameters:    Size  Location     Type
 47487 ;;  mode            1  [STACK] const _Bool 
 47488 ;; Auto vars:     Size  Location     Type
 47489 ;;		None
 47490 ;; Return value:  Size  Location     Type
 47491 ;;                  1  [STACK] void 
 47492 ;; Registers used:
 47493 ;;		wreg, fsr1l, fsr1h
 47494 ;; Tracked objects:
 47495 ;;		On entry : 0/39
 47496 ;;		On exit  : 0/0
 47497 ;;		Unchanged: 0/0
 47498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47503 ;;Total ram usage:        0 bytes
 47504 ;; Hardware stack levels used:    1
 47505 ;; Hardware stack levels required when called:    3
 47506 ;; This function calls:
 47507 ;;		Nothing
 47508 ;; This function is called by:
 47509 ;;		_check_day_time
 47510 ;; This function uses a reentrant model
 47511 ;;
 47512                           
 47513                           	psect	text194
 47514  0029AA                     __ptext194:
 47515                           	opt callstack 0
 47516  0029AA                     _set_ac_charger_relay:
 47517                           	opt callstack 10
 47518                           
 47519                           ;mbmc.c: 136: void set_ac_charger_relay(const _Bool mode);mbmc.c: 137: {;mbmc.c: 138:  L
      +                          ATDbits.LATD6 = mode;
 47520                           ;stkvar	_mode @ sp[(0)+-1]
 47521                           
 47522                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47523                           ;incstack = 0
 47524  0029AA  0EFF               	movlw	-1
 47525  0029AC  B0E3               	btfsc	plusw1,0,c
 47526  0029AE  D002               	bra	u1173_25
 47527  0029B0  9CBD               	bcf	189,6,c	;volatile
 47528  0029B2  D001               	bra	u1173_26
 47529  0029B4                     u1173_25:
 47530  0029B4  8CBD               	bsf	189,6,c	;volatile
 47531  0029B6                     u1173_26:
 47532                           
 47533                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 47534  0029B6  52E5               	movf	postdec1,f,c
 47535  0029B8  0012               	return		;funcret
 47536  0029BA                     __end_of_set_ac_charger_relay:
 47537                           	opt callstack 0
 47538                           
 47539 ;; *************** function _get_ac_charger_relay *****************
 47540 ;; Defined at:
 47541 ;;		line 141 in file "mbmc.c"
 47542 ;; Parameters:    Size  Location     Type
 47543 ;;		None
 47544 ;; Auto vars:     Size  Location     Type
 47545 ;;		None
 47546 ;; Return value:  Size  Location     Type
 47547 ;;                  1  [STACK] _Bool 
 47548 ;; Registers used:
 47549 ;;		btemp
 47550 ;; Tracked objects:
 47551 ;;		On entry : 0/39
 47552 ;;		On exit  : 0/0
 47553 ;;		Unchanged: 0/0
 47554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47559 ;;Total ram usage:        0 bytes
 47560 ;; Hardware stack levels used:    1
 47561 ;; Hardware stack levels required when called:    3
 47562 ;; This function calls:
 47563 ;;		Nothing
 47564 ;; This function is called by:
 47565 ;;		_check_day_time
 47566 ;;		_calc_bsoc
 47567 ;; This function uses a reentrant model
 47568 ;;
 47569                           
 47570                           	psect	text195
 47571  0029E4                     __ptext195:
 47572                           	opt callstack 0
 47573  0029E4                     _get_ac_charger_relay:
 47574                           	opt callstack 11
 47575                           
 47576                           ;mbmc.c: 143:  return LATDbits.LATD6;
 47577                           
 47578                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47579                           ;incstack = 0
 47580  0029E4  ACBD               	btfss	189,6,c	;volatile
 47581  0029E6  D003               	goto	u1237_20
 47582  0029E8  6A2A               	clrf	btemp^0,c
 47583  0029EA  2A2A               	incf	btemp^0,f,c
 47584  0029EC  0012               	return	
 47585  0029EE                     u1237_20:
 47586  0029EE  6A2A               	clrf	btemp^0,c
 47587                           
 47588                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 47589  0029F0  0012               	return		;funcret
 47590  0029F2                     __end_of_get_ac_charger_relay:
 47591                           	opt callstack 0
 47592                           
 47593 ;; *************** function _TMR3_ISR *****************
 47594 ;; Defined at:
 47595 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 47596 ;; Parameters:    Size  Location     Type
 47597 ;;		None
 47598 ;; Auto vars:     Size  Location     Type
 47599 ;;		None
 47600 ;; Return value:  Size  Location     Type
 47601 ;;                  1    wreg      void 
 47602 ;; Registers used:
 47603 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 47604 ;; Tracked objects:
 47605 ;;		On entry : 0/0
 47606 ;;		On exit  : 3F/0
 47607 ;;		Unchanged: 0/0
 47608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47611 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47612 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47613 ;;Total ram usage:       25 bytes
 47614 ;; Hardware stack levels used:    1
 47615 ;; Hardware stack levels required when called:   14
 47616 ;; This function calls:
 47617 ;;		_TMR3_CallBack
 47618 ;;		_TMR3_WriteTimer
 47619 ;; This function is called by:
 47620 ;;		Interrupt level 1
 47621 ;; This function uses a non-reentrant model
 47622 ;;
 47623                           
 47624                           	psect	text196
 47625  01EAE4                     __ptext196:
 47626                           	opt callstack 0
 47627  01EAE4                     _TMR3_ISR:
 47628                           	opt callstack 3
 47629                           
 47630                           ;incstack = 0
 47631  01EAE4  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 47632  01EAEA  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 47633  01EAF0  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 47634  01EAF6  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 47635  01EAFC  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 47636  01EB02  0060  F0A8  F0EA   	movff	btemp,??_TMR3_ISR+5
 47637  01EB08  0060  F0AC  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 47638  01EB0E  0060  F0B0  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 47639  01EB14  0060  F0B4  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 47640  01EB1A  0060  F0B8  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 47641  01EB20  0060  F0BC  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 47642  01EB26  0060  F0C0  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 47643  01EB2C  0060  F0C4  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 47644  01EB32  0060  F0C8  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 47645  01EB38  0060  F0CC  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 47646  01EB3E  0060  F0D0  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 47647  01EB44  0060  F0D4  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 47648  01EB4A  0060  F0E8  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 47649  01EB50  0060  F0EC  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 47650  01EB56  0060  F0F0  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 47651  01EB5C  0060  F0F4  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 47652  01EB62  0060  F0F8  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 47653  01EB68  0060  F0FC  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 47654  01EB6E  0060  F100  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 47655  01EB74  0060  F104  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 47656  01EB7A  EE16  F196         	lfsr	1,___intlo_sp
 47657                           
 47658                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 47659  01EB7E  0139               	movlb	57	; () banked
 47660  01EB80  9DA6               	bcf	166,6,b	;volatile
 47661                           
 47662                           ; BSR set to: 57
 47663                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 47664  01EB82  0060  F303  FFE6   	movff	_timer3ReloadVal,postinc1
 47665  01EB88  0060  F307  FFE6   	movff	_timer3ReloadVal+1,postinc1
 47666  01EB8E  ECFA  F00F         	call	_TMR3_WriteTimer	;wreg free
 47667                           
 47668                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 47669  01EB92  0100               	movlb	0	; () banked
 47670  01EB94  4BBE               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 47671  01EB96  2BBF               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 47672  01EB98  51BF               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 47673  01EB9A  E104               	bnz	i1u1700_20
 47674  01EB9C  0E28               	movlw	40
 47675  01EB9E  5DBE               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 47676  01EBA0  A0D8               	btfss	status,0,c
 47677  01EBA2  D005               	goto	i1l1209
 47678  01EBA4                     i1u1700_20:
 47679                           
 47680                           ; BSR set to: 0
 47681                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 47682  01EBA4  EC76  F013         	call	_TMR3_CallBack	;wreg free
 47683                           
 47684                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 47685  01EBA8  0100               	movlb	0	; () banked
 47686  01EBAA  6BBE               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 47687  01EBAC  6BBF               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 47688  01EBAE                     i1l1209:
 47689                           
 47690                           ; BSR set to: 0
 47691  01EBAE  0060  F3F4  F041   	movff	??_TMR3_ISR+24,btemp+23
 47692  01EBB4  0060  F3F0  F040   	movff	??_TMR3_ISR+23,btemp+22
 47693  01EBBA  0060  F3EC  F03F   	movff	??_TMR3_ISR+22,btemp+21
 47694  01EBC0  0060  F3E8  F03E   	movff	??_TMR3_ISR+21,btemp+20
 47695  01EBC6  0060  F3E4  F03D   	movff	??_TMR3_ISR+20,btemp+19
 47696  01EBCC  0060  F3E0  F03C   	movff	??_TMR3_ISR+19,btemp+18
 47697  01EBD2  0060  F3DC  F03B   	movff	??_TMR3_ISR+18,btemp+17
 47698  01EBD8  0060  F3D8  F03A   	movff	??_TMR3_ISR+17,btemp+16
 47699  01EBDE  0060  F3D4  F035   	movff	??_TMR3_ISR+16,btemp+11
 47700  01EBE4  0060  F3D0  F034   	movff	??_TMR3_ISR+15,btemp+10
 47701  01EBEA  0060  F3CC  F033   	movff	??_TMR3_ISR+14,btemp+9
 47702  01EBF0  0060  F3C8  F032   	movff	??_TMR3_ISR+13,btemp+8
 47703  01EBF6  0060  F3C4  F031   	movff	??_TMR3_ISR+12,btemp+7
 47704  01EBFC  0060  F3C0  F030   	movff	??_TMR3_ISR+11,btemp+6
 47705  01EC02  0060  F3BC  F02F   	movff	??_TMR3_ISR+10,btemp+5
 47706  01EC08  0060  F3B8  F02E   	movff	??_TMR3_ISR+9,btemp+4
 47707  01EC0E  0060  F3B4  F02D   	movff	??_TMR3_ISR+8,btemp+3
 47708  01EC14  0060  F3B0  F02C   	movff	??_TMR3_ISR+7,btemp+2
 47709  01EC1A  0060  F3AC  F02B   	movff	??_TMR3_ISR+6,btemp+1
 47710  01EC20  0060  F3A8  F02A   	movff	??_TMR3_ISR+5,btemp
 47711  01EC26  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 47712  01EC2C  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 47713  01EC32  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 47714  01EC38  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 47715  01EC3E  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 47716  01EC44  0011               	retfie		f
 47717  01EC46                     __end_of_TMR3_ISR:
 47718                           	opt callstack 0
 47719                           
 47720 ;; *************** function _TMR3_WriteTimer *****************
 47721 ;; Defined at:
 47722 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 47723 ;; Parameters:    Size  Location     Type
 47724 ;;  timerVal        2  [STACK] unsigned short 
 47725 ;; Auto vars:     Size  Location     Type
 47726 ;;		None
 47727 ;; Return value:  Size  Location     Type
 47728 ;;                  1  [STACK] void 
 47729 ;; Registers used:
 47730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 47731 ;; Tracked objects:
 47732 ;;		On entry : 3F/39
 47733 ;;		On exit  : 0/0
 47734 ;;		Unchanged: 0/0
 47735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47740 ;;Total ram usage:        0 bytes
 47741 ;; Hardware stack levels used:    1
 47742 ;; Hardware stack levels required when called:    3
 47743 ;; This function calls:
 47744 ;;		Nothing
 47745 ;; This function is called by:
 47746 ;;		_TMR3_ISR
 47747 ;; This function uses a reentrant model
 47748 ;;
 47749                           
 47750                           	psect	text197
 47751  001FF4                     __ptext197:
 47752                           	opt callstack 0
 47753  001FF4                     _TMR3_WriteTimer:
 47754                           	opt callstack 13
 47755                           
 47756                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 47757                           
 47758                           ; BSR set to: 0
 47759                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47760                           ;incstack = 0
 47761  001FF4  A4A6               	btfss	166,2,c	;volatile
 47762  001FF6  D00F               	goto	l13980
 47763                           
 47764                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 47765  001FF8  90A6               	bcf	166,0,c	;volatile
 47766                           
 47767                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 47768                           ;stkvar	_timerVal @ sp[(0)+-2]
 47769  001FFA  0EFF               	movlw	255
 47770  001FFC  24E1               	addwf	fsr1l,w,c
 47771  001FFE  6ED9               	movwf	fsr2l,c
 47772  002000  0EFF               	movlw	255
 47773  002002  20E2               	addwfc	fsr1h,w,c
 47774  002004  6EDA               	movwf	fsr2h,c
 47775  002006  50DF               	movf	indf2,w,c
 47776  002008  6EA5               	movwf	165,c	;volatile
 47777                           
 47778                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 47779                           ;stkvar	_timerVal @ sp[(0)+-2]
 47780  00200A  0EFE               	movlw	-2
 47781  00200C  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 47782                           
 47783                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 47784  002012  80A6               	bsf	166,0,c	;volatile
 47785                           
 47786                           ;mcc_generated_files/tmr3.c: 141:     }
 47787  002014  D00C               	goto	l1192
 47788  002016                     l13980:
 47789                           
 47790                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 47791                           ;stkvar	_timerVal @ sp[(0)+-2]
 47792  002016  0EFF               	movlw	255
 47793  002018  24E1               	addwf	fsr1l,w,c
 47794  00201A  6ED9               	movwf	fsr2l,c
 47795  00201C  0EFF               	movlw	255
 47796  00201E  20E2               	addwfc	fsr1h,w,c
 47797  002020  6EDA               	movwf	fsr2h,c
 47798  002022  50DF               	movf	indf2,w,c
 47799  002024  6EA5               	movwf	165,c	;volatile
 47800                           
 47801                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 47802                           ;stkvar	_timerVal @ sp[(0)+-2]
 47803  002026  0EFE               	movlw	-2
 47804  002028  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 47805  00202E                     l1192:
 47806                           
 47807                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 47808  00202E  52E5               	movf	postdec1,f,c
 47809  002030  52E5               	movf	postdec1,f,c
 47810  002032  0012               	return		;funcret
 47811  002034                     __end_of_TMR3_WriteTimer:
 47812                           	opt callstack 0
 47813                           
 47814 ;; *************** function _TMR3_CallBack *****************
 47815 ;; Defined at:
 47816 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 47817 ;; Parameters:    Size  Location     Type
 47818 ;;		None
 47819 ;; Auto vars:     Size  Location     Type
 47820 ;;		None
 47821 ;; Return value:  Size  Location     Type
 47822 ;;                  1  [STACK] void 
 47823 ;; Registers used:
 47824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 47825 ;; Tracked objects:
 47826 ;;		On entry : 3F/0
 47827 ;;		On exit  : 0/0
 47828 ;;		Unchanged: 0/0
 47829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47834 ;;Total ram usage:        0 bytes
 47835 ;; Hardware stack levels used:    1
 47836 ;; Hardware stack levels required when called:   13
 47837 ;; This function calls:
 47838 ;;		Absolute function
 47839 ;;		_TMR3_DefaultInterruptHandler
 47840 ;;		_calc_bsoc
 47841 ;; This function is called by:
 47842 ;;		_TMR3_ISR
 47843 ;; This function uses a reentrant model
 47844 ;;
 47845                           
 47846                           	psect	text198
 47847  0026EC                     __ptext198:
 47848                           	opt callstack 0
 47849  0026EC                     _TMR3_CallBack:
 47850                           	opt callstack 3
 47851                           
 47852                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 47853                           
 47854                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47855                           ;incstack = 0
 47856  0026EC  0100               	movlb	0	; () banked
 47857  0026EE  5198               	movf	_TMR3_InterruptHandler& (0+255),w,b
 47858  0026F0  1199               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 47859  0026F2  119A               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 47860  0026F4  B4D8               	btfsc	status,2,c
 47861  0026F6  0012               	return	
 47862                           
 47863                           ; BSR set to: 0
 47864                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 47865  0026F8  D801               	call	u1678_28
 47866  0026FA  0012               	return	
 47867  0026FC                     u1678_28:
 47868  0026FC  0005               	push	
 47869  0026FE  6EFA               	movwf	pclath,c
 47870  002700  5198               	movf	_TMR3_InterruptHandler& (0+255),w,b
 47871  002702  6EFD               	movwf	tosl,c
 47872  002704  5199               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 47873  002706  6EFE               	movwf	tosh,c
 47874  002708  519A               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 47875  00270A  6EFF               	movwf	tosu,c
 47876  00270C  50FA               	movf	pclath,w,c
 47877  00270E  0012               	return		;indir
 47878  002710                     __end_of_TMR3_CallBack:
 47879                           	opt callstack 0
 47880                           
 47881 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 47882 ;; Defined at:
 47883 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 47884 ;; Parameters:    Size  Location     Type
 47885 ;;		None
 47886 ;; Auto vars:     Size  Location     Type
 47887 ;;		None
 47888 ;; Return value:  Size  Location     Type
 47889 ;;                  1  [STACK] void 
 47890 ;; Registers used:
 47891 ;;		None
 47892 ;; Tracked objects:
 47893 ;;		On entry : 3F/0
 47894 ;;		On exit  : 0/0
 47895 ;;		Unchanged: 0/0
 47896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47901 ;;Total ram usage:        0 bytes
 47902 ;; Hardware stack levels used:    1
 47903 ;; Hardware stack levels required when called:    3
 47904 ;; This function calls:
 47905 ;;		Nothing
 47906 ;; This function is called by:
 47907 ;;		_TMR3_Initialize
 47908 ;;		_TMR3_CallBack
 47909 ;; This function uses a reentrant model
 47910 ;;
 47911                           
 47912                           	psect	text199
 47913  002A9E                     __ptext199:
 47914                           	opt callstack 0
 47915  002A9E                     _TMR3_DefaultInterruptHandler:
 47916                           	opt callstack 12
 47917                           
 47918                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47919                           
 47920                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47921                           ;incstack = 0
 47922  002A9E  0012               	return		;funcret
 47923  002AA0                     __end_of_TMR3_DefaultInterruptHandler:
 47924                           	opt callstack 0
 47925                           
 47926 ;; *************** function _calc_bsoc *****************
 47927 ;; Defined at:
 47928 ;;		line 39 in file "bsoc.c"
 47929 ;; Parameters:    Size  Location     Type
 47930 ;;		None
 47931 ;; Auto vars:     Size  Location     Type
 47932 ;;  adj             4  [STACK] float 
 47933 ;;  log_ptr         2  [STACK] PTR unsigned char 
 47934 ;;		 -> port_data(512), 
 47935 ;; Return value:  Size  Location     Type
 47936 ;;                  1  [STACK] void 
 47937 ;; Registers used:
 47938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 47939 ;; Tracked objects:
 47940 ;;		On entry : 3F/0
 47941 ;;		On exit  : 6/2
 47942 ;;		Unchanged: 0/0
 47943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47948 ;;Total ram usage:        0 bytes
 47949 ;; Hardware stack levels used:    1
 47950 ;; Hardware stack levels required when called:   12
 47951 ;; This function calls:
 47952 ;;		_StartTimer
 47953 ;;		___asfladd
 47954 ;;		___fldiv
 47955 ;;		___flge
 47956 ;;		___flmul
 47957 ;;		___flneg
 47958 ;;		___fltol
 47959 ;;		_fabsf
 47960 ;;		_get_ac_charger_relay
 47961 ;;		_port_data_dma_ptr
 47962 ;;		_send_port_data_dma
 47963 ;;		_sprintf
 47964 ;;		_strlen
 47965 ;; This function is called by:
 47966 ;;		_init_bsoc
 47967 ;;		_TMR3_CallBack
 47968 ;; This function uses a reentrant model
 47969 ;;
 47970                           
 47971                           	psect	text200
 47972  01497C                     __ptext200:
 47973                           	opt callstack 0
 47974  01497C                     _calc_bsoc:
 47975                           	opt callstack 0
 47976                           
 47977                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47978  01497C  0E06               	movlw	6
 47979  01497E  26E1               	addwf	fsr1l,f,c
 47980  014980  0E00               	movlw	0
 47981  014982  22E2               	addwfc	fsr1h,f,c
 47982                           
 47983                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 47984                           
 47985                           ;incstack = 0
 47986  014984  0E00               	movlw	0
 47987  014986  6E32               	movwf	(btemp+8)^0,c
 47988  014988  0E00               	movlw	0
 47989  01498A  6E33               	movwf	(btemp+9)^0,c
 47990  01498C  0E80               	movlw	128
 47991  01498E  6E34               	movwf	(btemp+10)^0,c
 47992  014990  0E3F               	movlw	63
 47993  014992  6E35               	movwf	(btemp+11)^0,c
 47994                           
 47995                           ;stkvar	_adj @ sp[(-6)+0]
 47996  014994  0EFA               	movlw	-6
 47997  014996  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 47998  01499C  0EFB               	movlw	-5
 47999  01499E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 48000  0149A4  0EFC               	movlw	-4
 48001  0149A6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48002  0149AC  0EFD               	movlw	-3
 48003  0149AE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48004  0149B4  82BE               	bsf	190,1,c	;volatile
 48005                           
 48006                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 48007  0149B6  0E00               	movlw	0
 48008  0149B8  6EE6               	movwf	postinc1,c
 48009  0149BA  0E00               	movlw	0
 48010  0149BC  6EE6               	movwf	postinc1,c
 48011  0149BE  0E61               	movlw	97
 48012  0149C0  6EE6               	movwf	postinc1,c
 48013  0149C2  0E45               	movlw	69
 48014  0149C4  6EE6               	movwf	postinc1,c
 48015  0149C6  EE22  F143         	lfsr	2,_C+68	;volatile
 48016  0149CA  006F FF7B FFE6     	movff	postinc2,postinc1
 48017  0149D0  006F FF7B FFE6     	movff	postinc2,postinc1
 48018  0149D6  006F FF7B FFE6     	movff	postinc2,postinc1
 48019  0149DC  006F FF7B FFE6     	movff	postinc2,postinc1
 48020  0149E2  EC50  F0BE         	call	___fldiv	;wreg free
 48021  0149E6  0060  F0AB  FFE6   	movff	btemp,postinc1
 48022  0149EC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48023  0149F2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48024  0149F8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48025  0149FE  0E8F               	movlw	low (_C+144)
 48026  014A00  6EE6               	movwf	postinc1,c
 48027  014A02  0E09               	movlw	high (_C+144)
 48028  014A04  6EE6               	movwf	postinc1,c
 48029  014A06  EC18  F00A         	call	___asfladd	;wreg free
 48030                           
 48031                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 48032  014A0A  EE22  F18F         	lfsr	2,_C+144	;volatile
 48033  014A0E  006F FF7B FFE6     	movff	postinc2,postinc1
 48034  014A14  006F FF7B FFE6     	movff	postinc2,postinc1
 48035  014A1A  006F FF7B FFE6     	movff	postinc2,postinc1
 48036  014A20  006F FF7B FFE6     	movff	postinc2,postinc1
 48037  014A26  EE22  F18B         	lfsr	2,_C+140	;volatile
 48038  014A2A  006F FF7B FFE6     	movff	postinc2,postinc1
 48039  014A30  006F FF7B FFE6     	movff	postinc2,postinc1
 48040  014A36  006F FF7B FFE6     	movff	postinc2,postinc1
 48041  014A3C  006F FF7B FFE6     	movff	postinc2,postinc1
 48042  014A42  ECC1  F0F4         	call	___flge	;wreg free
 48043  014A46  B02A               	btfsc	btemp& (0+255),0,c
 48044  014A48  D00E               	goto	l17052
 48045                           
 48046                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 48047  014A4A  EE22  F18B         	lfsr	2,_C+140	;volatile
 48048  014A4E  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
 48049  014A54  006F FF78  F990    	movff	postinc2,_C+145	;volatile
 48050  014A5A  006F FF78  F991    	movff	postinc2,_C+146	;volatile
 48051  014A60  006F FF74  F992    	movff	postdec2,_C+147	;volatile
 48052  014A66                     l17052:
 48053                           
 48054                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 48055  014A66  0ECD               	movlw	205
 48056  014A68  6EE6               	movwf	postinc1,c
 48057  014A6A  0ECC               	movlw	204
 48058  014A6C  6EE6               	movwf	postinc1,c
 48059  014A6E  0ECC               	movlw	204
 48060  014A70  6EE6               	movwf	postinc1,c
 48061  014A72  0E3D               	movlw	61
 48062  014A74  6EE6               	movwf	postinc1,c
 48063  014A76  EE22  F18F         	lfsr	2,_C+144	;volatile
 48064  014A7A  006F FF7B FFE6     	movff	postinc2,postinc1
 48065  014A80  006F FF7B FFE6     	movff	postinc2,postinc1
 48066  014A86  006F FF7B FFE6     	movff	postinc2,postinc1
 48067  014A8C  006F FF7B FFE6     	movff	postinc2,postinc1
 48068  014A92  ECC1  F0F4         	call	___flge	;wreg free
 48069  014A96  B02A               	btfsc	btemp& (0+255),0,c
 48070  014A98  D010               	goto	l17056
 48071                           
 48072                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 48073  014A9A  0ECD               	movlw	205
 48074  014A9C  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
 48075  014AA2  0ECC               	movlw	204
 48076  014AA4  006F FFA0  F990    	movff	wreg,_C+145	;volatile
 48077  014AAA  0ECC               	movlw	204
 48078  014AAC  006F FFA0  F991    	movff	wreg,_C+146	;volatile
 48079  014AB2  0E3D               	movlw	61
 48080  014AB4  006F FFA0  F992    	movff	wreg,_C+147	;volatile
 48081  014ABA                     l17056:
 48082                           
 48083                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 48084  014ABA  EE22  F143         	lfsr	2,_C+68	;volatile
 48085  014ABE  006F FF7B FFE6     	movff	postinc2,postinc1
 48086  014AC4  006F FF7B FFE6     	movff	postinc2,postinc1
 48087  014ACA  006F FF7B FFE6     	movff	postinc2,postinc1
 48088  014AD0  006F FF7B FFE6     	movff	postinc2,postinc1
 48089  014AD6  0E0A               	movlw	10
 48090  014AD8  6EE6               	movwf	postinc1,c
 48091  014ADA  0ED7               	movlw	215
 48092  014ADC  6EE6               	movwf	postinc1,c
 48093  014ADE  0E23               	movlw	35
 48094  014AE0  6EE6               	movwf	postinc1,c
 48095  014AE2  0E3C               	movlw	60
 48096  014AE4  6EE6               	movwf	postinc1,c
 48097  014AE6  ECC1  F0F4         	call	___flge	;wreg free
 48098  014AEA  B02A               	btfsc	btemp& (0+255),0,c
 48099  014AEC  D01C               	goto	l17060
 48100                           
 48101                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 48102  014AEE  0062  F750  F032   	movff	_C+213,btemp+8	;volatile
 48103  014AF4  0062  F754  F033   	movff	_C+214,btemp+9	;volatile
 48104  014AFA  0062  F758  F034   	movff	_C+215,btemp+10	;volatile
 48105  014B00  0062  F75C  F035   	movff	_C+216,btemp+11	;volatile
 48106                           
 48107                           ;stkvar	_adj @ sp[(-6)+0]
 48108  014B06  0EFA               	movlw	-6
 48109  014B08  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 48110  014B0E  0EFB               	movlw	-5
 48111  014B10  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 48112  014B16  0EFC               	movlw	-4
 48113  014B18  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48114  014B1E  0EFD               	movlw	-3
 48115  014B20  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48116  014B26                     l17060:
 48117                           
 48118                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 48119  014B26  0E0A               	movlw	10
 48120  014B28  6EE6               	movwf	postinc1,c
 48121  014B2A  0ED7               	movlw	215
 48122  014B2C  6EE6               	movwf	postinc1,c
 48123  014B2E  0E23               	movlw	35
 48124  014B30  6EE6               	movwf	postinc1,c
 48125  014B32  0E3C               	movlw	60
 48126  014B34  6EE6               	movwf	postinc1,c
 48127  014B36  EE22  F143         	lfsr	2,_C+68	;volatile
 48128  014B3A  006F FF7B FFE6     	movff	postinc2,postinc1
 48129  014B40  006F FF7B FFE6     	movff	postinc2,postinc1
 48130  014B46  006F FF7B FFE6     	movff	postinc2,postinc1
 48131  014B4C  006F FF7B FFE6     	movff	postinc2,postinc1
 48132  014B52  ECC1  F0F4         	call	___flge	;wreg free
 48133  014B56  B02A               	btfsc	btemp& (0+255),0,c
 48134  014B58  D01C               	goto	l17064
 48135                           
 48136                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 48137  014B5A  0062  F740  F032   	movff	_C+209,btemp+8	;volatile
 48138  014B60  0062  F744  F033   	movff	_C+210,btemp+9	;volatile
 48139  014B66  0062  F748  F034   	movff	_C+211,btemp+10	;volatile
 48140  014B6C  0062  F74C  F035   	movff	_C+212,btemp+11	;volatile
 48141                           
 48142                           ;stkvar	_adj @ sp[(-6)+0]
 48143  014B72  0EFA               	movlw	-6
 48144  014B74  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 48145  014B7A  0EFB               	movlw	-5
 48146  014B7C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 48147  014B82  0EFC               	movlw	-4
 48148  014B84  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48149  014B8A  0EFD               	movlw	-3
 48150  014B8C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48151  014B92                     l17064:
 48152                           
 48153                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 48154  014B92  0E00               	movlw	0
 48155  014B94  6EE6               	movwf	postinc1,c
 48156  014B96  0E00               	movlw	0
 48157  014B98  6EE6               	movwf	postinc1,c
 48158  014B9A  0E61               	movlw	97
 48159  014B9C  6EE6               	movwf	postinc1,c
 48160  014B9E  0E45               	movlw	69
 48161  014BA0  6EE6               	movwf	postinc1,c
 48162                           
 48163                           ;stkvar	_adj @ sp[(-10)+0]
 48164  014BA2  0EF6               	movlw	-10
 48165  014BA4  006F FF8F FFE6     	movff	plusw1,postinc1
 48166  014BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 48167  014BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 48168  014BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 48169  014BBC  EE22  F143         	lfsr	2,_C+68	;volatile
 48170  014BC0  006F FF7B FFE6     	movff	postinc2,postinc1
 48171  014BC6  006F FF7B FFE6     	movff	postinc2,postinc1
 48172  014BCC  006F FF7B FFE6     	movff	postinc2,postinc1
 48173  014BD2  006F FF7B FFE6     	movff	postinc2,postinc1
 48174  014BD8  ECFF  F0B2         	call	___flmul	;wreg free
 48175  014BDC  0060  F0AB  FFE6   	movff	btemp,postinc1
 48176  014BE2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48177  014BE8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48178  014BEE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48179  014BF4  EC50  F0BE         	call	___fldiv	;wreg free
 48180  014BF8  0060  F0AB  FFE6   	movff	btemp,postinc1
 48181  014BFE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48182  014C04  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48183  014C0A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48184  014C10  0E8F               	movlw	low (_C+144)
 48185  014C12  6EE6               	movwf	postinc1,c
 48186  014C14  0E09               	movlw	high (_C+144)
 48187  014C16  6EE6               	movwf	postinc1,c
 48188  014C18  EC18  F00A         	call	___asfladd	;wreg free
 48189                           
 48190                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 48191  014C1C  EE22  F18F         	lfsr	2,_C+144	;volatile
 48192  014C20  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 48193  014C26  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 48194  014C2C  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 48195  014C32  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 48196                           
 48197                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 48198  014C38  EE22  F19B         	lfsr	2,_C+156	;volatile
 48199  014C3C  006F FF7B FFE6     	movff	postinc2,postinc1
 48200  014C42  006F FF7B FFE6     	movff	postinc2,postinc1
 48201  014C48  006F FF7B FFE6     	movff	postinc2,postinc1
 48202  014C4E  006F FF7B FFE6     	movff	postinc2,postinc1
 48203  014C54  EE22  F18B         	lfsr	2,_C+140	;volatile
 48204  014C58  006F FF7B FFE6     	movff	postinc2,postinc1
 48205  014C5E  006F FF7B FFE6     	movff	postinc2,postinc1
 48206  014C64  006F FF7B FFE6     	movff	postinc2,postinc1
 48207  014C6A  006F FF7B FFE6     	movff	postinc2,postinc1
 48208  014C70  ECC1  F0F4         	call	___flge	;wreg free
 48209  014C74  B02A               	btfsc	btemp& (0+255),0,c
 48210  014C76  D00E               	goto	l17072
 48211                           
 48212                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 48213  014C78  EE22  F18B         	lfsr	2,_C+140	;volatile
 48214  014C7C  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 48215  014C82  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 48216  014C88  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 48217  014C8E  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 48218  014C94                     l17072:
 48219                           
 48220                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 48221  014C94  0ECD               	movlw	205
 48222  014C96  6EE6               	movwf	postinc1,c
 48223  014C98  0ECC               	movlw	204
 48224  014C9A  6EE6               	movwf	postinc1,c
 48225  014C9C  0ECC               	movlw	204
 48226  014C9E  6EE6               	movwf	postinc1,c
 48227  014CA0  0E3D               	movlw	61
 48228  014CA2  6EE6               	movwf	postinc1,c
 48229  014CA4  EE22  F19B         	lfsr	2,_C+156	;volatile
 48230  014CA8  006F FF7B FFE6     	movff	postinc2,postinc1
 48231  014CAE  006F FF7B FFE6     	movff	postinc2,postinc1
 48232  014CB4  006F FF7B FFE6     	movff	postinc2,postinc1
 48233  014CBA  006F FF7B FFE6     	movff	postinc2,postinc1
 48234  014CC0  ECC1  F0F4         	call	___flge	;wreg free
 48235  014CC4  B02A               	btfsc	btemp& (0+255),0,c
 48236  014CC6  D010               	goto	l17076
 48237                           
 48238                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 48239  014CC8  0ECD               	movlw	205
 48240  014CCA  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
 48241  014CD0  0ECC               	movlw	204
 48242  014CD2  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
 48243  014CD8  0ECC               	movlw	204
 48244  014CDA  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
 48245  014CE0  0E3D               	movlw	61
 48246  014CE2  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
 48247  014CE8                     l17076:
 48248                           
 48249                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 48250  014CE8  0E00               	movlw	0
 48251  014CEA  6EE6               	movwf	postinc1,c
 48252  014CEC  0E00               	movlw	0
 48253  014CEE  6EE6               	movwf	postinc1,c
 48254  014CF0  0E61               	movlw	97
 48255  014CF2  6EE6               	movwf	postinc1,c
 48256  014CF4  0E45               	movlw	69
 48257  014CF6  6EE6               	movwf	postinc1,c
 48258  014CF8  EE22  F147         	lfsr	2,_C+72	;volatile
 48259  014CFC  006F FF7B FFE6     	movff	postinc2,postinc1
 48260  014D02  006F FF7B FFE6     	movff	postinc2,postinc1
 48261  014D08  006F FF7B FFE6     	movff	postinc2,postinc1
 48262  014D0E  006F FF7B FFE6     	movff	postinc2,postinc1
 48263  014D14  EC50  F0BE         	call	___fldiv	;wreg free
 48264  014D18  0060  F0AB  FFE6   	movff	btemp,postinc1
 48265  014D1E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48266  014D24  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48267  014D2A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48268  014D30  0E93               	movlw	low (_C+148)
 48269  014D32  6EE6               	movwf	postinc1,c
 48270  014D34  0E09               	movlw	high (_C+148)
 48271  014D36  6EE6               	movwf	postinc1,c
 48272  014D38  EC18  F00A         	call	___asfladd	;wreg free
 48273                           
 48274                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 48275  014D3C  0E00               	movlw	0
 48276  014D3E  6EE6               	movwf	postinc1,c
 48277  014D40  0E00               	movlw	0
 48278  014D42  6EE6               	movwf	postinc1,c
 48279  014D44  0E61               	movlw	97
 48280  014D46  6EE6               	movwf	postinc1,c
 48281  014D48  0E45               	movlw	69
 48282  014D4A  6EE6               	movwf	postinc1,c
 48283  014D4C  EE22  F17B         	lfsr	2,_C+124	;volatile
 48284  014D50  006F FF7B FFE6     	movff	postinc2,postinc1
 48285  014D56  006F FF7B FFE6     	movff	postinc2,postinc1
 48286  014D5C  006F FF7B FFE6     	movff	postinc2,postinc1
 48287  014D62  006F FF7B FFE6     	movff	postinc2,postinc1
 48288  014D68  EC50  F0BE         	call	___fldiv	;wreg free
 48289  014D6C  0060  F0AB  FFE6   	movff	btemp,postinc1
 48290  014D72  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48291  014D78  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48292  014D7E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48293  014D84  0EA7               	movlw	low (_C+168)
 48294  014D86  6EE6               	movwf	postinc1,c
 48295  014D88  0E09               	movlw	high (_C+168)
 48296  014D8A  6EE6               	movwf	postinc1,c
 48297  014D8C  EC18  F00A         	call	___asfladd	;wreg free
 48298                           
 48299                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 48300  014D90  0E00               	movlw	0
 48301  014D92  6EE6               	movwf	postinc1,c
 48302  014D94  0E00               	movlw	0
 48303  014D96  6EE6               	movwf	postinc1,c
 48304  014D98  0E61               	movlw	97
 48305  014D9A  6EE6               	movwf	postinc1,c
 48306  014D9C  0E45               	movlw	69
 48307  014D9E  6EE6               	movwf	postinc1,c
 48308  014DA0  EE22  F177         	lfsr	2,_C+120	;volatile
 48309  014DA4  006F FF7B FFE6     	movff	postinc2,postinc1
 48310  014DAA  006F FF7B FFE6     	movff	postinc2,postinc1
 48311  014DB0  006F FF7B FFE6     	movff	postinc2,postinc1
 48312  014DB6  006F FF7B FFE6     	movff	postinc2,postinc1
 48313  014DBC  EC50  F0BE         	call	___fldiv	;wreg free
 48314  014DC0  0060  F0AB  FFE6   	movff	btemp,postinc1
 48315  014DC6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48316  014DCC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48317  014DD2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48318  014DD8  0EAB               	movlw	low (_C+172)
 48319  014DDA  6EE6               	movwf	postinc1,c
 48320  014DDC  0E09               	movlw	high (_C+172)
 48321  014DDE  6EE6               	movwf	postinc1,c
 48322  014DE0  EC18  F00A         	call	___asfladd	;wreg free
 48323                           
 48324                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 48325  014DE4  0E00               	movlw	0
 48326  014DE6  6EE6               	movwf	postinc1,c
 48327  014DE8  0E00               	movlw	0
 48328  014DEA  6EE6               	movwf	postinc1,c
 48329  014DEC  0E61               	movlw	97
 48330  014DEE  6EE6               	movwf	postinc1,c
 48331  014DF0  0E45               	movlw	69
 48332  014DF2  6EE6               	movwf	postinc1,c
 48333  014DF4  EE22  F173         	lfsr	2,_C+116	;volatile
 48334  014DF8  006F FF7B FFE6     	movff	postinc2,postinc1
 48335  014DFE  006F FF7B FFE6     	movff	postinc2,postinc1
 48336  014E04  006F FF7B FFE6     	movff	postinc2,postinc1
 48337  014E0A  006F FF7B FFE6     	movff	postinc2,postinc1
 48338  014E10  EC50  F0BE         	call	___fldiv	;wreg free
 48339  014E14  0060  F0AB  FFE6   	movff	btemp,postinc1
 48340  014E1A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48341  014E20  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48342  014E26  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48343  014E2C  0EAF               	movlw	low (_C+176)
 48344  014E2E  6EE6               	movwf	postinc1,c
 48345  014E30  0E09               	movlw	high (_C+176)
 48346  014E32  6EE6               	movwf	postinc1,c
 48347  014E34  EC18  F00A         	call	___asfladd	;wreg free
 48348                           
 48349                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 48350  014E38  EE22  F17F         	lfsr	2,_C+128	;volatile
 48351  014E3C  006F FF7B FFE6     	movff	postinc2,postinc1
 48352  014E42  006F FF7B FFE6     	movff	postinc2,postinc1
 48353  014E48  006F FF7B FFE6     	movff	postinc2,postinc1
 48354  014E4E  006F FF7B FFE6     	movff	postinc2,postinc1
 48355  014E54  0E00               	movlw	0
 48356  014E56  6EE6               	movwf	postinc1,c
 48357  014E58  0E00               	movlw	0
 48358  014E5A  6EE6               	movwf	postinc1,c
 48359  014E5C  0E00               	movlw	0
 48360  014E5E  6EE6               	movwf	postinc1,c
 48361  014E60  0E00               	movlw	0
 48362  014E62  6EE6               	movwf	postinc1,c
 48363  014E64  ECC1  F0F4         	call	___flge	;wreg free
 48364  014E68  B02A               	btfsc	btemp& (0+255),0,c
 48365  014E6A  D02A               	goto	l17082
 48366                           
 48367                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 48368  014E6C  0E00               	movlw	0
 48369  014E6E  6EE6               	movwf	postinc1,c
 48370  014E70  0E00               	movlw	0
 48371  014E72  6EE6               	movwf	postinc1,c
 48372  014E74  0E61               	movlw	97
 48373  014E76  6EE6               	movwf	postinc1,c
 48374  014E78  0E45               	movlw	69
 48375  014E7A  6EE6               	movwf	postinc1,c
 48376  014E7C  EE22  F17F         	lfsr	2,_C+128	;volatile
 48377  014E80  006F FF7B FFE6     	movff	postinc2,postinc1
 48378  014E86  006F FF7B FFE6     	movff	postinc2,postinc1
 48379  014E8C  006F FF7B FFE6     	movff	postinc2,postinc1
 48380  014E92  006F FF7B FFE6     	movff	postinc2,postinc1
 48381  014E98  EC50  F0BE         	call	___fldiv	;wreg free
 48382  014E9C  0060  F0AB  FFE6   	movff	btemp,postinc1
 48383  014EA2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48384  014EA8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48385  014EAE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48386  014EB4  0E9F               	movlw	low (_C+160)
 48387  014EB6  6EE6               	movwf	postinc1,c
 48388  014EB8  0E09               	movlw	high (_C+160)
 48389  014EBA  6EE6               	movwf	postinc1,c
 48390  014EBC  EC18  F00A         	call	___asfladd	;wreg free
 48391  014EC0                     l17082:
 48392                           
 48393                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 48394  014EC0  EE22  F17F         	lfsr	2,_C+128	;volatile
 48395  014EC4  0E03               	movlw	3
 48396  014EC6  AEDB               	btfss	plusw2,7,c
 48397  014EC8  D038               	goto	l17086
 48398                           
 48399                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 48400  014ECA  0E00               	movlw	0
 48401  014ECC  6EE6               	movwf	postinc1,c
 48402  014ECE  0E00               	movlw	0
 48403  014ED0  6EE6               	movwf	postinc1,c
 48404  014ED2  0E61               	movlw	97
 48405  014ED4  6EE6               	movwf	postinc1,c
 48406  014ED6  0E45               	movlw	69
 48407  014ED8  6EE6               	movwf	postinc1,c
 48408  014EDA  EE22  F17F         	lfsr	2,_C+128	;volatile
 48409  014EDE  006F FF7B FFE6     	movff	postinc2,postinc1
 48410  014EE4  006F FF7B FFE6     	movff	postinc2,postinc1
 48411  014EEA  006F FF7B FFE6     	movff	postinc2,postinc1
 48412  014EF0  006F FF7B FFE6     	movff	postinc2,postinc1
 48413  014EF6  EC50  F0BE         	call	___fldiv	;wreg free
 48414  014EFA  0060  F0AB  FFE6   	movff	btemp,postinc1
 48415  014F00  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48416  014F06  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48417  014F0C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48418  014F12  EC56  F004         	call	_fabsf	;wreg free
 48419  014F16  0060  F0AB  FFE6   	movff	btemp,postinc1
 48420  014F1C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48421  014F22  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48422  014F28  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48423  014F2E  0EA3               	movlw	low (_C+164)
 48424  014F30  6EE6               	movwf	postinc1,c
 48425  014F32  0E09               	movlw	high (_C+164)
 48426  014F34  6EE6               	movwf	postinc1,c
 48427  014F36  EC18  F00A         	call	___asfladd	;wreg free
 48428  014F3A                     l17086:
 48429                           
 48430                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 48431  014F3A  0E00               	movlw	0
 48432  014F3C  6EE6               	movwf	postinc1,c
 48433  014F3E  0E00               	movlw	0
 48434  014F40  6EE6               	movwf	postinc1,c
 48435  014F42  0EC8               	movlw	200
 48436  014F44  6EE6               	movwf	postinc1,c
 48437  014F46  0E42               	movlw	66
 48438  014F48  6EE6               	movwf	postinc1,c
 48439  014F4A  EE22  F18B         	lfsr	2,_C+140	;volatile
 48440  014F4E  006F FF7B FFE6     	movff	postinc2,postinc1
 48441  014F54  006F FF7B FFE6     	movff	postinc2,postinc1
 48442  014F5A  006F FF7B FFE6     	movff	postinc2,postinc1
 48443  014F60  006F FF7B FFE6     	movff	postinc2,postinc1
 48444  014F66  EE22  F19B         	lfsr	2,_C+156	;volatile
 48445  014F6A  006F FF7B FFE6     	movff	postinc2,postinc1
 48446  014F70  006F FF7B FFE6     	movff	postinc2,postinc1
 48447  014F76  006F FF7B FFE6     	movff	postinc2,postinc1
 48448  014F7C  006F FF7B FFE6     	movff	postinc2,postinc1
 48449  014F82  EC50  F0BE         	call	___fldiv	;wreg free
 48450  014F86  0060  F0AB  FFE6   	movff	btemp,postinc1
 48451  014F8C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48452  014F92  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48453  014F98  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48454  014F9E  ECFF  F0B2         	call	___flmul	;wreg free
 48455  014FA2  0060  F0AB  FFE6   	movff	btemp,postinc1
 48456  014FA8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48457  014FAE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48458  014FB4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48459  014FBA  EC55  F0F3         	call	___fltol	;wreg free
 48460  014FBE  0060  F0A8  F034   	movff	btemp,btemp+10
 48461  014FC4  0060  F0AC  F035   	movff	btemp+1,btemp+11
 48462  014FCA  0E01               	movlw	1
 48463  014FCC  2634               	addwf	(btemp+10)^0,f,c
 48464  014FCE  0E00               	movlw	0
 48465  014FD0  2235               	addwfc	(btemp+11)^0,f,c
 48466  014FD2  0060  F0D0  F9B5   	movff	btemp+10,_C+182	;volatile
 48467  014FD8  0060  F0D4  F9B6   	movff	btemp+11,_C+183	;volatile
 48468                           
 48469                           ;bsoc.c: 76:  if (C.soc > 100)
 48470  014FDE  EE22  F1B5         	lfsr	2,_C+182	;volatile
 48471  014FE2  0E01               	movlw	1
 48472  014FE4  50DB               	movf	plusw2,w,c
 48473  014FE6  E104               	bnz	u1671_20
 48474  014FE8  0E65               	movlw	101
 48475  014FEA  5CDE               	subwf	postinc2,w,c
 48476  014FEC  A0D8               	btfss	status,0,c
 48477  014FEE  D008               	goto	l17092
 48478  014FF0                     u1671_20:
 48479                           
 48480                           ;bsoc.c: 77:   C.soc = 100;
 48481  014FF0  0E64               	movlw	100
 48482  014FF2  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
 48483  014FF8  0E00               	movlw	0
 48484  014FFA  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
 48485  015000                     l17092:
 48486                           
 48487                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 48488  015000  EE22  F143         	lfsr	2,_C+68	;volatile
 48489  015004  0E03               	movlw	3
 48490  015006  AEDB               	btfss	plusw2,7,c
 48491  015008  D047               	goto	l2362
 48492                           
 48493                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 48494  01500A  EE22  F143         	lfsr	2,_C+68	;volatile
 48495  01500E  006F FF7B FFE6     	movff	postinc2,postinc1
 48496  015014  006F FF7B FFE6     	movff	postinc2,postinc1
 48497  01501A  006F FF7B FFE6     	movff	postinc2,postinc1
 48498  015020  006F FF7B FFE6     	movff	postinc2,postinc1
 48499  015026  EE22  F19B         	lfsr	2,_C+156	;volatile
 48500  01502A  006F FF7B FFE6     	movff	postinc2,postinc1
 48501  015030  006F FF7B FFE6     	movff	postinc2,postinc1
 48502  015036  006F FF7B FFE6     	movff	postinc2,postinc1
 48503  01503C  006F FF7B FFE6     	movff	postinc2,postinc1
 48504  015042  EC50  F0BE         	call	___fldiv	;wreg free
 48505  015046  0060  F0AB  FFE6   	movff	btemp,postinc1
 48506  01504C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48507  015052  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48508  015058  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48509  01505E  EC3E  F00E         	call	___flneg	;wreg free
 48510  015062  0060  F0AB  FFE6   	movff	btemp,postinc1
 48511  015068  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48512  01506E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48513  015074  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48514  01507A  EC55  F0F3         	call	___fltol	;wreg free
 48515  01507E  0060  F0A8  F034   	movff	btemp,btemp+10
 48516  015084  0060  F0AC  F035   	movff	btemp+1,btemp+11
 48517  01508A  0060  F0D0  F9B3   	movff	btemp+10,_C+180	;volatile
 48518  015090  0060  F0D4  F9B4   	movff	btemp+11,_C+181	;volatile
 48519                           
 48520                           ;bsoc.c: 81:  } else {
 48521  015096  D008               	goto	l17096
 48522  015098                     l2362:
 48523                           
 48524                           ;bsoc.c: 82:   C.runtime = 99;
 48525  015098  0E63               	movlw	99
 48526  01509A  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 48527  0150A0  0E00               	movlw	0
 48528  0150A2  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 48529  0150A8                     l17096:
 48530                           
 48531                           ;bsoc.c: 84:  if (C.runtime > 99)
 48532  0150A8  EE22  F1B3         	lfsr	2,_C+180	;volatile
 48533  0150AC  0E01               	movlw	1
 48534  0150AE  50DB               	movf	plusw2,w,c
 48535  0150B0  E104               	bnz	u1673_20
 48536  0150B2  0E64               	movlw	100
 48537  0150B4  5CDE               	subwf	postinc2,w,c
 48538  0150B6  A0D8               	btfss	status,0,c
 48539  0150B8  D008               	goto	l17100
 48540  0150BA                     u1673_20:
 48541                           
 48542                           ;bsoc.c: 85:   C.runtime = 99;
 48543  0150BA  0E63               	movlw	99
 48544  0150BC  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 48545  0150C2  0E00               	movlw	0
 48546  0150C4  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 48547  0150CA                     l17100:
 48548                           
 48549                           ;bsoc.c: 87:  V.lowint_count++;
 48550  0150CA  0E01               	movlw	1
 48551  0150CC  0102               	movlb	2	; () banked
 48552  0150CE  27B4               	addwf	(_V+173)& (0+255),f,b	;volatile
 48553  0150D0  0E00               	movlw	0
 48554  0150D2  23B5               	addwfc	(_V+174)& (0+255),f,b	;volatile
 48555  0150D4  23B6               	addwfc	(_V+175)& (0+255),f,b	;volatile
 48556  0150D6  23B7               	addwfc	(_V+176)& (0+255),f,b	;volatile
 48557                           
 48558                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 48559  0150D8  2A50               	incf	calc_bsoc@log_update_wait^0,f,c
 48560  0150DA  0450               	decf	calc_bsoc@log_update_wait^0,w,c
 48561  0150DC  A4D8               	btfss	status,2,c
 48562  0150DE  D177               	goto	l17112
 48563                           
 48564                           ; BSR set to: 2
 48565  0150E0  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 48566  0150E2  B4D8               	btfsc	status,2,c
 48567  0150E4  D174               	goto	l17112
 48568                           
 48569                           ; BSR set to: 2
 48570                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 48571  0150E6  EC0E  F015         	call	_port_data_dma_ptr	;wreg free
 48572                           
 48573                           ;stkvar	_log_ptr @ sp[(-6)+4]
 48574  0150EA  0EFF               	movlw	-1
 48575  0150EC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 48576  0150F2  0EFE               	movlw	-2
 48577  0150F4  0060  F0AB  FFE3   	movff	btemp,plusw1
 48578                           
 48579                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 48580  0150FA  EE22  F1D0         	lfsr	2,_C+209	;volatile
 48581  0150FE  006F FF7B FFE6     	movff	postinc2,postinc1
 48582  015104  006F FF7B FFE6     	movff	postinc2,postinc1
 48583  01510A  006F FF7B FFE6     	movff	postinc2,postinc1
 48584  015110  006F FF7B FFE6     	movff	postinc2,postinc1
 48585  015116  EE22  F1D4         	lfsr	2,_C+213	;volatile
 48586  01511A  006F FF7B FFE6     	movff	postinc2,postinc1
 48587  015120  006F FF7B FFE6     	movff	postinc2,postinc1
 48588  015126  006F FF7B FFE6     	movff	postinc2,postinc1
 48589  01512C  006F FF7B FFE6     	movff	postinc2,postinc1
 48590  015132  EE22  F19B         	lfsr	2,_C+156	;volatile
 48591  015136  006F FF7B FFE6     	movff	postinc2,postinc1
 48592  01513C  006F FF7B FFE6     	movff	postinc2,postinc1
 48593  015142  006F FF7B FFE6     	movff	postinc2,postinc1
 48594  015148  006F FF7B FFE6     	movff	postinc2,postinc1
 48595  01514E  EE22  F233         	lfsr	2,_C+308	;volatile
 48596  015152  006F FF7B FFE6     	movff	postinc2,postinc1
 48597  015158  006F FF7B FFE6     	movff	postinc2,postinc1
 48598  01515E  006F FF7B FFE6     	movff	postinc2,postinc1
 48599  015164  006F FF7B FFE6     	movff	postinc2,postinc1
 48600  01516A  EE22  F22F         	lfsr	2,_C+304	;volatile
 48601  01516E  006F FF7B FFE6     	movff	postinc2,postinc1
 48602  015174  006F FF7B FFE6     	movff	postinc2,postinc1
 48603  01517A  006F FF7B FFE6     	movff	postinc2,postinc1
 48604  015180  006F FF7B FFE6     	movff	postinc2,postinc1
 48605  015186  EE22  F22D         	lfsr	2,_C+302	;volatile
 48606  01518A  50DF               	movf	indf2,w,c
 48607  01518C  6EE6               	movwf	postinc1,c
 48608  01518E  0E00               	movlw	0
 48609  015190  6EE6               	movwf	postinc1,c
 48610  015192  ECF2  F014         	call	_get_ac_charger_relay	;wreg free
 48611  015196  502A               	movf	btemp^0,w,c
 48612  015198  6EE6               	movwf	postinc1,c
 48613  01519A  0E00               	movlw	0
 48614  01519C  6EE6               	movwf	postinc1,c
 48615  01519E  EE22  F167         	lfsr	2,_C+104	;volatile
 48616  0151A2  006F FF7B FFE6     	movff	postinc2,postinc1
 48617  0151A8  006F FF7B FFE6     	movff	postinc2,postinc1
 48618  0151AE  006F FF7B FFE6     	movff	postinc2,postinc1
 48619  0151B4  006F FF7B FFE6     	movff	postinc2,postinc1
 48620  0151BA  EE22  F187         	lfsr	2,_C+136	;volatile
 48621  0151BE  006F FF7B FFE6     	movff	postinc2,postinc1
 48622  0151C4  006F FF7B FFE6     	movff	postinc2,postinc1
 48623  0151CA  006F FF7B FFE6     	movff	postinc2,postinc1
 48624  0151D0  006F FF7B FFE6     	movff	postinc2,postinc1
 48625  0151D6  EE22  F1B3         	lfsr	2,_C+180	;volatile
 48626  0151DA  006F FF78  F034    	movff	postinc2,btemp+10
 48627  0151E0  006F FF74  F035    	movff	postdec2,btemp+11
 48628  0151E6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 48629  0151EC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 48630  0151F2  EE22  F1B5         	lfsr	2,_C+182	;volatile
 48631  0151F6  006F FF78  F034    	movff	postinc2,btemp+10
 48632  0151FC  006F FF74  F035    	movff	postdec2,btemp+11
 48633  015202  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 48634  015208  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 48635  01520E  EE22  F193         	lfsr	2,_C+148	;volatile
 48636  015212  006F FF7B FFE6     	movff	postinc2,postinc1
 48637  015218  006F FF7B FFE6     	movff	postinc2,postinc1
 48638  01521E  006F FF7B FFE6     	movff	postinc2,postinc1
 48639  015224  006F FF7B FFE6     	movff	postinc2,postinc1
 48640  01522A  EE22  F18F         	lfsr	2,_C+144	;volatile
 48641  01522E  006F FF7B FFE6     	movff	postinc2,postinc1
 48642  015234  006F FF7B FFE6     	movff	postinc2,postinc1
 48643  01523A  006F FF7B FFE6     	movff	postinc2,postinc1
 48644  015240  006F FF7B FFE6     	movff	postinc2,postinc1
 48645  015246  EE22  F177         	lfsr	2,_C+120	;volatile
 48646  01524A  006F FF7B FFE6     	movff	postinc2,postinc1
 48647  015250  006F FF7B FFE6     	movff	postinc2,postinc1
 48648  015256  006F FF7B FFE6     	movff	postinc2,postinc1
 48649  01525C  006F FF7B FFE6     	movff	postinc2,postinc1
 48650  015262  EE22  F173         	lfsr	2,_C+116	;volatile
 48651  015266  006F FF7B FFE6     	movff	postinc2,postinc1
 48652  01526C  006F FF7B FFE6     	movff	postinc2,postinc1
 48653  015272  006F FF7B FFE6     	movff	postinc2,postinc1
 48654  015278  006F FF7B FFE6     	movff	postinc2,postinc1
 48655  01527E  EE22  F17B         	lfsr	2,_C+124	;volatile
 48656  015282  006F FF7B FFE6     	movff	postinc2,postinc1
 48657  015288  006F FF7B FFE6     	movff	postinc2,postinc1
 48658  01528E  006F FF7B FFE6     	movff	postinc2,postinc1
 48659  015294  006F FF7B FFE6     	movff	postinc2,postinc1
 48660  01529A  EE22  F17F         	lfsr	2,_C+128	;volatile
 48661  01529E  006F FF7B FFE6     	movff	postinc2,postinc1
 48662  0152A4  006F FF7B FFE6     	movff	postinc2,postinc1
 48663  0152AA  006F FF7B FFE6     	movff	postinc2,postinc1
 48664  0152B0  006F FF7B FFE6     	movff	postinc2,postinc1
 48665  0152B6  EE22  F147         	lfsr	2,_C+72	;volatile
 48666  0152BA  006F FF7B FFE6     	movff	postinc2,postinc1
 48667  0152C0  006F FF7B FFE6     	movff	postinc2,postinc1
 48668  0152C6  006F FF7B FFE6     	movff	postinc2,postinc1
 48669  0152CC  006F FF7B FFE6     	movff	postinc2,postinc1
 48670  0152D2  EE22  F143         	lfsr	2,_C+68	;volatile
 48671  0152D6  006F FF7B FFE6     	movff	postinc2,postinc1
 48672  0152DC  006F FF7B FFE6     	movff	postinc2,postinc1
 48673  0152E2  006F FF7B FFE6     	movff	postinc2,postinc1
 48674  0152E8  006F FF7B FFE6     	movff	postinc2,postinc1
 48675  0152EE  EE22  F163         	lfsr	2,_C+100	;volatile
 48676  0152F2  006F FF7B FFE6     	movff	postinc2,postinc1
 48677  0152F8  006F FF7B FFE6     	movff	postinc2,postinc1
 48678  0152FE  006F FF7B FFE6     	movff	postinc2,postinc1
 48679  015304  006F FF7B FFE6     	movff	postinc2,postinc1
 48680  01530A  EE22  F14B         	lfsr	2,_C+76	;volatile
 48681  01530E  006F FF7B FFE6     	movff	postinc2,postinc1
 48682  015314  006F FF7B FFE6     	movff	postinc2,postinc1
 48683  01531A  006F FF7B FFE6     	movff	postinc2,postinc1
 48684  015320  006F FF7B FFE6     	movff	postinc2,postinc1
 48685  015326  EE22  F14F         	lfsr	2,_C+80	;volatile
 48686  01532A  006F FF7B FFE6     	movff	postinc2,postinc1
 48687  015330  006F FF7B FFE6     	movff	postinc2,postinc1
 48688  015336  006F FF7B FFE6     	movff	postinc2,postinc1
 48689  01533C  006F FF7B FFE6     	movff	postinc2,postinc1
 48690  015342  EE22  F153         	lfsr	2,_C+84	;volatile
 48691  015346  006F FF7B FFE6     	movff	postinc2,postinc1
 48692  01534C  006F FF7B FFE6     	movff	postinc2,postinc1
 48693  015352  006F FF7B FFE6     	movff	postinc2,postinc1
 48694  015358  006F FF7B FFE6     	movff	postinc2,postinc1
 48695  01535E  0060  FA23  FFE6   	movff	_V+129,postinc1
 48696  015364  0060  FA27  FFE6   	movff	_V+130,postinc1
 48697  01536A  0060  FA2B  FFE6   	movff	_V+131,postinc1
 48698  015370  0060  FA2F  FFE6   	movff	_V+132,postinc1
 48699  015376  0E32               	movlw	50
 48700  015378  6EE6               	movwf	postinc1,c
 48701  01537A  0E00               	movlw	0
 48702  01537C  6EE6               	movwf	postinc1,c
 48703  01537E  0EF7               	movlw	low STR_95
 48704  015380  6EE6               	movwf	postinc1,c
 48705  015382  0EF9               	movlw	high STR_95
 48706  015384  6EE6               	movwf	postinc1,c
 48707                           
 48708                           ;stkvar	_log_ptr @ sp[(-98)+4]
 48709  015386  0EA2               	movlw	-94
 48710  015388  006F FF8F FFE6     	movff	plusw1,postinc1
 48711  01538E  006F FF8F FFE6     	movff	plusw1,postinc1
 48712  015394  0E5E               	movlw	94
 48713  015396  6EE6               	movwf	postinc1,c
 48714  015398  EC71  F0FD         	call	_sprintf	;wreg free
 48715                           
 48716                           ; BSR set to: 0
 48717                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 48718  01539C  0E7D               	movlw	125
 48719  01539E  6EE6               	movwf	postinc1,c
 48720  0153A0  0E00               	movlw	0
 48721  0153A2  6EE6               	movwf	postinc1,c
 48722  0153A4  0E0A               	movlw	10
 48723  0153A6  6EE6               	movwf	postinc1,c
 48724  0153A8  ECBA  F00F         	call	_StartTimer	;wreg free
 48725                           
 48726                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 48727                           ;stkvar	_log_ptr @ sp[(-6)+4]
 48728  0153AC  0EFE               	movlw	-2
 48729  0153AE  006F FF8F FFE6     	movff	plusw1,postinc1
 48730  0153B4  006F FF8F FFE6     	movff	plusw1,postinc1
 48731  0153BA  ECFD  F005         	call	_strlen	;wreg free
 48732  0153BE  0060  F0AB  FFE6   	movff	btemp,postinc1
 48733  0153C4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48734  0153CA  ECC7  F00D         	call	_send_port_data_dma	;wreg free
 48735  0153CE                     l17112:
 48736                           
 48737                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 48738  0153CE  0E09               	movlw	9
 48739  0153D0  6450               	cpfsgt	calc_bsoc@log_update_wait^0,c
 48740  0153D2  D001               	goto	l2366
 48741                           
 48742                           ;bsoc.c: 102:   log_update_wait = 0;
 48743  0153D4  6A50               	clrf	calc_bsoc@log_update_wait^0,c
 48744  0153D6                     l2366:
 48745                           
 48746                           ;bsoc.c: 104:  C.update = 0;
 48747  0153D6  0E00               	movlw	0
 48748  0153D8  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 48749                           
 48750                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 48751  0153DE  92BE               	bcf	190,1,c	;volatile
 48752                           
 48753                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 48754  0153E0  0EFA               	movlw	250
 48755  0153E2  26E1               	addwf	fsr1l,f,c
 48756  0153E4  0EFF               	movlw	255
 48757  0153E6  22E2               	addwfc	fsr1h,f,c
 48758  0153E8  0012               	return		;funcret
 48759  0153EA                     __end_of_calc_bsoc:
 48760                           	opt callstack 0
 48761                           
 48762 ;; *************** function _send_port_data_dma *****************
 48763 ;; Defined at:
 48764 ;;		line 397 in file "eadog.c"
 48765 ;; Parameters:    Size  Location     Type
 48766 ;;  dsize           2  [STACK] unsigned short 
 48767 ;; Auto vars:     Size  Location     Type
 48768 ;;		None
 48769 ;; Return value:  Size  Location     Type
 48770 ;;                  1  [STACK] void 
 48771 ;; Registers used:
 48772 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 48773 ;; Tracked objects:
 48774 ;;		On entry : 0/0
 48775 ;;		On exit  : 3F/3B
 48776 ;;		Unchanged: 0/0
 48777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48782 ;;Total ram usage:        0 bytes
 48783 ;; Hardware stack levels used:    1
 48784 ;; Hardware stack levels required when called:    3
 48785 ;; This function calls:
 48786 ;;		Nothing
 48787 ;; This function is called by:
 48788 ;;		_calc_bsoc
 48789 ;; This function uses a reentrant model
 48790 ;;
 48791                           
 48792                           	psect	text201
 48793  001B8E                     __ptext201:
 48794                           	opt callstack 0
 48795  001B8E                     _send_port_data_dma:
 48796                           	opt callstack 11
 48797                           
 48798                           ;eadog.c: 397: void send_port_data_dma(uint16_t dsize);eadog.c: 398: {;eadog.c: 399:  if
      +                           (dsize > 512)
 48799                           ;stkvar	_dsize @ sp[(0)+-2]
 48800                           
 48801                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48802                           ;incstack = 0
 48803  001B8E  0EFE               	movlw	-2
 48804  001B90  04E3               	decf	plusw1,w,c
 48805  001B92  0EFF               	movlw	-1
 48806  001B94  006F FF8C  F02A    	movff	plusw1,btemp
 48807  001B9A  0E02               	movlw	2
 48808  001B9C  5A2A               	subwfb	btemp^0,f,c
 48809  001B9E  A0D8               	btfss	status,0,c
 48810  001BA0  D00C               	goto	l12908
 48811                           
 48812                           ;eadog.c: 400:   dsize = 512;
 48813  001BA2  0E00               	movlw	0
 48814  001BA4  6E34               	movwf	(btemp+10)^0,c
 48815  001BA6  0E02               	movlw	2
 48816  001BA8  6E35               	movwf	(btemp+11)^0,c
 48817                           
 48818                           ;stkvar	_dsize @ sp[(0)+-2]
 48819  001BAA  0EFE               	movlw	-2
 48820  001BAC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48821  001BB2  0EFF               	movlw	-1
 48822  001BB4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48823  001BBA                     l12908:
 48824                           
 48825                           ;eadog.c: 402:  DMA2CON0bits.EN = 0;
 48826  001BBA  013B               	movlb	59	; () banked
 48827  001BBC  9FDC               	bcf	220,7,b	;volatile
 48828                           
 48829                           ; BSR set to: 59
 48830                           ;eadog.c: 403:  DMA2SSZ = dsize;
 48831                           ;stkvar	_dsize @ sp[(0)+-2]
 48832  001BBE  0EFE               	movlw	-2
 48833  001BC0  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 48834  001BC6  0EFF               	movlw	-1
 48835  001BC8  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 48836                           
 48837                           ; BSR set to: 59
 48838                           ;eadog.c: 404:  DMA2DSZ = 1;
 48839  001BCE  0E00               	movlw	0
 48840  001BD0  6FCF               	movwf	207,b	;volatile
 48841  001BD2  0E01               	movlw	1
 48842  001BD4  6FCE               	movwf	206,b	;volatile
 48843                           
 48844                           ; BSR set to: 59
 48845                           ;eadog.c: 405:  DMA2CON0bits.EN = 1;
 48846  001BD6  8FDC               	bsf	220,7,b	;volatile
 48847                           
 48848                           ; BSR set to: 59
 48849                           ;eadog.c: 406:  DMA2CON0bits.DMA2SIRQEN = 1;
 48850  001BD8  8DDC               	bsf	220,6,b	;volatile
 48851                           
 48852                           ; BSR set to: 59
 48853                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 48854  001BDA  52E5               	movf	postdec1,f,c
 48855  001BDC  52E5               	movf	postdec1,f,c
 48856  001BDE  0012               	return		;funcret
 48857  001BE0                     __end_of_send_port_data_dma:
 48858                           	opt callstack 0
 48859                           
 48860 ;; *************** function _port_data_dma_ptr *****************
 48861 ;; Defined at:
 48862 ;;		line 412 in file "eadog.c"
 48863 ;; Parameters:    Size  Location     Type
 48864 ;;		None
 48865 ;; Auto vars:     Size  Location     Type
 48866 ;;		None
 48867 ;; Return value:  Size  Location     Type
 48868 ;;                  2  [STACK] PTR unsigned char 
 48869 ;; Registers used:
 48870 ;;		wreg, status,2, status,0, btemp, btemp+1
 48871 ;; Tracked objects:
 48872 ;;		On entry : 3F/2
 48873 ;;		On exit  : 0/0
 48874 ;;		Unchanged: 0/0
 48875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48880 ;;Total ram usage:        0 bytes
 48881 ;; Hardware stack levels used:    1
 48882 ;; Hardware stack levels required when called:    3
 48883 ;; This function calls:
 48884 ;;		Nothing
 48885 ;; This function is called by:
 48886 ;;		_calc_bsoc
 48887 ;; This function uses a reentrant model
 48888 ;;
 48889                           
 48890                           	psect	text202
 48891  002A1C                     __ptext202:
 48892                           	opt callstack 0
 48893  002A1C                     _port_data_dma_ptr:
 48894                           	opt callstack 11
 48895                           
 48896                           ;eadog.c: 414:  return port_data;
 48897                           
 48898                           ; BSR set to: 59
 48899                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48900                           ;incstack = 0
 48901  002A1C  0EFF               	movlw	low _port_data
 48902  002A1E  6E2A               	movwf	btemp^0,c
 48903  002A20  0E06               	movlw	high _port_data
 48904  002A22  6E2B               	movwf	(btemp+1)^0,c
 48905                           
 48906                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 48907  002A24  0012               	return		;funcret
 48908  002A26                     __end_of_port_data_dma_ptr:
 48909                           	opt callstack 0
 48910                           
 48911 ;; *************** function ___asfladd *****************
 48912 ;; Defined at:
 48913 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 48914 ;; Parameters:    Size  Location     Type
 48915 ;;  f1p             2  [STACK] PTR 
 48916 ;;		 -> C(320), 
 48917 ;;  f2              4  [STACK] PTR 
 48918 ;; Auto vars:     Size  Location     Type
 48919 ;;		None
 48920 ;; Return value:  Size  Location     Type
 48921 ;;                  4  [STACK] PTR 
 48922 ;; Registers used:
 48923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 48924 ;; Tracked objects:
 48925 ;;		On entry : 0/0
 48926 ;;		On exit  : 0/0
 48927 ;;		Unchanged: 0/0
 48928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48933 ;;Total ram usage:        0 bytes
 48934 ;; Hardware stack levels used:    1
 48935 ;; Hardware stack levels required when called:    4
 48936 ;; This function calls:
 48937 ;;		___fladd
 48938 ;; This function is called by:
 48939 ;;		_calc_bsoc
 48940 ;; This function uses a reentrant model
 48941 ;;
 48942                           
 48943                           	psect	text203
 48944  001430                     __ptext203:
 48945                           	opt callstack 0
 48946  001430                     ___asfladd:
 48947                           	opt callstack 10
 48948                           
 48949                           ;	Return value of ___asfladd is never used
 48950                           ;stkvar	_f2 @ sp[(0)+-6]
 48951                           
 48952                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48953                           ;incstack = 0
 48954  001430  0EFA               	movlw	-6
 48955  001432  006F FF8F FFE6     	movff	plusw1,postinc1
 48956  001438  006F FF8F FFE6     	movff	plusw1,postinc1
 48957  00143E  006F FF8F FFE6     	movff	plusw1,postinc1
 48958  001444  006F FF8F FFE6     	movff	plusw1,postinc1
 48959                           
 48960                           ;stkvar	_f1p @ sp[(-4)+-2]
 48961  00144A  0EFA               	movlw	-6
 48962  00144C  006F FF8F FFD9     	movff	plusw1,fsr2l
 48963  001452  0EFB               	movlw	-5
 48964  001454  006F FF8F FFDA     	movff	plusw1,fsr2h
 48965  00145A  006F FF7B FFE6     	movff	postinc2,postinc1
 48966  001460  006F FF7B FFE6     	movff	postinc2,postinc1
 48967  001466  006F FF7B FFE6     	movff	postinc2,postinc1
 48968  00146C  006F FF7B FFE6     	movff	postinc2,postinc1
 48969  001472  EC14  F0B7         	call	___fladd	;wreg free
 48970                           
 48971                           ;stkvar	_f1p @ sp[(0)+-2]
 48972  001476  0EFE               	movlw	-2
 48973  001478  006F FF8F FFD9     	movff	plusw1,fsr2l
 48974  00147E  0EFF               	movlw	-1
 48975  001480  006F FF8F FFDA     	movff	plusw1,fsr2h
 48976  001486  0060  F0AB  FFDE   	movff	btemp,postinc2
 48977  00148C  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 48978  001492  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 48979  001498  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 48980                           
 48981                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 48982  00149E  0EFA               	movlw	250
 48983  0014A0  26E1               	addwf	fsr1l,f,c
 48984  0014A2  0EFF               	movlw	255
 48985  0014A4  22E2               	addwfc	fsr1h,f,c
 48986  0014A6  0012               	return		;funcret
 48987  0014A8                     __end_of___asfladd:
 48988                           	opt callstack 0
 48989                           
 48990 ;; *************** function _INT0_ISR *****************
 48991 ;; Defined at:
 48992 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 48993 ;; Parameters:    Size  Location     Type
 48994 ;;		None
 48995 ;; Auto vars:     Size  Location     Type
 48996 ;;		None
 48997 ;; Return value:  Size  Location     Type
 48998 ;;                  1    wreg      void 
 48999 ;; Registers used:
 49000 ;;		wreg, status,2, status,0, pclath, tosl
 49001 ;; Tracked objects:
 49002 ;;		On entry : 0/0
 49003 ;;		On exit  : 0/0
 49004 ;;		Unchanged: 0/0
 49005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49010 ;;Total ram usage:        0 bytes
 49011 ;; Hardware stack levels used:    1
 49012 ;; Hardware stack levels required when called:    2
 49013 ;; This function calls:
 49014 ;;		_INT0_CallBack
 49015 ;; This function is called by:
 49016 ;;		Interrupt level 2
 49017 ;; This function uses a non-reentrant model
 49018 ;;
 49019                           
 49020                           	psect	text204
 49021  0029F4                     __ptext204:
 49022                           	opt callstack 0
 49023  0029F4                     _INT0_ISR:
 49024                           	opt callstack 3
 49025                           
 49026                           ;incstack = 0
 49027  0029F4  EE14  F32C         	lfsr	1,___inthi_sp
 49028                           
 49029                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 49030  0029F8  0139               	movlb	57	; () banked
 49031  0029FA  91A1               	bcf	161,0,b	;volatile
 49032                           
 49033                           ; BSR set to: 57
 49034                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 49035  0029FC  EC88  F013         	call	_INT0_CallBack	;wreg free
 49036  002A00  0011               	retfie		f
 49037  002A02                     __end_of_INT0_ISR:
 49038                           	opt callstack 0
 49039                           
 49040 ;; *************** function _INT0_CallBack *****************
 49041 ;; Defined at:
 49042 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 49043 ;; Parameters:    Size  Location     Type
 49044 ;;		None
 49045 ;; Auto vars:     Size  Location     Type
 49046 ;;		None
 49047 ;; Return value:  Size  Location     Type
 49048 ;;                  1  [STACK] void 
 49049 ;; Registers used:
 49050 ;;		wreg, status,2, status,0, pclath, tosl
 49051 ;; Tracked objects:
 49052 ;;		On entry : 3F/39
 49053 ;;		On exit  : 0/0
 49054 ;;		Unchanged: 0/0
 49055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49060 ;;Total ram usage:        0 bytes
 49061 ;; Hardware stack levels used:    1
 49062 ;; Hardware stack levels required when called:    1
 49063 ;; This function calls:
 49064 ;;		Absolute function
 49065 ;;		_INT0_DefaultInterruptHandler
 49066 ;; This function is called by:
 49067 ;;		_INT0_ISR
 49068 ;; This function uses a reentrant model
 49069 ;;
 49070                           
 49071                           	psect	text205
 49072  002710                     __ptext205:
 49073                           	opt callstack 0
 49074  002710                     _INT0_CallBack:
 49075                           	opt callstack 3
 49076                           
 49077                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 49078                           
 49079                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49080                           ;incstack = 0
 49081  002710  0100               	movlb	0	; () banked
 49082  002712  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
 49083  002714  11B4               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 49084  002716  11B5               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 49085  002718  B4D8               	btfsc	status,2,c
 49086  00271A  0012               	return	
 49087                           
 49088                           ; BSR set to: 0
 49089                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 49090  00271C  D801               	call	u1311_48
 49091  00271E  0012               	return	
 49092  002720                     u1311_48:
 49093  002720  0005               	push	
 49094  002722  6EFA               	movwf	pclath,c
 49095  002724  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
 49096  002726  6EFD               	movwf	tosl,c
 49097  002728  51B4               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 49098  00272A  6EFE               	movwf	tosh,c
 49099  00272C  51B5               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 49100  00272E  6EFF               	movwf	tosu,c
 49101  002730  50FA               	movf	pclath,w,c
 49102  002732  0012               	return		;indir
 49103  002734                     __end_of_INT0_CallBack:
 49104                           	opt callstack 0
 49105                           
 49106 ;; *************** function _INT0_DefaultInterruptHandler *****************
 49107 ;; Defined at:
 49108 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 49109 ;; Parameters:    Size  Location     Type
 49110 ;;		None
 49111 ;; Auto vars:     Size  Location     Type
 49112 ;;		None
 49113 ;; Return value:  Size  Location     Type
 49114 ;;                  1  [STACK] void 
 49115 ;; Registers used:
 49116 ;;		None
 49117 ;; Tracked objects:
 49118 ;;		On entry : 3F/0
 49119 ;;		On exit  : 0/0
 49120 ;;		Unchanged: 0/0
 49121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49126 ;;Total ram usage:        0 bytes
 49127 ;; Hardware stack levels used:    1
 49128 ;; This function calls:
 49129 ;;		Nothing
 49130 ;; This function is called by:
 49131 ;;		_EXT_INT_Initialize
 49132 ;;		_INT0_CallBack
 49133 ;; This function uses a reentrant model
 49134 ;;
 49135                           
 49136                           	psect	text206
 49137  002AA0                     __ptext206:
 49138                           	opt callstack 0
 49139  002AA0                     _INT0_DefaultInterruptHandler:
 49140                           	opt callstack 3
 49141                           
 49142                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 49143                           
 49144                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49145                           ;incstack = 0
 49146  002AA0  0012               	return		;funcret
 49147  002AA2                     __end_of_INT0_DefaultInterruptHandler:
 49148                           	opt callstack 0
 49149                           
 49150 ;; *************** function _Default_ISR *****************
 49151 ;; Defined at:
 49152 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 49153 ;; Parameters:    Size  Location     Type
 49154 ;;		None
 49155 ;; Auto vars:     Size  Location     Type
 49156 ;;		None
 49157 ;; Return value:  Size  Location     Type
 49158 ;;                  1    wreg      void 
 49159 ;; Registers used:
 49160 ;;		None
 49161 ;; Tracked objects:
 49162 ;;		On entry : 0/0
 49163 ;;		On exit  : 0/0
 49164 ;;		Unchanged: 0/0
 49165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49170 ;;Total ram usage:        0 bytes
 49171 ;; Hardware stack levels used:    1
 49172 ;; This function calls:
 49173 ;;		Nothing
 49174 ;; This function is called by:
 49175 ;;		Interrupt level 2
 49176 ;; This function uses a non-reentrant model
 49177 ;;
 49178                           
 49179                           	psect	text207
 49180  002A98                     __ptext207:
 49181                           	opt callstack 0
 49182  002A98                     _Default_ISR:
 49183                           	opt callstack 5
 49184                           
 49185                           ;incstack = 0
 49186  002A98  EE14  F32C         	lfsr	1,___inthi_sp
 49187  002A9C  0011               	retfie		f
 49188  002A9E                     __end_of_Default_ISR:
 49189                           	opt callstack 0
 49190                           
 49191 ;; *************** function _ADCC_ISR *****************
 49192 ;; Defined at:
 49193 ;;		line 314 in file "mcc_generated_files/adcc.c"
 49194 ;; Parameters:    Size  Location     Type
 49195 ;;		None
 49196 ;; Auto vars:     Size  Location     Type
 49197 ;;		None
 49198 ;; Return value:  Size  Location     Type
 49199 ;;                  1    wreg      void 
 49200 ;; Registers used:
 49201 ;;		wreg, status,2, status,0, pclath, tosl
 49202 ;; Tracked objects:
 49203 ;;		On entry : 0/0
 49204 ;;		On exit  : 0/0
 49205 ;;		Unchanged: 0/0
 49206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49211 ;;Total ram usage:        0 bytes
 49212 ;; Hardware stack levels used:    1
 49213 ;; Hardware stack levels required when called:    1
 49214 ;; This function calls:
 49215 ;;		Absolute function
 49216 ;;		_ADCC_DefaultInterruptHandler
 49217 ;;		_adc_int_handler
 49218 ;; This function is called by:
 49219 ;;		Interrupt level 2
 49220 ;; This function uses a non-reentrant model
 49221 ;;
 49222                           
 49223                           	psect	text208
 49224  0023A4                     __ptext208:
 49225                           	opt callstack 0
 49226  0023A4                     _ADCC_ISR:
 49227                           	opt callstack 4
 49228                           
 49229                           ;incstack = 0
 49230  0023A4  EE14  F32C         	lfsr	1,___inthi_sp
 49231                           
 49232                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 49233  0023A8  0139               	movlb	57	; () banked
 49234  0023AA  95A1               	bcf	161,2,b	;volatile
 49235                           
 49236                           ; BSR set to: 57
 49237                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 49238  0023AC  0100               	movlb	0	; () banked
 49239  0023AE  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 49240  0023B0  11A5               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 49241  0023B2  11A6               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 49242  0023B4  B4D8               	btfsc	status,2,c
 49243  0023B6  0011               	retfie		f
 49244                           
 49245                           ; BSR set to: 0
 49246                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 49247  0023B8  D801               	call	i2u1378_48
 49248  0023BA  0011               	retfie		f
 49249  0023BC                     i2u1378_48:
 49250  0023BC  0005               	push	
 49251  0023BE  6EFA               	movwf	pclath,c
 49252  0023C0  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 49253  0023C2  6EFD               	movwf	tosl,c
 49254  0023C4  51A5               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 49255  0023C6  6EFE               	movwf	tosh,c
 49256  0023C8  51A6               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 49257  0023CA  6EFF               	movwf	tosu,c
 49258  0023CC  50FA               	movf	pclath,w,c
 49259  0023CE  0012               	return		;indir
 49260  0023D0                     __end_of_ADCC_ISR:
 49261                           	opt callstack 0
 49262                           
 49263 ;; *************** function _adc_int_t_handler *****************
 49264 ;; Defined at:
 49265 ;;		line 183 in file "daq.c"
 49266 ;; Parameters:    Size  Location     Type
 49267 ;;		None
 49268 ;; Auto vars:     Size  Location     Type
 49269 ;;		None
 49270 ;; Return value:  Size  Location     Type
 49271 ;;                  1  [STACK] void 
 49272 ;; Registers used:
 49273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 49274 ;; Tracked objects:
 49275 ;;		On entry : 3F/0
 49276 ;;		On exit  : 0/0
 49277 ;;		Unchanged: 0/0
 49278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49283 ;;Total ram usage:        0 bytes
 49284 ;; Hardware stack levels used:    1
 49285 ;; Hardware stack levels required when called:    1
 49286 ;; This function calls:
 49287 ;;		_ADCC_DischargeSampleCapacitor
 49288 ;;		_ADCC_StartConversion
 49289 ;; This function is called by:
 49290 ;;		_start_adc_scan
 49291 ;;		_ADCC_ThresholdISR
 49292 ;; This function uses a reentrant model
 49293 ;;
 49294                           
 49295                           	psect	text209
 49296  001238                     __ptext209:
 49297                           	opt callstack 0
 49298  001238                     _adc_int_t_handler:
 49299                           	opt callstack 3
 49300                           
 49301                           ;daq.c: 188:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 49302                           
 49303                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49304                           ;incstack = 0
 49305  001238  013E               	movlb	62	; () banked
 49306  00123A  51E6               	movf	230,w,b	;volatile
 49307  00123C  006F FB9C  F02A    	movff	16103,btemp	;volatile
 49308  001242  6A2B               	clrf	(btemp+1)^0,c
 49309  001244  0060  F0A8  F02B   	movff	btemp,btemp+1
 49310  00124A  6A2A               	clrf	btemp^0,c
 49311  00124C  262A               	addwf	btemp^0,f,c
 49312  00124E  0E00               	movlw	0
 49313  001250  222B               	addwfc	(btemp+1)^0,f,c
 49314  001252  0101               	movlb	1	; () banked
 49315  001254  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 49316  001256  0D02               	mullw	2
 49317  001258  0E00               	movlw	low _R
 49318  00125A  24F3               	addwf	243,w,c
 49319  00125C  6ED9               	movwf	fsr2l,c
 49320  00125E  0E01               	movlw	high _R
 49321  001260  20F4               	addwfc	prodh,w,c
 49322  001262  6EDA               	movwf	fsr2h,c
 49323  001264  0060  F0AB  FFDE   	movff	btemp,postinc2
 49324  00126A  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 49325  001270                     l14616:
 49326                           
 49327                           ;daq.c: 190:   if (++R.scan_index > 0XD) {
 49328  001270  0101               	movlb	1	; () banked
 49329  001272  2B32               	incf	(_R+50)& (0+255),f,b	;volatile
 49330  001274  0E0D               	movlw	13
 49331  001276  6532               	cpfsgt	(_R+50)& (0+255),b	;volatile
 49332  001278  D003               	goto	l14622
 49333                           
 49334                           ; BSR set to: 1
 49335                           ;daq.c: 191:    R.done = 1;
 49336  00127A  0E01               	movlw	1
 49337  00127C  6F35               	movwf	(_R+53)& (0+255),b	;volatile
 49338  00127E  0012               	return	
 49339  001280                     l14622:
 49340                           
 49341                           ; BSR set to: 1
 49342                           ;daq.c: 197:  } while (!((R.scan_select >> R.scan_index) &0x1));
 49343  001280  0060  F4C8  F035   	movff	_R+50,btemp+11	;volatile
 49344  001286  EE20  F133         	lfsr	2,_R+51	;volatile
 49345  00128A  006F FF78  F032    	movff	postinc2,btemp+8
 49346  001290  006F FF74  F033    	movff	postdec2,btemp+9
 49347  001296  2A35               	incf	(btemp+11)^0,f,c
 49348  001298  D003               	goto	u1375_44
 49349  00129A                     u1375_45:
 49350  00129A  90D8               	bcf	status,0,c
 49351  00129C  3233               	rrcf	(btemp+9)^0,f,c
 49352  00129E  3232               	rrcf	(btemp+8)^0,f,c
 49353  0012A0                     u1375_44:
 49354  0012A0  2E35               	decfsz	(btemp+11)^0,f,c
 49355  0012A2  D7FB               	goto	u1375_45
 49356  0012A4  A032               	btfss	(btemp+8)^0,0,c
 49357  0012A6  D7E4               	goto	l14616
 49358                           
 49359                           ;daq.c: 198:  ADCC_DischargeSampleCapacitor();
 49360  0012A8  EC29  F015         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 49361                           
 49362                           ; BSR set to: 62
 49363                           ;daq.c: 199:  ADCC_StartConversion(R.scan_index & 0xf);
 49364  0012AC  0101               	movlb	1	; () banked
 49365  0012AE  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 49366  0012B0  0B0F               	andlw	15
 49367  0012B2  6EE6               	movwf	postinc1,c
 49368  0012B4  ECAC  F014         	call	_ADCC_StartConversion	;wreg free
 49369                           
 49370                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49371  0012B8  0012               	return		;funcret
 49372  0012BA                     __end_of_adc_int_t_handler:
 49373                           	opt callstack 0
 49374                           
 49375 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 49376 ;; Defined at:
 49377 ;;		line 339 in file "mcc_generated_files/adcc.c"
 49378 ;; Parameters:    Size  Location     Type
 49379 ;;		None
 49380 ;; Auto vars:     Size  Location     Type
 49381 ;;		None
 49382 ;; Return value:  Size  Location     Type
 49383 ;;                  1  [STACK] void 
 49384 ;; Registers used:
 49385 ;;		None
 49386 ;; Tracked objects:
 49387 ;;		On entry : 3F/0
 49388 ;;		On exit  : 0/0
 49389 ;;		Unchanged: 0/0
 49390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49395 ;;Total ram usage:        0 bytes
 49396 ;; Hardware stack levels used:    1
 49397 ;; This function calls:
 49398 ;;		Nothing
 49399 ;; This function is called by:
 49400 ;;		_ADCC_Initialize
 49401 ;;		_ADCC_ISR
 49402 ;;		_ADCC_ThresholdISR
 49403 ;; This function uses a reentrant model
 49404 ;;
 49405                           
 49406                           	psect	text210
 49407  002AA2                     __ptext210:
 49408                           	opt callstack 0
 49409  002AA2                     _ADCC_DefaultInterruptHandler:
 49410                           	opt callstack 4
 49411                           
 49412                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 49413                           
 49414                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49415                           ;incstack = 0
 49416  002AA2  0012               	return		;funcret
 49417  002AA4                     __end_of_ADCC_DefaultInterruptHandler:
 49418                           	opt callstack 0
 49419                           
 49420 ;; *************** function _adc_int_handler *****************
 49421 ;; Defined at:
 49422 ;;		line 173 in file "daq.c"
 49423 ;; Parameters:    Size  Location     Type
 49424 ;;		None
 49425 ;; Auto vars:     Size  Location     Type
 49426 ;;		None
 49427 ;; Return value:  Size  Location     Type
 49428 ;;                  1  [STACK] void 
 49429 ;; Registers used:
 49430 ;;		None
 49431 ;; Tracked objects:
 49432 ;;		On entry : 3F/0
 49433 ;;		On exit  : 0/0
 49434 ;;		Unchanged: 0/0
 49435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49440 ;;Total ram usage:        0 bytes
 49441 ;; Hardware stack levels used:    1
 49442 ;; This function calls:
 49443 ;;		Nothing
 49444 ;; This function is called by:
 49445 ;;		_start_adc_scan
 49446 ;;		_ADCC_ISR
 49447 ;; This function uses a reentrant model
 49448 ;;
 49449                           
 49450                           	psect	text211
 49451  002AA4                     __ptext211:
 49452                           	opt callstack 0
 49453  002AA4                     _adc_int_handler:
 49454                           	opt callstack 4
 49455                           
 49456                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 49457                           
 49458                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49459                           ;incstack = 0
 49460  002AA4  0012               	return		;funcret
 49461  002AA6                     __end_of_adc_int_handler:
 49462                           	opt callstack 0
 49463                           
 49464 ;; *************** function _ADCC_ThresholdISR *****************
 49465 ;; Defined at:
 49466 ;;		line 327 in file "mcc_generated_files/adcc.c"
 49467 ;; Parameters:    Size  Location     Type
 49468 ;;		None
 49469 ;; Auto vars:     Size  Location     Type
 49470 ;;		None
 49471 ;; Return value:  Size  Location     Type
 49472 ;;                  1    wreg      void 
 49473 ;; Registers used:
 49474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 49475 ;; Tracked objects:
 49476 ;;		On entry : 0/0
 49477 ;;		On exit  : 0/0
 49478 ;;		Unchanged: 0/0
 49479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49482 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49483 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49484 ;;Total ram usage:        5 bytes
 49485 ;; Hardware stack levels used:    1
 49486 ;; Hardware stack levels required when called:    2
 49487 ;; This function calls:
 49488 ;;		Absolute function
 49489 ;;		_ADCC_DefaultInterruptHandler
 49490 ;;		_adc_int_t_handler
 49491 ;; This function is called by:
 49492 ;;		Interrupt level 2
 49493 ;; This function uses a non-reentrant model
 49494 ;;
 49495                           
 49496                           	psect	text212
 49497  0015F0                     __ptext212:
 49498                           	opt callstack 0
 49499  0015F0                     _ADCC_ThresholdISR:
 49500                           	opt callstack 3
 49501                           
 49502                           ;incstack = 0
 49503  0015F0  0060  F0A8  F001   	movff	btemp,??_ADCC_ThresholdISR
 49504  0015F6  0060  F0AC  F002   	movff	btemp+1,??_ADCC_ThresholdISR+1
 49505  0015FC  0060  F0C8  F003   	movff	btemp+8,??_ADCC_ThresholdISR+2
 49506  001602  0060  F0CC  F004   	movff	btemp+9,??_ADCC_ThresholdISR+3
 49507  001608  0060  F0D4  F005   	movff	btemp+11,??_ADCC_ThresholdISR+4
 49508  00160E  EE14  F32C         	lfsr	1,___inthi_sp
 49509                           
 49510                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 49511  001612  0139               	movlb	57	; () banked
 49512  001614  97A1               	bcf	161,3,b	;volatile
 49513                           
 49514                           ; BSR set to: 57
 49515                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 49516  001616  0100               	movlb	0	; () banked
 49517  001618  51A1               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 49518  00161A  11A2               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 49519  00161C  11A3               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 49520  00161E  B4D8               	btfsc	status,2,c
 49521  001620  D00C               	goto	i2u1380_49
 49522                           
 49523                           ; BSR set to: 0
 49524                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 49525  001622  D801               	call	i2u1380_48
 49526  001624  D00A               	goto	i2u1380_49
 49527  001626                     i2u1380_48:
 49528  001626  0005               	push	
 49529  001628  6EFA               	movwf	pclath,c
 49530  00162A  51A1               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 49531  00162C  6EFD               	movwf	tosl,c
 49532  00162E  51A2               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 49533  001630  6EFE               	movwf	tosh,c
 49534  001632  51A3               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 49535  001634  6EFF               	movwf	tosu,c
 49536  001636  50FA               	movf	pclath,w,c
 49537  001638  0012               	return		;indir
 49538  00163A                     i2u1380_49:
 49539  00163A  0060  F014  F035   	movff	??_ADCC_ThresholdISR+4,btemp+11
 49540  001640  0060  F010  F033   	movff	??_ADCC_ThresholdISR+3,btemp+9
 49541  001646  0060  F00C  F032   	movff	??_ADCC_ThresholdISR+2,btemp+8
 49542  00164C  0060  F008  F02B   	movff	??_ADCC_ThresholdISR+1,btemp+1
 49543  001652  0060  F004  F02A   	movff	??_ADCC_ThresholdISR,btemp
 49544  001658  0011               	retfie		f
 49545  00165A                     __end_of_ADCC_ThresholdISR:
 49546                           	opt callstack 0
 49547                           
 49548 ;; *************** function _UART1_rx_vect_isr *****************
 49549 ;; Defined at:
 49550 ;;		line 181 in file "mcc_generated_files/uart1.c"
 49551 ;; Parameters:    Size  Location     Type
 49552 ;;		None
 49553 ;; Auto vars:     Size  Location     Type
 49554 ;;		None
 49555 ;; Return value:  Size  Location     Type
 49556 ;;                  1    wreg      void 
 49557 ;; Registers used:
 49558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 49559 ;; Tracked objects:
 49560 ;;		On entry : 0/0
 49561 ;;		On exit  : 0/0
 49562 ;;		Unchanged: 0/0
 49563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49568 ;;Total ram usage:        0 bytes
 49569 ;; Hardware stack levels used:    1
 49570 ;; Hardware stack levels required when called:    1
 49571 ;; This function calls:
 49572 ;;		Absolute function
 49573 ;;		_UART1_Receive_ISR
 49574 ;; This function is called by:
 49575 ;;		Interrupt level 2
 49576 ;; This function uses a non-reentrant model
 49577 ;;
 49578                           
 49579                           	psect	text213
 49580  002608                     __ptext213:
 49581                           	opt callstack 0
 49582  002608                     _UART1_rx_vect_isr:
 49583                           	opt callstack 4
 49584                           
 49585                           ;incstack = 0
 49586  002608  EE14  F32C         	lfsr	1,___inthi_sp
 49587                           
 49588                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 49589  00260C  0100               	movlb	0	; () banked
 49590  00260E  51A7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 49591  002610  11A8               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 49592  002612  11A9               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 49593  002614  B4D8               	btfsc	status,2,c
 49594  002616  0011               	retfie		f
 49595                           
 49596                           ; BSR set to: 0
 49597                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 49598  002618  D801               	call	i2u1382_48
 49599  00261A  0011               	retfie		f
 49600  00261C                     i2u1382_48:
 49601  00261C  0005               	push	
 49602  00261E  6EFA               	movwf	pclath,c
 49603  002620  51A7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 49604  002622  6EFD               	movwf	tosl,c
 49605  002624  51A8               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 49606  002626  6EFE               	movwf	tosh,c
 49607  002628  51A9               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 49608  00262A  6EFF               	movwf	tosu,c
 49609  00262C  50FA               	movf	pclath,w,c
 49610  00262E  0012               	return		;indir
 49611  002630                     __end_of_UART1_rx_vect_isr:
 49612                           	opt callstack 0
 49613                           
 49614 ;; *************** function _UART1_Receive_ISR *****************
 49615 ;; Defined at:
 49616 ;;		line 192 in file "mcc_generated_files/uart1.c"
 49617 ;; Parameters:    Size  Location     Type
 49618 ;;		None
 49619 ;; Auto vars:     Size  Location     Type
 49620 ;;		None
 49621 ;; Return value:  Size  Location     Type
 49622 ;;                  1  [STACK] void 
 49623 ;; Registers used:
 49624 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49625 ;; Tracked objects:
 49626 ;;		On entry : 3F/0
 49627 ;;		On exit  : 3F/0
 49628 ;;		Unchanged: 0/0
 49629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49634 ;;Total ram usage:        0 bytes
 49635 ;; Hardware stack levels used:    1
 49636 ;; This function calls:
 49637 ;;		Nothing
 49638 ;; This function is called by:
 49639 ;;		_UART1_Initialize
 49640 ;;		_UART1_rx_vect_isr
 49641 ;; This function uses a reentrant model
 49642 ;;
 49643                           
 49644                           	psect	text214
 49645  00279C                     __ptext214:
 49646                           	opt callstack 0
 49647  00279C                     _UART1_Receive_ISR:
 49648                           	opt callstack 4
 49649                           
 49650                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 49651                           
 49652                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49653                           ;incstack = 0
 49654  00279C  0ED6               	movlw	low _uart1RxBuffer
 49655  00279E  2457               	addwf	_uart1RxHead^0,w,c	;volatile
 49656  0027A0  6ED9               	movwf	fsr2l,c
 49657  0027A2  6ADA               	clrf	fsr2h,c
 49658  0027A4  0E02               	movlw	high _uart1RxBuffer
 49659  0027A6  22DA               	addwfc	fsr2h,f,c
 49660  0027A8  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 49661  0027AE  2A57               	incf	_uart1RxHead^0,f,c	;volatile
 49662                           
 49663                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 49664  0027B0  0E07               	movlw	7
 49665  0027B2  6457               	cpfsgt	_uart1RxHead^0,c
 49666  0027B4  D001               	goto	l13924
 49667                           
 49668                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 49669  0027B6  6A57               	clrf	_uart1RxHead^0,c	;volatile
 49670  0027B8                     l13924:
 49671                           
 49672                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 49673  0027B8  0100               	movlb	0	; () banked
 49674  0027BA  2BD0               	incf	_uart1RxCount& (0+255),f,b	;volatile
 49675                           
 49676                           ; BSR set to: 0
 49677                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49678  0027BC  0012               	return		;funcret
 49679  0027BE                     __end_of_UART1_Receive_ISR:
 49680                           	opt callstack 0
 49681                           
 49682 ;; *************** function _UART2_tx_vect_isr *****************
 49683 ;; Defined at:
 49684 ;;		line 195 in file "mcc_generated_files/uart2.c"
 49685 ;; Parameters:    Size  Location     Type
 49686 ;;		None
 49687 ;; Auto vars:     Size  Location     Type
 49688 ;;		None
 49689 ;; Return value:  Size  Location     Type
 49690 ;;                  1    wreg      void 
 49691 ;; Registers used:
 49692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 49693 ;; Tracked objects:
 49694 ;;		On entry : 0/0
 49695 ;;		On exit  : 0/0
 49696 ;;		Unchanged: 0/0
 49697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49702 ;;Total ram usage:        0 bytes
 49703 ;; Hardware stack levels used:    1
 49704 ;; Hardware stack levels required when called:    1
 49705 ;; This function calls:
 49706 ;;		Absolute function
 49707 ;;		_UART2_Transmit_ISR
 49708 ;; This function is called by:
 49709 ;;		Interrupt level 2
 49710 ;; This function uses a non-reentrant model
 49711 ;;
 49712                           
 49713                           	psect	text215
 49714  002630                     __ptext215:
 49715                           	opt callstack 0
 49716  002630                     _UART2_tx_vect_isr:
 49717                           	opt callstack 4
 49718                           
 49719                           ; BSR set to: 0
 49720                           ;incstack = 0
 49721  002630  EE14  F32C         	lfsr	1,___inthi_sp
 49722                           
 49723                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 49724  002634  0100               	movlb	0	; () banked
 49725  002636  51AA               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 49726  002638  11AB               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 49727  00263A  11AC               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 49728  00263C  B4D8               	btfsc	status,2,c
 49729  00263E  0011               	retfie		f
 49730                           
 49731                           ; BSR set to: 0
 49732                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 49733  002640  D801               	call	i2u1384_48
 49734  002642  0011               	retfie		f
 49735  002644                     i2u1384_48:
 49736  002644  0005               	push	
 49737  002646  6EFA               	movwf	pclath,c
 49738  002648  51AA               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 49739  00264A  6EFD               	movwf	tosl,c
 49740  00264C  51AB               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 49741  00264E  6EFE               	movwf	tosh,c
 49742  002650  51AC               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 49743  002652  6EFF               	movwf	tosu,c
 49744  002654  50FA               	movf	pclath,w,c
 49745  002656  0012               	return		;indir
 49746  002658                     __end_of_UART2_tx_vect_isr:
 49747                           	opt callstack 0
 49748                           
 49749 ;; *************** function _UART2_Transmit_ISR *****************
 49750 ;; Defined at:
 49751 ;;		line 213 in file "mcc_generated_files/uart2.c"
 49752 ;; Parameters:    Size  Location     Type
 49753 ;;		None
 49754 ;; Auto vars:     Size  Location     Type
 49755 ;;		None
 49756 ;; Return value:  Size  Location     Type
 49757 ;;                  1  [STACK] void 
 49758 ;; Registers used:
 49759 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49760 ;; Tracked objects:
 49761 ;;		On entry : 3F/0
 49762 ;;		On exit  : 3B/39
 49763 ;;		Unchanged: 0/0
 49764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49769 ;;Total ram usage:        0 bytes
 49770 ;; Hardware stack levels used:    1
 49771 ;; This function calls:
 49772 ;;		Nothing
 49773 ;; This function is called by:
 49774 ;;		_UART2_Initialize
 49775 ;;		_UART2_tx_vect_isr
 49776 ;; This function uses a reentrant model
 49777 ;;
 49778                           
 49779                           	psect	text216
 49780  0023D0                     __ptext216:
 49781                           	opt callstack 0
 49782  0023D0                     _UART2_Transmit_ISR:
 49783                           	opt callstack 4
 49784                           
 49785                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 49786                           
 49787                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49788                           ;incstack = 0
 49789  0023D0  0E40               	movlw	64
 49790  0023D2  6055               	cpfslt	_uart2TxBufferRemaining^0,c
 49791  0023D4  D010               	goto	l675
 49792                           
 49793                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 49794  0023D6  0E00               	movlw	low _uart2TxBuffer
 49795  0023D8  2456               	addwf	_uart2TxTail^0,w,c	;volatile
 49796  0023DA  6ED9               	movwf	fsr2l,c
 49797  0023DC  6ADA               	clrf	fsr2h,c
 49798  0023DE  0E04               	movlw	high _uart2TxBuffer
 49799  0023E0  22DA               	addwfc	fsr2h,f,c
 49800  0023E2  50DF               	movf	indf2,w,c
 49801  0023E4  013D               	movlb	61	; () banked
 49802  0023E6  6FD2               	movwf	210,b	;volatile
 49803                           
 49804                           ; BSR set to: 61
 49805  0023E8  2A56               	incf	_uart2TxTail^0,f,c	;volatile
 49806                           
 49807                           ; BSR set to: 61
 49808                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 49809  0023EA  0E3F               	movlw	63
 49810  0023EC  6456               	cpfsgt	_uart2TxTail^0,c
 49811  0023EE  D001               	goto	l13936
 49812                           
 49813                           ; BSR set to: 61
 49814                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 49815  0023F0  6A56               	clrf	_uart2TxTail^0,c	;volatile
 49816  0023F2                     l13936:
 49817                           
 49818                           ; BSR set to: 61
 49819                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 49820  0023F2  2A55               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 49821                           
 49822                           ;mcc_generated_files/uart2.c: 224:     }
 49823  0023F4  0012               	return	
 49824  0023F6                     l675:
 49825                           
 49826                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 49827  0023F6  0139               	movlb	57	; () banked
 49828  0023F8  9796               	bcf	150,3,b	;volatile
 49829                           
 49830                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 49831  0023FA  0012               	return		;funcret
 49832  0023FC                     __end_of_UART2_Transmit_ISR:
 49833                           	opt callstack 0
 49834                           
 49835 ;; *************** function _UART2_rx_vect_isr *****************
 49836 ;; Defined at:
 49837 ;;		line 203 in file "mcc_generated_files/uart2.c"
 49838 ;; Parameters:    Size  Location     Type
 49839 ;;		None
 49840 ;; Auto vars:     Size  Location     Type
 49841 ;;		None
 49842 ;; Return value:  Size  Location     Type
 49843 ;;                  1    wreg      void 
 49844 ;; Registers used:
 49845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 49846 ;; Tracked objects:
 49847 ;;		On entry : 0/0
 49848 ;;		On exit  : 0/0
 49849 ;;		Unchanged: 0/0
 49850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49855 ;;Total ram usage:        0 bytes
 49856 ;; Hardware stack levels used:    1
 49857 ;; Hardware stack levels required when called:    1
 49858 ;; This function calls:
 49859 ;;		Absolute function
 49860 ;;		_UART2_Receive_ISR
 49861 ;; This function is called by:
 49862 ;;		Interrupt level 2
 49863 ;; This function uses a non-reentrant model
 49864 ;;
 49865                           
 49866                           	psect	text217
 49867  002658                     __ptext217:
 49868                           	opt callstack 0
 49869  002658                     _UART2_rx_vect_isr:
 49870                           	opt callstack 4
 49871                           
 49872                           ;incstack = 0
 49873  002658  EE14  F32C         	lfsr	1,___inthi_sp
 49874                           
 49875                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 49876  00265C  0100               	movlb	0	; () banked
 49877  00265E  51AD               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 49878  002660  11AE               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 49879  002662  11AF               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 49880  002664  B4D8               	btfsc	status,2,c
 49881  002666  0011               	retfie		f
 49882                           
 49883                           ; BSR set to: 0
 49884                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 49885  002668  D801               	call	i2u1386_48
 49886  00266A  0011               	retfie		f
 49887  00266C                     i2u1386_48:
 49888  00266C  0005               	push	
 49889  00266E  6EFA               	movwf	pclath,c
 49890  002670  51AD               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 49891  002672  6EFD               	movwf	tosl,c
 49892  002674  51AE               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 49893  002676  6EFE               	movwf	tosh,c
 49894  002678  51AF               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 49895  00267A  6EFF               	movwf	tosu,c
 49896  00267C  50FA               	movf	pclath,w,c
 49897  00267E  0012               	return		;indir
 49898  002680                     __end_of_UART2_rx_vect_isr:
 49899                           	opt callstack 0
 49900                           
 49901 ;; *************** function _UART2_Receive_ISR *****************
 49902 ;; Defined at:
 49903 ;;		line 233 in file "mcc_generated_files/uart2.c"
 49904 ;; Parameters:    Size  Location     Type
 49905 ;;		None
 49906 ;; Auto vars:     Size  Location     Type
 49907 ;;		None
 49908 ;; Return value:  Size  Location     Type
 49909 ;;                  1  [STACK] void 
 49910 ;; Registers used:
 49911 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49912 ;; Tracked objects:
 49913 ;;		On entry : 3F/0
 49914 ;;		On exit  : 3F/0
 49915 ;;		Unchanged: 0/0
 49916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49921 ;;Total ram usage:        0 bytes
 49922 ;; Hardware stack levels used:    1
 49923 ;; This function calls:
 49924 ;;		Nothing
 49925 ;; This function is called by:
 49926 ;;		_UART2_Initialize
 49927 ;;		_UART2_rx_vect_isr
 49928 ;; This function uses a reentrant model
 49929 ;;
 49930                           
 49931                           	psect	text218
 49932  0027DE                     __ptext218:
 49933                           	opt callstack 0
 49934  0027DE                     _UART2_Receive_ISR:
 49935                           	opt callstack 4
 49936                           
 49937                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 49938                           
 49939                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49940                           ;incstack = 0
 49941  0027DE  0E00               	movlw	low _uart2RxBuffer
 49942  0027E0  2454               	addwf	_uart2RxHead^0,w,c	;volatile
 49943  0027E2  6ED9               	movwf	fsr2l,c
 49944  0027E4  6ADA               	clrf	fsr2h,c
 49945  0027E6  0E06               	movlw	high _uart2RxBuffer
 49946  0027E8  22DA               	addwfc	fsr2h,f,c
 49947  0027EA  006F F743 FFDF     	movff	15824,indf2	;volatile
 49948  0027F0  2A54               	incf	_uart2RxHead^0,f,c	;volatile
 49949                           
 49950                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 49951  0027F2  2854               	incf	_uart2RxHead^0,w,c
 49952  0027F4  B4D8               	btfsc	status,2,c
 49953                           
 49954                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 49955  0027F6  6A54               	clrf	_uart2RxHead^0,c	;volatile
 49956                           
 49957                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 49958  0027F8  0100               	movlb	0	; () banked
 49959  0027FA  2BCD               	incf	_uart2RxCount& (0+255),f,b	;volatile
 49960                           
 49961                           ; BSR set to: 0
 49962                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49963  0027FC  0012               	return		;funcret
 49964  0027FE                     __end_of_UART2_Receive_ISR:
 49965                           	opt callstack 0
 49966                           
 49967 ;; *************** function _TMR6_ISR *****************
 49968 ;; Defined at:
 49969 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 49970 ;; Parameters:    Size  Location     Type
 49971 ;;		None
 49972 ;; Auto vars:     Size  Location     Type
 49973 ;;		None
 49974 ;; Return value:  Size  Location     Type
 49975 ;;                  1    wreg      void 
 49976 ;; Registers used:
 49977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 49978 ;; Tracked objects:
 49979 ;;		On entry : 0/0
 49980 ;;		On exit  : 0/0
 49981 ;;		Unchanged: 0/0
 49982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49985 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49986 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49987 ;;Total ram usage:        1 bytes
 49988 ;; Hardware stack levels used:    1
 49989 ;; Hardware stack levels required when called:    2
 49990 ;; This function calls:
 49991 ;;		_TMR6_CallBack
 49992 ;; This function is called by:
 49993 ;;		Interrupt level 2
 49994 ;; This function uses a non-reentrant model
 49995 ;;
 49996                           
 49997                           	psect	text219
 49998  002890                     __ptext219:
 49999                           	opt callstack 0
 50000  002890                     _TMR6_ISR:
 50001                           	opt callstack 3
 50002                           
 50003                           ; BSR set to: 0
 50004                           ;incstack = 0
 50005  002890  0060  F0A8  F006   	movff	btemp,??_TMR6_ISR
 50006  002896  EE14  F32C         	lfsr	1,___inthi_sp
 50007                           
 50008                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 50009  00289A  0139               	movlb	57	; () banked
 50010  00289C  91A9               	bcf	169,0,b	;volatile
 50011                           
 50012                           ; BSR set to: 57
 50013                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 50014  00289E  EC9A  F013         	call	_TMR6_CallBack	;wreg free
 50015  0028A2  0060  F018  F02A   	movff	??_TMR6_ISR,btemp
 50016  0028A8  0011               	retfie		f
 50017  0028AA                     __end_of_TMR6_ISR:
 50018                           	opt callstack 0
 50019                           
 50020 ;; *************** function _TMR6_CallBack *****************
 50021 ;; Defined at:
 50022 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 50023 ;; Parameters:    Size  Location     Type
 50024 ;;		None
 50025 ;; Auto vars:     Size  Location     Type
 50026 ;;		None
 50027 ;; Return value:  Size  Location     Type
 50028 ;;                  1  [STACK] void 
 50029 ;; Registers used:
 50030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 50031 ;; Tracked objects:
 50032 ;;		On entry : 3F/39
 50033 ;;		On exit  : 0/0
 50034 ;;		Unchanged: 0/0
 50035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50040 ;;Total ram usage:        0 bytes
 50041 ;; Hardware stack levels used:    1
 50042 ;; Hardware stack levels required when called:    1
 50043 ;; This function calls:
 50044 ;;		Absolute function
 50045 ;;		_TMR6_DefaultInterruptHandler
 50046 ;; This function is called by:
 50047 ;;		_TMR6_ISR
 50048 ;; This function uses a reentrant model
 50049 ;;
 50050                           
 50051                           	psect	text220
 50052  002734                     __ptext220:
 50053                           	opt callstack 0
 50054  002734                     _TMR6_CallBack:
 50055                           	opt callstack 3
 50056                           
 50057                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 50058                           
 50059                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50060                           ;incstack = 0
 50061  002734  0100               	movlb	0	; () banked
 50062  002736  519E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 50063  002738  119F               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 50064  00273A  11A0               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 50065  00273C  B4D8               	btfsc	status,2,c
 50066  00273E  0012               	return	
 50067                           
 50068                           ; BSR set to: 0
 50069                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 50070  002740  D801               	call	u1319_48
 50071  002742  0012               	return	
 50072  002744                     u1319_48:
 50073  002744  0005               	push	
 50074  002746  6EFA               	movwf	pclath,c
 50075  002748  519E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 50076  00274A  6EFD               	movwf	tosl,c
 50077  00274C  519F               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 50078  00274E  6EFE               	movwf	tosh,c
 50079  002750  51A0               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 50080  002752  6EFF               	movwf	tosu,c
 50081  002754  50FA               	movf	pclath,w,c
 50082  002756  0012               	return		;indir
 50083  002758                     __end_of_TMR6_CallBack:
 50084                           	opt callstack 0
 50085                           
 50086 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 50087 ;; Defined at:
 50088 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 50089 ;; Parameters:    Size  Location     Type
 50090 ;;		None
 50091 ;; Auto vars:     Size  Location     Type
 50092 ;;  i               1  [STACK] unsigned char 
 50093 ;; Return value:  Size  Location     Type
 50094 ;;                  1  [STACK] void 
 50095 ;; Registers used:
 50096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 50097 ;; Tracked objects:
 50098 ;;		On entry : 3F/0
 50099 ;;		On exit  : 0/0
 50100 ;;		Unchanged: 0/0
 50101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50106 ;;Total ram usage:        0 bytes
 50107 ;; Hardware stack levels used:    1
 50108 ;; This function calls:
 50109 ;;		Nothing
 50110 ;; This function is called by:
 50111 ;;		_TMR6_Initialize
 50112 ;;		_TMR6_CallBack
 50113 ;; This function uses a reentrant model
 50114 ;;
 50115                           
 50116                           	psect	text221
 50117  001C2E                     __ptext221:
 50118                           	opt callstack 0
 50119  001C2E                     _TMR6_DefaultInterruptHandler:
 50120                           	opt callstack 0
 50121                           
 50122                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50123  001C2E  52E6               	movf	postinc1,f,c
 50124                           
 50125                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 50126                           ;stkvar	_i @ sp[(-1)+0]
 50127                           
 50128                           ;incstack = 0
 50129  001C30  0EFF               	movlw	-1
 50130  001C32  6AE3               	clrf	plusw1,c
 50131  001C34                     l13344:
 50132                           
 50133                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 50134                           ;stkvar	_i @ sp[(-1)+0]
 50135  001C34  0EFF               	movlw	-1
 50136  001C36  50E3               	movf	plusw1,w,c
 50137  001C38  0D02               	mullw	2
 50138  001C3A  0EBC               	movlw	low _tickCount
 50139  001C3C  24F3               	addwf	243,w,c
 50140  001C3E  6ED9               	movwf	fsr2l,c
 50141  001C40  0E02               	movlw	high _tickCount
 50142  001C42  20F4               	addwfc	prodh,w,c
 50143  001C44  6EDA               	movwf	fsr2h,c
 50144  001C46  50DE               	movf	postinc2,w,c
 50145  001C48  10DE               	iorwf	postinc2,w,c
 50146  001C4A  B4D8               	btfsc	status,2,c
 50147  001C4C  D00C               	goto	l13348
 50148                           
 50149                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 50150                           ;stkvar	_i @ sp[(-1)+0]
 50151  001C4E  0EFF               	movlw	-1
 50152  001C50  50E3               	movf	plusw1,w,c
 50153  001C52  0D02               	mullw	2
 50154  001C54  0EBC               	movlw	low _tickCount
 50155  001C56  24F3               	addwf	243,w,c
 50156  001C58  6ED9               	movwf	fsr2l,c
 50157  001C5A  0E02               	movlw	high _tickCount
 50158  001C5C  20F4               	addwfc	prodh,w,c
 50159  001C5E  6EDA               	movwf	fsr2h,c
 50160  001C60  06DE               	decf	postinc2,f,c
 50161  001C62  0E00               	movlw	0
 50162  001C64  5ADD               	subwfb	postdec2,f,c
 50163  001C66                     l13348:
 50164                           
 50165                           ;mcc_generated_files/tmr6.c: 207:  }
 50166                           ;stkvar	_i @ sp[(-1)+0]
 50167  001C66  0EFF               	movlw	-1
 50168  001C68  2AE3               	incf	plusw1,f,c
 50169                           
 50170                           ;stkvar	_i @ sp[(-1)+0]
 50171  001C6A  0EFF               	movlw	-1
 50172  001C6C  006F FF8C  F02A    	movff	plusw1,btemp
 50173  001C72  0E0C               	movlw	12
 50174  001C74  642A               	cpfsgt	btemp^0,c
 50175  001C76  D7DE               	goto	l13344
 50176                           
 50177                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 50178  001C78  52E5               	movf	postdec1,f,c
 50179  001C7A  0012               	return		;funcret
 50180  001C7C                     __end_of_TMR6_DefaultInterruptHandler:
 50181                           	opt callstack 0
 50182                           
 50183 ;; *************** function _DMA1_DMASCNT_ISR *****************
 50184 ;; Defined at:
 50185 ;;		line 126 in file "mcc_generated_files/dma1.c"
 50186 ;; Parameters:    Size  Location     Type
 50187 ;;		None
 50188 ;; Auto vars:     Size  Location     Type
 50189 ;;		None
 50190 ;; Return value:  Size  Location     Type
 50191 ;;                  1    wreg      void 
 50192 ;; Registers used:
 50193 ;;		None
 50194 ;; Tracked objects:
 50195 ;;		On entry : 0/0
 50196 ;;		On exit  : 3F/0
 50197 ;;		Unchanged: 0/0
 50198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50203 ;;Total ram usage:        0 bytes
 50204 ;; Hardware stack levels used:    1
 50205 ;; This function calls:
 50206 ;;		Nothing
 50207 ;; This function is called by:
 50208 ;;		Interrupt level 2
 50209 ;; This function uses a non-reentrant model
 50210 ;;
 50211                           
 50212                           	psect	text222
 50213  002A04                     __ptext222:
 50214                           	opt callstack 0
 50215  002A04                     _DMA1_DMASCNT_ISR:
 50216                           	opt callstack 5
 50217                           
 50218                           ;incstack = 0
 50219  002A04  EE14  F32C         	lfsr	1,___inthi_sp
 50220                           
 50221                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 50222  002A08  0139               	movlb	57	; () banked
 50223  002A0A  91A2               	bcf	162,0,b	;volatile
 50224                           
 50225                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 50226  002A0C  0100               	movlb	0	; () banked
 50227  002A0E  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 50228                           
 50229                           ; BSR set to: 0
 50230  002A10  0011               	retfie		f
 50231  002A12                     __end_of_DMA1_DMASCNT_ISR:
 50232                           	opt callstack 0
 50233                           
 50234 ;; *************** function _DMA1_DMADCNT_ISR *****************
 50235 ;; Defined at:
 50236 ;;		line 133 in file "mcc_generated_files/dma1.c"
 50237 ;; Parameters:    Size  Location     Type
 50238 ;;		None
 50239 ;; Auto vars:     Size  Location     Type
 50240 ;;		None
 50241 ;; Return value:  Size  Location     Type
 50242 ;;                  1    wreg      void 
 50243 ;; Registers used:
 50244 ;;		None
 50245 ;; Tracked objects:
 50246 ;;		On entry : 0/0
 50247 ;;		On exit  : 3F/39
 50248 ;;		Unchanged: 0/0
 50249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50254 ;;Total ram usage:        0 bytes
 50255 ;; Hardware stack levels used:    1
 50256 ;; This function calls:
 50257 ;;		Nothing
 50258 ;; This function is called by:
 50259 ;;		Interrupt level 2
 50260 ;; This function uses a non-reentrant model
 50261 ;;
 50262                           
 50263                           	psect	text223
 50264  002A28                     __ptext223:
 50265                           	opt callstack 0
 50266  002A28                     _DMA1_DMADCNT_ISR:
 50267                           	opt callstack 5
 50268                           
 50269                           ; BSR set to: 0
 50270                           ;incstack = 0
 50271  002A28  EE14  F32C         	lfsr	1,___inthi_sp
 50272                           
 50273                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 50274  002A2C  0139               	movlb	57	; () banked
 50275  002A2E  93A2               	bcf	162,1,b	;volatile
 50276                           
 50277                           ; BSR set to: 57
 50278  002A30  0011               	retfie		f
 50279  002A32                     __end_of_DMA1_DMADCNT_ISR:
 50280                           	opt callstack 0
 50281                           
 50282 ;; *************** function _DMA1_DMAA_ISR *****************
 50283 ;; Defined at:
 50284 ;;		line 143 in file "mcc_generated_files/dma1.c"
 50285 ;; Parameters:    Size  Location     Type
 50286 ;;		None
 50287 ;; Auto vars:     Size  Location     Type
 50288 ;;		None
 50289 ;; Return value:  Size  Location     Type
 50290 ;;                  1    wreg      void 
 50291 ;; Registers used:
 50292 ;;		None
 50293 ;; Tracked objects:
 50294 ;;		On entry : 0/0
 50295 ;;		On exit  : 3F/39
 50296 ;;		Unchanged: 0/0
 50297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50302 ;;Total ram usage:        0 bytes
 50303 ;; Hardware stack levels used:    1
 50304 ;; This function calls:
 50305 ;;		Nothing
 50306 ;; This function is called by:
 50307 ;;		Interrupt level 2
 50308 ;; This function uses a non-reentrant model
 50309 ;;
 50310                           
 50311                           	psect	text224
 50312  002A34                     __ptext224:
 50313                           	opt callstack 0
 50314  002A34                     _DMA1_DMAA_ISR:
 50315                           	opt callstack 5
 50316                           
 50317                           ; BSR set to: 57
 50318                           ;incstack = 0
 50319  002A34  EE14  F32C         	lfsr	1,___inthi_sp
 50320                           
 50321                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 50322  002A38  0139               	movlb	57	; () banked
 50323  002A3A  97A2               	bcf	162,3,b	;volatile
 50324                           
 50325                           ; BSR set to: 57
 50326  002A3C  0011               	retfie		f
 50327  002A3E                     __end_of_DMA1_DMAA_ISR:
 50328                           	opt callstack 0
 50329                           
 50330 ;; *************** function _DMA1_DMAOR_ISR *****************
 50331 ;; Defined at:
 50332 ;;		line 154 in file "mcc_generated_files/dma1.c"
 50333 ;; Parameters:    Size  Location     Type
 50334 ;;		None
 50335 ;; Auto vars:     Size  Location     Type
 50336 ;;		None
 50337 ;; Return value:  Size  Location     Type
 50338 ;;                  1    wreg      void 
 50339 ;; Registers used:
 50340 ;;		None
 50341 ;; Tracked objects:
 50342 ;;		On entry : 0/0
 50343 ;;		On exit  : 3F/39
 50344 ;;		Unchanged: 0/0
 50345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50350 ;;Total ram usage:        0 bytes
 50351 ;; Hardware stack levels used:    1
 50352 ;; This function calls:
 50353 ;;		Nothing
 50354 ;; This function is called by:
 50355 ;;		Interrupt level 2
 50356 ;; This function uses a non-reentrant model
 50357 ;;
 50358                           
 50359                           	psect	text225
 50360  002A40                     __ptext225:
 50361                           	opt callstack 0
 50362  002A40                     _DMA1_DMAOR_ISR:
 50363                           	opt callstack 5
 50364                           
 50365                           ; BSR set to: 57
 50366                           ;incstack = 0
 50367  002A40  EE14  F32C         	lfsr	1,___inthi_sp
 50368                           
 50369                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 50370  002A44  0139               	movlb	57	; () banked
 50371  002A46  95A2               	bcf	162,2,b	;volatile
 50372                           
 50373                           ; BSR set to: 57
 50374  002A48  0011               	retfie		f
 50375  002A4A                     __end_of_DMA1_DMAOR_ISR:
 50376                           	opt callstack 0
 50377                           
 50378                           ;
 50379                           ; Interrupt Vector Table @ 0x8
 50380                           ;
 50381                           
 50382                           	psect	ivt0x8
 50383  000008                     __pivt0x8:
 50384                           	opt callstack 0
 50385  000008                     ivt0x8_base:
 50386                           	opt callstack 0
 50387                           
 50388                           ; Vector 0 : SWINT
 50389  000008  0AA6               	dw	_Default_ISR shr (0+2)
 50390                           
 50391                           ; Vector 1 : HLVD
 50392  00000A  0AA6               	dw	_Default_ISR shr (0+2)
 50393                           
 50394                           ; Vector 2 : OSF
 50395  00000C  0AA6               	dw	_Default_ISR shr (0+2)
 50396                           
 50397                           ; Vector 3 : CSW
 50398  00000E  0AA6               	dw	_Default_ISR shr (0+2)
 50399                           
 50400                           ; Vector 4 : NVM
 50401  000010  0AA6               	dw	_Default_ISR shr (0+2)
 50402                           
 50403                           ; Vector 5 : SCAN
 50404  000012  0AA6               	dw	_Default_ISR shr (0+2)
 50405                           
 50406                           ; Vector 6 : CRC
 50407  000014  0AA6               	dw	_Default_ISR shr (0+2)
 50408                           
 50409                           ; Vector 7 : IOC
 50410  000016  0AA6               	dw	_Default_ISR shr (0+2)
 50411                           
 50412                           ; Vector 8 : INT0
 50413  000018  0A7D               	dw	_INT0_ISR shr (0+2)
 50414                           
 50415                           ; Vector 9 : ZCD
 50416  00001A  0AA6               	dw	_Default_ISR shr (0+2)
 50417                           
 50418                           ; Vector 10 : AD
 50419  00001C  08E9               	dw	_ADCC_ISR shr (0+2)
 50420                           
 50421                           ; Vector 11 : ADT
 50422  00001E  057C               	dw	_ADCC_ThresholdISR shr (0+2)
 50423                           
 50424                           ; Vector 12 : CMP1
 50425  000020  0AA6               	dw	_Default_ISR shr (0+2)
 50426                           
 50427                           ; Vector 13 : SMT1
 50428  000022  0AA6               	dw	_Default_ISR shr (0+2)
 50429                           
 50430                           ; Vector 14 : SMT1PRA
 50431  000024  0AA6               	dw	_Default_ISR shr (0+2)
 50432                           
 50433                           ; Vector 15 : SMT1PRW
 50434  000026  0AA6               	dw	_Default_ISR shr (0+2)
 50435                           
 50436                           ; Vector 16 : DMA1SCNT
 50437  000028  0A81               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 50438                           
 50439                           ; Vector 17 : DMA1DCNT
 50440  00002A  0A8A               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 50441                           
 50442                           ; Vector 18 : DMA1OR
 50443  00002C  0A90               	dw	_DMA1_DMAOR_ISR shr (0+2)
 50444                           
 50445                           ; Vector 19 : DMA1A
 50446  00002E  0A8D               	dw	_DMA1_DMAA_ISR shr (0+2)
 50447                           
 50448                           ; Vector 20 : SPI1RX
 50449  000030  0AA6               	dw	_Default_ISR shr (0+2)
 50450                           
 50451                           ; Vector 21 : SPI1TX
 50452  000032  0AA6               	dw	_Default_ISR shr (0+2)
 50453                           
 50454                           ; Vector 22 : SPI1
 50455  000034  0AA6               	dw	_Default_ISR shr (0+2)
 50456                           
 50457                           ; Vector 23 : I2C1RX
 50458  000036  0AA6               	dw	_Default_ISR shr (0+2)
 50459                           
 50460                           ; Vector 24 : I2C1TX
 50461  000038  0AA6               	dw	_Default_ISR shr (0+2)
 50462                           
 50463                           ; Vector 25 : I2C1
 50464  00003A  0AA6               	dw	_Default_ISR shr (0+2)
 50465                           
 50466                           ; Vector 26 : I2C1E
 50467  00003C  0AA6               	dw	_Default_ISR shr (0+2)
 50468                           
 50469                           ; Vector 27 : U1RX
 50470  00003E  0982               	dw	_UART1_rx_vect_isr shr (0+2)
 50471                           
 50472                           ; Vector 28 : U1TX
 50473  000040  0AA6               	dw	_Default_ISR shr (0+2)
 50474                           
 50475                           ; Vector 29 : U1E
 50476  000042  0AA6               	dw	_Default_ISR shr (0+2)
 50477                           
 50478                           ; Vector 30 : U1
 50479  000044  0AA6               	dw	_Default_ISR shr (0+2)
 50480                           
 50481                           ; Vector 31 : TMR0
 50482  000046  0AA6               	dw	_Default_ISR shr (0+2)
 50483                           
 50484                           ; Vector 32 : TMR1
 50485  000048  0AA6               	dw	_Default_ISR shr (0+2)
 50486                           
 50487                           ; Vector 33 : TMR1G
 50488  00004A  0AA6               	dw	_Default_ISR shr (0+2)
 50489                           
 50490                           ; Vector 34 : TMR2
 50491  00004C  0AA6               	dw	_Default_ISR shr (0+2)
 50492                           
 50493                           ; Vector 35 : CCP1
 50494  00004E  0AA6               	dw	_Default_ISR shr (0+2)
 50495                           
 50496                           ; Vector 36 : Undefined
 50497  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 50498                           
 50499                           ; Vector 37 : NCO1
 50500  000052  0AA6               	dw	_Default_ISR shr (0+2)
 50501                           
 50502                           ; Vector 38 : CWG1
 50503  000054  0AA6               	dw	_Default_ISR shr (0+2)
 50504                           
 50505                           ; Vector 39 : CLC1
 50506  000056  0AA6               	dw	_Default_ISR shr (0+2)
 50507                           
 50508                           ; Vector 40 : INT1
 50509  000058  080D               	dw	_INT1_ISR shr (0+2)
 50510                           
 50511                           ; Vector 41 : CMP2
 50512  00005A  0AA6               	dw	_Default_ISR shr (0+2)
 50513                           
 50514                           ; Vector 42 : DMA2SCNT
 50515  00005C  0AA6               	dw	_Default_ISR shr (0+2)
 50516                           
 50517                           ; Vector 43 : DMA2DCNT
 50518  00005E  0AA6               	dw	_Default_ISR shr (0+2)
 50519                           
 50520                           ; Vector 44 : DMA2OR
 50521  000060  0AA6               	dw	_Default_ISR shr (0+2)
 50522                           
 50523                           ; Vector 45 : DMA2A
 50524  000062  0AA6               	dw	_Default_ISR shr (0+2)
 50525                           
 50526                           ; Vector 46 : I2C2RX
 50527  000064  0AA6               	dw	_Default_ISR shr (0+2)
 50528                           
 50529                           ; Vector 47 : I2C2TX
 50530  000066  0AA6               	dw	_Default_ISR shr (0+2)
 50531                           
 50532                           ; Vector 48 : I2C2
 50533  000068  0AA6               	dw	_Default_ISR shr (0+2)
 50534                           
 50535                           ; Vector 49 : I2C2E
 50536  00006A  0AA6               	dw	_Default_ISR shr (0+2)
 50537                           
 50538                           ; Vector 50 : U2RX
 50539  00006C  0996               	dw	_UART2_rx_vect_isr shr (0+2)
 50540                           
 50541                           ; Vector 51 : U2TX
 50542  00006E  098C               	dw	_UART2_tx_vect_isr shr (0+2)
 50543                           
 50544                           ; Vector 52 : U2E
 50545  000070  0AA6               	dw	_Default_ISR shr (0+2)
 50546                           
 50547                           ; Vector 53 : U2
 50548  000072  0AA6               	dw	_Default_ISR shr (0+2)
 50549                           
 50550                           ; Vector 54 : TMR3
 50551  000074  7AB9               	dw	_TMR3_ISR shr (0+2)
 50552                           
 50553                           ; Vector 55 : TMR3G
 50554  000076  0AA6               	dw	_Default_ISR shr (0+2)
 50555                           
 50556                           ; Vector 56 : TMR4
 50557  000078  0AA6               	dw	_Default_ISR shr (0+2)
 50558                           
 50559                           ; Vector 57 : CCP2
 50560  00007A  0AA6               	dw	_Default_ISR shr (0+2)
 50561                           
 50562                           ; Vector 58 : Undefined
 50563  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 50564                           
 50565                           ; Vector 59 : CWG2
 50566  00007E  0AA6               	dw	_Default_ISR shr (0+2)
 50567                           
 50568                           ; Vector 60 : CLC2
 50569  000080  0AA6               	dw	_Default_ISR shr (0+2)
 50570                           
 50571                           ; Vector 61 : INT2
 50572  000082  0AA6               	dw	_Default_ISR shr (0+2)
 50573                           
 50574                           ; Vector 62 : Undefined
 50575  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 50576                           
 50577                           ; Vector 63 : Undefined
 50578  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 50579                           
 50580                           ; Vector 64 : Undefined
 50581  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 50582                           
 50583                           ; Vector 65 : Undefined
 50584  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 50585                           
 50586                           ; Vector 66 : Undefined
 50587  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 50588                           
 50589                           ; Vector 67 : Undefined
 50590  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 50591                           
 50592                           ; Vector 68 : Undefined
 50593  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 50594                           
 50595                           ; Vector 69 : Undefined
 50596  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 50597                           
 50598                           ; Vector 70 : TMR5
 50599  000094  76F6               	dw	_TMR5_ISR shr (0+2)
 50600                           
 50601                           ; Vector 71 : TMR5G
 50602  000096  0AA6               	dw	_Default_ISR shr (0+2)
 50603                           
 50604                           ; Vector 72 : TMR6
 50605  000098  0A24               	dw	_TMR6_ISR shr (0+2)
 50606                           
 50607                           ; Vector 73 : CCP3
 50608  00009A  0AA6               	dw	_Default_ISR shr (0+2)
 50609                           
 50610                           ; Vector 74 : CWG3
 50611  00009C  0AA6               	dw	_Default_ISR shr (0+2)
 50612                           
 50613                           ; Vector 75 : CLC3
 50614  00009E  0AA6               	dw	_Default_ISR shr (0+2)
 50615                           
 50616                           ; Vector 76 : Undefined
 50617  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 50618                           
 50619                           ; Vector 77 : Undefined
 50620  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 50621                           
 50622                           ; Vector 78 : Undefined
 50623  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 50624                           
 50625                           ; Vector 79 : Undefined
 50626  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 50627                           
 50628                           ; Vector 80 : CCP4
 50629  0000A8  0AA6               	dw	_Default_ISR shr (0+2)
 50630                           
 50631                           ; Vector 81 : CLC4
 50632  0000AA  0AA6               	dw	_Default_ISR shr (0+2)
 50633  0000AC                     ivt0x8_undefint:
 50634                           	opt callstack 0
 50635  0000AC  00FF               	reset	
 50636                           
 50637                           	psect	text226
 50638  000000                     __ptext226:
 50639                           	opt callstack 0
 50640                           
 50641                           	psect	rparam
 50642  0000                     
 50643                           	psect	temp
 50644  00002A                     btemp:
 50645                           	opt callstack 0
 50646  00002A                     	ds	32
 50647  0000                     wtemp0	set	btemp
 50648  0000                     wtemp1	set	btemp+2
 50649  0000                     wtemp2	set	btemp+4
 50650  0000                     wtemp3	set	btemp+6
 50651  0000                     wtemp4	set	btemp+8
 50652  0000                     wtemp5	set	btemp+10
 50653  0000                     wtemp8	set	btemp+1
 50654  0000                     ttemp0	set	btemp
 50655  0000                     ttemp1	set	btemp+3
 50656  0000                     ttemp2	set	btemp+6
 50657  0000                     ttemp3	set	btemp+9
 50658  0000                     ttemp5	set	btemp+1
 50659  0000                     ttemp6	set	btemp+4
 50660  0000                     ttemp7	set	btemp+8
 50661  0000                     ltemp0	set	btemp
 50662  0000                     ltemp1	set	btemp+4
 50663  0000                     ltemp2	set	btemp+8
 50664  0000                     lltemp0	set	btemp
 50665  0000                     lltemp1	set	btemp+8
 50666  0000                     lltemp2	set	btemp+16
 50667  0000                     lltemp3	set	btemp+24
 50668                           tosu	equ	0x3FFF
 50669                           tosh	equ	0x3FFE
 50670                           tosl	equ	0x3FFD
 50671                           stkptr	equ	0x3FFC
 50672                           pclatu	equ	0x3FFB
 50673                           pclath	equ	0x3FFA
 50674                           pcl	equ	0x3FF9
 50675                           tblptru	equ	0x3FF8
 50676                           tblptrh	equ	0x3FF7
 50677                           tblptrl	equ	0x3FF6
 50678                           tablat	equ	0x3FF5
 50679                           prodh	equ	0x3FF4
 50680                           prodl	equ	0x3FF3
 50681                           indf0	equ	0x3FEF
 50682                           postinc0	equ	0x3FEE
 50683                           postdec0	equ	0x3FED
 50684                           preinc0	equ	0x3FEC
 50685                           plusw0	equ	0x3FEB
 50686                           fsr0h	equ	0x3FEA
 50687                           fsr0l	equ	0x3FE9
 50688                           wreg	equ	0x3FE8
 50689                           indf1	equ	0x3FE7
 50690                           postinc1	equ	0x3FE6
 50691                           postdec1	equ	0x3FE5
 50692                           preinc1	equ	0x3FE4
 50693                           plusw1	equ	0x3FE3
 50694                           fsr1h	equ	0x3FE2
 50695                           fsr1l	equ	0x3FE1
 50696                           bsr	equ	0x3FE0
 50697                           indf2	equ	0x3FDF
 50698                           postinc2	equ	0x3FDE
 50699                           postdec2	equ	0x3FDD
 50700                           preinc2	equ	0x3FDC
 50701                           plusw2	equ	0x3FDB
 50702                           fsr2h	equ	0x3FDA
 50703                           fsr2l	equ	0x3FD9
 50704                           status	equ	0x3FD8


Data Sizes:
    Strings     1544
    Constant    588
    Data        1184
    BSS         1775
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     41      55
    BANK0           160     25     158
    BANK1           256      0     253
    BANK2           256      0     230
    BANK3           256      0     247
    BANK4           256      0     219
    BANK5           256      0     134
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_134(CODE[1]), STR_94(CODE[1]), 

    is_leap	PTR int  size(2) Largest target is 2
		 -> F5(STACK[2]), is_leap(STACK[2]), NULL(NULL[0]), 

    sp____tm_to_tzname	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_135(CODE[1]), 

    abbrevs_end	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    oppoff	PTR long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zonename	PTR PTR const unsigned char  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    offset	PTR long  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    isdst	PTR int  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    rule	PTR const int  size(2) Largest target is 10
		 -> r1(BANK1[10]), r0(BANK1[10]), 

    abbrevs	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    types	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    alt	PTR unsigned int  size(2) Largest target is 2
		 -> alt(STACK[2]), 

    index	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zi	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    trans	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 4
		 -> __gmt(CODE[4]), 

    z	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    d	PTR unsigned char  size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    rule	PTR int  size(2) Largest target is 10
		 -> r1(BANK1[10]), r0(BANK1[10]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    old_tz	PTR unsigned char  size(2) Largest target is 32
		 -> old_tz_buf(BANK3[32]), 

    __tzname	PTR unsigned char [2] size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_129(CODE[3]), STR_125(CODE[3]), STR_120(CODE[3]), STR_115(CODE[3]), 
		 -> STR_110(CODE[3]), STR_106(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_129(CODE[3]), STR_125(CODE[3]), STR_120(CODE[3]), STR_115(CODE[3]), 
		 -> STR_110(CODE[3]), STR_106(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_95(CODE[127]), STR_93(CODE[3]), STR_92(CODE[3]), 
		 -> STR_91(CODE[21]), STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), 
		 -> STR_87(CODE[21]), STR_86(CODE[21]), STR_85(CODE[26]), STR_84(CODE[15]), 
		 -> STR_83(CODE[15]), STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[10]), 
		 -> STR_79(CODE[10]), STR_78(CODE[19]), STR_77(CODE[19]), STR_74(CODE[3]), 
		 -> STR_73(CODE[14]), STR_72(CODE[28]), STR_71(CODE[28]), STR_70(CODE[28]), 
		 -> STR_69(CODE[22]), STR_68(CODE[22]), STR_67(CODE[22]), STR_66(CODE[22]), 
		 -> STR_65(CODE[22]), STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), 
		 -> STR_61(CODE[22]), STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[22]), 
		 -> STR_57(CODE[22]), STR_56(CODE[22]), STR_55(CODE[22]), STR_54(CODE[22]), 
		 -> STR_53(CODE[24]), STR_52(CODE[24]), STR_51(CODE[24]), STR_50(CODE[30]), 
		 -> STR_49(CODE[24]), STR_48(CODE[24]), STR_47(CODE[23]), STR_46(CODE[23]), 
		 -> STR_45(CODE[23]), STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[23]), 
		 -> STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[18]), STR_34(CODE[17]), 
		 -> STR_33(CODE[17]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[14]), STR_28(CODE[14]), STR_27(CODE[27]), STR_26(CODE[27]), 
		 -> STR_25(CODE[23]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[22]), STR_20(CODE[23]), STR_19(CODE[23]), STR_18(CODE[23]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_95(CODE[127]), STR_93(CODE[3]), STR_92(CODE[3]), 
		 -> STR_91(CODE[21]), STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), 
		 -> STR_87(CODE[21]), STR_86(CODE[21]), STR_85(CODE[26]), STR_84(CODE[15]), 
		 -> STR_83(CODE[15]), STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[10]), 
		 -> STR_79(CODE[10]), STR_78(CODE[19]), STR_77(CODE[19]), STR_74(CODE[3]), 
		 -> STR_73(CODE[14]), STR_72(CODE[28]), STR_71(CODE[28]), STR_70(CODE[28]), 
		 -> STR_69(CODE[22]), STR_68(CODE[22]), STR_67(CODE[22]), STR_66(CODE[22]), 
		 -> STR_65(CODE[22]), STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), 
		 -> STR_61(CODE[22]), STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[22]), 
		 -> STR_57(CODE[22]), STR_56(CODE[22]), STR_55(CODE[22]), STR_54(CODE[22]), 
		 -> STR_53(CODE[24]), STR_52(CODE[24]), STR_51(CODE[24]), STR_50(CODE[30]), 
		 -> STR_49(CODE[24]), STR_48(CODE[24]), STR_47(CODE[23]), STR_46(CODE[23]), 
		 -> STR_45(CODE[23]), STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[23]), 
		 -> STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[18]), STR_34(CODE[17]), 
		 -> STR_33(CODE[17]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[14]), STR_28(CODE[14]), STR_27(CODE[27]), STR_26(CODE[27]), 
		 -> STR_25(CODE[23]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[22]), STR_20(CODE[23]), STR_19(CODE[23]), STR_18(CODE[23]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_76(CODE[9]), STR_75(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    a	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_76(CODE[9]), STR_75(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_101(CODE[4]), STR_100(CODE[4]), STR_97(CODE[4]), STR_96(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_101(CODE[4]), STR_100(CODE[4]), STR_97(CODE[4]), STR_96(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_74(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_95(CODE[127]), STR_93(CODE[3]), STR_92(CODE[3]), STR_91(CODE[21]), 
		 -> STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), STR_87(CODE[21]), 
		 -> STR_86(CODE[21]), STR_85(CODE[26]), STR_84(CODE[15]), STR_83(CODE[15]), 
		 -> STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[10]), STR_79(CODE[10]), 
		 -> STR_78(CODE[19]), STR_77(CODE[19]), STR_73(CODE[14]), STR_72(CODE[28]), 
		 -> STR_71(CODE[28]), STR_70(CODE[28]), STR_69(CODE[22]), STR_68(CODE[22]), 
		 -> STR_67(CODE[22]), STR_66(CODE[22]), STR_65(CODE[22]), STR_64(CODE[22]), 
		 -> STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), STR_60(CODE[21]), 
		 -> STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), STR_56(CODE[22]), 
		 -> STR_55(CODE[22]), STR_54(CODE[22]), STR_53(CODE[24]), STR_52(CODE[24]), 
		 -> STR_51(CODE[24]), STR_50(CODE[30]), STR_49(CODE[24]), STR_48(CODE[24]), 
		 -> STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), STR_44(CODE[23]), 
		 -> STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), 
		 -> STR_35(CODE[18]), STR_34(CODE[17]), STR_33(CODE[17]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[14]), STR_28(CODE[14]), 
		 -> STR_27(CODE[27]), STR_26(CODE[27]), STR_25(CODE[23]), STR_24(CODE[22]), 
		 -> STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[22]), STR_20(CODE[23]), 
		 -> STR_19(CODE[23]), STR_18(CODE[23]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S7386_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    sp____localtime_r.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    t	PTR const long long  size(1) Largest target is 8
		 -> pclock(BANK0[8]), 

    sp__localtime.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp____localtime_r	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t	PTR const long long  size(1) Largest target is 8
		 -> pclock(BANK0[8]), 

    F191.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_95(CODE[127]), STR_93(CODE[3]), STR_92(CODE[3]), STR_91(CODE[21]), 
		 -> STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), STR_87(CODE[21]), 
		 -> STR_86(CODE[21]), STR_85(CODE[26]), STR_84(CODE[15]), STR_83(CODE[15]), 
		 -> STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[10]), STR_79(CODE[10]), 
		 -> STR_78(CODE[19]), STR_77(CODE[19]), STR_74(CODE[3]), STR_73(CODE[14]), 
		 -> STR_72(CODE[28]), STR_71(CODE[28]), STR_70(CODE[28]), STR_69(CODE[22]), 
		 -> STR_68(CODE[22]), STR_67(CODE[22]), STR_66(CODE[22]), STR_65(CODE[22]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[22]), STR_54(CODE[22]), STR_53(CODE[24]), 
		 -> STR_52(CODE[24]), STR_51(CODE[24]), STR_50(CODE[30]), STR_49(CODE[24]), 
		 -> STR_48(CODE[24]), STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[18]), STR_34(CODE[17]), STR_33(CODE[17]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[14]), 
		 -> STR_28(CODE[14]), STR_27(CODE[27]), STR_26(CODE[27]), STR_25(CODE[23]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[22]), 
		 -> STR_20(CODE[23]), STR_19(CODE[23]), STR_18(CODE[23]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    tim.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tim	PTR const struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_133(CODE[37]), STR_132(CODE[22]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    f1p	PTR  size(2) Largest target is 320
		 -> C(BIGRAM[320]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_95(CODE[127]), STR_93(CODE[3]), STR_92(CODE[3]), STR_91(CODE[21]), 
		 -> STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), STR_87(CODE[21]), 
		 -> STR_86(CODE[21]), STR_85(CODE[26]), STR_84(CODE[15]), STR_83(CODE[15]), 
		 -> STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[10]), STR_79(CODE[10]), 
		 -> STR_78(CODE[19]), STR_77(CODE[19]), STR_74(CODE[3]), STR_73(CODE[14]), 
		 -> STR_72(CODE[28]), STR_71(CODE[28]), STR_70(CODE[28]), STR_69(CODE[22]), 
		 -> STR_68(CODE[22]), STR_67(CODE[22]), STR_66(CODE[22]), STR_65(CODE[22]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[22]), STR_54(CODE[22]), STR_53(CODE[24]), 
		 -> STR_52(CODE[24]), STR_51(CODE[24]), STR_50(CODE[30]), STR_49(CODE[24]), 
		 -> STR_48(CODE[24]), STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[18]), STR_34(CODE[17]), STR_33(CODE[17]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[14]), 
		 -> STR_28(CODE[14]), STR_27(CODE[27]), STR_26(CODE[27]), STR_25(CODE[23]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[22]), 
		 -> STR_20(CODE[23]), STR_19(CODE[23]), STR_18(CODE[23]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_95(CODE[127]), STR_93(CODE[3]), STR_92(CODE[3]), STR_91(CODE[21]), 
		 -> STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), STR_87(CODE[21]), 
		 -> STR_86(CODE[21]), STR_85(CODE[26]), STR_84(CODE[15]), STR_83(CODE[15]), 
		 -> STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[10]), STR_79(CODE[10]), 
		 -> STR_78(CODE[19]), STR_77(CODE[19]), STR_74(CODE[3]), STR_73(CODE[14]), 
		 -> STR_72(CODE[28]), STR_71(CODE[28]), STR_70(CODE[28]), STR_69(CODE[22]), 
		 -> STR_68(CODE[22]), STR_67(CODE[22]), STR_66(CODE[22]), STR_65(CODE[22]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[22]), STR_54(CODE[22]), STR_53(CODE[24]), 
		 -> STR_52(CODE[24]), STR_51(CODE[24]), STR_50(CODE[30]), STR_49(CODE[24]), 
		 -> STR_48(CODE[24]), STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[18]), STR_34(CODE[17]), STR_33(CODE[17]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[14]), 
		 -> STR_28(CODE[14]), STR_27(CODE[27]), STR_26(CODE[27]), STR_25(CODE[23]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[22]), 
		 -> STR_20(CODE[23]), STR_19(CODE[23]), STR_18(CODE[23]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_76(CODE[9]), 
		 -> STR_75(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_76(CODE[9]), 
		 -> STR_75(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> STR_76(CODE[9]), STR_75(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), 
		 -> T(CODE[176]), STR_3(CODE[5]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    t	PTR long long  size(2) Largest target is 8
		 -> time@current_time(BANK0[8]), NULL(NULL[0]), 

    hist	PTR volatile struct hist_type size(2) Largest target is 320
		 -> C.hist(BIGRAM[97]), C(BIGRAM[320]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 155
		 -> R(BANK1[155]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 155
		 -> r_cal(BANK4[155]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_76(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_75(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__asctime	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    S3418tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp__localtime	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t_mbmc	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1999spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    S1999spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  439880
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                            _asctime
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                    _display_history
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                     _load_hist_data
                          _localtime
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                      _set_hist_flag
                 _set_load_relay_one
                 _set_load_relay_two
                           _set_time
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                               _time
                    _update_cal_data
                   _update_hist_data
                         _update_lcd
                      _wait_lcd_done
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _update_hist_data                                     3     0      3      88
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_time                                             8     0      8      22
 ---------------------------------------------------------------------------------
 (1) _set_hist_flag                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        7     7      0     615
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _load_hist_data                                       2     2      0    4070
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
                         _start_bsoc
                          _stop_bsoc
                               _time
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    1451
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _display_history                                      0     0      0   83116
                             _WaitMs
                            _asctime
                         _get_switch
                      _get_vterm_ptr
                          _localtime
                            _sprintf
                               _time
                         _update_lcd
 ---------------------------------------------------------------------------------
 (18) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (1) _localtime                                            1     0      1   14641
                      ___localtime_r
 ---------------------------------------------------------------------------------
 (2) ___localtime_r                                        3     0      3   14610
                       ___secs_to_tm
                     ___secs_to_zone
 ---------------------------------------------------------------------------------
 (3) ___secs_to_zone                                      46    28     18   11126
                            ___aodiv
                     ___year_to_secs
                           _do_tzset
                       _rule_to_secs
                         _scan_trans
                          _zi_read32
 ---------------------------------------------------------------------------------
 (4) _scan_trans                                          30    18     12    1990
                          _zi_read32
 ---------------------------------------------------------------------------------
 (4) _zi_read32                                            2     0      2      88
 ---------------------------------------------------------------------------------
 (4) _rule_to_secs                                        30    22      8    3167
                            ___aldiv
                            ___aomod
                             ___lmul
                    ___month_to_secs
                     ___year_to_secs
                      _days_in_month
 ---------------------------------------------------------------------------------
 (5) _days_in_month                                        4     0      4      66
 ---------------------------------------------------------------------------------
 (5) ___year_to_secs                                      24    14     10    1473
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (5) ___month_to_secs                                      8     4      4      90
 ---------------------------------------------------------------------------------
 (4) _do_tzset                                             2     2      0    2777
                            _getname
                             _getoff
                            _getrule
 ---------------------------------------------------------------------------------
 (5) _getrule                                              6     2      4    1222
                             _getint
                             _getoff
 ---------------------------------------------------------------------------------
 (6) _getoff                                               6     4      2     425
                             _getint
 ---------------------------------------------------------------------------------
 (7) _getint                                               4     2      2     112
 ---------------------------------------------------------------------------------
 (5) _getname                                              6     2      4     663
 ---------------------------------------------------------------------------------
 (3) ___secs_to_tm                                        67    57     10    3174
                            ___aldiv
                            ___almod
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (6) ___omul                                              24     8     16      92
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8      92
 ---------------------------------------------------------------------------------
 (4) ___almod                                             10     2      8     296
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     300
 ---------------------------------------------------------------------------------
 (2) _asctime                                              6     4      2    2527
                            ___awdiv
                            ___awmod
                              _put2d
 ---------------------------------------------------------------------------------
 (3) _put2d                                                5     0      5     959
                            ___awdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     2      2     232
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                   9     9      0   67566
                             _WaitMs
                   _cal_current_zero
                     _clear_adc_scan
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _write_cal_data                                       7     7      0     593
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _CRC_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_IsBusy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_CalculatedResultGet                              7     4      3     209
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     6     4      2      94
 ---------------------------------------------------------------------------------
 (2) _CRC_8BitDataWrite                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     415
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     0      5     242
                        _check_range
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  131766
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   65599
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                           104    10     94   30659
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   35090
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   34808
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1    1420
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1    1389
                     _ringBufS_flush
                   _ringBufS_put_dma
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31860
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   30434
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   30281
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29889
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   14099
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     433
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     445
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     335
                    _ADCC_Initialize
                  _CLKREF_Initialize
                     _CRC_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       4     4      0      92
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                           31    31      0    5544
                                             10 COMRAM    31    31      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0    5454
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0    5454
                     _check_day_time
 ---------------------------------------------------------------------------------
 (17) _check_day_time                                      4     4      0    5454
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
                               _time
 ---------------------------------------------------------------------------------
 (18) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (18) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   36148
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   36058
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           6     6      0   36058
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                           104    10     94   30659
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   30281
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29889
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   14099
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     433
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     445
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _CRC_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _asctime
     ___awdiv
     ___awmod
     _put2d
       ___awdiv
       ___lbmod
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _wait_lcd_done
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     _cal_current_zero
       _check_range
     _clear_adc_scan
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _wait_lcd_done
     _write_cal_data
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
       _CRC_Initialize
       _CRC_IsBusy
       _CRC_Start
       _DATAEE_WriteByte
   _display_history
     _WaitMs
       _StartTimer
       _TimerDone
     _asctime
       ___awdiv
       ___awmod
       _put2d
         ___awdiv
         ___lbmod
     _get_switch
     _get_vterm_ptr
     _localtime
       ___localtime_r
         ___secs_to_tm
           ___aldiv
           ___almod
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         ___secs_to_zone
           ___aodiv
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _do_tzset
             _getname
             _getoff
               _getint
             _getrule
               _getint
               _getoff
                 _getint
           _rule_to_secs
             ___aldiv
             ___aomod
             ___lmul
             ___month_to_secs
             ___year_to_secs
               ___aodiv
               ___aomod
               ___lmul
               ___omul
             _days_in_month
           _scan_trans
             _zi_read32
           _zi_read32
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _time
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _wait_lcd_done
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _load_hist_data
     ___fladd
     ___flmul
     ___fltol
     ___xxtofl
     _start_bsoc
     _stop_bsoc
     _time
   _localtime
     ___localtime_r
       ___secs_to_tm
         ___aldiv
         ___almod
         ___aodiv
         ___aomod
         ___lmul
         ___omul
       ___secs_to_zone
         ___aodiv
         ___year_to_secs
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         _do_tzset
           _getname
           _getoff
             _getint
           _getrule
             _getint
             _getoff
               _getint
         _rule_to_secs
           ___aldiv
           ___aomod
           ___lmul
           ___month_to_secs
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _days_in_month
         _scan_trans
           _zi_read32
         _zi_read32
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_hist_flag
   _set_load_relay_one
   _set_load_relay_two
   _set_time
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _time
   _update_cal_data
   _update_hist_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
     _wait_lcd_done
   _wait_lcd_done
   _write_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_WriteByte

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
         _time
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     5C2      69       18.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      86      15       52.3%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DB      13       85.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E6       9       89.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     29      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     60F      58        0.0%
DATA                 0      0     BD1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 20 03:39:19 2020

                         _SPI1_Exchange8bit 27FE                    __end_of_set_display_info 2876  
                                         _C 08FF                                           _D 0A3F  
                                         _H 019B                                           _P 0094  
                                         _R 0100                                           _S 01A4  
                                         _T F8B7                                           _V 0207  
          __end_of_TMR5_SetInterruptHandler 253E                __end_of_start_switch_handler 27DE  
                               __CFG_CP$OFF 000000                     __size_of_ringBufS_flush 0092  
                           _update_cal_data 1AE6                                          _r0 01E5  
                                        _r1 01DB                                          _bp F9DF  
                    __end_of_FVR_Initialize 2A72                              _check_day_time A15A  
                               __CFG_LVP$ON 000000                                         l171 292C  
                                       l809 280C                                         l675 23F6  
                                       l942 16A6                                         _GIE 01FE97  
                                       _abs 1DE2                                         _pad F9CE  
                                       fsr0 003FE9                                         fsr2 003FD9  
                   __size_of_PMD_Initialize 0014                             _TMR2_Initialize 28C2  
                                       prod 003FF3                                         tosl 003FFD  
                                       wreg 003FE8                     __end_of___month_to_secs 01A2  
                             _INT0_CallBack 2710                           _update_adc_result 2072  
                             __CFG_BBEN$OFF 000000                       __size_of_Volts_to_SOC 00BA  
                    __size_of___localtime_r 0244                               _INT1_CallBack 26A4  
                              __CFG_ZCD$OFF 000000                                        l1004 1FEE  
                                      l2017 142C                                        l2033 089A  
                                      l2203 A4BC                                        l3021 E812  
                                      l1501 167A                                        l1271 2954  
                                      l1192 202E                                        l1520 94D6  
                                      l2137 DBCE                                        l2058 0E56  
                                      l1282 E566                             _timer3ReloadVal 00C0  
                                      l1284 E56C                                        l4021 7AE0  
                                      l1614 1A3C                                        l1462 0444  
                                      l1455 005E                                        l2184 FDEE  
                                      l2408 BA50                                        l2096 13AE  
                                      l2362 5098                                        l3306 8210  
                                      l2523 28F4                                        l2283 F55A  
                                      l1475 0962                                        l1820 20C8  
                                      l2292 D436                                        l3261 75DA  
                                      l3413 1E22                                        l3405 DF06  
                                      l2605 BB3E                                        l4029 65F4  
                                      l1485 0C74                                        l1477 0968  
                                      l2366 53D6                                        l3342 6E1E  
                                      l1742 0AA8                                        l1830 D64A  
                                      l2199 A4C4                                        l1495 0E7A  
                                      l2552 1D24                                        l1496 10A4  
                                      l3273 746A                                        l2641 9DE4  
                                      l1761 216A                                        l2626 ABBE  
                                      l1746 0F7C                                        l3418 F794  
                                      l2467 FA2A                                        l1837 EDA2  
                                      l1829 D4EE                                        l2733 02A4  
                                      l3517 CB88                                        l3382 D848  
                                      l3454 C6FC                        _ADCC_StartConversion 2958  
                                      l3543 F67A                                        l2487 8CCA  
                                      l2567 21D4                                        l3810 D216  
                                      l2691 4972                                        l1877 2872  
                                      l1977 8BE6                                        l3825 122E  
                                      l3933 CFF6                                        l3838 11AA  
                                      l3942 C208                                        l2983 05BE  
                                      l3849 39C6                                        l2994 EADA  
                                      l2987 EA06                                        l3977 BF8C  
                                      l3969 BEA6                                        l9802 6EBE  
                                      l9820 6F6E                                        l9910 72CE  
                                      l9830 6FC4                                        l9814 6F3C  
                                      l9806 6ED4                                        l9912 72E0  
                                      l9920 731C                                        l9832 6FF4  
                                      l9808 6F04                                        l9826 6FAE  
                                      l9932 73F4                                        l9916 72EA  
                                      l9950 748C                                        l9942 744E  
                                      l9934 741A                                        l9838 7016  
                                      STR_1 FF1D                                        l9952 749E  
                                      STR_2 FF08                                        STR_3 FFD5  
                                      l9970 74D8                                        l9882 71E6  
                                      STR_4 FEF3                                        STR_5 FBB9  
                                      l9956 74AA                                        l9884 71F8  
                                      l9892 7232                                        l9868 7154  
                                      l9796 6E7E                                        STR_6 FBB9  
                                      STR_7 FBB9                                        l9982 7536  
                                      l9966 74D2                                        l9878 71C6  
                                      STR_8 FBB9                                        STR_9 FBB9  
                                      l9992 7562                                        l9888 7202  
                                      l9996 757A                                        l9998 758A  
                                      _LATA 003FBA                                        _LATB 003FBB  
                                      _LATC 003FBC                                        _LATD 003FBD  
                                      _LATE 003FBE                                        _LATF 003FBF  
                                      _T2PR 003FAB                                        _T6PR 003F93  
                                      _PMD0 0039C0                                        _PMD1 0039C1  
                                      _PMD2 0039C2                                        _PMD3 0039C3  
                                      u8000 115A                                        _PMD4 0039C4  
                                      _PMD5 0039C5                                        _PMD6 0039C6  
                                      _PMD7 0039C7                                        u7300 719A  
                                      u8020 233E                                        u7301 7194  
                                      u8030 2340                                        u8110 C26E  
                                      u8200 C46A                                        u7410 7312  
                                      u8130 C2C4                                        u9010 1C96  
                                      u7340 722A                                        u9020 E6DC  
                                      u7180 230E                                        u8141 C2CE  
                                      u8061 EDB4                                        u7510 74CA  
                                      u7350 724A                                        u7318 719C  
                                      u8150 C308                                        u8310 CDAC  
                                      u8230 CBE8                                        u9110 E7F2  
                                      u9030 E6F0                                        u7190 2310  
                                      u7415 7302                                        u8160 C33A  
                                      u9040 E72A                                        u7345 721A  
                                      u9025 E6D2                                        u9121 E3C6  
                                      u8081 EED6                                        u7450 743C  
                                      u7290 717A                                        u8250 CC3E  
                                      u9130 E400                                        u9210 F406  
                                      u8180 C418                                        u8260 CC70  
                                      u9140 E432                                        u7620 22DE  
                                      u9045 E720                                        u7550 7526  
                                      u9230 1B5A                                        u8270 CCA2  
                                      u7630 22E0                                        u9240 1B7A  
                                      u7800 DEF6                                        u9160 E510  
                                      u7640 FFA8                                        u7490 74B0  
                                      u8530 812A                                        u8450 8044  
                                      u8290 CD5A                                        u9090 E7C8  
                                      u7810 DEF8                                        u7555 7516  
                                      u7580 7546                                        u8540 8164  
                                      u7740 1DF6                                        u9180 F31C  
                                      u8710 6C96                                        u8550 81A0  
                                      u7750 DE28                                        u9190 F34E  
                                      u8535 811A                                        u8640 67A8  
                                      u7920 A6B0                                        u7840 11DC  
                                      u7905 A60A                                        u8490 80CE  
                                      u7906 A610                                        u7850 11DE  
                                      u7755 DE1E                                        u7907 A61E  
                                      u7940 A788                                        u7925 A6A6  
                                      u8750 6CF2                                        u7870 A584  
                                      u8655 693C                                        u8760 6D2C  
                                      u7880 A5D0                                        u8665 6A04  
                                      u7945 A77E                                        u8770 6D72  
                                      u7970 1EA6                                        _PLLR 01CEE0  
                                      u8755 6CE2                                        u8675 6BCC  
                                      u7795 DED8                                        u7875 A57A  
                                      u7980 1EA8                                        u8950 05B8  
                                      u7990 1158                     __end_of_display_history B77C  
                                      _WPUA 003A41                                        _WPUB 003A51  
                                      _WPUC 003A61                                        _WPUD 003A71  
                                      _WPUE 003A81                                        _WPUF 003A91  
                          __end_of_ADCC_ISR 23D0                       __size_of___secs_to_tm 10D2  
                             __CFG_FCMEN$ON 000000                                _rule_to_secs 75E4  
                                      _dbuf 0354                          __size_of_CRC_Start 0006  
                                      _cp_h F9F3                                        _cp_l F9EF  
                                      _atoi C492                                        _ctoa 10A8  
                                      _main 0000                                        _dtoa 8BEC  
                                      _nanf 18B8                                        _lock 01D3  
                                      _seed 02DE                                        _prec 004C  
                                      _time 197A                                        _nout 00BA  
                                      _spin F967                                        fsr0h 003FEA  
                                      fsr1h 003FE2                                        indf0 003FEF  
                                      fsr2h 003FDA                                        fsr0l 003FE9  
                                      indf1 003FE7                                        indf2 003FDF  
                                      fsr1l 003FE1                                        fsr2l 003FD9  
                                      _stoa BA54                                        btemp 002A  
                                      _utoa AB7A                                        _xtoa 9DA0  
                    __end_of_check_adc_scan 2A52                               ___fpclassifyf DD7A  
                                      prodh 003FF4                                        prodl 003FF3  
                                      start 00AE                             _timer5ReloadVal 00C4  
                 __end_of_SPI1_Exchange8bit 281C                   __size_of_clear_hid_pflags 0066  
                           _TMR3_Initialize 1D54                 __size_of_set_load_relay_one 0010  
               __size_of_set_load_relay_two 0010                               __CFG_CSWEN$ON 000000  
                            _SPI1STATUSbits 003D17                           _UART1_rx_vect_isr 2608  
                              ___param_bank 000000                        display_history@bwait 0053  
                    __end_of_check_day_time A4CE                          ?_UART1_rx_vect_isr 0001  
                 __size_of_DATAEE_WriteByte 0068                            _update_hist_data 133A  
                          __end_of_INT0_ISR 2A02                            __end_of_INT1_ISR 2072  
            __size_of_OSCILLATOR_Initialize 0016                    __end_of_ringBufS_put_dma 0AB0  
             __end_of_OSCILLATOR_Initialize 2932                                       l10004 75BA  
                                     l10110 DEA8                                       l10014 FEDE  
                                     l10106 DEA4                                       l10202 02FA  
                                     l10018 FF64                                       l10116 DEFE  
                                     l10212 EDBC                                       l10134 121E  
                                     l10312 7CF6                                       l10232 C274  
                                     l10216 EE62                                       l10322 7D4C  
                                     l10162 A70A                                       l10404 8066  
                                     l10332 7DD4                                       l10324 7D7C  
                                     l10244 C30E                                       l10092 1E12  
                                     l10172 A810                                       l10164 A75A  
                                     l10148 A5EC                                       l10422 80DC  
                                     l10350 7E98                                       l10342 7E2A  
                                     l10318 7D36                                       l12022 D704  
                                     l12014 D698                                       l10238 C2C8  
                                     l10190 119A                                       l10600 6D88  
                                     l10504 67BA                                       l10432 8150  
                                     l10408 808C                                       l10344 7E5A  
                                     l12024 D712                                       l10256 C3E0  
                                     l10168 A7A2                                       l10610 6DE6  
                                     l10450 81E4                                       l10418 80D6  
                                     l10338 7E14                                       l12034 D774  
                                     l12026 D728                                       l10452 81F4  
                                     l10444 81BC                                       l10364 7EEC  
                                     l10356 7ED2                                       l12036 D792  
                                     l12028 D746                                       l10292 CD22  
                                     l10284 CC76                                       l10276 CBEE  
                                     l11500 D088                                       l10438 818C  
                                     l10390 8018                                       l10382 7FB2  
                                     l10374 7F7C                                       l12046 D7C6  
                                     l12038 D7A8                                       l10710 0546  
                                     l11502 D0F4                                       l10608 6DCC  
                                     l10384 7FC4                                       l10392 801C  
                                     l12056 D828                                       l12320 899C  
                                     l12312 896A                                       l10562 6C2E  
                                     l10474 6694                                       l11450 C4CE  
                                     l10714 0588                                       l10802 E406  
                                     l11522 DF4A                                       l10580 6CA4  
                                     l10556 6C12                                       l10492 6762  
                                     l10476 669A                                       l10468 6654  
                                     l10732 EA54                                       l12332 8B18  
                                     l12324 8A38                                       l12308 8888  
                                     l11700 59EA                                       l10590 6D18  
                                     l10566 6C54                                       l10494 6768  
                                     l10486 6722                                       l10478 66CA  
                                     l10726 E9C4                                       l10398 804A  
                                     l11470 C5E8                                       l10718 05BC  
                                     l10814 E4D8                                       l12262 0486  
                                     l12270 04D8                                       l11534 DFA6  
                                     l11630 17B6                                       l10576 6C9E  
                                     l10496 6798                                       l10744 EAD8  
                                     l10736 EAA2                                       l11464 C56E  
                                     l11448 C4AC                                       l10752 1C9A  
                                     l11528 DF76                                       l11712 5AAA  
                                     l10594 6D5E                                       l12338 8BB4  
                                     l12346 8BC6                                       l10850 1B7E  
                                     l11474 C650                                       l11466 C586  
                                     l11458 C542                                       l10762 E6FC  
                                     l10834 F3CE                                       l10826 F322  
                                     l12266 04C4                                       l11546 E028  
                                     l11706 5A16                                       l14130 D984  
                                     l12292 8732                                       l12364 246E  
                                     l11484 C6EC                                       l11468 C5AA  
                                     l10780 E79A                                       l11652 552E  
                                     l14220 B7A8                                       l14116 D89A  
                                     PRLOCK 0039EF                                       l10862 CE3A  
                                     l11726 0178                                       l11662 566A  
                                     l14222 B7AE                                       l13344 1C34  
                                     l16000 AC0A                                       l10880 CFB8  
                                     l11680 58FE                                       l11672 58C2  
                                     l11648 5504                                       l11656 5634  
                                     l14232 B7EA                                       l14144 DA06  
                                     l14128 D950                                       l14136 DA02  
                                     l12298 8762                                       l10786 E7AA  
                                     l10778 E77E                                       l16010 AE00  
                                     l12802 2174                                       l13514 EF56  
                                     l10866 CE7A                                       l14218 B798  
                                     l13348 1C66                                       l12708 A26E  
                                     l13540 DA80                                       l13532 DA54  
                                     l14420 9D92                                       l10788 E7C0  
                                     l10884 CFDC                                       l11692 5998  
                                     l14244 B83C                                       l14228 B7DE  
                                     l14156 1B16                                       l12742 A46A  
                                     l13518 EFCC                                       l11678 58F4  
                                     l14238 B814                                       l14166 1350  
                                     l12728 A364                                       l13720 F1BE  
                                     l13544 DA94                                       l13608 20DE  
                                     l16032 9DD4                                       l16200 3B02  
                                     l16104 C03A                                       l11688 596A  
                                     l14264 B8BC                                       l14256 B896  
                                     l14248 B848                                       l14440 9640  
                                     l13722 F1CE                                       l15410 B30C  
                                     l14370 0744                                       l16106 C052  
                                     l11698 59E2                                       l14178 1388  
                                     l12908 1BBA                                       l17100 50CA  
                                     l13724 F1D4                                       l15500 F18C  
                                     l16052 9EAA                                       l16044 9E4A  
                                     l16220 3C6E                                       l15404 B24E  
                                     l13556 0DFA                                       l11980 E852  
                                     l16132 AF08                                       l16124 C1E4  
                                     l16108 C078                                       l14444 967C  
                                     l14622 1280                                       l13750 F2CE  
                                     l13742 F254                                       l13726 F1E2  
                                     l13734 F1EA                                       l14198 E392  
                                     l16038 9E0E                                       l16222 3C84  
                                     l14374 0782                                       l12790 E658  
                                     l16142 B024                                       l13646 2092  
                                     l14286 BA16                                       l13670 13EA  
                                     l14616 1270                                       l17112 53CE  
                                     l13736 F21C                                       l15440 FA22  
                                     l15600 8F34                                       l15520 F900  
                                     l15512 F8D6                                       l16304 4366  
                                     l15424 B424                                       l15416 B376  
                                     l12928 12F2                                       l13568 0E30  
                                     l12856 238A                                       l16144 B02E  
                                     l16152 B154                                       l16136 AFA2  
                                     l14288 BA40                                       l15362 F590  
                                     l15450 FABA                                       l15442 FA34  
                                     l15530 F980                                       l16314 4414  
                                     l16218 3C34                                       l12786 E62E  
                                     l16410 BE8C                                       l17034 F4F4  
                                     l13682 1402                                       l13690 F800  
                                     l13924 27B8                                       l17060 4B26  
                                     l17052 4A66                                       l15436 F9FA  
                                     l15620 8FE6                                       l15516 F8E8  
                                     l16092 A110                                       l16068 9FA0  
                                     l16076 A026                                       l16324 4536  
                                     l16260 3FC0                                       l17220 919A  
                                     l17212 9138                                       l11996 E906  
                                     l11988 E89A                                       l16148 B0C8  
                                     l16412 BEB0                                       l17028 F48E  
                                     l17310 1510                                       l15374 0C20  
                                     l15446 FA70                                       l15702 1A50  
                                     l16334 45EC                                       l16238 3DE8  
                                     l13862 0712                                       l13694 F862  
                                     l13936 23F2                                       l17072 4C94  
                                     l17064 4B92                                       l17056 4ABA  
                                     l15384 0D46                                       l15376 0C42  
                                     l15552 10C6                                       l15624 9022  
                                     l15472 F092                                       l15456 03AA  
                                     l15712 1B8C                                       l16280 41D2  
                                     l16272 411A                                       l16256 3F6C  
                                     l16248 3E80                                       l17208 9124  
                                     l17082 4EC0                                       l13962 1FD6  
                                     l15554 10F2                                       l15466 F07C  
                                     l15538 F9B4                                       l15730 1C48  
                                     l15706 1AC0                                       l15650 17AA  
                                     l16362 48A0                                       l16610 09C8  
                                     l16418 BF1E                                       l13858 0696  
                                     l17092 5000                                       l17076 4CE8  
                                     l13980 2016                                       l15388 0D84  
                                     l15492 F158                                       l15820 22EC  
                                     l15804 21CC                                       l15724 1C0E  
                                     l15708 1B2A                                       l16372 48FE  
                                     l16348 4768                                       l16284 4206  
                                     l16196 3AB2                                       l16620 0CAA  
                                     l17340 B76C                                       l17086 4F3A  
                                     l15590 8D22                                       l15478 F0B2  
                                     l15806 21EE                                       l15670 18D0  
                                     l15638 1766                                       l16198 3AEC  
                                     l16438 FFEC                                       l16710 65D8  
                                     l16702 650A                                       l17334 B768  
                                     l17510 041C                                       l17430 0048  
                                     l17096 50A8                                       l15920 2854  
                                     l15904 279C                                       l15832 2374  
                                     l15840 23DE                                       l15744 1CB0  
                                     l15736 1C4E                                       l15728 1C36  
                                     l15672 18E6                                       l16368 48FA  
                                     l16608 0986                                       l16720 29BC  
                                     l16552 779E                                       l17600 096C  
                                     l15586 8D04                                       l15578 8CBA  
                                     l15762 1D72                                       l15746 1CBC  
                                     l15658 1800                                       l16378 491E  
                                     l17258 9422                                       l16570 7B56  
                                     l16554 77F2                                       l17282 D328  
                                     l17266 D234                                       l17602 099C  
                                     l17434 0066                                       l15772 1E34  
                                     l15668 18A4                                       l15676 1912  
                                     l15940 BAC0                                       l17380 D5E6  
                                     l16628 0D0E                                       l16812 3756  
                                     l16804 365C                                       l16732 2C68  
                                     l16660 5EAE                                       l17292 D400  
                                     l17620 09F6                                       l17516 045E  
                                     l17508 03F2                                       l17436 007A  
                                     l17428 0040                                       l15782 1FE0  
                                     l15766 1DAA                                       l15686 19B6  
                                     l15694 19E4                                       l16910 EC6A  
                                     l17366 D4BE                                       l16662 5FA4  
                                     l17614 09D0                                       l15848 244A  
                                     l15856 255C                                       l15960 BBB0  
                                     l16760 3100                                       l16752 302C  
                                     l16664 5FC4                                       l17712 154C  
                                     l15882 2690                                       l15970 BC6A  
                                     l16850 0E84                                       l16746 2FA4  
                                     l16738 2DA4                                       l16674 62AA  
                                     l16658 5E8E                                       l15884 26AA  
                                     l15868 25F4                                       l15796 2102  
                                     l15964 BBE0                                       l15956 BB74  
                                     l16588 0B08                                       l16844 0E64  
                                     l16780 3278                                       l16684 638A  
                                     l17652 0C64                                       l17564 06EE  
                                     l15894 274C                                       l15974 BC96  
                                     l16846 0E6C                                       l16942 FEC0  
                                     l17750 162A                                       l17742 15F4  
                                     l17670 0D86                                       l17726 15A4  
                                     l15992 ABAE                                       l16848 0E76  
                                     l16856 0E8A                                       l16936 FE0E  
                                     l16880 F754                                       l16792 353E  
                                     l16768 31D4                                       l17744 160C  
                                     l17736 15E2                                       l17576 07C8  
                                     l15978 BCD2                                       l16858 0EB6  
                                     l16778 3272                                       l16698 64EC  
                                     l16890 C9BA                                       l17754 1650  
                                     l17682 12E2                                       l17658 0C86  
                                     l17594 0958                                       l16796 359E  
                                     l16788 3332                                       l17764 16A6  
                                     l17686 1344                                       l17696 14C6  
                                     l17698 14F2                             __end_of___aldiv E0A4  
                           __end_of___aodiv C492                                _Volts_to_SOC 0684  
                                     _ADCAP 003EF5                                       _ADACT 003EFE  
                           __end_of___almod E982                             __end_of___fladd 75E4  
                                     _ADCLK 003EFF                             __end_of___aomod CDD0  
                                     _ADPCH 003EF1                             __end_of___fldiv 821A  
                                     _ADREF 003EFD                             __end_of___awdiv F1A6  
                           __end_of___flneg 1CC4                                       STR_10 FBB9  
                                     STR_11 FBB9                                       STR_12 FBB9  
                                     STR_20 FBB7                                       STR_13 FBB9  
                                     STR_21 FD95                                       STR_14 FF32  
                                     STR_30 FEB3                                       STR_22 FDAB  
                                     STR_15 FF5C                                       STR_23 FE5B  
                                     STR_31 FD7F                                       STR_32 FE2F  
                                     STR_24 FE19                                       STR_16 FD69  
                                     STR_40 FC58                                       STR_33 FF96  
                                     STR_41 FC41                                       STR_25 FBCE  
                                     STR_17 FB25                               __CFG_WDTE$OFF 000000  
                                     STR_42 FD10                                       STR_18 FBE5  
                                     STR_26 FAD5                                       STR_50 FA9B  
                                     STR_35 FF84                                       STR_43 FCE2  
                                     STR_19 FCCB                                       STR_51 FB3F  
                                     STR_27 FAF0                                       STR_28 FF76  
                                     STR_60 FF47                                       STR_44 FCF9  
                                     STR_36 FCB4                                       STR_52 FB6F  
                           __end_of___awmod F9CE                                       STR_29 FF76  
                                     STR_61 FE45                                       STR_37 FC9D  
                                     STR_45 FBFC                                       STR_53 FB87  
                                     STR_54 FE87                                       STR_62 FD3D  
                                     STR_38 FC86                                       STR_46 FC13  
                                     STR_70 FAB9                                       STR_71 FAB9  
                                     STR_55 FE87                                       STR_63 FE9D  
                                     STR_39 FC6F                                       STR_47 FC2A  
                                     STR_72 FAB9                                       STR_64 FE03  
                                     STR_80 FFC2                                       STR_56 FE87  
                                     STR_48 FB57                                       _ADRPT 003EEC  
                                     STR_73 FF76                                       STR_81 FFA7  
                                     STR_57 FE03                                       STR_65 FD53  
                                     STR_49 FB9F                                       STR_82 FFA7  
                                     STR_74 FFFC                                       STR_66 FDED  
                                     STR_58 FDD7                                       STR_67 FE03  
                                     STR_83 FFA7                                       STR_75 FFB6  
                                     STR_59 FDC1                                       STR_68 FD53  
                                     STR_84 FFA7                                       STR_76 FFCC  
                           __end_of___lbmod 0D36                                       STR_77 FF71  
                                     STR_69 FE71                                       STR_85 FB0B  
                                     STR_94 FA75                                       STR_78 FF71  
                                     STR_86 FEC9                                       STR_79 FFC2  
                                     STR_87 FEDE                                       STR_95 F9F7  
                                     STR_96 FFDA                             __end_of___flmul 6E28  
                                     STR_97 FFE2                             __end_of___flsub 1E6E  
                           __end_of___fltol E81C                                       u10400 C696  
                                     u11200 E84C                                       u10410 C698  
                                     u10500 D1EA                                       u11220 E87A  
                                     u11230 E894                                       u10600 E07A  
                                     u10520 DF44                                       u11240 E8B6  
                                     u10450 D122                                       u10507 D1DC  
                           __end_of___lodiv E538                                       u10380 C53E  
                                     u12060 1666                                       u10540 DF72  
                                     u11260 E92E                                       u11350 D7BC  
                                     u10550 DFA0                                       u10711 5464  
                                     u10560 DFC2                                       u11280 E958  
                                     u10800 59B4                                       u10704 17D4  
                                     u12225 1EE2                                       u10457 D114  
                                     u10705 17CE                                       u10490 D1BC  
                                     _U1P1H 003DED                                       u12420 1736  
                                     u11700 8A7C                                       u11540 0478  
                                     u12068 1668                                       u10580 E050  
                                     u10820 5A88                                       _U1P2H 003DEF  
                                     u12085 16B6                                       u11614 877C  
                                     u12350 12EE                                       u12086 16B8  
                                     u10830 5A8A                                       _U1P1L 003DEC  
                                     _U1P3H 003DF1                                       u11615 8776  
                                     u10495 D1B6                                       _T3CLK 003FA9  
                                     u13320 DA02                                       _T2CON 003FAC  
                                     _U1P2L 003DEE                                       u10497 D1A8  
                                     u11545 0472                                       u12505 2974  
                                     u11634 879E                                       u14210 F584  
                                     u12274 E5DA                                       u12290 2996  
                                     u10850 015A                                       u12506 2976  
                                     _U1P3L 003DF0                                       u11635 8798  
                                     u12275 E5D4                                       u13331 1AF0  
                                     u13411 139E                                       u15020 20D2  
                                     u10860 29CE                                       u12620 0DF6  
                                     u10780 591A                                       u12445 176A  
                                     u12446 176C                                       u12438 1738  
                                     u11654 8984                                       u14230 F600  
                                     u14310 B498                                       _U2P1L 003DD4  
                                     u11655 897E                                       u14240 0C70  
                                     u15200 2828                                       u15120 259E  
                                     u12640 0E2A                                       u13360 134C  
                                     _T3CON 003FA6                                       _U2P2L 003DD6  
                                     u11674 8A52                                       u11594 874C  
                                     u14410 F0DE                                       u15210 282A  
                                     u16010 BE62                                       _U2P3L 003DD8  
                                     u11675 8A4C                                       u11595 8746  
                                     u14500 F9A0                                       u12590 DA32  
                                     u11694 8A74                                       u14430 F178  
                                     u11695 8A6E                                       u14247 0C62  
                                     u12495 2984                                       u13391 1374  
                                     _T5CLK 003F9D                                       u12760 2786  
                                     u14600 8CA0                                       u14360 0424  
                                     u15320 BCF8                                       u15400 AE70  
                                     u12496 2986                             __end_of___lomod F428  
                                     u16130 0AE8                                       u14620 8CF0  
                                     u15180 2772                                       u15340 AB94  
                                     u15500 9F58                                       u15420 9DBA  
                                     u17100 0920                                       _T2HLT 003FAD  
                                     u12766 2788                                       u14630 8F48  
                                     u14550 8C1C                                       u16070 7778  
                                     u17110 0922                                       u14367 0416  
                                     u14560 8C1E                                       u14480 F92C  
                                     u14800 1960                                       u15280 BBD6  
                                     u15520 A022                                       u16080 778A  
                                     _T5CON 003F9A                                       u14641 8F78  
                                     u14650 8F8E                                       u14810 1962  
                                     u14730 1794                                       u15290 BC1C  
                                     u15530 A042                                       u15450 9EA2  
                                     u16250 641E                                       u14651 8F8C  
                                     u15371 AE42                                       u14660 8FA2  
                                     u14580 8C8E                                       u15380 AE58  
                                     u15460 9EF6                                       u15700 3B4A  
                                     u16420 3626                                       u15381 AE56  
                                     u15541 A072                                       u15525 A004  
                                     u16405 3354                                       u14670 8FA6  
                                     u14910 1C80                                       u15390 AE6C  
                                     u15550 A088                                       u15470 9EF8  
                                     u15710 3B4C                                       u16430 36D4  
                                     u17070 0578                                       u15551 A086  
                                     u16431 36D0                                       u14760 184E  
                                     u15560 A09C                                       u15720 3B72  
                                     u16280 2958                                       u15640 B00C  
                                     u17240 153C                                       _T6CON 003F94  
                                     u15297 BC0E                                       u14690 8FBC  
                                     u14850 1BC8                                       u14770 1850  
                                     u15570 A0A0                                       u15490 9F56  
                                     u16290 29A8                                       u16610 F536  
                                     u17250 1556                                       u17090 07F6  
                                     u15820 3ED4                                       u16380 3272  
                                     u15660 B154                                       u16460 C97A  
                                     u17260 1568                                       u14950 1D02  
                                     u15750 3CCC                                       u15590 C00C  
                                     u16470 C9B0                                       u16550 F46A  
                                     u17246 153E                              __CFG_DEBUG$OFF 000000  
                                     u14880 1C1C                                       u15840 4048  
                                     u15760 3CCE                                       u17256 1558  
                                     u15770 3CF4                                       u17266 156A  
                                     u15940 4640                                       u16820 92E0  
                                     u16628 F538                                       u16580 F4D0  
                                     u15870 42C0                                       u16830 930A  
                                     u15960 47F0                                       u15880 42C2  
                                     u16568 F46C                                       u16825 92D2  
                                     u16835 92FC                                       _T6HLT 003F95  
                                     u16598 F4D2                  _ADCC_ADTI_InterruptHandler 00A1  
                                     u16980 D636                                       u16990 D638  
                                     _T2TMR 003FAA                                       _U1UIR 003DF8  
                                     _T2RST 003FAF                                       _U1RXB 003DE8  
                                     _U2UIR 003DE0                                       _U2RXB 003DD0  
                                     _U2TXB 003DD2                                       _T6TMR 003F92  
                                     _T6RST 003F97                         ??_UART1_rx_vect_isr 0006  
                                     _ISRPR 0039F1                                       _OSCEN 0039DD  
                                     _TMR3H 003FA5                                       _TMR5H 003F99  
                                     _TMR3L 003FA4                                       _TMR5L 003F98  
                 __end_of_update_adc_result 20AC                                       _TRISA 003FC2  
                                     _TRISB 003FC3                                       _TRISC 003FC4  
                                     _TRISD 003FC5                                       _TRISE 003FC6  
                                     _TRISF 003FC7                                 _Default_ISR 2A98  
                       __size_of_CRC_IsBusy 0010                     __size_of_clear_adc_scan 0006  
                        _current_sensor_cal 906C           __size_of_TMR3_SetInterruptHandler 0028  
                              ___secs_to_tm 28FE           __size_of_TMR6_SetInterruptHandler 0028  
                           __end_of_asctime 8730                               __CFG_WRTB$OFF 000000  
                          __end_of_TMR3_ISR EC46                               __CFG_WRTC$OFF 000000  
                          _cal_current_zero 0DCE                                       ___gmt F9E7  
                             __CFG_WRTD$OFF 000000                            __end_of_TMR5_ISR DD7A  
                           __end_of_getname B1B6                                _DMA1CON0bits 003BFC  
                          __end_of_TMR6_ISR 28AA                                _DMA1CON1bits 003BFD  
                __size_of_send_lcd_data_dma 0046                             _DATAEE_ReadByte 2258  
                                     _fabsf 08AC                             __end_of_getrule C212  
                                     _flags 004E                        __size_of_check_range 0080  
                 __size_of_CRC_ReverseValue 00CE                                       _r_cal 0440  
                  __size_of_calc_model_data 045A                                _DMA2CON0bits 003BDC  
                              _DMA2CON1bits 003BDD                __end_of_get_ac_charger_relay 29F2  
                                     _fputc F560                  __size_of_send_lcd_cmd_long 0040  
                           __end_of_isalpha 1EB2                                       _fputs 0D36  
                           __end_of_isdigit 234A                             __end_of_ivln2_h F9EF  
                                     _put2d F684                          __CFG_MCLRE$EXTMCLR 000000  
                                     _srand 2188                                       _width 004A  
                                     _putch 2876                __end_of_set_ac_charger_relay 29BA  
                           __end_of_islower 22EA                             __end_of_isspace 1B8E  
                  _INT1_SetInterruptHandler 2566                             __end_of_set_dac 08AC  
                           __end_of_isupper 231A                                       pclath 003FFA  
                                     tablat 003FF5                                       ltemp0 002A  
                                     ltemp1 002E                                       ltemp2 0032  
                  __size_of_DMA1_Initialize 006A                                       plusw0 003FEB  
                                     plusw1 003FE3                                       plusw2 003FDB  
                                     ttemp0 002A                                       ttemp1 002D  
                                     ttemp2 0030                                       ttemp3 0033  
                                     ttemp5 002B                                       ttemp6 002E  
                                     ttemp7 0032                                       status 003FD8  
       __end_of_UART1_SetRxInterruptHandler 24EE                 _UART1_SetRxInterruptHandler 24C6  
                                     wtemp0 002A                                       wtemp1 002C  
                                     wtemp2 002E                                       wtemp3 0030  
                                     wtemp4 0032                                       wtemp5 0034  
                                     wtemp8 002B                             __end_of_sprintf FBEC  
                           __end_of_tolower 1238                             __end_of_strncmp D220  
                           __end_of_toupper 11B4                   __size_of_DMA1_DMADCNT_ISR 000A  
                 __end_of_UART1_rx_vect_isr 2630                    __size_of_SPI1_Initialize 0016  
                   __end_of_update_cal_data 1B3C                             _TMR5_Initialize 1D0C  
                     __end_of_ringBufS_init 244E                             __initialization FBEC  
                         _UART2_rx_vect_isr 2658                               ___localtime_r C94C  
                              __end_of_cp_h F9F7                                __end_of_cp_l F9F3  
                              __end_of_atoi C706                                __end_of_ctoa 1130  
                              __end_of_main 16BA                                __end_of_dtoa 906C  
                              __end_of_nanf 191A                                __end_of_time 19D8  
                              __end_of_spin F9DF                                __end_of_stoa BD12  
                              __end_of_utoa AEBA                                __end_of_xtoa A15A  
                            __CFG_SAFEN$OFF 000000                          ?_UART2_rx_vect_isr 0001  
                   __end_of_TMR2_Initialize 28DA                       __end_of_send_lcd_data 26A4  
                  __size_of_DMA2_Initialize 005A                  __end_of_check_enter_button 151A  
                         __end_of_CRC_Start 2A7E                    _TMR5_SetInterruptHandler 2516  
                             __activetblptr 000003                   __size_of_DMA1_DMASCNT_ISR 000E  
                     _TMR3_InterruptHandler 0098                           _port_data_dma_ptr 2A1C  
                        esr_check@esr_state 00C6                         ??_UART2_rx_vect_isr 0006  
                                    INTCON0 003FD2        __size_of_UART2_SetRxInterruptHandler 0028  
                            __CFG_MVECEN$ON 000000                             _TMR6_Initialize 23FC  
                           _PWM8_Initialize 2906                            _UART1_Initialize 1CC4  
                         _UART2_tx_vect_isr 2630                          _UART2_Transmit_ISR 23D0  
                                    _ADACCU 003EEA                                      _ADACQH 003EF4  
                                    _ADACQL 003EF3                                      _ADCON0 003EF8  
                                    _ADCON1 003EF9                                      _ADCON2 003EFA  
                                    _ADCON3 003EFB                              _start_adc_scan 17F2  
                                    _ADLTHH 003EDF                                      STR_100 FFDE  
                                    _ADLTHL 003EDE                                      STR_101 FFE6  
                                    STR_110 FFF3                                      STR_120 FFF6  
                                    STR_104 FFED                                      STR_113 FFF0  
                                    STR_106 FFED                                      STR_115 FFF0  
                                    STR_123 FFF9                                      STR_108 FFF3  
                                    STR_132 FD27                                      STR_125 FFF9  
                                    STR_133 FA76                                      STR_118 FFF6  
                                    STR_127 FFEA                                      STR_129 FFEA  
                                    _ADPREH 003EF7                                      _ADPREL 003EF6  
                                    _DMA1PR 0039F3                                      _DMA2PR 0039F4  
                                    _ADSTAT 003EFC                                      _ADUTHH 003EE1  
                                    _ADUTHL 003EE0                          _PWM8_LoadDutyValue 1EB2  
                                    _ANSELA 003A40                                      _ANSELB 003A50  
                                    _ANSELC 003A60                                      _ANSELD 003A70  
                                    _ANSELE 003A80                                      _ANSELF 003A90  
                        ?_UART2_tx_vect_isr 0001                                      _U1CON0 003DF2  
                                    _U1CON1 003DF3                                      _U1CON2 003DF4  
                                    _T3GATE 003FA8                                      _U1BRGH 003DF6  
                                    _U1FIFO 003DF7                                      _T3GCON 003FA7  
                                    _U2CON0 003DDA                                      _U2CON1 003DDB  
                                    _U1BRGL 003DF5                                      _U2CON2 003DDC  
                                    _U2BRGH 003DDE                                      _U2FIFO 003DDF  
                                    _U2BRGL 003DDD                                      _T5GATE 003F9C  
                                    _T5GCON 003F9B                                      _MAINPR 0039F2  
                                    _RC3PPS 003A13                                      _RD1PPS 003A19  
                                    i1l1021 DCCA                                      _RB6PPS 003A0E  
                                    i1l1209 EBAE                        _start_switch_handler 27BE  
                                    _RC5PPS 003A15                                      _ODCONA 003A42  
                                    _ODCONB 003A52                                      _ODCONC 003A62  
                                    _RC6PPS 003A16                                      _ODCOND 003A72  
                                    _ODCONE 003A82                                      _ODCONF 003A92  
                   __end_of_TMR3_Initialize 1D9C                              __CFG_WDTCCS$SC 000000  
                                    _FVRCON 003EC1                            _mode_lamp_bright 29D6  
                                    _SCANPR 0039F7                                      _IVTADH 00389E  
                                    _IVTADL 00389D                                      _IVTADU 00389F  
              __size_of_eaDogM_WriteCommand 000E                                      _OSCFRQ 0039DF  
                                    _NVMDAT 0039E3                        __size_of_hid_display 021C  
                          __end_of___xxtofl D852       __end_of_ADCC_DischargeSampleCapacitor 2A5A  
    __size_of_ADCC_DischargeSampleCapacitor 0008               _ADCC_DischargeSampleCapacitor 2A52  
                  __end_of_send_lcd_cmd_dma 283A                             _TMR3_WriteTimer 1FF4  
                       ??_UART2_tx_vect_isr 0006                   __end_of_UART2_rx_vect_isr 2680  
                __size_of_SPI1_Exchange8bit 001E                      __size_of_DMA1_DMAA_ISR 000A  
                   __size_of___secs_to_zone 08A2                              __CFG_XINST$OFF 000000  
                         _CLKREF_Initialize 2A12                            _UART2_Initialize 191A  
                                    _WaitMs 2152                             _conv_raw_result 8730  
                              _CCPTMRS1bits 003F5F        __size_of_ADCC_SetADIInterruptHandler 0028  
                          __end_of_do_tzset BF92                                      ___flge E982  
                                    ___fleq 0504                                      ___lmul 028C  
                                    ___omul EDA6                           _ADCC_ThresholdISR 15F0  
                            __CFG_STVREN$ON 000000                                      _crcObj 00E2  
                            _ringBufS_flush 0EF2                                      _efgtoa 16BA  
                                    _getoff CDD0                                      _getint FED0  
                                    _floorf A4CE                           dac_spi_control@S0 00CB  
                         dac_spi_control@S1 00CA                           dac_spi_control@S2 00C9  
                         dac_spi_control@SB 00C7                           dac_spi_control@SC 00C8  
                        ?_ADCC_ThresholdISR 0001                                      _memset B1B6  
                                    _pclock 00DA                        __size_of_help_button 0038  
                                    clear_0 FC5E                                      clear_1 FC72  
                                    clear_2 FC84                                      clear_3 FC90  
                                    clear_4 FC9C                                      clear_5 FCA8  
                                    clear_6 FCB4                                      clear_7 FCC0  
                                    clear_8 FCCC                                      _t_mbmc 00BC  
                 __end_of_port_data_dma_ptr 2A26                      __size_of_read_cal_data 01CA  
                                    _printf 1856                          _eaDogM_WriteString 0AB0  
                   __end_of_DATAEE_ReadByte 228A                                      _strcpy 0362  
                                 ?_ADCC_ISR 0001                                      _strlen 0BFA  
                        __size_of_TimerDone 0028                                __pdataBIGRAM 06FF  
                           _ADCC_Initialize 1584                              _PMD_Initialize 2932  
                __size_of_update_adc_result 003A                   __end_of_UART2_tx_vect_isr 2658  
                          __end_of_set_time 2152                                      lltemp0 002A  
                                    lltemp1 0032                                      lltemp2 003A  
                                    lltemp3 0042                         ??_ADCC_ThresholdISR 0001  
                    __end_of_start_adc_scan 1856                                __mediumconst F7AA  
                                    preinc2 003FDC                      __size_of_init_port_dma 0030  
                                    tblptrh 003FF7                                      tblptrl 003FF6  
                                    tblptru 003FF8                            __end_of_wdtdelay 1A8C  
                          __end_of_spinners FED0                            __end_of_vfprintf 0A06  
                                _StartTimer 1F74                          __size_of___asfladd 0078  
                               localtime@tm 03DF               __size_of_INTERRUPT_Initialize 0066  
                   __end_of_TMR5_Initialize 1D54                           _SYSTEM_Initialize 1BE0  
                                ___daylight 00B8                                  __accesstop 0060  
                   __end_of__initialization FCDE                                   ?_INT0_ISR 0001  
                                 ?_INT1_ISR 0001                        __end_of_display_help 2A6A  
                      __end_of_display_info 2A62                   __end_of_CLKREF_Initialize 2A1C  
                             ___rparam_used 000001                  __size_of_UART1_rx_vect_isr 0028  
                           _TMR5_WriteTimer 1FB4                       _set_temp_display_help 299A  
                          _clear_hid_pflags 16C2                       __end_of_TMR3_CallBack 2710  
                 __end_of_ADCC_ThresholdISR 165A                       __end_of_set_hist_flag 2A78  
                        __size_of_calc_bsoc 0A6E                      __end_of_ringBufS_flush 0F84  
                            __pcstackCOMRAM 0001                                  ___inthi_sp 132C  
                                ___intlo_sp 1996                                __pidataBANK1 0B56  
                              __pidataBANK2 05C8                               __end_of___gmt F9EB  
               __size_of_send_port_data_dma 0052                               __end_of_fabsf 095A  
                                 ?_TMR3_ISR 0001                                   ?_TMR5_ISR 0001  
                                 ?_TMR6_ISR 0001                            _DATAEE_WriteByte 165A  
                            ivt0x8_undefint 00AC                               __end_of_fputc F684  
                             __end_of_fputs 0DCE                        _get_ac_charger_relay 29E4  
                             __end_of_put2d F79E                               __end_of_srand 21BC  
                     __end_of_TMR5_CallBack 26EC                               __end_of_putch 2890  
                      _set_ac_charger_relay 29AA                     __end_of_PWM8_Initialize 291C  
                   __end_of_TMR6_Initialize 2426                           _adc_int_t_handler 1238  
                    __end_of_PMD_Initialize 2946                                  __end_of_bp F9E7  
                                ___timezone 0070                                  ??_ADCC_ISR 0001  
                     __end_of_TMR6_CallBack 2758                 __size_of_EXT_INT_Initialize 0034  
                  calc_bsoc@log_update_wait 0050                      __size_of_calc_ror_data 0186  
                             _DMA1_DMAA_ISR 2A34                       TMR3_ISR@CountCallBack 00BE  
                            _clear_adc_scan 2A7E                          __size_of_hid_input 0138  
                        __end_of_CRC_IsBusy 299A                      __size_of_mode_lamp_dim 0018  
                          time@current_time 00D2                            _CRC_ReverseValue 0436  
                  _UART2_RxInterruptHandler 00AD                   __end_of_SYSTEM_Initialize 1C2E  
                           __CFG_PR1WAY$OFF 000000                             __CFG_IVT1WAY$ON 000000  
                   __end_of_TMR3_WriteTimer 2034                                  __pbssBANK0 0060  
                                __pbssBANK1 01A4                                  __pbssBANK2 02BC  
                                __pbssBANK3 0300                                  __pbssBANK4 0400  
                                __pbssBANK5 0500                                  __pbssBANK6 0600  
                  __end_of_update_hist_data 13B6                                  _check_help D43C  
                             _read_cal_data D852                     __end_of_conv_raw_result 8BEC  
                        __size_of_esr_check 02D8                       _INT0_InterruptHandler 00B3  
                                ??_INT0_ISR 0001                                  ??_INT1_ISR 0007  
                     __end_of_days_in_month 17F2                           __end_of_TimerDone 2476  
                          _DMA1_DMADCNT_ISR 2A28                             _convert_dac_raw F79E  
                        __size_of_init_bsoc 0246                  __size_of_UART2_rx_vect_isr 0028  
                                   IVTBASEH 003FD6                                     IVTBASEL 003FD5  
                                   IVTBASEU 003FD7                          __size_of_lp_filter 01BC  
                        __size_of_localtime 0016                               _init_port_dma 228A  
                     __end_of_wait_lcd_done 29D6                    __end_of_cal_current_zero 0E60  
          __end_of_TMR3_SetInterruptHandler 2566                             __CFG_PPS1WAY$ON 000000  
          __end_of_TMR6_SetInterruptHandler 2516                                  ??_TMR3_ISR 00E5  
                   __end_of_ADCC_Initialize 15EE                                  ??_TMR5_ISR 000B  
                 __end_of_adc_int_t_handler 12BA                                  ??_TMR6_ISR 0006  
                         __end_of___asfladd 14A8                                     _ADFLTRH 003EE7  
                                   _ADFLTRL 003EE6                                     _DMA1DSA 003BF0  
                                   _DMA2DSA 003BD0                                     _DMA1DSZ 003BEE  
                                   _DMA2DSZ 003BCE                                     _DMA1SSA 003BF9  
                                   _DMA2SSA 003BD9                          __size_of_set_dac_a 0034  
                        __size_of_set_dac_b 0034        __end_of_ADCC_SetADTIInterruptHandler 25DE  
     __size_of_ADCC_SetADTIInterruptHandler 0028                _ADCC_SetADTIInterruptHandler 25B6  
                                   _DMA1SSZ 003BF7                                     _DMA2SSZ 003BD7  
                __size_of_port_data_dma_ptr 000A                                     _ADSTPTH 003EE5  
                                   _ADSTPTL 003EE4                                     _CRCACCH 003963  
                                   _CRCACCL 003962                     __size_of_load_hist_data 0466  
                                   _CRCDATH 003961                                     _CRCDATL 003960  
                         _UART1_Receive_ISR 279C                                     _CRCCON0 003968  
                                   _CRCCON1 003969                                     _CLKRCLK 003CE6  
                                   _CLKRCON 003CE5                      __end_of_clear_adc_scan 2A84  
                                   _CRCXORH 003967                                     _CRCXORL 003966  
                                   u1213_20 A290                              ?_DMA1_DMAA_ISR 0001  
                          _DMA1_DMASCNT_ISR 2A04                                     u1311_48 2720  
                                   _U1ERRIE 003DFA                                     u1313_28 26B4  
                        __size_of_set_vterm 001E                                     u1322_28 26D8  
                                   _U1ERRIR 003DF9                                     u1237_20 29EE  
                                   u1173_25 29B4                                     u1173_26 29B6  
                                   _U2ERRIE 003DE2                                     _U2ERRIR 003DE1  
                                   u1248_20 20EC                                     u1319_48 2744  
                                   u1248_26 20EE                                     u1283_24 F2C4  
                                   u1283_25 F2C0                                     u1277_28 F1C4  
                                   u1279_20 F1DE                                     u1279_21 F1D8  
                                   u1375_44 12A0                                     u1375_45 129A  
                         _CRC_8BitDataWrite 2946                                     _INT0PPS 003AC0  
                       __CFG_PWRTS$PWRT_OFF 000000                                     _INT1PPS 003AC1  
                                   u1671_20 4FF0                                ?_Default_ISR 0001  
                                   u1673_20 50BA                  __size_of_UART2_tx_vect_isr 0028  
                                   u1678_28 26FC                                     _U1RXPPS 003AE5  
                                   _U2RXPPS 003AE8                             _dac_spi_control 13B6  
                                   _OSCCON1 0039D9                                     _OSCCON3 0039DB  
                                   _IVTLOCK 003FD4                          __size_of_vfpfcnvrt 0FAC  
                                   _SPI1CLK 003D1C                                     _SPI1RXB 003D10  
                                   _NVMADRH 0039E1                                     _NVMADRL 0039E0  
                         __end_of_calc_bsoc 53EA                                     _SPI1TXB 003D11  
                                   _OSCTUNE 0039DE                                     _NVMCON2 0039E6  
                                   _PWM8DCH 003F61                                     _PWM8DCL 003F60  
                                   _PWM8CON 003F62                                     _SLRCONA 003A43  
                                   _SLRCONB 003A53                                     _SLRCONC 003A63  
                                   _SLRCOND 003A73                                     _SLRCONE 003A83  
                                   _SLRCONF 003A93                          __size_of_zi_read32 00F6  
                                _get_switch 2378                          __size_of_start_lcd 0006  
                   __size_of___year_to_secs 0972                     __end_of_TMR5_WriteTimer 1FF4  
                   __size_of_switch_handler 0142                          __size_of_stop_bsoc 0006  
                __end_of_set_load_relay_one 298A                  __end_of_set_load_relay_two 297A  
         __size_of_INT0_SetInterruptHandler 0028                  __size_of_CLKREF_Initialize 000A  
                             _calc_ror_data E232                              ___secs_to_zone 5D5C  
                   __size_of_DMA1_DMAOR_ISR 000A                                     __Hparam 0000  
                __size_of_ADCC_ThresholdISR 006A                               _mode_lamp_dim 28AA  
                                   __Lparam 0000                    __end_of_UART1_Initialize 1D0C  
                         __end_of_hid_input F560                             __size_of_WaitMs 0036  
                                   ___aldiv DF10                             __size_of___flge 0162  
                           __size_of___fleq 00C4                                     ___aodiv C212  
                                   ___almod E81C                                     ___fladd 6E28  
                                   ___aomod CB90                                     ___fldiv 7CA0  
                                   ___awdiv F058                                     ___flneg 1C7C  
                           __size_of___lmul 00D6                                     ___awmod F8B6  
                           __size_of___omul 015A                                     ___lbmod 0C9C  
                                   ___flmul 65FE                                     ___flsub 1E28  
                                   ___fltol E6AA                                     ___lodiv E3B8  
                                   ___lomod F2E8                   __end_of_UART1_Receive_ISR 27BE  
                           __size_of_efgtoa 1244                             __size_of_getoff 0230  
                           __size_of_getint 00F2                             __size_of_floorf 036C  
                      __end_of_init_display 028C                                     __pcinit FBEC  
                  __end_of_mode_lamp_bright 29E4                             __size_of_memset 02EC  
                  __size_of_adc_int_handler 0002                         _eaDogM_WriteCommand 29BA  
                                   __ramtop 2000                   __end_of_CRC_8BitDataWrite 2958  
                                   __ptext0 0000                                     __ptext1 133A  
                                   __ptext2 1AE6                                     __ptext3 19D8  
                                   __ptext4 27BE                                     __ptext5 2188  
                                   __ptext6 211C                                     __ptext7 2A72  
                                   __ptext8 21BC                                     __ptext9 21F0  
                         __end_of_esr_check BA54                           _UART2_Receive_ISR 27DE  
                                   _asctime 821A                             __size_of_printf 0062  
                                   _getname AEBA                             __CFG_WRTAPP$OFF 000000  
                           __size_of_strcpy 00D4                             __size_of_strlen 00A2  
                                   _getrule BF92                                     _dst_off 00B6  
                     _OSCILLATOR_Initialize 291C                                __size_of_abs 0046  
                              __size_of_pad 0114                                     us821999 C47C  
                         __end_of_init_bsoc C94C                                     _isalpha 1E6E  
                                   _isdigit 231A                                     us832999 CDBE  
                                   us809999 EEEA                                     _ivln2_h F9EB  
                                   us922999 F418                                     us917999 E522  
                                 _T3CONbits 003FA6                                     _mode_sw 00CC  
                         __end_of_lp_filter DBD8                           __end_of_localtime 28F0  
                                   _islower 22BA                                     _isspace 1B3C  
                           __CFG_WRTSAF$OFF 000000                                  _scan_trans FFC2  
                                 _T5CONbits 003F9A                                     _set_dac 07F6  
                  __end_of_UART2_Initialize 197A                                     _isupper 22EA  
                                 _CRC_Start 2A78                                  _old_tz_buf 03A4  
                __size_of_SYSTEM_Initialize 004E                                     _sprintf FAE2  
                                   _tolower 11B4                       __size_of_display_help 0008  
                                   _utctime 01D7                     __end_of_convert_dac_raw F8B6  
                     __size_of_display_info 0008                                     _strncmp D000  
                                   _toupper 1130                        end_of_initialization FCDE  
                 __size_of_convert_adc_data 00B8                                   _SCANHADRH 00397A  
                                 _SCANHADRL 003979                                   _SCANHADRU 00397B  
                                 _SCANLADRH 003977                                   _SCANLADRL 003976  
                        _check_enter_button 14A8                                   _SCANLADRU 003978  
                         __end_of_set_dac_a 2224                           __end_of_set_dac_b 21F0  
                    __end_of___secs_to_zone 65FE                                   i1u1700_20 EBA4  
       __end_of_UART2_SetRxInterruptHandler 24C6                 _UART2_SetRxInterruptHandler 249E  
                   check_day_time@day_delay 0051                                   i2u1380_48 1626  
                                 i2u1380_49 163A                           __end_of_set_vterm 2858  
                                 i2u1382_48 261C                                   i2u1384_48 2644  
                                 i2u1386_48 266C                                   i2u1378_48 23BC  
                         __end_of_vfpfcnvrt 497C                                   _SPI1TCNTL 003D12  
                                   postdec0 003FED                                     postdec1 003FE5  
                                   postdec2 003FDD                                     postinc0 003FEE  
                                   postinc1 003FE6                                     postinc2 003FDE  
                         __end_of_zi_read32 FDDA                  __size_of_adc_int_t_handler 0082  
                       __size_of_StartTimer 0040                           __end_of_start_lcd 2A90  
                 __end_of_UART2_Receive_ISR 27FE                              wdtdelay@dcount 0090  
                   __end_of_dac_spi_control 1430                 __size_of_current_sensor_cal 0474  
                     __CFG_WDTCPS$WDTCPS_31 000000                             ??_DMA1_DMAA_ISR 0007  
                     _INT1_InterruptHandler 00B0                                   _PORTBbits 003FCB  
                         __end_of_stop_bsoc 2A96                                   _PORTDbits 003FCD  
                  _TMR3_SetInterruptHandler 253E                                   _PORTFbits 003FCF  
                  _TMR6_SetInterruptHandler 24EE                                _display_help 2A62  
                     _TMR5_InterruptHandler 009B                                _display_info 2A5A  
      __size_of_UART2_SetTxInterruptHandler 0028                    __end_of_clear_hid_pflags 1728  
                         __size_of_ADCC_ISR 002C         __end_of_ADCC_SetADIInterruptHandler 2606  
               _ADCC_SetADIInterruptHandler 25DE                                  asctime@buf 03C4  
                                _update_lcd EC46                             _calc_model_data 9946  
                    __size_of_ringBufS_init 0028                            __CFG_FEXTOSC$ECH 000000  
                                _static_soc 19D8                    __end_of_DATAEE_WriteByte 16C2  
                           _DMA1_Initialize 151A                         __end_of_check_range 133A  
                                _start_bsoc 277A                    __size_of___month_to_secs 00EC  
                    __size_of_send_lcd_data 0024                             _SPI1_Initialize 28F0  
                     __end_of_get_vterm_ptr 2378                           __size_of_INT0_ISR 000E  
                         __size_of_INT1_ISR 003E                    __size_of_display_history 02DA  
                  __end_of_CRC_ReverseValue 0504                              __end_of_WaitMs 2188  
              __end_of_INTERRUPT_Initialize 178E                                  _vterm_dump E0A4  
                            __end_of___flge EAE4                              __end_of___fleq 05C8  
      __end_of_INT0_DefaultInterruptHandler 2AA2       __size_of_INT0_DefaultInterruptHandler 0002  
              _INT0_DefaultInterruptHandler 2AA0                  __size_of_UART1_Receive_ISR 0022  
                           _DMA2_Initialize 1A8C                              __end_of___lmul 0362  
                            __end_of___omul EF00                               __pidataBIGRAM A83A  
                            _load_hist_data 94E0                              __end_of_efgtoa 28FE  
                __size_of_CRC_8BitDataWrite 0012                           __size_of_TMR3_ISR 0162  
                            __end_of_getoff D000                           __size_of_TMR5_ISR 01A2  
                            __end_of_getint FFC2                           __size_of_TMR6_ISR 001A  
                       __size_of_check_help 0212                              __end_of_floorf A83A  
               __size_of_UART2_Transmit_ISR 002C                                  floorf@F524 0074  
                            __end_of_memset B4A2  __end_of___month_to_secs@secs_through_month F8AB  
        ___month_to_secs@secs_through_month F87B                              __end_of_printf 18B8  
                  __end_of_DMA1_DMADCNT_ISR 2A32                 __size_of_PWM8_LoadDutyValue 0042  
                     __end_of_INT0_CallBack 2734                              __end_of_strcpy 0436  
                            __end_of_strlen 0C9C                         start_initialization FBEC  
                   __size_of_write_cal_data 0158        __end_of_TMR5_DefaultInterruptHandler 211C  
     __size_of_TMR5_DefaultInterruptHandler 0038                _TMR5_DefaultInterruptHandler 20E4  
           __size_of_PIN_MANAGER_Initialize 0092                                 __end_of_abs 1E28  
                     __end_of_INT1_CallBack 26C8                   __size_of_set_display_info 001E  
                               __end_of_pad FAE2                        __size_of_Default_ISR 0006  
                   __size_of_CRC_Initialize 0092                              ___year_to_secs 53EA  
                      __end_of_send_lcd_cmd 1F74                              _switch_handler F1A6  
             __size_of_ADCC_StartConversion 0012                                  ivt0x8_base 0008  
                             _uart1RxBuffer 02D6                       __end_of___fpclassifyf DF10  
                             _uart2RxBuffer 0600                    __end_of_DMA1_DMASCNT_ISR 2A12  
                             _uart2TxBuffer 0400                              _DMA1_DMAOR_ISR 2A40  
                       __end_of_hid_display D43C                  __end_of_send_port_data_dma 1BE0  
                          __CFG_LPBOREN$OFF 000000                       __size_of_init_display 00EA  
               __size_of_eaDogM_WriteString 00A6             __end_of_CRC_CalculatedResultGet E6AA  
                                 _TimerDone 244E                               _ringBufS_init 2426  
                    __end_of_load_hist_data 9946                                 __pdataBANK1 0100  
                               __pdataBANK2 0200                  __size_of_UART2_Receive_ISR 0020  
                       __size_of_get_switch 002C                  __end_of_EXT_INT_Initialize 2258  
                  __size_of_update_cal_data 0056                     __end_of_calc_model_data 9DA0  
                             _send_lcd_data 2680                         __end_of_help_button 20E4  
           __end_of_eaDogM_WriteStringAtPos 0EF2                         __end_of_BVSOC_TABLE F87B  
                                 ___asfladd 1430                        calc_model_data@bcror 0088  
                               __pbssBIGRAM 0A3F                     __end_of_DMA1_Initialize 1584  
                      calc_model_data@bvror 008C                                 __pbssCOMRAM 004A  
                               _check_range 12BA            __end_of_INT0_SetInterruptHandler 25B6  
                    __end_of___year_to_secs 5D5C                               __pcstackBANK0 00E5  
                  __size_of_TMR2_Initialize 0018                      __size_of_TMR3_CallBack 0024  
                    __end_of_switch_handler F2E8                                 _CRCCON0bits 003968  
                               _CRCCON1bits 003969                      __size_of_set_hist_flag 0006  
                         __size_of___xxtofl 0204                     __end_of_SPI1_Initialize 2906  
                  _UART1_RxInterruptHandler 00A7                    _UART2_TxInterruptHandler 00AA  
                                 __end_of_T F967                            _convert_adc_data 073E  
                                 _calc_bsoc 497C                   __size_of_ringBufS_put_dma 00AA  
                              _init_display 01A2                      __end_of_DMA1_DMAOR_ISR 2A4A  
                    __size_of_TMR5_CallBack 0024                           __size_of_do_tzset 0280  
                     _TMR6_InterruptHandler 009E                          calc_ror_data@bcror 0080  
                    __size_of_TMR6_CallBack 0024                     __end_of_DMA2_Initialize 1AE6  
                        calc_ror_data@bvror 0084                      _PIN_MANAGER_Initialize 0F84  
                     __end_of___localtime_r CB90                    __size_of_TMR3_Initialize 0048  
                      __end_of_wait_lcd_set 2A8A                         __size_of_scan_trans 003C  
                             __pmediumconst F7AA                                   __ptext100 E3B8  
                                 __ptext101 D000                                   __ptext110 1C7C  
                                 __ptext102 BA54                                   __ptext111 0504  
                                 __ptext103 16BA                                   __ptext200 497C  
                                 __ptext120 0BFA                                   __ptext112 F8B6  
                                 __ptext104 11B4                                   __ptext201 1B8E  
                                 __ptext121 0D36                                   __ptext113 F058  
                                 __ptext105 22EA                                   __ptext210 2AA2  
                                 __ptext202 2A1C                                   __ptext130 2858  
                                 __ptext122 F560                                   __ptext114 8BEC  
                                 __ptext106 0362                                   __ptext211 2AA4  
                                 __ptext203 1430                                   __ptext131 28AA  
                                 __ptext123 2876                                   __ptext115 1DE2  
                                 __ptext107 A4CE                                   __ptext220 2734  
                                 __ptext212 15F0                                   __ptext204 29F4  
                                 __ptext140 E232                                   __ptext132 29D6  
                                 __ptext124 0A06                                   __ptext116 CB90  
                                 __ptext108 DD7A                                   __ptext221 1C2E  
                                 __ptext213 2608                                   __ptext205 2710  
                                 __ptext141 08AC                                   __ptext133 1EB2  
                                 __ptext125 C492                                   __ptext117 C212  
                                 __ptext109 E6AA                                   __ptext222 2A04  
                                 __ptext214 279C                                   __ptext206 2AA0  
                                 __ptext150 277A                                   __ptext142 8730  
                                 __ptext134 20AC                                   __ptext126 1B3C  
                                 __ptext118 10A8                                   __ptext223 2A28  
                                 __ptext215 2630                                   __ptext207 2A98  
                                 __ptext151 DA1C                                   __ptext143 18B8  
                                 __ptext135 244E                                   __ptext127 231A  
                                 __ptext119 F9CE                                   __ptext224 2A34  
                                 __ptext216 23D0                                   __ptext208 23A4  
                                 __ptext160 24C6                                   __ptext152 1E28  
                                 __ptext144 2758                                   __ptext136 1F74  
                                 __ptext128 283A                                   __ptext225 2A40  
                                 __ptext217 2658                                   __ptext209 1238  
                                 __ptext161 23FC                                   __ptext153 6E28  
                                 __ptext145 D64E                                   __ptext137 2A5A  
                                 __ptext129 299A                                   __ptext226 0000  
                                 __ptext218 27DE                                   __ptext170 2932  
                                 __ptext162 24EE                                   __ptext154 65FE  
                                 __ptext146 7CA0                                   __ptext138 2A62  
                                 __ptext219 2890                                   __ptext171 0F84  
                                 __ptext163 1D0C                                   __ptext155 1BE0  
                                 __ptext147 E982                                   __ptext139 14A8  
                                 __ptext180 1016                                   __ptext172 291C  
                                 __ptext164 2516                                   __ptext156 191A  
                                 __ptext148 9946                                   __ptext181 2A12  
                                 __ptext173 1728                                   __ptext165 1D54  
                                 __ptext157 2476                                   __ptext149 2A90  
                                 __ptext190 1FB4                                   __ptext182 1584  
                                 __ptext174 2A6A                                   __ptext166 253E  
                                 __ptext158 249E                                   __ptext191 26C8  
                                 __ptext183 25B6                                   __ptext175 2224  
                                 __ptext167 28C2                                   __ptext159 1CC4  
                                 __ptext192 20E4                                   __ptext184 25DE  
                                 __ptext176 2566                                   __ptext168 28F0  
                                 __ptext193 A15A                                   __ptext185 2034  
                                 __ptext177 258E                                   __ptext169 2906  
                                 __ptext194 29AA                                   __ptext186 26A4  
                                 __ptext178 1A8C                                   __ptext195 29E4  
                                 __ptext187 FFFE                                   __ptext179 151A  
                                 __ptext196 EAE4                                   __ptext188 F1A6  
                                 __ptext197 1FF4                                   __ptext189 DBD8  
                                 __ptext198 26EC                                   __ptext199 2A9E  
                         __size_of_set_time 0036                                   _hid_input F428  
                        __end_of_StartTimer 1FB4                          _set_load_relay_one 297A  
                        _set_load_relay_two 296A                           __size_of_wdtdelay 005A  
                         __size_of_spinners 00F6                           __size_of_vfprintf 00AC  
                                  _ADCC_ISR 23A4                      __CFG_BBSIZE$BBSIZE_512 000000  
                                 fabsf@F463 0078                      __size_of_days_in_month 0064  
                                  _DMA1CON0 003BFC                                    _DMA1CON1 003BFD  
                                  _DMA1AIRQ 003BFE                                    _DMA2CON0 003BDC  
                                  _DMA2CON1 003BDD                                    _DMA2AIRQ 003BDE  
                                  _DMA1SIRQ 003BFF                                    _DMA2SIRQ 003BDF  
                                 _esr_check B77C                     __size_of_get_raw_result 0022  
                            __size_of_fabsf 00AE                                   _init_bsoc C706  
                    __size_of_wait_lcd_done 000E                              __size_of_fputc 0124  
                                  _T2CLKCON 003FAE                              __size_of_fputs 0098  
                  __size_of_DATAEE_ReadByte 0032                              __size_of_put2d 011A  
                                 _lp_filter DA1C                                   _localtime 28DA  
                               _hid_display D220                              __size_of_srand 0034  
                            __size_of_putch 001A                        _INTERRUPT_Initialize 1728  
                                  _T6CLKCON 003F96               __size_of_start_switch_handler 0020  
                           ?_DMA1_DMAOR_ISR 0001                                    _INT0_ISR 29F4  
                                  _INT1_ISR 2034                                    _LATCbits 003FBC  
                                  _LATDbits 003FBD                                    _LATEbits 003FBE  
                                  _LATFbits 003FBF           __size_of_INT1_SetInterruptHandler 0028  
                                  _SCANCON0 00397C                                    _IPR1bits 003981  
                                  _IPR2bits 003982                                    _PIE1bits 003991  
                                  _IPR3bits 003983                                    _SCANTRIG 00397D  
                                  _PIE2bits 003992                                    _IPR5bits 003985  
                                  _PIE3bits 003993                                   _tickCount 02BC  
                                  _IPR6bits 003986                                    _PIE5bits 003995  
                                  _IPR8bits 003988                                    _PIE6bits 003996  
                                  _IPR9bits 003989                                    _PIE8bits 003998  
                       __CFG_BORV$VBOR_2P45 000000                                    _PIE9bits 003999  
                              _SPI1CON0bits 003D14                                _SPI1CON1bits 003D15  
                                 _set_dac_a 21F0                                   _set_dac_b 21BC  
                                 _ring_buf1 0543                                   _ring_buf2 0500  
                                  _PIR0bits 0039A0                                    _PIR1bits 0039A1  
                                  _PIR2bits 0039A2                                    _SPI1BAUD 003D19  
                                  _PIR4bits 0039A4                                    _SPI1CON0 003D14  
                                  _SPI1CON1 003D15                                    _SPI1CON2 003D16  
                             _TMR3_CallBack 26EC                                    _PIR5bits 0039A5  
                                  _PIR6bits 0039A6                                    _PIR8bits 0039A8  
                                  _PIR9bits 0039A9                    __size_of_TMR5_Initialize 0048  
                             _set_hist_flag 2A72                                   _set_vterm 283A  
                       __size_of_update_lcd 0160                                 _help_button 20AC  
                                  _TMR3_ISR EAE4                                 _BVSOC_TABLE F7AB  
                                  _TMR5_ISR DBD8                                    _TMR6_ISR 2890  
        __end_of___secs_to_tm@days_in_month F8B7                  ___secs_to_tm@days_in_month F8AB  
                                 _port_data 06FF                         __size_of_static_soc 005A  
                                 _vfpfcnvrt 39D0                                _SPI1INTFbits 003D1A  
                       __size_of_start_bsoc 0022                               _TMR5_CallBack 26C8  
                                _ADCON0bits 003EF8                                   _zi_read32 FCE4  
                        __end_of_check_help D64E                                   _start_lcd 2A8A  
                   __size_of_FVR_Initialize 0008                   __size_of_send_lcd_cmd_dma 001E  
                             _TMR6_CallBack 2734                              _write_cal_data EF00  
                     __size_of_send_lcd_cmd 0040           __size_of_TMR5_SetInterruptHandler 0028  
                                 _stop_bsoc 2A90                            _set_display_info 2858  
                  __size_of_PWM8_Initialize 0016                    __size_of_TMR6_Initialize 002A  
                            _CRC_Initialize 1016                                 _INTCON0bits 003FD2  
                                 copy_data0 FC00                                   copy_data1 FC26  
                                 copy_data2 FC48            __size_of_CRC_CalculatedResultGet 0172  
                  _INT0_SetInterruptHandler 258E                         __size_of_vterm_dump 018E  
       __end_of_UART2_SetTxInterruptHandler 249E                 _UART2_SetTxInterruptHandler 2476  
                             _days_in_month 178E                                _uart1RxCount 00D0  
                              _uart2RxCount 00CD                                    __Hrparam 0000  
          __size_of_eaDogM_WriteStringAtPos 0092                     __CFG_RSTOSC$EXTOSC_4PLL 000000  
                  __size_of_TMR3_WriteTimer 0040                                    __Lrparam 0000  
                   __size_of_check_adc_scan 0008                          __CFG_BOREN$SBORDIS 000000  
                __end_of_current_sensor_cal 94E0                    __size_of_conv_raw_result 04BC  
                             _wait_lcd_done 29C8                                _send_lcd_cmd 1F34  
                          __size_of___aldiv 0194                            __size_of___aodiv 0280  
                          __size_of___almod 0166                            __size_of___fladd 07BC  
             __size_of_get_ac_charger_relay 000E                            __size_of___aomod 0240  
                           _adc_int_handler 2AA4                            __size_of___fldiv 057A  
                          __size_of___awdiv 014E                            __size_of___flneg 0048  
                          __size_of___awmod 0118                            __size_of___lbmod 009A  
                          __size_of___flmul 082A                            __size_of___flsub 0046  
                          __size_of___fltol 0172                            __size_of___lodiv 0180  
                          __size_of___lomod 0140               __size_of_set_ac_charger_relay 0010  
                        __end_of_get_switch 23A4                        __end_of_rule_to_secs 7CA0  
                   __size_of_check_day_time 0374                      __end_of_write_cal_data F058  
                     __end_of_DMA1_DMAA_ISR 2A3E                          ___fpclassifyf@F463 007C  
      __size_of_UART1_SetRxInterruptHandler 0028                            __size_of_asctime 0516  
                                  ___tzname 006C                            __size_of_getname 02FC  
                           lp_filter@smooth 0300                                    ___xxtofl D64E  
                    __end_of_CRC_Initialize 10A8                           ?_DMA1_DMADCNT_ISR 0001  
                          __size_of_getrule 0280                 __size_of_check_enter_button 0072  
                  __size_of_ADCC_Initialize 006A                 __end_of_eaDogM_WriteCommand 29C8  
                          __size_of_isalpha 0044                            __size_of_isdigit 0030  
                                  __pivt0x8 0008                            __size_of_islower 0030  
                          __size_of_isspace 0052                          ??_DMA1_DMADCNT_ISR 0007  
                          __size_of_set_dac 00B6                                    __ptext10 F79E  
                                  __ptext11 07F6                                    __ptext20 1F34  
                                  __ptext12 13B6                                    __ptext21 1A32  
                                  __ptext13 D852                                    __ptext30 2A4A  
                                  __ptext22 27FE                                    __ptext14 2258  
                                  __ptext31 296A                                    __ptext23 2426  
                                  __ptext15 94E0                                    __ptext40 FCE4  
                                  __ptext32 297A                                    __ptext24 C706  
                                  __ptext16 228A                                    __ptext41 75E4  
                                  __ptext33 29BA                                    __ptext25 0684  
                                  __ptext17 01A2                                    __ptext50 28FE  
                                  __ptext42 178E                                    __ptext34 B4A2  
                                  __ptext26 D220                                    __ptext18 2680  
                                  __ptext51 EDA6                                    __ptext43 53EA  
                                  __ptext35 197A                                    __ptext27 F428  
                                  __ptext19 1EF4                                    __ptext60 165A  
                                  __ptext52 028C                                    __ptext44 00B6  
                                  __ptext36 28DA                                    __ptext28 B77C  
                                  __ptext61 2A78                                    __ptext53 E81C  
                                  __ptext45 BD12                                    __ptext37 C94C  
                                  __ptext29 2072                                    __ptext70 2378  
                                  __ptext62 298A                                    __ptext54 DF10  
                                  __ptext46 BF92                                    __ptext38 5D5C  
                                  __ptext71 2A7E                                    __ptext63 E538  
                                  __ptext55 821A                                    __ptext47 CDD0  
                                  __ptext39 FFC2                                    __ptext80 2152  
                                  __ptext72 0DCE                                    __ptext64 0436  
                                  __ptext56 F684                                    __ptext48 FED0  
                                  __ptext81 EC46                                    __ptext73 12BA  
                                  __ptext65 2946                                    __ptext57 0C9C  
                                  __ptext49 AEBA                                    __ptext90 B1B6  
                                  __ptext82 0E60                                    __ptext74 073E  
                                  __ptext66 17F2                                    __ptext58 906C  
                                  __ptext91 1856                                    __ptext83 281C  
                                  __ptext75 16C2                                    __ptext67 2958  
                                  __ptext59 EF00                                    __ptext92 095A  
                                  __ptext84 29C8                                    __ptext76 D43C  
                                  __ptext68 2A52                                    __ptext93 39D0  
                                  __ptext85 1D9C                                    __ptext77 E0A4  
                                  __ptext69 FDDA                                    __ptext94 9DA0  
                                  __ptext86 0AB0                                    __ptext78 FAE2  
                                  __ptext95 1130                                    __ptext87 2A84  
                                  __ptext79 234A                                    __ptext96 22BA  
                                  __ptext88 2A8A                                    __ptext97 1E6E  
                                  __ptext89 0EF2                                    __ptext98 AB7A  
                                  __ptext99 F2E8                            __size_of_isupper 0030  
                                  _do_tzset BD12                       __end_of_read_cal_data DA1C  
                          __size_of_sprintf 010A                            __size_of_tolower 0084  
                                  us1158999 19CA                                    us1523999 BA66  
                                  us1612999 7C8A                                    us1454999 8C06  
                                  us1535999 ABE0                            __size_of_strncmp 0220  
                          __size_of_toupper 0084                                    us1544999 9E20  
                          _ringBufS_put_dma 0A06                                    _dst_name 01EF  
                      __end_of_Volts_to_SOC 073E                               __size_of_atoi 0274  
                             __size_of_ctoa 0088                               __size_of_main 16BA  
                             __size_of_dtoa 0480                               __size_of_nanf 0062  
                     __size_of_wait_lcd_set 0006                               __size_of_time 005E  
                             __size_of_stoa 02BE                               __size_of_utoa 0340  
                             __size_of_xtoa 03BA                         dac_spi_control@init 0052  
                                _CRC_IsBusy 298A                        __CFG_WDTCWS$WDTCWS_7 000000  
                         ?_DMA1_DMASCNT_ISR 0001                       __end_of_init_port_dma 22BA  
                               _IVTLOCKbits 003FD4                        __end_of___secs_to_tm 39D0  
                  __size_of_TMR5_WriteTimer 0040                                    _set_time 211C  
                 _ADCC_ADI_InterruptHandler 00A4                                   stoa@F1166 0200  
                        ??_DMA1_DMASCNT_ISR 0007                __end_of_ADCC_StartConversion 296A  
                        __end_of_scan_trans FFFE                                    _spi_link 0060  
                                  _std_name 01F6                                    _wdtdelay 1A32  
                __end_of_UART2_Transmit_ISR 23FC                                    _spinners FDDA  
                                  _vfprintf 095A                    __end_of_convert_adc_data 07F6  
                 __size_of_update_hist_data 007C                  __end_of_PWM8_LoadDutyValue 1EF4  
      __end_of_TMR3_DefaultInterruptHandler 2AA0       __size_of_TMR3_DefaultInterruptHandler 0002  
              _TMR3_DefaultInterruptHandler 2A9E        __end_of_INT1_DefaultInterruptHandler 0000  
     __size_of_INT1_DefaultInterruptHandler 0002                _INT1_DefaultInterruptHandler FFFE  
                        _send_port_data_dma 1B8E                               ??_Default_ISR 0001  
                               _uart1RxHead 0057                      __size_of_get_vterm_ptr 002E  
                               _uart2RxHead 0054                                 _uart1RxTail 00D1  
                            _get_raw_result 2758                                 _NVMCON1bits 0039E5  
                               _uart2TxHead 00CF                                 _uart2RxTail 00CE  
                                 spinners@s 01CD                                 _uart2TxTail 0056  
                 __size_of_cal_current_zero 0092                                _wait_lcd_set 2A84  
                        _EXT_INT_Initialize 2224        __end_of_TMR6_DefaultInterruptHandler 1C7C  
     __size_of_TMR6_DefaultInterruptHandler 004E                _TMR6_DefaultInterruptHandler 1C2E  
                         _send_lcd_data_dma 1D9C        __end_of_ADCC_DefaultInterruptHandler 2AA4  
     __size_of_ADCC_DefaultInterruptHandler 0002                _ADCC_DefaultInterruptHandler 2AA2  
                                  intlevel1 0000                                    intlevel2 0000  
                           ___month_to_secs 00B6                           _send_lcd_cmd_long 1EF4  
            __size_of_set_temp_display_help 0010               __end_of_set_temp_display_help 29AA  
                     __end_of_calc_ror_data E3B8                           __CFG_CLKOUTEN$OFF 000000  
                __end_of_eaDogM_WriteString 0B56                       __end_of_mode_lamp_dim 28C2  
                   __end_of_adc_int_handler 2AA6                    __size_of_convert_dac_raw 0118  
                           _display_history B4A2                      __size_of_INT0_CallBack 0024  
                                _SPI1SCKPPS 003ADE                                  _SPI1SDIPPS 003ADF  
                    __size_of_INT1_CallBack 0024                          __end_of_update_lcd EDA6  
                    _uart2TxBufferRemaining 0055                          __end_of_static_soc 1A32  
                        __end_of_start_bsoc 279C                              _FVR_Initialize 2A6A  
                    __end_of_get_raw_result 277A                            _send_lcd_cmd_dma 281C  
                    __size_of___fpclassifyf 0196                       TMR5_ISR@CountCallBack 00C2  
          __end_of_INT1_SetInterruptHandler 258E                   __size_of_UART1_Initialize 0048  
                  __size_of_dac_spi_control 007A                   __end_of_send_lcd_data_dma 1DE2  
                          ??_DMA1_DMAOR_ISR 0007                     _CRC_CalculatedResultGet E538  
                 __end_of_send_lcd_cmd_long 1F34                     __size_of_start_adc_scan 0064  
                       __end_of_Default_ISR 2A9E              __end_of_PIN_MANAGER_Initialize 1016  
                 __size_of_mode_lamp_bright 000E                          __end_of_vterm_dump E232  
                   _eaDogM_WriteStringAtPos 0E60                               _get_vterm_ptr 234A  
                            _check_adc_scan 2A4A                   __size_of_UART2_Initialize 0060  
                     __size_of_rule_to_secs 06BC  
